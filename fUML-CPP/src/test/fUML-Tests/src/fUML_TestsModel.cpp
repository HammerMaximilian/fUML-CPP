/*
 * fUML_TestsModel.cpp
 * 
 * Auto-generated file
 */

#include "fUML_TestsModel.h"

#include <fuml/syntax/values/LiteralReal.h>
#include <fuml/syntax/commonbehavior/CallEvent.h>
#include <fuml/syntax/values/LiteralBoolean.h>
#include <fuml/syntax/actions/ReadStructuralFeatureAction.h>
#include <fuml/syntax/classification/Generalization.h>
#include <fuml/syntax/structuredclassifiers/Class_.h>
#include <fuml/syntax/values/LiteralInteger.h>
#include <fuml/syntax/actions/ValueSpecificationAction.h>
#include <fuml/syntax/commonbehavior/Trigger.h>
#include <fuml/syntax/actions/ReplyAction.h>
#include <fuml/syntax/activities/MergeNode.h>
#include <fuml/syntax/activities/JoinNode.h>
#include <fuml/syntax/actions/UnmarshallAction.h>
#include <fuml/syntax/activities/ControlFlow.h>
#include <fuml/syntax/actions/CreateObjectAction.h>
#include <fuml/syntax/actions/RemoveStructuralFeatureValueAction.h>
#include <utils/library/FoundationalModelLibraryModel.h>
#include <fuml/syntax/actions/DestroyObjectAction.h>
#include <fuml/syntax/activities/DataStoreNode.h>
#include <fuml/syntax/activities/ForkNode.h>
#include <fuml/syntax/actions/SendSignalAction.h>
#include <fuml/syntax/actions/ReclassifyObjectAction.h>
#include <fuml/syntax/actions/StructuredActivityNode.h>
#include <fuml/syntax/actions/CallOperationAction.h>
#include <fuml/syntax/actions/TestIdentityAction.h>
#include <fuml/syntax/activities/ActivityFinalNode.h>
#include <fuml/syntax/activities/InitialNode.h>
#include <fuml/syntax/structuredclassifiers/Association.h>
#include <fuml/syntax/commonbehavior/FunctionBehavior.h>
#include <fuml/syntax/classification/Property.h>
#include <fuml/syntax/actions/AddStructuralFeatureValueAction.h>
#include <fuml/syntax/values/LiteralString.h>
#include <fuml/syntax/actions/AcceptEventAction.h>
#include <fuml/syntax/classification/Parameter.h>
#include <fuml/syntax/activities/ActivityParameterNode.h>
#include <fuml/syntax/values/LiteralUnlimitedNatural.h>
#include <utils/primitivetypes/PrimitiveTypesModel.h>
#include <fuml/syntax/commonstructure/PackageImport.h>
#include <fuml/syntax/commonbehavior/SignalEvent.h>
#include <fuml/syntax/actions/LinkEndData.h>
#include <fuml/syntax/actions/CallBehaviorAction.h>
#include <fuml/syntax/actions/OutputPin.h>
#include <fuml/syntax/simpleclassifiers/PrimitiveType.h>
#include <fuml/syntax/actions/InputPin.h>
#include <fuml/syntax/activities/Activity.h>
#include <fuml/syntax/actions/AcceptCallAction.h>
#include <fuml/syntax/activities/DecisionNode.h>
#include <fuml/syntax/actions/StartObjectBehaviorAction.h>
#include <fuml/syntax/activities/CentralBufferNode.h>
#include <fuml/syntax/classification/Operation.h>
#include <fuml/syntax/actions/ReadLinkAction.h>
#include <fuml/syntax/simpleclassifiers/Signal.h>
#include <fuml/syntax/actions/ReadIsClassifiedObjectAction.h>
#include <fuml/syntax/activities/ObjectFlow.h>
#include <fuml/syntax/actions/ReadSelfAction.h>
#include <fuml/syntax/packages/Package.h>
#include <fuml/syntax/actions/ReadExtentAction.h>


/*
 *	TODO: Generate includes for metaclasses
 */

/* Start of user code : User-defined includes and using directives
 * This section may be used for includes and using directives.
 * It will not be overwritten by future generation processes.
 */

/*
 * End of user code
 */

using namespace fUML_Tests;
using namespace fuml::primitivetypes;
using namespace fuml::library;

/* Start of user code : User-defined members
 * This section may be used for user-defined members,
 * for exmaple implementations of user-defined member functions
 * or definition of static members.
 * It will not be overwritten by future generation processes.
 */

/*
 * End of user code
 */

fUML_TestsModel::fUML_TestsModel()
{
	/* Start of user code : Additional model initializations
 	 * This section may be used to do any additional model initialization,
	 * for example initializing user-defined members.
 	 * It will not be overwritten by future generation processes.
 	 */

	/*
 	 * End of user code
 	 */
}

fUML_TestsModel::~fUML_TestsModel()
{
	/* Start of user code : Additional model cleanup
 	 * This section may be used to do any additional model cleanup,
	 * for example freeing memory for user-defined members.
 	 * It will not be overwritten by future generation processes.
 	 */

	/*
 	 * End of user code
 	 */
}

const std::shared_ptr<fUML_TestsModel>& fUML_TestsModel::Instance()
{
	static std::shared_ptr<fUML_TestsModel> instance = nullptr;

	if(!instance)
	{
		instance.reset(new fUML_TestsModel());
		instance->initializeInMemoryModel();
	}

	return instance;
}

void fUML_TestsModel::initializeInMemoryModel()
{
	// Create public members
	/*
	 * Model fUML_Tests
	 */
	fUML_Tests.reset(new Package());
	this->addToElementRepository("fUML_Tests", fUML_Tests);
		fUML_Tests_ForkMerge.reset(new Activity());
		this->addToElementRepository("ForkMerge", fUML_Tests_ForkMerge);
			fUML_Tests_ForkMerge_ObjectFlow0.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow0", fUML_Tests_ForkMerge_ObjectFlow0);
				fUML_Tests_ForkMerge_ObjectFlow0_LiteralInteger1.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1", fUML_Tests_ForkMerge_ObjectFlow0_LiteralInteger1);
			fUML_Tests_ForkMerge_MergeNode.reset(new MergeNode());
			this->addToElementRepository("MergeNode", fUML_Tests_ForkMerge_MergeNode);
			fUML_Tests_ForkMerge_ControlFlow2.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow2", fUML_Tests_ForkMerge_ControlFlow2);
				fUML_Tests_ForkMerge_ControlFlow2_LiteralInteger3.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger3", fUML_Tests_ForkMerge_ControlFlow2_LiteralInteger3);
			fUML_Tests_ForkMerge_ControlFlow4.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow4", fUML_Tests_ForkMerge_ControlFlow4);
				fUML_Tests_ForkMerge_ControlFlow4_LiteralInteger5.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger5", fUML_Tests_ForkMerge_ControlFlow4_LiteralInteger5);
			fUML_Tests_ForkMerge_ForkNode.reset(new ForkNode());
			this->addToElementRepository("ForkNode", fUML_Tests_ForkMerge_ForkNode);
			fUML_Tests_ForkMerge_OutputNode.reset(new ActivityParameterNode());
			this->addToElementRepository("OutputNode", fUML_Tests_ForkMerge_OutputNode);
			fUML_Tests_ForkMerge_InitialNode.reset(new InitialNode());
			this->addToElementRepository("InitialNode", fUML_Tests_ForkMerge_InitialNode);
			fUML_Tests_ForkMerge_output.reset(new Parameter());
			this->addToElementRepository("output", fUML_Tests_ForkMerge_output);
				fUML_Tests_ForkMerge_output_LiteralUnlimitedNatural6.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural6", fUML_Tests_ForkMerge_output_LiteralUnlimitedNatural6);
				fUML_Tests_ForkMerge_output_LiteralUnlimitedNatural7.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural7", fUML_Tests_ForkMerge_output_LiteralUnlimitedNatural7);
			fUML_Tests_ForkMerge_ControlFlow8.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow8", fUML_Tests_ForkMerge_ControlFlow8);
				fUML_Tests_ForkMerge_ControlFlow8_LiteralInteger9.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger9", fUML_Tests_ForkMerge_ControlFlow8_LiteralInteger9);
			fUML_Tests_ForkMerge_Value_0.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(0)", fUML_Tests_ForkMerge_Value_0);
				fUML_Tests_ForkMerge_Value_0_LiteralInteger10.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger10", fUML_Tests_ForkMerge_Value_0_LiteralInteger10);
				fUML_Tests_ForkMerge_Value_0_Value_0_result.reset(new OutputPin());
				this->addToElementRepository("Value(0).result", fUML_Tests_ForkMerge_Value_0_Value_0_result);
					fUML_Tests_ForkMerge_Value_0_Value_0_result_LiteralUnlimitedNatural11.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural11", fUML_Tests_ForkMerge_Value_0_Value_0_result_LiteralUnlimitedNatural11);
					fUML_Tests_ForkMerge_Value_0_Value_0_result_LiteralInteger12.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger12", fUML_Tests_ForkMerge_Value_0_Value_0_result_LiteralInteger12);
			fUML_Tests_ForkMerge_ControlFlow13.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow13", fUML_Tests_ForkMerge_ControlFlow13);
				fUML_Tests_ForkMerge_ControlFlow13_LiteralInteger14.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger14", fUML_Tests_ForkMerge_ControlFlow13_LiteralInteger14);
		fUML_Tests_OtherSignal.reset(new Signal());
		this->addToElementRepository("OtherSignal", fUML_Tests_OtherSignal);
		fUML_Tests_TestSpecializedSignalSend.reset(new Activity());
		this->addToElementRepository("TestSpecializedSignalSend", fUML_Tests_TestSpecializedSignalSend);
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow15.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow15", fUML_Tests_TestSpecializedSignalSend_ObjectFlow15);
				fUML_Tests_TestSpecializedSignalSend_ObjectFlow15_LiteralUnlimitedNatural16.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural16", fUML_Tests_TestSpecializedSignalSend_ObjectFlow15_LiteralUnlimitedNatural16);
			fUML_Tests_TestSpecializedSignalSend_InitialNode17.reset(new InitialNode());
			this->addToElementRepository("InitialNode17", fUML_Tests_TestSpecializedSignalSend_InitialNode17);
			fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver.reset(new StartObjectBehaviorAction());
			this->addToElementRepository("Start(TestSignalReceiver)", fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver);
				fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object);
					fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object_LiteralUnlimitedNatural18.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural18", fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object_LiteralUnlimitedNatural18);
					fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object_LiteralInteger19.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger19", fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object_LiteralInteger19);
			fUML_Tests_TestSpecializedSignalSend_ControlFlow20.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow20", fUML_Tests_TestSpecializedSignalSend_ControlFlow20);
				fUML_Tests_TestSpecializedSignalSend_ControlFlow20_LiteralUnlimitedNatural21.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural21", fUML_Tests_TestSpecializedSignalSend_ControlFlow20_LiteralUnlimitedNatural21);
			fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal.reset(new SendSignalAction());
			this->addToElementRepository("Send(SpecializedSignal)", fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal);
				fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target.reset(new InputPin());
				this->addToElementRepository("target", fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target);
					fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target_LiteralUnlimitedNatural22.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural22", fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target_LiteralUnlimitedNatural22);
					fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target_LiteralInteger23.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger23", fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target_LiteralInteger23);
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow24.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow24", fUML_Tests_TestSpecializedSignalSend_ObjectFlow24);
				fUML_Tests_TestSpecializedSignalSend_ObjectFlow24_LiteralUnlimitedNatural25.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural25", fUML_Tests_TestSpecializedSignalSend_ObjectFlow24_LiteralUnlimitedNatural25);
			fUML_Tests_TestSpecializedSignalSend_ActivityFinalNode26.reset(new ActivityFinalNode());
			this->addToElementRepository("ActivityFinalNode26", fUML_Tests_TestSpecializedSignalSend_ActivityFinalNode26);
			fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver.reset(new CreateObjectAction());
			this->addToElementRepository("Create(TestSignalReceiver)", fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver);
				fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result);
					fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result_LiteralUnlimitedNatural27.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural27", fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result_LiteralUnlimitedNatural27);
					fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result_LiteralInteger28.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger28", fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result_LiteralInteger28);
			fUML_Tests_TestSpecializedSignalSend_ControlFlow29.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow29", fUML_Tests_TestSpecializedSignalSend_ControlFlow29);
				fUML_Tests_TestSpecializedSignalSend_ControlFlow29_LiteralUnlimitedNatural30.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural30", fUML_Tests_TestSpecializedSignalSend_ControlFlow29_LiteralUnlimitedNatural30);
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow31.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow31", fUML_Tests_TestSpecializedSignalSend_ObjectFlow31);
				fUML_Tests_TestSpecializedSignalSend_ObjectFlow31_LiteralUnlimitedNatural32.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural32", fUML_Tests_TestSpecializedSignalSend_ObjectFlow31_LiteralUnlimitedNatural32);
			fUML_Tests_TestSpecializedSignalSend_ControlFlow33.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow33", fUML_Tests_TestSpecializedSignalSend_ControlFlow33);
				fUML_Tests_TestSpecializedSignalSend_ControlFlow33_LiteralUnlimitedNatural34.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural34", fUML_Tests_TestSpecializedSignalSend_ControlFlow33_LiteralUnlimitedNatural34);
			fUML_Tests_TestSpecializedSignalSend_ForkNode35.reset(new ForkNode());
			this->addToElementRepository("ForkNode35", fUML_Tests_TestSpecializedSignalSend_ForkNode35);
		fUML_Tests_TestClassUnmarshaller.reset(new Activity());
		this->addToElementRepository("TestClassUnmarshaller", fUML_Tests_TestClassUnmarshaller);
			fUML_Tests_TestClassUnmarshaller_ForkNode36.reset(new ForkNode());
			this->addToElementRepository("ForkNode36", fUML_Tests_TestClassUnmarshaller_ForkNode36);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow37.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow37", fUML_Tests_TestClassUnmarshaller_ObjectFlow37);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow37_LiteralUnlimitedNatural38.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural38", fUML_Tests_TestClassUnmarshaller_ObjectFlow37_LiteralUnlimitedNatural38);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow39.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow39", fUML_Tests_TestClassUnmarshaller_ObjectFlow39);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow39_LiteralUnlimitedNatural40.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural40", fUML_Tests_TestClassUnmarshaller_ObjectFlow39_LiteralUnlimitedNatural40);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow41.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow41", fUML_Tests_TestClassUnmarshaller_ObjectFlow41);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow41_LiteralUnlimitedNatural42.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural42", fUML_Tests_TestClassUnmarshaller_ObjectFlow41_LiteralUnlimitedNatural42);
			fUML_Tests_TestClassUnmarshaller_Output_x.reset(new ActivityParameterNode());
			this->addToElementRepository("Output(x)", fUML_Tests_TestClassUnmarshaller_Output_x);
			fUML_Tests_TestClassUnmarshaller_Write_y_1.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(y[1])", fUML_Tests_TestClassUnmarshaller_Write_y_1);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassUnmarshaller_Write_y_1_value);
					fUML_Tests_TestClassUnmarshaller_Write_y_1_value_LiteralInteger43.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger43", fUML_Tests_TestClassUnmarshaller_Write_y_1_value_LiteralInteger43);
					fUML_Tests_TestClassUnmarshaller_Write_y_1_value_LiteralUnlimitedNatural44.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural44", fUML_Tests_TestClassUnmarshaller_Write_y_1_value_LiteralUnlimitedNatural44);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassUnmarshaller_Write_y_1_result);
					fUML_Tests_TestClassUnmarshaller_Write_y_1_result_LiteralInteger45.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger45", fUML_Tests_TestClassUnmarshaller_Write_y_1_result_LiteralInteger45);
					fUML_Tests_TestClassUnmarshaller_Write_y_1_result_LiteralUnlimitedNatural46.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural46", fUML_Tests_TestClassUnmarshaller_Write_y_1_result_LiteralUnlimitedNatural46);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassUnmarshaller_Write_y_1_object);
					fUML_Tests_TestClassUnmarshaller_Write_y_1_object_LiteralInteger47.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger47", fUML_Tests_TestClassUnmarshaller_Write_y_1_object_LiteralInteger47);
					fUML_Tests_TestClassUnmarshaller_Write_y_1_object_LiteralUnlimitedNatural48.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural48", fUML_Tests_TestClassUnmarshaller_Write_y_1_object_LiteralUnlimitedNatural48);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_insertAt.reset(new InputPin());
				this->addToElementRepository("insertAt", fUML_Tests_TestClassUnmarshaller_Write_y_1_insertAt);
			fUML_Tests_TestClassUnmarshaller_Write_y_2.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(y[2])", fUML_Tests_TestClassUnmarshaller_Write_y_2);
				fUML_Tests_TestClassUnmarshaller_Write_y_2_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassUnmarshaller_Write_y_2_value);
					fUML_Tests_TestClassUnmarshaller_Write_y_2_value_LiteralInteger49.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger49", fUML_Tests_TestClassUnmarshaller_Write_y_2_value_LiteralInteger49);
					fUML_Tests_TestClassUnmarshaller_Write_y_2_value_LiteralUnlimitedNatural50.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural50", fUML_Tests_TestClassUnmarshaller_Write_y_2_value_LiteralUnlimitedNatural50);
				fUML_Tests_TestClassUnmarshaller_Write_y_2_insertAt.reset(new InputPin());
				this->addToElementRepository("insertAt", fUML_Tests_TestClassUnmarshaller_Write_y_2_insertAt);
				fUML_Tests_TestClassUnmarshaller_Write_y_2_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassUnmarshaller_Write_y_2_object);
					fUML_Tests_TestClassUnmarshaller_Write_y_2_object_LiteralInteger51.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger51", fUML_Tests_TestClassUnmarshaller_Write_y_2_object_LiteralInteger51);
					fUML_Tests_TestClassUnmarshaller_Write_y_2_object_LiteralUnlimitedNatural52.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural52", fUML_Tests_TestClassUnmarshaller_Write_y_2_object_LiteralUnlimitedNatural52);
				fUML_Tests_TestClassUnmarshaller_Write_y_2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassUnmarshaller_Write_y_2_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow53.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow53", fUML_Tests_TestClassUnmarshaller_ObjectFlow53);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow53_LiteralUnlimitedNatural54.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural54", fUML_Tests_TestClassUnmarshaller_ObjectFlow53_LiteralUnlimitedNatural54);
			fUML_Tests_TestClassUnmarshaller_Value_1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)", fUML_Tests_TestClassUnmarshaller_Value_1);
				fUML_Tests_TestClassUnmarshaller_Value_1_LiteralInteger55.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger55", fUML_Tests_TestClassUnmarshaller_Value_1_LiteralInteger55);
				fUML_Tests_TestClassUnmarshaller_Value_1_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassUnmarshaller_Value_1_result);
					fUML_Tests_TestClassUnmarshaller_Value_1_result_LiteralUnlimitedNatural56.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural56", fUML_Tests_TestClassUnmarshaller_Value_1_result_LiteralUnlimitedNatural56);
					fUML_Tests_TestClassUnmarshaller_Value_1_result_LiteralInteger57.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger57", fUML_Tests_TestClassUnmarshaller_Value_1_result_LiteralInteger57);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow58.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow58", fUML_Tests_TestClassUnmarshaller_ObjectFlow58);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow58_LiteralUnlimitedNatural59.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural59", fUML_Tests_TestClassUnmarshaller_ObjectFlow58_LiteralUnlimitedNatural59);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow60.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow60", fUML_Tests_TestClassUnmarshaller_ObjectFlow60);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow60_LiteralUnlimitedNatural61.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural61", fUML_Tests_TestClassUnmarshaller_ObjectFlow60_LiteralUnlimitedNatural61);
			fUML_Tests_TestClassUnmarshaller_Create_Subclass1.reset(new CreateObjectAction());
			this->addToElementRepository("Create(Subclass1)", fUML_Tests_TestClassUnmarshaller_Create_Subclass1);
				fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result);
					fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result_LiteralInteger62.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger62", fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result_LiteralInteger62);
					fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result_LiteralUnlimitedNatural63.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural63", fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result_LiteralUnlimitedNatural63);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow64.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow64", fUML_Tests_TestClassUnmarshaller_ObjectFlow64);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow64_LiteralUnlimitedNatural65.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural65", fUML_Tests_TestClassUnmarshaller_ObjectFlow64_LiteralUnlimitedNatural65);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow66.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow66", fUML_Tests_TestClassUnmarshaller_ObjectFlow66);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow66_LiteralUnlimitedNatural67.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural67", fUML_Tests_TestClassUnmarshaller_ObjectFlow66_LiteralUnlimitedNatural67);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow68.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow68", fUML_Tests_TestClassUnmarshaller_ObjectFlow68);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow68_LiteralUnlimitedNatural69.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural69", fUML_Tests_TestClassUnmarshaller_ObjectFlow68_LiteralUnlimitedNatural69);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow70.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow70", fUML_Tests_TestClassUnmarshaller_ObjectFlow70);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow70_LiteralUnlimitedNatural71.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural71", fUML_Tests_TestClassUnmarshaller_ObjectFlow70_LiteralUnlimitedNatural71);
			fUML_Tests_TestClassUnmarshaller_Write_a.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(a)", fUML_Tests_TestClassUnmarshaller_Write_a);
				fUML_Tests_TestClassUnmarshaller_Write_a_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassUnmarshaller_Write_a_result);
				fUML_Tests_TestClassUnmarshaller_Write_a_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassUnmarshaller_Write_a_object);
					fUML_Tests_TestClassUnmarshaller_Write_a_object_LiteralInteger72.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger72", fUML_Tests_TestClassUnmarshaller_Write_a_object_LiteralInteger72);
					fUML_Tests_TestClassUnmarshaller_Write_a_object_LiteralUnlimitedNatural73.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural73", fUML_Tests_TestClassUnmarshaller_Write_a_object_LiteralUnlimitedNatural73);
				fUML_Tests_TestClassUnmarshaller_Write_a_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassUnmarshaller_Write_a_value);
					fUML_Tests_TestClassUnmarshaller_Write_a_value_LiteralUnlimitedNatural74.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural74", fUML_Tests_TestClassUnmarshaller_Write_a_value_LiteralUnlimitedNatural74);
					fUML_Tests_TestClassUnmarshaller_Write_a_value_LiteralInteger75.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger75", fUML_Tests_TestClassUnmarshaller_Write_a_value_LiteralInteger75);
			fUML_Tests_TestClassUnmarshaller_Value_times.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(*)", fUML_Tests_TestClassUnmarshaller_Value_times);
				fUML_Tests_TestClassUnmarshaller_Value_times_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassUnmarshaller_Value_times_result);
				fUML_Tests_TestClassUnmarshaller_Value_times_LiteralUnlimitedNatural76.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural76", fUML_Tests_TestClassUnmarshaller_Value_times_LiteralUnlimitedNatural76);
			fUML_Tests_TestClassUnmarshaller_y.reset(new Parameter());
			this->addToElementRepository("y", fUML_Tests_TestClassUnmarshaller_y);
				fUML_Tests_TestClassUnmarshaller_y_LiteralInteger77.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger77", fUML_Tests_TestClassUnmarshaller_y_LiteralInteger77);
				fUML_Tests_TestClassUnmarshaller_y_LiteralUnlimitedNatural78.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural78", fUML_Tests_TestClassUnmarshaller_y_LiteralUnlimitedNatural78);
			fUML_Tests_TestClassUnmarshaller_x.reset(new Parameter());
			this->addToElementRepository("x", fUML_Tests_TestClassUnmarshaller_x);
				fUML_Tests_TestClassUnmarshaller_x_LiteralInteger79.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger79", fUML_Tests_TestClassUnmarshaller_x_LiteralInteger79);
				fUML_Tests_TestClassUnmarshaller_x_LiteralUnlimitedNatural80.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural80", fUML_Tests_TestClassUnmarshaller_x_LiteralUnlimitedNatural80);
			fUML_Tests_TestClassUnmarshaller_Value_0.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(0)", fUML_Tests_TestClassUnmarshaller_Value_0);
				fUML_Tests_TestClassUnmarshaller_Value_0_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassUnmarshaller_Value_0_result);
					fUML_Tests_TestClassUnmarshaller_Value_0_result_LiteralInteger81.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger81", fUML_Tests_TestClassUnmarshaller_Value_0_result_LiteralInteger81);
					fUML_Tests_TestClassUnmarshaller_Value_0_result_LiteralUnlimitedNatural82.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural82", fUML_Tests_TestClassUnmarshaller_Value_0_result_LiteralUnlimitedNatural82);
				fUML_Tests_TestClassUnmarshaller_Value_0_LiteralInteger83.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger83", fUML_Tests_TestClassUnmarshaller_Value_0_LiteralInteger83);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow84.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow84", fUML_Tests_TestClassUnmarshaller_ObjectFlow84);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow84_LiteralUnlimitedNatural85.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural85", fUML_Tests_TestClassUnmarshaller_ObjectFlow84_LiteralUnlimitedNatural85);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow86.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow86", fUML_Tests_TestClassUnmarshaller_ObjectFlow86);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow86_LiteralUnlimitedNatural87.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural87", fUML_Tests_TestClassUnmarshaller_ObjectFlow86_LiteralUnlimitedNatural87);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow88.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow88", fUML_Tests_TestClassUnmarshaller_ObjectFlow88);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow88_LiteralUnlimitedNatural89.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural89", fUML_Tests_TestClassUnmarshaller_ObjectFlow88_LiteralUnlimitedNatural89);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow90.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow90", fUML_Tests_TestClassUnmarshaller_ObjectFlow90);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow90_LiteralUnlimitedNatural91.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural91", fUML_Tests_TestClassUnmarshaller_ObjectFlow90_LiteralUnlimitedNatural91);
			fUML_Tests_TestClassUnmarshaller_Output_y.reset(new ActivityParameterNode());
			this->addToElementRepository("Output(y)", fUML_Tests_TestClassUnmarshaller_Output_y);
			fUML_Tests_TestClassUnmarshaller_Value_true.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(true)", fUML_Tests_TestClassUnmarshaller_Value_true);
				fUML_Tests_TestClassUnmarshaller_Value_true_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassUnmarshaller_Value_true_result);
					fUML_Tests_TestClassUnmarshaller_Value_true_result_LiteralUnlimitedNatural92.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural92", fUML_Tests_TestClassUnmarshaller_Value_true_result_LiteralUnlimitedNatural92);
					fUML_Tests_TestClassUnmarshaller_Value_true_result_LiteralInteger93.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger93", fUML_Tests_TestClassUnmarshaller_Value_true_result_LiteralInteger93);
				fUML_Tests_TestClassUnmarshaller_Value_true_LiteralBoolean94.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean94", fUML_Tests_TestClassUnmarshaller_Value_true_LiteralBoolean94);
			fUML_Tests_TestClassUnmarshaller_Write_x.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(x)", fUML_Tests_TestClassUnmarshaller_Write_x);
				fUML_Tests_TestClassUnmarshaller_Write_x_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassUnmarshaller_Write_x_value);
					fUML_Tests_TestClassUnmarshaller_Write_x_value_LiteralUnlimitedNatural95.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural95", fUML_Tests_TestClassUnmarshaller_Write_x_value_LiteralUnlimitedNatural95);
					fUML_Tests_TestClassUnmarshaller_Write_x_value_LiteralInteger96.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger96", fUML_Tests_TestClassUnmarshaller_Write_x_value_LiteralInteger96);
				fUML_Tests_TestClassUnmarshaller_Write_x_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassUnmarshaller_Write_x_object);
					fUML_Tests_TestClassUnmarshaller_Write_x_object_LiteralInteger97.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger97", fUML_Tests_TestClassUnmarshaller_Write_x_object_LiteralInteger97);
					fUML_Tests_TestClassUnmarshaller_Write_x_object_LiteralUnlimitedNatural98.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural98", fUML_Tests_TestClassUnmarshaller_Write_x_object_LiteralUnlimitedNatural98);
				fUML_Tests_TestClassUnmarshaller_Write_x_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassUnmarshaller_Write_x_result);
					fUML_Tests_TestClassUnmarshaller_Write_x_result_LiteralUnlimitedNatural99.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural99", fUML_Tests_TestClassUnmarshaller_Write_x_result_LiteralUnlimitedNatural99);
					fUML_Tests_TestClassUnmarshaller_Write_x_result_LiteralInteger100.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger100", fUML_Tests_TestClassUnmarshaller_Write_x_result_LiteralInteger100);
			fUML_Tests_TestClassUnmarshaller_Value_2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2)", fUML_Tests_TestClassUnmarshaller_Value_2);
				fUML_Tests_TestClassUnmarshaller_Value_2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassUnmarshaller_Value_2_result);
					fUML_Tests_TestClassUnmarshaller_Value_2_result_LiteralUnlimitedNatural101.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural101", fUML_Tests_TestClassUnmarshaller_Value_2_result_LiteralUnlimitedNatural101);
					fUML_Tests_TestClassUnmarshaller_Value_2_result_LiteralInteger102.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger102", fUML_Tests_TestClassUnmarshaller_Value_2_result_LiteralInteger102);
				fUML_Tests_TestClassUnmarshaller_Value_2_LiteralInteger103.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger103", fUML_Tests_TestClassUnmarshaller_Value_2_LiteralInteger103);
			fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass.reset(new UnmarshallAction());
			this->addToElementRepository("Unmarshall(TestClass)", fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x.reset(new OutputPin());
				this->addToElementRepository("result(x)", fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x);
					fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x_LiteralInteger104.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger104", fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x_LiteralInteger104);
					fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x_LiteralUnlimitedNatural105.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural105", fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x_LiteralUnlimitedNatural105);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y.reset(new OutputPin());
				this->addToElementRepository("result(y)", fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y);
					fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y_LiteralInteger106.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger106", fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y_LiteralInteger106);
					fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y_LiteralUnlimitedNatural107.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural107", fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y_LiteralUnlimitedNatural107);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object);
					fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object_LiteralUnlimitedNatural108.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural108", fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object_LiteralUnlimitedNatural108);
					fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object_LiteralInteger109.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger109", fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object_LiteralInteger109);
		fUML_Tests_TestCompositeObjectDestroyer.reset(new Activity());
		this->addToElementRepository("TestCompositeObjectDestroyer", fUML_Tests_TestCompositeObjectDestroyer);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2Out.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(object2Out)", fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2Out);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow110.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow110", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow110);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow110_LiteralUnlimitedNatural111.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural111", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow110_LiteralUnlimitedNatural111);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1Out.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(object1Out)", fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1Out);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow112.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow112", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow112);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow112_LiteralUnlimitedNatural113.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural113", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow112_LiteralUnlimitedNatural113);
			fUML_Tests_TestCompositeObjectDestroyer_compositeOut.reset(new Parameter());
			this->addToElementRepository("compositeOut", fUML_Tests_TestCompositeObjectDestroyer_compositeOut);
				fUML_Tests_TestCompositeObjectDestroyer_compositeOut_LiteralInteger114.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger114", fUML_Tests_TestCompositeObjectDestroyer_compositeOut_LiteralInteger114);
				fUML_Tests_TestCompositeObjectDestroyer_compositeOut_LiteralUnlimitedNatural115.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural115", fUML_Tests_TestCompositeObjectDestroyer_compositeOut_LiteralUnlimitedNatural115);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow116.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow116", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow116);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow116_LiteralUnlimitedNatural117.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural117", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow116_LiteralUnlimitedNatural117);
			fUML_Tests_TestCompositeObjectDestroyer_object1Out.reset(new Parameter());
			this->addToElementRepository("object1Out", fUML_Tests_TestCompositeObjectDestroyer_object1Out);
				fUML_Tests_TestCompositeObjectDestroyer_object1Out_LiteralInteger118.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger118", fUML_Tests_TestCompositeObjectDestroyer_object1Out_LiteralInteger118);
				fUML_Tests_TestCompositeObjectDestroyer_object1Out_LiteralUnlimitedNatural119.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural119", fUML_Tests_TestCompositeObjectDestroyer_object1Out_LiteralUnlimitedNatural119);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_assocOut.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(assocOut)", fUML_Tests_TestCompositeObjectDestroyer_Parameter_assocOut);
			fUML_Tests_TestCompositeObjectDestroyer_object1.reset(new Parameter());
			this->addToElementRepository("object1", fUML_Tests_TestCompositeObjectDestroyer_object1);
				fUML_Tests_TestCompositeObjectDestroyer_object1_LiteralInteger120.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger120", fUML_Tests_TestCompositeObjectDestroyer_object1_LiteralInteger120);
				fUML_Tests_TestCompositeObjectDestroyer_object1_LiteralUnlimitedNatural121.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural121", fUML_Tests_TestCompositeObjectDestroyer_object1_LiteralUnlimitedNatural121);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(object1)", fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_compositeOut.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(compositeOut)", fUML_Tests_TestCompositeObjectDestroyer_Parameter_compositeOut);
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode122.reset(new ForkNode());
			this->addToElementRepository("ForkNode122", fUML_Tests_TestCompositeObjectDestroyer_ForkNode122);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow123.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow123", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow123);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow123_LiteralUnlimitedNatural124.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural124", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow123_LiteralUnlimitedNatural124);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow125.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow125", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow125);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow125_LiteralUnlimitedNatural126.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural126", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow125_LiteralUnlimitedNatural126);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c2.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(c2)", fUML_Tests_TestCompositeObjectDestroyer_Write_c2);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_object.reset(new InputPin());
				this->addToElementRepository("Write(c2).object", fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_object);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_value.reset(new InputPin());
				this->addToElementRepository("Write(c2).value", fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_value);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_result.reset(new OutputPin());
				this->addToElementRepository("Write(c2).result", fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_result);
			fUML_Tests_TestCompositeObjectDestroyer_assocOut.reset(new Parameter());
			this->addToElementRepository("assocOut", fUML_Tests_TestCompositeObjectDestroyer_assocOut);
				fUML_Tests_TestCompositeObjectDestroyer_assocOut_LiteralUnlimitedNatural127.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural127", fUML_Tests_TestCompositeObjectDestroyer_assocOut_LiteralUnlimitedNatural127);
				fUML_Tests_TestCompositeObjectDestroyer_assocOut_LiteralInteger128.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger128", fUML_Tests_TestCompositeObjectDestroyer_assocOut_LiteralInteger128);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow129.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow129", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow129);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow129_LiteralUnlimitedNatural130.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural130", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow129_LiteralUnlimitedNatural130);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow131.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow131", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow131);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow131_LiteralUnlimitedNatural132.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural132", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow131_LiteralUnlimitedNatural132);
			fUML_Tests_TestCompositeObjectDestroyer_object2.reset(new Parameter());
			this->addToElementRepository("object2", fUML_Tests_TestCompositeObjectDestroyer_object2);
				fUML_Tests_TestCompositeObjectDestroyer_object2_LiteralUnlimitedNatural133.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural133", fUML_Tests_TestCompositeObjectDestroyer_object2_LiteralUnlimitedNatural133);
				fUML_Tests_TestCompositeObjectDestroyer_object2_LiteralInteger134.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger134", fUML_Tests_TestCompositeObjectDestroyer_object2_LiteralInteger134);
			fUML_Tests_TestCompositeObjectDestroyer_composite.reset(new Parameter());
			this->addToElementRepository("composite", fUML_Tests_TestCompositeObjectDestroyer_composite);
				fUML_Tests_TestCompositeObjectDestroyer_composite_LiteralInteger135.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger135", fUML_Tests_TestCompositeObjectDestroyer_composite_LiteralInteger135);
				fUML_Tests_TestCompositeObjectDestroyer_composite_LiteralUnlimitedNatural136.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural136", fUML_Tests_TestCompositeObjectDestroyer_composite_LiteralUnlimitedNatural136);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_composite.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(composite)", fUML_Tests_TestCompositeObjectDestroyer_Parameter_composite);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow137.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow137", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow137);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow137_LiteralUnlimitedNatural138.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural138", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow137_LiteralUnlimitedNatural138);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow139.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow139", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow139);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow139_LiteralUnlimitedNatural140.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural140", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow139_LiteralUnlimitedNatural140);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(object2)", fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2);
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode141.reset(new ForkNode());
			this->addToElementRepository("ForkNode141", fUML_Tests_TestCompositeObjectDestroyer_ForkNode141);
			fUML_Tests_TestCompositeObjectDestroyer_object2Out.reset(new Parameter());
			this->addToElementRepository("object2Out", fUML_Tests_TestCompositeObjectDestroyer_object2Out);
				fUML_Tests_TestCompositeObjectDestroyer_object2Out_LiteralInteger142.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger142", fUML_Tests_TestCompositeObjectDestroyer_object2Out_LiteralInteger142);
				fUML_Tests_TestCompositeObjectDestroyer_object2Out_LiteralUnlimitedNatural143.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural143", fUML_Tests_TestCompositeObjectDestroyer_object2Out_LiteralUnlimitedNatural143);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow144.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow144", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow144);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow144_LiteralUnlimitedNatural145.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural145", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow144_LiteralUnlimitedNatural145);
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode146.reset(new ForkNode());
			this->addToElementRepository("ForkNode146", fUML_Tests_TestCompositeObjectDestroyer_ForkNode146);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow147.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow147", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow147);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow147_LiteralUnlimitedNatural148.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural148", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow147_LiteralUnlimitedNatural148);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow149.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow149", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow149);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow149_LiteralUnlimitedNatural150.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural150", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow149_LiteralUnlimitedNatural150);
			fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite.reset(new DestroyObjectAction());
			this->addToElementRepository("Destroy(composite)", fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite);
				fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite_Destroy_composite_target.reset(new InputPin());
				this->addToElementRepository("Destroy(composite).target", fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite_Destroy_composite_target);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow151.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow151", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow151);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow151_LiteralUnlimitedNatural152.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural152", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow151_LiteralUnlimitedNatural152);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow153.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow153", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow153);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow153_LiteralUnlimitedNatural154.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural154", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow153_LiteralUnlimitedNatural154);
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode155.reset(new ForkNode());
			this->addToElementRepository("ForkNode155", fUML_Tests_TestCompositeObjectDestroyer_ForkNode155);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c1.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(c1)", fUML_Tests_TestCompositeObjectDestroyer_Write_c1);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_value.reset(new InputPin());
				this->addToElementRepository("Write(c1).value", fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_value);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_result.reset(new OutputPin());
				this->addToElementRepository("Write(c1).result", fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_result);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_object.reset(new InputPin());
				this->addToElementRepository("Write(c1).object", fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_object);
			fUML_Tests_TestCompositeObjectDestroyer_Read_composite.reset(new ReadLinkAction());
			this->addToElementRepository("Read(composite)", fUML_Tests_TestCompositeObjectDestroyer_Read_composite);
				fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_inputValue.reset(new InputPin());
				this->addToElementRepository("Read(Composite).inputValue", fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_inputValue);
				fUML_Tests_TestCompositeObjectDestroyer_Read_composite_LinkEndData156.reset(new LinkEndData());
				this->addToElementRepository("LinkEndData156", fUML_Tests_TestCompositeObjectDestroyer_Read_composite_LinkEndData156);
				fUML_Tests_TestCompositeObjectDestroyer_Read_composite_LinkEndData157.reset(new LinkEndData());
				this->addToElementRepository("LinkEndData157", fUML_Tests_TestCompositeObjectDestroyer_Read_composite_LinkEndData157);
				fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_iresult.reset(new OutputPin());
				this->addToElementRepository("Read(Composite).iresult", fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_iresult);
		fUML_Tests_GenerateListTestData.reset(new Activity());
		this->addToElementRepository("GenerateListTestData", fUML_Tests_GenerateListTestData);
			fUML_Tests_GenerateListTestData_ObjectFlow158.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow158", fUML_Tests_GenerateListTestData_ObjectFlow158);
				fUML_Tests_GenerateListTestData_ObjectFlow158_LiteralInteger159.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger159", fUML_Tests_GenerateListTestData_ObjectFlow158_LiteralInteger159);
			fUML_Tests_GenerateListTestData_Value_2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2)", fUML_Tests_GenerateListTestData_Value_2);
				fUML_Tests_GenerateListTestData_Value_2_LiteralInteger160.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger160", fUML_Tests_GenerateListTestData_Value_2_LiteralInteger160);
				fUML_Tests_GenerateListTestData_Value_2_Value_2_result.reset(new OutputPin());
				this->addToElementRepository("Value(2).result", fUML_Tests_GenerateListTestData_Value_2_Value_2_result);
					fUML_Tests_GenerateListTestData_Value_2_Value_2_result_LiteralInteger161.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger161", fUML_Tests_GenerateListTestData_Value_2_Value_2_result_LiteralInteger161);
					fUML_Tests_GenerateListTestData_Value_2_Value_2_result_LiteralUnlimitedNatural162.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural162", fUML_Tests_GenerateListTestData_Value_2_Value_2_result_LiteralUnlimitedNatural162);
			fUML_Tests_GenerateListTestData_ObjectFlow163.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow163", fUML_Tests_GenerateListTestData_ObjectFlow163);
				fUML_Tests_GenerateListTestData_ObjectFlow163_LiteralInteger164.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger164", fUML_Tests_GenerateListTestData_ObjectFlow163_LiteralInteger164);
			fUML_Tests_GenerateListTestData_Value_3.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(3)", fUML_Tests_GenerateListTestData_Value_3);
				fUML_Tests_GenerateListTestData_Value_3_Value_3_result.reset(new OutputPin());
				this->addToElementRepository("Value(3).result", fUML_Tests_GenerateListTestData_Value_3_Value_3_result);
					fUML_Tests_GenerateListTestData_Value_3_Value_3_result_LiteralInteger165.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger165", fUML_Tests_GenerateListTestData_Value_3_Value_3_result_LiteralInteger165);
					fUML_Tests_GenerateListTestData_Value_3_Value_3_result_LiteralUnlimitedNatural166.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural166", fUML_Tests_GenerateListTestData_Value_3_Value_3_result_LiteralUnlimitedNatural166);
				fUML_Tests_GenerateListTestData_Value_3_LiteralInteger167.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger167", fUML_Tests_GenerateListTestData_Value_3_LiteralInteger167);
			fUML_Tests_GenerateListTestData_Value_1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)", fUML_Tests_GenerateListTestData_Value_1);
				fUML_Tests_GenerateListTestData_Value_1_LiteralInteger168.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger168", fUML_Tests_GenerateListTestData_Value_1_LiteralInteger168);
				fUML_Tests_GenerateListTestData_Value_1_Value_1_result.reset(new OutputPin());
				this->addToElementRepository("Value(1).result", fUML_Tests_GenerateListTestData_Value_1_Value_1_result);
					fUML_Tests_GenerateListTestData_Value_1_Value_1_result_LiteralInteger169.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger169", fUML_Tests_GenerateListTestData_Value_1_Value_1_result_LiteralInteger169);
					fUML_Tests_GenerateListTestData_Value_1_Value_1_result_LiteralUnlimitedNatural170.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural170", fUML_Tests_GenerateListTestData_Value_1_Value_1_result_LiteralUnlimitedNatural170);
			fUML_Tests_GenerateListTestData_Param_list.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(list)", fUML_Tests_GenerateListTestData_Param_list);
			fUML_Tests_GenerateListTestData_list.reset(new Parameter());
			this->addToElementRepository("list", fUML_Tests_GenerateListTestData_list);
				fUML_Tests_GenerateListTestData_list_LiteralUnlimitedNatural171.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural171", fUML_Tests_GenerateListTestData_list_LiteralUnlimitedNatural171);
				fUML_Tests_GenerateListTestData_list_LiteralUnlimitedNatural172.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural172", fUML_Tests_GenerateListTestData_list_LiteralUnlimitedNatural172);
			fUML_Tests_GenerateListTestData_ControlFlow173.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow173", fUML_Tests_GenerateListTestData_ControlFlow173);
				fUML_Tests_GenerateListTestData_ControlFlow173_LiteralInteger174.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger174", fUML_Tests_GenerateListTestData_ControlFlow173_LiteralInteger174);
			fUML_Tests_GenerateListTestData_ControlFlow175.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow175", fUML_Tests_GenerateListTestData_ControlFlow175);
				fUML_Tests_GenerateListTestData_ControlFlow175_LiteralInteger176.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger176", fUML_Tests_GenerateListTestData_ControlFlow175_LiteralInteger176);
			fUML_Tests_GenerateListTestData_ObjectFlow177.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow177", fUML_Tests_GenerateListTestData_ObjectFlow177);
				fUML_Tests_GenerateListTestData_ObjectFlow177_LiteralInteger178.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger178", fUML_Tests_GenerateListTestData_ObjectFlow177_LiteralInteger178);
		fUML_Tests_TestGeneralizationAssembly.reset(new Activity());
		this->addToElementRepository("TestGeneralizationAssembly", fUML_Tests_TestGeneralizationAssembly);
			fUML_Tests_TestGeneralizationAssembly_result.reset(new Parameter());
			this->addToElementRepository("result", fUML_Tests_TestGeneralizationAssembly_result);
			fUML_Tests_TestGeneralizationAssembly_Create_Specific.reset(new CreateObjectAction());
			this->addToElementRepository("Create(Specific)", fUML_Tests_TestGeneralizationAssembly_Create_Specific);
				fUML_Tests_TestGeneralizationAssembly_Create_Specific_CreateObjectAction_result.reset(new OutputPin());
				this->addToElementRepository("CreateObjectAction.result", fUML_Tests_TestGeneralizationAssembly_Create_Specific_CreateObjectAction_result);
			fUML_Tests_TestGeneralizationAssembly_ObjectFlow179.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow179", fUML_Tests_TestGeneralizationAssembly_ObjectFlow179);
			fUML_Tests_TestGeneralizationAssembly_ActivityParameterNode.reset(new ActivityParameterNode());
			this->addToElementRepository("ActivityParameterNode", fUML_Tests_TestGeneralizationAssembly_ActivityParameterNode);
		fUML_Tests_Subclass2.reset(new Class_());
		this->addToElementRepository("Subclass2", fUML_Tests_Subclass2);
			fUML_Tests_Subclass2_Generalization180.reset(new Generalization());
			this->addToElementRepository("Generalization180", fUML_Tests_Subclass2_Generalization180);
			fUML_Tests_Subclass2_b.reset(new Property());
			this->addToElementRepository("b", fUML_Tests_Subclass2_b);
		fUML_Tests_HelloWorld.reset(new Activity());
		this->addToElementRepository("HelloWorld", fUML_Tests_HelloWorld);
			fUML_Tests_HelloWorld_Value_Hello_World_.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(\"Hello World!\")", fUML_Tests_HelloWorld_Value_Hello_World_);
				fUML_Tests_HelloWorld_Value_Hello_World__LiteralString181.reset(new LiteralString());
				this->addToElementRepository("LiteralString181", fUML_Tests_HelloWorld_Value_Hello_World__LiteralString181);
				fUML_Tests_HelloWorld_Value_Hello_World__Value_result.reset(new OutputPin());
				this->addToElementRepository("Value.result", fUML_Tests_HelloWorld_Value_Hello_World__Value_result);
			fUML_Tests_HelloWorld_ObjectFlow182.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow182", fUML_Tests_HelloWorld_ObjectFlow182);
				fUML_Tests_HelloWorld_ObjectFlow182_LiteralInteger183.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger183", fUML_Tests_HelloWorld_ObjectFlow182_LiteralInteger183);
			fUML_Tests_HelloWorld_WriteLine.reset(new CallBehaviorAction());
			this->addToElementRepository("WriteLine", fUML_Tests_HelloWorld_WriteLine);
				fUML_Tests_HelloWorld_WriteLine_WriteLine_value.reset(new InputPin());
				this->addToElementRepository("WriteLine.value", fUML_Tests_HelloWorld_WriteLine_WriteLine_value);
				fUML_Tests_HelloWorld_WriteLine_WriteLine_errorStatus.reset(new OutputPin());
				this->addToElementRepository("WriteLine.errorStatus", fUML_Tests_HelloWorld_WriteLine_WriteLine_errorStatus);
		fUML_Tests_General.reset(new Class_());
		this->addToElementRepository("General", fUML_Tests_General);
			fUML_Tests_General_y.reset(new Property());
			this->addToElementRepository("y", fUML_Tests_General_y);
		fUML_Tests_TestClassAttributeWriter.reset(new Activity());
		this->addToElementRepository("TestClassAttributeWriter", fUML_Tests_TestClassAttributeWriter);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow184.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow184", fUML_Tests_TestClassAttributeWriter_ObjectFlow184);
				fUML_Tests_TestClassAttributeWriter_ObjectFlow184_LiteralInteger185.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger185", fUML_Tests_TestClassAttributeWriter_ObjectFlow184_LiteralInteger185);
			fUML_Tests_TestClassAttributeWriter_objectOut.reset(new Parameter());
			this->addToElementRepository("objectOut", fUML_Tests_TestClassAttributeWriter_objectOut);
				fUML_Tests_TestClassAttributeWriter_objectOut_LiteralUnlimitedNatural186.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural186", fUML_Tests_TestClassAttributeWriter_objectOut_LiteralUnlimitedNatural186);
				fUML_Tests_TestClassAttributeWriter_objectOut_LiteralInteger187.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger187", fUML_Tests_TestClassAttributeWriter_objectOut_LiteralInteger187);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow188.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow188", fUML_Tests_TestClassAttributeWriter_ObjectFlow188);
				fUML_Tests_TestClassAttributeWriter_ObjectFlow188_LiteralInteger189.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger189", fUML_Tests_TestClassAttributeWriter_ObjectFlow188_LiteralInteger189);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow190.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow190", fUML_Tests_TestClassAttributeWriter_ObjectFlow190);
				fUML_Tests_TestClassAttributeWriter_ObjectFlow190_LiteralUnlimitedNatural191.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural191", fUML_Tests_TestClassAttributeWriter_ObjectFlow190_LiteralUnlimitedNatural191);
			fUML_Tests_TestClassAttributeWriter_Add_y.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Add(y)", fUML_Tests_TestClassAttributeWriter_Add_y);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value.reset(new InputPin());
				this->addToElementRepository("Add(y).value", fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value);
					fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value_LiteralUnlimitedNatural192.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural192", fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value_LiteralUnlimitedNatural192);
					fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value_LiteralInteger193.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger193", fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value_LiteralInteger193);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object.reset(new InputPin());
				this->addToElementRepository("Add(x).object", fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object);
					fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object_LiteralUnlimitedNatural194.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural194", fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object_LiteralUnlimitedNatural194);
					fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object_LiteralInteger195.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger195", fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object_LiteralInteger195);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt.reset(new InputPin());
				this->addToElementRepository("Add(y).insertAt", fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt);
					fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt_LiteralInteger196.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger196", fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt_LiteralInteger196);
					fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt_LiteralUnlimitedNatural197.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural197", fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt_LiteralUnlimitedNatural197);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result.reset(new OutputPin());
				this->addToElementRepository("Add(y).result", fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result);
					fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result_LiteralUnlimitedNatural198.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural198", fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result_LiteralUnlimitedNatural198);
					fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result_LiteralInteger199.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger199", fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result_LiteralInteger199);
			fUML_Tests_TestClassAttributeWriter_Parameter_objectOut.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(objectOut)", fUML_Tests_TestClassAttributeWriter_Parameter_objectOut);
			fUML_Tests_TestClassAttributeWriter_value.reset(new Parameter());
			this->addToElementRepository("value", fUML_Tests_TestClassAttributeWriter_value);
				fUML_Tests_TestClassAttributeWriter_value_LiteralUnlimitedNatural200.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural200", fUML_Tests_TestClassAttributeWriter_value_LiteralUnlimitedNatural200);
				fUML_Tests_TestClassAttributeWriter_value_LiteralInteger201.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger201", fUML_Tests_TestClassAttributeWriter_value_LiteralInteger201);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow202.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow202", fUML_Tests_TestClassAttributeWriter_ObjectFlow202);
				fUML_Tests_TestClassAttributeWriter_ObjectFlow202_LiteralInteger203.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger203", fUML_Tests_TestClassAttributeWriter_ObjectFlow202_LiteralInteger203);
			fUML_Tests_TestClassAttributeWriter_Parameter_value.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(value)", fUML_Tests_TestClassAttributeWriter_Parameter_value);
			fUML_Tests_TestClassAttributeWriter_Parameter_objectIn.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(objectIn)", fUML_Tests_TestClassAttributeWriter_Parameter_objectIn);
			fUML_Tests_TestClassAttributeWriter_objectIn.reset(new Parameter());
			this->addToElementRepository("objectIn", fUML_Tests_TestClassAttributeWriter_objectIn);
				fUML_Tests_TestClassAttributeWriter_objectIn_LiteralUnlimitedNatural204.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural204", fUML_Tests_TestClassAttributeWriter_objectIn_LiteralUnlimitedNatural204);
				fUML_Tests_TestClassAttributeWriter_objectIn_LiteralInteger205.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger205", fUML_Tests_TestClassAttributeWriter_objectIn_LiteralInteger205);
			fUML_Tests_TestClassAttributeWriter_Value_times.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(*)", fUML_Tests_TestClassAttributeWriter_Value_times);
				fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result.reset(new OutputPin());
				this->addToElementRepository("Value(*).result", fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result);
					fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result_LiteralInteger206.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger206", fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result_LiteralInteger206);
					fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result_LiteralUnlimitedNatural207.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural207", fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result_LiteralUnlimitedNatural207);
				fUML_Tests_TestClassAttributeWriter_Value_times_LiteralUnlimitedNatural208.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural208", fUML_Tests_TestClassAttributeWriter_Value_times_LiteralUnlimitedNatural208);
		fUML_Tests_TestComposite.reset(new Class_());
		this->addToElementRepository("TestComposite", fUML_Tests_TestComposite);
			fUML_Tests_TestComposite_c1.reset(new Property());
			this->addToElementRepository("c1", fUML_Tests_TestComposite_c1);
		fUML_Tests_Specific.reset(new Class_());
		this->addToElementRepository("Specific", fUML_Tests_Specific);
			fUML_Tests_Specific_x.reset(new Property());
			this->addToElementRepository("x", fUML_Tests_Specific_x);
			fUML_Tests_Specific_Generalization209.reset(new Generalization());
			this->addToElementRepository("Generalization209", fUML_Tests_Specific_Generalization209);
		fUML_Tests_TestIntegerComparisonFunctions.reset(new Activity());
		this->addToElementRepository("TestIntegerComparisonFunctions", fUML_Tests_TestIntegerComparisonFunctions);
			fUML_Tests_TestIntegerComparisonFunctions_Value_2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2)", fUML_Tests_TestIntegerComparisonFunctions_Value_2);
				fUML_Tests_TestIntegerComparisonFunctions_Value_2_LiteralInteger210.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger210", fUML_Tests_TestIntegerComparisonFunctions_Value_2_LiteralInteger210);
				fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result.reset(new OutputPin());
				this->addToElementRepository("Value(2).result", fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result);
					fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result_LiteralUnlimitedNatural211.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural211", fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result_LiteralUnlimitedNatural211);
					fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result_LiteralInteger212.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger212", fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result_LiteralInteger212);
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow213.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow213", fUML_Tests_TestIntegerComparisonFunctions_ControlFlow213);
				fUML_Tests_TestIntegerComparisonFunctions_ControlFlow213_LiteralInteger214.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger214", fUML_Tests_TestIntegerComparisonFunctions_ControlFlow213_LiteralInteger214);
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow215.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow215", fUML_Tests_TestIntegerComparisonFunctions_ControlFlow215);
				fUML_Tests_TestIntegerComparisonFunctions_ControlFlow215_LiteralInteger216.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger216", fUML_Tests_TestIntegerComparisonFunctions_ControlFlow215_LiteralInteger216);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow217.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow217", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow217);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow217_LiteralInteger218.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger218", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow217_LiteralInteger218);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow219.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow219", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow219);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow219_LiteralInteger220.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger220", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow219_LiteralInteger220);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow221.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow221", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow221);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow221_LiteralInteger222.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger222", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow221_LiteralInteger222);
			fUML_Tests_TestIntegerComparisonFunctions_Fork_2.reset(new ForkNode());
			this->addToElementRepository("Fork(2)", fUML_Tests_TestIntegerComparisonFunctions_Fork_2);
			fUML_Tests_TestIntegerComparisonFunctions_GEResult.reset(new Parameter());
			this->addToElementRepository("GEResult", fUML_Tests_TestIntegerComparisonFunctions_GEResult);
			fUML_Tests_TestIntegerComparisonFunctions_Param_LTResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(LTResult)", fUML_Tests_TestIntegerComparisonFunctions_Param_LTResult);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow223.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow223", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow223);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow223_LiteralInteger224.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger224", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow223_LiteralInteger224);
			fUML_Tests_TestIntegerComparisonFunctions_GTResult.reset(new Parameter());
			this->addToElementRepository("GTResult", fUML_Tests_TestIntegerComparisonFunctions_GTResult);
			fUML_Tests_TestIntegerComparisonFunctions_LEResult.reset(new Parameter());
			this->addToElementRepository("LEResult", fUML_Tests_TestIntegerComparisonFunctions_LEResult);
			fUML_Tests_TestIntegerComparisonFunctions_Param_LEResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(LEResult)", fUML_Tests_TestIntegerComparisonFunctions_Param_LEResult);
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow225.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow225", fUML_Tests_TestIntegerComparisonFunctions_ControlFlow225);
				fUML_Tests_TestIntegerComparisonFunctions_ControlFlow225_LiteralInteger226.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger226", fUML_Tests_TestIntegerComparisonFunctions_ControlFlow225_LiteralInteger226);
			fUML_Tests_TestIntegerComparisonFunctions_Param_GEResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(GEResult)", fUML_Tests_TestIntegerComparisonFunctions_Param_GEResult);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow227.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow227", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow227);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow227_LiteralInteger228.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger228", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow227_LiteralInteger228);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow229.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow229", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow229);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow229_LiteralInteger230.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger230", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow229_LiteralInteger230);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LE.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(LE)", fUML_Tests_TestIntegerComparisonFunctions_Call_LE);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result.reset(new OutputPin());
				this->addToElementRepository("LE.result", fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result_LiteralInteger231.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger231", fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result_LiteralInteger231);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result_LiteralUnlimitedNatural232.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural232", fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result_LiteralUnlimitedNatural232);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y.reset(new InputPin());
				this->addToElementRepository("LE.y", fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y_LiteralInteger233.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger233", fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y_LiteralInteger233);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y_LiteralUnlimitedNatural234.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural234", fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y_LiteralUnlimitedNatural234);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x.reset(new InputPin());
				this->addToElementRepository("LE.x", fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x_LiteralUnlimitedNatural235.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural235", fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x_LiteralUnlimitedNatural235);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x_LiteralInteger236.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger236", fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x_LiteralInteger236);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow237.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow237", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow237);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow237_LiteralInteger238.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger238", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow237_LiteralInteger238);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow239.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow239", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow239);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow239_LiteralInteger240.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger240", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow239_LiteralInteger240);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow241.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow241", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow241);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow241_LiteralInteger242.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger242", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow241_LiteralInteger242);
			fUML_Tests_TestIntegerComparisonFunctions_Fork_3.reset(new ForkNode());
			this->addToElementRepository("Fork(3)", fUML_Tests_TestIntegerComparisonFunctions_Fork_3);
			fUML_Tests_TestIntegerComparisonFunctions_Param_GTResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(GTResult)", fUML_Tests_TestIntegerComparisonFunctions_Param_GTResult);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow243.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow243", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow243);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow243_LiteralInteger244.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger244", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow243_LiteralInteger244);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow245.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow245", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow245);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow245_LiteralInteger246.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger246", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow245_LiteralInteger246);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow247.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow247", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow247);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow247_LiteralInteger248.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger248", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow247_LiteralInteger248);
			fUML_Tests_TestIntegerComparisonFunctions_LTResult.reset(new Parameter());
			this->addToElementRepository("LTResult", fUML_Tests_TestIntegerComparisonFunctions_LTResult);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow249.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow249", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow249);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow249_LiteralInteger250.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger250", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow249_LiteralInteger250);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LT.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(LT)", fUML_Tests_TestIntegerComparisonFunctions_Call_LT);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result.reset(new OutputPin());
				this->addToElementRepository("LT.result", fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result_LiteralInteger251.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger251", fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result_LiteralInteger251);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result_LiteralUnlimitedNatural252.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural252", fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result_LiteralUnlimitedNatural252);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y.reset(new InputPin());
				this->addToElementRepository("LT.y", fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y_LiteralUnlimitedNatural253.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural253", fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y_LiteralUnlimitedNatural253);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y_LiteralInteger254.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger254", fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y_LiteralInteger254);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x.reset(new InputPin());
				this->addToElementRepository("LT.x", fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x_LiteralUnlimitedNatural255.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural255", fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x_LiteralUnlimitedNatural255);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x_LiteralInteger256.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger256", fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x_LiteralInteger256);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GT.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(GT)", fUML_Tests_TestIntegerComparisonFunctions_Call_GT);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x.reset(new InputPin());
				this->addToElementRepository("GT.x", fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x_LiteralUnlimitedNatural257.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural257", fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x_LiteralUnlimitedNatural257);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x_LiteralInteger258.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger258", fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x_LiteralInteger258);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y.reset(new InputPin());
				this->addToElementRepository("GT.y", fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y_LiteralUnlimitedNatural259.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural259", fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y_LiteralUnlimitedNatural259);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y_LiteralInteger260.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger260", fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y_LiteralInteger260);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result.reset(new OutputPin());
				this->addToElementRepository("GT.result", fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result_LiteralUnlimitedNatural261.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural261", fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result_LiteralUnlimitedNatural261);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result_LiteralInteger262.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger262", fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result_LiteralInteger262);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GE.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(GE)", fUML_Tests_TestIntegerComparisonFunctions_Call_GE);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result.reset(new OutputPin());
				this->addToElementRepository("GE.result", fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result_LiteralInteger263.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger263", fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result_LiteralInteger263);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result_LiteralUnlimitedNatural264.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural264", fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result_LiteralUnlimitedNatural264);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x.reset(new InputPin());
				this->addToElementRepository("GE.x", fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x_LiteralInteger265.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger265", fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x_LiteralInteger265);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x_LiteralUnlimitedNatural266.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural266", fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x_LiteralUnlimitedNatural266);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y.reset(new InputPin());
				this->addToElementRepository("GE.y", fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y_LiteralInteger267.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger267", fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y_LiteralInteger267);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y_LiteralUnlimitedNatural268.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural268", fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y_LiteralUnlimitedNatural268);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow269.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow269", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow269);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow269_LiteralInteger270.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger270", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow269_LiteralInteger270);
			fUML_Tests_TestIntegerComparisonFunctions_Value_3.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(3)", fUML_Tests_TestIntegerComparisonFunctions_Value_3);
				fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result.reset(new OutputPin());
				this->addToElementRepository("Value(3).result", fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result);
					fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result_LiteralInteger271.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger271", fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result_LiteralInteger271);
					fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result_LiteralUnlimitedNatural272.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural272", fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result_LiteralUnlimitedNatural272);
				fUML_Tests_TestIntegerComparisonFunctions_Value_3_LiteralInteger273.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger273", fUML_Tests_TestIntegerComparisonFunctions_Value_3_LiteralInteger273);
		fUML_Tests_TestClassAttributeValueRemover.reset(new Activity());
		this->addToElementRepository("TestClassAttributeValueRemover", fUML_Tests_TestClassAttributeValueRemover);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow274.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow274", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow274);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow274_LiteralUnlimitedNatural275.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural275", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow274_LiteralUnlimitedNatural275);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow276.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow276", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow276);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow276_LiteralUnlimitedNatural277.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural277", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow276_LiteralUnlimitedNatural277);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow278.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow278", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow278);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow278_LiteralUnlimitedNatural279.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural279", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow278_LiteralUnlimitedNatural279);
			fUML_Tests_TestClassAttributeValueRemover_objectOutNode.reset(new ActivityParameterNode());
			this->addToElementRepository("objectOutNode", fUML_Tests_TestClassAttributeValueRemover_objectOutNode);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow280.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow280", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow280);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow280_LiteralUnlimitedNatural281.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural281", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow280_LiteralUnlimitedNatural281);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow282.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow282", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow282);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow282_LiteralUnlimitedNatural283.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural283", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow282_LiteralUnlimitedNatural283);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus3.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Add(y)-3", fUML_Tests_TestClassAttributeValueRemover_Add_yminus3);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object_LiteralInteger284.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger284", fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object_LiteralInteger284);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object_LiteralUnlimitedNatural285.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural285", fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object_LiteralUnlimitedNatural285);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value_LiteralUnlimitedNatural286.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural286", fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value_LiteralUnlimitedNatural286);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value_LiteralInteger287.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger287", fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value_LiteralInteger287);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result_LiteralUnlimitedNatural288.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural288", fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result_LiteralUnlimitedNatural288);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result_LiteralInteger289.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger289", fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result_LiteralInteger289);
			fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y.reset(new RemoveStructuralFeatureValueAction());
			this->addToElementRepository("RemoveAll(y)", fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y);
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_result);
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object);
					fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object_LiteralInteger290.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger290", fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object_LiteralInteger290);
					fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object_LiteralUnlimitedNatural291.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural291", fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object_LiteralUnlimitedNatural291);
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value);
					fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value_LiteralInteger292.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger292", fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value_LiteralInteger292);
					fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value_LiteralUnlimitedNatural293.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural293", fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value_LiteralUnlimitedNatural293);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow294.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow294", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow294);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow294_LiteralUnlimitedNatural295.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural295", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow294_LiteralUnlimitedNatural295);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow296.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow296", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow296);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow296_LiteralUnlimitedNatural297.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural297", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow296_LiteralUnlimitedNatural297);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus4.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Add(y)-4", fUML_Tests_TestClassAttributeValueRemover_Add_yminus4);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value_LiteralInteger298.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger298", fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value_LiteralInteger298);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value_LiteralUnlimitedNatural299.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural299", fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value_LiteralUnlimitedNatural299);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result_LiteralInteger300.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger300", fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result_LiteralInteger300);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result_LiteralUnlimitedNatural301.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural301", fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result_LiteralUnlimitedNatural301);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object_LiteralInteger302.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger302", fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object_LiteralInteger302);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object_LiteralUnlimitedNatural303.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural303", fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object_LiteralUnlimitedNatural303);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow304.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow304", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow304);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow304_LiteralUnlimitedNatural305.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural305", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow304_LiteralUnlimitedNatural305);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow306.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow306", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow306);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow306_LiteralUnlimitedNatural307.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural307", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow306_LiteralUnlimitedNatural307);
			fUML_Tests_TestClassAttributeValueRemover_Value_2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2)", fUML_Tests_TestClassAttributeValueRemover_Value_2);
				fUML_Tests_TestClassAttributeValueRemover_Value_2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassAttributeValueRemover_Value_2_result);
					fUML_Tests_TestClassAttributeValueRemover_Value_2_result_LiteralUnlimitedNatural308.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural308", fUML_Tests_TestClassAttributeValueRemover_Value_2_result_LiteralUnlimitedNatural308);
					fUML_Tests_TestClassAttributeValueRemover_Value_2_result_LiteralInteger309.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger309", fUML_Tests_TestClassAttributeValueRemover_Value_2_result_LiteralInteger309);
				fUML_Tests_TestClassAttributeValueRemover_Value_2_LiteralInteger310.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger310", fUML_Tests_TestClassAttributeValueRemover_Value_2_LiteralInteger310);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus2.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Add(y)-2", fUML_Tests_TestClassAttributeValueRemover_Add_yminus2);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result_LiteralUnlimitedNatural311.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural311", fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result_LiteralUnlimitedNatural311);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result_LiteralInteger312.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger312", fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result_LiteralInteger312);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value_LiteralInteger313.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger313", fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value_LiteralInteger313);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value_LiteralUnlimitedNatural314.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural314", fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value_LiteralUnlimitedNatural314);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object_LiteralInteger315.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger315", fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object_LiteralInteger315);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object_LiteralUnlimitedNatural316.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural316", fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object_LiteralUnlimitedNatural316);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow317.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow317", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow317);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow317_LiteralUnlimitedNatural318.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural318", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow317_LiteralUnlimitedNatural318);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow319.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow319", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow319);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow319_LiteralUnlimitedNatural320.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural320", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow319_LiteralUnlimitedNatural320);
			fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y.reset(new RemoveStructuralFeatureValueAction());
			this->addToElementRepository("RemoveOne(y)", fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y);
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result);
					fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result_LiteralUnlimitedNatural321.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural321", fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result_LiteralUnlimitedNatural321);
					fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result_LiteralInteger322.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger322", fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result_LiteralInteger322);
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value);
					fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value_LiteralUnlimitedNatural323.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural323", fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value_LiteralUnlimitedNatural323);
					fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value_LiteralInteger324.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger324", fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value_LiteralInteger324);
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object);
					fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object_LiteralInteger325.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger325", fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object_LiteralInteger325);
					fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object_LiteralUnlimitedNatural326.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural326", fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object_LiteralUnlimitedNatural326);
			fUML_Tests_TestClassAttributeValueRemover_Value_1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)", fUML_Tests_TestClassAttributeValueRemover_Value_1);
				fUML_Tests_TestClassAttributeValueRemover_Value_1_LiteralInteger327.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger327", fUML_Tests_TestClassAttributeValueRemover_Value_1_LiteralInteger327);
				fUML_Tests_TestClassAttributeValueRemover_Value_1_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassAttributeValueRemover_Value_1_result);
					fUML_Tests_TestClassAttributeValueRemover_Value_1_result_LiteralInteger328.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger328", fUML_Tests_TestClassAttributeValueRemover_Value_1_result_LiteralInteger328);
					fUML_Tests_TestClassAttributeValueRemover_Value_1_result_LiteralUnlimitedNatural329.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural329", fUML_Tests_TestClassAttributeValueRemover_Value_1_result_LiteralUnlimitedNatural329);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus1.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Add(y)-1", fUML_Tests_TestClassAttributeValueRemover_Add_yminus1);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value_LiteralInteger330.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger330", fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value_LiteralInteger330);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value_LiteralUnlimitedNatural331.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural331", fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value_LiteralUnlimitedNatural331);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result_LiteralUnlimitedNatural332.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural332", fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result_LiteralUnlimitedNatural332);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result_LiteralInteger333.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger333", fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result_LiteralInteger333);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object_LiteralUnlimitedNatural334.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural334", fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object_LiteralUnlimitedNatural334);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object_LiteralInteger335.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger335", fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object_LiteralInteger335);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow336.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow336", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow336);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow336_LiteralUnlimitedNatural337.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural337", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow336_LiteralUnlimitedNatural337);
			fUML_Tests_TestClassAttributeValueRemover_ForkNode338.reset(new ForkNode());
			this->addToElementRepository("ForkNode338", fUML_Tests_TestClassAttributeValueRemover_ForkNode338);
			fUML_Tests_TestClassAttributeValueRemover_objectIn.reset(new Parameter());
			this->addToElementRepository("objectIn", fUML_Tests_TestClassAttributeValueRemover_objectIn);
				fUML_Tests_TestClassAttributeValueRemover_objectIn_LiteralUnlimitedNatural339.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural339", fUML_Tests_TestClassAttributeValueRemover_objectIn_LiteralUnlimitedNatural339);
				fUML_Tests_TestClassAttributeValueRemover_objectIn_LiteralInteger340.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger340", fUML_Tests_TestClassAttributeValueRemover_objectIn_LiteralInteger340);
			fUML_Tests_TestClassAttributeValueRemover_objectOut.reset(new Parameter());
			this->addToElementRepository("objectOut", fUML_Tests_TestClassAttributeValueRemover_objectOut);
				fUML_Tests_TestClassAttributeValueRemover_objectOut_LiteralInteger341.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger341", fUML_Tests_TestClassAttributeValueRemover_objectOut_LiteralInteger341);
				fUML_Tests_TestClassAttributeValueRemover_objectOut_LiteralUnlimitedNatural342.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural342", fUML_Tests_TestClassAttributeValueRemover_objectOut_LiteralUnlimitedNatural342);
			fUML_Tests_TestClassAttributeValueRemover_objectInNode.reset(new ActivityParameterNode());
			this->addToElementRepository("objectInNode", fUML_Tests_TestClassAttributeValueRemover_objectInNode);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow343.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow343", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow343);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow343_LiteralUnlimitedNatural344.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural344", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow343_LiteralUnlimitedNatural344);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow345.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow345", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow345);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow345_LiteralUnlimitedNatural346.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural346", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow345_LiteralUnlimitedNatural346);
		fUML_Tests_TestAssociationEndWriterReader.reset(new Activity());
		this->addToElementRepository("TestAssociationEndWriterReader", fUML_Tests_TestAssociationEndWriterReader);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow347.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow347", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow347);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow347_LiteralUnlimitedNatural348.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural348", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow347_LiteralUnlimitedNatural348);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow349.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow349", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow349);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow349_LiteralUnlimitedNatural350.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural350", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow349_LiteralUnlimitedNatural350);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow351.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow351", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow351);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow351_LiteralUnlimitedNatural352.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural352", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow351_LiteralUnlimitedNatural352);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow353.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow353", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow353);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow353_LiteralUnlimitedNatural354.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural354", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow353_LiteralUnlimitedNatural354);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Add(end2)-3", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object_LiteralInteger355.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger355", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object_LiteralInteger355);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object_LiteralUnlimitedNatural356.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural356", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object_LiteralUnlimitedNatural356);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result_LiteralUnlimitedNatural357.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural357", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result_LiteralUnlimitedNatural357);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result_LiteralInteger358.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger358", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result_LiteralInteger358);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value_LiteralInteger359.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger359", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value_LiteralInteger359);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value_LiteralUnlimitedNatural360.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural360", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value_LiteralUnlimitedNatural360);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt.reset(new InputPin());
				this->addToElementRepository("insertAt", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt_LiteralInteger361.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger361", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt_LiteralInteger361);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt_LiteralUnlimitedNatural362.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural362", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt_LiteralUnlimitedNatural362);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow363.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow363", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow363);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow363_LiteralUnlimitedNatural364.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural364", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow363_LiteralUnlimitedNatural364);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow365.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow365", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow365);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow365_LiteralUnlimitedNatural366.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural366", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow365_LiteralUnlimitedNatural366);
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2.reset(new ReadStructuralFeatureAction());
			this->addToElementRepository("Read(end2)-2", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object);
					fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object_LiteralInteger367.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger367", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object_LiteralInteger367);
					fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object_LiteralUnlimitedNatural368.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural368", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object_LiteralUnlimitedNatural368);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result);
					fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result_LiteralInteger369.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger369", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result_LiteralInteger369);
					fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result_LiteralUnlimitedNatural370.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural370", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result_LiteralUnlimitedNatural370);
			fUML_Tests_TestAssociationEndWriterReader_Value_times.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(*)", fUML_Tests_TestAssociationEndWriterReader_Value_times);
				fUML_Tests_TestAssociationEndWriterReader_Value_times_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestAssociationEndWriterReader_Value_times_result);
				fUML_Tests_TestAssociationEndWriterReader_Value_times_LiteralUnlimitedNatural371.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural371", fUML_Tests_TestAssociationEndWriterReader_Value_times_LiteralUnlimitedNatural371);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow372.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow372", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow372);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow372_LiteralUnlimitedNatural373.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural373", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow372_LiteralUnlimitedNatural373);
			fUML_Tests_TestAssociationEndWriterReader_object3.reset(new Parameter());
			this->addToElementRepository("object3", fUML_Tests_TestAssociationEndWriterReader_object3);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow374.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow374", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow374);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow374_LiteralUnlimitedNatural375.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural375", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow374_LiteralUnlimitedNatural375);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow376.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow376", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow376);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow376_LiteralUnlimitedNatural377.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural377", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow376_LiteralUnlimitedNatural377);
			fUML_Tests_TestAssociationEndWriterReader_ForkNode378.reset(new ForkNode());
			this->addToElementRepository("ForkNode378", fUML_Tests_TestAssociationEndWriterReader_ForkNode378);
			fUML_Tests_TestAssociationEndWriterReader_output1Node.reset(new ActivityParameterNode());
			this->addToElementRepository("output1Node", fUML_Tests_TestAssociationEndWriterReader_output1Node);
			fUML_Tests_TestAssociationEndWriterReader_expected.reset(new Parameter());
			this->addToElementRepository("expected", fUML_Tests_TestAssociationEndWriterReader_expected);
				fUML_Tests_TestAssociationEndWriterReader_expected_LiteralInteger379.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger379", fUML_Tests_TestAssociationEndWriterReader_expected_LiteralInteger379);
				fUML_Tests_TestAssociationEndWriterReader_expected_LiteralUnlimitedNatural380.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural380", fUML_Tests_TestAssociationEndWriterReader_expected_LiteralUnlimitedNatural380);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow381.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow381", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow381);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow381_LiteralUnlimitedNatural382.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural382", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow381_LiteralUnlimitedNatural382);
			fUML_Tests_TestAssociationEndWriterReader_output1.reset(new Parameter());
			this->addToElementRepository("output1", fUML_Tests_TestAssociationEndWriterReader_output1);
				fUML_Tests_TestAssociationEndWriterReader_output1_LiteralUnlimitedNatural383.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural383", fUML_Tests_TestAssociationEndWriterReader_output1_LiteralUnlimitedNatural383);
				fUML_Tests_TestAssociationEndWriterReader_output1_LiteralUnlimitedNatural384.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural384", fUML_Tests_TestAssociationEndWriterReader_output1_LiteralUnlimitedNatural384);
			fUML_Tests_TestAssociationEndWriterReader_object1.reset(new Parameter());
			this->addToElementRepository("object1", fUML_Tests_TestAssociationEndWriterReader_object1);
			fUML_Tests_TestAssociationEndWriterReader_Value_2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2)", fUML_Tests_TestAssociationEndWriterReader_Value_2);
				fUML_Tests_TestAssociationEndWriterReader_Value_2_LiteralUnlimitedNatural385.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural385", fUML_Tests_TestAssociationEndWriterReader_Value_2_LiteralUnlimitedNatural385);
				fUML_Tests_TestAssociationEndWriterReader_Value_2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestAssociationEndWriterReader_Value_2_result);
					fUML_Tests_TestAssociationEndWriterReader_Value_2_result_LiteralUnlimitedNatural386.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural386", fUML_Tests_TestAssociationEndWriterReader_Value_2_result_LiteralUnlimitedNatural386);
					fUML_Tests_TestAssociationEndWriterReader_Value_2_result_LiteralInteger387.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger387", fUML_Tests_TestAssociationEndWriterReader_Value_2_result_LiteralInteger387);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow388.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow388", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow388);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow388_LiteralUnlimitedNatural389.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural389", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow388_LiteralUnlimitedNatural389);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow390.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow390", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow390);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow390_LiteralUnlimitedNatural391.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural391", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow390_LiteralUnlimitedNatural391);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow392.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow392", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow392);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow392_LiteralUnlimitedNatural393.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural393", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow392_LiteralUnlimitedNatural393);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow394.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow394", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow394);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow394_LiteralUnlimitedNatural395.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural395", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow394_LiteralUnlimitedNatural395);
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1.reset(new ReadStructuralFeatureAction());
			this->addToElementRepository("Read(end2)-1", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object);
					fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object_LiteralUnlimitedNatural396.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural396", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object_LiteralUnlimitedNatural396);
					fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object_LiteralInteger397.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger397", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object_LiteralInteger397);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result);
					fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result_LiteralInteger398.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger398", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result_LiteralInteger398);
					fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result_LiteralUnlimitedNatural399.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural399", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result_LiteralUnlimitedNatural399);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow400.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow400", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow400);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow400_LiteralUnlimitedNatural401.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural401", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow400_LiteralUnlimitedNatural401);
			fUML_Tests_TestAssociationEndWriterReader_object2.reset(new Parameter());
			this->addToElementRepository("object2", fUML_Tests_TestAssociationEndWriterReader_object2);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow402.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow402", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow402);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow402_LiteralUnlimitedNatural403.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural403", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow402_LiteralUnlimitedNatural403);
			fUML_Tests_TestAssociationEndWriterReader_ForkNode404.reset(new ForkNode());
			this->addToElementRepository("ForkNode404", fUML_Tests_TestAssociationEndWriterReader_ForkNode404);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow405.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow405", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow405);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow405_LiteralUnlimitedNatural406.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural406", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow405_LiteralUnlimitedNatural406);
			fUML_Tests_TestAssociationEndWriterReader_object1Node.reset(new ActivityParameterNode());
			this->addToElementRepository("object1Node", fUML_Tests_TestAssociationEndWriterReader_object1Node);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2.reset(new RemoveStructuralFeatureValueAction());
			this->addToElementRepository("RemoveAll(end2)", fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value_LiteralUnlimitedNatural407.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural407", fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value_LiteralUnlimitedNatural407);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value_LiteralInteger408.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger408", fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value_LiteralInteger408);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object_LiteralInteger409.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger409", fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object_LiteralInteger409);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object_LiteralUnlimitedNatural410.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural410", fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object_LiteralUnlimitedNatural410);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result_LiteralUnlimitedNatural411.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural411", fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result_LiteralUnlimitedNatural411);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result_LiteralInteger412.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger412", fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result_LiteralInteger412);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow413.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow413", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow413);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow413_LiteralUnlimitedNatural414.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural414", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow413_LiteralUnlimitedNatural414);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2.reset(new RemoveStructuralFeatureValueAction());
			this->addToElementRepository("RemoveAt(end2)", fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result_LiteralUnlimitedNatural415.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural415", fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result_LiteralUnlimitedNatural415);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result_LiteralInteger416.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger416", fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result_LiteralInteger416);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object_LiteralInteger417.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger417", fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object_LiteralInteger417);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object_LiteralUnlimitedNatural418.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural418", fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object_LiteralUnlimitedNatural418);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt.reset(new InputPin());
				this->addToElementRepository("removeAt", fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt_LiteralInteger419.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger419", fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt_LiteralInteger419);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt_LiteralUnlimitedNatural420.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural420", fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt_LiteralUnlimitedNatural420);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow421.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow421", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow421);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow421_LiteralUnlimitedNatural422.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural422", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow421_LiteralUnlimitedNatural422);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow423.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow423", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow423);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow423_LiteralUnlimitedNatural424.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural424", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow423_LiteralUnlimitedNatural424);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Add(end2)-2", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value_LiteralInteger425.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger425", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value_LiteralInteger425);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value_LiteralUnlimitedNatural426.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural426", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value_LiteralUnlimitedNatural426);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result_LiteralUnlimitedNatural427.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural427", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result_LiteralUnlimitedNatural427);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result_LiteralInteger428.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger428", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result_LiteralInteger428);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt.reset(new InputPin());
				this->addToElementRepository("insertAt", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt_LiteralInteger429.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger429", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt_LiteralInteger429);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt_LiteralUnlimitedNatural430.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural430", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt_LiteralUnlimitedNatural430);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object_LiteralInteger431.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger431", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object_LiteralInteger431);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object_LiteralUnlimitedNatural432.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural432", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object_LiteralUnlimitedNatural432);
			fUML_Tests_TestAssociationEndWriterReader_ControlFlow433.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow433", fUML_Tests_TestAssociationEndWriterReader_ControlFlow433);
				fUML_Tests_TestAssociationEndWriterReader_ControlFlow433_LiteralUnlimitedNatural434.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural434", fUML_Tests_TestAssociationEndWriterReader_ControlFlow433_LiteralUnlimitedNatural434);
			fUML_Tests_TestAssociationEndWriterReader_object3Node.reset(new ActivityParameterNode());
			this->addToElementRepository("object3Node", fUML_Tests_TestAssociationEndWriterReader_object3Node);
			fUML_Tests_TestAssociationEndWriterReader_output2.reset(new Parameter());
			this->addToElementRepository("output2", fUML_Tests_TestAssociationEndWriterReader_output2);
				fUML_Tests_TestAssociationEndWriterReader_output2_LiteralUnlimitedNatural435.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural435", fUML_Tests_TestAssociationEndWriterReader_output2_LiteralUnlimitedNatural435);
				fUML_Tests_TestAssociationEndWriterReader_output2_LiteralUnlimitedNatural436.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural436", fUML_Tests_TestAssociationEndWriterReader_output2_LiteralUnlimitedNatural436);
			fUML_Tests_TestAssociationEndWriterReader_output2Node.reset(new ActivityParameterNode());
			this->addToElementRepository("output2Node", fUML_Tests_TestAssociationEndWriterReader_output2Node);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow437.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow437", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow437);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow437_LiteralUnlimitedNatural438.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural438", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow437_LiteralUnlimitedNatural438);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Add(end2)-1", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value_LiteralInteger439.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger439", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value_LiteralInteger439);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value_LiteralUnlimitedNatural440.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural440", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value_LiteralUnlimitedNatural440);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt.reset(new InputPin());
				this->addToElementRepository("insertAt", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt_LiteralInteger441.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger441", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt_LiteralInteger441);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt_LiteralUnlimitedNatural442.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural442", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt_LiteralUnlimitedNatural442);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object_LiteralUnlimitedNatural443.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural443", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object_LiteralUnlimitedNatural443);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object_LiteralInteger444.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger444", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object_LiteralInteger444);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result_LiteralInteger445.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger445", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result_LiteralInteger445);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result_LiteralUnlimitedNatural446.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural446", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result_LiteralUnlimitedNatural446);
			fUML_Tests_TestAssociationEndWriterReader_ForkNode447.reset(new ForkNode());
			this->addToElementRepository("ForkNode447", fUML_Tests_TestAssociationEndWriterReader_ForkNode447);
			fUML_Tests_TestAssociationEndWriterReader_object2Node.reset(new ActivityParameterNode());
			this->addToElementRepository("object2Node", fUML_Tests_TestAssociationEndWriterReader_object2Node);
			fUML_Tests_TestAssociationEndWriterReader_ForkNode448.reset(new ForkNode());
			this->addToElementRepository("ForkNode448", fUML_Tests_TestAssociationEndWriterReader_ForkNode448);
			fUML_Tests_TestAssociationEndWriterReader_expectedNode.reset(new ActivityParameterNode());
			this->addToElementRepository("expectedNode", fUML_Tests_TestAssociationEndWriterReader_expectedNode);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow449.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow449", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow449);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow449_LiteralUnlimitedNatural450.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural450", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow449_LiteralUnlimitedNatural450);
		fUML_Tests_SignalEvent451.reset(new SignalEvent());
		this->addToElementRepository("SignalEvent451", fUML_Tests_SignalEvent451);
		fUML_Tests_TestClass.reset(new Class_());
		this->addToElementRepository("TestClass", fUML_Tests_TestClass);
			fUML_Tests_TestClass_x.reset(new Property());
			this->addToElementRepository("x", fUML_Tests_TestClass_x);
				fUML_Tests_TestClass_x_LiteralInteger452.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger452", fUML_Tests_TestClass_x_LiteralInteger452);
				fUML_Tests_TestClass_x_LiteralUnlimitedNatural453.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural453", fUML_Tests_TestClass_x_LiteralUnlimitedNatural453);
			fUML_Tests_TestClass_y.reset(new Property());
			this->addToElementRepository("y", fUML_Tests_TestClass_y);
				fUML_Tests_TestClass_y_LiteralUnlimitedNatural454.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural454", fUML_Tests_TestClass_y_LiteralUnlimitedNatural454);
				fUML_Tests_TestClass_y_LiteralInteger455.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger455", fUML_Tests_TestClass_y_LiteralInteger455);
		fUML_Tests_TestDataStore.reset(new Activity());
		this->addToElementRepository("TestDataStore", fUML_Tests_TestDataStore);
			fUML_Tests_TestDataStore_decisionInputFlow.reset(new ObjectFlow());
			this->addToElementRepository("decisionInputFlow", fUML_Tests_TestDataStore_decisionInputFlow);
				fUML_Tests_TestDataStore_decisionInputFlow_LiteralUnlimitedNatural456.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural456", fUML_Tests_TestDataStore_decisionInputFlow_LiteralUnlimitedNatural456);
			fUML_Tests_TestDataStore_ObjectFlow457.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow457", fUML_Tests_TestDataStore_ObjectFlow457);
				fUML_Tests_TestDataStore_ObjectFlow457_LiteralUnlimitedNatural458.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural458", fUML_Tests_TestDataStore_ObjectFlow457_LiteralUnlimitedNatural458);
			fUML_Tests_TestDataStore_Merge2.reset(new MergeNode());
			this->addToElementRepository("Merge2", fUML_Tests_TestDataStore_Merge2);
			fUML_Tests_TestDataStore_Call_Copierminus2.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Copier)-2", fUML_Tests_TestDataStore_Call_Copierminus2);
				fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input.reset(new InputPin());
				this->addToElementRepository("Call(Copier)-2.input", fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input);
					fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input_LiteralUnlimitedNatural459.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural459", fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input_LiteralUnlimitedNatural459);
					fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input_LiteralInteger460.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger460", fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input_LiteralInteger460);
				fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output.reset(new OutputPin());
				this->addToElementRepository("Call(Copier)-2.output", fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output);
					fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output_LiteralInteger461.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger461", fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output_LiteralInteger461);
					fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output_LiteralUnlimitedNatural462.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural462", fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output_LiteralUnlimitedNatural462);
			fUML_Tests_TestDataStore_Value_1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)", fUML_Tests_TestDataStore_Value_1);
				fUML_Tests_TestDataStore_Value_1_Value_1_result.reset(new OutputPin());
				this->addToElementRepository("Value(1).result", fUML_Tests_TestDataStore_Value_1_Value_1_result);
				fUML_Tests_TestDataStore_Value_1_LiteralInteger463.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger463", fUML_Tests_TestDataStore_Value_1_LiteralInteger463);
			fUML_Tests_TestDataStore_ObjectFlow464.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow464", fUML_Tests_TestDataStore_ObjectFlow464);
				fUML_Tests_TestDataStore_ObjectFlow464_LiteralUnlimitedNatural465.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural465", fUML_Tests_TestDataStore_ObjectFlow464_LiteralUnlimitedNatural465);
			fUML_Tests_TestDataStore_Value_1minusInitminus2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)-Init-2", fUML_Tests_TestDataStore_Value_1minusInitminus2);
				fUML_Tests_TestDataStore_Value_1minusInitminus2_Value_1minusInitminus2_result.reset(new OutputPin());
				this->addToElementRepository("Value(1)-Init-2.result", fUML_Tests_TestDataStore_Value_1minusInitminus2_Value_1minusInitminus2_result);
				fUML_Tests_TestDataStore_Value_1minusInitminus2_LiteralInteger466.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger466", fUML_Tests_TestDataStore_Value_1minusInitminus2_LiteralInteger466);
			fUML_Tests_TestDataStore_Parameter_output.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(output)", fUML_Tests_TestDataStore_Parameter_output);
			fUML_Tests_TestDataStore_Value_2minusInitminus3.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2)-Init-3", fUML_Tests_TestDataStore_Value_2minusInitminus3);
				fUML_Tests_TestDataStore_Value_2minusInitminus3_LiteralInteger467.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger467", fUML_Tests_TestDataStore_Value_2minusInitminus3_LiteralInteger467);
				fUML_Tests_TestDataStore_Value_2minusInitminus3_Value_2minusInitminus1_result.reset(new OutputPin());
				this->addToElementRepository("Value(2)-Init-1.result", fUML_Tests_TestDataStore_Value_2minusInitminus3_Value_2minusInitminus1_result);
			fUML_Tests_TestDataStore_Call_Copierminus1.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Copier)-1", fUML_Tests_TestDataStore_Call_Copierminus1);
				fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output.reset(new OutputPin());
				this->addToElementRepository("Call(Copier)-1.output", fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output);
					fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output_LiteralInteger468.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger468", fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output_LiteralInteger468);
					fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output_LiteralUnlimitedNatural469.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural469", fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output_LiteralUnlimitedNatural469);
				fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input.reset(new InputPin());
				this->addToElementRepository("Call(Copier)-1.input", fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input);
					fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input_LiteralInteger470.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger470", fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input_LiteralInteger470);
					fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input_LiteralUnlimitedNatural471.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural471", fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input_LiteralUnlimitedNatural471);
			fUML_Tests_TestDataStore_Value_1minusInitminus1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)-Init-1", fUML_Tests_TestDataStore_Value_1minusInitminus1);
				fUML_Tests_TestDataStore_Value_1minusInitminus1_LiteralInteger472.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger472", fUML_Tests_TestDataStore_Value_1minusInitminus1_LiteralInteger472);
				fUML_Tests_TestDataStore_Value_1minusInitminus1_Value_1minusInitminus1_result.reset(new OutputPin());
				this->addToElementRepository("Value(1)-Init-1.result", fUML_Tests_TestDataStore_Value_1minusInitminus1_Value_1minusInitminus1_result);
			fUML_Tests_TestDataStore_ControlFlow473.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow473", fUML_Tests_TestDataStore_ControlFlow473);
				fUML_Tests_TestDataStore_ControlFlow473_LiteralUnlimitedNatural474.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural474", fUML_Tests_TestDataStore_ControlFlow473_LiteralUnlimitedNatural474);
			fUML_Tests_TestDataStore_ObjectFlow475.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow475", fUML_Tests_TestDataStore_ObjectFlow475);
				fUML_Tests_TestDataStore_ObjectFlow475_LiteralUnlimitedNatural476.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural476", fUML_Tests_TestDataStore_ObjectFlow475_LiteralUnlimitedNatural476);
			fUML_Tests_TestDataStore_ObjectFlow477.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow477", fUML_Tests_TestDataStore_ObjectFlow477);
				fUML_Tests_TestDataStore_ObjectFlow477_LiteralUnlimitedNatural478.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural478", fUML_Tests_TestDataStore_ObjectFlow477_LiteralUnlimitedNatural478);
			fUML_Tests_TestDataStore_ControlFlow479.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow479", fUML_Tests_TestDataStore_ControlFlow479);
				fUML_Tests_TestDataStore_ControlFlow479_LiteralUnlimitedNatural480.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural480", fUML_Tests_TestDataStore_ControlFlow479_LiteralUnlimitedNatural480);
			fUML_Tests_TestDataStore_FinalNode.reset(new ActivityFinalNode());
			this->addToElementRepository("FinalNode", fUML_Tests_TestDataStore_FinalNode);
			fUML_Tests_TestDataStore_DecisionNode.reset(new DecisionNode());
			this->addToElementRepository("DecisionNode", fUML_Tests_TestDataStore_DecisionNode);
			fUML_Tests_TestDataStore_ObjectFlow481.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow481", fUML_Tests_TestDataStore_ObjectFlow481);
				fUML_Tests_TestDataStore_ObjectFlow481_LiteralUnlimitedNatural482.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural482", fUML_Tests_TestDataStore_ObjectFlow481_LiteralUnlimitedNatural482);
			fUML_Tests_TestDataStore_Value_3.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(3)", fUML_Tests_TestDataStore_Value_3);
				fUML_Tests_TestDataStore_Value_3_Value_3_result.reset(new OutputPin());
				this->addToElementRepository("Value(3).result", fUML_Tests_TestDataStore_Value_3_Value_3_result);
				fUML_Tests_TestDataStore_Value_3_LiteralInteger483.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger483", fUML_Tests_TestDataStore_Value_3_LiteralInteger483);
			fUML_Tests_TestDataStore_ControlFlow484.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow484", fUML_Tests_TestDataStore_ControlFlow484);
				fUML_Tests_TestDataStore_ControlFlow484_LiteralUnlimitedNatural485.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural485", fUML_Tests_TestDataStore_ControlFlow484_LiteralUnlimitedNatural485);
			fUML_Tests_TestDataStore_Value_2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2)", fUML_Tests_TestDataStore_Value_2);
				fUML_Tests_TestDataStore_Value_2_Value_2_result.reset(new OutputPin());
				this->addToElementRepository("Value(2).result", fUML_Tests_TestDataStore_Value_2_Value_2_result);
				fUML_Tests_TestDataStore_Value_2_LiteralInteger486.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger486", fUML_Tests_TestDataStore_Value_2_LiteralInteger486);
			fUML_Tests_TestDataStore_ControlFlow487.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow487", fUML_Tests_TestDataStore_ControlFlow487);
				fUML_Tests_TestDataStore_ControlFlow487_LiteralUnlimitedNatural488.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural488", fUML_Tests_TestDataStore_ControlFlow487_LiteralUnlimitedNatural488);
				fUML_Tests_TestDataStore_ControlFlow487_LiteralInteger489.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger489", fUML_Tests_TestDataStore_ControlFlow487_LiteralInteger489);
			fUML_Tests_TestDataStore_ControlFlow490.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow490", fUML_Tests_TestDataStore_ControlFlow490);
				fUML_Tests_TestDataStore_ControlFlow490_LiteralUnlimitedNatural491.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural491", fUML_Tests_TestDataStore_ControlFlow490_LiteralUnlimitedNatural491);
			fUML_Tests_TestDataStore_Merge1.reset(new MergeNode());
			this->addToElementRepository("Merge1", fUML_Tests_TestDataStore_Merge1);
			fUML_Tests_TestDataStore_InitialNode492.reset(new InitialNode());
			this->addToElementRepository("InitialNode492", fUML_Tests_TestDataStore_InitialNode492);
			fUML_Tests_TestDataStore_ObjectFlow493.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow493", fUML_Tests_TestDataStore_ObjectFlow493);
				fUML_Tests_TestDataStore_ObjectFlow493_LiteralUnlimitedNatural494.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural494", fUML_Tests_TestDataStore_ObjectFlow493_LiteralUnlimitedNatural494);
			fUML_Tests_TestDataStore_ObjectFlow495.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow495", fUML_Tests_TestDataStore_ObjectFlow495);
				fUML_Tests_TestDataStore_ObjectFlow495_LiteralUnlimitedNatural496.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural496", fUML_Tests_TestDataStore_ObjectFlow495_LiteralUnlimitedNatural496);
			fUML_Tests_TestDataStore_ControlFlow497.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow497", fUML_Tests_TestDataStore_ControlFlow497);
				fUML_Tests_TestDataStore_ControlFlow497_LiteralUnlimitedNatural498.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural498", fUML_Tests_TestDataStore_ControlFlow497_LiteralUnlimitedNatural498);
			fUML_Tests_TestDataStore_output.reset(new Parameter());
			this->addToElementRepository("output", fUML_Tests_TestDataStore_output);
				fUML_Tests_TestDataStore_output_LiteralUnlimitedNatural499.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural499", fUML_Tests_TestDataStore_output_LiteralUnlimitedNatural499);
				fUML_Tests_TestDataStore_output_LiteralInteger500.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger500", fUML_Tests_TestDataStore_output_LiteralInteger500);
			fUML_Tests_TestDataStore_ControlFlow501.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow501", fUML_Tests_TestDataStore_ControlFlow501);
				fUML_Tests_TestDataStore_ControlFlow501_LiteralUnlimitedNatural502.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural502", fUML_Tests_TestDataStore_ControlFlow501_LiteralUnlimitedNatural502);
			fUML_Tests_TestDataStore_ControlFlow503.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow503", fUML_Tests_TestDataStore_ControlFlow503);
				fUML_Tests_TestDataStore_ControlFlow503_LiteralInteger504.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger504", fUML_Tests_TestDataStore_ControlFlow503_LiteralInteger504);
				fUML_Tests_TestDataStore_ControlFlow503_LiteralUnlimitedNatural505.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural505", fUML_Tests_TestDataStore_ControlFlow503_LiteralUnlimitedNatural505);
			fUML_Tests_TestDataStore_ControlFlow506.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow506", fUML_Tests_TestDataStore_ControlFlow506);
				fUML_Tests_TestDataStore_ControlFlow506_LiteralUnlimitedNatural507.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural507", fUML_Tests_TestDataStore_ControlFlow506_LiteralUnlimitedNatural507);
			fUML_Tests_TestDataStore_ObjectFlow508.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow508", fUML_Tests_TestDataStore_ObjectFlow508);
				fUML_Tests_TestDataStore_ObjectFlow508_LiteralUnlimitedNatural509.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural509", fUML_Tests_TestDataStore_ObjectFlow508_LiteralUnlimitedNatural509);
			fUML_Tests_TestDataStore_Merge3.reset(new MergeNode());
			this->addToElementRepository("Merge3", fUML_Tests_TestDataStore_Merge3);
			fUML_Tests_TestDataStore_ControlFlow510.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow510", fUML_Tests_TestDataStore_ControlFlow510);
				fUML_Tests_TestDataStore_ControlFlow510_LiteralUnlimitedNatural511.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural511", fUML_Tests_TestDataStore_ControlFlow510_LiteralUnlimitedNatural511);
			fUML_Tests_TestDataStore_ControlFlow512.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow512", fUML_Tests_TestDataStore_ControlFlow512);
				fUML_Tests_TestDataStore_ControlFlow512_LiteralInteger513.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger513", fUML_Tests_TestDataStore_ControlFlow512_LiteralInteger513);
				fUML_Tests_TestDataStore_ControlFlow512_LiteralUnlimitedNatural514.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural514", fUML_Tests_TestDataStore_ControlFlow512_LiteralUnlimitedNatural514);
			fUML_Tests_TestDataStore_ControlFlow515.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow515", fUML_Tests_TestDataStore_ControlFlow515);
				fUML_Tests_TestDataStore_ControlFlow515_LiteralUnlimitedNatural516.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural516", fUML_Tests_TestDataStore_ControlFlow515_LiteralUnlimitedNatural516);
			fUML_Tests_TestDataStore_DataStoreNode.reset(new DataStoreNode());
			this->addToElementRepository("DataStoreNode", fUML_Tests_TestDataStore_DataStoreNode);
			fUML_Tests_TestDataStore_ObjectFlow517.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow517", fUML_Tests_TestDataStore_ObjectFlow517);
				fUML_Tests_TestDataStore_ObjectFlow517_LiteralUnlimitedNatural518.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural518", fUML_Tests_TestDataStore_ObjectFlow517_LiteralUnlimitedNatural518);
			fUML_Tests_TestDataStore_ControlFlow519.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow519", fUML_Tests_TestDataStore_ControlFlow519);
				fUML_Tests_TestDataStore_ControlFlow519_LiteralUnlimitedNatural520.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural520", fUML_Tests_TestDataStore_ControlFlow519_LiteralUnlimitedNatural520);
			fUML_Tests_TestDataStore_ObjectFlow521.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow521", fUML_Tests_TestDataStore_ObjectFlow521);
				fUML_Tests_TestDataStore_ObjectFlow521_LiteralUnlimitedNatural522.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural522", fUML_Tests_TestDataStore_ObjectFlow521_LiteralUnlimitedNatural522);
		fUML_Tests_Subclass1.reset(new Class_());
		this->addToElementRepository("Subclass1", fUML_Tests_Subclass1);
			fUML_Tests_Subclass1_Generalization523.reset(new Generalization());
			this->addToElementRepository("Generalization523", fUML_Tests_Subclass1_Generalization523);
			fUML_Tests_Subclass1_a.reset(new Property());
			this->addToElementRepository("a", fUML_Tests_Subclass1_a);
		fUML_Tests_TestSimpleActivities.reset(new Activity());
		this->addToElementRepository("TestSimpleActivities", fUML_Tests_TestSimpleActivities);
			fUML_Tests_TestSimpleActivities_ControlFlow524.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow524", fUML_Tests_TestSimpleActivities_ControlFlow524);
				fUML_Tests_TestSimpleActivities_ControlFlow524_LiteralInteger525.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger525", fUML_Tests_TestSimpleActivities_ControlFlow524_LiteralInteger525);
			fUML_Tests_TestSimpleActivities_ObjectFlow526.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow526", fUML_Tests_TestSimpleActivities_ObjectFlow526);
				fUML_Tests_TestSimpleActivities_ObjectFlow526_LiteralInteger527.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger527", fUML_Tests_TestSimpleActivities_ObjectFlow526_LiteralInteger527);
			fUML_Tests_TestSimpleActivities_ControlFlow528.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow528", fUML_Tests_TestSimpleActivities_ControlFlow528);
				fUML_Tests_TestSimpleActivities_ControlFlow528_LiteralInteger529.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger529", fUML_Tests_TestSimpleActivities_ControlFlow528_LiteralInteger529);
			fUML_Tests_TestSimpleActivities_Call_CopierCaller.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(CopierCaller)", fUML_Tests_TestSimpleActivities_Call_CopierCaller);
				fUML_Tests_TestSimpleActivities_Call_CopierCaller_CopierCaller_output.reset(new OutputPin());
				this->addToElementRepository("CopierCaller.output", fUML_Tests_TestSimpleActivities_Call_CopierCaller_CopierCaller_output);
			fUML_Tests_TestSimpleActivities_ObjectFlow530.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow530", fUML_Tests_TestSimpleActivities_ObjectFlow530);
				fUML_Tests_TestSimpleActivities_ObjectFlow530_LiteralInteger531.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger531", fUML_Tests_TestSimpleActivities_ObjectFlow530_LiteralInteger531);
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0.reset(new Parameter());
			this->addToElementRepository("SimpleDecision_0.output_0", fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0);
				fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0_LiteralInteger532.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger532", fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0_LiteralInteger532);
				fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0_LiteralUnlimitedNatural533.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural533", fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0_LiteralUnlimitedNatural533);
			fUML_Tests_TestSimpleActivities_Value_0.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(0)", fUML_Tests_TestSimpleActivities_Value_0);
				fUML_Tests_TestSimpleActivities_Value_0_LiteralInteger534.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger534", fUML_Tests_TestSimpleActivities_Value_0_LiteralInteger534);
				fUML_Tests_TestSimpleActivities_Value_0_Value_0_result.reset(new OutputPin());
				this->addToElementRepository("Value(0).result", fUML_Tests_TestSimpleActivities_Value_0_Value_0_result);
					fUML_Tests_TestSimpleActivities_Value_0_Value_0_result_LiteralUnlimitedNatural535.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural535", fUML_Tests_TestSimpleActivities_Value_0_Value_0_result_LiteralUnlimitedNatural535);
					fUML_Tests_TestSimpleActivities_Value_0_Value_0_result_LiteralInteger536.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger536", fUML_Tests_TestSimpleActivities_Value_0_Value_0_result_LiteralInteger536);
			fUML_Tests_TestSimpleActivities_Value_1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)", fUML_Tests_TestSimpleActivities_Value_1);
				fUML_Tests_TestSimpleActivities_Value_1_LiteralInteger537.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger537", fUML_Tests_TestSimpleActivities_Value_1_LiteralInteger537);
				fUML_Tests_TestSimpleActivities_Value_1_Value_1_result.reset(new OutputPin());
				this->addToElementRepository("Value(1).result", fUML_Tests_TestSimpleActivities_Value_1_Value_1_result);
					fUML_Tests_TestSimpleActivities_Value_1_Value_1_result_LiteralInteger538.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger538", fUML_Tests_TestSimpleActivities_Value_1_Value_1_result_LiteralInteger538);
					fUML_Tests_TestSimpleActivities_Value_1_Value_1_result_LiteralUnlimitedNatural539.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural539", fUML_Tests_TestSimpleActivities_Value_1_Value_1_result_LiteralUnlimitedNatural539);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_1.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(SimpleDecision_0.output_1)", fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_1);
			fUML_Tests_TestSimpleActivities_ControlFlow540.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow540", fUML_Tests_TestSimpleActivities_ControlFlow540);
				fUML_Tests_TestSimpleActivities_ControlFlow540_LiteralInteger541.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger541", fUML_Tests_TestSimpleActivities_ControlFlow540_LiteralInteger541);
			fUML_Tests_TestSimpleActivities_Call_ForkMergeData.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(ForkMergeData)", fUML_Tests_TestSimpleActivities_Call_ForkMergeData);
				fUML_Tests_TestSimpleActivities_Call_ForkMergeData_ForkMergeData_output.reset(new OutputPin());
				this->addToElementRepository("ForkMergeData.output", fUML_Tests_TestSimpleActivities_Call_ForkMergeData_ForkMergeData_output);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(SimpleDecision_1)", fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_testValue.reset(new InputPin());
				this->addToElementRepository("SimpleDecision_1.testValue", fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_testValue);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_0.reset(new OutputPin());
				this->addToElementRepository("SimpleDecision_1.output_0", fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_0);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_1.reset(new OutputPin());
				this->addToElementRepository("SimpleDecision_1.output_1", fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_1);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(SimpleDecision_0)", fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_testValue.reset(new InputPin());
				this->addToElementRepository("SimpleDecision_0.testValue", fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_testValue);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDcision_0_output_1.reset(new OutputPin());
				this->addToElementRepository("SimpleDcision_0.output_1", fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDcision_0_output_1);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_output_0.reset(new OutputPin());
				this->addToElementRepository("SimpleDecision_0.output_0", fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_output_0);
			fUML_Tests_TestSimpleActivities_Parameter_ForkMerge.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(ForkMerge)", fUML_Tests_TestSimpleActivities_Parameter_ForkMerge);
			fUML_Tests_TestSimpleActivities_ObjectFlow542.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow542", fUML_Tests_TestSimpleActivities_ObjectFlow542);
				fUML_Tests_TestSimpleActivities_ObjectFlow542_LiteralInteger543.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger543", fUML_Tests_TestSimpleActivities_ObjectFlow542_LiteralInteger543);
			fUML_Tests_TestSimpleActivities_Call_Copier.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Copier)", fUML_Tests_TestSimpleActivities_Call_Copier);
				fUML_Tests_TestSimpleActivities_Call_Copier_Copier_output.reset(new OutputPin());
				this->addToElementRepository("Copier.output", fUML_Tests_TestSimpleActivities_Call_Copier_Copier_output);
				fUML_Tests_TestSimpleActivities_Call_Copier_Copier_input.reset(new InputPin());
				this->addToElementRepository("Copier.input", fUML_Tests_TestSimpleActivities_Call_Copier_Copier_input);
			fUML_Tests_TestSimpleActivities_ControlFlow544.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow544", fUML_Tests_TestSimpleActivities_ControlFlow544);
				fUML_Tests_TestSimpleActivities_ControlFlow544_LiteralInteger545.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger545", fUML_Tests_TestSimpleActivities_ControlFlow544_LiteralInteger545);
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1.reset(new Parameter());
			this->addToElementRepository("SimpleDecision_0.output_1", fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1);
				fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1_LiteralInteger546.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger546", fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1_LiteralInteger546);
				fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1_LiteralUnlimitedNatural547.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural547", fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1_LiteralUnlimitedNatural547);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0.reset(new Parameter());
			this->addToElementRepository("SimpleDecision_1.output_0", fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0);
				fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0_LiteralUnlimitedNatural548.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural548", fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0_LiteralUnlimitedNatural548);
				fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0_LiteralInteger549.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger549", fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0_LiteralInteger549);
			fUML_Tests_TestSimpleActivities_ObjectFlow550.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow550", fUML_Tests_TestSimpleActivities_ObjectFlow550);
				fUML_Tests_TestSimpleActivities_ObjectFlow550_LiteralInteger551.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger551", fUML_Tests_TestSimpleActivities_ObjectFlow550_LiteralInteger551);
			fUML_Tests_TestSimpleActivities_ObjectFlow552.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow552", fUML_Tests_TestSimpleActivities_ObjectFlow552);
				fUML_Tests_TestSimpleActivities_ObjectFlow552_LiteralInteger553.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger553", fUML_Tests_TestSimpleActivities_ObjectFlow552_LiteralInteger553);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_0.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(SimpleDecision_0.output_0)", fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_0);
			fUML_Tests_TestSimpleActivities_ObjectFlow554.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow554", fUML_Tests_TestSimpleActivities_ObjectFlow554);
				fUML_Tests_TestSimpleActivities_ObjectFlow554_LiteralInteger555.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger555", fUML_Tests_TestSimpleActivities_ObjectFlow554_LiteralInteger555);
			fUML_Tests_TestSimpleActivities_ObjectFlow556.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow556", fUML_Tests_TestSimpleActivities_ObjectFlow556);
				fUML_Tests_TestSimpleActivities_ObjectFlow556_LiteralInteger557.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger557", fUML_Tests_TestSimpleActivities_ObjectFlow556_LiteralInteger557);
			fUML_Tests_TestSimpleActivities_Copier_output.reset(new Parameter());
			this->addToElementRepository("Copier.output", fUML_Tests_TestSimpleActivities_Copier_output);
				fUML_Tests_TestSimpleActivities_Copier_output_LiteralUnlimitedNatural558.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural558", fUML_Tests_TestSimpleActivities_Copier_output_LiteralUnlimitedNatural558);
				fUML_Tests_TestSimpleActivities_Copier_output_LiteralInteger559.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger559", fUML_Tests_TestSimpleActivities_Copier_output_LiteralInteger559);
			fUML_Tests_TestSimpleActivities_ObjectFlow560.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow560", fUML_Tests_TestSimpleActivities_ObjectFlow560);
				fUML_Tests_TestSimpleActivities_ObjectFlow560_LiteralInteger561.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger561", fUML_Tests_TestSimpleActivities_ObjectFlow560_LiteralInteger561);
			fUML_Tests_TestSimpleActivities_DecisionJoin_output.reset(new Parameter());
			this->addToElementRepository("DecisionJoin.output", fUML_Tests_TestSimpleActivities_DecisionJoin_output);
				fUML_Tests_TestSimpleActivities_DecisionJoin_output_LiteralUnlimitedNatural562.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural562", fUML_Tests_TestSimpleActivities_DecisionJoin_output_LiteralUnlimitedNatural562);
				fUML_Tests_TestSimpleActivities_DecisionJoin_output_LiteralUnlimitedNatural563.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural563", fUML_Tests_TestSimpleActivities_DecisionJoin_output_LiteralUnlimitedNatural563);
			fUML_Tests_TestSimpleActivities_Fork_0.reset(new ForkNode());
			this->addToElementRepository("Fork_0", fUML_Tests_TestSimpleActivities_Fork_0);
			fUML_Tests_TestSimpleActivities_Parameter_CopierCaller_output.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(CopierCaller.output)", fUML_Tests_TestSimpleActivities_Parameter_CopierCaller_output);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1.reset(new Parameter());
			this->addToElementRepository("SimpleDecision_1.output_1", fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1);
				fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1_LiteralInteger564.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger564", fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1_LiteralInteger564);
				fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1_LiteralUnlimitedNatural565.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural565", fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1_LiteralUnlimitedNatural565);
			fUML_Tests_TestSimpleActivities_Parameter_ForkMergeData_output.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(ForkMergeData.output)", fUML_Tests_TestSimpleActivities_Parameter_ForkMergeData_output);
			fUML_Tests_TestSimpleActivities_Call_ForkJoin.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(ForkJoin)", fUML_Tests_TestSimpleActivities_Call_ForkJoin);
			fUML_Tests_TestSimpleActivities_ForkMergeData_output.reset(new Parameter());
			this->addToElementRepository("ForkMergeData.output", fUML_Tests_TestSimpleActivities_ForkMergeData_output);
				fUML_Tests_TestSimpleActivities_ForkMergeData_output_LiteralUnlimitedNatural566.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural566", fUML_Tests_TestSimpleActivities_ForkMergeData_output_LiteralUnlimitedNatural566);
				fUML_Tests_TestSimpleActivities_ForkMergeData_output_LiteralUnlimitedNatural567.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural567", fUML_Tests_TestSimpleActivities_ForkMergeData_output_LiteralUnlimitedNatural567);
			fUML_Tests_TestSimpleActivities_Call_DecisionJoin.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(DecisionJoin)", fUML_Tests_TestSimpleActivities_Call_DecisionJoin);
				fUML_Tests_TestSimpleActivities_Call_DecisionJoin_DecisionJoin_output.reset(new OutputPin());
				this->addToElementRepository("DecisionJoin.output", fUML_Tests_TestSimpleActivities_Call_DecisionJoin_DecisionJoin_output);
			fUML_Tests_TestSimpleActivities_ControlFlow568.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow568", fUML_Tests_TestSimpleActivities_ControlFlow568);
				fUML_Tests_TestSimpleActivities_ControlFlow568_LiteralInteger569.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger569", fUML_Tests_TestSimpleActivities_ControlFlow568_LiteralInteger569);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_1_output_0.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(SimpleDecision_1.output_0)", fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_1_output_0);
			fUML_Tests_TestSimpleActivities_ForkMerge.reset(new Parameter());
			this->addToElementRepository("ForkMerge", fUML_Tests_TestSimpleActivities_ForkMerge);
				fUML_Tests_TestSimpleActivities_ForkMerge_LiteralUnlimitedNatural570.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural570", fUML_Tests_TestSimpleActivities_ForkMerge_LiteralUnlimitedNatural570);
				fUML_Tests_TestSimpleActivities_ForkMerge_LiteralUnlimitedNatural571.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural571", fUML_Tests_TestSimpleActivities_ForkMerge_LiteralUnlimitedNatural571);
			fUML_Tests_TestSimpleActivities_ObjectFlow572.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow572", fUML_Tests_TestSimpleActivities_ObjectFlow572);
				fUML_Tests_TestSimpleActivities_ObjectFlow572_LiteralInteger573.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger573", fUML_Tests_TestSimpleActivities_ObjectFlow572_LiteralInteger573);
			fUML_Tests_TestSimpleActivities_ObjectFlow574.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow574", fUML_Tests_TestSimpleActivities_ObjectFlow574);
				fUML_Tests_TestSimpleActivities_ObjectFlow574_LiteralInteger575.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger575", fUML_Tests_TestSimpleActivities_ObjectFlow574_LiteralInteger575);
			fUML_Tests_TestSimpleActivities_Parameter_DecisionJoin_output.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(DecisionJoin.output)", fUML_Tests_TestSimpleActivities_Parameter_DecisionJoin_output);
			fUML_Tests_TestSimpleActivities_ObjectFlow576.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow576", fUML_Tests_TestSimpleActivities_ObjectFlow576);
				fUML_Tests_TestSimpleActivities_ObjectFlow576_LiteralInteger577.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger577", fUML_Tests_TestSimpleActivities_ObjectFlow576_LiteralInteger577);
			fUML_Tests_TestSimpleActivities_ControlFlow578.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow578", fUML_Tests_TestSimpleActivities_ControlFlow578);
				fUML_Tests_TestSimpleActivities_ControlFlow578_LiteralInteger579.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger579", fUML_Tests_TestSimpleActivities_ControlFlow578_LiteralInteger579);
			fUML_Tests_TestSimpleActivities_CopierCaller_output.reset(new Parameter());
			this->addToElementRepository("CopierCaller.output", fUML_Tests_TestSimpleActivities_CopierCaller_output);
				fUML_Tests_TestSimpleActivities_CopierCaller_output_LiteralInteger580.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger580", fUML_Tests_TestSimpleActivities_CopierCaller_output_LiteralInteger580);
				fUML_Tests_TestSimpleActivities_CopierCaller_output_LiteralUnlimitedNatural581.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural581", fUML_Tests_TestSimpleActivities_CopierCaller_output_LiteralUnlimitedNatural581);
			fUML_Tests_TestSimpleActivities_ObjectFlow582.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow582", fUML_Tests_TestSimpleActivities_ObjectFlow582);
				fUML_Tests_TestSimpleActivities_ObjectFlow582_LiteralInteger583.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger583", fUML_Tests_TestSimpleActivities_ObjectFlow582_LiteralInteger583);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1Node.reset(new ActivityParameterNode());
			this->addToElementRepository("SimpleDecision_1.output_1Node", fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1Node);
			fUML_Tests_TestSimpleActivities_ObjectFlow584.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow584", fUML_Tests_TestSimpleActivities_ObjectFlow584);
				fUML_Tests_TestSimpleActivities_ObjectFlow584_LiteralInteger585.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger585", fUML_Tests_TestSimpleActivities_ObjectFlow584_LiteralInteger585);
			fUML_Tests_TestSimpleActivities_Parameter_Copier_output.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(Copier.output)", fUML_Tests_TestSimpleActivities_Parameter_Copier_output);
			fUML_Tests_TestSimpleActivities_ControlFlow586.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow586", fUML_Tests_TestSimpleActivities_ControlFlow586);
				fUML_Tests_TestSimpleActivities_ControlFlow586_LiteralInteger587.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger587", fUML_Tests_TestSimpleActivities_ControlFlow586_LiteralInteger587);
			fUML_Tests_TestSimpleActivities_Call_ForkMerge.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(ForkMerge)", fUML_Tests_TestSimpleActivities_Call_ForkMerge);
				fUML_Tests_TestSimpleActivities_Call_ForkMerge_ForkMerge_output.reset(new OutputPin());
				this->addToElementRepository("ForkMerge.output", fUML_Tests_TestSimpleActivities_Call_ForkMerge_ForkMerge_output);
		fUML_Tests_ActiveClass.reset(new Class_());
		this->addToElementRepository("ActiveClass", fUML_Tests_ActiveClass);
			fUML_Tests_ActiveClass_signal1.reset(new Property());
			this->addToElementRepository("signal1", fUML_Tests_ActiveClass_signal1);
			fUML_Tests_ActiveClass_signal2.reset(new Property());
			this->addToElementRepository("signal2", fUML_Tests_ActiveClass_signal2);
			fUML_Tests_ActiveClass_ActiveClassBehavior.reset(new Activity());
			this->addToElementRepository("ActiveClassBehavior", fUML_Tests_ActiveClass_ActiveClassBehavior);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow588.reset(new ObjectFlow());
				this->addToElementRepository("ObjectFlow588", fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow588);
					fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow588_LiteralUnlimitedNatural589.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural589", fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow588_LiteralUnlimitedNatural589);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2.reset(new AddStructuralFeatureValueAction());
				this->addToElementRepository("Write(signal2)", fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_value.reset(new InputPin());
					this->addToElementRepository("Write(signal2).value", fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_value);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_object.reset(new InputPin());
					this->addToElementRepository("Write(signal2).object", fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_object);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow590.reset(new ObjectFlow());
				this->addToElementRepository("ObjectFlow590", fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow590);
					fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow590_LiteralUnlimitedNatural591.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural591", fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow590_LiteralUnlimitedNatural591);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf.reset(new ReadSelfAction());
				this->addToElementRepository("ReadSelf", fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf);
					fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf_self.reset(new OutputPin());
					this->addToElementRepository("self", fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf_self);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal.reset(new AcceptEventAction());
				this->addToElementRepository("Accept(OtherSignal)", fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Trigger592.reset(new Trigger());
					this->addToElementRepository("Trigger592", fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Trigger592);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Accept_OtherSignal_result.reset(new OutputPin());
					this->addToElementRepository("Accept(OtherSignal).result", fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Accept_OtherSignal_result);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Fork_self.reset(new ForkNode());
				this->addToElementRepository("Fork(self)", fUML_Tests_ActiveClass_ActiveClassBehavior_Fork_self);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal.reset(new AcceptEventAction());
				this->addToElementRepository("Accept(TestSignal)", fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Accept_TestSignal_result.reset(new OutputPin());
					this->addToElementRepository("Accept(TestSignal).result", fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Accept_TestSignal_result);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Trigger593.reset(new Trigger());
					this->addToElementRepository("Trigger593", fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Trigger593);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow594.reset(new ObjectFlow());
				this->addToElementRepository("ObjectFlow594", fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow594);
					fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow594_LiteralUnlimitedNatural595.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural595", fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow594_LiteralUnlimitedNatural595);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow596.reset(new ObjectFlow());
				this->addToElementRepository("ObjectFlow596", fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow596);
					fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow596_LiteralUnlimitedNatural597.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural597", fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow596_LiteralUnlimitedNatural597);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1.reset(new AddStructuralFeatureValueAction());
				this->addToElementRepository("Write(signal1)", fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_object.reset(new InputPin());
					this->addToElementRepository("Write(signal1).object", fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_object);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_value.reset(new InputPin());
					this->addToElementRepository("Write(signal1).value", fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_value);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow598.reset(new ObjectFlow());
				this->addToElementRepository("ObjectFlow598", fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow598);
					fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow598_LiteralUnlimitedNatural599.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural599", fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow598_LiteralUnlimitedNatural599);
		fUML_Tests_TestSignalReceiver.reset(new Activity());
		this->addToElementRepository("TestSignalReceiver", fUML_Tests_TestSignalReceiver);
			fUML_Tests_TestSignalReceiver_Fork_signal.reset(new ForkNode());
			this->addToElementRepository("Fork(signal)", fUML_Tests_TestSignalReceiver_Fork_signal);
			fUML_Tests_TestSignalReceiver_signal.reset(new Property());
			this->addToElementRepository("signal", fUML_Tests_TestSignalReceiver_signal);
				fUML_Tests_TestSignalReceiver_signal_LiteralUnlimitedNatural600.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural600", fUML_Tests_TestSignalReceiver_signal_LiteralUnlimitedNatural600);
				fUML_Tests_TestSignalReceiver_signal_LiteralInteger601.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger601", fUML_Tests_TestSignalReceiver_signal_LiteralInteger601);
			fUML_Tests_TestSignalReceiver_Accept_TestSignal.reset(new AcceptEventAction());
			this->addToElementRepository("Accept(TestSignal)", fUML_Tests_TestSignalReceiver_Accept_TestSignal);
				fUML_Tests_TestSignalReceiver_Accept_TestSignal_Trigger602.reset(new Trigger());
				this->addToElementRepository("Trigger602", fUML_Tests_TestSignalReceiver_Accept_TestSignal_Trigger602);
				fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal.reset(new OutputPin());
				this->addToElementRepository("signal", fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal);
					fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal_LiteralInteger603.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger603", fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal_LiteralInteger603);
					fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal_LiteralUnlimitedNatural604.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural604", fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal_LiteralUnlimitedNatural604);
			fUML_Tests_TestSignalReceiver_InitialNode605.reset(new InitialNode());
			this->addToElementRepository("InitialNode605", fUML_Tests_TestSignalReceiver_InitialNode605);
			fUML_Tests_TestSignalReceiver_ObjectFlow606.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow606", fUML_Tests_TestSignalReceiver_ObjectFlow606);
				fUML_Tests_TestSignalReceiver_ObjectFlow606_LiteralUnlimitedNatural607.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural607", fUML_Tests_TestSignalReceiver_ObjectFlow606_LiteralUnlimitedNatural607);
			fUML_Tests_TestSignalReceiver_ObjectFlow608.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow608", fUML_Tests_TestSignalReceiver_ObjectFlow608);
				fUML_Tests_TestSignalReceiver_ObjectFlow608_LiteralUnlimitedNatural609.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural609", fUML_Tests_TestSignalReceiver_ObjectFlow608_LiteralUnlimitedNatural609);
			fUML_Tests_TestSignalReceiver_testSignalOut.reset(new Parameter());
			this->addToElementRepository("testSignalOut", fUML_Tests_TestSignalReceiver_testSignalOut);
				fUML_Tests_TestSignalReceiver_testSignalOut_LiteralInteger610.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger610", fUML_Tests_TestSignalReceiver_testSignalOut_LiteralInteger610);
				fUML_Tests_TestSignalReceiver_testSignalOut_LiteralUnlimitedNatural611.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural611", fUML_Tests_TestSignalReceiver_testSignalOut_LiteralUnlimitedNatural611);
			fUML_Tests_TestSignalReceiver_ControlFlow612.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow612", fUML_Tests_TestSignalReceiver_ControlFlow612);
				fUML_Tests_TestSignalReceiver_ControlFlow612_LiteralUnlimitedNatural613.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural613", fUML_Tests_TestSignalReceiver_ControlFlow612_LiteralUnlimitedNatural613);
			fUML_Tests_TestSignalReceiver_ControlFlow614.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow614", fUML_Tests_TestSignalReceiver_ControlFlow614);
				fUML_Tests_TestSignalReceiver_ControlFlow614_LiteralUnlimitedNatural615.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural615", fUML_Tests_TestSignalReceiver_ControlFlow614_LiteralUnlimitedNatural615);
			fUML_Tests_TestSignalReceiver_ReadSelf.reset(new ReadSelfAction());
			this->addToElementRepository("ReadSelf", fUML_Tests_TestSignalReceiver_ReadSelf);
				fUML_Tests_TestSignalReceiver_ReadSelf_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestSignalReceiver_ReadSelf_result);
			fUML_Tests_TestSignalReceiver_ObjectFlow616.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow616", fUML_Tests_TestSignalReceiver_ObjectFlow616);
				fUML_Tests_TestSignalReceiver_ObjectFlow616_LiteralUnlimitedNatural617.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural617", fUML_Tests_TestSignalReceiver_ObjectFlow616_LiteralUnlimitedNatural617);
			fUML_Tests_TestSignalReceiver_Write_signal.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(signal)", fUML_Tests_TestSignalReceiver_Write_signal);
				fUML_Tests_TestSignalReceiver_Write_signal_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestSignalReceiver_Write_signal_value);
				fUML_Tests_TestSignalReceiver_Write_signal_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestSignalReceiver_Write_signal_object);
			fUML_Tests_TestSignalReceiver_ObjectFlow618.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow618", fUML_Tests_TestSignalReceiver_ObjectFlow618);
				fUML_Tests_TestSignalReceiver_ObjectFlow618_LiteralUnlimitedNatural619.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural619", fUML_Tests_TestSignalReceiver_ObjectFlow618_LiteralUnlimitedNatural619);
			fUML_Tests_TestSignalReceiver_Output_testSignalOut.reset(new ActivityParameterNode());
			this->addToElementRepository("Output(testSignalOut)", fUML_Tests_TestSignalReceiver_Output_testSignalOut);
		fUML_Tests_TestClassIdentityTester.reset(new Activity());
		this->addToElementRepository("TestClassIdentityTester", fUML_Tests_TestClassIdentityTester);
			fUML_Tests_TestClassIdentityTester_ObjectFlow620.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow620", fUML_Tests_TestClassIdentityTester_ObjectFlow620);
				fUML_Tests_TestClassIdentityTester_ObjectFlow620_LiteralInteger621.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger621", fUML_Tests_TestClassIdentityTester_ObjectFlow620_LiteralInteger621);
			fUML_Tests_TestClassIdentityTester_result.reset(new Parameter());
			this->addToElementRepository("result", fUML_Tests_TestClassIdentityTester_result);
				fUML_Tests_TestClassIdentityTester_result_LiteralUnlimitedNatural622.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural622", fUML_Tests_TestClassIdentityTester_result_LiteralUnlimitedNatural622);
				fUML_Tests_TestClassIdentityTester_result_LiteralInteger623.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger623", fUML_Tests_TestClassIdentityTester_result_LiteralInteger623);
			fUML_Tests_TestClassIdentityTester_Parameter_value1.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(value1)", fUML_Tests_TestClassIdentityTester_Parameter_value1);
			fUML_Tests_TestClassIdentityTester_TestIdentity.reset(new TestIdentityAction());
			this->addToElementRepository("TestIdentity", fUML_Tests_TestClassIdentityTester_TestIdentity);
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_second.reset(new InputPin());
				this->addToElementRepository("TestIdentity.second", fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_second);
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_result.reset(new OutputPin());
				this->addToElementRepository("TestIdentity.result", fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_result);
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_first.reset(new InputPin());
				this->addToElementRepository("TestIdentity.first", fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_first);
			fUML_Tests_TestClassIdentityTester_value1.reset(new Parameter());
			this->addToElementRepository("value1", fUML_Tests_TestClassIdentityTester_value1);
				fUML_Tests_TestClassIdentityTester_value1_LiteralInteger624.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger624", fUML_Tests_TestClassIdentityTester_value1_LiteralInteger624);
				fUML_Tests_TestClassIdentityTester_value1_LiteralUnlimitedNatural625.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural625", fUML_Tests_TestClassIdentityTester_value1_LiteralUnlimitedNatural625);
			fUML_Tests_TestClassIdentityTester_value2.reset(new Parameter());
			this->addToElementRepository("value2", fUML_Tests_TestClassIdentityTester_value2);
				fUML_Tests_TestClassIdentityTester_value2_LiteralUnlimitedNatural626.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural626", fUML_Tests_TestClassIdentityTester_value2_LiteralUnlimitedNatural626);
				fUML_Tests_TestClassIdentityTester_value2_LiteralInteger627.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger627", fUML_Tests_TestClassIdentityTester_value2_LiteralInteger627);
			fUML_Tests_TestClassIdentityTester_Parameter_value2.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(value2)", fUML_Tests_TestClassIdentityTester_Parameter_value2);
			fUML_Tests_TestClassIdentityTester_Parameter_result.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(result)", fUML_Tests_TestClassIdentityTester_Parameter_result);
			fUML_Tests_TestClassIdentityTester_ObjectFlow628.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow628", fUML_Tests_TestClassIdentityTester_ObjectFlow628);
				fUML_Tests_TestClassIdentityTester_ObjectFlow628_LiteralInteger629.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger629", fUML_Tests_TestClassIdentityTester_ObjectFlow628_LiteralInteger629);
			fUML_Tests_TestClassIdentityTester_ObjectFlow630.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow630", fUML_Tests_TestClassIdentityTester_ObjectFlow630);
				fUML_Tests_TestClassIdentityTester_ObjectFlow630_LiteralInteger631.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger631", fUML_Tests_TestClassIdentityTester_ObjectFlow630_LiteralInteger631);
		fUML_Tests_TestNodeEnabler.reset(new Activity());
		this->addToElementRepository("TestNodeEnabler", fUML_Tests_TestNodeEnabler);
			fUML_Tests_TestNodeEnabler_Value_1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)", fUML_Tests_TestNodeEnabler_Value_1);
				fUML_Tests_TestNodeEnabler_Value_1_Value_1_result.reset(new OutputPin());
				this->addToElementRepository("Value(1).result", fUML_Tests_TestNodeEnabler_Value_1_Value_1_result);
				fUML_Tests_TestNodeEnabler_Value_1_LiteralInteger632.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger632", fUML_Tests_TestNodeEnabler_Value_1_LiteralInteger632);
			fUML_Tests_TestNodeEnabler_ObjectFlow633.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow633", fUML_Tests_TestNodeEnabler_ObjectFlow633);
				fUML_Tests_TestNodeEnabler_ObjectFlow633_LiteralUnlimitedNatural634.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural634", fUML_Tests_TestNodeEnabler_ObjectFlow633_LiteralUnlimitedNatural634);
			fUML_Tests_TestNodeEnabler_ObjectFlow635.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow635", fUML_Tests_TestNodeEnabler_ObjectFlow635);
				fUML_Tests_TestNodeEnabler_ObjectFlow635_LiteralUnlimitedNatural636.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural636", fUML_Tests_TestNodeEnabler_ObjectFlow635_LiteralUnlimitedNatural636);
			fUML_Tests_TestNodeEnabler_output.reset(new Parameter());
			this->addToElementRepository("output", fUML_Tests_TestNodeEnabler_output);
				fUML_Tests_TestNodeEnabler_output_LiteralUnlimitedNatural637.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural637", fUML_Tests_TestNodeEnabler_output_LiteralUnlimitedNatural637);
				fUML_Tests_TestNodeEnabler_output_LiteralInteger638.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger638", fUML_Tests_TestNodeEnabler_output_LiteralInteger638);
			fUML_Tests_TestNodeEnabler_Call_NodeEnabler.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(NodeEnabler)", fUML_Tests_TestNodeEnabler_Call_NodeEnabler);
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output.reset(new OutputPin());
				this->addToElementRepository("Call(NodeEnabler).output", fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output);
					fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output_LiteralUnlimitedNatural639.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural639", fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output_LiteralUnlimitedNatural639);
					fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output_LiteralInteger640.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger640", fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output_LiteralInteger640);
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input.reset(new InputPin());
				this->addToElementRepository("Call(NodeEnabler).input", fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input);
					fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input_LiteralUnlimitedNatural641.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural641", fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input_LiteralUnlimitedNatural641);
					fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input_LiteralInteger642.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger642", fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input_LiteralInteger642);
			fUML_Tests_TestNodeEnabler_outputNode.reset(new ActivityParameterNode());
			this->addToElementRepository("outputNode", fUML_Tests_TestNodeEnabler_outputNode);
		fUML_Tests_TestIntegerFunctions.reset(new Activity());
		this->addToElementRepository("TestIntegerFunctions", fUML_Tests_TestIntegerFunctions);
			fUML_Tests_TestIntegerFunctions_ObjectFlow643.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow643", fUML_Tests_TestIntegerFunctions_ObjectFlow643);
				fUML_Tests_TestIntegerFunctions_ObjectFlow643_LiteralInteger644.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger644", fUML_Tests_TestIntegerFunctions_ObjectFlow643_LiteralInteger644);
			fUML_Tests_TestIntegerFunctions_ObjectFlow645.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow645", fUML_Tests_TestIntegerFunctions_ObjectFlow645);
				fUML_Tests_TestIntegerFunctions_ObjectFlow645_LiteralInteger646.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger646", fUML_Tests_TestIntegerFunctions_ObjectFlow645_LiteralInteger646);
			fUML_Tests_TestIntegerFunctions_ObjectFlow647.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow647", fUML_Tests_TestIntegerFunctions_ObjectFlow647);
				fUML_Tests_TestIntegerFunctions_ObjectFlow647_LiteralInteger648.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger648", fUML_Tests_TestIntegerFunctions_ObjectFlow647_LiteralInteger648);
			fUML_Tests_TestIntegerFunctions_MaxResult.reset(new Parameter());
			this->addToElementRepository("MaxResult", fUML_Tests_TestIntegerFunctions_MaxResult);
			fUML_Tests_TestIntegerFunctions_ControlFlow649.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow649", fUML_Tests_TestIntegerFunctions_ControlFlow649);
				fUML_Tests_TestIntegerFunctions_ControlFlow649_LiteralInteger650.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger650", fUML_Tests_TestIntegerFunctions_ControlFlow649_LiteralInteger650);
			fUML_Tests_TestIntegerFunctions_Call_Div.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Div)", fUML_Tests_TestIntegerFunctions_Call_Div);
				fUML_Tests_TestIntegerFunctions_Call_Div_Div_x.reset(new InputPin());
				this->addToElementRepository("Div.x", fUML_Tests_TestIntegerFunctions_Call_Div_Div_x);
					fUML_Tests_TestIntegerFunctions_Call_Div_Div_x_LiteralUnlimitedNatural651.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural651", fUML_Tests_TestIntegerFunctions_Call_Div_Div_x_LiteralUnlimitedNatural651);
					fUML_Tests_TestIntegerFunctions_Call_Div_Div_x_LiteralInteger652.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger652", fUML_Tests_TestIntegerFunctions_Call_Div_Div_x_LiteralInteger652);
				fUML_Tests_TestIntegerFunctions_Call_Div_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestIntegerFunctions_Call_Div_result);
					fUML_Tests_TestIntegerFunctions_Call_Div_result_LiteralUnlimitedNatural653.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural653", fUML_Tests_TestIntegerFunctions_Call_Div_result_LiteralUnlimitedNatural653);
					fUML_Tests_TestIntegerFunctions_Call_Div_result_LiteralInteger654.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger654", fUML_Tests_TestIntegerFunctions_Call_Div_result_LiteralInteger654);
				fUML_Tests_TestIntegerFunctions_Call_Div_Div_y.reset(new InputPin());
				this->addToElementRepository("Div.y", fUML_Tests_TestIntegerFunctions_Call_Div_Div_y);
					fUML_Tests_TestIntegerFunctions_Call_Div_Div_y_LiteralInteger655.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger655", fUML_Tests_TestIntegerFunctions_Call_Div_Div_y_LiteralInteger655);
					fUML_Tests_TestIntegerFunctions_Call_Div_Div_y_LiteralUnlimitedNatural656.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural656", fUML_Tests_TestIntegerFunctions_Call_Div_Div_y_LiteralUnlimitedNatural656);
			fUML_Tests_TestIntegerFunctions_Value_neg_2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(neg 2)", fUML_Tests_TestIntegerFunctions_Value_neg_2);
				fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result.reset(new OutputPin());
				this->addToElementRepository("Value(-2).result", fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result);
					fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result_LiteralInteger657.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger657", fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result_LiteralInteger657);
					fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result_LiteralUnlimitedNatural658.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural658", fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result_LiteralUnlimitedNatural658);
				fUML_Tests_TestIntegerFunctions_Value_neg_2_LiteralInteger659.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger659", fUML_Tests_TestIntegerFunctions_Value_neg_2_LiteralInteger659);
			fUML_Tests_TestIntegerFunctions_Value_3.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(3)", fUML_Tests_TestIntegerFunctions_Value_3);
				fUML_Tests_TestIntegerFunctions_Value_3_Value_3_result.reset(new OutputPin());
				this->addToElementRepository("Value(3).result", fUML_Tests_TestIntegerFunctions_Value_3_Value_3_result);
				fUML_Tests_TestIntegerFunctions_Value_3_LiteralInteger660.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger660", fUML_Tests_TestIntegerFunctions_Value_3_LiteralInteger660);
			fUML_Tests_TestIntegerFunctions_ObjectFlow661.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow661", fUML_Tests_TestIntegerFunctions_ObjectFlow661);
				fUML_Tests_TestIntegerFunctions_ObjectFlow661_LiteralInteger662.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger662", fUML_Tests_TestIntegerFunctions_ObjectFlow661_LiteralInteger662);
			fUML_Tests_TestIntegerFunctions_ObjectFlow663.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow663", fUML_Tests_TestIntegerFunctions_ObjectFlow663);
				fUML_Tests_TestIntegerFunctions_ObjectFlow663_LiteralInteger664.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger664", fUML_Tests_TestIntegerFunctions_ObjectFlow663_LiteralInteger664);
			fUML_Tests_TestIntegerFunctions_ControlFlow665.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow665", fUML_Tests_TestIntegerFunctions_ControlFlow665);
				fUML_Tests_TestIntegerFunctions_ControlFlow665_LiteralInteger666.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger666", fUML_Tests_TestIntegerFunctions_ControlFlow665_LiteralInteger666);
			fUML_Tests_TestIntegerFunctions_DivResult.reset(new Parameter());
			this->addToElementRepository("DivResult", fUML_Tests_TestIntegerFunctions_DivResult);
			fUML_Tests_TestIntegerFunctions_AbsResult.reset(new Parameter());
			this->addToElementRepository("AbsResult", fUML_Tests_TestIntegerFunctions_AbsResult);
			fUML_Tests_TestIntegerFunctions_ObjectFlow667.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow667", fUML_Tests_TestIntegerFunctions_ObjectFlow667);
				fUML_Tests_TestIntegerFunctions_ObjectFlow667_LiteralInteger668.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger668", fUML_Tests_TestIntegerFunctions_ObjectFlow667_LiteralInteger668);
			fUML_Tests_TestIntegerFunctions_ObjectFlow669.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow669", fUML_Tests_TestIntegerFunctions_ObjectFlow669);
				fUML_Tests_TestIntegerFunctions_ObjectFlow669_LiteralInteger670.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger670", fUML_Tests_TestIntegerFunctions_ObjectFlow669_LiteralInteger670);
			fUML_Tests_TestIntegerFunctions_Call_Times.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Times)", fUML_Tests_TestIntegerFunctions_Call_Times);
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_x.reset(new InputPin());
				this->addToElementRepository("Times.x", fUML_Tests_TestIntegerFunctions_Call_Times_Times_x);
					fUML_Tests_TestIntegerFunctions_Call_Times_Times_x_LiteralInteger671.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger671", fUML_Tests_TestIntegerFunctions_Call_Times_Times_x_LiteralInteger671);
					fUML_Tests_TestIntegerFunctions_Call_Times_Times_x_LiteralUnlimitedNatural672.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural672", fUML_Tests_TestIntegerFunctions_Call_Times_Times_x_LiteralUnlimitedNatural672);
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_y.reset(new InputPin());
				this->addToElementRepository("Times.y", fUML_Tests_TestIntegerFunctions_Call_Times_Times_y);
					fUML_Tests_TestIntegerFunctions_Call_Times_Times_y_LiteralUnlimitedNatural673.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural673", fUML_Tests_TestIntegerFunctions_Call_Times_Times_y_LiteralUnlimitedNatural673);
					fUML_Tests_TestIntegerFunctions_Call_Times_Times_y_LiteralInteger674.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger674", fUML_Tests_TestIntegerFunctions_Call_Times_Times_y_LiteralInteger674);
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_result.reset(new OutputPin());
				this->addToElementRepository("Times.result", fUML_Tests_TestIntegerFunctions_Call_Times_Times_result);
					fUML_Tests_TestIntegerFunctions_Call_Times_Times_result_LiteralInteger675.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger675", fUML_Tests_TestIntegerFunctions_Call_Times_Times_result_LiteralInteger675);
					fUML_Tests_TestIntegerFunctions_Call_Times_Times_result_LiteralUnlimitedNatural676.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural676", fUML_Tests_TestIntegerFunctions_Call_Times_Times_result_LiteralUnlimitedNatural676);
			fUML_Tests_TestIntegerFunctions_ObjectFlow677.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow677", fUML_Tests_TestIntegerFunctions_ObjectFlow677);
				fUML_Tests_TestIntegerFunctions_ObjectFlow677_LiteralInteger678.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger678", fUML_Tests_TestIntegerFunctions_ObjectFlow677_LiteralInteger678);
			fUML_Tests_TestIntegerFunctions_ObjectFlow679.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow679", fUML_Tests_TestIntegerFunctions_ObjectFlow679);
				fUML_Tests_TestIntegerFunctions_ObjectFlow679_LiteralInteger680.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger680", fUML_Tests_TestIntegerFunctions_ObjectFlow679_LiteralInteger680);
			fUML_Tests_TestIntegerFunctions_Param_AbsResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(AbsResult)", fUML_Tests_TestIntegerFunctions_Param_AbsResult);
			fUML_Tests_TestIntegerFunctions_Call_Mod.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Mod)", fUML_Tests_TestIntegerFunctions_Call_Mod);
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x.reset(new InputPin());
				this->addToElementRepository("Mod.x", fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x);
					fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x_LiteralInteger681.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger681", fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x_LiteralInteger681);
					fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x_LiteralUnlimitedNatural682.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural682", fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x_LiteralUnlimitedNatural682);
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result.reset(new OutputPin());
				this->addToElementRepository("Mod.result", fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result);
					fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result_LiteralUnlimitedNatural683.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural683", fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result_LiteralUnlimitedNatural683);
					fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result_LiteralInteger684.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger684", fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result_LiteralInteger684);
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y.reset(new InputPin());
				this->addToElementRepository("Mod.y", fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y);
					fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y_LiteralInteger685.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger685", fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y_LiteralInteger685);
					fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y_LiteralUnlimitedNatural686.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural686", fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y_LiteralUnlimitedNatural686);
			fUML_Tests_TestIntegerFunctions_Param_TimesResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(TimesResult)", fUML_Tests_TestIntegerFunctions_Param_TimesResult);
			fUML_Tests_TestIntegerFunctions_ObjectFlow687.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow687", fUML_Tests_TestIntegerFunctions_ObjectFlow687);
				fUML_Tests_TestIntegerFunctions_ObjectFlow687_LiteralInteger688.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger688", fUML_Tests_TestIntegerFunctions_ObjectFlow687_LiteralInteger688);
			fUML_Tests_TestIntegerFunctions_ObjectFlow689.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow689", fUML_Tests_TestIntegerFunctions_ObjectFlow689);
				fUML_Tests_TestIntegerFunctions_ObjectFlow689_LiteralInteger690.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger690", fUML_Tests_TestIntegerFunctions_ObjectFlow689_LiteralInteger690);
			fUML_Tests_TestIntegerFunctions_Value_2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2)", fUML_Tests_TestIntegerFunctions_Value_2);
				fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result.reset(new OutputPin());
				this->addToElementRepository("Value(2).result", fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result);
					fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result_LiteralUnlimitedNatural691.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural691", fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result_LiteralUnlimitedNatural691);
				fUML_Tests_TestIntegerFunctions_Value_2_LiteralInteger692.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger692", fUML_Tests_TestIntegerFunctions_Value_2_LiteralInteger692);
			fUML_Tests_TestIntegerFunctions_Param_MinusResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(MinusResult)", fUML_Tests_TestIntegerFunctions_Param_MinusResult);
			fUML_Tests_TestIntegerFunctions_Param_MinResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(MinResult)", fUML_Tests_TestIntegerFunctions_Param_MinResult);
			fUML_Tests_TestIntegerFunctions_Param_PlusResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(PlusResult)", fUML_Tests_TestIntegerFunctions_Param_PlusResult);
			fUML_Tests_TestIntegerFunctions_MinResult.reset(new Parameter());
			this->addToElementRepository("MinResult", fUML_Tests_TestIntegerFunctions_MinResult);
			fUML_Tests_TestIntegerFunctions_ObjectFlow693.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow693", fUML_Tests_TestIntegerFunctions_ObjectFlow693);
				fUML_Tests_TestIntegerFunctions_ObjectFlow693_LiteralInteger694.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger694", fUML_Tests_TestIntegerFunctions_ObjectFlow693_LiteralInteger694);
			fUML_Tests_TestIntegerFunctions_ControlFlow695.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow695", fUML_Tests_TestIntegerFunctions_ControlFlow695);
				fUML_Tests_TestIntegerFunctions_ControlFlow695_LiteralInteger696.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger696", fUML_Tests_TestIntegerFunctions_ControlFlow695_LiteralInteger696);
			fUML_Tests_TestIntegerFunctions_ControlFlow697.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow697", fUML_Tests_TestIntegerFunctions_ControlFlow697);
				fUML_Tests_TestIntegerFunctions_ControlFlow697_LiteralInteger698.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger698", fUML_Tests_TestIntegerFunctions_ControlFlow697_LiteralInteger698);
			fUML_Tests_TestIntegerFunctions_ObjectFlow699.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow699", fUML_Tests_TestIntegerFunctions_ObjectFlow699);
				fUML_Tests_TestIntegerFunctions_ObjectFlow699_LiteralInteger700.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger700", fUML_Tests_TestIntegerFunctions_ObjectFlow699_LiteralInteger700);
			fUML_Tests_TestIntegerFunctions_PlusResult.reset(new Parameter());
			this->addToElementRepository("PlusResult", fUML_Tests_TestIntegerFunctions_PlusResult);
			fUML_Tests_TestIntegerFunctions_ObjectFlow701.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow701", fUML_Tests_TestIntegerFunctions_ObjectFlow701);
				fUML_Tests_TestIntegerFunctions_ObjectFlow701_LiteralInteger702.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger702", fUML_Tests_TestIntegerFunctions_ObjectFlow701_LiteralInteger702);
			fUML_Tests_TestIntegerFunctions_Param_ModResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(ModResult)", fUML_Tests_TestIntegerFunctions_Param_ModResult);
			fUML_Tests_TestIntegerFunctions_Fork_3.reset(new ForkNode());
			this->addToElementRepository("Fork(3)", fUML_Tests_TestIntegerFunctions_Fork_3);
			fUML_Tests_TestIntegerFunctions_Call_Max.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Max)", fUML_Tests_TestIntegerFunctions_Call_Max);
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_y.reset(new InputPin());
				this->addToElementRepository("Max.y", fUML_Tests_TestIntegerFunctions_Call_Max_Max_y);
					fUML_Tests_TestIntegerFunctions_Call_Max_Max_y_LiteralInteger703.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger703", fUML_Tests_TestIntegerFunctions_Call_Max_Max_y_LiteralInteger703);
					fUML_Tests_TestIntegerFunctions_Call_Max_Max_y_LiteralUnlimitedNatural704.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural704", fUML_Tests_TestIntegerFunctions_Call_Max_Max_y_LiteralUnlimitedNatural704);
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_x.reset(new InputPin());
				this->addToElementRepository("Max.x", fUML_Tests_TestIntegerFunctions_Call_Max_Max_x);
					fUML_Tests_TestIntegerFunctions_Call_Max_Max_x_LiteralInteger705.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger705", fUML_Tests_TestIntegerFunctions_Call_Max_Max_x_LiteralInteger705);
					fUML_Tests_TestIntegerFunctions_Call_Max_Max_x_LiteralUnlimitedNatural706.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural706", fUML_Tests_TestIntegerFunctions_Call_Max_Max_x_LiteralUnlimitedNatural706);
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_result.reset(new OutputPin());
				this->addToElementRepository("Max.result", fUML_Tests_TestIntegerFunctions_Call_Max_Max_result);
					fUML_Tests_TestIntegerFunctions_Call_Max_Max_result_LiteralUnlimitedNatural707.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural707", fUML_Tests_TestIntegerFunctions_Call_Max_Max_result_LiteralUnlimitedNatural707);
					fUML_Tests_TestIntegerFunctions_Call_Max_Max_result_LiteralInteger708.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger708", fUML_Tests_TestIntegerFunctions_Call_Max_Max_result_LiteralInteger708);
			fUML_Tests_TestIntegerFunctions_ControlFlow709.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow709", fUML_Tests_TestIntegerFunctions_ControlFlow709);
				fUML_Tests_TestIntegerFunctions_ControlFlow709_LiteralInteger710.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger710", fUML_Tests_TestIntegerFunctions_ControlFlow709_LiteralInteger710);
			fUML_Tests_TestIntegerFunctions_ObjectFlow711.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow711", fUML_Tests_TestIntegerFunctions_ObjectFlow711);
				fUML_Tests_TestIntegerFunctions_ObjectFlow711_LiteralInteger712.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger712", fUML_Tests_TestIntegerFunctions_ObjectFlow711_LiteralInteger712);
			fUML_Tests_TestIntegerFunctions_ControlFlow713.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow713", fUML_Tests_TestIntegerFunctions_ControlFlow713);
				fUML_Tests_TestIntegerFunctions_ControlFlow713_LiteralInteger714.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger714", fUML_Tests_TestIntegerFunctions_ControlFlow713_LiteralInteger714);
			fUML_Tests_TestIntegerFunctions_ModResult.reset(new Parameter());
			this->addToElementRepository("ModResult", fUML_Tests_TestIntegerFunctions_ModResult);
			fUML_Tests_TestIntegerFunctions_ObjectFlow715.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow715", fUML_Tests_TestIntegerFunctions_ObjectFlow715);
				fUML_Tests_TestIntegerFunctions_ObjectFlow715_LiteralInteger716.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger716", fUML_Tests_TestIntegerFunctions_ObjectFlow715_LiteralInteger716);
			fUML_Tests_TestIntegerFunctions_ObjectFlow717.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow717", fUML_Tests_TestIntegerFunctions_ObjectFlow717);
				fUML_Tests_TestIntegerFunctions_ObjectFlow717_LiteralInteger718.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger718", fUML_Tests_TestIntegerFunctions_ObjectFlow717_LiteralInteger718);
			fUML_Tests_TestIntegerFunctions_MinusResult.reset(new Parameter());
			this->addToElementRepository("MinusResult", fUML_Tests_TestIntegerFunctions_MinusResult);
			fUML_Tests_TestIntegerFunctions_Call_Minus.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Minus)", fUML_Tests_TestIntegerFunctions_Call_Minus);
				fUML_Tests_TestIntegerFunctions_Call_Minus_y.reset(new InputPin());
				this->addToElementRepository("y", fUML_Tests_TestIntegerFunctions_Call_Minus_y);
					fUML_Tests_TestIntegerFunctions_Call_Minus_y_LiteralUnlimitedNatural719.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural719", fUML_Tests_TestIntegerFunctions_Call_Minus_y_LiteralUnlimitedNatural719);
					fUML_Tests_TestIntegerFunctions_Call_Minus_y_LiteralInteger720.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger720", fUML_Tests_TestIntegerFunctions_Call_Minus_y_LiteralInteger720);
				fUML_Tests_TestIntegerFunctions_Call_Minus_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestIntegerFunctions_Call_Minus_x);
					fUML_Tests_TestIntegerFunctions_Call_Minus_x_LiteralUnlimitedNatural721.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural721", fUML_Tests_TestIntegerFunctions_Call_Minus_x_LiteralUnlimitedNatural721);
					fUML_Tests_TestIntegerFunctions_Call_Minus_x_LiteralInteger722.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger722", fUML_Tests_TestIntegerFunctions_Call_Minus_x_LiteralInteger722);
				fUML_Tests_TestIntegerFunctions_Call_Minus_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestIntegerFunctions_Call_Minus_result);
					fUML_Tests_TestIntegerFunctions_Call_Minus_result_LiteralInteger723.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger723", fUML_Tests_TestIntegerFunctions_Call_Minus_result_LiteralInteger723);
					fUML_Tests_TestIntegerFunctions_Call_Minus_result_LiteralUnlimitedNatural724.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural724", fUML_Tests_TestIntegerFunctions_Call_Minus_result_LiteralUnlimitedNatural724);
			fUML_Tests_TestIntegerFunctions_ControlFlow725.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow725", fUML_Tests_TestIntegerFunctions_ControlFlow725);
				fUML_Tests_TestIntegerFunctions_ControlFlow725_LiteralInteger726.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger726", fUML_Tests_TestIntegerFunctions_ControlFlow725_LiteralInteger726);
			fUML_Tests_TestIntegerFunctions_NegResult.reset(new Parameter());
			this->addToElementRepository("NegResult", fUML_Tests_TestIntegerFunctions_NegResult);
			fUML_Tests_TestIntegerFunctions_ObjectFlow727.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow727", fUML_Tests_TestIntegerFunctions_ObjectFlow727);
				fUML_Tests_TestIntegerFunctions_ObjectFlow727_LiteralInteger728.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger728", fUML_Tests_TestIntegerFunctions_ObjectFlow727_LiteralInteger728);
			fUML_Tests_TestIntegerFunctions_ObjectFlow729.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow729", fUML_Tests_TestIntegerFunctions_ObjectFlow729);
				fUML_Tests_TestIntegerFunctions_ObjectFlow729_LiteralInteger730.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger730", fUML_Tests_TestIntegerFunctions_ObjectFlow729_LiteralInteger730);
			fUML_Tests_TestIntegerFunctions_Param_NegResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(NegResult)", fUML_Tests_TestIntegerFunctions_Param_NegResult);
			fUML_Tests_TestIntegerFunctions_ObjectFlow731.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow731", fUML_Tests_TestIntegerFunctions_ObjectFlow731);
				fUML_Tests_TestIntegerFunctions_ObjectFlow731_LiteralInteger732.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger732", fUML_Tests_TestIntegerFunctions_ObjectFlow731_LiteralInteger732);
			fUML_Tests_TestIntegerFunctions_ObjectFlow733.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow733", fUML_Tests_TestIntegerFunctions_ObjectFlow733);
				fUML_Tests_TestIntegerFunctions_ObjectFlow733_LiteralInteger734.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger734", fUML_Tests_TestIntegerFunctions_ObjectFlow733_LiteralInteger734);
			fUML_Tests_TestIntegerFunctions_Fork_2.reset(new ForkNode());
			this->addToElementRepository("Fork(2)", fUML_Tests_TestIntegerFunctions_Fork_2);
			fUML_Tests_TestIntegerFunctions_TimesResult.reset(new Parameter());
			this->addToElementRepository("TimesResult", fUML_Tests_TestIntegerFunctions_TimesResult);
			fUML_Tests_TestIntegerFunctions_ObjectFlow735.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow735", fUML_Tests_TestIntegerFunctions_ObjectFlow735);
				fUML_Tests_TestIntegerFunctions_ObjectFlow735_LiteralInteger736.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger736", fUML_Tests_TestIntegerFunctions_ObjectFlow735_LiteralInteger736);
			fUML_Tests_TestIntegerFunctions_Call_Neg.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Neg)", fUML_Tests_TestIntegerFunctions_Call_Neg);
				fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x.reset(new InputPin());
				this->addToElementRepository("Neg.x", fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x);
					fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x_LiteralInteger737.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger737", fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x_LiteralInteger737);
					fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x_LiteralUnlimitedNatural738.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural738", fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x_LiteralUnlimitedNatural738);
				fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result.reset(new OutputPin());
				this->addToElementRepository("Neg.result", fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result);
					fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result_LiteralInteger739.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger739", fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result_LiteralInteger739);
					fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result_LiteralUnlimitedNatural740.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural740", fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result_LiteralUnlimitedNatural740);
			fUML_Tests_TestIntegerFunctions_ControlFlow741.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow741", fUML_Tests_TestIntegerFunctions_ControlFlow741);
				fUML_Tests_TestIntegerFunctions_ControlFlow741_LiteralInteger742.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger742", fUML_Tests_TestIntegerFunctions_ControlFlow741_LiteralInteger742);
			fUML_Tests_TestIntegerFunctions_Param_MaxResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(MaxResult)", fUML_Tests_TestIntegerFunctions_Param_MaxResult);
			fUML_Tests_TestIntegerFunctions_Param_DivResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(DivResult)", fUML_Tests_TestIntegerFunctions_Param_DivResult);
			fUML_Tests_TestIntegerFunctions_ObjectFlow743.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow743", fUML_Tests_TestIntegerFunctions_ObjectFlow743);
				fUML_Tests_TestIntegerFunctions_ObjectFlow743_LiteralInteger744.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger744", fUML_Tests_TestIntegerFunctions_ObjectFlow743_LiteralInteger744);
			fUML_Tests_TestIntegerFunctions_Call_Plus.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Plus)", fUML_Tests_TestIntegerFunctions_Call_Plus);
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result.reset(new OutputPin());
				this->addToElementRepository("Plus.result", fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result);
					fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result_LiteralUnlimitedNatural745.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural745", fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result_LiteralUnlimitedNatural745);
					fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result_LiteralInteger746.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger746", fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result_LiteralInteger746);
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x.reset(new InputPin());
				this->addToElementRepository("Plus.x", fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x);
					fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x_LiteralInteger747.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger747", fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x_LiteralInteger747);
					fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x_LiteralUnlimitedNatural748.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural748", fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x_LiteralUnlimitedNatural748);
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y.reset(new InputPin());
				this->addToElementRepository("Plus.y", fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y);
					fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y_LiteralInteger749.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger749", fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y_LiteralInteger749);
					fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y_LiteralUnlimitedNatural750.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural750", fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y_LiteralUnlimitedNatural750);
			fUML_Tests_TestIntegerFunctions_ObjectFlow751.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow751", fUML_Tests_TestIntegerFunctions_ObjectFlow751);
				fUML_Tests_TestIntegerFunctions_ObjectFlow751_LiteralInteger752.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger752", fUML_Tests_TestIntegerFunctions_ObjectFlow751_LiteralInteger752);
			fUML_Tests_TestIntegerFunctions_ObjectFlow753.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow753", fUML_Tests_TestIntegerFunctions_ObjectFlow753);
				fUML_Tests_TestIntegerFunctions_ObjectFlow753_LiteralInteger754.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger754", fUML_Tests_TestIntegerFunctions_ObjectFlow753_LiteralInteger754);
			fUML_Tests_TestIntegerFunctions_Call_Abs.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Abs)", fUML_Tests_TestIntegerFunctions_Call_Abs);
				fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result.reset(new OutputPin());
				this->addToElementRepository("Abs.result", fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result);
					fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result_LiteralUnlimitedNatural755.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural755", fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result_LiteralUnlimitedNatural755);
					fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result_LiteralInteger756.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger756", fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result_LiteralInteger756);
				fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x.reset(new InputPin());
				this->addToElementRepository("Abs.x", fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x);
					fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x_LiteralUnlimitedNatural757.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural757", fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x_LiteralUnlimitedNatural757);
					fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x_LiteralInteger758.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger758", fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x_LiteralInteger758);
			fUML_Tests_TestIntegerFunctions_Call_Min.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Min)", fUML_Tests_TestIntegerFunctions_Call_Min);
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_x.reset(new InputPin());
				this->addToElementRepository("Min.x", fUML_Tests_TestIntegerFunctions_Call_Min_Min_x);
					fUML_Tests_TestIntegerFunctions_Call_Min_Min_x_LiteralUnlimitedNatural759.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural759", fUML_Tests_TestIntegerFunctions_Call_Min_Min_x_LiteralUnlimitedNatural759);
					fUML_Tests_TestIntegerFunctions_Call_Min_Min_x_LiteralInteger760.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger760", fUML_Tests_TestIntegerFunctions_Call_Min_Min_x_LiteralInteger760);
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_result.reset(new OutputPin());
				this->addToElementRepository("Min.result", fUML_Tests_TestIntegerFunctions_Call_Min_Min_result);
					fUML_Tests_TestIntegerFunctions_Call_Min_Min_result_LiteralUnlimitedNatural761.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural761", fUML_Tests_TestIntegerFunctions_Call_Min_Min_result_LiteralUnlimitedNatural761);
					fUML_Tests_TestIntegerFunctions_Call_Min_Min_result_LiteralInteger762.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger762", fUML_Tests_TestIntegerFunctions_Call_Min_Min_result_LiteralInteger762);
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_y.reset(new InputPin());
				this->addToElementRepository("Min.y", fUML_Tests_TestIntegerFunctions_Call_Min_Min_y);
					fUML_Tests_TestIntegerFunctions_Call_Min_Min_y_LiteralInteger763.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger763", fUML_Tests_TestIntegerFunctions_Call_Min_Min_y_LiteralInteger763);
					fUML_Tests_TestIntegerFunctions_Call_Min_Min_y_LiteralUnlimitedNatural764.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural764", fUML_Tests_TestIntegerFunctions_Call_Min_Min_y_LiteralUnlimitedNatural764);
			fUML_Tests_TestIntegerFunctions_ObjectFlow765.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow765", fUML_Tests_TestIntegerFunctions_ObjectFlow765);
				fUML_Tests_TestIntegerFunctions_ObjectFlow765_LiteralInteger766.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger766", fUML_Tests_TestIntegerFunctions_ObjectFlow765_LiteralInteger766);
			fUML_Tests_TestIntegerFunctions_ObjectFlow767.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow767", fUML_Tests_TestIntegerFunctions_ObjectFlow767);
				fUML_Tests_TestIntegerFunctions_ObjectFlow767_LiteralInteger768.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger768", fUML_Tests_TestIntegerFunctions_ObjectFlow767_LiteralInteger768);
		fUML_Tests_SelfReader.reset(new Activity());
		this->addToElementRepository("SelfReader", fUML_Tests_SelfReader);
			fUML_Tests_SelfReader_self.reset(new Parameter());
			this->addToElementRepository("self", fUML_Tests_SelfReader_self);
				fUML_Tests_SelfReader_self_LiteralInteger769.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger769", fUML_Tests_SelfReader_self_LiteralInteger769);
				fUML_Tests_SelfReader_self_LiteralUnlimitedNatural770.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural770", fUML_Tests_SelfReader_self_LiteralUnlimitedNatural770);
			fUML_Tests_SelfReader_Parameter_isSelfReader.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(isSelfReader)", fUML_Tests_SelfReader_Parameter_isSelfReader);
			fUML_Tests_SelfReader_ForkNode771.reset(new ForkNode());
			this->addToElementRepository("ForkNode771", fUML_Tests_SelfReader_ForkNode771);
			fUML_Tests_SelfReader_isSelfReader.reset(new Parameter());
			this->addToElementRepository("isSelfReader", fUML_Tests_SelfReader_isSelfReader);
			fUML_Tests_SelfReader_ObjectFlow772.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow772", fUML_Tests_SelfReader_ObjectFlow772);
				fUML_Tests_SelfReader_ObjectFlow772_LiteralUnlimitedNatural773.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural773", fUML_Tests_SelfReader_ObjectFlow772_LiteralUnlimitedNatural773);
			fUML_Tests_SelfReader_ObjectFlow774.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow774", fUML_Tests_SelfReader_ObjectFlow774);
				fUML_Tests_SelfReader_ObjectFlow774_LiteralUnlimitedNatural775.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural775", fUML_Tests_SelfReader_ObjectFlow774_LiteralUnlimitedNatural775);
			fUML_Tests_SelfReader_IsClassified_SelfReader.reset(new ReadIsClassifiedObjectAction());
			this->addToElementRepository("IsClassified(SelfReader)", fUML_Tests_SelfReader_IsClassified_SelfReader);
				fUML_Tests_SelfReader_IsClassified_SelfReader_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_SelfReader_IsClassified_SelfReader_object);
				fUML_Tests_SelfReader_IsClassified_SelfReader_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_SelfReader_IsClassified_SelfReader_result);
			fUML_Tests_SelfReader_ObjectFlow776.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow776", fUML_Tests_SelfReader_ObjectFlow776);
				fUML_Tests_SelfReader_ObjectFlow776_LiteralInteger777.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger777", fUML_Tests_SelfReader_ObjectFlow776_LiteralInteger777);
			fUML_Tests_SelfReader_ObjectFlow778.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow778", fUML_Tests_SelfReader_ObjectFlow778);
				fUML_Tests_SelfReader_ObjectFlow778_LiteralUnlimitedNatural779.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural779", fUML_Tests_SelfReader_ObjectFlow778_LiteralUnlimitedNatural779);
			fUML_Tests_SelfReader_Parameter_self.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(self)", fUML_Tests_SelfReader_Parameter_self);
			fUML_Tests_SelfReader_ReadSelf.reset(new ReadSelfAction());
			this->addToElementRepository("ReadSelf", fUML_Tests_SelfReader_ReadSelf);
				fUML_Tests_SelfReader_ReadSelf_ReadSelf_result.reset(new OutputPin());
				this->addToElementRepository("ReadSelf.result", fUML_Tests_SelfReader_ReadSelf_ReadSelf_result);
		fUML_Tests_TestClassExtentReader.reset(new Activity());
		this->addToElementRepository("TestClassExtentReader", fUML_Tests_TestClassExtentReader);
			fUML_Tests_TestClassExtentReader_ObjectFlow780.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow780", fUML_Tests_TestClassExtentReader_ObjectFlow780);
				fUML_Tests_TestClassExtentReader_ObjectFlow780_LiteralInteger781.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger781", fUML_Tests_TestClassExtentReader_ObjectFlow780_LiteralInteger781);
			fUML_Tests_TestClassExtentReader_ObjectFlow782.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow782", fUML_Tests_TestClassExtentReader_ObjectFlow782);
				fUML_Tests_TestClassExtentReader_ObjectFlow782_LiteralInteger783.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger783", fUML_Tests_TestClassExtentReader_ObjectFlow782_LiteralInteger783);
			fUML_Tests_TestClassExtentReader_ControlFlow784.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow784", fUML_Tests_TestClassExtentReader_ControlFlow784);
				fUML_Tests_TestClassExtentReader_ControlFlow784_LiteralInteger785.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger785", fUML_Tests_TestClassExtentReader_ControlFlow784_LiteralInteger785);
			fUML_Tests_TestClassExtentReader_Create_TestClass.reset(new CreateObjectAction());
			this->addToElementRepository("Create(TestClass)", fUML_Tests_TestClassExtentReader_Create_TestClass);
				fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result.reset(new OutputPin());
				this->addToElementRepository("Create.result", fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result);
					fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result_LiteralInteger786.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger786", fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result_LiteralInteger786);
					fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result_LiteralUnlimitedNatural787.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural787", fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result_LiteralUnlimitedNatural787);
			fUML_Tests_TestClassExtentReader_Param_object.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(object)", fUML_Tests_TestClassExtentReader_Param_object);
			fUML_Tests_TestClassExtentReader_Param_extent.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(extent)", fUML_Tests_TestClassExtentReader_Param_extent);
			fUML_Tests_TestClassExtentReader_ReadExtent_TestClass.reset(new ReadExtentAction());
			this->addToElementRepository("ReadExtent(TestClass)", fUML_Tests_TestClassExtentReader_ReadExtent_TestClass);
				fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result.reset(new OutputPin());
				this->addToElementRepository("ReadExtent.result", fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result);
					fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result_LiteralUnlimitedNatural788.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural788", fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result_LiteralUnlimitedNatural788);
					fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result_LiteralUnlimitedNatural789.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural789", fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result_LiteralUnlimitedNatural789);
			fUML_Tests_TestClassExtentReader_extent.reset(new Parameter());
			this->addToElementRepository("extent", fUML_Tests_TestClassExtentReader_extent);
				fUML_Tests_TestClassExtentReader_extent_LiteralUnlimitedNatural790.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural790", fUML_Tests_TestClassExtentReader_extent_LiteralUnlimitedNatural790);
				fUML_Tests_TestClassExtentReader_extent_LiteralUnlimitedNatural791.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural791", fUML_Tests_TestClassExtentReader_extent_LiteralUnlimitedNatural791);
			fUML_Tests_TestClassExtentReader_object.reset(new Parameter());
			this->addToElementRepository("object", fUML_Tests_TestClassExtentReader_object);
				fUML_Tests_TestClassExtentReader_object_LiteralInteger792.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger792", fUML_Tests_TestClassExtentReader_object_LiteralInteger792);
				fUML_Tests_TestClassExtentReader_object_LiteralUnlimitedNatural793.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural793", fUML_Tests_TestClassExtentReader_object_LiteralUnlimitedNatural793);
		fUML_Tests_CallEvent794.reset(new CallEvent());
		this->addToElementRepository("CallEvent794", fUML_Tests_CallEvent794);
		fUML_Tests_TestCallSend.reset(new Activity());
		this->addToElementRepository("TestCallSend", fUML_Tests_TestCallSend);
			fUML_Tests_TestCallSend_Send_TestSignal.reset(new SendSignalAction());
			this->addToElementRepository("Send(TestSignal)", fUML_Tests_TestCallSend_Send_TestSignal);
				fUML_Tests_TestCallSend_Send_TestSignal_Send_TestSignal_target.reset(new InputPin());
				this->addToElementRepository("Send(TestSignal).target", fUML_Tests_TestCallSend_Send_TestSignal_Send_TestSignal_target);
			fUML_Tests_TestCallSend_ForkNode.reset(new ForkNode());
			this->addToElementRepository("ForkNode", fUML_Tests_TestCallSend_ForkNode);
			fUML_Tests_TestCallSend_Create_TestCallSender.reset(new CreateObjectAction());
			this->addToElementRepository("Create(TestCallSender)", fUML_Tests_TestCallSend_Create_TestCallSender);
				fUML_Tests_TestCallSend_Create_TestCallSender_Create_TestCallSender_result.reset(new OutputPin());
				this->addToElementRepository("Create(TestCallSender).result", fUML_Tests_TestCallSend_Create_TestCallSender_Create_TestCallSender_result);
			fUML_Tests_TestCallSend_ObjectFlow795.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow795", fUML_Tests_TestCallSend_ObjectFlow795);
				fUML_Tests_TestCallSend_ObjectFlow795_LiteralUnlimitedNatural796.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural796", fUML_Tests_TestCallSend_ObjectFlow795_LiteralUnlimitedNatural796);
			fUML_Tests_TestCallSend_ObjectFlow797.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow797", fUML_Tests_TestCallSend_ObjectFlow797);
				fUML_Tests_TestCallSend_ObjectFlow797_LiteralUnlimitedNatural798.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural798", fUML_Tests_TestCallSend_ObjectFlow797_LiteralUnlimitedNatural798);
			fUML_Tests_TestCallSend_ObjectFlow799.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow799", fUML_Tests_TestCallSend_ObjectFlow799);
				fUML_Tests_TestCallSend_ObjectFlow799_LiteralUnlimitedNatural800.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural800", fUML_Tests_TestCallSend_ObjectFlow799_LiteralUnlimitedNatural800);
			fUML_Tests_TestCallSend_ControlFlow801.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow801", fUML_Tests_TestCallSend_ControlFlow801);
				fUML_Tests_TestCallSend_ControlFlow801_LiteralUnlimitedNatural802.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural802", fUML_Tests_TestCallSend_ControlFlow801_LiteralUnlimitedNatural802);
			fUML_Tests_TestCallSend_Start_TestCallSender.reset(new StartObjectBehaviorAction());
			this->addToElementRepository("Start(TestCallSender)", fUML_Tests_TestCallSend_Start_TestCallSender);
				fUML_Tests_TestCallSend_Start_TestCallSender_Start_TestCallSender_object.reset(new InputPin());
				this->addToElementRepository("Start(TestCallSender).object", fUML_Tests_TestCallSend_Start_TestCallSender_Start_TestCallSender_object);
		fUML_Tests_TestListFunctions.reset(new Activity());
		this->addToElementRepository("TestListFunctions", fUML_Tests_TestListFunctions);
			fUML_Tests_TestListFunctions_concatNode.reset(new ActivityParameterNode());
			this->addToElementRepository("concatNode", fUML_Tests_TestListFunctions_concatNode);
			fUML_Tests_TestListFunctions_ObjectFlow803.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow803", fUML_Tests_TestListFunctions_ObjectFlow803);
				fUML_Tests_TestListFunctions_ObjectFlow803_LiteralInteger804.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger804", fUML_Tests_TestListFunctions_ObjectFlow803_LiteralInteger804);
			fUML_Tests_TestListFunctions_ControlFlow805.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow805", fUML_Tests_TestListFunctions_ControlFlow805);
				fUML_Tests_TestListFunctions_ControlFlow805_LiteralInteger806.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger806", fUML_Tests_TestListFunctions_ControlFlow805_LiteralInteger806);
			fUML_Tests_TestListFunctions_ObjectFlow807.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow807", fUML_Tests_TestListFunctions_ObjectFlow807);
				fUML_Tests_TestListFunctions_ObjectFlow807_LiteralInteger808.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger808", fUML_Tests_TestListFunctions_ObjectFlow807_LiteralInteger808);
			fUML_Tests_TestListFunctions_ObjectFlow809.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow809", fUML_Tests_TestListFunctions_ObjectFlow809);
				fUML_Tests_TestListFunctions_ObjectFlow809_LiteralUnlimitedNatural810.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural810", fUML_Tests_TestListFunctions_ObjectFlow809_LiteralUnlimitedNatural810);
			fUML_Tests_TestListFunctions_concat.reset(new Parameter());
			this->addToElementRepository("concat", fUML_Tests_TestListFunctions_concat);
				fUML_Tests_TestListFunctions_concat_LiteralInteger811.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger811", fUML_Tests_TestListFunctions_concat_LiteralInteger811);
				fUML_Tests_TestListFunctions_concat_LiteralUnlimitedNatural812.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural812", fUML_Tests_TestListFunctions_concat_LiteralUnlimitedNatural812);
			fUML_Tests_TestListFunctions_size.reset(new Parameter());
			this->addToElementRepository("size", fUML_Tests_TestListFunctions_size);
				fUML_Tests_TestListFunctions_size_LiteralUnlimitedNatural813.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural813", fUML_Tests_TestListFunctions_size_LiteralUnlimitedNatural813);
				fUML_Tests_TestListFunctions_size_LiteralInteger814.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger814", fUML_Tests_TestListFunctions_size_LiteralInteger814);
			fUML_Tests_TestListFunctions_ObjectFlow815.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow815", fUML_Tests_TestListFunctions_ObjectFlow815);
				fUML_Tests_TestListFunctions_ObjectFlow815_LiteralInteger816.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger816", fUML_Tests_TestListFunctions_ObjectFlow815_LiteralInteger816);
			fUML_Tests_TestListFunctions_ControlFlow817.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow817", fUML_Tests_TestListFunctions_ControlFlow817);
				fUML_Tests_TestListFunctions_ControlFlow817_LiteralUnlimitedNatural818.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural818", fUML_Tests_TestListFunctions_ControlFlow817_LiteralUnlimitedNatural818);
			fUML_Tests_TestListFunctions_Call_ListSize.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(ListSize)", fUML_Tests_TestListFunctions_Call_ListSize);
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list.reset(new InputPin());
				this->addToElementRepository("ListSize.list", fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list);
					fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list_LiteralUnlimitedNatural819.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural819", fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list_LiteralUnlimitedNatural819);
					fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list_LiteralInteger820.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger820", fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list_LiteralInteger820);
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result.reset(new OutputPin());
				this->addToElementRepository("ListSize.result", fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result);
					fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result_LiteralUnlimitedNatural821.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural821", fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result_LiteralUnlimitedNatural821);
					fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result_LiteralInteger822.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger822", fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result_LiteralInteger822);
			fUML_Tests_TestListFunctions_Value_index.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(index)", fUML_Tests_TestListFunctions_Value_index);
				fUML_Tests_TestListFunctions_Value_index_Value_index_result.reset(new OutputPin());
				this->addToElementRepository("Value(index).result", fUML_Tests_TestListFunctions_Value_index_Value_index_result);
					fUML_Tests_TestListFunctions_Value_index_Value_index_result_LiteralInteger823.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger823", fUML_Tests_TestListFunctions_Value_index_Value_index_result_LiteralInteger823);
					fUML_Tests_TestListFunctions_Value_index_Value_index_result_LiteralUnlimitedNatural824.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural824", fUML_Tests_TestListFunctions_Value_index_Value_index_result_LiteralUnlimitedNatural824);
				fUML_Tests_TestListFunctions_Value_index_LiteralInteger825.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger825", fUML_Tests_TestListFunctions_Value_index_LiteralInteger825);
			fUML_Tests_TestListFunctions_Call_ListConcat.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(ListConcat)", fUML_Tests_TestListFunctions_Call_ListConcat);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result.reset(new OutputPin());
				this->addToElementRepository("ListConcat.result", fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result);
					fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result_LiteralUnlimitedNatural826.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural826", fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result_LiteralUnlimitedNatural826);
					fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result_LiteralInteger827.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger827", fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result_LiteralInteger827);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2.reset(new InputPin());
				this->addToElementRepository("ListConcat.list2", fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2);
					fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2_LiteralInteger828.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger828", fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2_LiteralInteger828);
					fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2_LiteralUnlimitedNatural829.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural829", fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2_LiteralUnlimitedNatural829);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1.reset(new InputPin());
				this->addToElementRepository("ListConcat.list1", fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1);
					fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1_LiteralInteger830.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger830", fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1_LiteralInteger830);
					fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1_LiteralUnlimitedNatural831.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural831", fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1_LiteralUnlimitedNatural831);
			fUML_Tests_TestListFunctions_ObjectFlow832.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow832", fUML_Tests_TestListFunctions_ObjectFlow832);
				fUML_Tests_TestListFunctions_ObjectFlow832_LiteralInteger833.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger833", fUML_Tests_TestListFunctions_ObjectFlow832_LiteralInteger833);
			fUML_Tests_TestListFunctions_Param_size.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(size)", fUML_Tests_TestListFunctions_Param_size);
			fUML_Tests_TestListFunctions_ObjectFlow834.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow834", fUML_Tests_TestListFunctions_ObjectFlow834);
				fUML_Tests_TestListFunctions_ObjectFlow834_LiteralUnlimitedNatural835.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural835", fUML_Tests_TestListFunctions_ObjectFlow834_LiteralUnlimitedNatural835);
			fUML_Tests_TestListFunctions_Fork.reset(new ForkNode());
			this->addToElementRepository("Fork", fUML_Tests_TestListFunctions_Fork);
			fUML_Tests_TestListFunctions_Call_ListGet.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(ListGet)", fUML_Tests_TestListFunctions_Call_ListGet);
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result.reset(new OutputPin());
				this->addToElementRepository("ListGet.result", fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result);
					fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result_LiteralInteger836.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger836", fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result_LiteralInteger836);
					fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result_LiteralUnlimitedNatural837.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural837", fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result_LiteralUnlimitedNatural837);
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list.reset(new InputPin());
				this->addToElementRepository("ListGet.list", fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list);
					fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list_LiteralInteger838.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger838", fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list_LiteralInteger838);
					fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list_LiteralUnlimitedNatural839.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural839", fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list_LiteralUnlimitedNatural839);
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index.reset(new InputPin());
				this->addToElementRepository("ListGet.index", fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index);
					fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index_LiteralInteger840.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger840", fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index_LiteralInteger840);
					fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index_LiteralUnlimitedNatural841.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural841", fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index_LiteralUnlimitedNatural841);
			fUML_Tests_TestListFunctions_element.reset(new Parameter());
			this->addToElementRepository("element", fUML_Tests_TestListFunctions_element);
				fUML_Tests_TestListFunctions_element_LiteralUnlimitedNatural842.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural842", fUML_Tests_TestListFunctions_element_LiteralUnlimitedNatural842);
				fUML_Tests_TestListFunctions_element_LiteralInteger843.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger843", fUML_Tests_TestListFunctions_element_LiteralInteger843);
			fUML_Tests_TestListFunctions_Call_GenerateListTestData.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(GenerateListTestData)", fUML_Tests_TestListFunctions_Call_GenerateListTestData);
				fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list.reset(new OutputPin());
				this->addToElementRepository("GenData.list", fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list);
					fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list_LiteralUnlimitedNatural844.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural844", fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list_LiteralUnlimitedNatural844);
					fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list_LiteralUnlimitedNatural845.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural845", fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list_LiteralUnlimitedNatural845);
			fUML_Tests_TestListFunctions_ObjectFlow846.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow846", fUML_Tests_TestListFunctions_ObjectFlow846);
				fUML_Tests_TestListFunctions_ObjectFlow846_LiteralInteger847.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger847", fUML_Tests_TestListFunctions_ObjectFlow846_LiteralInteger847);
			fUML_Tests_TestListFunctions_ObjectFlow848.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow848", fUML_Tests_TestListFunctions_ObjectFlow848);
				fUML_Tests_TestListFunctions_ObjectFlow848_LiteralUnlimitedNatural849.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural849", fUML_Tests_TestListFunctions_ObjectFlow848_LiteralUnlimitedNatural849);
			fUML_Tests_TestListFunctions_ObjectFlow850.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow850", fUML_Tests_TestListFunctions_ObjectFlow850);
				fUML_Tests_TestListFunctions_ObjectFlow850_LiteralInteger851.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger851", fUML_Tests_TestListFunctions_ObjectFlow850_LiteralInteger851);
			fUML_Tests_TestListFunctions_Param_element.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(element)", fUML_Tests_TestListFunctions_Param_element);
		fUML_Tests_TestRealFunctions.reset(new Activity());
		this->addToElementRepository("TestRealFunctions", fUML_Tests_TestRealFunctions);
			fUML_Tests_TestRealFunctions_InvResult.reset(new Parameter());
			this->addToElementRepository("InvResult", fUML_Tests_TestRealFunctions_InvResult);
			fUML_Tests_TestRealFunctions_ObjectFlow852.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow852", fUML_Tests_TestRealFunctions_ObjectFlow852);
				fUML_Tests_TestRealFunctions_ObjectFlow852_LiteralInteger853.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger853", fUML_Tests_TestRealFunctions_ObjectFlow852_LiteralInteger853);
			fUML_Tests_TestRealFunctions_Param_MinusResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(MinusResult)", fUML_Tests_TestRealFunctions_Param_MinusResult);
			fUML_Tests_TestRealFunctions_DivideResult.reset(new Parameter());
			this->addToElementRepository("DivideResult", fUML_Tests_TestRealFunctions_DivideResult);
			fUML_Tests_TestRealFunctions_Call_Times.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Times)", fUML_Tests_TestRealFunctions_Call_Times);
				fUML_Tests_TestRealFunctions_Call_Times_Times_y.reset(new InputPin());
				this->addToElementRepository("Times.y", fUML_Tests_TestRealFunctions_Call_Times_Times_y);
					fUML_Tests_TestRealFunctions_Call_Times_Times_y_LiteralUnlimitedNatural854.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural854", fUML_Tests_TestRealFunctions_Call_Times_Times_y_LiteralUnlimitedNatural854);
					fUML_Tests_TestRealFunctions_Call_Times_Times_y_LiteralInteger855.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger855", fUML_Tests_TestRealFunctions_Call_Times_Times_y_LiteralInteger855);
				fUML_Tests_TestRealFunctions_Call_Times_Times_x.reset(new InputPin());
				this->addToElementRepository("Times.x", fUML_Tests_TestRealFunctions_Call_Times_Times_x);
					fUML_Tests_TestRealFunctions_Call_Times_Times_x_LiteralUnlimitedNatural856.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural856", fUML_Tests_TestRealFunctions_Call_Times_Times_x_LiteralUnlimitedNatural856);
					fUML_Tests_TestRealFunctions_Call_Times_Times_x_LiteralInteger857.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger857", fUML_Tests_TestRealFunctions_Call_Times_Times_x_LiteralInteger857);
				fUML_Tests_TestRealFunctions_Call_Times_Times_result.reset(new OutputPin());
				this->addToElementRepository("Times.result", fUML_Tests_TestRealFunctions_Call_Times_Times_result);
					fUML_Tests_TestRealFunctions_Call_Times_Times_result_LiteralInteger858.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger858", fUML_Tests_TestRealFunctions_Call_Times_Times_result_LiteralInteger858);
					fUML_Tests_TestRealFunctions_Call_Times_Times_result_LiteralUnlimitedNatural859.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural859", fUML_Tests_TestRealFunctions_Call_Times_Times_result_LiteralUnlimitedNatural859);
			fUML_Tests_TestRealFunctions_Call_Minus.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Minus)", fUML_Tests_TestRealFunctions_Call_Minus);
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_x.reset(new InputPin());
				this->addToElementRepository("Minus.x", fUML_Tests_TestRealFunctions_Call_Minus_Minus_x);
					fUML_Tests_TestRealFunctions_Call_Minus_Minus_x_LiteralInteger860.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger860", fUML_Tests_TestRealFunctions_Call_Minus_Minus_x_LiteralInteger860);
					fUML_Tests_TestRealFunctions_Call_Minus_Minus_x_LiteralUnlimitedNatural861.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural861", fUML_Tests_TestRealFunctions_Call_Minus_Minus_x_LiteralUnlimitedNatural861);
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_result.reset(new OutputPin());
				this->addToElementRepository("Minus.result", fUML_Tests_TestRealFunctions_Call_Minus_Minus_result);
					fUML_Tests_TestRealFunctions_Call_Minus_Minus_result_LiteralInteger862.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger862", fUML_Tests_TestRealFunctions_Call_Minus_Minus_result_LiteralInteger862);
					fUML_Tests_TestRealFunctions_Call_Minus_Minus_result_LiteralUnlimitedNatural863.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural863", fUML_Tests_TestRealFunctions_Call_Minus_Minus_result_LiteralUnlimitedNatural863);
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_y.reset(new InputPin());
				this->addToElementRepository("Minus.y", fUML_Tests_TestRealFunctions_Call_Minus_Minus_y);
					fUML_Tests_TestRealFunctions_Call_Minus_Minus_y_LiteralInteger864.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger864", fUML_Tests_TestRealFunctions_Call_Minus_Minus_y_LiteralInteger864);
					fUML_Tests_TestRealFunctions_Call_Minus_Minus_y_LiteralUnlimitedNatural865.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural865", fUML_Tests_TestRealFunctions_Call_Minus_Minus_y_LiteralUnlimitedNatural865);
			fUML_Tests_TestRealFunctions_ObjectFlow866.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow866", fUML_Tests_TestRealFunctions_ObjectFlow866);
				fUML_Tests_TestRealFunctions_ObjectFlow866_LiteralInteger867.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger867", fUML_Tests_TestRealFunctions_ObjectFlow866_LiteralInteger867);
			fUML_Tests_TestRealFunctions_ControlFlow868.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow868", fUML_Tests_TestRealFunctions_ControlFlow868);
				fUML_Tests_TestRealFunctions_ControlFlow868_LiteralInteger869.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger869", fUML_Tests_TestRealFunctions_ControlFlow868_LiteralInteger869);
			fUML_Tests_TestRealFunctions_ObjectFlow870.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow870", fUML_Tests_TestRealFunctions_ObjectFlow870);
				fUML_Tests_TestRealFunctions_ObjectFlow870_LiteralInteger871.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger871", fUML_Tests_TestRealFunctions_ObjectFlow870_LiteralInteger871);
			fUML_Tests_TestRealFunctions_ObjectFlow872.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow872", fUML_Tests_TestRealFunctions_ObjectFlow872);
				fUML_Tests_TestRealFunctions_ObjectFlow872_LiteralInteger873.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger873", fUML_Tests_TestRealFunctions_ObjectFlow872_LiteralInteger873);
			fUML_Tests_TestRealFunctions_Value_3_1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(3.1)", fUML_Tests_TestRealFunctions_Value_3_1);
				fUML_Tests_TestRealFunctions_Value_3_1_Value_3_1_result.reset(new OutputPin());
				this->addToElementRepository("Value(3.1).result", fUML_Tests_TestRealFunctions_Value_3_1_Value_3_1_result);
				fUML_Tests_TestRealFunctions_Value_3_1_LiteralReal874.reset(new LiteralReal());
				this->addToElementRepository("LiteralReal874", fUML_Tests_TestRealFunctions_Value_3_1_LiteralReal874);
			fUML_Tests_TestRealFunctions_ObjectFlow875.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow875", fUML_Tests_TestRealFunctions_ObjectFlow875);
				fUML_Tests_TestRealFunctions_ObjectFlow875_LiteralUnlimitedNatural876.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural876", fUML_Tests_TestRealFunctions_ObjectFlow875_LiteralUnlimitedNatural876);
			fUML_Tests_TestRealFunctions_ObjectFlow877.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow877", fUML_Tests_TestRealFunctions_ObjectFlow877);
				fUML_Tests_TestRealFunctions_ObjectFlow877_LiteralInteger878.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger878", fUML_Tests_TestRealFunctions_ObjectFlow877_LiteralInteger878);
			fUML_Tests_TestRealFunctions_Call_Plus.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Plus)", fUML_Tests_TestRealFunctions_Call_Plus);
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_result.reset(new OutputPin());
				this->addToElementRepository("Plus.result", fUML_Tests_TestRealFunctions_Call_Plus_Plus_result);
					fUML_Tests_TestRealFunctions_Call_Plus_Plus_result_LiteralUnlimitedNatural879.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural879", fUML_Tests_TestRealFunctions_Call_Plus_Plus_result_LiteralUnlimitedNatural879);
					fUML_Tests_TestRealFunctions_Call_Plus_Plus_result_LiteralInteger880.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger880", fUML_Tests_TestRealFunctions_Call_Plus_Plus_result_LiteralInteger880);
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_y.reset(new InputPin());
				this->addToElementRepository("Plus.y", fUML_Tests_TestRealFunctions_Call_Plus_Plus_y);
					fUML_Tests_TestRealFunctions_Call_Plus_Plus_y_LiteralInteger881.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger881", fUML_Tests_TestRealFunctions_Call_Plus_Plus_y_LiteralInteger881);
					fUML_Tests_TestRealFunctions_Call_Plus_Plus_y_LiteralUnlimitedNatural882.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural882", fUML_Tests_TestRealFunctions_Call_Plus_Plus_y_LiteralUnlimitedNatural882);
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_x.reset(new InputPin());
				this->addToElementRepository("Plus.x", fUML_Tests_TestRealFunctions_Call_Plus_Plus_x);
					fUML_Tests_TestRealFunctions_Call_Plus_Plus_x_LiteralInteger883.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger883", fUML_Tests_TestRealFunctions_Call_Plus_Plus_x_LiteralInteger883);
					fUML_Tests_TestRealFunctions_Call_Plus_Plus_x_LiteralUnlimitedNatural884.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural884", fUML_Tests_TestRealFunctions_Call_Plus_Plus_x_LiteralUnlimitedNatural884);
			fUML_Tests_TestRealFunctions_Param_PlusResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(PlusResult)", fUML_Tests_TestRealFunctions_Param_PlusResult);
			fUML_Tests_TestRealFunctions_ObjectFlow885.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow885", fUML_Tests_TestRealFunctions_ObjectFlow885);
				fUML_Tests_TestRealFunctions_ObjectFlow885_LiteralInteger886.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger886", fUML_Tests_TestRealFunctions_ObjectFlow885_LiteralInteger886);
			fUML_Tests_TestRealFunctions_Param_RoundResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(RoundResult)", fUML_Tests_TestRealFunctions_Param_RoundResult);
			fUML_Tests_TestRealFunctions_Call_Inv.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Inv)", fUML_Tests_TestRealFunctions_Call_Inv);
				fUML_Tests_TestRealFunctions_Call_Inv_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestRealFunctions_Call_Inv_result);
				fUML_Tests_TestRealFunctions_Call_Inv_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestRealFunctions_Call_Inv_x);
			fUML_Tests_TestRealFunctions_ObjectFlow887.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow887", fUML_Tests_TestRealFunctions_ObjectFlow887);
				fUML_Tests_TestRealFunctions_ObjectFlow887_LiteralUnlimitedNatural888.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural888", fUML_Tests_TestRealFunctions_ObjectFlow887_LiteralUnlimitedNatural888);
			fUML_Tests_TestRealFunctions_ObjectFlow889.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow889", fUML_Tests_TestRealFunctions_ObjectFlow889);
				fUML_Tests_TestRealFunctions_ObjectFlow889_LiteralInteger890.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger890", fUML_Tests_TestRealFunctions_ObjectFlow889_LiteralInteger890);
			fUML_Tests_TestRealFunctions_Call_Floor.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Floor)", fUML_Tests_TestRealFunctions_Call_Floor);
				fUML_Tests_TestRealFunctions_Call_Floor_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestRealFunctions_Call_Floor_result);
					fUML_Tests_TestRealFunctions_Call_Floor_result_LiteralUnlimitedNatural891.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural891", fUML_Tests_TestRealFunctions_Call_Floor_result_LiteralUnlimitedNatural891);
					fUML_Tests_TestRealFunctions_Call_Floor_result_LiteralInteger892.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger892", fUML_Tests_TestRealFunctions_Call_Floor_result_LiteralInteger892);
				fUML_Tests_TestRealFunctions_Call_Floor_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestRealFunctions_Call_Floor_x);
					fUML_Tests_TestRealFunctions_Call_Floor_x_LiteralUnlimitedNatural893.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural893", fUML_Tests_TestRealFunctions_Call_Floor_x_LiteralUnlimitedNatural893);
					fUML_Tests_TestRealFunctions_Call_Floor_x_LiteralInteger894.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger894", fUML_Tests_TestRealFunctions_Call_Floor_x_LiteralInteger894);
			fUML_Tests_TestRealFunctions_Call_AbsResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Call(AbsResult)", fUML_Tests_TestRealFunctions_Call_AbsResult);
			fUML_Tests_TestRealFunctions_Call_ToInteger.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(ToInteger)", fUML_Tests_TestRealFunctions_Call_ToInteger);
				fUML_Tests_TestRealFunctions_Call_ToInteger_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestRealFunctions_Call_ToInteger_x);
					fUML_Tests_TestRealFunctions_Call_ToInteger_x_LiteralUnlimitedNatural895.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural895", fUML_Tests_TestRealFunctions_Call_ToInteger_x_LiteralUnlimitedNatural895);
					fUML_Tests_TestRealFunctions_Call_ToInteger_x_LiteralInteger896.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger896", fUML_Tests_TestRealFunctions_Call_ToInteger_x_LiteralInteger896);
				fUML_Tests_TestRealFunctions_Call_ToInteger_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestRealFunctions_Call_ToInteger_result);
					fUML_Tests_TestRealFunctions_Call_ToInteger_result_LiteralInteger897.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger897", fUML_Tests_TestRealFunctions_Call_ToInteger_result_LiteralInteger897);
					fUML_Tests_TestRealFunctions_Call_ToInteger_result_LiteralUnlimitedNatural898.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural898", fUML_Tests_TestRealFunctions_Call_ToInteger_result_LiteralUnlimitedNatural898);
			fUML_Tests_TestRealFunctions_Param_NegResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(NegResult)", fUML_Tests_TestRealFunctions_Param_NegResult);
			fUML_Tests_TestRealFunctions_ObjectFlow899.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow899", fUML_Tests_TestRealFunctions_ObjectFlow899);
				fUML_Tests_TestRealFunctions_ObjectFlow899_LiteralInteger900.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger900", fUML_Tests_TestRealFunctions_ObjectFlow899_LiteralInteger900);
			fUML_Tests_TestRealFunctions_ObjectFlow901.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow901", fUML_Tests_TestRealFunctions_ObjectFlow901);
				fUML_Tests_TestRealFunctions_ObjectFlow901_LiteralInteger902.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger902", fUML_Tests_TestRealFunctions_ObjectFlow901_LiteralInteger902);
			fUML_Tests_TestRealFunctions_ObjectFlow903.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow903", fUML_Tests_TestRealFunctions_ObjectFlow903);
				fUML_Tests_TestRealFunctions_ObjectFlow903_LiteralUnlimitedNatural904.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural904", fUML_Tests_TestRealFunctions_ObjectFlow903_LiteralUnlimitedNatural904);
			fUML_Tests_TestRealFunctions_ObjectFlow905.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow905", fUML_Tests_TestRealFunctions_ObjectFlow905);
				fUML_Tests_TestRealFunctions_ObjectFlow905_LiteralUnlimitedNatural906.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural906", fUML_Tests_TestRealFunctions_ObjectFlow905_LiteralUnlimitedNatural906);
			fUML_Tests_TestRealFunctions_Call_Abs.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Abs)", fUML_Tests_TestRealFunctions_Call_Abs);
				fUML_Tests_TestRealFunctions_Call_Abs_Abs_result.reset(new OutputPin());
				this->addToElementRepository("Abs.result", fUML_Tests_TestRealFunctions_Call_Abs_Abs_result);
					fUML_Tests_TestRealFunctions_Call_Abs_Abs_result_LiteralInteger907.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger907", fUML_Tests_TestRealFunctions_Call_Abs_Abs_result_LiteralInteger907);
					fUML_Tests_TestRealFunctions_Call_Abs_Abs_result_LiteralUnlimitedNatural908.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural908", fUML_Tests_TestRealFunctions_Call_Abs_Abs_result_LiteralUnlimitedNatural908);
				fUML_Tests_TestRealFunctions_Call_Abs_Abs_x.reset(new InputPin());
				this->addToElementRepository("Abs.x", fUML_Tests_TestRealFunctions_Call_Abs_Abs_x);
					fUML_Tests_TestRealFunctions_Call_Abs_Abs_x_LiteralInteger909.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger909", fUML_Tests_TestRealFunctions_Call_Abs_Abs_x_LiteralInteger909);
					fUML_Tests_TestRealFunctions_Call_Abs_Abs_x_LiteralUnlimitedNatural910.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural910", fUML_Tests_TestRealFunctions_Call_Abs_Abs_x_LiteralUnlimitedNatural910);
			fUML_Tests_TestRealFunctions_ControlFlow911.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow911", fUML_Tests_TestRealFunctions_ControlFlow911);
				fUML_Tests_TestRealFunctions_ControlFlow911_LiteralUnlimitedNatural912.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural912", fUML_Tests_TestRealFunctions_ControlFlow911_LiteralUnlimitedNatural912);
			fUML_Tests_TestRealFunctions_Param_MinResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(MinResult)", fUML_Tests_TestRealFunctions_Param_MinResult);
			fUML_Tests_TestRealFunctions_ObjectFlow913.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow913", fUML_Tests_TestRealFunctions_ObjectFlow913);
				fUML_Tests_TestRealFunctions_ObjectFlow913_LiteralUnlimitedNatural914.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural914", fUML_Tests_TestRealFunctions_ObjectFlow913_LiteralUnlimitedNatural914);
			fUML_Tests_TestRealFunctions_ObjectFlow915.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow915", fUML_Tests_TestRealFunctions_ObjectFlow915);
				fUML_Tests_TestRealFunctions_ObjectFlow915_LiteralInteger916.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger916", fUML_Tests_TestRealFunctions_ObjectFlow915_LiteralInteger916);
			fUML_Tests_TestRealFunctions_ControlFlow917.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow917", fUML_Tests_TestRealFunctions_ControlFlow917);
				fUML_Tests_TestRealFunctions_ControlFlow917_LiteralUnlimitedNatural918.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural918", fUML_Tests_TestRealFunctions_ControlFlow917_LiteralUnlimitedNatural918);
			fUML_Tests_TestRealFunctions_PlusResult.reset(new Parameter());
			this->addToElementRepository("PlusResult", fUML_Tests_TestRealFunctions_PlusResult);
			fUML_Tests_TestRealFunctions_ObjectFlow919.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow919", fUML_Tests_TestRealFunctions_ObjectFlow919);
				fUML_Tests_TestRealFunctions_ObjectFlow919_LiteralInteger920.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger920", fUML_Tests_TestRealFunctions_ObjectFlow919_LiteralInteger920);
			fUML_Tests_TestRealFunctions_ObjectFlow921.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow921", fUML_Tests_TestRealFunctions_ObjectFlow921);
				fUML_Tests_TestRealFunctions_ObjectFlow921_LiteralInteger922.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger922", fUML_Tests_TestRealFunctions_ObjectFlow921_LiteralInteger922);
			fUML_Tests_TestRealFunctions_ObjectFlow923.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow923", fUML_Tests_TestRealFunctions_ObjectFlow923);
				fUML_Tests_TestRealFunctions_ObjectFlow923_LiteralUnlimitedNatural924.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural924", fUML_Tests_TestRealFunctions_ObjectFlow923_LiteralUnlimitedNatural924);
			fUML_Tests_TestRealFunctions_Param_InvResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(InvResult)", fUML_Tests_TestRealFunctions_Param_InvResult);
			fUML_Tests_TestRealFunctions_Call_Round.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Round)", fUML_Tests_TestRealFunctions_Call_Round);
				fUML_Tests_TestRealFunctions_Call_Round_Round_result.reset(new OutputPin());
				this->addToElementRepository("Round.result", fUML_Tests_TestRealFunctions_Call_Round_Round_result);
				fUML_Tests_TestRealFunctions_Call_Round_Round_x.reset(new InputPin());
				this->addToElementRepository("Round.x", fUML_Tests_TestRealFunctions_Call_Round_Round_x);
			fUML_Tests_TestRealFunctions_RoundResult.reset(new Parameter());
			this->addToElementRepository("RoundResult", fUML_Tests_TestRealFunctions_RoundResult);
				fUML_Tests_TestRealFunctions_RoundResult_LiteralUnlimitedNatural925.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural925", fUML_Tests_TestRealFunctions_RoundResult_LiteralUnlimitedNatural925);
				fUML_Tests_TestRealFunctions_RoundResult_LiteralInteger926.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger926", fUML_Tests_TestRealFunctions_RoundResult_LiteralInteger926);
			fUML_Tests_TestRealFunctions_Call_Min.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Min)", fUML_Tests_TestRealFunctions_Call_Min);
				fUML_Tests_TestRealFunctions_Call_Min_Min_x.reset(new InputPin());
				this->addToElementRepository("Min.x", fUML_Tests_TestRealFunctions_Call_Min_Min_x);
					fUML_Tests_TestRealFunctions_Call_Min_Min_x_LiteralUnlimitedNatural927.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural927", fUML_Tests_TestRealFunctions_Call_Min_Min_x_LiteralUnlimitedNatural927);
					fUML_Tests_TestRealFunctions_Call_Min_Min_x_LiteralInteger928.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger928", fUML_Tests_TestRealFunctions_Call_Min_Min_x_LiteralInteger928);
				fUML_Tests_TestRealFunctions_Call_Min_Min_y.reset(new InputPin());
				this->addToElementRepository("Min.y", fUML_Tests_TestRealFunctions_Call_Min_Min_y);
					fUML_Tests_TestRealFunctions_Call_Min_Min_y_LiteralInteger929.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger929", fUML_Tests_TestRealFunctions_Call_Min_Min_y_LiteralInteger929);
					fUML_Tests_TestRealFunctions_Call_Min_Min_y_LiteralUnlimitedNatural930.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural930", fUML_Tests_TestRealFunctions_Call_Min_Min_y_LiteralUnlimitedNatural930);
				fUML_Tests_TestRealFunctions_Call_Min_Min_result.reset(new OutputPin());
				this->addToElementRepository("Min.result", fUML_Tests_TestRealFunctions_Call_Min_Min_result);
					fUML_Tests_TestRealFunctions_Call_Min_Min_result_LiteralInteger931.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger931", fUML_Tests_TestRealFunctions_Call_Min_Min_result_LiteralInteger931);
					fUML_Tests_TestRealFunctions_Call_Min_Min_result_LiteralUnlimitedNatural932.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural932", fUML_Tests_TestRealFunctions_Call_Min_Min_result_LiteralUnlimitedNatural932);
			fUML_Tests_TestRealFunctions_TimesResult.reset(new Parameter());
			this->addToElementRepository("TimesResult", fUML_Tests_TestRealFunctions_TimesResult);
			fUML_Tests_TestRealFunctions_ObjectFlow933.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow933", fUML_Tests_TestRealFunctions_ObjectFlow933);
				fUML_Tests_TestRealFunctions_ObjectFlow933_LiteralInteger934.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger934", fUML_Tests_TestRealFunctions_ObjectFlow933_LiteralInteger934);
			fUML_Tests_TestRealFunctions_ObjectFlow935.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow935", fUML_Tests_TestRealFunctions_ObjectFlow935);
				fUML_Tests_TestRealFunctions_ObjectFlow935_LiteralUnlimitedNatural936.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural936", fUML_Tests_TestRealFunctions_ObjectFlow935_LiteralUnlimitedNatural936);
			fUML_Tests_TestRealFunctions_Param_DivideResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(DivideResult)", fUML_Tests_TestRealFunctions_Param_DivideResult);
			fUML_Tests_TestRealFunctions_ObjectFlow937.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow937", fUML_Tests_TestRealFunctions_ObjectFlow937);
				fUML_Tests_TestRealFunctions_ObjectFlow937_LiteralInteger938.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger938", fUML_Tests_TestRealFunctions_ObjectFlow937_LiteralInteger938);
			fUML_Tests_TestRealFunctions_Value_0_5.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(0.5)", fUML_Tests_TestRealFunctions_Value_0_5);
				fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result.reset(new OutputPin());
				this->addToElementRepository("Value(0.5).result", fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result);
					fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result_LiteralInteger939.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger939", fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result_LiteralInteger939);
					fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result_LiteralUnlimitedNatural940.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural940", fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result_LiteralUnlimitedNatural940);
				fUML_Tests_TestRealFunctions_Value_0_5_LiteralReal941.reset(new LiteralReal());
				this->addToElementRepository("LiteralReal941", fUML_Tests_TestRealFunctions_Value_0_5_LiteralReal941);
			fUML_Tests_TestRealFunctions_ObjectFlow942.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow942", fUML_Tests_TestRealFunctions_ObjectFlow942);
				fUML_Tests_TestRealFunctions_ObjectFlow942_LiteralUnlimitedNatural943.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural943", fUML_Tests_TestRealFunctions_ObjectFlow942_LiteralUnlimitedNatural943);
			fUML_Tests_TestRealFunctions_ObjectFlow944.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow944", fUML_Tests_TestRealFunctions_ObjectFlow944);
				fUML_Tests_TestRealFunctions_ObjectFlow944_LiteralInteger945.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger945", fUML_Tests_TestRealFunctions_ObjectFlow944_LiteralInteger945);
			fUML_Tests_TestRealFunctions_ObjectFlow946.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow946", fUML_Tests_TestRealFunctions_ObjectFlow946);
				fUML_Tests_TestRealFunctions_ObjectFlow946_LiteralInteger947.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger947", fUML_Tests_TestRealFunctions_ObjectFlow946_LiteralInteger947);
			fUML_Tests_TestRealFunctions_MinResult.reset(new Parameter());
			this->addToElementRepository("MinResult", fUML_Tests_TestRealFunctions_MinResult);
			fUML_Tests_TestRealFunctions_ControlFlow948.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow948", fUML_Tests_TestRealFunctions_ControlFlow948);
				fUML_Tests_TestRealFunctions_ControlFlow948_LiteralInteger949.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger949", fUML_Tests_TestRealFunctions_ControlFlow948_LiteralInteger949);
			fUML_Tests_TestRealFunctions_MaxResult.reset(new Parameter());
			this->addToElementRepository("MaxResult", fUML_Tests_TestRealFunctions_MaxResult);
			fUML_Tests_TestRealFunctions_AbsResult.reset(new Parameter());
			this->addToElementRepository("AbsResult", fUML_Tests_TestRealFunctions_AbsResult);
			fUML_Tests_TestRealFunctions_ObjectFlow950.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow950", fUML_Tests_TestRealFunctions_ObjectFlow950);
				fUML_Tests_TestRealFunctions_ObjectFlow950_LiteralInteger951.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger951", fUML_Tests_TestRealFunctions_ObjectFlow950_LiteralInteger951);
			fUML_Tests_TestRealFunctions_ObjectFlow952.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow952", fUML_Tests_TestRealFunctions_ObjectFlow952);
				fUML_Tests_TestRealFunctions_ObjectFlow952_LiteralInteger953.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger953", fUML_Tests_TestRealFunctions_ObjectFlow952_LiteralInteger953);
			fUML_Tests_TestRealFunctions_Param_MaxResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(MaxResult)", fUML_Tests_TestRealFunctions_Param_MaxResult);
			fUML_Tests_TestRealFunctions_MinusResult.reset(new Parameter());
			this->addToElementRepository("MinusResult", fUML_Tests_TestRealFunctions_MinusResult);
			fUML_Tests_TestRealFunctions_Call_Max.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Max)", fUML_Tests_TestRealFunctions_Call_Max);
				fUML_Tests_TestRealFunctions_Call_Max_Max_x.reset(new InputPin());
				this->addToElementRepository("Max.x", fUML_Tests_TestRealFunctions_Call_Max_Max_x);
					fUML_Tests_TestRealFunctions_Call_Max_Max_x_LiteralUnlimitedNatural954.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural954", fUML_Tests_TestRealFunctions_Call_Max_Max_x_LiteralUnlimitedNatural954);
					fUML_Tests_TestRealFunctions_Call_Max_Max_x_LiteralInteger955.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger955", fUML_Tests_TestRealFunctions_Call_Max_Max_x_LiteralInteger955);
				fUML_Tests_TestRealFunctions_Call_Max_Max_y.reset(new InputPin());
				this->addToElementRepository("Max.y", fUML_Tests_TestRealFunctions_Call_Max_Max_y);
					fUML_Tests_TestRealFunctions_Call_Max_Max_y_LiteralInteger956.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger956", fUML_Tests_TestRealFunctions_Call_Max_Max_y_LiteralInteger956);
					fUML_Tests_TestRealFunctions_Call_Max_Max_y_LiteralUnlimitedNatural957.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural957", fUML_Tests_TestRealFunctions_Call_Max_Max_y_LiteralUnlimitedNatural957);
				fUML_Tests_TestRealFunctions_Call_Max_Max_result.reset(new OutputPin());
				this->addToElementRepository("Max.result", fUML_Tests_TestRealFunctions_Call_Max_Max_result);
					fUML_Tests_TestRealFunctions_Call_Max_Max_result_LiteralInteger958.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger958", fUML_Tests_TestRealFunctions_Call_Max_Max_result_LiteralInteger958);
					fUML_Tests_TestRealFunctions_Call_Max_Max_result_LiteralUnlimitedNatural959.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural959", fUML_Tests_TestRealFunctions_Call_Max_Max_result_LiteralUnlimitedNatural959);
			fUML_Tests_TestRealFunctions_Param_FloorResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(FloorResult)", fUML_Tests_TestRealFunctions_Param_FloorResult);
			fUML_Tests_TestRealFunctions_ObjectFlow960.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow960", fUML_Tests_TestRealFunctions_ObjectFlow960);
				fUML_Tests_TestRealFunctions_ObjectFlow960_LiteralInteger961.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger961", fUML_Tests_TestRealFunctions_ObjectFlow960_LiteralInteger961);
			fUML_Tests_TestRealFunctions_ControlFlow962.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow962", fUML_Tests_TestRealFunctions_ControlFlow962);
				fUML_Tests_TestRealFunctions_ControlFlow962_LiteralInteger963.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger963", fUML_Tests_TestRealFunctions_ControlFlow962_LiteralInteger963);
			fUML_Tests_TestRealFunctions_ControlFlow964.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow964", fUML_Tests_TestRealFunctions_ControlFlow964);
				fUML_Tests_TestRealFunctions_ControlFlow964_LiteralUnlimitedNatural965.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural965", fUML_Tests_TestRealFunctions_ControlFlow964_LiteralUnlimitedNatural965);
			fUML_Tests_TestRealFunctions_Call_Divide.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Divide)", fUML_Tests_TestRealFunctions_Call_Divide);
				fUML_Tests_TestRealFunctions_Call_Divide_y.reset(new InputPin());
				this->addToElementRepository("y", fUML_Tests_TestRealFunctions_Call_Divide_y);
					fUML_Tests_TestRealFunctions_Call_Divide_y_LiteralInteger966.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger966", fUML_Tests_TestRealFunctions_Call_Divide_y_LiteralInteger966);
					fUML_Tests_TestRealFunctions_Call_Divide_y_LiteralUnlimitedNatural967.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural967", fUML_Tests_TestRealFunctions_Call_Divide_y_LiteralUnlimitedNatural967);
				fUML_Tests_TestRealFunctions_Call_Divide_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestRealFunctions_Call_Divide_result);
					fUML_Tests_TestRealFunctions_Call_Divide_result_LiteralUnlimitedNatural968.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural968", fUML_Tests_TestRealFunctions_Call_Divide_result_LiteralUnlimitedNatural968);
					fUML_Tests_TestRealFunctions_Call_Divide_result_LiteralInteger969.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger969", fUML_Tests_TestRealFunctions_Call_Divide_result_LiteralInteger969);
				fUML_Tests_TestRealFunctions_Call_Divide_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestRealFunctions_Call_Divide_x);
					fUML_Tests_TestRealFunctions_Call_Divide_x_LiteralUnlimitedNatural970.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural970", fUML_Tests_TestRealFunctions_Call_Divide_x_LiteralUnlimitedNatural970);
					fUML_Tests_TestRealFunctions_Call_Divide_x_LiteralInteger971.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger971", fUML_Tests_TestRealFunctions_Call_Divide_x_LiteralInteger971);
			fUML_Tests_TestRealFunctions_Param_ToIntegerResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(ToIntegerResult)", fUML_Tests_TestRealFunctions_Param_ToIntegerResult);
			fUML_Tests_TestRealFunctions_Call_Neg.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Neg)", fUML_Tests_TestRealFunctions_Call_Neg);
				fUML_Tests_TestRealFunctions_Call_Neg_Neg_x.reset(new InputPin());
				this->addToElementRepository("Neg.x", fUML_Tests_TestRealFunctions_Call_Neg_Neg_x);
					fUML_Tests_TestRealFunctions_Call_Neg_Neg_x_LiteralUnlimitedNatural972.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural972", fUML_Tests_TestRealFunctions_Call_Neg_Neg_x_LiteralUnlimitedNatural972);
					fUML_Tests_TestRealFunctions_Call_Neg_Neg_x_LiteralInteger973.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger973", fUML_Tests_TestRealFunctions_Call_Neg_Neg_x_LiteralInteger973);
				fUML_Tests_TestRealFunctions_Call_Neg_Neg_result.reset(new OutputPin());
				this->addToElementRepository("Neg.result", fUML_Tests_TestRealFunctions_Call_Neg_Neg_result);
					fUML_Tests_TestRealFunctions_Call_Neg_Neg_result_LiteralUnlimitedNatural974.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural974", fUML_Tests_TestRealFunctions_Call_Neg_Neg_result_LiteralUnlimitedNatural974);
					fUML_Tests_TestRealFunctions_Call_Neg_Neg_result_LiteralInteger975.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger975", fUML_Tests_TestRealFunctions_Call_Neg_Neg_result_LiteralInteger975);
			fUML_Tests_TestRealFunctions_ControlFlow976.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow976", fUML_Tests_TestRealFunctions_ControlFlow976);
				fUML_Tests_TestRealFunctions_ControlFlow976_LiteralUnlimitedNatural977.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural977", fUML_Tests_TestRealFunctions_ControlFlow976_LiteralUnlimitedNatural977);
			fUML_Tests_TestRealFunctions_FloorResult.reset(new Parameter());
			this->addToElementRepository("FloorResult", fUML_Tests_TestRealFunctions_FloorResult);
				fUML_Tests_TestRealFunctions_FloorResult_LiteralInteger978.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger978", fUML_Tests_TestRealFunctions_FloorResult_LiteralInteger978);
				fUML_Tests_TestRealFunctions_FloorResult_LiteralUnlimitedNatural979.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural979", fUML_Tests_TestRealFunctions_FloorResult_LiteralUnlimitedNatural979);
			fUML_Tests_TestRealFunctions_ControlFlow980.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow980", fUML_Tests_TestRealFunctions_ControlFlow980);
				fUML_Tests_TestRealFunctions_ControlFlow980_LiteralUnlimitedNatural981.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural981", fUML_Tests_TestRealFunctions_ControlFlow980_LiteralUnlimitedNatural981);
			fUML_Tests_TestRealFunctions_Fork_3_1.reset(new ForkNode());
			this->addToElementRepository("Fork(3.1)", fUML_Tests_TestRealFunctions_Fork_3_1);
			fUML_Tests_TestRealFunctions_ObjectFlow982.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow982", fUML_Tests_TestRealFunctions_ObjectFlow982);
				fUML_Tests_TestRealFunctions_ObjectFlow982_LiteralInteger983.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger983", fUML_Tests_TestRealFunctions_ObjectFlow982_LiteralInteger983);
			fUML_Tests_TestRealFunctions_NegResult.reset(new Parameter());
			this->addToElementRepository("NegResult", fUML_Tests_TestRealFunctions_NegResult);
			fUML_Tests_TestRealFunctions_Value_minus2_3.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(-2.3)", fUML_Tests_TestRealFunctions_Value_minus2_3);
				fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result.reset(new OutputPin());
				this->addToElementRepository("Value(-2.3).result", fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result);
					fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result_LiteralUnlimitedNatural984.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural984", fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result_LiteralUnlimitedNatural984);
					fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result_LiteralInteger985.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger985", fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result_LiteralInteger985);
				fUML_Tests_TestRealFunctions_Value_minus2_3_LiteralReal986.reset(new LiteralReal());
				this->addToElementRepository("LiteralReal986", fUML_Tests_TestRealFunctions_Value_minus2_3_LiteralReal986);
			fUML_Tests_TestRealFunctions_ObjectFlow987.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow987", fUML_Tests_TestRealFunctions_ObjectFlow987);
				fUML_Tests_TestRealFunctions_ObjectFlow987_LiteralInteger988.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger988", fUML_Tests_TestRealFunctions_ObjectFlow987_LiteralInteger988);
			fUML_Tests_TestRealFunctions_ToIntegerResult.reset(new Parameter());
			this->addToElementRepository("ToIntegerResult", fUML_Tests_TestRealFunctions_ToIntegerResult);
				fUML_Tests_TestRealFunctions_ToIntegerResult_LiteralUnlimitedNatural989.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural989", fUML_Tests_TestRealFunctions_ToIntegerResult_LiteralUnlimitedNatural989);
				fUML_Tests_TestRealFunctions_ToIntegerResult_LiteralInteger990.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger990", fUML_Tests_TestRealFunctions_ToIntegerResult_LiteralInteger990);
			fUML_Tests_TestRealFunctions_Fork_0_5.reset(new ForkNode());
			this->addToElementRepository("Fork(0.5)", fUML_Tests_TestRealFunctions_Fork_0_5);
			fUML_Tests_TestRealFunctions_Param_TimesResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(TimesResult)", fUML_Tests_TestRealFunctions_Param_TimesResult);
			fUML_Tests_TestRealFunctions_ControlFlow991.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow991", fUML_Tests_TestRealFunctions_ControlFlow991);
				fUML_Tests_TestRealFunctions_ControlFlow991_LiteralInteger992.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger992", fUML_Tests_TestRealFunctions_ControlFlow991_LiteralInteger992);
			fUML_Tests_TestRealFunctions_ControlFlow993.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow993", fUML_Tests_TestRealFunctions_ControlFlow993);
				fUML_Tests_TestRealFunctions_ControlFlow993_LiteralInteger994.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger994", fUML_Tests_TestRealFunctions_ControlFlow993_LiteralInteger994);
			fUML_Tests_TestRealFunctions_ObjectFlow995.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow995", fUML_Tests_TestRealFunctions_ObjectFlow995);
				fUML_Tests_TestRealFunctions_ObjectFlow995_LiteralInteger996.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger996", fUML_Tests_TestRealFunctions_ObjectFlow995_LiteralInteger996);
			fUML_Tests_TestRealFunctions_ObjectFlow997.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow997", fUML_Tests_TestRealFunctions_ObjectFlow997);
				fUML_Tests_TestRealFunctions_ObjectFlow997_LiteralUnlimitedNatural998.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural998", fUML_Tests_TestRealFunctions_ObjectFlow997_LiteralUnlimitedNatural998);
			fUML_Tests_TestRealFunctions_Fork_minus2_3.reset(new ForkNode());
			this->addToElementRepository("Fork(-2.3)", fUML_Tests_TestRealFunctions_Fork_minus2_3);
			fUML_Tests_TestRealFunctions_ObjectFlow999.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow999", fUML_Tests_TestRealFunctions_ObjectFlow999);
				fUML_Tests_TestRealFunctions_ObjectFlow999_LiteralInteger1000.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1000", fUML_Tests_TestRealFunctions_ObjectFlow999_LiteralInteger1000);
			fUML_Tests_TestRealFunctions_ObjectFlow1001.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1001", fUML_Tests_TestRealFunctions_ObjectFlow1001);
				fUML_Tests_TestRealFunctions_ObjectFlow1001_LiteralInteger1002.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1002", fUML_Tests_TestRealFunctions_ObjectFlow1001_LiteralInteger1002);
			fUML_Tests_TestRealFunctions_ControlFlow1003.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1003", fUML_Tests_TestRealFunctions_ControlFlow1003);
				fUML_Tests_TestRealFunctions_ControlFlow1003_LiteralInteger1004.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1004", fUML_Tests_TestRealFunctions_ControlFlow1003_LiteralInteger1004);
		fUML_Tests_TestClassWriterReader.reset(new Activity());
		this->addToElementRepository("TestClassWriterReader", fUML_Tests_TestClassWriterReader);
			fUML_Tests_TestClassWriterReader_ObjectFlow1005.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1005", fUML_Tests_TestClassWriterReader_ObjectFlow1005);
				fUML_Tests_TestClassWriterReader_ObjectFlow1005_LiteralInteger1006.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1006", fUML_Tests_TestClassWriterReader_ObjectFlow1005_LiteralInteger1006);
			fUML_Tests_TestClassWriterReader_ObjectFlow1007.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1007", fUML_Tests_TestClassWriterReader_ObjectFlow1007);
				fUML_Tests_TestClassWriterReader_ObjectFlow1007_LiteralInteger1008.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1008", fUML_Tests_TestClassWriterReader_ObjectFlow1007_LiteralInteger1008);
			fUML_Tests_TestClassWriterReader_ObjectFlow1009.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1009", fUML_Tests_TestClassWriterReader_ObjectFlow1009);
				fUML_Tests_TestClassWriterReader_ObjectFlow1009_LiteralInteger1010.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1010", fUML_Tests_TestClassWriterReader_ObjectFlow1009_LiteralInteger1010);
			fUML_Tests_TestClassWriterReader_Parameter_x.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(x)", fUML_Tests_TestClassWriterReader_Parameter_x);
			fUML_Tests_TestClassWriterReader_Value_999.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(999)", fUML_Tests_TestClassWriterReader_Value_999);
				fUML_Tests_TestClassWriterReader_Value_999_LiteralInteger1011.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1011", fUML_Tests_TestClassWriterReader_Value_999_LiteralInteger1011);
				fUML_Tests_TestClassWriterReader_Value_999_Value_999_result.reset(new OutputPin());
				this->addToElementRepository("Value(999).result", fUML_Tests_TestClassWriterReader_Value_999_Value_999_result);
					fUML_Tests_TestClassWriterReader_Value_999_Value_999_result_LiteralUnlimitedNatural1012.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1012", fUML_Tests_TestClassWriterReader_Value_999_Value_999_result_LiteralUnlimitedNatural1012);
					fUML_Tests_TestClassWriterReader_Value_999_Value_999_result_LiteralInteger1013.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1013", fUML_Tests_TestClassWriterReader_Value_999_Value_999_result_LiteralInteger1013);
			fUML_Tests_TestClassWriterReader_x.reset(new Parameter());
			this->addToElementRepository("x", fUML_Tests_TestClassWriterReader_x);
				fUML_Tests_TestClassWriterReader_x_LiteralInteger1014.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1014", fUML_Tests_TestClassWriterReader_x_LiteralInteger1014);
				fUML_Tests_TestClassWriterReader_x_LiteralUnlimitedNatural1015.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1015", fUML_Tests_TestClassWriterReader_x_LiteralUnlimitedNatural1015);
			fUML_Tests_TestClassWriterReader_ObjectFlow1016.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1016", fUML_Tests_TestClassWriterReader_ObjectFlow1016);
				fUML_Tests_TestClassWriterReader_ObjectFlow1016_LiteralInteger1017.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1017", fUML_Tests_TestClassWriterReader_ObjectFlow1016_LiteralInteger1017);
			fUML_Tests_TestClassWriterReader_Create_TestClass.reset(new CreateObjectAction());
			this->addToElementRepository("Create(TestClass)", fUML_Tests_TestClassWriterReader_Create_TestClass);
				fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result.reset(new OutputPin());
				this->addToElementRepository("Create(TestClass).result", fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result);
					fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result_LiteralInteger1018.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1018", fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result_LiteralInteger1018);
					fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result_LiteralUnlimitedNatural1019.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1019", fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result_LiteralUnlimitedNatural1019);
			fUML_Tests_TestClassWriterReader_Read_x.reset(new ReadStructuralFeatureAction());
			this->addToElementRepository("Read(x)", fUML_Tests_TestClassWriterReader_Read_x);
				fUML_Tests_TestClassWriterReader_Read_x_Read_x_object.reset(new InputPin());
				this->addToElementRepository("Read(x).object", fUML_Tests_TestClassWriterReader_Read_x_Read_x_object);
					fUML_Tests_TestClassWriterReader_Read_x_Read_x_object_LiteralInteger1020.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1020", fUML_Tests_TestClassWriterReader_Read_x_Read_x_object_LiteralInteger1020);
					fUML_Tests_TestClassWriterReader_Read_x_Read_x_object_LiteralUnlimitedNatural1021.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1021", fUML_Tests_TestClassWriterReader_Read_x_Read_x_object_LiteralUnlimitedNatural1021);
				fUML_Tests_TestClassWriterReader_Read_x_Read_x_result.reset(new OutputPin());
				this->addToElementRepository("Read(x).result", fUML_Tests_TestClassWriterReader_Read_x_Read_x_result);
					fUML_Tests_TestClassWriterReader_Read_x_Read_x_result_LiteralUnlimitedNatural1022.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1022", fUML_Tests_TestClassWriterReader_Read_x_Read_x_result_LiteralUnlimitedNatural1022);
					fUML_Tests_TestClassWriterReader_Read_x_Read_x_result_LiteralInteger1023.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1023", fUML_Tests_TestClassWriterReader_Read_x_Read_x_result_LiteralInteger1023);
			fUML_Tests_TestClassWriterReader_Write_x.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(x)", fUML_Tests_TestClassWriterReader_Write_x);
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_object.reset(new InputPin());
				this->addToElementRepository("Write(x).object", fUML_Tests_TestClassWriterReader_Write_x_Write_x_object);
					fUML_Tests_TestClassWriterReader_Write_x_Write_x_object_LiteralInteger1024.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1024", fUML_Tests_TestClassWriterReader_Write_x_Write_x_object_LiteralInteger1024);
					fUML_Tests_TestClassWriterReader_Write_x_Write_x_object_LiteralUnlimitedNatural1025.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1025", fUML_Tests_TestClassWriterReader_Write_x_Write_x_object_LiteralUnlimitedNatural1025);
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_value.reset(new InputPin());
				this->addToElementRepository("Write(x).value", fUML_Tests_TestClassWriterReader_Write_x_Write_x_value);
					fUML_Tests_TestClassWriterReader_Write_x_Write_x_value_LiteralUnlimitedNatural1026.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1026", fUML_Tests_TestClassWriterReader_Write_x_Write_x_value_LiteralUnlimitedNatural1026);
					fUML_Tests_TestClassWriterReader_Write_x_Write_x_value_LiteralInteger1027.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1027", fUML_Tests_TestClassWriterReader_Write_x_Write_x_value_LiteralInteger1027);
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_result.reset(new OutputPin());
				this->addToElementRepository("Write(x).result", fUML_Tests_TestClassWriterReader_Write_x_Write_x_result);
					fUML_Tests_TestClassWriterReader_Write_x_Write_x_result_LiteralInteger1028.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1028", fUML_Tests_TestClassWriterReader_Write_x_Write_x_result_LiteralInteger1028);
					fUML_Tests_TestClassWriterReader_Write_x_Write_x_result_LiteralUnlimitedNatural1029.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1029", fUML_Tests_TestClassWriterReader_Write_x_Write_x_result_LiteralUnlimitedNatural1029);
		fUML_Tests_TestCentralBuffer.reset(new Activity());
		this->addToElementRepository("TestCentralBuffer", fUML_Tests_TestCentralBuffer);
			fUML_Tests_TestCentralBuffer_output.reset(new Parameter());
			this->addToElementRepository("output", fUML_Tests_TestCentralBuffer_output);
				fUML_Tests_TestCentralBuffer_output_LiteralUnlimitedNatural1030.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1030", fUML_Tests_TestCentralBuffer_output_LiteralUnlimitedNatural1030);
				fUML_Tests_TestCentralBuffer_output_LiteralInteger1031.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1031", fUML_Tests_TestCentralBuffer_output_LiteralInteger1031);
			fUML_Tests_TestCentralBuffer_InitialNode.reset(new InitialNode());
			this->addToElementRepository("InitialNode", fUML_Tests_TestCentralBuffer_InitialNode);
			fUML_Tests_TestCentralBuffer_ObjectFlow1032.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1032", fUML_Tests_TestCentralBuffer_ObjectFlow1032);
				fUML_Tests_TestCentralBuffer_ObjectFlow1032_LiteralUnlimitedNatural1033.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1033", fUML_Tests_TestCentralBuffer_ObjectFlow1032_LiteralUnlimitedNatural1033);
			fUML_Tests_TestCentralBuffer_ControlFlow1034.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1034", fUML_Tests_TestCentralBuffer_ControlFlow1034);
				fUML_Tests_TestCentralBuffer_ControlFlow1034_LiteralUnlimitedNatural1035.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1035", fUML_Tests_TestCentralBuffer_ControlFlow1034_LiteralUnlimitedNatural1035);
			fUML_Tests_TestCentralBuffer_input2.reset(new Parameter());
			this->addToElementRepository("input2", fUML_Tests_TestCentralBuffer_input2);
			fUML_Tests_TestCentralBuffer_Parameter_input1.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(input1)", fUML_Tests_TestCentralBuffer_Parameter_input1);
			fUML_Tests_TestCentralBuffer_ObjectFlow1036.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1036", fUML_Tests_TestCentralBuffer_ObjectFlow1036);
				fUML_Tests_TestCentralBuffer_ObjectFlow1036_LiteralUnlimitedNatural1037.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1037", fUML_Tests_TestCentralBuffer_ObjectFlow1036_LiteralUnlimitedNatural1037);
			fUML_Tests_TestCentralBuffer_Parameter_output.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(output)", fUML_Tests_TestCentralBuffer_Parameter_output);
			fUML_Tests_TestCentralBuffer_Parameter_input2.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(input2)", fUML_Tests_TestCentralBuffer_Parameter_input2);
			fUML_Tests_TestCentralBuffer_StructuredActivityNode.reset(new StructuredActivityNode());
			this->addToElementRepository("StructuredActivityNode", fUML_Tests_TestCentralBuffer_StructuredActivityNode);
				fUML_Tests_TestCentralBuffer_StructuredActivityNode_CentralBufferNode.reset(new CentralBufferNode());
				this->addToElementRepository("CentralBufferNode", fUML_Tests_TestCentralBuffer_StructuredActivityNode_CentralBufferNode);
			fUML_Tests_TestCentralBuffer_ObjectFlow1038.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1038", fUML_Tests_TestCentralBuffer_ObjectFlow1038);
				fUML_Tests_TestCentralBuffer_ObjectFlow1038_LiteralUnlimitedNatural1039.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1039", fUML_Tests_TestCentralBuffer_ObjectFlow1038_LiteralUnlimitedNatural1039);
			fUML_Tests_TestCentralBuffer_input1.reset(new Parameter());
			this->addToElementRepository("input1", fUML_Tests_TestCentralBuffer_input1);
		fUML_Tests_CompositeAssociation.reset(new Association());
		this->addToElementRepository("CompositeAssociation", fUML_Tests_CompositeAssociation);
			fUML_Tests_CompositeAssociation_c2.reset(new Property());
			this->addToElementRepository("c2", fUML_Tests_CompositeAssociation_c2);
			fUML_Tests_CompositeAssociation_composite.reset(new Property());
			this->addToElementRepository("composite", fUML_Tests_CompositeAssociation_composite);
		fUML_Tests_SignalEvent1040.reset(new SignalEvent());
		this->addToElementRepository("SignalEvent1040", fUML_Tests_SignalEvent1040);
		fUML_Tests_TestCallAccepter.reset(new Activity());
		this->addToElementRepository("TestCallAccepter", fUML_Tests_TestCallAccepter);
			fUML_Tests_TestCallAccepter_ObjectFlow1041.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1041", fUML_Tests_TestCallAccepter_ObjectFlow1041);
				fUML_Tests_TestCallAccepter_ObjectFlow1041_LiteralUnlimitedNatural1042.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1042", fUML_Tests_TestCallAccepter_ObjectFlow1041_LiteralUnlimitedNatural1042);
			fUML_Tests_TestCallAccepter_InitialNode1043.reset(new InitialNode());
			this->addToElementRepository("InitialNode1043", fUML_Tests_TestCallAccepter_InitialNode1043);
			fUML_Tests_TestCallAccepter_test.reset(new Operation());
			this->addToElementRepository("test", fUML_Tests_TestCallAccepter_test);
				fUML_Tests_TestCallAccepter_test_input.reset(new Parameter());
				this->addToElementRepository("input", fUML_Tests_TestCallAccepter_test_input);
				fUML_Tests_TestCallAccepter_test_output.reset(new Parameter());
				this->addToElementRepository("output", fUML_Tests_TestCallAccepter_test_output);
			fUML_Tests_TestCallAccepter_Reply_test.reset(new ReplyAction());
			this->addToElementRepository("Reply(test)", fUML_Tests_TestCallAccepter_Reply_test);
				fUML_Tests_TestCallAccepter_Reply_test_Reply_test_replyValue.reset(new InputPin());
				this->addToElementRepository("Reply(test).replyValue", fUML_Tests_TestCallAccepter_Reply_test_Reply_test_replyValue);
				fUML_Tests_TestCallAccepter_Reply_test_Reply_test_returnInfo.reset(new InputPin());
				this->addToElementRepository("Reply(test).returnInfo", fUML_Tests_TestCallAccepter_Reply_test_Reply_test_returnInfo);
			fUML_Tests_TestCallAccepter_ObjectFlow1044.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1044", fUML_Tests_TestCallAccepter_ObjectFlow1044);
				fUML_Tests_TestCallAccepter_ObjectFlow1044_LiteralUnlimitedNatural1045.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1045", fUML_Tests_TestCallAccepter_ObjectFlow1044_LiteralUnlimitedNatural1045);
			fUML_Tests_TestCallAccepter_Accept_test.reset(new AcceptCallAction());
			this->addToElementRepository("Accept(test)", fUML_Tests_TestCallAccepter_Accept_test);
				fUML_Tests_TestCallAccepter_Accept_test_Accept_test_result.reset(new OutputPin());
				this->addToElementRepository("Accept(test).result", fUML_Tests_TestCallAccepter_Accept_test_Accept_test_result);
				fUML_Tests_TestCallAccepter_Accept_test_Accept_test_returnInfo.reset(new OutputPin());
				this->addToElementRepository("Accept(test).returnInfo", fUML_Tests_TestCallAccepter_Accept_test_Accept_test_returnInfo);
				fUML_Tests_TestCallAccepter_Accept_test_Trigger1046.reset(new Trigger());
				this->addToElementRepository("Trigger1046", fUML_Tests_TestCallAccepter_Accept_test_Trigger1046);
			fUML_Tests_TestCallAccepter_ControlFlow1047.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1047", fUML_Tests_TestCallAccepter_ControlFlow1047);
				fUML_Tests_TestCallAccepter_ControlFlow1047_LiteralUnlimitedNatural1048.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1048", fUML_Tests_TestCallAccepter_ControlFlow1047_LiteralUnlimitedNatural1048);
		fUML_Tests_TestClassObjectCreator.reset(new Activity());
		this->addToElementRepository("TestClassObjectCreator", fUML_Tests_TestClassObjectCreator);
			fUML_Tests_TestClassObjectCreator_ObjectFlow1049.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1049", fUML_Tests_TestClassObjectCreator_ObjectFlow1049);
				fUML_Tests_TestClassObjectCreator_ObjectFlow1049_LiteralInteger1050.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1050", fUML_Tests_TestClassObjectCreator_ObjectFlow1049_LiteralInteger1050);
			fUML_Tests_TestClassObjectCreator_result.reset(new Parameter());
			this->addToElementRepository("result", fUML_Tests_TestClassObjectCreator_result);
				fUML_Tests_TestClassObjectCreator_result_LiteralUnlimitedNatural1051.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1051", fUML_Tests_TestClassObjectCreator_result_LiteralUnlimitedNatural1051);
				fUML_Tests_TestClassObjectCreator_result_LiteralInteger1052.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1052", fUML_Tests_TestClassObjectCreator_result_LiteralInteger1052);
			fUML_Tests_TestClassObjectCreator_Create_TestClass.reset(new CreateObjectAction());
			this->addToElementRepository("Create(TestClass)", fUML_Tests_TestClassObjectCreator_Create_TestClass);
				fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result.reset(new OutputPin());
				this->addToElementRepository("Create(TestClass).result", fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result);
					fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result_LiteralUnlimitedNatural1053.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1053", fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result_LiteralUnlimitedNatural1053);
					fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result_LiteralInteger1054.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1054", fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result_LiteralInteger1054);
			fUML_Tests_TestClassObjectCreator_Parameter_result.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(result)", fUML_Tests_TestClassObjectCreator_Parameter_result);
		fUML_Tests_TestAssociation.reset(new Association());
		this->addToElementRepository("TestAssociation", fUML_Tests_TestAssociation);
			fUML_Tests_TestAssociation_end1.reset(new Property());
			this->addToElementRepository("end1", fUML_Tests_TestAssociation_end1);
				fUML_Tests_TestAssociation_end1_LiteralUnlimitedNatural1055.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1055", fUML_Tests_TestAssociation_end1_LiteralUnlimitedNatural1055);
				fUML_Tests_TestAssociation_end1_LiteralInteger1056.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1056", fUML_Tests_TestAssociation_end1_LiteralInteger1056);
			fUML_Tests_TestAssociation_end2.reset(new Property());
			this->addToElementRepository("end2", fUML_Tests_TestAssociation_end2);
				fUML_Tests_TestAssociation_end2_LiteralInteger1057.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1057", fUML_Tests_TestAssociation_end2_LiteralInteger1057);
				fUML_Tests_TestAssociation_end2_LiteralUnlimitedNatural1058.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1058", fUML_Tests_TestAssociation_end2_LiteralUnlimitedNatural1058);
		fUML_Tests_NodeEnabler.reset(new Activity());
		this->addToElementRepository("NodeEnabler", fUML_Tests_NodeEnabler);
			fUML_Tests_NodeEnabler_output.reset(new Parameter());
			this->addToElementRepository("output", fUML_Tests_NodeEnabler_output);
				fUML_Tests_NodeEnabler_output_LiteralUnlimitedNatural1059.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1059", fUML_Tests_NodeEnabler_output_LiteralUnlimitedNatural1059);
				fUML_Tests_NodeEnabler_output_LiteralInteger1060.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1060", fUML_Tests_NodeEnabler_output_LiteralInteger1060);
			fUML_Tests_NodeEnabler_input.reset(new Parameter());
			this->addToElementRepository("input", fUML_Tests_NodeEnabler_input);
				fUML_Tests_NodeEnabler_input_LiteralUnlimitedNatural1061.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1061", fUML_Tests_NodeEnabler_input_LiteralUnlimitedNatural1061);
				fUML_Tests_NodeEnabler_input_LiteralInteger1062.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1062", fUML_Tests_NodeEnabler_input_LiteralInteger1062);
			fUML_Tests_NodeEnabler_ObjectFlow1063.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1063", fUML_Tests_NodeEnabler_ObjectFlow1063);
				fUML_Tests_NodeEnabler_ObjectFlow1063_LiteralUnlimitedNatural1064.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1064", fUML_Tests_NodeEnabler_ObjectFlow1063_LiteralUnlimitedNatural1064);
			fUML_Tests_NodeEnabler_FinalNode.reset(new ActivityFinalNode());
			this->addToElementRepository("FinalNode", fUML_Tests_NodeEnabler_FinalNode);
			fUML_Tests_NodeEnabler_ControlFlow1065.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1065", fUML_Tests_NodeEnabler_ControlFlow1065);
				fUML_Tests_NodeEnabler_ControlFlow1065_LiteralUnlimitedNatural1066.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1066", fUML_Tests_NodeEnabler_ControlFlow1065_LiteralUnlimitedNatural1066);
			fUML_Tests_NodeEnabler_StructuredNode.reset(new StructuredActivityNode());
			this->addToElementRepository("StructuredNode", fUML_Tests_NodeEnabler_StructuredNode);
				fUML_Tests_NodeEnabler_StructuredNode_Call_Copier.reset(new CallBehaviorAction());
				this->addToElementRepository("Call(Copier)", fUML_Tests_NodeEnabler_StructuredNode_Call_Copier);
					fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_input.reset(new InputPin());
					this->addToElementRepository("Call(Copier).input", fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_input);
						fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_input_LiteralUnlimitedNatural1067.reset(new LiteralUnlimitedNatural());
						this->addToElementRepository("LiteralUnlimitedNatural1067", fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_input_LiteralUnlimitedNatural1067);
						fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_input_LiteralInteger1068.reset(new LiteralInteger());
						this->addToElementRepository("LiteralInteger1068", fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_input_LiteralInteger1068);
					fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_output.reset(new OutputPin());
					this->addToElementRepository("Call(Copier).output", fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_output);
						fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_output_LiteralUnlimitedNatural1069.reset(new LiteralUnlimitedNatural());
						this->addToElementRepository("LiteralUnlimitedNatural1069", fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_output_LiteralUnlimitedNatural1069);
						fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_output_LiteralInteger1070.reset(new LiteralInteger());
						this->addToElementRepository("LiteralInteger1070", fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_output_LiteralInteger1070);
			fUML_Tests_NodeEnabler_Input_input.reset(new ActivityParameterNode());
			this->addToElementRepository("Input(input)", fUML_Tests_NodeEnabler_Input_input);
			fUML_Tests_NodeEnabler_ObjectFlow1071.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1071", fUML_Tests_NodeEnabler_ObjectFlow1071);
				fUML_Tests_NodeEnabler_ObjectFlow1071_LiteralUnlimitedNatural1072.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1072", fUML_Tests_NodeEnabler_ObjectFlow1071_LiteralUnlimitedNatural1072);
			fUML_Tests_NodeEnabler_Output_output.reset(new ActivityParameterNode());
			this->addToElementRepository("Output(output)", fUML_Tests_NodeEnabler_Output_output);
		fUML_Tests_DecisionJoin.reset(new Activity());
		this->addToElementRepository("DecisionJoin", fUML_Tests_DecisionJoin);
			fUML_Tests_DecisionJoin_ObjectFlow1073.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1073", fUML_Tests_DecisionJoin_ObjectFlow1073);
				fUML_Tests_DecisionJoin_ObjectFlow1073_LiteralInteger1074.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1074", fUML_Tests_DecisionJoin_ObjectFlow1073_LiteralInteger1074);
				fUML_Tests_DecisionJoin_ObjectFlow1073_LiteralUnlimitedNatural1075.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1075", fUML_Tests_DecisionJoin_ObjectFlow1073_LiteralUnlimitedNatural1075);
			fUML_Tests_DecisionJoin_Value_0.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(0)", fUML_Tests_DecisionJoin_Value_0);
				fUML_Tests_DecisionJoin_Value_0_OutputPin1076.reset(new OutputPin());
				this->addToElementRepository("OutputPin1076", fUML_Tests_DecisionJoin_Value_0_OutputPin1076);
				fUML_Tests_DecisionJoin_Value_0_LiteralInteger1077.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1077", fUML_Tests_DecisionJoin_Value_0_LiteralInteger1077);
			fUML_Tests_DecisionJoin_OutputNode.reset(new ActivityParameterNode());
			this->addToElementRepository("OutputNode", fUML_Tests_DecisionJoin_OutputNode);
			fUML_Tests_DecisionJoin_ObjectFlow1078.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1078", fUML_Tests_DecisionJoin_ObjectFlow1078);
				fUML_Tests_DecisionJoin_ObjectFlow1078_LiteralInteger1079.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1079", fUML_Tests_DecisionJoin_ObjectFlow1078_LiteralInteger1079);
			fUML_Tests_DecisionJoin_ControlFlow1080.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1080", fUML_Tests_DecisionJoin_ControlFlow1080);
				fUML_Tests_DecisionJoin_ControlFlow1080_LiteralInteger1081.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1081", fUML_Tests_DecisionJoin_ControlFlow1080_LiteralInteger1081);
			fUML_Tests_DecisionJoin_JoinNode.reset(new JoinNode());
			this->addToElementRepository("JoinNode", fUML_Tests_DecisionJoin_JoinNode);
			fUML_Tests_DecisionJoin_ObjectFlow1082.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1082", fUML_Tests_DecisionJoin_ObjectFlow1082);
				fUML_Tests_DecisionJoin_ObjectFlow1082_LiteralInteger1083.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1083", fUML_Tests_DecisionJoin_ObjectFlow1082_LiteralInteger1083);
			fUML_Tests_DecisionJoin_Value_1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)", fUML_Tests_DecisionJoin_Value_1);
				fUML_Tests_DecisionJoin_Value_1_LiteralInteger1084.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1084", fUML_Tests_DecisionJoin_Value_1_LiteralInteger1084);
				fUML_Tests_DecisionJoin_Value_1_OutputPin1085.reset(new OutputPin());
				this->addToElementRepository("OutputPin1085", fUML_Tests_DecisionJoin_Value_1_OutputPin1085);
			fUML_Tests_DecisionJoin_ObjectFlow1086.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1086", fUML_Tests_DecisionJoin_ObjectFlow1086);
				fUML_Tests_DecisionJoin_ObjectFlow1086_LiteralInteger1087.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1087", fUML_Tests_DecisionJoin_ObjectFlow1086_LiteralInteger1087);
			fUML_Tests_DecisionJoin_DecisionNode.reset(new DecisionNode());
			this->addToElementRepository("DecisionNode", fUML_Tests_DecisionJoin_DecisionNode);
			fUML_Tests_DecisionJoin_Action_B.reset(new CallBehaviorAction());
			this->addToElementRepository("Action_B", fUML_Tests_DecisionJoin_Action_B);
				fUML_Tests_DecisionJoin_Action_B_Action_B_input.reset(new InputPin());
				this->addToElementRepository("Action_B.input", fUML_Tests_DecisionJoin_Action_B_Action_B_input);
					fUML_Tests_DecisionJoin_Action_B_Action_B_input_LiteralUnlimitedNatural1088.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1088", fUML_Tests_DecisionJoin_Action_B_Action_B_input_LiteralUnlimitedNatural1088);
					fUML_Tests_DecisionJoin_Action_B_Action_B_input_LiteralInteger1089.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1089", fUML_Tests_DecisionJoin_Action_B_Action_B_input_LiteralInteger1089);
				fUML_Tests_DecisionJoin_Action_B_Action_C_output.reset(new OutputPin());
				this->addToElementRepository("Action_C.output", fUML_Tests_DecisionJoin_Action_B_Action_C_output);
					fUML_Tests_DecisionJoin_Action_B_Action_C_output_LiteralInteger1090.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1090", fUML_Tests_DecisionJoin_Action_B_Action_C_output_LiteralInteger1090);
					fUML_Tests_DecisionJoin_Action_B_Action_C_output_LiteralUnlimitedNatural1091.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1091", fUML_Tests_DecisionJoin_Action_B_Action_C_output_LiteralUnlimitedNatural1091);
			fUML_Tests_DecisionJoin_ObjectFlow1092.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1092", fUML_Tests_DecisionJoin_ObjectFlow1092);
				fUML_Tests_DecisionJoin_ObjectFlow1092_LiteralInteger1093.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1093", fUML_Tests_DecisionJoin_ObjectFlow1092_LiteralInteger1093);
				fUML_Tests_DecisionJoin_ObjectFlow1092_LiteralUnlimitedNatural1094.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1094", fUML_Tests_DecisionJoin_ObjectFlow1092_LiteralUnlimitedNatural1094);
			fUML_Tests_DecisionJoin_output.reset(new Parameter());
			this->addToElementRepository("output", fUML_Tests_DecisionJoin_output);
				fUML_Tests_DecisionJoin_output_LiteralUnlimitedNatural1095.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1095", fUML_Tests_DecisionJoin_output_LiteralUnlimitedNatural1095);
				fUML_Tests_DecisionJoin_output_LiteralUnlimitedNatural1096.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1096", fUML_Tests_DecisionJoin_output_LiteralUnlimitedNatural1096);
			fUML_Tests_DecisionJoin_ObjectFlow1097.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1097", fUML_Tests_DecisionJoin_ObjectFlow1097);
				fUML_Tests_DecisionJoin_ObjectFlow1097_LiteralInteger1098.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1098", fUML_Tests_DecisionJoin_ObjectFlow1097_LiteralInteger1098);
			fUML_Tests_DecisionJoin_ObjectFlow1099.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1099", fUML_Tests_DecisionJoin_ObjectFlow1099);
				fUML_Tests_DecisionJoin_ObjectFlow1099_LiteralInteger1100.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1100", fUML_Tests_DecisionJoin_ObjectFlow1099_LiteralInteger1100);
			fUML_Tests_DecisionJoin_Action_A.reset(new CallBehaviorAction());
			this->addToElementRepository("Action_A", fUML_Tests_DecisionJoin_Action_A);
				fUML_Tests_DecisionJoin_Action_A_Action_A_input.reset(new InputPin());
				this->addToElementRepository("Action_A.input", fUML_Tests_DecisionJoin_Action_A_Action_A_input);
					fUML_Tests_DecisionJoin_Action_A_Action_A_input_LiteralInteger1101.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1101", fUML_Tests_DecisionJoin_Action_A_Action_A_input_LiteralInteger1101);
					fUML_Tests_DecisionJoin_Action_A_Action_A_input_LiteralUnlimitedNatural1102.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1102", fUML_Tests_DecisionJoin_Action_A_Action_A_input_LiteralUnlimitedNatural1102);
				fUML_Tests_DecisionJoin_Action_A_Action_A_output.reset(new OutputPin());
				this->addToElementRepository("Action_A.output", fUML_Tests_DecisionJoin_Action_A_Action_A_output);
					fUML_Tests_DecisionJoin_Action_A_Action_A_output_LiteralUnlimitedNatural1103.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1103", fUML_Tests_DecisionJoin_Action_A_Action_A_output_LiteralUnlimitedNatural1103);
					fUML_Tests_DecisionJoin_Action_A_Action_A_output_LiteralInteger1104.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1104", fUML_Tests_DecisionJoin_Action_A_Action_A_output_LiteralInteger1104);
		fUML_Tests_ForkMergeData.reset(new Activity());
		this->addToElementRepository("ForkMergeData", fUML_Tests_ForkMergeData);
			fUML_Tests_ForkMergeData_MergeNode.reset(new MergeNode());
			this->addToElementRepository("MergeNode", fUML_Tests_ForkMergeData_MergeNode);
			fUML_Tests_ForkMergeData_Action_A.reset(new ValueSpecificationAction());
			this->addToElementRepository("Action_A", fUML_Tests_ForkMergeData_Action_A);
				fUML_Tests_ForkMergeData_Action_A_Action_A_result.reset(new OutputPin());
				this->addToElementRepository("Action_A.result", fUML_Tests_ForkMergeData_Action_A_Action_A_result);
					fUML_Tests_ForkMergeData_Action_A_Action_A_result_LiteralInteger1105.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1105", fUML_Tests_ForkMergeData_Action_A_Action_A_result_LiteralInteger1105);
					fUML_Tests_ForkMergeData_Action_A_Action_A_result_LiteralUnlimitedNatural1106.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1106", fUML_Tests_ForkMergeData_Action_A_Action_A_result_LiteralUnlimitedNatural1106);
				fUML_Tests_ForkMergeData_Action_A_LiteralInteger1107.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1107", fUML_Tests_ForkMergeData_Action_A_LiteralInteger1107);
			fUML_Tests_ForkMergeData_InitialNode.reset(new InitialNode());
			this->addToElementRepository("InitialNode", fUML_Tests_ForkMergeData_InitialNode);
			fUML_Tests_ForkMergeData_output.reset(new Parameter());
			this->addToElementRepository("output", fUML_Tests_ForkMergeData_output);
				fUML_Tests_ForkMergeData_output_LiteralUnlimitedNatural1108.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1108", fUML_Tests_ForkMergeData_output_LiteralUnlimitedNatural1108);
				fUML_Tests_ForkMergeData_output_LiteralUnlimitedNatural1109.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1109", fUML_Tests_ForkMergeData_output_LiteralUnlimitedNatural1109);
			fUML_Tests_ForkMergeData_ControlFlow1110.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1110", fUML_Tests_ForkMergeData_ControlFlow1110);
				fUML_Tests_ForkMergeData_ControlFlow1110_LiteralInteger1111.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1111", fUML_Tests_ForkMergeData_ControlFlow1110_LiteralInteger1111);
			fUML_Tests_ForkMergeData_ObjectFlow1112.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1112", fUML_Tests_ForkMergeData_ObjectFlow1112);
				fUML_Tests_ForkMergeData_ObjectFlow1112_LiteralInteger1113.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1113", fUML_Tests_ForkMergeData_ObjectFlow1112_LiteralInteger1113);
			fUML_Tests_ForkMergeData_ObjectFlow1114.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1114", fUML_Tests_ForkMergeData_ObjectFlow1114);
				fUML_Tests_ForkMergeData_ObjectFlow1114_LiteralUnlimitedNatural1115.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1115", fUML_Tests_ForkMergeData_ObjectFlow1114_LiteralUnlimitedNatural1115);
			fUML_Tests_ForkMergeData_ForkNode.reset(new ForkNode());
			this->addToElementRepository("ForkNode", fUML_Tests_ForkMergeData_ForkNode);
			fUML_Tests_ForkMergeData_ObjectFlow1116.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1116", fUML_Tests_ForkMergeData_ObjectFlow1116);
				fUML_Tests_ForkMergeData_ObjectFlow1116_LiteralUnlimitedNatural1117.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1117", fUML_Tests_ForkMergeData_ObjectFlow1116_LiteralUnlimitedNatural1117);
			fUML_Tests_ForkMergeData_Parameter_output.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(output)", fUML_Tests_ForkMergeData_Parameter_output);
			fUML_Tests_ForkMergeData_Action_B.reset(new CallBehaviorAction());
			this->addToElementRepository("Action_B", fUML_Tests_ForkMergeData_Action_B);
				fUML_Tests_ForkMergeData_Action_B_Action_B_input.reset(new InputPin());
				this->addToElementRepository("Action_B.input", fUML_Tests_ForkMergeData_Action_B_Action_B_input);
					fUML_Tests_ForkMergeData_Action_B_Action_B_input_LiteralUnlimitedNatural1118.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1118", fUML_Tests_ForkMergeData_Action_B_Action_B_input_LiteralUnlimitedNatural1118);
					fUML_Tests_ForkMergeData_Action_B_Action_B_input_LiteralInteger1119.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1119", fUML_Tests_ForkMergeData_Action_B_Action_B_input_LiteralInteger1119);
				fUML_Tests_ForkMergeData_Action_B_Action_B_output.reset(new OutputPin());
				this->addToElementRepository("Action_B.output", fUML_Tests_ForkMergeData_Action_B_Action_B_output);
					fUML_Tests_ForkMergeData_Action_B_Action_B_output_LiteralUnlimitedNatural1120.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1120", fUML_Tests_ForkMergeData_Action_B_Action_B_output_LiteralUnlimitedNatural1120);
					fUML_Tests_ForkMergeData_Action_B_Action_B_output_LiteralInteger1121.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1121", fUML_Tests_ForkMergeData_Action_B_Action_B_output_LiteralInteger1121);
			fUML_Tests_ForkMergeData_ObjectFlow1122.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1122", fUML_Tests_ForkMergeData_ObjectFlow1122);
				fUML_Tests_ForkMergeData_ObjectFlow1122_LiteralInteger1123.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1123", fUML_Tests_ForkMergeData_ObjectFlow1122_LiteralInteger1123);
			fUML_Tests_ForkMergeData_ObjectFlow1124.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1124", fUML_Tests_ForkMergeData_ObjectFlow1124);
				fUML_Tests_ForkMergeData_ObjectFlow1124_LiteralInteger1125.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1125", fUML_Tests_ForkMergeData_ObjectFlow1124_LiteralInteger1125);
		fUML_Tests_TestClassReclassifier.reset(new Activity());
		this->addToElementRepository("TestClassReclassifier", fUML_Tests_TestClassReclassifier);
			fUML_Tests_TestClassReclassifier_ObjectFlow1126.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1126", fUML_Tests_TestClassReclassifier_ObjectFlow1126);
				fUML_Tests_TestClassReclassifier_ObjectFlow1126_LiteralUnlimitedNatural1127.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1127", fUML_Tests_TestClassReclassifier_ObjectFlow1126_LiteralUnlimitedNatural1127);
			fUML_Tests_TestClassReclassifier_ObjectFlow1128.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1128", fUML_Tests_TestClassReclassifier_ObjectFlow1128);
				fUML_Tests_TestClassReclassifier_ObjectFlow1128_LiteralUnlimitedNatural1129.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1129", fUML_Tests_TestClassReclassifier_ObjectFlow1128_LiteralUnlimitedNatural1129);
			fUML_Tests_TestClassReclassifier_ObjectFlow1130.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1130", fUML_Tests_TestClassReclassifier_ObjectFlow1130);
				fUML_Tests_TestClassReclassifier_ObjectFlow1130_LiteralUnlimitedNatural1131.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1131", fUML_Tests_TestClassReclassifier_ObjectFlow1130_LiteralUnlimitedNatural1131);
			fUML_Tests_TestClassReclassifier_ForkNode1132.reset(new ForkNode());
			this->addToElementRepository("ForkNode1132", fUML_Tests_TestClassReclassifier_ForkNode1132);
			fUML_Tests_TestClassReclassifier_Write_a.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(a)", fUML_Tests_TestClassReclassifier_Write_a);
				fUML_Tests_TestClassReclassifier_Write_a_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassReclassifier_Write_a_result);
					fUML_Tests_TestClassReclassifier_Write_a_result_LiteralInteger1133.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1133", fUML_Tests_TestClassReclassifier_Write_a_result_LiteralInteger1133);
					fUML_Tests_TestClassReclassifier_Write_a_result_LiteralUnlimitedNatural1134.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1134", fUML_Tests_TestClassReclassifier_Write_a_result_LiteralUnlimitedNatural1134);
				fUML_Tests_TestClassReclassifier_Write_a_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassReclassifier_Write_a_value);
					fUML_Tests_TestClassReclassifier_Write_a_value_LiteralInteger1135.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1135", fUML_Tests_TestClassReclassifier_Write_a_value_LiteralInteger1135);
					fUML_Tests_TestClassReclassifier_Write_a_value_LiteralUnlimitedNatural1136.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1136", fUML_Tests_TestClassReclassifier_Write_a_value_LiteralUnlimitedNatural1136);
				fUML_Tests_TestClassReclassifier_Write_a_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassReclassifier_Write_a_object);
					fUML_Tests_TestClassReclassifier_Write_a_object_LiteralUnlimitedNatural1137.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1137", fUML_Tests_TestClassReclassifier_Write_a_object_LiteralUnlimitedNatural1137);
					fUML_Tests_TestClassReclassifier_Write_a_object_LiteralInteger1138.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1138", fUML_Tests_TestClassReclassifier_Write_a_object_LiteralInteger1138);
			fUML_Tests_TestClassReclassifier_ObjectFlow1139.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1139", fUML_Tests_TestClassReclassifier_ObjectFlow1139);
				fUML_Tests_TestClassReclassifier_ObjectFlow1139_LiteralUnlimitedNatural1140.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1140", fUML_Tests_TestClassReclassifier_ObjectFlow1139_LiteralUnlimitedNatural1140);
			fUML_Tests_TestClassReclassifier_Create_Subclass1.reset(new CreateObjectAction());
			this->addToElementRepository("Create(Subclass1)", fUML_Tests_TestClassReclassifier_Create_Subclass1);
				fUML_Tests_TestClassReclassifier_Create_Subclass1_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassReclassifier_Create_Subclass1_result);
					fUML_Tests_TestClassReclassifier_Create_Subclass1_result_LiteralUnlimitedNatural1141.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1141", fUML_Tests_TestClassReclassifier_Create_Subclass1_result_LiteralUnlimitedNatural1141);
					fUML_Tests_TestClassReclassifier_Create_Subclass1_result_LiteralInteger1142.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1142", fUML_Tests_TestClassReclassifier_Create_Subclass1_result_LiteralInteger1142);
			fUML_Tests_TestClassReclassifier_ObjectFlow1143.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1143", fUML_Tests_TestClassReclassifier_ObjectFlow1143);
				fUML_Tests_TestClassReclassifier_ObjectFlow1143_LiteralUnlimitedNatural1144.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1144", fUML_Tests_TestClassReclassifier_ObjectFlow1143_LiteralUnlimitedNatural1144);
			fUML_Tests_TestClassReclassifier_Write_x.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(x)", fUML_Tests_TestClassReclassifier_Write_x);
				fUML_Tests_TestClassReclassifier_Write_x_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassReclassifier_Write_x_result);
					fUML_Tests_TestClassReclassifier_Write_x_result_LiteralInteger1145.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1145", fUML_Tests_TestClassReclassifier_Write_x_result_LiteralInteger1145);
					fUML_Tests_TestClassReclassifier_Write_x_result_LiteralUnlimitedNatural1146.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1146", fUML_Tests_TestClassReclassifier_Write_x_result_LiteralUnlimitedNatural1146);
				fUML_Tests_TestClassReclassifier_Write_x_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassReclassifier_Write_x_value);
					fUML_Tests_TestClassReclassifier_Write_x_value_LiteralUnlimitedNatural1147.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1147", fUML_Tests_TestClassReclassifier_Write_x_value_LiteralUnlimitedNatural1147);
					fUML_Tests_TestClassReclassifier_Write_x_value_LiteralInteger1148.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1148", fUML_Tests_TestClassReclassifier_Write_x_value_LiteralInteger1148);
				fUML_Tests_TestClassReclassifier_Write_x_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassReclassifier_Write_x_object);
					fUML_Tests_TestClassReclassifier_Write_x_object_LiteralInteger1149.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1149", fUML_Tests_TestClassReclassifier_Write_x_object_LiteralInteger1149);
					fUML_Tests_TestClassReclassifier_Write_x_object_LiteralUnlimitedNatural1150.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1150", fUML_Tests_TestClassReclassifier_Write_x_object_LiteralUnlimitedNatural1150);
			fUML_Tests_TestClassReclassifier_ObjectFlow1151.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1151", fUML_Tests_TestClassReclassifier_ObjectFlow1151);
				fUML_Tests_TestClassReclassifier_ObjectFlow1151_LiteralUnlimitedNatural1152.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1152", fUML_Tests_TestClassReclassifier_ObjectFlow1151_LiteralUnlimitedNatural1152);
			fUML_Tests_TestClassReclassifier_Write_y.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(y)", fUML_Tests_TestClassReclassifier_Write_y);
				fUML_Tests_TestClassReclassifier_Write_y_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassReclassifier_Write_y_value);
				fUML_Tests_TestClassReclassifier_Write_y_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassReclassifier_Write_y_object);
					fUML_Tests_TestClassReclassifier_Write_y_object_LiteralInteger1153.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1153", fUML_Tests_TestClassReclassifier_Write_y_object_LiteralInteger1153);
					fUML_Tests_TestClassReclassifier_Write_y_object_LiteralUnlimitedNatural1154.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1154", fUML_Tests_TestClassReclassifier_Write_y_object_LiteralUnlimitedNatural1154);
				fUML_Tests_TestClassReclassifier_Write_y_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassReclassifier_Write_y_result);
					fUML_Tests_TestClassReclassifier_Write_y_result_LiteralUnlimitedNatural1155.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1155", fUML_Tests_TestClassReclassifier_Write_y_result_LiteralUnlimitedNatural1155);
					fUML_Tests_TestClassReclassifier_Write_y_result_LiteralInteger1156.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1156", fUML_Tests_TestClassReclassifier_Write_y_result_LiteralInteger1156);
			fUML_Tests_TestClassReclassifier_resultNode.reset(new ActivityParameterNode());
			this->addToElementRepository("resultNode", fUML_Tests_TestClassReclassifier_resultNode);
			fUML_Tests_TestClassReclassifier_Value_true.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(true)", fUML_Tests_TestClassReclassifier_Value_true);
				fUML_Tests_TestClassReclassifier_Value_true_LiteralBoolean1157.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1157", fUML_Tests_TestClassReclassifier_Value_true_LiteralBoolean1157);
				fUML_Tests_TestClassReclassifier_Value_true_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassReclassifier_Value_true_result);
					fUML_Tests_TestClassReclassifier_Value_true_result_LiteralInteger1158.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1158", fUML_Tests_TestClassReclassifier_Value_true_result_LiteralInteger1158);
					fUML_Tests_TestClassReclassifier_Value_true_result_LiteralUnlimitedNatural1159.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1159", fUML_Tests_TestClassReclassifier_Value_true_result_LiteralUnlimitedNatural1159);
			fUML_Tests_TestClassReclassifier_Reclassify_Subclass2.reset(new ReclassifyObjectAction());
			this->addToElementRepository("Reclassify(Subclass2)", fUML_Tests_TestClassReclassifier_Reclassify_Subclass2);
				fUML_Tests_TestClassReclassifier_Reclassify_Subclass2_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassReclassifier_Reclassify_Subclass2_object);
			fUML_Tests_TestClassReclassifier_Value_1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)", fUML_Tests_TestClassReclassifier_Value_1);
				fUML_Tests_TestClassReclassifier_Value_1_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassReclassifier_Value_1_result);
					fUML_Tests_TestClassReclassifier_Value_1_result_LiteralInteger1160.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1160", fUML_Tests_TestClassReclassifier_Value_1_result_LiteralInteger1160);
					fUML_Tests_TestClassReclassifier_Value_1_result_LiteralUnlimitedNatural1161.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1161", fUML_Tests_TestClassReclassifier_Value_1_result_LiteralUnlimitedNatural1161);
				fUML_Tests_TestClassReclassifier_Value_1_LiteralInteger1162.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1162", fUML_Tests_TestClassReclassifier_Value_1_LiteralInteger1162);
			fUML_Tests_TestClassReclassifier_result.reset(new Parameter());
			this->addToElementRepository("result", fUML_Tests_TestClassReclassifier_result);
				fUML_Tests_TestClassReclassifier_result_LiteralUnlimitedNatural1163.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1163", fUML_Tests_TestClassReclassifier_result_LiteralUnlimitedNatural1163);
				fUML_Tests_TestClassReclassifier_result_LiteralInteger1164.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1164", fUML_Tests_TestClassReclassifier_result_LiteralInteger1164);
			fUML_Tests_TestClassReclassifier_ObjectFlow1165.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1165", fUML_Tests_TestClassReclassifier_ObjectFlow1165);
				fUML_Tests_TestClassReclassifier_ObjectFlow1165_LiteralUnlimitedNatural1166.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1166", fUML_Tests_TestClassReclassifier_ObjectFlow1165_LiteralUnlimitedNatural1166);
			fUML_Tests_TestClassReclassifier_Value_2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2)", fUML_Tests_TestClassReclassifier_Value_2);
				fUML_Tests_TestClassReclassifier_Value_2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassReclassifier_Value_2_result);
					fUML_Tests_TestClassReclassifier_Value_2_result_LiteralInteger1167.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1167", fUML_Tests_TestClassReclassifier_Value_2_result_LiteralInteger1167);
					fUML_Tests_TestClassReclassifier_Value_2_result_LiteralUnlimitedNatural1168.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1168", fUML_Tests_TestClassReclassifier_Value_2_result_LiteralUnlimitedNatural1168);
				fUML_Tests_TestClassReclassifier_Value_2_LiteralInteger1169.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1169", fUML_Tests_TestClassReclassifier_Value_2_LiteralInteger1169);
			fUML_Tests_TestClassReclassifier_ObjectFlow1170.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1170", fUML_Tests_TestClassReclassifier_ObjectFlow1170);
				fUML_Tests_TestClassReclassifier_ObjectFlow1170_LiteralUnlimitedNatural1171.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1171", fUML_Tests_TestClassReclassifier_ObjectFlow1170_LiteralUnlimitedNatural1171);
			fUML_Tests_TestClassReclassifier_ObjectFlow1172.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1172", fUML_Tests_TestClassReclassifier_ObjectFlow1172);
				fUML_Tests_TestClassReclassifier_ObjectFlow1172_LiteralUnlimitedNatural1173.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1173", fUML_Tests_TestClassReclassifier_ObjectFlow1172_LiteralUnlimitedNatural1173);
		fUML_Tests_GenerateBooleanTestData.reset(new Activity());
		this->addToElementRepository("GenerateBooleanTestData", fUML_Tests_GenerateBooleanTestData);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1174.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1174", fUML_Tests_GenerateBooleanTestData_ObjectFlow1174);
				fUML_Tests_GenerateBooleanTestData_ObjectFlow1174_LiteralInteger1175.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1175", fUML_Tests_GenerateBooleanTestData_ObjectFlow1174_LiteralInteger1175);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1176.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1176", fUML_Tests_GenerateBooleanTestData_ObjectFlow1176);
				fUML_Tests_GenerateBooleanTestData_ObjectFlow1176_LiteralInteger1177.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1177", fUML_Tests_GenerateBooleanTestData_ObjectFlow1176_LiteralInteger1177);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(true)-1", fUML_Tests_GenerateBooleanTestData_Value_trueminus1);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus1_Value_trueminus1_result.reset(new OutputPin());
				this->addToElementRepository("Value(true)-1.result", fUML_Tests_GenerateBooleanTestData_Value_trueminus1_Value_trueminus1_result);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus1_LiteralBoolean1178.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1178", fUML_Tests_GenerateBooleanTestData_Value_trueminus1_LiteralBoolean1178);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(false)-1", fUML_Tests_GenerateBooleanTestData_Value_falseminus1);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus1_Value_falseminus1_result.reset(new OutputPin());
				this->addToElementRepository("Value(false)-1.result", fUML_Tests_GenerateBooleanTestData_Value_falseminus1_Value_falseminus1_result);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus1_LiteralBoolean1179.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1179", fUML_Tests_GenerateBooleanTestData_Value_falseminus1_LiteralBoolean1179);
			fUML_Tests_GenerateBooleanTestData_argumentData2.reset(new Parameter());
			this->addToElementRepository("argumentData2", fUML_Tests_GenerateBooleanTestData_argumentData2);
				fUML_Tests_GenerateBooleanTestData_argumentData2_LiteralInteger1180.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1180", fUML_Tests_GenerateBooleanTestData_argumentData2_LiteralInteger1180);
				fUML_Tests_GenerateBooleanTestData_argumentData2_LiteralUnlimitedNatural1181.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1181", fUML_Tests_GenerateBooleanTestData_argumentData2_LiteralUnlimitedNatural1181);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1182.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1182", fUML_Tests_GenerateBooleanTestData_ControlFlow1182);
				fUML_Tests_GenerateBooleanTestData_ControlFlow1182_LiteralInteger1183.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1183", fUML_Tests_GenerateBooleanTestData_ControlFlow1182_LiteralInteger1183);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1184.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1184", fUML_Tests_GenerateBooleanTestData_ControlFlow1184);
				fUML_Tests_GenerateBooleanTestData_ControlFlow1184_LiteralInteger1185.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1185", fUML_Tests_GenerateBooleanTestData_ControlFlow1184_LiteralInteger1185);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1186.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1186", fUML_Tests_GenerateBooleanTestData_ObjectFlow1186);
				fUML_Tests_GenerateBooleanTestData_ObjectFlow1186_LiteralInteger1187.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1187", fUML_Tests_GenerateBooleanTestData_ObjectFlow1186_LiteralInteger1187);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1188.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1188", fUML_Tests_GenerateBooleanTestData_ControlFlow1188);
				fUML_Tests_GenerateBooleanTestData_ControlFlow1188_LiteralInteger1189.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1189", fUML_Tests_GenerateBooleanTestData_ControlFlow1188_LiteralInteger1189);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1190.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1190", fUML_Tests_GenerateBooleanTestData_ControlFlow1190);
				fUML_Tests_GenerateBooleanTestData_ControlFlow1190_LiteralInteger1191.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1191", fUML_Tests_GenerateBooleanTestData_ControlFlow1190_LiteralInteger1191);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(true)-2", fUML_Tests_GenerateBooleanTestData_Value_trueminus2);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus2_Value_trueminus2_result.reset(new OutputPin());
				this->addToElementRepository("Value(true)-2.result", fUML_Tests_GenerateBooleanTestData_Value_trueminus2_Value_trueminus2_result);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus2_LiteralBoolean1192.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1192", fUML_Tests_GenerateBooleanTestData_Value_trueminus2_LiteralBoolean1192);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1193.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1193", fUML_Tests_GenerateBooleanTestData_ObjectFlow1193);
				fUML_Tests_GenerateBooleanTestData_ObjectFlow1193_LiteralInteger1194.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1194", fUML_Tests_GenerateBooleanTestData_ObjectFlow1193_LiteralInteger1194);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus3.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(true)-3", fUML_Tests_GenerateBooleanTestData_Value_trueminus3);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus3_LiteralBoolean1195.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1195", fUML_Tests_GenerateBooleanTestData_Value_trueminus3_LiteralBoolean1195);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus3_Value_trueminus3_result.reset(new OutputPin());
				this->addToElementRepository("Value(true)-3.result", fUML_Tests_GenerateBooleanTestData_Value_trueminus3_Value_trueminus3_result);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(false)-2", fUML_Tests_GenerateBooleanTestData_Value_falseminus2);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus2_Value_falseminus2_result.reset(new OutputPin());
				this->addToElementRepository("Value(false)-2.result", fUML_Tests_GenerateBooleanTestData_Value_falseminus2_Value_falseminus2_result);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus2_LiteralBoolean1196.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1196", fUML_Tests_GenerateBooleanTestData_Value_falseminus2_LiteralBoolean1196);
			fUML_Tests_GenerateBooleanTestData_Param_argumentData2.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(argumentData2)", fUML_Tests_GenerateBooleanTestData_Param_argumentData2);
			fUML_Tests_GenerateBooleanTestData_argumentData1.reset(new Parameter());
			this->addToElementRepository("argumentData1", fUML_Tests_GenerateBooleanTestData_argumentData1);
				fUML_Tests_GenerateBooleanTestData_argumentData1_LiteralUnlimitedNatural1197.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1197", fUML_Tests_GenerateBooleanTestData_argumentData1_LiteralUnlimitedNatural1197);
				fUML_Tests_GenerateBooleanTestData_argumentData1_LiteralInteger1198.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1198", fUML_Tests_GenerateBooleanTestData_argumentData1_LiteralInteger1198);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus3.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(false)-3", fUML_Tests_GenerateBooleanTestData_Value_falseminus3);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus3_Value_falseminus3_result.reset(new OutputPin());
				this->addToElementRepository("Value(false)-3.result", fUML_Tests_GenerateBooleanTestData_Value_falseminus3_Value_falseminus3_result);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus3_LiteralBoolean1199.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1199", fUML_Tests_GenerateBooleanTestData_Value_falseminus3_LiteralBoolean1199);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1200.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1200", fUML_Tests_GenerateBooleanTestData_ObjectFlow1200);
				fUML_Tests_GenerateBooleanTestData_ObjectFlow1200_LiteralInteger1201.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1201", fUML_Tests_GenerateBooleanTestData_ObjectFlow1200_LiteralInteger1201);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus4.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(true)-4", fUML_Tests_GenerateBooleanTestData_Value_trueminus4);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus4_Value_trueminus4_result.reset(new OutputPin());
				this->addToElementRepository("Value(true)-4.result", fUML_Tests_GenerateBooleanTestData_Value_trueminus4_Value_trueminus4_result);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus4_LiteralBoolean1202.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1202", fUML_Tests_GenerateBooleanTestData_Value_trueminus4_LiteralBoolean1202);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1203.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1203", fUML_Tests_GenerateBooleanTestData_ObjectFlow1203);
				fUML_Tests_GenerateBooleanTestData_ObjectFlow1203_LiteralInteger1204.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1204", fUML_Tests_GenerateBooleanTestData_ObjectFlow1203_LiteralInteger1204);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1205.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1205", fUML_Tests_GenerateBooleanTestData_ControlFlow1205);
				fUML_Tests_GenerateBooleanTestData_ControlFlow1205_LiteralInteger1206.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1206", fUML_Tests_GenerateBooleanTestData_ControlFlow1205_LiteralInteger1206);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1207.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1207", fUML_Tests_GenerateBooleanTestData_ObjectFlow1207);
				fUML_Tests_GenerateBooleanTestData_ObjectFlow1207_LiteralInteger1208.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1208", fUML_Tests_GenerateBooleanTestData_ObjectFlow1207_LiteralInteger1208);
			fUML_Tests_GenerateBooleanTestData_Param_argumentData1.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(argumentData1)", fUML_Tests_GenerateBooleanTestData_Param_argumentData1);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1209.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1209", fUML_Tests_GenerateBooleanTestData_ObjectFlow1209);
				fUML_Tests_GenerateBooleanTestData_ObjectFlow1209_LiteralInteger1210.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1210", fUML_Tests_GenerateBooleanTestData_ObjectFlow1209_LiteralInteger1210);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1211.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1211", fUML_Tests_GenerateBooleanTestData_ControlFlow1211);
				fUML_Tests_GenerateBooleanTestData_ControlFlow1211_LiteralInteger1212.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1212", fUML_Tests_GenerateBooleanTestData_ControlFlow1211_LiteralInteger1212);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus4.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(false)-4", fUML_Tests_GenerateBooleanTestData_Value_falseminus4);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus4_Value_falseminus4_result.reset(new OutputPin());
				this->addToElementRepository("Value(false)-4.result", fUML_Tests_GenerateBooleanTestData_Value_falseminus4_Value_falseminus4_result);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus4_LiteralBoolean1213.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1213", fUML_Tests_GenerateBooleanTestData_Value_falseminus4_LiteralBoolean1213);
		fUML_Tests_TestRealComparisonFunctions.reset(new Activity());
		this->addToElementRepository("TestRealComparisonFunctions", fUML_Tests_TestRealComparisonFunctions);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1214.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1214", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1214);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1214_LiteralInteger1215.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1215", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1214_LiteralInteger1215);
			fUML_Tests_TestRealComparisonFunctions_LTResult.reset(new Parameter());
			this->addToElementRepository("LTResult", fUML_Tests_TestRealComparisonFunctions_LTResult);
			fUML_Tests_TestRealComparisonFunctions_Fork_3_0.reset(new ForkNode());
			this->addToElementRepository("Fork(3.0)", fUML_Tests_TestRealComparisonFunctions_Fork_3_0);
			fUML_Tests_TestRealComparisonFunctions_Call_LE.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(LE)", fUML_Tests_TestRealComparisonFunctions_Call_LE);
				fUML_Tests_TestRealComparisonFunctions_Call_LE_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestRealComparisonFunctions_Call_LE_x);
					fUML_Tests_TestRealComparisonFunctions_Call_LE_x_LiteralInteger1216.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1216", fUML_Tests_TestRealComparisonFunctions_Call_LE_x_LiteralInteger1216);
					fUML_Tests_TestRealComparisonFunctions_Call_LE_x_LiteralUnlimitedNatural1217.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1217", fUML_Tests_TestRealComparisonFunctions_Call_LE_x_LiteralUnlimitedNatural1217);
				fUML_Tests_TestRealComparisonFunctions_Call_LE_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestRealComparisonFunctions_Call_LE_result);
					fUML_Tests_TestRealComparisonFunctions_Call_LE_result_LiteralInteger1218.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1218", fUML_Tests_TestRealComparisonFunctions_Call_LE_result_LiteralInteger1218);
					fUML_Tests_TestRealComparisonFunctions_Call_LE_result_LiteralUnlimitedNatural1219.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1219", fUML_Tests_TestRealComparisonFunctions_Call_LE_result_LiteralUnlimitedNatural1219);
				fUML_Tests_TestRealComparisonFunctions_Call_LE_y.reset(new InputPin());
				this->addToElementRepository("y", fUML_Tests_TestRealComparisonFunctions_Call_LE_y);
					fUML_Tests_TestRealComparisonFunctions_Call_LE_y_LiteralInteger1220.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1220", fUML_Tests_TestRealComparisonFunctions_Call_LE_y_LiteralInteger1220);
					fUML_Tests_TestRealComparisonFunctions_Call_LE_y_LiteralUnlimitedNatural1221.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1221", fUML_Tests_TestRealComparisonFunctions_Call_LE_y_LiteralUnlimitedNatural1221);
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1222.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1222", fUML_Tests_TestRealComparisonFunctions_ControlFlow1222);
				fUML_Tests_TestRealComparisonFunctions_ControlFlow1222_LiteralInteger1223.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1223", fUML_Tests_TestRealComparisonFunctions_ControlFlow1222_LiteralInteger1223);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1224.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1224", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1224);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1224_LiteralInteger1225.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1225", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1224_LiteralInteger1225);
			fUML_Tests_TestRealComparisonFunctions_Call_LT.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(LT)", fUML_Tests_TestRealComparisonFunctions_Call_LT);
				fUML_Tests_TestRealComparisonFunctions_Call_LT_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestRealComparisonFunctions_Call_LT_result);
					fUML_Tests_TestRealComparisonFunctions_Call_LT_result_LiteralInteger1226.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1226", fUML_Tests_TestRealComparisonFunctions_Call_LT_result_LiteralInteger1226);
					fUML_Tests_TestRealComparisonFunctions_Call_LT_result_LiteralUnlimitedNatural1227.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1227", fUML_Tests_TestRealComparisonFunctions_Call_LT_result_LiteralUnlimitedNatural1227);
				fUML_Tests_TestRealComparisonFunctions_Call_LT_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestRealComparisonFunctions_Call_LT_x);
					fUML_Tests_TestRealComparisonFunctions_Call_LT_x_LiteralUnlimitedNatural1228.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1228", fUML_Tests_TestRealComparisonFunctions_Call_LT_x_LiteralUnlimitedNatural1228);
					fUML_Tests_TestRealComparisonFunctions_Call_LT_x_LiteralInteger1229.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1229", fUML_Tests_TestRealComparisonFunctions_Call_LT_x_LiteralInteger1229);
				fUML_Tests_TestRealComparisonFunctions_Call_LT_y.reset(new InputPin());
				this->addToElementRepository("y", fUML_Tests_TestRealComparisonFunctions_Call_LT_y);
					fUML_Tests_TestRealComparisonFunctions_Call_LT_y_LiteralInteger1230.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1230", fUML_Tests_TestRealComparisonFunctions_Call_LT_y_LiteralInteger1230);
					fUML_Tests_TestRealComparisonFunctions_Call_LT_y_LiteralUnlimitedNatural1231.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1231", fUML_Tests_TestRealComparisonFunctions_Call_LT_y_LiteralUnlimitedNatural1231);
			fUML_Tests_TestRealComparisonFunctions_LEResult.reset(new Parameter());
			this->addToElementRepository("LEResult", fUML_Tests_TestRealComparisonFunctions_LEResult);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1232.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1232", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1232);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1232_LiteralInteger1233.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1233", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1232_LiteralInteger1233);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1234.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1234", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1234);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1234_LiteralInteger1235.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1235", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1234_LiteralInteger1235);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1236.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1236", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1236);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1236_LiteralInteger1237.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1237", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1236_LiteralInteger1237);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1238.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1238", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1238);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1238_LiteralInteger1239.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1239", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1238_LiteralInteger1239);
			fUML_Tests_TestRealComparisonFunctions_GTResult.reset(new Parameter());
			this->addToElementRepository("GTResult", fUML_Tests_TestRealComparisonFunctions_GTResult);
			fUML_Tests_TestRealComparisonFunctions_Call_GT.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(GT)", fUML_Tests_TestRealComparisonFunctions_Call_GT);
				fUML_Tests_TestRealComparisonFunctions_Call_GT_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestRealComparisonFunctions_Call_GT_x);
					fUML_Tests_TestRealComparisonFunctions_Call_GT_x_LiteralInteger1240.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1240", fUML_Tests_TestRealComparisonFunctions_Call_GT_x_LiteralInteger1240);
					fUML_Tests_TestRealComparisonFunctions_Call_GT_x_LiteralUnlimitedNatural1241.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1241", fUML_Tests_TestRealComparisonFunctions_Call_GT_x_LiteralUnlimitedNatural1241);
				fUML_Tests_TestRealComparisonFunctions_Call_GT_y.reset(new InputPin());
				this->addToElementRepository("y", fUML_Tests_TestRealComparisonFunctions_Call_GT_y);
					fUML_Tests_TestRealComparisonFunctions_Call_GT_y_LiteralUnlimitedNatural1242.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1242", fUML_Tests_TestRealComparisonFunctions_Call_GT_y_LiteralUnlimitedNatural1242);
					fUML_Tests_TestRealComparisonFunctions_Call_GT_y_LiteralInteger1243.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1243", fUML_Tests_TestRealComparisonFunctions_Call_GT_y_LiteralInteger1243);
				fUML_Tests_TestRealComparisonFunctions_Call_GT_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestRealComparisonFunctions_Call_GT_result);
					fUML_Tests_TestRealComparisonFunctions_Call_GT_result_LiteralUnlimitedNatural1244.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1244", fUML_Tests_TestRealComparisonFunctions_Call_GT_result_LiteralUnlimitedNatural1244);
					fUML_Tests_TestRealComparisonFunctions_Call_GT_result_LiteralInteger1245.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1245", fUML_Tests_TestRealComparisonFunctions_Call_GT_result_LiteralInteger1245);
			fUML_Tests_TestRealComparisonFunctions_GEResult.reset(new Parameter());
			this->addToElementRepository("GEResult", fUML_Tests_TestRealComparisonFunctions_GEResult);
			fUML_Tests_TestRealComparisonFunctions_Param_GTResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(GTResult)", fUML_Tests_TestRealComparisonFunctions_Param_GTResult);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1246.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1246", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1246);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1246_LiteralInteger1247.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1247", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1246_LiteralInteger1247);
			fUML_Tests_TestRealComparisonFunctions_Fork_2_0.reset(new ForkNode());
			this->addToElementRepository("Fork(2.0)", fUML_Tests_TestRealComparisonFunctions_Fork_2_0);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1248.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1248", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1248);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1248_LiteralInteger1249.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1249", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1248_LiteralInteger1249);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1250.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1250", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1250);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1250_LiteralInteger1251.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1251", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1250_LiteralInteger1251);
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1252.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1252", fUML_Tests_TestRealComparisonFunctions_ControlFlow1252);
				fUML_Tests_TestRealComparisonFunctions_ControlFlow1252_LiteralInteger1253.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1253", fUML_Tests_TestRealComparisonFunctions_ControlFlow1252_LiteralInteger1253);
			fUML_Tests_TestRealComparisonFunctions_Value_3_0.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(3.0)", fUML_Tests_TestRealComparisonFunctions_Value_3_0);
				fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result.reset(new OutputPin());
				this->addToElementRepository("Value(3.0).result", fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result);
					fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result_LiteralInteger1254.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1254", fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result_LiteralInteger1254);
					fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result_LiteralUnlimitedNatural1255.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1255", fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result_LiteralUnlimitedNatural1255);
				fUML_Tests_TestRealComparisonFunctions_Value_3_0_LiteralReal1256.reset(new LiteralReal());
				this->addToElementRepository("LiteralReal1256", fUML_Tests_TestRealComparisonFunctions_Value_3_0_LiteralReal1256);
			fUML_Tests_TestRealComparisonFunctions_Param_GEResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(GEResult)", fUML_Tests_TestRealComparisonFunctions_Param_GEResult);
			fUML_Tests_TestRealComparisonFunctions_Call_GE.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(GE)", fUML_Tests_TestRealComparisonFunctions_Call_GE);
				fUML_Tests_TestRealComparisonFunctions_Call_GE_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestRealComparisonFunctions_Call_GE_x);
					fUML_Tests_TestRealComparisonFunctions_Call_GE_x_LiteralInteger1257.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1257", fUML_Tests_TestRealComparisonFunctions_Call_GE_x_LiteralInteger1257);
					fUML_Tests_TestRealComparisonFunctions_Call_GE_x_LiteralUnlimitedNatural1258.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1258", fUML_Tests_TestRealComparisonFunctions_Call_GE_x_LiteralUnlimitedNatural1258);
				fUML_Tests_TestRealComparisonFunctions_Call_GE_y.reset(new InputPin());
				this->addToElementRepository("y", fUML_Tests_TestRealComparisonFunctions_Call_GE_y);
					fUML_Tests_TestRealComparisonFunctions_Call_GE_y_LiteralUnlimitedNatural1259.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1259", fUML_Tests_TestRealComparisonFunctions_Call_GE_y_LiteralUnlimitedNatural1259);
					fUML_Tests_TestRealComparisonFunctions_Call_GE_y_LiteralInteger1260.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1260", fUML_Tests_TestRealComparisonFunctions_Call_GE_y_LiteralInteger1260);
				fUML_Tests_TestRealComparisonFunctions_Call_GE_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestRealComparisonFunctions_Call_GE_result);
					fUML_Tests_TestRealComparisonFunctions_Call_GE_result_LiteralUnlimitedNatural1261.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1261", fUML_Tests_TestRealComparisonFunctions_Call_GE_result_LiteralUnlimitedNatural1261);
					fUML_Tests_TestRealComparisonFunctions_Call_GE_result_LiteralInteger1262.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1262", fUML_Tests_TestRealComparisonFunctions_Call_GE_result_LiteralInteger1262);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1263.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1263", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1263);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1263_LiteralInteger1264.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1264", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1263_LiteralInteger1264);
			fUML_Tests_TestRealComparisonFunctions_Param_LTResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(LTResult)", fUML_Tests_TestRealComparisonFunctions_Param_LTResult);
			fUML_Tests_TestRealComparisonFunctions_Param_LEResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(LEResult)", fUML_Tests_TestRealComparisonFunctions_Param_LEResult);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1265.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1265", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1265);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1265_LiteralInteger1266.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1266", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1265_LiteralInteger1266);
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1267.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1267", fUML_Tests_TestRealComparisonFunctions_ControlFlow1267);
				fUML_Tests_TestRealComparisonFunctions_ControlFlow1267_LiteralInteger1268.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1268", fUML_Tests_TestRealComparisonFunctions_ControlFlow1267_LiteralInteger1268);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1269.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1269", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1269);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1269_LiteralInteger1270.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1270", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1269_LiteralInteger1270);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1271.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1271", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1271);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1271_LiteralInteger1272.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1272", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1271_LiteralInteger1272);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1273.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1273", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1273);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1273_LiteralInteger1274.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1274", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1273_LiteralInteger1274);
			fUML_Tests_TestRealComparisonFunctions_Value_2_0.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2.0)", fUML_Tests_TestRealComparisonFunctions_Value_2_0);
				fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result.reset(new OutputPin());
				this->addToElementRepository("Value(2.0).result", fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result);
					fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result_LiteralUnlimitedNatural1275.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1275", fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result_LiteralUnlimitedNatural1275);
					fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result_LiteralInteger1276.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1276", fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result_LiteralInteger1276);
				fUML_Tests_TestRealComparisonFunctions_Value_2_0_LiteralReal1277.reset(new LiteralReal());
				this->addToElementRepository("LiteralReal1277", fUML_Tests_TestRealComparisonFunctions_Value_2_0_LiteralReal1277);
		fUML_Tests_CopierCaller.reset(new Activity());
		this->addToElementRepository("CopierCaller", fUML_Tests_CopierCaller);
			fUML_Tests_CopierCaller_Parameter_output.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(output)", fUML_Tests_CopierCaller_Parameter_output);
			fUML_Tests_CopierCaller_Call_Copier.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Copier)", fUML_Tests_CopierCaller_Call_Copier);
				fUML_Tests_CopierCaller_Call_Copier_Copier_input.reset(new InputPin());
				this->addToElementRepository("Copier.input", fUML_Tests_CopierCaller_Call_Copier_Copier_input);
					fUML_Tests_CopierCaller_Call_Copier_Copier_input_LiteralUnlimitedNatural1278.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1278", fUML_Tests_CopierCaller_Call_Copier_Copier_input_LiteralUnlimitedNatural1278);
					fUML_Tests_CopierCaller_Call_Copier_Copier_input_LiteralInteger1279.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1279", fUML_Tests_CopierCaller_Call_Copier_Copier_input_LiteralInteger1279);
				fUML_Tests_CopierCaller_Call_Copier_Copier_output.reset(new OutputPin());
				this->addToElementRepository("Copier.output", fUML_Tests_CopierCaller_Call_Copier_Copier_output);
					fUML_Tests_CopierCaller_Call_Copier_Copier_output_LiteralInteger1280.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1280", fUML_Tests_CopierCaller_Call_Copier_Copier_output_LiteralInteger1280);
					fUML_Tests_CopierCaller_Call_Copier_Copier_output_LiteralUnlimitedNatural1281.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1281", fUML_Tests_CopierCaller_Call_Copier_Copier_output_LiteralUnlimitedNatural1281);
			fUML_Tests_CopierCaller_output.reset(new Parameter());
			this->addToElementRepository("output", fUML_Tests_CopierCaller_output);
				fUML_Tests_CopierCaller_output_LiteralInteger1282.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1282", fUML_Tests_CopierCaller_output_LiteralInteger1282);
				fUML_Tests_CopierCaller_output_LiteralUnlimitedNatural1283.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1283", fUML_Tests_CopierCaller_output_LiteralUnlimitedNatural1283);
			fUML_Tests_CopierCaller_ObjectFlow1284.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1284", fUML_Tests_CopierCaller_ObjectFlow1284);
				fUML_Tests_CopierCaller_ObjectFlow1284_LiteralInteger1285.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1285", fUML_Tests_CopierCaller_ObjectFlow1284_LiteralInteger1285);
			fUML_Tests_CopierCaller_Value_888.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(888)", fUML_Tests_CopierCaller_Value_888);
				fUML_Tests_CopierCaller_Value_888_Value_0_result.reset(new OutputPin());
				this->addToElementRepository("Value(0).result", fUML_Tests_CopierCaller_Value_888_Value_0_result);
				fUML_Tests_CopierCaller_Value_888_LiteralInteger1286.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1286", fUML_Tests_CopierCaller_Value_888_LiteralInteger1286);
			fUML_Tests_CopierCaller_ObjectFlow1287.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1287", fUML_Tests_CopierCaller_ObjectFlow1287);
				fUML_Tests_CopierCaller_ObjectFlow1287_LiteralInteger1288.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1288", fUML_Tests_CopierCaller_ObjectFlow1287_LiteralInteger1288);
		fUML_Tests_SignalEvent1289.reset(new SignalEvent());
		this->addToElementRepository("SignalEvent1289", fUML_Tests_SignalEvent1289);
		fUML_Tests_SpecializedSignal.reset(new Signal());
		this->addToElementRepository("SpecializedSignal", fUML_Tests_SpecializedSignal);
			fUML_Tests_SpecializedSignal_Generalization1290.reset(new Generalization());
			this->addToElementRepository("Generalization1290", fUML_Tests_SpecializedSignal_Generalization1290);
		fUML_Tests_ActiveClassBehaviorSender.reset(new Activity());
		this->addToElementRepository("ActiveClassBehaviorSender", fUML_Tests_ActiveClassBehaviorSender);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1291.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1291", fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1291);
				fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1291_LiteralUnlimitedNatural1292.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1292", fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1291_LiteralUnlimitedNatural1292);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1293.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1293", fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1293);
				fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1293_LiteralUnlimitedNatural1294.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1294", fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1293_LiteralUnlimitedNatural1294);
			fUML_Tests_ActiveClassBehaviorSender_InitialNode1295.reset(new InitialNode());
			this->addToElementRepository("InitialNode1295", fUML_Tests_ActiveClassBehaviorSender_InitialNode1295);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1296.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1296", fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1296);
				fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1296_LiteralUnlimitedNatural1297.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1297", fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1296_LiteralUnlimitedNatural1297);
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow1298.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1298", fUML_Tests_ActiveClassBehaviorSender_ControlFlow1298);
				fUML_Tests_ActiveClassBehaviorSender_ControlFlow1298_LiteralUnlimitedNatural1299.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1299", fUML_Tests_ActiveClassBehaviorSender_ControlFlow1298_LiteralUnlimitedNatural1299);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1300.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1300", fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1300);
				fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1300_LiteralUnlimitedNatural1301.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1301", fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1300_LiteralUnlimitedNatural1301);
			fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass.reset(new CreateObjectAction());
			this->addToElementRepository("Create(ActiveClass)", fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass);
				fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result);
					fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result_LiteralUnlimitedNatural1302.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1302", fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result_LiteralUnlimitedNatural1302);
					fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result_LiteralInteger1303.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1303", fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result_LiteralInteger1303);
			fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal.reset(new SendSignalAction());
			this->addToElementRepository("Send(TestSignal)", fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal);
				fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target.reset(new InputPin());
				this->addToElementRepository("target", fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target);
					fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target_LiteralInteger1304.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1304", fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target_LiteralInteger1304);
					fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target_LiteralUnlimitedNatural1305.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1305", fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target_LiteralUnlimitedNatural1305);
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow1306.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1306", fUML_Tests_ActiveClassBehaviorSender_ControlFlow1306);
				fUML_Tests_ActiveClassBehaviorSender_ControlFlow1306_LiteralUnlimitedNatural1307.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1307", fUML_Tests_ActiveClassBehaviorSender_ControlFlow1306_LiteralUnlimitedNatural1307);
			fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass.reset(new StartObjectBehaviorAction());
			this->addToElementRepository("Start(ActiveClass)", fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass);
				fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object);
					fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object_LiteralInteger1308.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1308", fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object_LiteralInteger1308);
					fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object_LiteralUnlimitedNatural1309.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1309", fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object_LiteralUnlimitedNatural1309);
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow1310.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1310", fUML_Tests_ActiveClassBehaviorSender_ControlFlow1310);
				fUML_Tests_ActiveClassBehaviorSender_ControlFlow1310_LiteralUnlimitedNatural1311.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1311", fUML_Tests_ActiveClassBehaviorSender_ControlFlow1310_LiteralUnlimitedNatural1311);
			fUML_Tests_ActiveClassBehaviorSender_ForkNode1312.reset(new ForkNode());
			this->addToElementRepository("ForkNode1312", fUML_Tests_ActiveClassBehaviorSender_ForkNode1312);
			fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal.reset(new SendSignalAction());
			this->addToElementRepository("Send(OtherSignal)", fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal);
				fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target.reset(new InputPin());
				this->addToElementRepository("target", fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target);
					fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target_LiteralInteger1313.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1313", fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target_LiteralInteger1313);
					fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target_LiteralUnlimitedNatural1314.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1314", fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target_LiteralUnlimitedNatural1314);
		fUML_Tests_TestClassObjectDestroyer.reset(new Activity());
		this->addToElementRepository("TestClassObjectDestroyer", fUML_Tests_TestClassObjectDestroyer);
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectIn.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(objectIn)", fUML_Tests_TestClassObjectDestroyer_Parameter_objectIn);
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1315.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1315", fUML_Tests_TestClassObjectDestroyer_ObjectFlow1315);
				fUML_Tests_TestClassObjectDestroyer_ObjectFlow1315_LiteralInteger1316.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1316", fUML_Tests_TestClassObjectDestroyer_ObjectFlow1315_LiteralInteger1316);
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectOut.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(objectOut)", fUML_Tests_TestClassObjectDestroyer_Parameter_objectOut);
			fUML_Tests_TestClassObjectDestroyer_objectIn.reset(new Parameter());
			this->addToElementRepository("objectIn", fUML_Tests_TestClassObjectDestroyer_objectIn);
				fUML_Tests_TestClassObjectDestroyer_objectIn_LiteralInteger1317.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1317", fUML_Tests_TestClassObjectDestroyer_objectIn_LiteralInteger1317);
				fUML_Tests_TestClassObjectDestroyer_objectIn_LiteralUnlimitedNatural1318.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1318", fUML_Tests_TestClassObjectDestroyer_objectIn_LiteralUnlimitedNatural1318);
			fUML_Tests_TestClassObjectDestroyer_objectOut.reset(new Parameter());
			this->addToElementRepository("objectOut", fUML_Tests_TestClassObjectDestroyer_objectOut);
				fUML_Tests_TestClassObjectDestroyer_objectOut_LiteralInteger1319.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1319", fUML_Tests_TestClassObjectDestroyer_objectOut_LiteralInteger1319);
				fUML_Tests_TestClassObjectDestroyer_objectOut_LiteralUnlimitedNatural1320.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1320", fUML_Tests_TestClassObjectDestroyer_objectOut_LiteralUnlimitedNatural1320);
			fUML_Tests_TestClassObjectDestroyer_Fork.reset(new ForkNode());
			this->addToElementRepository("Fork", fUML_Tests_TestClassObjectDestroyer_Fork);
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1321.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1321", fUML_Tests_TestClassObjectDestroyer_ObjectFlow1321);
				fUML_Tests_TestClassObjectDestroyer_ObjectFlow1321_LiteralInteger1322.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1322", fUML_Tests_TestClassObjectDestroyer_ObjectFlow1321_LiteralInteger1322);
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1323.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1323", fUML_Tests_TestClassObjectDestroyer_ObjectFlow1323);
				fUML_Tests_TestClassObjectDestroyer_ObjectFlow1323_LiteralInteger1324.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1324", fUML_Tests_TestClassObjectDestroyer_ObjectFlow1323_LiteralInteger1324);
			fUML_Tests_TestClassObjectDestroyer_DestroyObject.reset(new DestroyObjectAction());
			this->addToElementRepository("DestroyObject", fUML_Tests_TestClassObjectDestroyer_DestroyObject);
				fUML_Tests_TestClassObjectDestroyer_DestroyObject_DestroyObject_target.reset(new InputPin());
				this->addToElementRepository("DestroyObject.target", fUML_Tests_TestClassObjectDestroyer_DestroyObject_DestroyObject_target);
		fUML_Tests_ForkJoin.reset(new Activity());
		this->addToElementRepository("ForkJoin", fUML_Tests_ForkJoin);
			fUML_Tests_ForkJoin_ControlFlow1325.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1325", fUML_Tests_ForkJoin_ControlFlow1325);
				fUML_Tests_ForkJoin_ControlFlow1325_LiteralInteger1326.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1326", fUML_Tests_ForkJoin_ControlFlow1325_LiteralInteger1326);
			fUML_Tests_ForkJoin_ControlFlow1327.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1327", fUML_Tests_ForkJoin_ControlFlow1327);
				fUML_Tests_ForkJoin_ControlFlow1327_LiteralInteger1328.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1328", fUML_Tests_ForkJoin_ControlFlow1327_LiteralInteger1328);
			fUML_Tests_ForkJoin_JoinNode.reset(new JoinNode());
			this->addToElementRepository("JoinNode", fUML_Tests_ForkJoin_JoinNode);
			fUML_Tests_ForkJoin_ControlFlow1329.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1329", fUML_Tests_ForkJoin_ControlFlow1329);
				fUML_Tests_ForkJoin_ControlFlow1329_LiteralInteger1330.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1330", fUML_Tests_ForkJoin_ControlFlow1329_LiteralInteger1330);
			fUML_Tests_ForkJoin_ForkNode.reset(new ForkNode());
			this->addToElementRepository("ForkNode", fUML_Tests_ForkJoin_ForkNode);
			fUML_Tests_ForkJoin_FinalNode.reset(new ActivityFinalNode());
			this->addToElementRepository("FinalNode", fUML_Tests_ForkJoin_FinalNode);
			fUML_Tests_ForkJoin_ControlFlow1331.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1331", fUML_Tests_ForkJoin_ControlFlow1331);
				fUML_Tests_ForkJoin_ControlFlow1331_LiteralInteger1332.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1332", fUML_Tests_ForkJoin_ControlFlow1331_LiteralInteger1332);
			fUML_Tests_ForkJoin_InitialNode.reset(new InitialNode());
			this->addToElementRepository("InitialNode", fUML_Tests_ForkJoin_InitialNode);
		fUML_Tests_TestSignal.reset(new Signal());
		this->addToElementRepository("TestSignal", fUML_Tests_TestSignal);
		fUML_Tests_TestBooleanFunctions.reset(new Activity());
		this->addToElementRepository("TestBooleanFunctions", fUML_Tests_TestBooleanFunctions);
			fUML_Tests_TestBooleanFunctions_GenData3.reset(new CallBehaviorAction());
			this->addToElementRepository("GenData3", fUML_Tests_TestBooleanFunctions_GenData3);
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2.reset(new OutputPin());
				this->addToElementRepository("GenData3.argumentData2", fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2);
					fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2_LiteralUnlimitedNatural1333.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1333", fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2_LiteralUnlimitedNatural1333);
					fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2_LiteralInteger1334.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1334", fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2_LiteralInteger1334);
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1.reset(new OutputPin());
				this->addToElementRepository("GenData3.argumentData1", fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1);
					fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1_LiteralUnlimitedNatural1335.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1335", fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1_LiteralUnlimitedNatural1335);
					fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1_LiteralInteger1336.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1336", fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1_LiteralInteger1336);
			fUML_Tests_TestBooleanFunctions_Call_And.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(And)", fUML_Tests_TestBooleanFunctions_Call_And);
				fUML_Tests_TestBooleanFunctions_Call_And_And_x.reset(new InputPin());
				this->addToElementRepository("And.x", fUML_Tests_TestBooleanFunctions_Call_And_And_x);
					fUML_Tests_TestBooleanFunctions_Call_And_And_x_LiteralInteger1337.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1337", fUML_Tests_TestBooleanFunctions_Call_And_And_x_LiteralInteger1337);
					fUML_Tests_TestBooleanFunctions_Call_And_And_x_LiteralUnlimitedNatural1338.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1338", fUML_Tests_TestBooleanFunctions_Call_And_And_x_LiteralUnlimitedNatural1338);
				fUML_Tests_TestBooleanFunctions_Call_And_And_y.reset(new InputPin());
				this->addToElementRepository("And.y", fUML_Tests_TestBooleanFunctions_Call_And_And_y);
					fUML_Tests_TestBooleanFunctions_Call_And_And_y_LiteralInteger1339.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1339", fUML_Tests_TestBooleanFunctions_Call_And_And_y_LiteralInteger1339);
					fUML_Tests_TestBooleanFunctions_Call_And_And_y_LiteralUnlimitedNatural1340.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1340", fUML_Tests_TestBooleanFunctions_Call_And_And_y_LiteralUnlimitedNatural1340);
				fUML_Tests_TestBooleanFunctions_Call_And_And_result.reset(new OutputPin());
				this->addToElementRepository("And.result", fUML_Tests_TestBooleanFunctions_Call_And_And_result);
					fUML_Tests_TestBooleanFunctions_Call_And_And_result_LiteralUnlimitedNatural1341.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1341", fUML_Tests_TestBooleanFunctions_Call_And_And_result_LiteralUnlimitedNatural1341);
					fUML_Tests_TestBooleanFunctions_Call_And_And_result_LiteralInteger1342.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1342", fUML_Tests_TestBooleanFunctions_Call_And_And_result_LiteralInteger1342);
			fUML_Tests_TestBooleanFunctions_NotResult.reset(new Parameter());
			this->addToElementRepository("NotResult", fUML_Tests_TestBooleanFunctions_NotResult);
				fUML_Tests_TestBooleanFunctions_NotResult_LiteralUnlimitedNatural1343.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1343", fUML_Tests_TestBooleanFunctions_NotResult_LiteralUnlimitedNatural1343);
				fUML_Tests_TestBooleanFunctions_NotResult_LiteralUnlimitedNatural1344.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1344", fUML_Tests_TestBooleanFunctions_NotResult_LiteralUnlimitedNatural1344);
			fUML_Tests_TestBooleanFunctions_OrResult.reset(new Parameter());
			this->addToElementRepository("OrResult", fUML_Tests_TestBooleanFunctions_OrResult);
				fUML_Tests_TestBooleanFunctions_OrResult_LiteralUnlimitedNatural1345.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1345", fUML_Tests_TestBooleanFunctions_OrResult_LiteralUnlimitedNatural1345);
				fUML_Tests_TestBooleanFunctions_OrResult_LiteralUnlimitedNatural1346.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1346", fUML_Tests_TestBooleanFunctions_OrResult_LiteralUnlimitedNatural1346);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1347.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1347", fUML_Tests_TestBooleanFunctions_ObjectFlow1347);
				fUML_Tests_TestBooleanFunctions_ObjectFlow1347_LiteralInteger1348.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1348", fUML_Tests_TestBooleanFunctions_ObjectFlow1347_LiteralInteger1348);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1349.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1349", fUML_Tests_TestBooleanFunctions_ObjectFlow1349);
				fUML_Tests_TestBooleanFunctions_ObjectFlow1349_LiteralInteger1350.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1350", fUML_Tests_TestBooleanFunctions_ObjectFlow1349_LiteralInteger1350);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1351.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1351", fUML_Tests_TestBooleanFunctions_ObjectFlow1351);
				fUML_Tests_TestBooleanFunctions_ObjectFlow1351_LiteralInteger1352.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1352", fUML_Tests_TestBooleanFunctions_ObjectFlow1351_LiteralInteger1352);
			fUML_Tests_TestBooleanFunctions_Value_true.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(true)", fUML_Tests_TestBooleanFunctions_Value_true);
				fUML_Tests_TestBooleanFunctions_Value_true_LiteralBoolean1353.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1353", fUML_Tests_TestBooleanFunctions_Value_true_LiteralBoolean1353);
				fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result.reset(new OutputPin());
				this->addToElementRepository("Value(true).result", fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result);
					fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result_LiteralUnlimitedNatural1354.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1354", fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result_LiteralUnlimitedNatural1354);
					fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result_LiteralInteger1355.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1355", fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result_LiteralInteger1355);
			fUML_Tests_TestBooleanFunctions_Param_OrResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(OrResult)", fUML_Tests_TestBooleanFunctions_Param_OrResult);
			fUML_Tests_TestBooleanFunctions_ControlFlow1356.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1356", fUML_Tests_TestBooleanFunctions_ControlFlow1356);
				fUML_Tests_TestBooleanFunctions_ControlFlow1356_LiteralInteger1357.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1357", fUML_Tests_TestBooleanFunctions_ControlFlow1356_LiteralInteger1357);
			fUML_Tests_TestBooleanFunctions_Call_Implies.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Implies)", fUML_Tests_TestBooleanFunctions_Call_Implies);
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x.reset(new InputPin());
				this->addToElementRepository("Implies.x", fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x);
					fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x_LiteralInteger1358.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1358", fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x_LiteralInteger1358);
					fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x_LiteralUnlimitedNatural1359.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1359", fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x_LiteralUnlimitedNatural1359);
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y.reset(new InputPin());
				this->addToElementRepository("Implies.y", fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y);
					fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y_LiteralInteger1360.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1360", fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y_LiteralInteger1360);
					fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y_LiteralUnlimitedNatural1361.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1361", fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y_LiteralUnlimitedNatural1361);
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result.reset(new OutputPin());
				this->addToElementRepository("Implies.result", fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result);
					fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result_LiteralUnlimitedNatural1362.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1362", fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result_LiteralUnlimitedNatural1362);
					fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result_LiteralInteger1363.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1363", fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result_LiteralInteger1363);
			fUML_Tests_TestBooleanFunctions_ControlFlow1364.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1364", fUML_Tests_TestBooleanFunctions_ControlFlow1364);
				fUML_Tests_TestBooleanFunctions_ControlFlow1364_LiteralInteger1365.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1365", fUML_Tests_TestBooleanFunctions_ControlFlow1364_LiteralInteger1365);
			fUML_Tests_TestBooleanFunctions_Param_NotResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(NotResult)", fUML_Tests_TestBooleanFunctions_Param_NotResult);
			fUML_Tests_TestBooleanFunctions_GenData4.reset(new CallBehaviorAction());
			this->addToElementRepository("GenData4", fUML_Tests_TestBooleanFunctions_GenData4);
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1.reset(new OutputPin());
				this->addToElementRepository("GenData4.argumentData1", fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1);
					fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1_LiteralUnlimitedNatural1366.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1366", fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1_LiteralUnlimitedNatural1366);
					fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1_LiteralInteger1367.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1367", fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1_LiteralInteger1367);
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2.reset(new OutputPin());
				this->addToElementRepository("GenData4.argumentData2", fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2);
					fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2_LiteralUnlimitedNatural1368.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1368", fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2_LiteralUnlimitedNatural1368);
					fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2_LiteralInteger1369.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1369", fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2_LiteralInteger1369);
			fUML_Tests_TestBooleanFunctions_ControlFlow1370.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1370", fUML_Tests_TestBooleanFunctions_ControlFlow1370);
				fUML_Tests_TestBooleanFunctions_ControlFlow1370_LiteralInteger1371.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1371", fUML_Tests_TestBooleanFunctions_ControlFlow1370_LiteralInteger1371);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1372.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1372", fUML_Tests_TestBooleanFunctions_ObjectFlow1372);
				fUML_Tests_TestBooleanFunctions_ObjectFlow1372_LiteralInteger1373.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1373", fUML_Tests_TestBooleanFunctions_ObjectFlow1372_LiteralInteger1373);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1374.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1374", fUML_Tests_TestBooleanFunctions_ObjectFlow1374);
				fUML_Tests_TestBooleanFunctions_ObjectFlow1374_LiteralInteger1375.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1375", fUML_Tests_TestBooleanFunctions_ObjectFlow1374_LiteralInteger1375);
			fUML_Tests_TestBooleanFunctions_XorResult.reset(new Parameter());
			this->addToElementRepository("XorResult", fUML_Tests_TestBooleanFunctions_XorResult);
				fUML_Tests_TestBooleanFunctions_XorResult_LiteralUnlimitedNatural1376.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1376", fUML_Tests_TestBooleanFunctions_XorResult_LiteralUnlimitedNatural1376);
				fUML_Tests_TestBooleanFunctions_XorResult_LiteralUnlimitedNatural1377.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1377", fUML_Tests_TestBooleanFunctions_XorResult_LiteralUnlimitedNatural1377);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1378.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1378", fUML_Tests_TestBooleanFunctions_ObjectFlow1378);
				fUML_Tests_TestBooleanFunctions_ObjectFlow1378_LiteralInteger1379.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1379", fUML_Tests_TestBooleanFunctions_ObjectFlow1378_LiteralInteger1379);
			fUML_Tests_TestBooleanFunctions_Value_false.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(false)", fUML_Tests_TestBooleanFunctions_Value_false);
				fUML_Tests_TestBooleanFunctions_Value_false_LiteralBoolean1380.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1380", fUML_Tests_TestBooleanFunctions_Value_false_LiteralBoolean1380);
				fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result.reset(new OutputPin());
				this->addToElementRepository("Value(false).result", fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result);
					fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result_LiteralUnlimitedNatural1381.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1381", fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result_LiteralUnlimitedNatural1381);
					fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result_LiteralInteger1382.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1382", fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result_LiteralInteger1382);
			fUML_Tests_TestBooleanFunctions_Call_Xor.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Xor)", fUML_Tests_TestBooleanFunctions_Call_Xor);
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y.reset(new InputPin());
				this->addToElementRepository("Xor.y", fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y);
					fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y_LiteralUnlimitedNatural1383.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1383", fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y_LiteralUnlimitedNatural1383);
					fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y_LiteralInteger1384.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1384", fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y_LiteralInteger1384);
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result.reset(new OutputPin());
				this->addToElementRepository("Xor.result", fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result);
					fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result_LiteralInteger1385.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1385", fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result_LiteralInteger1385);
					fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result_LiteralUnlimitedNatural1386.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1386", fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result_LiteralUnlimitedNatural1386);
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x.reset(new InputPin());
				this->addToElementRepository("Xor.x", fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x);
					fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x_LiteralUnlimitedNatural1387.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1387", fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x_LiteralUnlimitedNatural1387);
					fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x_LiteralInteger1388.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1388", fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x_LiteralInteger1388);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1389.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1389", fUML_Tests_TestBooleanFunctions_ObjectFlow1389);
				fUML_Tests_TestBooleanFunctions_ObjectFlow1389_LiteralInteger1390.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1390", fUML_Tests_TestBooleanFunctions_ObjectFlow1389_LiteralInteger1390);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1391.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1391", fUML_Tests_TestBooleanFunctions_ObjectFlow1391);
				fUML_Tests_TestBooleanFunctions_ObjectFlow1391_LiteralInteger1392.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1392", fUML_Tests_TestBooleanFunctions_ObjectFlow1391_LiteralInteger1392);
			fUML_Tests_TestBooleanFunctions_GenData1.reset(new CallBehaviorAction());
			this->addToElementRepository("GenData1", fUML_Tests_TestBooleanFunctions_GenData1);
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2.reset(new OutputPin());
				this->addToElementRepository("GenData1.argumentData2", fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2);
					fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2_LiteralUnlimitedNatural1393.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1393", fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2_LiteralUnlimitedNatural1393);
					fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2_LiteralInteger1394.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1394", fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2_LiteralInteger1394);
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1.reset(new OutputPin());
				this->addToElementRepository("GenData1.argumentData1", fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1);
					fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1_LiteralInteger1395.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1395", fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1_LiteralInteger1395);
					fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1_LiteralUnlimitedNatural1396.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1396", fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1_LiteralUnlimitedNatural1396);
			fUML_Tests_TestBooleanFunctions_Param_ImpliesResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(ImpliesResult)", fUML_Tests_TestBooleanFunctions_Param_ImpliesResult);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1397.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1397", fUML_Tests_TestBooleanFunctions_ObjectFlow1397);
				fUML_Tests_TestBooleanFunctions_ObjectFlow1397_LiteralInteger1398.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1398", fUML_Tests_TestBooleanFunctions_ObjectFlow1397_LiteralInteger1398);
			fUML_Tests_TestBooleanFunctions_Call_Or.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Or)", fUML_Tests_TestBooleanFunctions_Call_Or);
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_y.reset(new InputPin());
				this->addToElementRepository("Or.y", fUML_Tests_TestBooleanFunctions_Call_Or_Or_y);
					fUML_Tests_TestBooleanFunctions_Call_Or_Or_y_LiteralInteger1399.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1399", fUML_Tests_TestBooleanFunctions_Call_Or_Or_y_LiteralInteger1399);
					fUML_Tests_TestBooleanFunctions_Call_Or_Or_y_LiteralUnlimitedNatural1400.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1400", fUML_Tests_TestBooleanFunctions_Call_Or_Or_y_LiteralUnlimitedNatural1400);
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_x.reset(new InputPin());
				this->addToElementRepository("Or.x", fUML_Tests_TestBooleanFunctions_Call_Or_Or_x);
					fUML_Tests_TestBooleanFunctions_Call_Or_Or_x_LiteralInteger1401.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1401", fUML_Tests_TestBooleanFunctions_Call_Or_Or_x_LiteralInteger1401);
					fUML_Tests_TestBooleanFunctions_Call_Or_Or_x_LiteralUnlimitedNatural1402.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1402", fUML_Tests_TestBooleanFunctions_Call_Or_Or_x_LiteralUnlimitedNatural1402);
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_result.reset(new OutputPin());
				this->addToElementRepository("Or.result", fUML_Tests_TestBooleanFunctions_Call_Or_Or_result);
					fUML_Tests_TestBooleanFunctions_Call_Or_Or_result_LiteralInteger1403.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1403", fUML_Tests_TestBooleanFunctions_Call_Or_Or_result_LiteralInteger1403);
					fUML_Tests_TestBooleanFunctions_Call_Or_Or_result_LiteralUnlimitedNatural1404.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1404", fUML_Tests_TestBooleanFunctions_Call_Or_Or_result_LiteralUnlimitedNatural1404);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1405.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1405", fUML_Tests_TestBooleanFunctions_ObjectFlow1405);
				fUML_Tests_TestBooleanFunctions_ObjectFlow1405_LiteralInteger1406.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1406", fUML_Tests_TestBooleanFunctions_ObjectFlow1405_LiteralInteger1406);
			fUML_Tests_TestBooleanFunctions_ControlFlow1407.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1407", fUML_Tests_TestBooleanFunctions_ControlFlow1407);
				fUML_Tests_TestBooleanFunctions_ControlFlow1407_LiteralInteger1408.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1408", fUML_Tests_TestBooleanFunctions_ControlFlow1407_LiteralInteger1408);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1409.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1409", fUML_Tests_TestBooleanFunctions_ObjectFlow1409);
				fUML_Tests_TestBooleanFunctions_ObjectFlow1409_LiteralInteger1410.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1410", fUML_Tests_TestBooleanFunctions_ObjectFlow1409_LiteralInteger1410);
			fUML_Tests_TestBooleanFunctions_Call_Not.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Not)", fUML_Tests_TestBooleanFunctions_Call_Not);
				fUML_Tests_TestBooleanFunctions_Call_Not_Not_result.reset(new OutputPin());
				this->addToElementRepository("Not.result", fUML_Tests_TestBooleanFunctions_Call_Not_Not_result);
					fUML_Tests_TestBooleanFunctions_Call_Not_Not_result_LiteralUnlimitedNatural1411.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1411", fUML_Tests_TestBooleanFunctions_Call_Not_Not_result_LiteralUnlimitedNatural1411);
					fUML_Tests_TestBooleanFunctions_Call_Not_Not_result_LiteralInteger1412.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1412", fUML_Tests_TestBooleanFunctions_Call_Not_Not_result_LiteralInteger1412);
				fUML_Tests_TestBooleanFunctions_Call_Not_Not_x.reset(new InputPin());
				this->addToElementRepository("Not.x", fUML_Tests_TestBooleanFunctions_Call_Not_Not_x);
					fUML_Tests_TestBooleanFunctions_Call_Not_Not_x_LiteralInteger1413.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1413", fUML_Tests_TestBooleanFunctions_Call_Not_Not_x_LiteralInteger1413);
					fUML_Tests_TestBooleanFunctions_Call_Not_Not_x_LiteralUnlimitedNatural1414.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1414", fUML_Tests_TestBooleanFunctions_Call_Not_Not_x_LiteralUnlimitedNatural1414);
			fUML_Tests_TestBooleanFunctions_GenData2.reset(new CallBehaviorAction());
			this->addToElementRepository("GenData2", fUML_Tests_TestBooleanFunctions_GenData2);
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1.reset(new OutputPin());
				this->addToElementRepository("GenData2.argumentData1", fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1);
					fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1_LiteralUnlimitedNatural1415.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1415", fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1_LiteralUnlimitedNatural1415);
					fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1_LiteralInteger1416.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1416", fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1_LiteralInteger1416);
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2.reset(new OutputPin());
				this->addToElementRepository("GenData2.argumentData2", fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2);
					fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2_LiteralInteger1417.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1417", fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2_LiteralInteger1417);
					fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2_LiteralUnlimitedNatural1418.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1418", fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2_LiteralUnlimitedNatural1418);
			fUML_Tests_TestBooleanFunctions_Param_XorResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(XorResult)", fUML_Tests_TestBooleanFunctions_Param_XorResult);
			fUML_Tests_TestBooleanFunctions_AndResult.reset(new Parameter());
			this->addToElementRepository("AndResult", fUML_Tests_TestBooleanFunctions_AndResult);
				fUML_Tests_TestBooleanFunctions_AndResult_LiteralUnlimitedNatural1419.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1419", fUML_Tests_TestBooleanFunctions_AndResult_LiteralUnlimitedNatural1419);
				fUML_Tests_TestBooleanFunctions_AndResult_LiteralUnlimitedNatural1420.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1420", fUML_Tests_TestBooleanFunctions_AndResult_LiteralUnlimitedNatural1420);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1421.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1421", fUML_Tests_TestBooleanFunctions_ObjectFlow1421);
				fUML_Tests_TestBooleanFunctions_ObjectFlow1421_LiteralInteger1422.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1422", fUML_Tests_TestBooleanFunctions_ObjectFlow1421_LiteralInteger1422);
			fUML_Tests_TestBooleanFunctions_Param_AndResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(AndResult)", fUML_Tests_TestBooleanFunctions_Param_AndResult);
			fUML_Tests_TestBooleanFunctions_ControlFlow1423.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1423", fUML_Tests_TestBooleanFunctions_ControlFlow1423);
				fUML_Tests_TestBooleanFunctions_ControlFlow1423_LiteralInteger1424.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1424", fUML_Tests_TestBooleanFunctions_ControlFlow1423_LiteralInteger1424);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1425.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1425", fUML_Tests_TestBooleanFunctions_ObjectFlow1425);
				fUML_Tests_TestBooleanFunctions_ObjectFlow1425_LiteralInteger1426.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1426", fUML_Tests_TestBooleanFunctions_ObjectFlow1425_LiteralInteger1426);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1427.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1427", fUML_Tests_TestBooleanFunctions_ObjectFlow1427);
				fUML_Tests_TestBooleanFunctions_ObjectFlow1427_LiteralInteger1428.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1428", fUML_Tests_TestBooleanFunctions_ObjectFlow1427_LiteralInteger1428);
			fUML_Tests_TestBooleanFunctions_ImpliesResult.reset(new Parameter());
			this->addToElementRepository("ImpliesResult", fUML_Tests_TestBooleanFunctions_ImpliesResult);
				fUML_Tests_TestBooleanFunctions_ImpliesResult_LiteralUnlimitedNatural1429.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1429", fUML_Tests_TestBooleanFunctions_ImpliesResult_LiteralUnlimitedNatural1429);
				fUML_Tests_TestBooleanFunctions_ImpliesResult_LiteralUnlimitedNatural1430.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1430", fUML_Tests_TestBooleanFunctions_ImpliesResult_LiteralUnlimitedNatural1430);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1431.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1431", fUML_Tests_TestBooleanFunctions_ObjectFlow1431);
				fUML_Tests_TestBooleanFunctions_ObjectFlow1431_LiteralInteger1432.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1432", fUML_Tests_TestBooleanFunctions_ObjectFlow1431_LiteralInteger1432);
		fUML_Tests_Copier.reset(new Activity());
		this->addToElementRepository("Copier", fUML_Tests_Copier);
			fUML_Tests_Copier_Parameter_input.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(input)", fUML_Tests_Copier_Parameter_input);
			fUML_Tests_Copier_output.reset(new Parameter());
			this->addToElementRepository("output", fUML_Tests_Copier_output);
				fUML_Tests_Copier_output_LiteralUnlimitedNatural1433.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1433", fUML_Tests_Copier_output_LiteralUnlimitedNatural1433);
				fUML_Tests_Copier_output_LiteralInteger1434.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1434", fUML_Tests_Copier_output_LiteralInteger1434);
			fUML_Tests_Copier_Parameter_output.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(output)", fUML_Tests_Copier_Parameter_output);
			fUML_Tests_Copier_input.reset(new Parameter());
			this->addToElementRepository("input", fUML_Tests_Copier_input);
				fUML_Tests_Copier_input_LiteralInteger1435.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1435", fUML_Tests_Copier_input_LiteralInteger1435);
				fUML_Tests_Copier_input_LiteralUnlimitedNatural1436.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1436", fUML_Tests_Copier_input_LiteralUnlimitedNatural1436);
			fUML_Tests_Copier_ObjectFlow1437.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1437", fUML_Tests_Copier_ObjectFlow1437);
				fUML_Tests_Copier_ObjectFlow1437_LiteralInteger1438.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1438", fUML_Tests_Copier_ObjectFlow1437_LiteralInteger1438);
		fUML_Tests_TestCallSender.reset(new Activity());
		this->addToElementRepository("TestCallSender", fUML_Tests_TestCallSender);
			fUML_Tests_TestCallSender_ControlFlow1439.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1439", fUML_Tests_TestCallSender_ControlFlow1439);
				fUML_Tests_TestCallSender_ControlFlow1439_LiteralUnlimitedNatural1440.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1440", fUML_Tests_TestCallSender_ControlFlow1439_LiteralUnlimitedNatural1440);
			fUML_Tests_TestCallSender_Value_0.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(0)", fUML_Tests_TestCallSender_Value_0);
				fUML_Tests_TestCallSender_Value_0_Value_0_result.reset(new OutputPin());
				this->addToElementRepository("Value(0).result", fUML_Tests_TestCallSender_Value_0_Value_0_result);
				fUML_Tests_TestCallSender_Value_0_LiteralInteger1441.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1441", fUML_Tests_TestCallSender_Value_0_LiteralInteger1441);
			fUML_Tests_TestCallSender_ObjectFlow1442.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1442", fUML_Tests_TestCallSender_ObjectFlow1442);
				fUML_Tests_TestCallSender_ObjectFlow1442_LiteralUnlimitedNatural1443.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1443", fUML_Tests_TestCallSender_ObjectFlow1442_LiteralUnlimitedNatural1443);
			fUML_Tests_TestCallSender_Call_test.reset(new CallOperationAction());
			this->addToElementRepository("Call(test)", fUML_Tests_TestCallSender_Call_test);
				fUML_Tests_TestCallSender_Call_test_Call_test_target.reset(new InputPin());
				this->addToElementRepository("Call(test).target", fUML_Tests_TestCallSender_Call_test_Call_test_target);
				fUML_Tests_TestCallSender_Call_test_Call_test_input.reset(new InputPin());
				this->addToElementRepository("Call(test).input", fUML_Tests_TestCallSender_Call_test_Call_test_input);
				fUML_Tests_TestCallSender_Call_test_Call_test_output.reset(new OutputPin());
				this->addToElementRepository("Call(test).output", fUML_Tests_TestCallSender_Call_test_Call_test_output);
			fUML_Tests_TestCallSender_ObjectFlow1444.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1444", fUML_Tests_TestCallSender_ObjectFlow1444);
				fUML_Tests_TestCallSender_ObjectFlow1444_LiteralUnlimitedNatural1445.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1445", fUML_Tests_TestCallSender_ObjectFlow1444_LiteralUnlimitedNatural1445);
			fUML_Tests_TestCallSender_Start_TestCallAccepter.reset(new StartObjectBehaviorAction());
			this->addToElementRepository("Start(TestCallAccepter)", fUML_Tests_TestCallSender_Start_TestCallAccepter);
				fUML_Tests_TestCallSender_Start_TestCallAccepter_Start_TestCallAccepter_object.reset(new InputPin());
				this->addToElementRepository("Start(TestCallAccepter).object", fUML_Tests_TestCallSender_Start_TestCallAccepter_Start_TestCallAccepter_object);
			fUML_Tests_TestCallSender_Create_TestCallAccepter.reset(new CreateObjectAction());
			this->addToElementRepository("Create(TestCallAccepter)", fUML_Tests_TestCallSender_Create_TestCallAccepter);
				fUML_Tests_TestCallSender_Create_TestCallAccepter_Create_TestCallAccepter_result.reset(new OutputPin());
				this->addToElementRepository("Create(TestCallAccepter).result", fUML_Tests_TestCallSender_Create_TestCallAccepter_Create_TestCallAccepter_result);
			fUML_Tests_TestCallSender_Write_value.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(value)", fUML_Tests_TestCallSender_Write_value);
				fUML_Tests_TestCallSender_Write_value_Write_value_object.reset(new InputPin());
				this->addToElementRepository("Write(value).object", fUML_Tests_TestCallSender_Write_value_Write_value_object);
				fUML_Tests_TestCallSender_Write_value_Write_value_value.reset(new InputPin());
				this->addToElementRepository("Write(value).value", fUML_Tests_TestCallSender_Write_value_Write_value_value);
			fUML_Tests_TestCallSender_ActivityFinalNode1446.reset(new ActivityFinalNode());
			this->addToElementRepository("ActivityFinalNode1446", fUML_Tests_TestCallSender_ActivityFinalNode1446);
			fUML_Tests_TestCallSender_ObjectFlow1447.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1447", fUML_Tests_TestCallSender_ObjectFlow1447);
				fUML_Tests_TestCallSender_ObjectFlow1447_LiteralUnlimitedNatural1448.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1448", fUML_Tests_TestCallSender_ObjectFlow1447_LiteralUnlimitedNatural1448);
			fUML_Tests_TestCallSender_Accept_TestSignal.reset(new AcceptEventAction());
			this->addToElementRepository("Accept(TestSignal)", fUML_Tests_TestCallSender_Accept_TestSignal);
				fUML_Tests_TestCallSender_Accept_TestSignal_Trigger1449.reset(new Trigger());
				this->addToElementRepository("Trigger1449", fUML_Tests_TestCallSender_Accept_TestSignal_Trigger1449);
			fUML_Tests_TestCallSender_ReadSelf.reset(new ReadSelfAction());
			this->addToElementRepository("ReadSelf", fUML_Tests_TestCallSender_ReadSelf);
				fUML_Tests_TestCallSender_ReadSelf_ReadSelf_result.reset(new OutputPin());
				this->addToElementRepository("ReadSelf.result", fUML_Tests_TestCallSender_ReadSelf_ReadSelf_result);
			fUML_Tests_TestCallSender_ObjectFlow1450.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1450", fUML_Tests_TestCallSender_ObjectFlow1450);
				fUML_Tests_TestCallSender_ObjectFlow1450_LiteralUnlimitedNatural1451.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1451", fUML_Tests_TestCallSender_ObjectFlow1450_LiteralUnlimitedNatural1451);
			fUML_Tests_TestCallSender_ForkNode.reset(new ForkNode());
			this->addToElementRepository("ForkNode", fUML_Tests_TestCallSender_ForkNode);
			fUML_Tests_TestCallSender_value.reset(new Property());
			this->addToElementRepository("value", fUML_Tests_TestCallSender_value);
			fUML_Tests_TestCallSender_ObjectFlow1452.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1452", fUML_Tests_TestCallSender_ObjectFlow1452);
				fUML_Tests_TestCallSender_ObjectFlow1452_LiteralUnlimitedNatural1453.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1453", fUML_Tests_TestCallSender_ObjectFlow1452_LiteralUnlimitedNatural1453);
			fUML_Tests_TestCallSender_ObjectFlow1454.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1454", fUML_Tests_TestCallSender_ObjectFlow1454);
				fUML_Tests_TestCallSender_ObjectFlow1454_LiteralUnlimitedNatural1455.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1455", fUML_Tests_TestCallSender_ObjectFlow1454_LiteralUnlimitedNatural1455);
			fUML_Tests_TestCallSender_ControlFlow1456.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1456", fUML_Tests_TestCallSender_ControlFlow1456);
				fUML_Tests_TestCallSender_ControlFlow1456_LiteralUnlimitedNatural1457.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1457", fUML_Tests_TestCallSender_ControlFlow1456_LiteralUnlimitedNatural1457);
		fUML_Tests_SimpleDecision.reset(new Activity());
		this->addToElementRepository("SimpleDecision", fUML_Tests_SimpleDecision);
			fUML_Tests_SimpleDecision_ObjectFlow1458.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1458", fUML_Tests_SimpleDecision_ObjectFlow1458);
				fUML_Tests_SimpleDecision_ObjectFlow1458_LiteralInteger1459.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1459", fUML_Tests_SimpleDecision_ObjectFlow1458_LiteralInteger1459);
			fUML_Tests_SimpleDecision_ObjectFlow1460.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1460", fUML_Tests_SimpleDecision_ObjectFlow1460);
				fUML_Tests_SimpleDecision_ObjectFlow1460_LiteralInteger1461.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1461", fUML_Tests_SimpleDecision_ObjectFlow1460_LiteralInteger1461);
				fUML_Tests_SimpleDecision_ObjectFlow1460_LiteralInteger1462.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1462", fUML_Tests_SimpleDecision_ObjectFlow1460_LiteralInteger1462);
			fUML_Tests_SimpleDecision_testValue.reset(new Parameter());
			this->addToElementRepository("testValue", fUML_Tests_SimpleDecision_testValue);
				fUML_Tests_SimpleDecision_testValue_LiteralUnlimitedNatural1463.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1463", fUML_Tests_SimpleDecision_testValue_LiteralUnlimitedNatural1463);
				fUML_Tests_SimpleDecision_testValue_LiteralInteger1464.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1464", fUML_Tests_SimpleDecision_testValue_LiteralInteger1464);
			fUML_Tests_SimpleDecision_DecisionNode.reset(new DecisionNode());
			this->addToElementRepository("DecisionNode", fUML_Tests_SimpleDecision_DecisionNode);
			fUML_Tests_SimpleDecision_Parameter_output_0.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(output_0)", fUML_Tests_SimpleDecision_Parameter_output_0);
			fUML_Tests_SimpleDecision_Parameter_output_1.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(output_1)", fUML_Tests_SimpleDecision_Parameter_output_1);
			fUML_Tests_SimpleDecision_output_1.reset(new Parameter());
			this->addToElementRepository("output_1", fUML_Tests_SimpleDecision_output_1);
				fUML_Tests_SimpleDecision_output_1_LiteralInteger1465.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1465", fUML_Tests_SimpleDecision_output_1_LiteralInteger1465);
				fUML_Tests_SimpleDecision_output_1_LiteralUnlimitedNatural1466.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1466", fUML_Tests_SimpleDecision_output_1_LiteralUnlimitedNatural1466);
			fUML_Tests_SimpleDecision_ObjectFlow1467.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1467", fUML_Tests_SimpleDecision_ObjectFlow1467);
				fUML_Tests_SimpleDecision_ObjectFlow1467_LiteralInteger1468.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1468", fUML_Tests_SimpleDecision_ObjectFlow1467_LiteralInteger1468);
				fUML_Tests_SimpleDecision_ObjectFlow1467_LiteralInteger1469.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1469", fUML_Tests_SimpleDecision_ObjectFlow1467_LiteralInteger1469);
			fUML_Tests_SimpleDecision_output_0.reset(new Parameter());
			this->addToElementRepository("output_0", fUML_Tests_SimpleDecision_output_0);
				fUML_Tests_SimpleDecision_output_0_LiteralInteger1470.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1470", fUML_Tests_SimpleDecision_output_0_LiteralInteger1470);
				fUML_Tests_SimpleDecision_output_0_LiteralUnlimitedNatural1471.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1471", fUML_Tests_SimpleDecision_output_0_LiteralUnlimitedNatural1471);
			fUML_Tests_SimpleDecision_Parameter_testValue.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(testValue)", fUML_Tests_SimpleDecision_Parameter_testValue);
		fUML_Tests_TestUnlimitedNaturalFunctions.reset(new Activity());
		this->addToElementRepository("TestUnlimitedNaturalFunctions", fUML_Tests_TestUnlimitedNaturalFunctions);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1472.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1472", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1472);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1472_LiteralInteger1473.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1473", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1472_LiteralInteger1473);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1474.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1474", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1474);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1474_LiteralInteger1475.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1475", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1474_LiteralInteger1475);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1476.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1476", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1476);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1476_LiteralInteger1477.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1477", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1476_LiteralInteger1477);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(GE)_2", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x.reset(new InputPin());
				this->addToElementRepository("GE.x", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x_LiteralUnlimitedNatural1478.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1478", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x_LiteralUnlimitedNatural1478);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x_LiteralInteger1479.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1479", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x_LiteralInteger1479);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y.reset(new InputPin());
				this->addToElementRepository("GE.y", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y_LiteralInteger1480.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1480", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y_LiteralInteger1480);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y_LiteralUnlimitedNatural1481.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1481", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y_LiteralUnlimitedNatural1481);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result.reset(new OutputPin());
				this->addToElementRepository("GE.result", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result_LiteralInteger1482.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1482", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result_LiteralInteger1482);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result_LiteralUnlimitedNatural1483.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1483", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result_LiteralUnlimitedNatural1483);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1484.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1484", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1484);
				fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1484_LiteralInteger1485.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1485", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1484_LiteralInteger1485);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1486.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1486", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1486);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1486_LiteralInteger1487.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1487", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1486_LiteralInteger1487);
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResulttimes.reset(new Parameter());
			this->addToElementRepository("GEResult*", fUML_Tests_TestUnlimitedNaturalFunctions_GEResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1488.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1488", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1488);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1488_LiteralInteger1489.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1489", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1488_LiteralInteger1489);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1490.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1490", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1490);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1490_LiteralInteger1491.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1491", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1490_LiteralInteger1491);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(LT)_2", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result.reset(new OutputPin());
				this->addToElementRepository("LT.result", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result_LiteralInteger1492.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1492", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result_LiteralInteger1492);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result_LiteralUnlimitedNatural1493.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1493", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result_LiteralUnlimitedNatural1493);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y.reset(new InputPin());
				this->addToElementRepository("LT.y", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y_LiteralUnlimitedNatural1494.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1494", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y_LiteralUnlimitedNatural1494);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y_LiteralInteger1495.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1495", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y_LiteralInteger1495);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x.reset(new InputPin());
				this->addToElementRepository("LT.x", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x_LiteralUnlimitedNatural1496.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1496", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x_LiteralUnlimitedNatural1496);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x_LiteralInteger1497.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1497", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x_LiteralInteger1497);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1498.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1498", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1498);
				fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1498_LiteralInteger1499.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1499", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1498_LiteralInteger1499);
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResult.reset(new Parameter());
			this->addToElementRepository("GEResult", fUML_Tests_TestUnlimitedNaturalFunctions_GEResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1500.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1500", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1500);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1500_LiteralInteger1501.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1501", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1500_LiteralInteger1501);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(GT)_1", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result.reset(new OutputPin());
				this->addToElementRepository("GT.result", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result_LiteralInteger1502.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1502", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result_LiteralInteger1502);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result_LiteralUnlimitedNatural1503.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1503", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result_LiteralUnlimitedNatural1503);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y.reset(new InputPin());
				this->addToElementRepository("GT.y", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y_LiteralUnlimitedNatural1504.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1504", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y_LiteralUnlimitedNatural1504);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y_LiteralInteger1505.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1505", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y_LiteralInteger1505);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x.reset(new InputPin());
				this->addToElementRepository("GT.x", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x_LiteralUnlimitedNatural1506.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1506", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x_LiteralUnlimitedNatural1506);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x_LiteralInteger1507.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1507", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x_LiteralInteger1507);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Max)", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y.reset(new InputPin());
				this->addToElementRepository("Min.y", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y_LiteralInteger1508.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1508", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y_LiteralInteger1508);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y_LiteralUnlimitedNatural1509.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1509", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y_LiteralUnlimitedNatural1509);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result.reset(new OutputPin());
				this->addToElementRepository("Max.result", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result_LiteralUnlimitedNatural1510.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1510", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result_LiteralUnlimitedNatural1510);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result_LiteralInteger1511.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1511", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result_LiteralInteger1511);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x.reset(new InputPin());
				this->addToElementRepository("Max.x", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x_LiteralUnlimitedNatural1512.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1512", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x_LiteralUnlimitedNatural1512);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x_LiteralInteger1513.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1513", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x_LiteralInteger1513);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1514.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1514", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1514);
				fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1514_LiteralInteger1515.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1515", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1514_LiteralInteger1515);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1516.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1516", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1516);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1516_LiteralInteger1517.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1517", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1516_LiteralInteger1517);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1518.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1518", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1518);
				fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1518_LiteralInteger1519.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1519", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1518_LiteralInteger1519);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1520.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1520", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1520);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1520_LiteralInteger1521.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1521", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1520_LiteralInteger1521);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MinResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(MinResult)", fUML_Tests_TestUnlimitedNaturalFunctions_Param_MinResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1522.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1522", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1522);
				fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1522_LiteralInteger1523.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1523", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1522_LiteralInteger1523);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(GT)_2", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x.reset(new InputPin());
				this->addToElementRepository("GT.x", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x_LiteralInteger1524.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1524", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x_LiteralInteger1524);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x_LiteralUnlimitedNatural1525.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1525", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x_LiteralUnlimitedNatural1525);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result.reset(new OutputPin());
				this->addToElementRepository("GT.result", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result_LiteralInteger1526.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1526", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result_LiteralInteger1526);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result_LiteralUnlimitedNatural1527.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1527", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result_LiteralUnlimitedNatural1527);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y.reset(new InputPin());
				this->addToElementRepository("GT.y", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y_LiteralInteger1528.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1528", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y_LiteralInteger1528);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y_LiteralUnlimitedNatural1529.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1529", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y_LiteralUnlimitedNatural1529);
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3.reset(new ForkNode());
			this->addToElementRepository("Fork(3)", fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1530.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1530", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1530);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1530_LiteralInteger1531.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1531", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1530_LiteralInteger1531);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1532.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1532", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1532);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1532_LiteralInteger1533.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1533", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1532_LiteralInteger1533);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1534.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1534", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1534);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1534_LiteralInteger1535.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1535", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1534_LiteralInteger1535);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1536.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1536", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1536);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1536_LiteralInteger1537.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1537", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1536_LiteralInteger1537);
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResult.reset(new Parameter());
			this->addToElementRepository("LEResult", fUML_Tests_TestUnlimitedNaturalFunctions_LEResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResult.reset(new Parameter());
			this->addToElementRepository("GTResult", fUML_Tests_TestUnlimitedNaturalFunctions_GTResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1538.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1538", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1538);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1538_LiteralInteger1539.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1539", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1538_LiteralInteger1539);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(LT)_1", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result.reset(new OutputPin());
				this->addToElementRepository("LT.result", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result_LiteralUnlimitedNatural1540.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1540", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result_LiteralUnlimitedNatural1540);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result_LiteralInteger1541.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1541", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result_LiteralInteger1541);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y.reset(new InputPin());
				this->addToElementRepository("LT.y", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y_LiteralUnlimitedNatural1542.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1542", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y_LiteralUnlimitedNatural1542);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y_LiteralInteger1543.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1543", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y_LiteralInteger1543);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x.reset(new InputPin());
				this->addToElementRepository("LT.x", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x_LiteralInteger1544.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1544", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x_LiteralInteger1544);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x_LiteralUnlimitedNatural1545.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1545", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x_LiteralUnlimitedNatural1545);
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResulttimes.reset(new Parameter());
			this->addToElementRepository("LEResult*", fUML_Tests_TestUnlimitedNaturalFunctions_LEResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_MinResult.reset(new Parameter());
			this->addToElementRepository("MinResult", fUML_Tests_TestUnlimitedNaturalFunctions_MinResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1546.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1546", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1546);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1546_LiteralInteger1547.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1547", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1546_LiteralInteger1547);
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResult.reset(new Parameter());
			this->addToElementRepository("LTResult", fUML_Tests_TestUnlimitedNaturalFunctions_LTResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1548.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1548", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1548);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1548_LiteralInteger1549.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1549", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1548_LiteralInteger1549);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(LEResult)", fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(LE)_2", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x.reset(new InputPin());
				this->addToElementRepository("LE.x", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x_LiteralUnlimitedNatural1550.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1550", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x_LiteralUnlimitedNatural1550);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x_LiteralInteger1551.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1551", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x_LiteralInteger1551);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y.reset(new InputPin());
				this->addToElementRepository("LE.y", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y_LiteralInteger1552.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1552", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y_LiteralInteger1552);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y_LiteralUnlimitedNatural1553.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1553", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y_LiteralUnlimitedNatural1553);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result.reset(new OutputPin());
				this->addToElementRepository("LE.result", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result_LiteralInteger1554.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1554", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result_LiteralInteger1554);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result_LiteralUnlimitedNatural1555.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1555", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result_LiteralUnlimitedNatural1555);
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times.reset(new ForkNode());
			this->addToElementRepository("Fork(*)", fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_times.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(*)", fUML_Tests_TestUnlimitedNaturalFunctions_Value_times);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_LiteralUnlimitedNatural1556.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1556", fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_LiteralUnlimitedNatural1556);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result.reset(new OutputPin());
				this->addToElementRepository("Value(*).result", fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result_LiteralInteger1557.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1557", fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result_LiteralInteger1557);
					fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result_LiteralUnlimitedNatural1558.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1558", fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result_LiteralUnlimitedNatural1558);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResulttimes.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(GTResult*)", fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(GE)_1", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y.reset(new InputPin());
				this->addToElementRepository("GE.y", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y_LiteralInteger1559.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1559", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y_LiteralInteger1559);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y_LiteralUnlimitedNatural1560.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1560", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y_LiteralUnlimitedNatural1560);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result.reset(new OutputPin());
				this->addToElementRepository("GE.result", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result_LiteralUnlimitedNatural1561.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1561", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result_LiteralUnlimitedNatural1561);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result_LiteralInteger1562.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1562", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result_LiteralInteger1562);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x.reset(new InputPin());
				this->addToElementRepository("GE.x", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x_LiteralInteger1563.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1563", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x_LiteralInteger1563);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x_LiteralUnlimitedNatural1564.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1564", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x_LiteralUnlimitedNatural1564);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1565.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1565", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1565);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1565_LiteralInteger1566.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1566", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1565_LiteralInteger1566);
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2.reset(new ForkNode());
			this->addToElementRepository("Fork(2)", fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResulttimes.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(LEResult*)", fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(GTResult)", fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1567.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1567", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1567);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1567_LiteralInteger1568.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1568", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1567_LiteralInteger1568);
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResulttimes.reset(new Parameter());
			this->addToElementRepository("LTResult*", fUML_Tests_TestUnlimitedNaturalFunctions_LTResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1569.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1569", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1569);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1569_LiteralInteger1570.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1570", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1569_LiteralInteger1570);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1571.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1571", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1571);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1571_LiteralInteger1572.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1572", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1571_LiteralInteger1572);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1573.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1573", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1573);
				fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1573_LiteralInteger1574.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1574", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1573_LiteralInteger1574);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(LE)_1", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result.reset(new OutputPin());
				this->addToElementRepository("LE.result", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result_LiteralUnlimitedNatural1575.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1575", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result_LiteralUnlimitedNatural1575);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result_LiteralInteger1576.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1576", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result_LiteralInteger1576);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y.reset(new InputPin());
				this->addToElementRepository("LE.y", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y_LiteralUnlimitedNatural1577.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1577", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y_LiteralUnlimitedNatural1577);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y_LiteralInteger1578.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1578", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y_LiteralInteger1578);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x.reset(new InputPin());
				this->addToElementRepository("LE.x", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x_LiteralInteger1579.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1579", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x_LiteralInteger1579);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x_LiteralUnlimitedNatural1580.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1580", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x_LiteralUnlimitedNatural1580);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1581.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1581", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1581);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1581_LiteralInteger1582.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1582", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1581_LiteralInteger1582);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1583.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1583", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1583);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1583_LiteralInteger1584.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1584", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1583_LiteralInteger1584);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2)", fUML_Tests_TestUnlimitedNaturalFunctions_Value_2);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_LiteralUnlimitedNatural1585.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1585", fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_LiteralUnlimitedNatural1585);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result.reset(new OutputPin());
				this->addToElementRepository("Value(2).result", fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result_LiteralInteger1586.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1586", fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result_LiteralInteger1586);
					fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result_LiteralUnlimitedNatural1587.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1587", fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result_LiteralUnlimitedNatural1587);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Min)", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result.reset(new OutputPin());
				this->addToElementRepository("Min.result", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result_LiteralUnlimitedNatural1588.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1588", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result_LiteralUnlimitedNatural1588);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result_LiteralInteger1589.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1589", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result_LiteralInteger1589);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x.reset(new InputPin());
				this->addToElementRepository("Min.x", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x_LiteralInteger1590.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1590", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x_LiteralInteger1590);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x_LiteralUnlimitedNatural1591.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1591", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x_LiteralUnlimitedNatural1591);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y.reset(new InputPin());
				this->addToElementRepository("Min.y", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y_LiteralInteger1592.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1592", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y_LiteralInteger1592);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y_LiteralUnlimitedNatural1593.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1593", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y_LiteralUnlimitedNatural1593);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1594.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1594", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1594);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1594_LiteralInteger1595.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1595", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1594_LiteralInteger1595);
			fUML_Tests_TestUnlimitedNaturalFunctions_MaxResult.reset(new Parameter());
			this->addToElementRepository("MaxResult", fUML_Tests_TestUnlimitedNaturalFunctions_MaxResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResulttimes.reset(new Parameter());
			this->addToElementRepository("GTResult*", fUML_Tests_TestUnlimitedNaturalFunctions_GTResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MaxResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(MaxResult)", fUML_Tests_TestUnlimitedNaturalFunctions_Param_MaxResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1596.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1596", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1596);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1596_LiteralInteger1597.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1597", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1596_LiteralInteger1597);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1598.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1598", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1598);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1598_LiteralInteger1599.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1599", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1598_LiteralInteger1599);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1600.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1600", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1600);
				fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1600_LiteralInteger1601.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1601", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1600_LiteralInteger1601);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResulttimes.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(LTResult*)", fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1602.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1602", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1602);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1602_LiteralInteger1603.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1603", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1602_LiteralInteger1603);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_3.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(3)", fUML_Tests_TestUnlimitedNaturalFunctions_Value_3);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result.reset(new OutputPin());
				this->addToElementRepository("Value(3).result", fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result_LiteralUnlimitedNatural1604.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1604", fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result_LiteralUnlimitedNatural1604);
					fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result_LiteralInteger1605.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1605", fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result_LiteralInteger1605);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_LiteralUnlimitedNatural1606.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1606", fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_LiteralUnlimitedNatural1606);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1607.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1607", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1607);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1607_LiteralInteger1608.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1608", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1607_LiteralInteger1608);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResulttimes.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(GEResult*)", fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1609.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1609", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1609);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1609_LiteralInteger1610.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1610", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1609_LiteralInteger1610);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1611.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1611", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1611);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1611_LiteralInteger1612.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1612", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1611_LiteralInteger1612);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1613.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1613", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1613);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1613_LiteralInteger1614.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1614", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1613_LiteralInteger1614);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(LTResult)", fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1615.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1615", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1615);
				fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1615_LiteralInteger1616.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1616", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1615_LiteralInteger1616);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1617.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1617", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1617);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1617_LiteralInteger1618.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1618", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1617_LiteralInteger1618);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(GEResult)", fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1619.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1619", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1619);
				fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1619_LiteralInteger1620.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1620", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1619_LiteralInteger1620);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1621.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1621", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1621);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1621_LiteralInteger1622.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1622", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1621_LiteralInteger1622);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1623.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1623", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1623);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1623_LiteralInteger1624.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1624", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1623_LiteralInteger1624);
		fUML_Tests_TestStringFunctions.reset(new Activity());
		this->addToElementRepository("TestStringFunctions", fUML_Tests_TestStringFunctions);
			fUML_Tests_TestStringFunctions_Fork_Substringminus1.reset(new ForkNode());
			this->addToElementRepository("Fork(Substring-1)", fUML_Tests_TestStringFunctions_Fork_Substringminus1);
			fUML_Tests_TestStringFunctions_Value_9.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(9)", fUML_Tests_TestStringFunctions_Value_9);
				fUML_Tests_TestStringFunctions_Value_9_Value_9_result.reset(new OutputPin());
				this->addToElementRepository("Value(9).result", fUML_Tests_TestStringFunctions_Value_9_Value_9_result);
					fUML_Tests_TestStringFunctions_Value_9_Value_9_result_LiteralInteger1625.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1625", fUML_Tests_TestStringFunctions_Value_9_Value_9_result_LiteralInteger1625);
					fUML_Tests_TestStringFunctions_Value_9_Value_9_result_LiteralUnlimitedNatural1626.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1626", fUML_Tests_TestStringFunctions_Value_9_Value_9_result_LiteralUnlimitedNatural1626);
				fUML_Tests_TestStringFunctions_Value_9_LiteralInteger1627.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1627", fUML_Tests_TestStringFunctions_Value_9_LiteralInteger1627);
			fUML_Tests_TestStringFunctions_Call_Concat.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Concat)", fUML_Tests_TestStringFunctions_Call_Concat);
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_y.reset(new InputPin());
				this->addToElementRepository("Concat.y", fUML_Tests_TestStringFunctions_Call_Concat_Concat_y);
					fUML_Tests_TestStringFunctions_Call_Concat_Concat_y_LiteralUnlimitedNatural1628.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1628", fUML_Tests_TestStringFunctions_Call_Concat_Concat_y_LiteralUnlimitedNatural1628);
					fUML_Tests_TestStringFunctions_Call_Concat_Concat_y_LiteralInteger1629.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1629", fUML_Tests_TestStringFunctions_Call_Concat_Concat_y_LiteralInteger1629);
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_result.reset(new OutputPin());
				this->addToElementRepository("Concat.result", fUML_Tests_TestStringFunctions_Call_Concat_Concat_result);
					fUML_Tests_TestStringFunctions_Call_Concat_Concat_result_LiteralInteger1630.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1630", fUML_Tests_TestStringFunctions_Call_Concat_Concat_result_LiteralInteger1630);
					fUML_Tests_TestStringFunctions_Call_Concat_Concat_result_LiteralUnlimitedNatural1631.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1631", fUML_Tests_TestStringFunctions_Call_Concat_Concat_result_LiteralUnlimitedNatural1631);
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_x.reset(new InputPin());
				this->addToElementRepository("Concat.x", fUML_Tests_TestStringFunctions_Call_Concat_Concat_x);
					fUML_Tests_TestStringFunctions_Call_Concat_Concat_x_LiteralUnlimitedNatural1632.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1632", fUML_Tests_TestStringFunctions_Call_Concat_Concat_x_LiteralUnlimitedNatural1632);
					fUML_Tests_TestStringFunctions_Call_Concat_Concat_x_LiteralInteger1633.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1633", fUML_Tests_TestStringFunctions_Call_Concat_Concat_x_LiteralInteger1633);
			fUML_Tests_TestStringFunctions_ObjectFlow1634.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1634", fUML_Tests_TestStringFunctions_ObjectFlow1634);
				fUML_Tests_TestStringFunctions_ObjectFlow1634_LiteralInteger1635.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1635", fUML_Tests_TestStringFunctions_ObjectFlow1634_LiteralInteger1635);
			fUML_Tests_TestStringFunctions_Param_Substring1Result.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(Substring1Result)", fUML_Tests_TestStringFunctions_Param_Substring1Result);
			fUML_Tests_TestStringFunctions_ObjectFlow1636.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1636", fUML_Tests_TestStringFunctions_ObjectFlow1636);
				fUML_Tests_TestStringFunctions_ObjectFlow1636_LiteralInteger1637.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1637", fUML_Tests_TestStringFunctions_ObjectFlow1636_LiteralInteger1637);
			fUML_Tests_TestStringFunctions_ObjectFlow1638.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1638", fUML_Tests_TestStringFunctions_ObjectFlow1638);
				fUML_Tests_TestStringFunctions_ObjectFlow1638_LiteralInteger1639.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1639", fUML_Tests_TestStringFunctions_ObjectFlow1638_LiteralInteger1639);
			fUML_Tests_TestStringFunctions_Value_5.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(5)", fUML_Tests_TestStringFunctions_Value_5);
				fUML_Tests_TestStringFunctions_Value_5_LiteralInteger1640.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1640", fUML_Tests_TestStringFunctions_Value_5_LiteralInteger1640);
				fUML_Tests_TestStringFunctions_Value_5_Value_5_result.reset(new OutputPin());
				this->addToElementRepository("Value(5).result", fUML_Tests_TestStringFunctions_Value_5_Value_5_result);
					fUML_Tests_TestStringFunctions_Value_5_Value_5_result_LiteralUnlimitedNatural1641.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1641", fUML_Tests_TestStringFunctions_Value_5_Value_5_result_LiteralUnlimitedNatural1641);
					fUML_Tests_TestStringFunctions_Value_5_Value_5_result_LiteralInteger1642.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1642", fUML_Tests_TestStringFunctions_Value_5_Value_5_result_LiteralInteger1642);
			fUML_Tests_TestStringFunctions_ObjectFlow1643.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1643", fUML_Tests_TestStringFunctions_ObjectFlow1643);
				fUML_Tests_TestStringFunctions_ObjectFlow1643_LiteralInteger1644.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1644", fUML_Tests_TestStringFunctions_ObjectFlow1643_LiteralInteger1644);
			fUML_Tests_TestStringFunctions_ObjectFlow1645.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1645", fUML_Tests_TestStringFunctions_ObjectFlow1645);
				fUML_Tests_TestStringFunctions_ObjectFlow1645_LiteralInteger1646.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1646", fUML_Tests_TestStringFunctions_ObjectFlow1645_LiteralInteger1646);
			fUML_Tests_TestStringFunctions_Call_Size.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Size)", fUML_Tests_TestStringFunctions_Call_Size);
				fUML_Tests_TestStringFunctions_Call_Size_Size_x.reset(new InputPin());
				this->addToElementRepository("Size.x", fUML_Tests_TestStringFunctions_Call_Size_Size_x);
					fUML_Tests_TestStringFunctions_Call_Size_Size_x_LiteralInteger1647.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1647", fUML_Tests_TestStringFunctions_Call_Size_Size_x_LiteralInteger1647);
					fUML_Tests_TestStringFunctions_Call_Size_Size_x_LiteralUnlimitedNatural1648.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1648", fUML_Tests_TestStringFunctions_Call_Size_Size_x_LiteralUnlimitedNatural1648);
				fUML_Tests_TestStringFunctions_Call_Size_Size_result.reset(new OutputPin());
				this->addToElementRepository("Size.result", fUML_Tests_TestStringFunctions_Call_Size_Size_result);
					fUML_Tests_TestStringFunctions_Call_Size_Size_result_LiteralUnlimitedNatural1649.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1649", fUML_Tests_TestStringFunctions_Call_Size_Size_result_LiteralUnlimitedNatural1649);
					fUML_Tests_TestStringFunctions_Call_Size_Size_result_LiteralInteger1650.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1650", fUML_Tests_TestStringFunctions_Call_Size_Size_result_LiteralInteger1650);
			fUML_Tests_TestStringFunctions_ObjectFlow1651.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1651", fUML_Tests_TestStringFunctions_ObjectFlow1651);
				fUML_Tests_TestStringFunctions_ObjectFlow1651_LiteralInteger1652.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1652", fUML_Tests_TestStringFunctions_ObjectFlow1651_LiteralInteger1652);
			fUML_Tests_TestStringFunctions_Call_Substringminus2.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Substring)-2", fUML_Tests_TestStringFunctions_Call_Substringminus2);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_upper.reset(new InputPin());
				this->addToElementRepository("upper", fUML_Tests_TestStringFunctions_Call_Substringminus2_upper);
					fUML_Tests_TestStringFunctions_Call_Substringminus2_upper_LiteralUnlimitedNatural1653.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1653", fUML_Tests_TestStringFunctions_Call_Substringminus2_upper_LiteralUnlimitedNatural1653);
					fUML_Tests_TestStringFunctions_Call_Substringminus2_upper_LiteralInteger1654.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1654", fUML_Tests_TestStringFunctions_Call_Substringminus2_upper_LiteralInteger1654);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestStringFunctions_Call_Substringminus2_x);
					fUML_Tests_TestStringFunctions_Call_Substringminus2_x_LiteralInteger1655.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1655", fUML_Tests_TestStringFunctions_Call_Substringminus2_x_LiteralInteger1655);
					fUML_Tests_TestStringFunctions_Call_Substringminus2_x_LiteralUnlimitedNatural1656.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1656", fUML_Tests_TestStringFunctions_Call_Substringminus2_x_LiteralUnlimitedNatural1656);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_lower.reset(new InputPin());
				this->addToElementRepository("lower", fUML_Tests_TestStringFunctions_Call_Substringminus2_lower);
					fUML_Tests_TestStringFunctions_Call_Substringminus2_lower_LiteralInteger1657.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1657", fUML_Tests_TestStringFunctions_Call_Substringminus2_lower_LiteralInteger1657);
					fUML_Tests_TestStringFunctions_Call_Substringminus2_lower_LiteralUnlimitedNatural1658.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1658", fUML_Tests_TestStringFunctions_Call_Substringminus2_lower_LiteralUnlimitedNatural1658);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestStringFunctions_Call_Substringminus2_result);
					fUML_Tests_TestStringFunctions_Call_Substringminus2_result_LiteralInteger1659.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1659", fUML_Tests_TestStringFunctions_Call_Substringminus2_result_LiteralInteger1659);
					fUML_Tests_TestStringFunctions_Call_Substringminus2_result_LiteralUnlimitedNatural1660.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1660", fUML_Tests_TestStringFunctions_Call_Substringminus2_result_LiteralUnlimitedNatural1660);
			fUML_Tests_TestStringFunctions_ObjectFlow1661.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1661", fUML_Tests_TestStringFunctions_ObjectFlow1661);
				fUML_Tests_TestStringFunctions_ObjectFlow1661_LiteralInteger1662.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1662", fUML_Tests_TestStringFunctions_ObjectFlow1661_LiteralInteger1662);
			fUML_Tests_TestStringFunctions_ObjectFlow1663.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1663", fUML_Tests_TestStringFunctions_ObjectFlow1663);
				fUML_Tests_TestStringFunctions_ObjectFlow1663_LiteralInteger1664.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1664", fUML_Tests_TestStringFunctions_ObjectFlow1663_LiteralInteger1664);
			fUML_Tests_TestStringFunctions_Substring1Result.reset(new Parameter());
			this->addToElementRepository("Substring1Result", fUML_Tests_TestStringFunctions_Substring1Result);
				fUML_Tests_TestStringFunctions_Substring1Result_LiteralInteger1665.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1665", fUML_Tests_TestStringFunctions_Substring1Result_LiteralInteger1665);
				fUML_Tests_TestStringFunctions_Substring1Result_LiteralUnlimitedNatural1666.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1666", fUML_Tests_TestStringFunctions_Substring1Result_LiteralUnlimitedNatural1666);
			fUML_Tests_TestStringFunctions_ObjectFlow1667.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1667", fUML_Tests_TestStringFunctions_ObjectFlow1667);
				fUML_Tests_TestStringFunctions_ObjectFlow1667_LiteralInteger1668.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1668", fUML_Tests_TestStringFunctions_ObjectFlow1667_LiteralInteger1668);
			fUML_Tests_TestStringFunctions_Param_SizeResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(SizeResult)", fUML_Tests_TestStringFunctions_Param_SizeResult);
			fUML_Tests_TestStringFunctions_ObjectFlow1669.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1669", fUML_Tests_TestStringFunctions_ObjectFlow1669);
				fUML_Tests_TestStringFunctions_ObjectFlow1669_LiteralInteger1670.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1670", fUML_Tests_TestStringFunctions_ObjectFlow1669_LiteralInteger1670);
			fUML_Tests_TestStringFunctions_Fork_Substringminus2.reset(new ForkNode());
			this->addToElementRepository("Fork(Substring-2)", fUML_Tests_TestStringFunctions_Fork_Substringminus2);
			fUML_Tests_TestStringFunctions_ObjectFlow1671.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1671", fUML_Tests_TestStringFunctions_ObjectFlow1671);
				fUML_Tests_TestStringFunctions_ObjectFlow1671_LiteralInteger1672.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1672", fUML_Tests_TestStringFunctions_ObjectFlow1671_LiteralInteger1672);
			fUML_Tests_TestStringFunctions_ConcatResult.reset(new Parameter());
			this->addToElementRepository("ConcatResult", fUML_Tests_TestStringFunctions_ConcatResult);
				fUML_Tests_TestStringFunctions_ConcatResult_LiteralUnlimitedNatural1673.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1673", fUML_Tests_TestStringFunctions_ConcatResult_LiteralUnlimitedNatural1673);
				fUML_Tests_TestStringFunctions_ConcatResult_LiteralInteger1674.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1674", fUML_Tests_TestStringFunctions_ConcatResult_LiteralInteger1674);
			fUML_Tests_TestStringFunctions_Value_123456789.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(\"123456789\")", fUML_Tests_TestStringFunctions_Value_123456789);
				fUML_Tests_TestStringFunctions_Value_123456789_LiteralString1675.reset(new LiteralString());
				this->addToElementRepository("LiteralString1675", fUML_Tests_TestStringFunctions_Value_123456789_LiteralString1675);
				fUML_Tests_TestStringFunctions_Value_123456789_Value_result.reset(new OutputPin());
				this->addToElementRepository("Value.result", fUML_Tests_TestStringFunctions_Value_123456789_Value_result);
					fUML_Tests_TestStringFunctions_Value_123456789_Value_result_LiteralInteger1676.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1676", fUML_Tests_TestStringFunctions_Value_123456789_Value_result_LiteralInteger1676);
					fUML_Tests_TestStringFunctions_Value_123456789_Value_result_LiteralUnlimitedNatural1677.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1677", fUML_Tests_TestStringFunctions_Value_123456789_Value_result_LiteralUnlimitedNatural1677);
			fUML_Tests_TestStringFunctions_Param_ConcatResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(ConcatResult)", fUML_Tests_TestStringFunctions_Param_ConcatResult);
			fUML_Tests_TestStringFunctions_ObjectFlow1678.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1678", fUML_Tests_TestStringFunctions_ObjectFlow1678);
				fUML_Tests_TestStringFunctions_ObjectFlow1678_LiteralInteger1679.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1679", fUML_Tests_TestStringFunctions_ObjectFlow1678_LiteralInteger1679);
			fUML_Tests_TestStringFunctions_SizeResult.reset(new Parameter());
			this->addToElementRepository("SizeResult", fUML_Tests_TestStringFunctions_SizeResult);
				fUML_Tests_TestStringFunctions_SizeResult_LiteralUnlimitedNatural1680.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1680", fUML_Tests_TestStringFunctions_SizeResult_LiteralUnlimitedNatural1680);
				fUML_Tests_TestStringFunctions_SizeResult_LiteralInteger1681.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1681", fUML_Tests_TestStringFunctions_SizeResult_LiteralInteger1681);
			fUML_Tests_TestStringFunctions_ObjectFlow1682.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1682", fUML_Tests_TestStringFunctions_ObjectFlow1682);
				fUML_Tests_TestStringFunctions_ObjectFlow1682_LiteralInteger1683.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1683", fUML_Tests_TestStringFunctions_ObjectFlow1682_LiteralInteger1683);
			fUML_Tests_TestStringFunctions_Call_Substringminus1.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Substring)-1", fUML_Tests_TestStringFunctions_Call_Substringminus1);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestStringFunctions_Call_Substringminus1_result);
					fUML_Tests_TestStringFunctions_Call_Substringminus1_result_LiteralInteger1684.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1684", fUML_Tests_TestStringFunctions_Call_Substringminus1_result_LiteralInteger1684);
					fUML_Tests_TestStringFunctions_Call_Substringminus1_result_LiteralUnlimitedNatural1685.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1685", fUML_Tests_TestStringFunctions_Call_Substringminus1_result_LiteralUnlimitedNatural1685);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_lower.reset(new InputPin());
				this->addToElementRepository("lower", fUML_Tests_TestStringFunctions_Call_Substringminus1_lower);
					fUML_Tests_TestStringFunctions_Call_Substringminus1_lower_LiteralUnlimitedNatural1686.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1686", fUML_Tests_TestStringFunctions_Call_Substringminus1_lower_LiteralUnlimitedNatural1686);
					fUML_Tests_TestStringFunctions_Call_Substringminus1_lower_LiteralInteger1687.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1687", fUML_Tests_TestStringFunctions_Call_Substringminus1_lower_LiteralInteger1687);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestStringFunctions_Call_Substringminus1_x);
					fUML_Tests_TestStringFunctions_Call_Substringminus1_x_LiteralUnlimitedNatural1688.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1688", fUML_Tests_TestStringFunctions_Call_Substringminus1_x_LiteralUnlimitedNatural1688);
					fUML_Tests_TestStringFunctions_Call_Substringminus1_x_LiteralInteger1689.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1689", fUML_Tests_TestStringFunctions_Call_Substringminus1_x_LiteralInteger1689);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_upper.reset(new InputPin());
				this->addToElementRepository("upper", fUML_Tests_TestStringFunctions_Call_Substringminus1_upper);
					fUML_Tests_TestStringFunctions_Call_Substringminus1_upper_LiteralUnlimitedNatural1690.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1690", fUML_Tests_TestStringFunctions_Call_Substringminus1_upper_LiteralUnlimitedNatural1690);
					fUML_Tests_TestStringFunctions_Call_Substringminus1_upper_LiteralInteger1691.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1691", fUML_Tests_TestStringFunctions_Call_Substringminus1_upper_LiteralInteger1691);
			fUML_Tests_TestStringFunctions_ObjectFlow1692.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1692", fUML_Tests_TestStringFunctions_ObjectFlow1692);
				fUML_Tests_TestStringFunctions_ObjectFlow1692_LiteralInteger1693.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1693", fUML_Tests_TestStringFunctions_ObjectFlow1692_LiteralInteger1693);
			fUML_Tests_TestStringFunctions_ObjectFlow1694.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1694", fUML_Tests_TestStringFunctions_ObjectFlow1694);
				fUML_Tests_TestStringFunctions_ObjectFlow1694_LiteralInteger1695.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1695", fUML_Tests_TestStringFunctions_ObjectFlow1694_LiteralInteger1695);
			fUML_Tests_TestStringFunctions_Value_1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)", fUML_Tests_TestStringFunctions_Value_1);
				fUML_Tests_TestStringFunctions_Value_1_Value_1_result.reset(new OutputPin());
				this->addToElementRepository("Value(1).result", fUML_Tests_TestStringFunctions_Value_1_Value_1_result);
					fUML_Tests_TestStringFunctions_Value_1_Value_1_result_LiteralInteger1696.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1696", fUML_Tests_TestStringFunctions_Value_1_Value_1_result_LiteralInteger1696);
					fUML_Tests_TestStringFunctions_Value_1_Value_1_result_LiteralUnlimitedNatural1697.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1697", fUML_Tests_TestStringFunctions_Value_1_Value_1_result_LiteralUnlimitedNatural1697);
				fUML_Tests_TestStringFunctions_Value_1_LiteralInteger1698.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1698", fUML_Tests_TestStringFunctions_Value_1_LiteralInteger1698);
			fUML_Tests_TestStringFunctions_Param_Substring2Result.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(Substring2Result)", fUML_Tests_TestStringFunctions_Param_Substring2Result);
			fUML_Tests_TestStringFunctions_Value_6.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(6)", fUML_Tests_TestStringFunctions_Value_6);
				fUML_Tests_TestStringFunctions_Value_6_LiteralInteger1699.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1699", fUML_Tests_TestStringFunctions_Value_6_LiteralInteger1699);
				fUML_Tests_TestStringFunctions_Value_6_Value_6_result.reset(new OutputPin());
				this->addToElementRepository("Value(6).result", fUML_Tests_TestStringFunctions_Value_6_Value_6_result);
					fUML_Tests_TestStringFunctions_Value_6_Value_6_result_LiteralUnlimitedNatural1700.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1700", fUML_Tests_TestStringFunctions_Value_6_Value_6_result_LiteralUnlimitedNatural1700);
					fUML_Tests_TestStringFunctions_Value_6_Value_6_result_LiteralInteger1701.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1701", fUML_Tests_TestStringFunctions_Value_6_Value_6_result_LiteralInteger1701);
			fUML_Tests_TestStringFunctions_ObjectFlow1702.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1702", fUML_Tests_TestStringFunctions_ObjectFlow1702);
				fUML_Tests_TestStringFunctions_ObjectFlow1702_LiteralInteger1703.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1703", fUML_Tests_TestStringFunctions_ObjectFlow1702_LiteralInteger1703);
			fUML_Tests_TestStringFunctions_Fork_Value.reset(new ForkNode());
			this->addToElementRepository("Fork(Value)", fUML_Tests_TestStringFunctions_Fork_Value);
			fUML_Tests_TestStringFunctions_Substring2Result.reset(new Parameter());
			this->addToElementRepository("Substring2Result", fUML_Tests_TestStringFunctions_Substring2Result);
				fUML_Tests_TestStringFunctions_Substring2Result_LiteralUnlimitedNatural1704.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1704", fUML_Tests_TestStringFunctions_Substring2Result_LiteralUnlimitedNatural1704);
				fUML_Tests_TestStringFunctions_Substring2Result_LiteralInteger1705.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1705", fUML_Tests_TestStringFunctions_Substring2Result_LiteralInteger1705);

	// Initialize public members
	/*
	 * Model fUML_Tests
	 */
	fUML_Tests->setThisPackagePtr(fUML_Tests);
	fUML_Tests->setName("fUML_Tests");
	fUML_Tests->setVisibility(VisibilityKind::public_);
		// Activity ForkMerge
		fUML_Tests_ForkMerge->setThisActivityPtr(fUML_Tests_ForkMerge);
		fUML_Tests_ForkMerge->setName("ForkMerge");
		fUML_Tests_ForkMerge->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkMerge->isReentrant = false;
			// Parameter output
			fUML_Tests_ForkMerge_output->setThisElementPtr(fUML_Tests_ForkMerge_output);
			fUML_Tests_ForkMerge_output->setName("output");
			fUML_Tests_ForkMerge_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_ForkMerge_output->setUpper(-1);
			fUML_Tests_ForkMerge_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_ForkMerge_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_ForkMerge->addOwnedParameter(fUML_Tests_ForkMerge_output);
			// MergeNode MergeNode
			fUML_Tests_ForkMerge_MergeNode->setThisElementPtr(fUML_Tests_ForkMerge_MergeNode);
			fUML_Tests_ForkMerge_MergeNode->setName("MergeNode");
			fUML_Tests_ForkMerge_MergeNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkMerge->addNode(fUML_Tests_ForkMerge_MergeNode);
			// ForkNode ForkNode
			fUML_Tests_ForkMerge_ForkNode->setThisElementPtr(fUML_Tests_ForkMerge_ForkNode);
			fUML_Tests_ForkMerge_ForkNode->setName("ForkNode");
			fUML_Tests_ForkMerge_ForkNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkMerge->addNode(fUML_Tests_ForkMerge_ForkNode);
			// ActivityParameterNode OutputNode
			fUML_Tests_ForkMerge_OutputNode->setThisElementPtr(fUML_Tests_ForkMerge_OutputNode);
			fUML_Tests_ForkMerge_OutputNode->setName("OutputNode");
			fUML_Tests_ForkMerge_OutputNode->setVisibility(VisibilityKind::public_);
			fUML_Tests_ForkMerge_OutputNode->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_ForkMerge_OutputNode->setParameter(fUML_Tests_ForkMerge_output);
		fUML_Tests_ForkMerge->addNode(fUML_Tests_ForkMerge_OutputNode);
			// InitialNode InitialNode
			fUML_Tests_ForkMerge_InitialNode->setThisElementPtr(fUML_Tests_ForkMerge_InitialNode);
			fUML_Tests_ForkMerge_InitialNode->setName("InitialNode");
			fUML_Tests_ForkMerge_InitialNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkMerge->addNode(fUML_Tests_ForkMerge_InitialNode);
			// ValueSpecificationAction Value(0)
			fUML_Tests_ForkMerge_Value_0->setThisExecutableNodePtr(fUML_Tests_ForkMerge_Value_0);
			fUML_Tests_ForkMerge_Value_0->setName("Value(0)");
			fUML_Tests_ForkMerge_Value_0->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger10
				fUML_Tests_ForkMerge_Value_0_LiteralInteger10->setThisElementPtr(fUML_Tests_ForkMerge_Value_0_LiteralInteger10);
				fUML_Tests_ForkMerge_Value_0_LiteralInteger10->setName("LiteralInteger10");
				fUML_Tests_ForkMerge_Value_0_LiteralInteger10->setVisibility(VisibilityKind::public_);
				fUML_Tests_ForkMerge_Value_0_LiteralInteger10->setValue(0);
			fUML_Tests_ForkMerge_Value_0->setValue(fUML_Tests_ForkMerge_Value_0_LiteralInteger10);
				// OutputPin Value(0).result
				fUML_Tests_ForkMerge_Value_0_Value_0_result->setThisElementPtr(fUML_Tests_ForkMerge_Value_0_Value_0_result);
				fUML_Tests_ForkMerge_Value_0_Value_0_result->setName("Value(0).result");
				fUML_Tests_ForkMerge_Value_0_Value_0_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_ForkMerge_Value_0_Value_0_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_ForkMerge_Value_0->setResult(fUML_Tests_ForkMerge_Value_0_Value_0_result);
		fUML_Tests_ForkMerge->addNode(fUML_Tests_ForkMerge_Value_0);
			// ObjectFlow ObjectFlow0 from Value(0).result to OutputNode
			fUML_Tests_ForkMerge_ObjectFlow0->setThisActivityEdgePtr(fUML_Tests_ForkMerge_ObjectFlow0);
			fUML_Tests_ForkMerge_ObjectFlow0->setName("ObjectFlow0");
			fUML_Tests_ForkMerge_ObjectFlow0->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMerge_ObjectFlow0->setSource(fUML_Tests_ForkMerge_Value_0_Value_0_result);
			fUML_Tests_ForkMerge_ObjectFlow0->setTarget(fUML_Tests_ForkMerge_OutputNode);
		fUML_Tests_ForkMerge->addEdge(fUML_Tests_ForkMerge_ObjectFlow0);
			// ControlFlow ControlFlow2 from InitialNode to ForkNode
			fUML_Tests_ForkMerge_ControlFlow2->setThisActivityEdgePtr(fUML_Tests_ForkMerge_ControlFlow2);
			fUML_Tests_ForkMerge_ControlFlow2->setName("ControlFlow2");
			fUML_Tests_ForkMerge_ControlFlow2->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMerge_ControlFlow2->setSource(fUML_Tests_ForkMerge_InitialNode);
			fUML_Tests_ForkMerge_ControlFlow2->setTarget(fUML_Tests_ForkMerge_ForkNode);
		fUML_Tests_ForkMerge->addEdge(fUML_Tests_ForkMerge_ControlFlow2);
			// ControlFlow ControlFlow4 from MergeNode to Value(0)
			fUML_Tests_ForkMerge_ControlFlow4->setThisActivityEdgePtr(fUML_Tests_ForkMerge_ControlFlow4);
			fUML_Tests_ForkMerge_ControlFlow4->setName("ControlFlow4");
			fUML_Tests_ForkMerge_ControlFlow4->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMerge_ControlFlow4->setSource(fUML_Tests_ForkMerge_MergeNode);
			fUML_Tests_ForkMerge_ControlFlow4->setTarget(fUML_Tests_ForkMerge_Value_0);
		fUML_Tests_ForkMerge->addEdge(fUML_Tests_ForkMerge_ControlFlow4);
			// ControlFlow ControlFlow8 from ForkNode to MergeNode
			fUML_Tests_ForkMerge_ControlFlow8->setThisActivityEdgePtr(fUML_Tests_ForkMerge_ControlFlow8);
			fUML_Tests_ForkMerge_ControlFlow8->setName("ControlFlow8");
			fUML_Tests_ForkMerge_ControlFlow8->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMerge_ControlFlow8->setSource(fUML_Tests_ForkMerge_ForkNode);
			fUML_Tests_ForkMerge_ControlFlow8->setTarget(fUML_Tests_ForkMerge_MergeNode);
		fUML_Tests_ForkMerge->addEdge(fUML_Tests_ForkMerge_ControlFlow8);
			// ControlFlow ControlFlow13 from ForkNode to MergeNode
			fUML_Tests_ForkMerge_ControlFlow13->setThisActivityEdgePtr(fUML_Tests_ForkMerge_ControlFlow13);
			fUML_Tests_ForkMerge_ControlFlow13->setName("ControlFlow13");
			fUML_Tests_ForkMerge_ControlFlow13->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMerge_ControlFlow13->setSource(fUML_Tests_ForkMerge_ForkNode);
			fUML_Tests_ForkMerge_ControlFlow13->setTarget(fUML_Tests_ForkMerge_MergeNode);
		fUML_Tests_ForkMerge->addEdge(fUML_Tests_ForkMerge_ControlFlow13);
	fUML_Tests->addPackagedElement(fUML_Tests_ForkMerge);
		// Signal OtherSignal
		fUML_Tests_OtherSignal->setThisSignalPtr(fUML_Tests_OtherSignal);
		fUML_Tests_OtherSignal->setName("OtherSignal");
		fUML_Tests_OtherSignal->setVisibility(VisibilityKind::public_);
	fUML_Tests->addPackagedElement(fUML_Tests_OtherSignal);
		// Activity TestSpecializedSignalSend
		fUML_Tests_TestSpecializedSignalSend->setThisActivityPtr(fUML_Tests_TestSpecializedSignalSend);
		fUML_Tests_TestSpecializedSignalSend->setName("TestSpecializedSignalSend");
		fUML_Tests_TestSpecializedSignalSend->setVisibility(VisibilityKind::public_);
			// InitialNode InitialNode17
			fUML_Tests_TestSpecializedSignalSend_InitialNode17->setThisElementPtr(fUML_Tests_TestSpecializedSignalSend_InitialNode17);
			fUML_Tests_TestSpecializedSignalSend_InitialNode17->setName("InitialNode17");
			fUML_Tests_TestSpecializedSignalSend_InitialNode17->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestSpecializedSignalSend->addNode(fUML_Tests_TestSpecializedSignalSend_InitialNode17);
			// StartObjectBehaviorAction Start(TestSignalReceiver)
			fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver->setThisExecutableNodePtr(fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver);
			fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver->setName("Start(TestSignalReceiver)");
			fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver->setVisibility(VisibilityKind::public_);
				// InputPin object
				fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object->setThisElementPtr(fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object);
				fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object->setName("object");
				fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object->setType(fUML_Tests_TestSignalReceiver);
			fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver->setObject(fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object);
		fUML_Tests_TestSpecializedSignalSend->addNode(fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver);
			// SendSignalAction Send(SpecializedSignal)
			fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal->setThisExecutableNodePtr(fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal);
			fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal->setName("Send(SpecializedSignal)");
			fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal->setSignal(fUML_Tests_SpecializedSignal);
				// InputPin target
				fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target->setThisElementPtr(fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target);
				fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target->setName("target");
				fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target->setType(fUML_Tests_TestSignalReceiver);
			fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal->setTarget(fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target);
		fUML_Tests_TestSpecializedSignalSend->addNode(fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal);
			// ActivityFinalNode ActivityFinalNode26
			fUML_Tests_TestSpecializedSignalSend_ActivityFinalNode26->setThisElementPtr(fUML_Tests_TestSpecializedSignalSend_ActivityFinalNode26);
			fUML_Tests_TestSpecializedSignalSend_ActivityFinalNode26->setName("ActivityFinalNode26");
			fUML_Tests_TestSpecializedSignalSend_ActivityFinalNode26->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestSpecializedSignalSend->addNode(fUML_Tests_TestSpecializedSignalSend_ActivityFinalNode26);
			// CreateObjectAction Create(TestSignalReceiver)
			fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver->setThisExecutableNodePtr(fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver);
			fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver->setName("Create(TestSignalReceiver)");
			fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver->setClassifier(fUML_Tests_TestSignalReceiver);
				// OutputPin result
				fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result->setThisElementPtr(fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result);
				fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result->setName("result");
				fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result->setType(fUML_Tests_TestSignalReceiver);
			fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver->setResult(fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result);
		fUML_Tests_TestSpecializedSignalSend->addNode(fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver);
			// ForkNode ForkNode35
			fUML_Tests_TestSpecializedSignalSend_ForkNode35->setThisElementPtr(fUML_Tests_TestSpecializedSignalSend_ForkNode35);
			fUML_Tests_TestSpecializedSignalSend_ForkNode35->setName("ForkNode35");
			fUML_Tests_TestSpecializedSignalSend_ForkNode35->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestSpecializedSignalSend->addNode(fUML_Tests_TestSpecializedSignalSend_ForkNode35);
			// ObjectFlow ObjectFlow15 from ForkNode35 to object
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow15->setThisActivityEdgePtr(fUML_Tests_TestSpecializedSignalSend_ObjectFlow15);
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow15->setName("ObjectFlow15");
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow15->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow15->setSource(fUML_Tests_TestSpecializedSignalSend_ForkNode35);
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow15->setTarget(fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object);
		fUML_Tests_TestSpecializedSignalSend->addEdge(fUML_Tests_TestSpecializedSignalSend_ObjectFlow15);
			// ControlFlow ControlFlow20 from Send(SpecializedSignal) to ActivityFinalNode26
			fUML_Tests_TestSpecializedSignalSend_ControlFlow20->setThisActivityEdgePtr(fUML_Tests_TestSpecializedSignalSend_ControlFlow20);
			fUML_Tests_TestSpecializedSignalSend_ControlFlow20->setName("ControlFlow20");
			fUML_Tests_TestSpecializedSignalSend_ControlFlow20->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSpecializedSignalSend_ControlFlow20->setSource(fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal);
			fUML_Tests_TestSpecializedSignalSend_ControlFlow20->setTarget(fUML_Tests_TestSpecializedSignalSend_ActivityFinalNode26);
		fUML_Tests_TestSpecializedSignalSend->addEdge(fUML_Tests_TestSpecializedSignalSend_ControlFlow20);
			// ObjectFlow ObjectFlow24 from ForkNode35 to target
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow24->setThisActivityEdgePtr(fUML_Tests_TestSpecializedSignalSend_ObjectFlow24);
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow24->setName("ObjectFlow24");
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow24->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow24->setSource(fUML_Tests_TestSpecializedSignalSend_ForkNode35);
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow24->setTarget(fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target);
		fUML_Tests_TestSpecializedSignalSend->addEdge(fUML_Tests_TestSpecializedSignalSend_ObjectFlow24);
			// ControlFlow ControlFlow29 from Start(TestSignalReceiver) to Send(SpecializedSignal)
			fUML_Tests_TestSpecializedSignalSend_ControlFlow29->setThisActivityEdgePtr(fUML_Tests_TestSpecializedSignalSend_ControlFlow29);
			fUML_Tests_TestSpecializedSignalSend_ControlFlow29->setName("ControlFlow29");
			fUML_Tests_TestSpecializedSignalSend_ControlFlow29->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSpecializedSignalSend_ControlFlow29->setSource(fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver);
			fUML_Tests_TestSpecializedSignalSend_ControlFlow29->setTarget(fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal);
		fUML_Tests_TestSpecializedSignalSend->addEdge(fUML_Tests_TestSpecializedSignalSend_ControlFlow29);
			// ControlFlow ControlFlow33 from InitialNode17 to Create(TestSignalReceiver)
			fUML_Tests_TestSpecializedSignalSend_ControlFlow33->setThisActivityEdgePtr(fUML_Tests_TestSpecializedSignalSend_ControlFlow33);
			fUML_Tests_TestSpecializedSignalSend_ControlFlow33->setName("ControlFlow33");
			fUML_Tests_TestSpecializedSignalSend_ControlFlow33->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSpecializedSignalSend_ControlFlow33->setSource(fUML_Tests_TestSpecializedSignalSend_InitialNode17);
			fUML_Tests_TestSpecializedSignalSend_ControlFlow33->setTarget(fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver);
		fUML_Tests_TestSpecializedSignalSend->addEdge(fUML_Tests_TestSpecializedSignalSend_ControlFlow33);
			// ObjectFlow ObjectFlow31 from result to ForkNode35
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow31->setThisActivityEdgePtr(fUML_Tests_TestSpecializedSignalSend_ObjectFlow31);
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow31->setName("ObjectFlow31");
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow31->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow31->setSource(fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result);
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow31->setTarget(fUML_Tests_TestSpecializedSignalSend_ForkNode35);
		fUML_Tests_TestSpecializedSignalSend->addEdge(fUML_Tests_TestSpecializedSignalSend_ObjectFlow31);
	fUML_Tests->addPackagedElement(fUML_Tests_TestSpecializedSignalSend);
		// Activity TestClassUnmarshaller
		fUML_Tests_TestClassUnmarshaller->setThisActivityPtr(fUML_Tests_TestClassUnmarshaller);
		fUML_Tests_TestClassUnmarshaller->setName("TestClassUnmarshaller");
		fUML_Tests_TestClassUnmarshaller->setVisibility(VisibilityKind::public_);
			// Parameter x
			fUML_Tests_TestClassUnmarshaller_x->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_x);
			fUML_Tests_TestClassUnmarshaller_x->setName("x");
			fUML_Tests_TestClassUnmarshaller_x->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_x->setUpper(-1);
			fUML_Tests_TestClassUnmarshaller_x->setLower(0);
			fUML_Tests_TestClassUnmarshaller_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_x->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassUnmarshaller->addOwnedParameter(fUML_Tests_TestClassUnmarshaller_x);
			// Parameter y
			fUML_Tests_TestClassUnmarshaller_y->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_y);
			fUML_Tests_TestClassUnmarshaller_y->setName("y");
			fUML_Tests_TestClassUnmarshaller_y->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_y->setUpper(-1);
			fUML_Tests_TestClassUnmarshaller_y->setLower(0);
			fUML_Tests_TestClassUnmarshaller_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_y->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassUnmarshaller->addOwnedParameter(fUML_Tests_TestClassUnmarshaller_y);
			// ValueSpecificationAction Value(*)
			fUML_Tests_TestClassUnmarshaller_Value_times->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Value_times);
			fUML_Tests_TestClassUnmarshaller_Value_times->setName("Value(*)");
			fUML_Tests_TestClassUnmarshaller_Value_times->setVisibility(VisibilityKind::public_);
				// LiteralUnlimitedNatural LiteralUnlimitedNatural76
				fUML_Tests_TestClassUnmarshaller_Value_times_LiteralUnlimitedNatural76->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Value_times_LiteralUnlimitedNatural76);
				fUML_Tests_TestClassUnmarshaller_Value_times_LiteralUnlimitedNatural76->setName("LiteralUnlimitedNatural76");
				fUML_Tests_TestClassUnmarshaller_Value_times_LiteralUnlimitedNatural76->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Value_times_LiteralUnlimitedNatural76->setValue(-1);
			fUML_Tests_TestClassUnmarshaller_Value_times->setValue(fUML_Tests_TestClassUnmarshaller_Value_times_LiteralUnlimitedNatural76);
				// OutputPin result
				fUML_Tests_TestClassUnmarshaller_Value_times_result->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Value_times_result);
				fUML_Tests_TestClassUnmarshaller_Value_times_result->setName("result");
				fUML_Tests_TestClassUnmarshaller_Value_times_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Value_times->setResult(fUML_Tests_TestClassUnmarshaller_Value_times_result);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Value_times);
			// ForkNode ForkNode36
			fUML_Tests_TestClassUnmarshaller_ForkNode36->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_ForkNode36);
			fUML_Tests_TestClassUnmarshaller_ForkNode36->setName("ForkNode36");
			fUML_Tests_TestClassUnmarshaller_ForkNode36->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_ForkNode36);
			// ValueSpecificationAction Value(0)
			fUML_Tests_TestClassUnmarshaller_Value_0->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Value_0);
			fUML_Tests_TestClassUnmarshaller_Value_0->setName("Value(0)");
			fUML_Tests_TestClassUnmarshaller_Value_0->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger83
				fUML_Tests_TestClassUnmarshaller_Value_0_LiteralInteger83->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Value_0_LiteralInteger83);
				fUML_Tests_TestClassUnmarshaller_Value_0_LiteralInteger83->setName("LiteralInteger83");
				fUML_Tests_TestClassUnmarshaller_Value_0_LiteralInteger83->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Value_0_LiteralInteger83->setValue(0);
			fUML_Tests_TestClassUnmarshaller_Value_0->setValue(fUML_Tests_TestClassUnmarshaller_Value_0_LiteralInteger83);
				// OutputPin result
				fUML_Tests_TestClassUnmarshaller_Value_0_result->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Value_0_result);
				fUML_Tests_TestClassUnmarshaller_Value_0_result->setName("result");
				fUML_Tests_TestClassUnmarshaller_Value_0_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Value_0_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Value_0->setResult(fUML_Tests_TestClassUnmarshaller_Value_0_result);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Value_0);
			// ActivityParameterNode Output(x)
			fUML_Tests_TestClassUnmarshaller_Output_x->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Output_x);
			fUML_Tests_TestClassUnmarshaller_Output_x->setName("Output(x)");
			fUML_Tests_TestClassUnmarshaller_Output_x->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Output_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Output_x->setParameter(fUML_Tests_TestClassUnmarshaller_x);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Output_x);
			// AddStructuralFeatureValueAction Write(y[1])
			fUML_Tests_TestClassUnmarshaller_Write_y_1->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Write_y_1);
			fUML_Tests_TestClassUnmarshaller_Write_y_1->setName("Write(y[1])");
			fUML_Tests_TestClassUnmarshaller_Write_y_1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Write_y_1->setStructuralFeature(fUML_Tests_TestClass_y);
				// InputPin object
				fUML_Tests_TestClassUnmarshaller_Write_y_1_object->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_y_1_object);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_object->setName("object");
				fUML_Tests_TestClassUnmarshaller_Write_y_1_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassUnmarshaller_Write_y_1->setObject(fUML_Tests_TestClassUnmarshaller_Write_y_1_object);
				// InputPin value
				fUML_Tests_TestClassUnmarshaller_Write_y_1_value->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_y_1_value);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_value->setName("value");
				fUML_Tests_TestClassUnmarshaller_Write_y_1_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Write_y_1->setValue(fUML_Tests_TestClassUnmarshaller_Write_y_1_value);
				// OutputPin result
				fUML_Tests_TestClassUnmarshaller_Write_y_1_result->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_y_1_result);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_result->setName("result");
				fUML_Tests_TestClassUnmarshaller_Write_y_1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassUnmarshaller_Write_y_1->setResult(fUML_Tests_TestClassUnmarshaller_Write_y_1_result);
				// InputPin insertAt
				fUML_Tests_TestClassUnmarshaller_Write_y_1_insertAt->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_y_1_insertAt);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_insertAt->setName("insertAt");
				fUML_Tests_TestClassUnmarshaller_Write_y_1_insertAt->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Write_y_1->setInsertAt(fUML_Tests_TestClassUnmarshaller_Write_y_1_insertAt);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Write_y_1);
			// AddStructuralFeatureValueAction Write(y[2])
			fUML_Tests_TestClassUnmarshaller_Write_y_2->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Write_y_2);
			fUML_Tests_TestClassUnmarshaller_Write_y_2->setName("Write(y[2])");
			fUML_Tests_TestClassUnmarshaller_Write_y_2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Write_y_2->setStructuralFeature(fUML_Tests_TestClass_y);
				// InputPin object
				fUML_Tests_TestClassUnmarshaller_Write_y_2_object->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_y_2_object);
				fUML_Tests_TestClassUnmarshaller_Write_y_2_object->setName("object");
				fUML_Tests_TestClassUnmarshaller_Write_y_2_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_y_2_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassUnmarshaller_Write_y_2->setObject(fUML_Tests_TestClassUnmarshaller_Write_y_2_object);
				// InputPin value
				fUML_Tests_TestClassUnmarshaller_Write_y_2_value->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_y_2_value);
				fUML_Tests_TestClassUnmarshaller_Write_y_2_value->setName("value");
				fUML_Tests_TestClassUnmarshaller_Write_y_2_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_y_2_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Write_y_2->setValue(fUML_Tests_TestClassUnmarshaller_Write_y_2_value);
				// OutputPin result
				fUML_Tests_TestClassUnmarshaller_Write_y_2_result->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_y_2_result);
				fUML_Tests_TestClassUnmarshaller_Write_y_2_result->setName("result");
				fUML_Tests_TestClassUnmarshaller_Write_y_2_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Write_y_2->setResult(fUML_Tests_TestClassUnmarshaller_Write_y_2_result);
				// InputPin insertAt
				fUML_Tests_TestClassUnmarshaller_Write_y_2_insertAt->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_y_2_insertAt);
				fUML_Tests_TestClassUnmarshaller_Write_y_2_insertAt->setName("insertAt");
				fUML_Tests_TestClassUnmarshaller_Write_y_2_insertAt->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Write_y_2->setInsertAt(fUML_Tests_TestClassUnmarshaller_Write_y_2_insertAt);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Write_y_2);
			// ValueSpecificationAction Value(1)
			fUML_Tests_TestClassUnmarshaller_Value_1->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Value_1);
			fUML_Tests_TestClassUnmarshaller_Value_1->setName("Value(1)");
			fUML_Tests_TestClassUnmarshaller_Value_1->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger55
				fUML_Tests_TestClassUnmarshaller_Value_1_LiteralInteger55->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Value_1_LiteralInteger55);
				fUML_Tests_TestClassUnmarshaller_Value_1_LiteralInteger55->setName("LiteralInteger55");
				fUML_Tests_TestClassUnmarshaller_Value_1_LiteralInteger55->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Value_1_LiteralInteger55->setValue(1);
			fUML_Tests_TestClassUnmarshaller_Value_1->setValue(fUML_Tests_TestClassUnmarshaller_Value_1_LiteralInteger55);
				// OutputPin result
				fUML_Tests_TestClassUnmarshaller_Value_1_result->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Value_1_result);
				fUML_Tests_TestClassUnmarshaller_Value_1_result->setName("result");
				fUML_Tests_TestClassUnmarshaller_Value_1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Value_1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Value_1->setResult(fUML_Tests_TestClassUnmarshaller_Value_1_result);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Value_1);
			// ActivityParameterNode Output(y)
			fUML_Tests_TestClassUnmarshaller_Output_y->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Output_y);
			fUML_Tests_TestClassUnmarshaller_Output_y->setName("Output(y)");
			fUML_Tests_TestClassUnmarshaller_Output_y->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Output_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Output_y->setParameter(fUML_Tests_TestClassUnmarshaller_y);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Output_y);
			// ValueSpecificationAction Value(true)
			fUML_Tests_TestClassUnmarshaller_Value_true->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Value_true);
			fUML_Tests_TestClassUnmarshaller_Value_true->setName("Value(true)");
			fUML_Tests_TestClassUnmarshaller_Value_true->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean94
				fUML_Tests_TestClassUnmarshaller_Value_true_LiteralBoolean94->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Value_true_LiteralBoolean94);
				fUML_Tests_TestClassUnmarshaller_Value_true_LiteralBoolean94->setName("LiteralBoolean94");
				fUML_Tests_TestClassUnmarshaller_Value_true_LiteralBoolean94->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Value_true_LiteralBoolean94->setValue(true);
			fUML_Tests_TestClassUnmarshaller_Value_true->setValue(fUML_Tests_TestClassUnmarshaller_Value_true_LiteralBoolean94);
				// OutputPin result
				fUML_Tests_TestClassUnmarshaller_Value_true_result->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Value_true_result);
				fUML_Tests_TestClassUnmarshaller_Value_true_result->setName("result");
				fUML_Tests_TestClassUnmarshaller_Value_true_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Value_true_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Value_true->setResult(fUML_Tests_TestClassUnmarshaller_Value_true_result);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Value_true);
			// CreateObjectAction Create(Subclass1)
			fUML_Tests_TestClassUnmarshaller_Create_Subclass1->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Create_Subclass1);
			fUML_Tests_TestClassUnmarshaller_Create_Subclass1->setName("Create(Subclass1)");
			fUML_Tests_TestClassUnmarshaller_Create_Subclass1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Create_Subclass1->setClassifier(fUML_Tests_Subclass1);
				// OutputPin result
				fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result);
				fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result->setName("result");
				fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassUnmarshaller_Create_Subclass1->setResult(fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Create_Subclass1);
			// AddStructuralFeatureValueAction Write(x)
			fUML_Tests_TestClassUnmarshaller_Write_x->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Write_x);
			fUML_Tests_TestClassUnmarshaller_Write_x->setName("Write(x)");
			fUML_Tests_TestClassUnmarshaller_Write_x->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Write_x->setStructuralFeature(fUML_Tests_TestClass_x);
				// InputPin object
				fUML_Tests_TestClassUnmarshaller_Write_x_object->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_x_object);
				fUML_Tests_TestClassUnmarshaller_Write_x_object->setName("object");
				fUML_Tests_TestClassUnmarshaller_Write_x_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_x_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassUnmarshaller_Write_x->setObject(fUML_Tests_TestClassUnmarshaller_Write_x_object);
				// InputPin value
				fUML_Tests_TestClassUnmarshaller_Write_x_value->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_x_value);
				fUML_Tests_TestClassUnmarshaller_Write_x_value->setName("value");
				fUML_Tests_TestClassUnmarshaller_Write_x_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_x_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Write_x->setValue(fUML_Tests_TestClassUnmarshaller_Write_x_value);
				// OutputPin result
				fUML_Tests_TestClassUnmarshaller_Write_x_result->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_x_result);
				fUML_Tests_TestClassUnmarshaller_Write_x_result->setName("result");
				fUML_Tests_TestClassUnmarshaller_Write_x_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_x_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassUnmarshaller_Write_x->setResult(fUML_Tests_TestClassUnmarshaller_Write_x_result);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Write_x);
			// ValueSpecificationAction Value(2)
			fUML_Tests_TestClassUnmarshaller_Value_2->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Value_2);
			fUML_Tests_TestClassUnmarshaller_Value_2->setName("Value(2)");
			fUML_Tests_TestClassUnmarshaller_Value_2->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger103
				fUML_Tests_TestClassUnmarshaller_Value_2_LiteralInteger103->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Value_2_LiteralInteger103);
				fUML_Tests_TestClassUnmarshaller_Value_2_LiteralInteger103->setName("LiteralInteger103");
				fUML_Tests_TestClassUnmarshaller_Value_2_LiteralInteger103->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Value_2_LiteralInteger103->setValue(2);
			fUML_Tests_TestClassUnmarshaller_Value_2->setValue(fUML_Tests_TestClassUnmarshaller_Value_2_LiteralInteger103);
				// OutputPin result
				fUML_Tests_TestClassUnmarshaller_Value_2_result->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Value_2_result);
				fUML_Tests_TestClassUnmarshaller_Value_2_result->setName("result");
				fUML_Tests_TestClassUnmarshaller_Value_2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Value_2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Value_2->setResult(fUML_Tests_TestClassUnmarshaller_Value_2_result);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Value_2);
			// UnmarshallAction Unmarshall(TestClass)
			fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass);
			fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass->setName("Unmarshall(TestClass)");
			fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass->setUnmarshallType(fUML_Tests_TestClass);
				// InputPin object
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object->setName("object");
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass->setObject(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object);
				// OutputPin result(x)
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x->setName("result(x)");
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass->addResult(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x);
				// OutputPin result(y)
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y->setName("result(y)");
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y->setUpper(-1);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y->setLower(0);
			fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass->addResult(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass);
			// AddStructuralFeatureValueAction Write(a)
			fUML_Tests_TestClassUnmarshaller_Write_a->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Write_a);
			fUML_Tests_TestClassUnmarshaller_Write_a->setName("Write(a)");
			fUML_Tests_TestClassUnmarshaller_Write_a->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Write_a->setStructuralFeature(fUML_Tests_Subclass1_a);
				// InputPin object
				fUML_Tests_TestClassUnmarshaller_Write_a_object->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_a_object);
				fUML_Tests_TestClassUnmarshaller_Write_a_object->setName("object");
				fUML_Tests_TestClassUnmarshaller_Write_a_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_a_object->setType(fUML_Tests_Subclass1);
			fUML_Tests_TestClassUnmarshaller_Write_a->setObject(fUML_Tests_TestClassUnmarshaller_Write_a_object);
				// InputPin value
				fUML_Tests_TestClassUnmarshaller_Write_a_value->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_a_value);
				fUML_Tests_TestClassUnmarshaller_Write_a_value->setName("value");
				fUML_Tests_TestClassUnmarshaller_Write_a_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_a_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Write_a->setValue(fUML_Tests_TestClassUnmarshaller_Write_a_value);
				// OutputPin result
				fUML_Tests_TestClassUnmarshaller_Write_a_result->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_a_result);
				fUML_Tests_TestClassUnmarshaller_Write_a_result->setName("result");
				fUML_Tests_TestClassUnmarshaller_Write_a_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_a_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassUnmarshaller_Write_a->setResult(fUML_Tests_TestClassUnmarshaller_Write_a_result);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Write_a);
			// ObjectFlow ObjectFlow37 from result(x) to Output(x)
			fUML_Tests_TestClassUnmarshaller_ObjectFlow37->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow37);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow37->setName("ObjectFlow37");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow37->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow37->setSource(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow37->setTarget(fUML_Tests_TestClassUnmarshaller_Output_x);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow37);
			// ObjectFlow ObjectFlow39 from result to ForkNode36
			fUML_Tests_TestClassUnmarshaller_ObjectFlow39->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow39);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow39->setName("ObjectFlow39");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow39->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow39->setSource(fUML_Tests_TestClassUnmarshaller_Value_times_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow39->setTarget(fUML_Tests_TestClassUnmarshaller_ForkNode36);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow39);
			// ObjectFlow ObjectFlow41 from result to value
			fUML_Tests_TestClassUnmarshaller_ObjectFlow41->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow41);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow41->setName("ObjectFlow41");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow41->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow41->setSource(fUML_Tests_TestClassUnmarshaller_Value_true_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow41->setTarget(fUML_Tests_TestClassUnmarshaller_Write_a_value);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow41);
			// ObjectFlow ObjectFlow84 from ForkNode36 to insertAt
			fUML_Tests_TestClassUnmarshaller_ObjectFlow84->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow84);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow84->setName("ObjectFlow84");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow84->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow84->setSource(fUML_Tests_TestClassUnmarshaller_ForkNode36);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow84->setTarget(fUML_Tests_TestClassUnmarshaller_Write_y_2_insertAt);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow84);
			// ObjectFlow ObjectFlow86 from result to object
			fUML_Tests_TestClassUnmarshaller_ObjectFlow86->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow86);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow86->setName("ObjectFlow86");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow86->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow86->setSource(fUML_Tests_TestClassUnmarshaller_Write_a_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow86->setTarget(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow86);
			// ObjectFlow ObjectFlow88 from result to object
			fUML_Tests_TestClassUnmarshaller_ObjectFlow88->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow88);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow88->setName("ObjectFlow88");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow88->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow88->setSource(fUML_Tests_TestClassUnmarshaller_Write_y_1_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow88->setTarget(fUML_Tests_TestClassUnmarshaller_Write_y_2_object);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow88);
			// ObjectFlow ObjectFlow53 from result to object
			fUML_Tests_TestClassUnmarshaller_ObjectFlow53->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow53);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow53->setName("ObjectFlow53");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow53->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow53->setSource(fUML_Tests_TestClassUnmarshaller_Write_x_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow53->setTarget(fUML_Tests_TestClassUnmarshaller_Write_y_1_object);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow53);
			// ObjectFlow ObjectFlow90 from result to value
			fUML_Tests_TestClassUnmarshaller_ObjectFlow90->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow90);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow90->setName("ObjectFlow90");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow90->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow90->setSource(fUML_Tests_TestClassUnmarshaller_Value_2_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow90->setTarget(fUML_Tests_TestClassUnmarshaller_Write_y_2_value);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow90);
			// ObjectFlow ObjectFlow58 from result to value
			fUML_Tests_TestClassUnmarshaller_ObjectFlow58->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow58);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow58->setName("ObjectFlow58");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow58->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow58->setSource(fUML_Tests_TestClassUnmarshaller_Value_0_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow58->setTarget(fUML_Tests_TestClassUnmarshaller_Write_x_value);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow58);
			// ObjectFlow ObjectFlow60 from result to object
			fUML_Tests_TestClassUnmarshaller_ObjectFlow60->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow60);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow60->setName("ObjectFlow60");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow60->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow60->setSource(fUML_Tests_TestClassUnmarshaller_Write_y_2_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow60->setTarget(fUML_Tests_TestClassUnmarshaller_Write_a_object);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow60);
			// ObjectFlow ObjectFlow64 from result to object
			fUML_Tests_TestClassUnmarshaller_ObjectFlow64->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow64);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow64->setName("ObjectFlow64");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow64->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow64->setSource(fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow64->setTarget(fUML_Tests_TestClassUnmarshaller_Write_x_object);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow64);
			// ObjectFlow ObjectFlow66 from result(y) to Output(y)
			fUML_Tests_TestClassUnmarshaller_ObjectFlow66->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow66);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow66->setName("ObjectFlow66");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow66->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow66->setSource(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow66->setTarget(fUML_Tests_TestClassUnmarshaller_Output_y);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow66);
			// ObjectFlow ObjectFlow68 from result to value
			fUML_Tests_TestClassUnmarshaller_ObjectFlow68->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow68);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow68->setName("ObjectFlow68");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow68->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow68->setSource(fUML_Tests_TestClassUnmarshaller_Value_1_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow68->setTarget(fUML_Tests_TestClassUnmarshaller_Write_y_1_value);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow68);
			// ObjectFlow ObjectFlow70 from ForkNode36 to insertAt
			fUML_Tests_TestClassUnmarshaller_ObjectFlow70->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow70);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow70->setName("ObjectFlow70");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow70->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow70->setSource(fUML_Tests_TestClassUnmarshaller_ForkNode36);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow70->setTarget(fUML_Tests_TestClassUnmarshaller_Write_y_1_insertAt);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow70);
	fUML_Tests->addPackagedElement(fUML_Tests_TestClassUnmarshaller);
		// Activity TestCompositeObjectDestroyer
		fUML_Tests_TestCompositeObjectDestroyer->setThisActivityPtr(fUML_Tests_TestCompositeObjectDestroyer);
		fUML_Tests_TestCompositeObjectDestroyer->setName("TestCompositeObjectDestroyer");
		fUML_Tests_TestCompositeObjectDestroyer->setVisibility(VisibilityKind::public_);
			// Parameter composite
			fUML_Tests_TestCompositeObjectDestroyer_composite->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_composite);
			fUML_Tests_TestCompositeObjectDestroyer_composite->setName("composite");
			fUML_Tests_TestCompositeObjectDestroyer_composite->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_composite->setType(fUML_Tests_TestComposite);
		fUML_Tests_TestCompositeObjectDestroyer->addOwnedParameter(fUML_Tests_TestCompositeObjectDestroyer_composite);
			// Parameter object1
			fUML_Tests_TestCompositeObjectDestroyer_object1->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_object1);
			fUML_Tests_TestCompositeObjectDestroyer_object1->setName("object1");
			fUML_Tests_TestCompositeObjectDestroyer_object1->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_object1->setType(fUML_Tests_TestClass);
		fUML_Tests_TestCompositeObjectDestroyer->addOwnedParameter(fUML_Tests_TestCompositeObjectDestroyer_object1);
			// Parameter object2
			fUML_Tests_TestCompositeObjectDestroyer_object2->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_object2);
			fUML_Tests_TestCompositeObjectDestroyer_object2->setName("object2");
			fUML_Tests_TestCompositeObjectDestroyer_object2->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_object2->setType(fUML_Tests_TestClass);
		fUML_Tests_TestCompositeObjectDestroyer->addOwnedParameter(fUML_Tests_TestCompositeObjectDestroyer_object2);
			// Parameter compositeOut
			fUML_Tests_TestCompositeObjectDestroyer_compositeOut->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_compositeOut);
			fUML_Tests_TestCompositeObjectDestroyer_compositeOut->setName("compositeOut");
			fUML_Tests_TestCompositeObjectDestroyer_compositeOut->setVisibility(VisibilityKind::public_);
			
			
			fUML_Tests_TestCompositeObjectDestroyer_compositeOut->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestCompositeObjectDestroyer->addOwnedParameter(fUML_Tests_TestCompositeObjectDestroyer_compositeOut);
			// Parameter object1Out
			fUML_Tests_TestCompositeObjectDestroyer_object1Out->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_object1Out);
			fUML_Tests_TestCompositeObjectDestroyer_object1Out->setName("object1Out");
			fUML_Tests_TestCompositeObjectDestroyer_object1Out->setVisibility(VisibilityKind::public_);
			
			
			fUML_Tests_TestCompositeObjectDestroyer_object1Out->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestCompositeObjectDestroyer->addOwnedParameter(fUML_Tests_TestCompositeObjectDestroyer_object1Out);
			// Parameter object2Out
			fUML_Tests_TestCompositeObjectDestroyer_object2Out->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_object2Out);
			fUML_Tests_TestCompositeObjectDestroyer_object2Out->setName("object2Out");
			fUML_Tests_TestCompositeObjectDestroyer_object2Out->setVisibility(VisibilityKind::public_);
			
			
			fUML_Tests_TestCompositeObjectDestroyer_object2Out->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestCompositeObjectDestroyer->addOwnedParameter(fUML_Tests_TestCompositeObjectDestroyer_object2Out);
			// Parameter assocOut
			fUML_Tests_TestCompositeObjectDestroyer_assocOut->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_assocOut);
			fUML_Tests_TestCompositeObjectDestroyer_assocOut->setName("assocOut");
			fUML_Tests_TestCompositeObjectDestroyer_assocOut->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_assocOut->setUpper(-1);
			fUML_Tests_TestCompositeObjectDestroyer_assocOut->setLower(0);
			fUML_Tests_TestCompositeObjectDestroyer_assocOut->setType(fUML_Tests_TestClass);
			fUML_Tests_TestCompositeObjectDestroyer_assocOut->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestCompositeObjectDestroyer->addOwnedParameter(fUML_Tests_TestCompositeObjectDestroyer_assocOut);
			// ActivityParameterNode Parameter(composite)
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_composite->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Parameter_composite);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_composite->setName("Parameter(composite)");
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_composite->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_composite->setType(fUML_Tests_TestComposite);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_composite->setParameter(fUML_Tests_TestCompositeObjectDestroyer_composite);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Parameter_composite);
			// ActivityParameterNode Parameter(object2Out)
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2Out->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2Out);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2Out->setName("Parameter(object2Out)");
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2Out->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2Out->setParameter(fUML_Tests_TestCompositeObjectDestroyer_object2Out);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2Out);
			// ActivityParameterNode Parameter(object1Out)
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1Out->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1Out);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1Out->setName("Parameter(object1Out)");
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1Out->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1Out->setParameter(fUML_Tests_TestCompositeObjectDestroyer_object1Out);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1Out);
			// ActivityParameterNode Parameter(assocOut)
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_assocOut->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Parameter_assocOut);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_assocOut->setName("Parameter(assocOut)");
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_assocOut->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_assocOut->setType(fUML_Tests_TestClass);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_assocOut->setParameter(fUML_Tests_TestCompositeObjectDestroyer_assocOut);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Parameter_assocOut);
			// ActivityParameterNode Parameter(object1)
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1->setName("Parameter(object1)");
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1->setType(fUML_Tests_TestClass);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1->setParameter(fUML_Tests_TestCompositeObjectDestroyer_object1);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1);
			// ActivityParameterNode Parameter(compositeOut)
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_compositeOut->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Parameter_compositeOut);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_compositeOut->setName("Parameter(compositeOut)");
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_compositeOut->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_compositeOut->setParameter(fUML_Tests_TestCompositeObjectDestroyer_compositeOut);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Parameter_compositeOut);
			// ActivityParameterNode Parameter(object2)
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2->setName("Parameter(object2)");
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2->setType(fUML_Tests_TestClass);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2->setParameter(fUML_Tests_TestCompositeObjectDestroyer_object2);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2);
			// ForkNode ForkNode122
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode122->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_ForkNode122);
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode122->setName("ForkNode122");
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode122->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_ForkNode122);
			// ForkNode ForkNode141
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode141->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_ForkNode141);
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode141->setName("ForkNode141");
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode141->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_ForkNode141);
			// AddStructuralFeatureValueAction Write(c2)
			fUML_Tests_TestCompositeObjectDestroyer_Write_c2->setThisExecutableNodePtr(fUML_Tests_TestCompositeObjectDestroyer_Write_c2);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c2->setName("Write(c2)");
			fUML_Tests_TestCompositeObjectDestroyer_Write_c2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c2->setStructuralFeature(fUML_Tests_CompositeAssociation_c2);
				// InputPin Write(c2).object
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_object->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_object);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_object->setName("Write(c2).object");
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c2->setObject(fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_object);
				// InputPin Write(c2).value
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_value->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_value);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_value->setName("Write(c2).value");
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_value->setType(fUML_Tests_TestClass);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c2->setValue(fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_value);
				// OutputPin Write(c2).result
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_result->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_result);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_result->setName("Write(c2).result");
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c2->setResult(fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_result);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Write_c2);
			// ForkNode ForkNode146
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode146->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_ForkNode146);
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode146->setName("ForkNode146");
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode146->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_ForkNode146);
			// DestroyObjectAction Destroy(composite)
			fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite->setThisExecutableNodePtr(fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite);
			fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite->setName("Destroy(composite)");
			fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite->setIsDestroyLinks(true);
			fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite->setIsDestroyOwnedObjects(true);
				// InputPin Destroy(composite).target
				fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite_Destroy_composite_target->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite_Destroy_composite_target);
				fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite_Destroy_composite_target->setName("Destroy(composite).target");
				fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite_Destroy_composite_target->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite_Destroy_composite_target);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite);
			// ForkNode ForkNode155
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode155->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_ForkNode155);
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode155->setName("ForkNode155");
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode155->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_ForkNode155);
			// AddStructuralFeatureValueAction Write(c1)
			fUML_Tests_TestCompositeObjectDestroyer_Write_c1->setThisExecutableNodePtr(fUML_Tests_TestCompositeObjectDestroyer_Write_c1);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c1->setName("Write(c1)");
			fUML_Tests_TestCompositeObjectDestroyer_Write_c1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c1->setStructuralFeature(fUML_Tests_TestComposite_c1);
				// InputPin Write(c1).object
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_object->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_object);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_object->setName("Write(c1).object");
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_object->setType(fUML_Tests_TestComposite);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c1->setObject(fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_object);
				// InputPin Write(c1).value
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_value->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_value);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_value->setName("Write(c1).value");
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_value->setType(fUML_Tests_TestClass);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c1->setValue(fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_value);
				// OutputPin Write(c1).result
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_result->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_result);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_result->setName("Write(c1).result");
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c1->setResult(fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_result);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Write_c1);
			// ReadLinkAction Read(composite)
			fUML_Tests_TestCompositeObjectDestroyer_Read_composite->setThisExecutableNodePtr(fUML_Tests_TestCompositeObjectDestroyer_Read_composite);
			fUML_Tests_TestCompositeObjectDestroyer_Read_composite->setName("Read(composite)");
			fUML_Tests_TestCompositeObjectDestroyer_Read_composite->setVisibility(VisibilityKind::public_);
				
			fUML_Tests_TestCompositeObjectDestroyer_Read_composite->addEndData(fUML_Tests_TestCompositeObjectDestroyer_Read_composite_LinkEndData156);
				
			fUML_Tests_TestCompositeObjectDestroyer_Read_composite->addEndData(fUML_Tests_TestCompositeObjectDestroyer_Read_composite_LinkEndData157);
				// InputPin Read(Composite).inputValue
				fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_inputValue->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_inputValue);
				fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_inputValue->setName("Read(Composite).inputValue");
				fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_inputValue->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Read_composite->addInputValue(fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_inputValue);
			fUML_Tests_TestCompositeObjectDestroyer_Read_composite->setResult(fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_iresult);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Read_composite);
			// ObjectFlow ObjectFlow110 from ForkNode141 to Parameter(compositeOut)
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow110->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow110);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow110->setName("ObjectFlow110");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow110->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow110->setSource(fUML_Tests_TestCompositeObjectDestroyer_ForkNode141);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow110->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Parameter_compositeOut);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow110);
			// ObjectFlow ObjectFlow112 from ForkNode155 to Parameter(object2Out)
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow112->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow112);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow112->setName("ObjectFlow112");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow112->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow112->setSource(fUML_Tests_TestCompositeObjectDestroyer_ForkNode155);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow112->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2Out);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow112);
			// ObjectFlow ObjectFlow137 from ForkNode141 to Write(c1).object
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow137->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow137);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow137->setName("ObjectFlow137");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow137->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow137->setSource(fUML_Tests_TestCompositeObjectDestroyer_ForkNode141);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow137->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_object);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow137);
			// ObjectFlow ObjectFlow116 from Parameter(object1) to ForkNode146
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow116->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow116);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow116->setName("ObjectFlow116");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow116->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow116->setSource(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow116->setTarget(fUML_Tests_TestCompositeObjectDestroyer_ForkNode146);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow116);
			// ObjectFlow ObjectFlow139 from Read(Composite).iresult to Parameter(assocOut)
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow139->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow139);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow139->setName("ObjectFlow139");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow139->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow139->setSource(fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_iresult);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow139->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Parameter_assocOut);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow139);
			// ObjectFlow ObjectFlow123 from ForkNode122 to Destroy(composite).target
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow123->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow123);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow123->setName("ObjectFlow123");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow123->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow123->setSource(fUML_Tests_TestCompositeObjectDestroyer_ForkNode122);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow123->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite_Destroy_composite_target);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow123);
			// ObjectFlow ObjectFlow125 from ForkNode146 to Write(c1).value
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow125->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow125);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow125->setName("ObjectFlow125");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow125->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow125->setSource(fUML_Tests_TestCompositeObjectDestroyer_ForkNode146);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow125->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_value);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow125);
			// ObjectFlow ObjectFlow144 from ForkNode122 to Read(Composite).inputValue
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow144->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow144);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow144->setName("ObjectFlow144");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow144->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow144->setSource(fUML_Tests_TestCompositeObjectDestroyer_ForkNode122);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow144->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_inputValue);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow144);
			// ObjectFlow ObjectFlow147 from Parameter(composite) to ForkNode141
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow147->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow147);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow147->setName("ObjectFlow147");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow147->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow147->setSource(fUML_Tests_TestCompositeObjectDestroyer_Parameter_composite);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow147->setTarget(fUML_Tests_TestCompositeObjectDestroyer_ForkNode141);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow147);
			// ObjectFlow ObjectFlow149 from Parameter(object2) to ForkNode155
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow149->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow149);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow149->setName("ObjectFlow149");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow149->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow149->setSource(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow149->setTarget(fUML_Tests_TestCompositeObjectDestroyer_ForkNode155);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow149);
			// ObjectFlow ObjectFlow151 from ForkNode146 to Parameter(object1Out)
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow151->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow151);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow151->setName("ObjectFlow151");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow151->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow151->setSource(fUML_Tests_TestCompositeObjectDestroyer_ForkNode146);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow151->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1Out);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow151);
			// ObjectFlow ObjectFlow129 from Write(c1).result to Write(c2).object
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow129->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow129);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow129->setName("ObjectFlow129");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow129->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow129->setSource(fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_result);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow129->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_object);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow129);
			// ObjectFlow ObjectFlow153 from ForkNode155 to Write(c2).value
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow153->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow153);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow153->setName("ObjectFlow153");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow153->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow153->setSource(fUML_Tests_TestCompositeObjectDestroyer_ForkNode155);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow153->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_value);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow153);
			// ObjectFlow ObjectFlow131 from Write(c2).result to ForkNode122
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow131->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow131);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow131->setName("ObjectFlow131");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow131->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow131->setSource(fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_result);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow131->setTarget(fUML_Tests_TestCompositeObjectDestroyer_ForkNode122);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow131);
	fUML_Tests->addPackagedElement(fUML_Tests_TestCompositeObjectDestroyer);
		// Activity GenerateListTestData
		fUML_Tests_GenerateListTestData->setThisActivityPtr(fUML_Tests_GenerateListTestData);
		fUML_Tests_GenerateListTestData->setName("GenerateListTestData");
		fUML_Tests_GenerateListTestData->setVisibility(VisibilityKind::public_);
		fUML_Tests_GenerateListTestData->isReentrant = false;
			// Parameter list
			fUML_Tests_GenerateListTestData_list->setThisElementPtr(fUML_Tests_GenerateListTestData_list);
			fUML_Tests_GenerateListTestData_list->setName("list");
			fUML_Tests_GenerateListTestData_list->setVisibility(VisibilityKind::public_);
			fUML_Tests_GenerateListTestData_list->setUpper(-1);
			fUML_Tests_GenerateListTestData_list->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_GenerateListTestData_list->setDirection(ParameterDirectionKind::out);
		fUML_Tests_GenerateListTestData->addOwnedParameter(fUML_Tests_GenerateListTestData_list);
			// ValueSpecificationAction Value(2)
			fUML_Tests_GenerateListTestData_Value_2->setThisExecutableNodePtr(fUML_Tests_GenerateListTestData_Value_2);
			fUML_Tests_GenerateListTestData_Value_2->setName("Value(2)");
			fUML_Tests_GenerateListTestData_Value_2->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger160
				fUML_Tests_GenerateListTestData_Value_2_LiteralInteger160->setThisElementPtr(fUML_Tests_GenerateListTestData_Value_2_LiteralInteger160);
				fUML_Tests_GenerateListTestData_Value_2_LiteralInteger160->setName("LiteralInteger160");
				fUML_Tests_GenerateListTestData_Value_2_LiteralInteger160->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateListTestData_Value_2_LiteralInteger160->setValue(2);
			fUML_Tests_GenerateListTestData_Value_2->setValue(fUML_Tests_GenerateListTestData_Value_2_LiteralInteger160);
				// OutputPin Value(2).result
				fUML_Tests_GenerateListTestData_Value_2_Value_2_result->setThisElementPtr(fUML_Tests_GenerateListTestData_Value_2_Value_2_result);
				fUML_Tests_GenerateListTestData_Value_2_Value_2_result->setName("Value(2).result");
				fUML_Tests_GenerateListTestData_Value_2_Value_2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateListTestData_Value_2_Value_2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_GenerateListTestData_Value_2->setResult(fUML_Tests_GenerateListTestData_Value_2_Value_2_result);
		fUML_Tests_GenerateListTestData->addNode(fUML_Tests_GenerateListTestData_Value_2);
			// ValueSpecificationAction Value(3)
			fUML_Tests_GenerateListTestData_Value_3->setThisExecutableNodePtr(fUML_Tests_GenerateListTestData_Value_3);
			fUML_Tests_GenerateListTestData_Value_3->setName("Value(3)");
			fUML_Tests_GenerateListTestData_Value_3->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger167
				fUML_Tests_GenerateListTestData_Value_3_LiteralInteger167->setThisElementPtr(fUML_Tests_GenerateListTestData_Value_3_LiteralInteger167);
				fUML_Tests_GenerateListTestData_Value_3_LiteralInteger167->setName("LiteralInteger167");
				fUML_Tests_GenerateListTestData_Value_3_LiteralInteger167->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateListTestData_Value_3_LiteralInteger167->setValue(3);
			fUML_Tests_GenerateListTestData_Value_3->setValue(fUML_Tests_GenerateListTestData_Value_3_LiteralInteger167);
				// OutputPin Value(3).result
				fUML_Tests_GenerateListTestData_Value_3_Value_3_result->setThisElementPtr(fUML_Tests_GenerateListTestData_Value_3_Value_3_result);
				fUML_Tests_GenerateListTestData_Value_3_Value_3_result->setName("Value(3).result");
				fUML_Tests_GenerateListTestData_Value_3_Value_3_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateListTestData_Value_3_Value_3_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_GenerateListTestData_Value_3->setResult(fUML_Tests_GenerateListTestData_Value_3_Value_3_result);
		fUML_Tests_GenerateListTestData->addNode(fUML_Tests_GenerateListTestData_Value_3);
			// ValueSpecificationAction Value(1)
			fUML_Tests_GenerateListTestData_Value_1->setThisExecutableNodePtr(fUML_Tests_GenerateListTestData_Value_1);
			fUML_Tests_GenerateListTestData_Value_1->setName("Value(1)");
			fUML_Tests_GenerateListTestData_Value_1->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger168
				fUML_Tests_GenerateListTestData_Value_1_LiteralInteger168->setThisElementPtr(fUML_Tests_GenerateListTestData_Value_1_LiteralInteger168);
				fUML_Tests_GenerateListTestData_Value_1_LiteralInteger168->setName("LiteralInteger168");
				fUML_Tests_GenerateListTestData_Value_1_LiteralInteger168->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateListTestData_Value_1_LiteralInteger168->setValue(1);
			fUML_Tests_GenerateListTestData_Value_1->setValue(fUML_Tests_GenerateListTestData_Value_1_LiteralInteger168);
				// OutputPin Value(1).result
				fUML_Tests_GenerateListTestData_Value_1_Value_1_result->setThisElementPtr(fUML_Tests_GenerateListTestData_Value_1_Value_1_result);
				fUML_Tests_GenerateListTestData_Value_1_Value_1_result->setName("Value(1).result");
				fUML_Tests_GenerateListTestData_Value_1_Value_1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateListTestData_Value_1_Value_1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_GenerateListTestData_Value_1->setResult(fUML_Tests_GenerateListTestData_Value_1_Value_1_result);
		fUML_Tests_GenerateListTestData->addNode(fUML_Tests_GenerateListTestData_Value_1);
			// ActivityParameterNode Param(list)
			fUML_Tests_GenerateListTestData_Param_list->setThisElementPtr(fUML_Tests_GenerateListTestData_Param_list);
			fUML_Tests_GenerateListTestData_Param_list->setName("Param(list)");
			fUML_Tests_GenerateListTestData_Param_list->setVisibility(VisibilityKind::public_);
			fUML_Tests_GenerateListTestData_Param_list->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_GenerateListTestData_Param_list->setParameter(fUML_Tests_GenerateListTestData_list);
		fUML_Tests_GenerateListTestData->addNode(fUML_Tests_GenerateListTestData_Param_list);
			// ObjectFlow ObjectFlow158 from Value(3).result to Param(list)
			fUML_Tests_GenerateListTestData_ObjectFlow158->setThisActivityEdgePtr(fUML_Tests_GenerateListTestData_ObjectFlow158);
			fUML_Tests_GenerateListTestData_ObjectFlow158->setName("ObjectFlow158");
			fUML_Tests_GenerateListTestData_ObjectFlow158->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateListTestData_ObjectFlow158->setSource(fUML_Tests_GenerateListTestData_Value_3_Value_3_result);
			fUML_Tests_GenerateListTestData_ObjectFlow158->setTarget(fUML_Tests_GenerateListTestData_Param_list);
		fUML_Tests_GenerateListTestData->addEdge(fUML_Tests_GenerateListTestData_ObjectFlow158);
			// ObjectFlow ObjectFlow163 from Value(2).result to Param(list)
			fUML_Tests_GenerateListTestData_ObjectFlow163->setThisActivityEdgePtr(fUML_Tests_GenerateListTestData_ObjectFlow163);
			fUML_Tests_GenerateListTestData_ObjectFlow163->setName("ObjectFlow163");
			fUML_Tests_GenerateListTestData_ObjectFlow163->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateListTestData_ObjectFlow163->setSource(fUML_Tests_GenerateListTestData_Value_2_Value_2_result);
			fUML_Tests_GenerateListTestData_ObjectFlow163->setTarget(fUML_Tests_GenerateListTestData_Param_list);
		fUML_Tests_GenerateListTestData->addEdge(fUML_Tests_GenerateListTestData_ObjectFlow163);
			// ControlFlow ControlFlow173 from Value(1) to Value(2)
			fUML_Tests_GenerateListTestData_ControlFlow173->setThisActivityEdgePtr(fUML_Tests_GenerateListTestData_ControlFlow173);
			fUML_Tests_GenerateListTestData_ControlFlow173->setName("ControlFlow173");
			fUML_Tests_GenerateListTestData_ControlFlow173->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateListTestData_ControlFlow173->setSource(fUML_Tests_GenerateListTestData_Value_1);
			fUML_Tests_GenerateListTestData_ControlFlow173->setTarget(fUML_Tests_GenerateListTestData_Value_2);
		fUML_Tests_GenerateListTestData->addEdge(fUML_Tests_GenerateListTestData_ControlFlow173);
			// ControlFlow ControlFlow175 from Value(2) to Value(3)
			fUML_Tests_GenerateListTestData_ControlFlow175->setThisActivityEdgePtr(fUML_Tests_GenerateListTestData_ControlFlow175);
			fUML_Tests_GenerateListTestData_ControlFlow175->setName("ControlFlow175");
			fUML_Tests_GenerateListTestData_ControlFlow175->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateListTestData_ControlFlow175->setSource(fUML_Tests_GenerateListTestData_Value_2);
			fUML_Tests_GenerateListTestData_ControlFlow175->setTarget(fUML_Tests_GenerateListTestData_Value_3);
		fUML_Tests_GenerateListTestData->addEdge(fUML_Tests_GenerateListTestData_ControlFlow175);
			// ObjectFlow ObjectFlow177 from Value(1).result to Param(list)
			fUML_Tests_GenerateListTestData_ObjectFlow177->setThisActivityEdgePtr(fUML_Tests_GenerateListTestData_ObjectFlow177);
			fUML_Tests_GenerateListTestData_ObjectFlow177->setName("ObjectFlow177");
			fUML_Tests_GenerateListTestData_ObjectFlow177->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateListTestData_ObjectFlow177->setSource(fUML_Tests_GenerateListTestData_Value_1_Value_1_result);
			fUML_Tests_GenerateListTestData_ObjectFlow177->setTarget(fUML_Tests_GenerateListTestData_Param_list);
		fUML_Tests_GenerateListTestData->addEdge(fUML_Tests_GenerateListTestData_ObjectFlow177);
	fUML_Tests->addPackagedElement(fUML_Tests_GenerateListTestData);
		// Activity TestGeneralizationAssembly
		fUML_Tests_TestGeneralizationAssembly->setThisActivityPtr(fUML_Tests_TestGeneralizationAssembly);
		fUML_Tests_TestGeneralizationAssembly->setName("TestGeneralizationAssembly");
		fUML_Tests_TestGeneralizationAssembly->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestGeneralizationAssembly->isReentrant = false;
			// Parameter result
			fUML_Tests_TestGeneralizationAssembly_result->setThisElementPtr(fUML_Tests_TestGeneralizationAssembly_result);
			fUML_Tests_TestGeneralizationAssembly_result->setName("result");
			fUML_Tests_TestGeneralizationAssembly_result->setVisibility(VisibilityKind::public_);
			
			
			fUML_Tests_TestGeneralizationAssembly_result->setDirection(ParameterDirectionKind::inout);
		fUML_Tests_TestGeneralizationAssembly->addOwnedParameter(fUML_Tests_TestGeneralizationAssembly_result);
			// CreateObjectAction Create(Specific)
			fUML_Tests_TestGeneralizationAssembly_Create_Specific->setThisExecutableNodePtr(fUML_Tests_TestGeneralizationAssembly_Create_Specific);
			fUML_Tests_TestGeneralizationAssembly_Create_Specific->setName("Create(Specific)");
			fUML_Tests_TestGeneralizationAssembly_Create_Specific->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestGeneralizationAssembly_Create_Specific->setClassifier(fUML_Tests_Specific);
				// OutputPin CreateObjectAction.result
				fUML_Tests_TestGeneralizationAssembly_Create_Specific_CreateObjectAction_result->setThisElementPtr(fUML_Tests_TestGeneralizationAssembly_Create_Specific_CreateObjectAction_result);
				fUML_Tests_TestGeneralizationAssembly_Create_Specific_CreateObjectAction_result->setName("CreateObjectAction.result");
				fUML_Tests_TestGeneralizationAssembly_Create_Specific_CreateObjectAction_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestGeneralizationAssembly_Create_Specific->setResult(fUML_Tests_TestGeneralizationAssembly_Create_Specific_CreateObjectAction_result);
		fUML_Tests_TestGeneralizationAssembly->addNode(fUML_Tests_TestGeneralizationAssembly_Create_Specific);
			// ActivityParameterNode ActivityParameterNode
			fUML_Tests_TestGeneralizationAssembly_ActivityParameterNode->setThisElementPtr(fUML_Tests_TestGeneralizationAssembly_ActivityParameterNode);
			fUML_Tests_TestGeneralizationAssembly_ActivityParameterNode->setName("ActivityParameterNode");
			fUML_Tests_TestGeneralizationAssembly_ActivityParameterNode->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestGeneralizationAssembly_ActivityParameterNode->setParameter(fUML_Tests_TestGeneralizationAssembly_result);
		fUML_Tests_TestGeneralizationAssembly->addNode(fUML_Tests_TestGeneralizationAssembly_ActivityParameterNode);
			// ObjectFlow ObjectFlow179 from CreateObjectAction.result to ActivityParameterNode
			fUML_Tests_TestGeneralizationAssembly_ObjectFlow179->setThisActivityEdgePtr(fUML_Tests_TestGeneralizationAssembly_ObjectFlow179);
			fUML_Tests_TestGeneralizationAssembly_ObjectFlow179->setName("ObjectFlow179");
			fUML_Tests_TestGeneralizationAssembly_ObjectFlow179->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestGeneralizationAssembly_ObjectFlow179->setSource(fUML_Tests_TestGeneralizationAssembly_Create_Specific_CreateObjectAction_result);
			fUML_Tests_TestGeneralizationAssembly_ObjectFlow179->setTarget(fUML_Tests_TestGeneralizationAssembly_ActivityParameterNode);
		fUML_Tests_TestGeneralizationAssembly->addEdge(fUML_Tests_TestGeneralizationAssembly_ObjectFlow179);
	fUML_Tests->addPackagedElement(fUML_Tests_TestGeneralizationAssembly);
		// Class Subclass2
		fUML_Tests_Subclass2->setThisClass_Ptr(fUML_Tests_Subclass2);
		fUML_Tests_Subclass2->setName("Subclass2");
		fUML_Tests_Subclass2->setVisibility(VisibilityKind::public_);
		
			// Generalization to TestClass
			fUML_Tests_Subclass2_Generalization180->setThisElementPtr(fUML_Tests_Subclass2_Generalization180);
			fUML_Tests_Subclass2_Generalization180->setGeneral(fUML_Tests_TestClass);
		fUML_Tests_Subclass2->addGeneralization(fUML_Tests_Subclass2_Generalization180);
			// Property b
			fUML_Tests_Subclass2_b->setThisElementPtr(fUML_Tests_Subclass2_b);
			fUML_Tests_Subclass2_b->setName("b");
			fUML_Tests_Subclass2_b->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_Subclass2_b->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
		fUML_Tests_Subclass2->addOwnedAttribute(fUML_Tests_Subclass2_b);
	fUML_Tests->addPackagedElement(fUML_Tests_Subclass2);
		// Activity HelloWorld
		fUML_Tests_HelloWorld->setThisActivityPtr(fUML_Tests_HelloWorld);
		fUML_Tests_HelloWorld->setName("HelloWorld");
		fUML_Tests_HelloWorld->setVisibility(VisibilityKind::public_);
		fUML_Tests_HelloWorld->isReentrant = false;
			// ValueSpecificationAction Value(\"Hello World!\")
			fUML_Tests_HelloWorld_Value_Hello_World_->setThisExecutableNodePtr(fUML_Tests_HelloWorld_Value_Hello_World_);
			fUML_Tests_HelloWorld_Value_Hello_World_->setName("Value(\"Hello World!\")");
			fUML_Tests_HelloWorld_Value_Hello_World_->setVisibility(VisibilityKind::public_);
				// LiteralString LiteralString181
				fUML_Tests_HelloWorld_Value_Hello_World__LiteralString181->setThisElementPtr(fUML_Tests_HelloWorld_Value_Hello_World__LiteralString181);
				fUML_Tests_HelloWorld_Value_Hello_World__LiteralString181->setName("LiteralString181");
				fUML_Tests_HelloWorld_Value_Hello_World__LiteralString181->setVisibility(VisibilityKind::public_);
				fUML_Tests_HelloWorld_Value_Hello_World__LiteralString181->setValue("Hello World");
			fUML_Tests_HelloWorld_Value_Hello_World_->setValue(fUML_Tests_HelloWorld_Value_Hello_World__LiteralString181);
				// OutputPin Value.result
				fUML_Tests_HelloWorld_Value_Hello_World__Value_result->setThisElementPtr(fUML_Tests_HelloWorld_Value_Hello_World__Value_result);
				fUML_Tests_HelloWorld_Value_Hello_World__Value_result->setName("Value.result");
				fUML_Tests_HelloWorld_Value_Hello_World__Value_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_HelloWorld_Value_Hello_World__Value_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_HelloWorld_Value_Hello_World_->setResult(fUML_Tests_HelloWorld_Value_Hello_World__Value_result);
		fUML_Tests_HelloWorld->addNode(fUML_Tests_HelloWorld_Value_Hello_World_);
			// CallBehaviorAction WriteLine
			fUML_Tests_HelloWorld_WriteLine->setThisExecutableNodePtr(fUML_Tests_HelloWorld_WriteLine);
			fUML_Tests_HelloWorld_WriteLine->setName("WriteLine");
			fUML_Tests_HelloWorld_WriteLine->setVisibility(VisibilityKind::public_);
				// OutputPin WriteLine.errorStatus
				fUML_Tests_HelloWorld_WriteLine_WriteLine_errorStatus->setThisElementPtr(fUML_Tests_HelloWorld_WriteLine_WriteLine_errorStatus);
				fUML_Tests_HelloWorld_WriteLine_WriteLine_errorStatus->setName("WriteLine.errorStatus");
				fUML_Tests_HelloWorld_WriteLine_WriteLine_errorStatus->setVisibility(VisibilityKind::public_);
				fUML_Tests_HelloWorld_WriteLine_WriteLine_errorStatus->setType(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_Common_Status);
			fUML_Tests_HelloWorld_WriteLine->addResult(fUML_Tests_HelloWorld_WriteLine_WriteLine_errorStatus);
			fUML_Tests_HelloWorld_WriteLine->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_BasicInputOutput_WriteLine);
				// InputPin WriteLine.value
				fUML_Tests_HelloWorld_WriteLine_WriteLine_value->setThisElementPtr(fUML_Tests_HelloWorld_WriteLine_WriteLine_value);
				fUML_Tests_HelloWorld_WriteLine_WriteLine_value->setName("WriteLine.value");
				fUML_Tests_HelloWorld_WriteLine_WriteLine_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_HelloWorld_WriteLine_WriteLine_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_HelloWorld_WriteLine->addArgument(fUML_Tests_HelloWorld_WriteLine_WriteLine_value);
		fUML_Tests_HelloWorld->addNode(fUML_Tests_HelloWorld_WriteLine);
			// ObjectFlow ObjectFlow182 from Value.result to WriteLine.value
			fUML_Tests_HelloWorld_ObjectFlow182->setThisActivityEdgePtr(fUML_Tests_HelloWorld_ObjectFlow182);
			fUML_Tests_HelloWorld_ObjectFlow182->setName("ObjectFlow182");
			fUML_Tests_HelloWorld_ObjectFlow182->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_HelloWorld_ObjectFlow182->setSource(fUML_Tests_HelloWorld_Value_Hello_World__Value_result);
			fUML_Tests_HelloWorld_ObjectFlow182->setTarget(fUML_Tests_HelloWorld_WriteLine_WriteLine_value);
		fUML_Tests_HelloWorld->addEdge(fUML_Tests_HelloWorld_ObjectFlow182);
	fUML_Tests->addPackagedElement(fUML_Tests_HelloWorld);
		// Class General
		fUML_Tests_General->setThisClass_Ptr(fUML_Tests_General);
		fUML_Tests_General->setName("General");
		fUML_Tests_General->setVisibility(VisibilityKind::public_);
		
			// Property y
			fUML_Tests_General_y->setThisElementPtr(fUML_Tests_General_y);
			fUML_Tests_General_y->setName("y");
			fUML_Tests_General_y->setVisibility(VisibilityKind::public_);
		fUML_Tests_General->addOwnedAttribute(fUML_Tests_General_y);
	fUML_Tests->addPackagedElement(fUML_Tests_General);
		// Activity TestClassAttributeWriter
		fUML_Tests_TestClassAttributeWriter->setThisActivityPtr(fUML_Tests_TestClassAttributeWriter);
		fUML_Tests_TestClassAttributeWriter->setName("TestClassAttributeWriter");
		fUML_Tests_TestClassAttributeWriter->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestClassAttributeWriter->isReentrant = false;
			// Parameter objectIn
			fUML_Tests_TestClassAttributeWriter_objectIn->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_objectIn);
			fUML_Tests_TestClassAttributeWriter_objectIn->setName("objectIn");
			fUML_Tests_TestClassAttributeWriter_objectIn->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeWriter_objectIn->setType(fUML_Tests_TestClass);
		fUML_Tests_TestClassAttributeWriter->addOwnedParameter(fUML_Tests_TestClassAttributeWriter_objectIn);
			// Parameter value
			fUML_Tests_TestClassAttributeWriter_value->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_value);
			fUML_Tests_TestClassAttributeWriter_value->setName("value");
			fUML_Tests_TestClassAttributeWriter_value->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeWriter_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
		fUML_Tests_TestClassAttributeWriter->addOwnedParameter(fUML_Tests_TestClassAttributeWriter_value);
			// Parameter objectOut
			fUML_Tests_TestClassAttributeWriter_objectOut->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_objectOut);
			fUML_Tests_TestClassAttributeWriter_objectOut->setName("objectOut");
			fUML_Tests_TestClassAttributeWriter_objectOut->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeWriter_objectOut->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeWriter_objectOut->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassAttributeWriter->addOwnedParameter(fUML_Tests_TestClassAttributeWriter_objectOut);
			// AddStructuralFeatureValueAction Add(y)
			fUML_Tests_TestClassAttributeWriter_Add_y->setThisExecutableNodePtr(fUML_Tests_TestClassAttributeWriter_Add_y);
			fUML_Tests_TestClassAttributeWriter_Add_y->setName("Add(y)");
			fUML_Tests_TestClassAttributeWriter_Add_y->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeWriter_Add_y->setStructuralFeature(fUML_Tests_TestClass_y);
				// InputPin Add(x).object
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object->setName("Add(x).object");
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeWriter_Add_y->setObject(fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object);
				// InputPin Add(y).value
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value->setName("Add(y).value");
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassAttributeWriter_Add_y->setValue(fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value);
				// OutputPin Add(y).result
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result->setName("Add(y).result");
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeWriter_Add_y->setResult(fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result);
				// InputPin Add(y).insertAt
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt->setName("Add(y).insertAt");
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestClassAttributeWriter_Add_y->setInsertAt(fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt);
		fUML_Tests_TestClassAttributeWriter->addNode(fUML_Tests_TestClassAttributeWriter_Add_y);
			// ActivityParameterNode Parameter(objectOut)
			fUML_Tests_TestClassAttributeWriter_Parameter_objectOut->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_Parameter_objectOut);
			fUML_Tests_TestClassAttributeWriter_Parameter_objectOut->setName("Parameter(objectOut)");
			fUML_Tests_TestClassAttributeWriter_Parameter_objectOut->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeWriter_Parameter_objectOut->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeWriter_Parameter_objectOut->setParameter(fUML_Tests_TestClassAttributeWriter_objectOut);
		fUML_Tests_TestClassAttributeWriter->addNode(fUML_Tests_TestClassAttributeWriter_Parameter_objectOut);
			// ActivityParameterNode Parameter(value)
			fUML_Tests_TestClassAttributeWriter_Parameter_value->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_Parameter_value);
			fUML_Tests_TestClassAttributeWriter_Parameter_value->setName("Parameter(value)");
			fUML_Tests_TestClassAttributeWriter_Parameter_value->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeWriter_Parameter_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassAttributeWriter_Parameter_value->setParameter(fUML_Tests_TestClassAttributeWriter_value);
		fUML_Tests_TestClassAttributeWriter->addNode(fUML_Tests_TestClassAttributeWriter_Parameter_value);
			// ActivityParameterNode Parameter(objectIn)
			fUML_Tests_TestClassAttributeWriter_Parameter_objectIn->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_Parameter_objectIn);
			fUML_Tests_TestClassAttributeWriter_Parameter_objectIn->setName("Parameter(objectIn)");
			fUML_Tests_TestClassAttributeWriter_Parameter_objectIn->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeWriter_Parameter_objectIn->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeWriter_Parameter_objectIn->setParameter(fUML_Tests_TestClassAttributeWriter_objectIn);
		fUML_Tests_TestClassAttributeWriter->addNode(fUML_Tests_TestClassAttributeWriter_Parameter_objectIn);
			// ValueSpecificationAction Value(*)
			fUML_Tests_TestClassAttributeWriter_Value_times->setThisExecutableNodePtr(fUML_Tests_TestClassAttributeWriter_Value_times);
			fUML_Tests_TestClassAttributeWriter_Value_times->setName("Value(*)");
			fUML_Tests_TestClassAttributeWriter_Value_times->setVisibility(VisibilityKind::public_);
				// LiteralUnlimitedNatural LiteralUnlimitedNatural208
				fUML_Tests_TestClassAttributeWriter_Value_times_LiteralUnlimitedNatural208->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_Value_times_LiteralUnlimitedNatural208);
				fUML_Tests_TestClassAttributeWriter_Value_times_LiteralUnlimitedNatural208->setName("LiteralUnlimitedNatural208");
				fUML_Tests_TestClassAttributeWriter_Value_times_LiteralUnlimitedNatural208->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeWriter_Value_times_LiteralUnlimitedNatural208->setValue(-1);
			fUML_Tests_TestClassAttributeWriter_Value_times->setValue(fUML_Tests_TestClassAttributeWriter_Value_times_LiteralUnlimitedNatural208);
				// OutputPin Value(*).result
				fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result);
				fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result->setName("Value(*).result");
				fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestClassAttributeWriter_Value_times->setResult(fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result);
		fUML_Tests_TestClassAttributeWriter->addNode(fUML_Tests_TestClassAttributeWriter_Value_times);
			// ObjectFlow ObjectFlow184 from Parameter(value) to Add(y).value
			fUML_Tests_TestClassAttributeWriter_ObjectFlow184->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeWriter_ObjectFlow184);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow184->setName("ObjectFlow184");
			fUML_Tests_TestClassAttributeWriter_ObjectFlow184->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeWriter_ObjectFlow184->setSource(fUML_Tests_TestClassAttributeWriter_Parameter_value);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow184->setTarget(fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value);
		fUML_Tests_TestClassAttributeWriter->addEdge(fUML_Tests_TestClassAttributeWriter_ObjectFlow184);
			// ObjectFlow ObjectFlow188 from Parameter(objectIn) to Add(x).object
			fUML_Tests_TestClassAttributeWriter_ObjectFlow188->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeWriter_ObjectFlow188);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow188->setName("ObjectFlow188");
			fUML_Tests_TestClassAttributeWriter_ObjectFlow188->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeWriter_ObjectFlow188->setSource(fUML_Tests_TestClassAttributeWriter_Parameter_objectIn);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow188->setTarget(fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object);
		fUML_Tests_TestClassAttributeWriter->addEdge(fUML_Tests_TestClassAttributeWriter_ObjectFlow188);
			// ObjectFlow ObjectFlow190 from Value(*).result to Add(y).insertAt
			fUML_Tests_TestClassAttributeWriter_ObjectFlow190->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeWriter_ObjectFlow190);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow190->setName("ObjectFlow190");
			fUML_Tests_TestClassAttributeWriter_ObjectFlow190->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeWriter_ObjectFlow190->setSource(fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow190->setTarget(fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt);
		fUML_Tests_TestClassAttributeWriter->addEdge(fUML_Tests_TestClassAttributeWriter_ObjectFlow190);
			// ObjectFlow ObjectFlow202 from Add(y).result to Parameter(objectOut)
			fUML_Tests_TestClassAttributeWriter_ObjectFlow202->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeWriter_ObjectFlow202);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow202->setName("ObjectFlow202");
			fUML_Tests_TestClassAttributeWriter_ObjectFlow202->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeWriter_ObjectFlow202->setSource(fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow202->setTarget(fUML_Tests_TestClassAttributeWriter_Parameter_objectOut);
		fUML_Tests_TestClassAttributeWriter->addEdge(fUML_Tests_TestClassAttributeWriter_ObjectFlow202);
	fUML_Tests->addPackagedElement(fUML_Tests_TestClassAttributeWriter);
		// Class TestComposite
		fUML_Tests_TestComposite->setThisClass_Ptr(fUML_Tests_TestComposite);
		fUML_Tests_TestComposite->setName("TestComposite");
		fUML_Tests_TestComposite->setVisibility(VisibilityKind::public_);
		
			// Property c1
			fUML_Tests_TestComposite_c1->setThisElementPtr(fUML_Tests_TestComposite_c1);
			fUML_Tests_TestComposite_c1->setName("c1");
			fUML_Tests_TestComposite_c1->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestComposite_c1->setType(fUML_Tests_TestClass);
			fUML_Tests_TestComposite_c1->setAggregation(AggregationKind::composite);
		fUML_Tests_TestComposite->addOwnedAttribute(fUML_Tests_TestComposite_c1);
	fUML_Tests->addPackagedElement(fUML_Tests_TestComposite);
		// Class Specific
		fUML_Tests_Specific->setThisClass_Ptr(fUML_Tests_Specific);
		fUML_Tests_Specific->setName("Specific");
		fUML_Tests_Specific->setVisibility(VisibilityKind::public_);
		
			// Generalization to General
			fUML_Tests_Specific_Generalization209->setThisElementPtr(fUML_Tests_Specific_Generalization209);
			fUML_Tests_Specific_Generalization209->setGeneral(fUML_Tests_General);
		fUML_Tests_Specific->addGeneralization(fUML_Tests_Specific_Generalization209);
			// Property x
			fUML_Tests_Specific_x->setThisElementPtr(fUML_Tests_Specific_x);
			fUML_Tests_Specific_x->setName("x");
			fUML_Tests_Specific_x->setVisibility(VisibilityKind::public_);
		fUML_Tests_Specific->addOwnedAttribute(fUML_Tests_Specific_x);
	fUML_Tests->addPackagedElement(fUML_Tests_Specific);
		// Activity TestIntegerComparisonFunctions
		fUML_Tests_TestIntegerComparisonFunctions->setThisActivityPtr(fUML_Tests_TestIntegerComparisonFunctions);
		fUML_Tests_TestIntegerComparisonFunctions->setName("TestIntegerComparisonFunctions");
		fUML_Tests_TestIntegerComparisonFunctions->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestIntegerComparisonFunctions->isReentrant = false;
			// Parameter LTResult
			fUML_Tests_TestIntegerComparisonFunctions_LTResult->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_LTResult);
			fUML_Tests_TestIntegerComparisonFunctions_LTResult->setName("LTResult");
			fUML_Tests_TestIntegerComparisonFunctions_LTResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_LTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_LTResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerComparisonFunctions->addOwnedParameter(fUML_Tests_TestIntegerComparisonFunctions_LTResult);
			// Parameter LEResult
			fUML_Tests_TestIntegerComparisonFunctions_LEResult->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_LEResult);
			fUML_Tests_TestIntegerComparisonFunctions_LEResult->setName("LEResult");
			fUML_Tests_TestIntegerComparisonFunctions_LEResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_LEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_LEResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerComparisonFunctions->addOwnedParameter(fUML_Tests_TestIntegerComparisonFunctions_LEResult);
			// Parameter GTResult
			fUML_Tests_TestIntegerComparisonFunctions_GTResult->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_GTResult);
			fUML_Tests_TestIntegerComparisonFunctions_GTResult->setName("GTResult");
			fUML_Tests_TestIntegerComparisonFunctions_GTResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_GTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_GTResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerComparisonFunctions->addOwnedParameter(fUML_Tests_TestIntegerComparisonFunctions_GTResult);
			// Parameter GEResult
			fUML_Tests_TestIntegerComparisonFunctions_GEResult->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_GEResult);
			fUML_Tests_TestIntegerComparisonFunctions_GEResult->setName("GEResult");
			fUML_Tests_TestIntegerComparisonFunctions_GEResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_GEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_GEResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerComparisonFunctions->addOwnedParameter(fUML_Tests_TestIntegerComparisonFunctions_GEResult);
			// ValueSpecificationAction Value(2)
			fUML_Tests_TestIntegerComparisonFunctions_Value_2->setThisExecutableNodePtr(fUML_Tests_TestIntegerComparisonFunctions_Value_2);
			fUML_Tests_TestIntegerComparisonFunctions_Value_2->setName("Value(2)");
			fUML_Tests_TestIntegerComparisonFunctions_Value_2->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger210
				fUML_Tests_TestIntegerComparisonFunctions_Value_2_LiteralInteger210->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Value_2_LiteralInteger210);
				fUML_Tests_TestIntegerComparisonFunctions_Value_2_LiteralInteger210->setName("LiteralInteger210");
				fUML_Tests_TestIntegerComparisonFunctions_Value_2_LiteralInteger210->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Value_2_LiteralInteger210->setValue(2);
			fUML_Tests_TestIntegerComparisonFunctions_Value_2->setValue(fUML_Tests_TestIntegerComparisonFunctions_Value_2_LiteralInteger210);
				// OutputPin Value(2).result
				fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result);
				fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result->setName("Value(2).result");
				fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerComparisonFunctions_Value_2->setResult(fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Value_2);
			// CallBehaviorAction Call(LE)
			fUML_Tests_TestIntegerComparisonFunctions_Call_LE->setThisExecutableNodePtr(fUML_Tests_TestIntegerComparisonFunctions_Call_LE);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LE->setName("Call(LE)");
			fUML_Tests_TestIntegerComparisonFunctions_Call_LE->setVisibility(VisibilityKind::public_);
				// OutputPin LE.result
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result->setName("LE.result");
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LE->addResult(fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LE->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_lessOrEqual);
				// InputPin LE.x
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x->setName("LE.x");
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LE->addArgument(fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x);
				// InputPin LE.y
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y->setName("LE.y");
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LE->addArgument(fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Call_LE);
			// ForkNode Fork(2)
			fUML_Tests_TestIntegerComparisonFunctions_Fork_2->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Fork_2);
			fUML_Tests_TestIntegerComparisonFunctions_Fork_2->setName("Fork(2)");
			fUML_Tests_TestIntegerComparisonFunctions_Fork_2->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Fork_2);
			// ForkNode Fork(3)
			fUML_Tests_TestIntegerComparisonFunctions_Fork_3->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Fork_3);
			fUML_Tests_TestIntegerComparisonFunctions_Fork_3->setName("Fork(3)");
			fUML_Tests_TestIntegerComparisonFunctions_Fork_3->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Fork_3);
			// ActivityParameterNode Param(GTResult)
			fUML_Tests_TestIntegerComparisonFunctions_Param_GTResult->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Param_GTResult);
			fUML_Tests_TestIntegerComparisonFunctions_Param_GTResult->setName("Param(GTResult)");
			fUML_Tests_TestIntegerComparisonFunctions_Param_GTResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerComparisonFunctions_Param_GTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_Param_GTResult->setParameter(fUML_Tests_TestIntegerComparisonFunctions_GTResult);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Param_GTResult);
			// ActivityParameterNode Param(LTResult)
			fUML_Tests_TestIntegerComparisonFunctions_Param_LTResult->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Param_LTResult);
			fUML_Tests_TestIntegerComparisonFunctions_Param_LTResult->setName("Param(LTResult)");
			fUML_Tests_TestIntegerComparisonFunctions_Param_LTResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerComparisonFunctions_Param_LTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_Param_LTResult->setParameter(fUML_Tests_TestIntegerComparisonFunctions_LTResult);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Param_LTResult);
			// ActivityParameterNode Param(LEResult)
			fUML_Tests_TestIntegerComparisonFunctions_Param_LEResult->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Param_LEResult);
			fUML_Tests_TestIntegerComparisonFunctions_Param_LEResult->setName("Param(LEResult)");
			fUML_Tests_TestIntegerComparisonFunctions_Param_LEResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerComparisonFunctions_Param_LEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_Param_LEResult->setParameter(fUML_Tests_TestIntegerComparisonFunctions_LEResult);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Param_LEResult);
			// CallBehaviorAction Call(LT)
			fUML_Tests_TestIntegerComparisonFunctions_Call_LT->setThisExecutableNodePtr(fUML_Tests_TestIntegerComparisonFunctions_Call_LT);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LT->setName("Call(LT)");
			fUML_Tests_TestIntegerComparisonFunctions_Call_LT->setVisibility(VisibilityKind::public_);
				// OutputPin LT.result
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result->setName("LT.result");
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LT->addResult(fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LT->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_lessThan);
				// InputPin LT.x
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x->setName("LT.x");
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LT->addArgument(fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x);
				// InputPin LT.y
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y->setName("LT.y");
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LT->addArgument(fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Call_LT);
			// ActivityParameterNode Param(GEResult)
			fUML_Tests_TestIntegerComparisonFunctions_Param_GEResult->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Param_GEResult);
			fUML_Tests_TestIntegerComparisonFunctions_Param_GEResult->setName("Param(GEResult)");
			fUML_Tests_TestIntegerComparisonFunctions_Param_GEResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerComparisonFunctions_Param_GEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_Param_GEResult->setParameter(fUML_Tests_TestIntegerComparisonFunctions_GEResult);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Param_GEResult);
			// CallBehaviorAction Call(GT)
			fUML_Tests_TestIntegerComparisonFunctions_Call_GT->setThisExecutableNodePtr(fUML_Tests_TestIntegerComparisonFunctions_Call_GT);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GT->setName("Call(GT)");
			fUML_Tests_TestIntegerComparisonFunctions_Call_GT->setVisibility(VisibilityKind::public_);
				// OutputPin GT.result
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result->setName("GT.result");
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GT->addResult(fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GT->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_greaterOrEqual);
				// InputPin GT.x
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x->setName("GT.x");
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GT->addArgument(fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x);
				// InputPin GT.y
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y->setName("GT.y");
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GT->addArgument(fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Call_GT);
			// CallBehaviorAction Call(GE)
			fUML_Tests_TestIntegerComparisonFunctions_Call_GE->setThisExecutableNodePtr(fUML_Tests_TestIntegerComparisonFunctions_Call_GE);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GE->setName("Call(GE)");
			fUML_Tests_TestIntegerComparisonFunctions_Call_GE->setVisibility(VisibilityKind::public_);
				// OutputPin GE.result
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result->setName("GE.result");
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GE->addResult(fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GE->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_greaterOrEqual);
				// InputPin GE.x
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x->setName("GE.x");
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GE->addArgument(fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x);
				// InputPin GE.y
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y->setName("GE.y");
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GE->addArgument(fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Call_GE);
			// ValueSpecificationAction Value(3)
			fUML_Tests_TestIntegerComparisonFunctions_Value_3->setThisExecutableNodePtr(fUML_Tests_TestIntegerComparisonFunctions_Value_3);
			fUML_Tests_TestIntegerComparisonFunctions_Value_3->setName("Value(3)");
			fUML_Tests_TestIntegerComparisonFunctions_Value_3->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger273
				fUML_Tests_TestIntegerComparisonFunctions_Value_3_LiteralInteger273->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Value_3_LiteralInteger273);
				fUML_Tests_TestIntegerComparisonFunctions_Value_3_LiteralInteger273->setName("LiteralInteger273");
				fUML_Tests_TestIntegerComparisonFunctions_Value_3_LiteralInteger273->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Value_3_LiteralInteger273->setValue(3);
			fUML_Tests_TestIntegerComparisonFunctions_Value_3->setValue(fUML_Tests_TestIntegerComparisonFunctions_Value_3_LiteralInteger273);
				// OutputPin Value(3).result
				fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result);
				fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result->setName("Value(3).result");
				fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerComparisonFunctions_Value_3->setResult(fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Value_3);
			// ControlFlow ControlFlow213 from Call(LT) to Call(LE)
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow213->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ControlFlow213);
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow213->setName("ControlFlow213");
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow213->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow213->setSource(fUML_Tests_TestIntegerComparisonFunctions_Call_LT);
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow213->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_LE);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ControlFlow213);
			// ControlFlow ControlFlow215 from Call(LE) to Call(GT)
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow215->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ControlFlow215);
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow215->setName("ControlFlow215");
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow215->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow215->setSource(fUML_Tests_TestIntegerComparisonFunctions_Call_LE);
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow215->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_GT);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ControlFlow215);
			// ObjectFlow ObjectFlow237 from Fork(3) to LE.x
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow237->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow237);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow237->setName("ObjectFlow237");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow237->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow237->setSource(fUML_Tests_TestIntegerComparisonFunctions_Fork_3);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow237->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow237);
			// ObjectFlow ObjectFlow217 from Fork(3) to GT.x
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow217->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow217);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow217->setName("ObjectFlow217");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow217->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow217->setSource(fUML_Tests_TestIntegerComparisonFunctions_Fork_3);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow217->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow217);
			// ObjectFlow ObjectFlow219 from GT.result to Param(GTResult)
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow219->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow219);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow219->setName("ObjectFlow219");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow219->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow219->setSource(fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow219->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Param_GTResult);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow219);
			// ObjectFlow ObjectFlow239 from Fork(3) to LT.x
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow239->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow239);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow239->setName("ObjectFlow239");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow239->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow239->setSource(fUML_Tests_TestIntegerComparisonFunctions_Fork_3);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow239->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow239);
			// ObjectFlow ObjectFlow241 from LE.result to Param(LEResult)
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow241->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow241);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow241->setName("ObjectFlow241");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow241->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow241->setSource(fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow241->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Param_LEResult);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow241);
			// ObjectFlow ObjectFlow221 from LT.result to Param(LTResult)
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow221->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow221);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow221->setName("ObjectFlow221");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow221->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow221->setSource(fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow221->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Param_LTResult);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow221);
			// ObjectFlow ObjectFlow243 from Value(3).result to Fork(3)
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow243->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow243);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow243->setName("ObjectFlow243");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow243->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow243->setSource(fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow243->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Fork_3);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow243);
			// ObjectFlow ObjectFlow223 from GE.result to Param(GEResult)
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow223->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow223);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow223->setName("ObjectFlow223");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow223->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow223->setSource(fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow223->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Param_GEResult);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow223);
			// ObjectFlow ObjectFlow245 from Fork(2) to LT.y
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow245->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow245);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow245->setName("ObjectFlow245");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow245->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow245->setSource(fUML_Tests_TestIntegerComparisonFunctions_Fork_2);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow245->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow245);
			// ObjectFlow ObjectFlow247 from Fork(2) to LE.y
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow247->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow247);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow247->setName("ObjectFlow247");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow247->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow247->setSource(fUML_Tests_TestIntegerComparisonFunctions_Fork_2);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow247->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow247);
			// ObjectFlow ObjectFlow249 from Value(2).result to Fork(2)
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow249->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow249);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow249->setName("ObjectFlow249");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow249->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow249->setSource(fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow249->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Fork_2);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow249);
			// ControlFlow ControlFlow225 from Call(GT) to Call(GE)
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow225->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ControlFlow225);
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow225->setName("ControlFlow225");
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow225->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow225->setSource(fUML_Tests_TestIntegerComparisonFunctions_Call_GT);
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow225->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_GE);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ControlFlow225);
			// ObjectFlow ObjectFlow227 from Fork(2) to GT.y
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow227->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow227);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow227->setName("ObjectFlow227");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow227->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow227->setSource(fUML_Tests_TestIntegerComparisonFunctions_Fork_2);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow227->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow227);
			// ObjectFlow ObjectFlow229 from Fork(3) to GE.x
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow229->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow229);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow229->setName("ObjectFlow229");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow229->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow229->setSource(fUML_Tests_TestIntegerComparisonFunctions_Fork_3);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow229->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow229);
			// ObjectFlow ObjectFlow269 from Fork(2) to GE.y
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow269->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow269);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow269->setName("ObjectFlow269");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow269->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow269->setSource(fUML_Tests_TestIntegerComparisonFunctions_Fork_2);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow269->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow269);
	fUML_Tests->addPackagedElement(fUML_Tests_TestIntegerComparisonFunctions);
		// Activity TestClassAttributeValueRemover
		fUML_Tests_TestClassAttributeValueRemover->setThisActivityPtr(fUML_Tests_TestClassAttributeValueRemover);
		fUML_Tests_TestClassAttributeValueRemover->setName("TestClassAttributeValueRemover");
		fUML_Tests_TestClassAttributeValueRemover->setVisibility(VisibilityKind::public_);
			// Parameter objectIn
			fUML_Tests_TestClassAttributeValueRemover_objectIn->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_objectIn);
			fUML_Tests_TestClassAttributeValueRemover_objectIn->setName("objectIn");
			fUML_Tests_TestClassAttributeValueRemover_objectIn->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_objectIn->setType(fUML_Tests_TestClass);
		fUML_Tests_TestClassAttributeValueRemover->addOwnedParameter(fUML_Tests_TestClassAttributeValueRemover_objectIn);
			// Parameter objectOut
			fUML_Tests_TestClassAttributeValueRemover_objectOut->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_objectOut);
			fUML_Tests_TestClassAttributeValueRemover_objectOut->setName("objectOut");
			fUML_Tests_TestClassAttributeValueRemover_objectOut->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_objectOut->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeValueRemover_objectOut->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassAttributeValueRemover->addOwnedParameter(fUML_Tests_TestClassAttributeValueRemover_objectOut);
			// ForkNode ForkNode338
			fUML_Tests_TestClassAttributeValueRemover_ForkNode338->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_ForkNode338);
			fUML_Tests_TestClassAttributeValueRemover_ForkNode338->setName("ForkNode338");
			fUML_Tests_TestClassAttributeValueRemover_ForkNode338->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_ForkNode338);
			// RemoveStructuralFeatureValueAction RemoveAll(y)
			fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y->setThisExecutableNodePtr(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y);
			fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y->setName("RemoveAll(y)");
			fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y->setStructuralFeature(fUML_Tests_TestClass_y);
				// InputPin object
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object);
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object->setName("object");
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y->setObject(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object);
				// InputPin value
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value);
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value->setName("value");
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y->setValue(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value);
				// OutputPin result
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_result->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_result);
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_result->setName("result");
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y->setResult(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_result);
			fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y->setIsRemoveDuplicates(true);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y);
			// AddStructuralFeatureValueAction Add(y)-4
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus4->setThisExecutableNodePtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus4->setName("Add(y)-4");
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus4->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus4->setStructuralFeature(fUML_Tests_TestClass_y);
				// InputPin object
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object->setName("object");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus4->setObject(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object);
				// InputPin value
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value->setName("value");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus4->setValue(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value);
				// OutputPin result
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result->setName("result");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus4->setResult(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4);
			// RemoveStructuralFeatureValueAction RemoveOne(y)
			fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y->setThisExecutableNodePtr(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y);
			fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y->setName("RemoveOne(y)");
			fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y->setStructuralFeature(fUML_Tests_TestClass_y);
				// InputPin object
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object);
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object->setName("object");
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y->setObject(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object);
				// InputPin value
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value);
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value->setName("value");
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y->setValue(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value);
				// OutputPin result
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result);
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result->setName("result");
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y->setResult(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y);
			// ValueSpecificationAction Value(1)
			fUML_Tests_TestClassAttributeValueRemover_Value_1->setThisExecutableNodePtr(fUML_Tests_TestClassAttributeValueRemover_Value_1);
			fUML_Tests_TestClassAttributeValueRemover_Value_1->setName("Value(1)");
			fUML_Tests_TestClassAttributeValueRemover_Value_1->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger327
				fUML_Tests_TestClassAttributeValueRemover_Value_1_LiteralInteger327->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Value_1_LiteralInteger327);
				fUML_Tests_TestClassAttributeValueRemover_Value_1_LiteralInteger327->setName("LiteralInteger327");
				fUML_Tests_TestClassAttributeValueRemover_Value_1_LiteralInteger327->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Value_1_LiteralInteger327->setValue(1);
			fUML_Tests_TestClassAttributeValueRemover_Value_1->setValue(fUML_Tests_TestClassAttributeValueRemover_Value_1_LiteralInteger327);
				// OutputPin result
				fUML_Tests_TestClassAttributeValueRemover_Value_1_result->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Value_1_result);
				fUML_Tests_TestClassAttributeValueRemover_Value_1_result->setName("result");
				fUML_Tests_TestClassAttributeValueRemover_Value_1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Value_1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassAttributeValueRemover_Value_1->setResult(fUML_Tests_TestClassAttributeValueRemover_Value_1_result);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_Value_1);
			// AddStructuralFeatureValueAction Add(y)-1
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus1->setThisExecutableNodePtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus1->setName("Add(y)-1");
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus1->setStructuralFeature(fUML_Tests_TestClass_y);
				// InputPin object
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object->setName("object");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus1->setObject(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object);
				// InputPin value
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value->setName("value");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus1->setValue(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value);
				// OutputPin result
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result->setName("result");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus1->setResult(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1);
			// ActivityParameterNode objectInNode
			fUML_Tests_TestClassAttributeValueRemover_objectInNode->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_objectInNode);
			fUML_Tests_TestClassAttributeValueRemover_objectInNode->setName("objectInNode");
			fUML_Tests_TestClassAttributeValueRemover_objectInNode->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_objectInNode->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeValueRemover_objectInNode->setParameter(fUML_Tests_TestClassAttributeValueRemover_objectIn);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_objectInNode);
			// ActivityParameterNode objectOutNode
			fUML_Tests_TestClassAttributeValueRemover_objectOutNode->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_objectOutNode);
			fUML_Tests_TestClassAttributeValueRemover_objectOutNode->setName("objectOutNode");
			fUML_Tests_TestClassAttributeValueRemover_objectOutNode->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_objectOutNode->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeValueRemover_objectOutNode->setParameter(fUML_Tests_TestClassAttributeValueRemover_objectOut);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_objectOutNode);
			// ValueSpecificationAction Value(2)
			fUML_Tests_TestClassAttributeValueRemover_Value_2->setThisExecutableNodePtr(fUML_Tests_TestClassAttributeValueRemover_Value_2);
			fUML_Tests_TestClassAttributeValueRemover_Value_2->setName("Value(2)");
			fUML_Tests_TestClassAttributeValueRemover_Value_2->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger310
				fUML_Tests_TestClassAttributeValueRemover_Value_2_LiteralInteger310->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Value_2_LiteralInteger310);
				fUML_Tests_TestClassAttributeValueRemover_Value_2_LiteralInteger310->setName("LiteralInteger310");
				fUML_Tests_TestClassAttributeValueRemover_Value_2_LiteralInteger310->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Value_2_LiteralInteger310->setValue(2);
			fUML_Tests_TestClassAttributeValueRemover_Value_2->setValue(fUML_Tests_TestClassAttributeValueRemover_Value_2_LiteralInteger310);
				// OutputPin result
				fUML_Tests_TestClassAttributeValueRemover_Value_2_result->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Value_2_result);
				fUML_Tests_TestClassAttributeValueRemover_Value_2_result->setName("result");
				fUML_Tests_TestClassAttributeValueRemover_Value_2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Value_2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassAttributeValueRemover_Value_2->setResult(fUML_Tests_TestClassAttributeValueRemover_Value_2_result);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_Value_2);
			// AddStructuralFeatureValueAction Add(y)-3
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus3->setThisExecutableNodePtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus3->setName("Add(y)-3");
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus3->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus3->setStructuralFeature(fUML_Tests_TestClass_y);
				// InputPin object
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object->setName("object");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus3->setObject(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object);
				// InputPin value
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value->setName("value");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus3->setValue(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value);
				// OutputPin result
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result->setName("result");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus3->setResult(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3);
			// AddStructuralFeatureValueAction Add(y)-2
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus2->setThisExecutableNodePtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus2->setName("Add(y)-2");
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus2->setStructuralFeature(fUML_Tests_TestClass_y);
				// InputPin object
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object->setName("object");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus2->setObject(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object);
				// InputPin value
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value->setName("value");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus2->setValue(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value);
				// OutputPin result
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result->setName("result");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus2->setResult(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2);
			// ObjectFlow ObjectFlow317 from result to object
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow317->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow317);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow317->setName("ObjectFlow317");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow317->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow317->setSource(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow317->setTarget(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow317);
			// ObjectFlow ObjectFlow274 from result to object
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow274->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow274);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow274->setName("ObjectFlow274");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow274->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow274->setSource(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow274->setTarget(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow274);
			// ObjectFlow ObjectFlow319 from ForkNode338 to value
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow319->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow319);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow319->setName("ObjectFlow319");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow319->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow319->setSource(fUML_Tests_TestClassAttributeValueRemover_ForkNode338);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow319->setTarget(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow319);
			// ObjectFlow ObjectFlow276 from result to objectOutNode
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow276->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow276);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow276->setName("ObjectFlow276");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow276->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow276->setSource(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_result);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow276->setTarget(fUML_Tests_TestClassAttributeValueRemover_objectOutNode);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow276);
			// ObjectFlow ObjectFlow278 from objectInNode to object
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow278->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow278);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow278->setName("ObjectFlow278");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow278->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow278->setSource(fUML_Tests_TestClassAttributeValueRemover_objectInNode);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow278->setTarget(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow278);
			// ObjectFlow ObjectFlow336 from ForkNode338 to value
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow336->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow336);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow336->setName("ObjectFlow336");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow336->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow336->setSource(fUML_Tests_TestClassAttributeValueRemover_ForkNode338);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow336->setTarget(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow336);
			// ObjectFlow ObjectFlow280 from ForkNode338 to value
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow280->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow280);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow280->setName("ObjectFlow280");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow280->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow280->setSource(fUML_Tests_TestClassAttributeValueRemover_ForkNode338);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow280->setTarget(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow280);
			// ObjectFlow ObjectFlow282 from result to value
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow282->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow282);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow282->setName("ObjectFlow282");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow282->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow282->setSource(fUML_Tests_TestClassAttributeValueRemover_Value_2_result);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow282->setTarget(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow282);
			// ObjectFlow ObjectFlow294 from result to object
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow294->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow294);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow294->setName("ObjectFlow294");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow294->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow294->setSource(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow294->setTarget(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow294);
			// ObjectFlow ObjectFlow296 from ForkNode338 to value
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow296->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow296);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow296->setName("ObjectFlow296");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow296->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow296->setSource(fUML_Tests_TestClassAttributeValueRemover_ForkNode338);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow296->setTarget(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow296);
			// ObjectFlow ObjectFlow304 from result to ForkNode338
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow304->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow304);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow304->setName("ObjectFlow304");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow304->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow304->setSource(fUML_Tests_TestClassAttributeValueRemover_Value_1_result);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow304->setTarget(fUML_Tests_TestClassAttributeValueRemover_ForkNode338);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow304);
			// ObjectFlow ObjectFlow343 from result to object
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow343->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow343);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow343->setName("ObjectFlow343");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow343->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow343->setSource(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow343->setTarget(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow343);
			// ObjectFlow ObjectFlow345 from result to object
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow345->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow345);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow345->setName("ObjectFlow345");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow345->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow345->setSource(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow345->setTarget(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow345);
			// ObjectFlow ObjectFlow306 from ForkNode338 to value
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow306->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow306);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow306->setName("ObjectFlow306");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow306->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow306->setSource(fUML_Tests_TestClassAttributeValueRemover_ForkNode338);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow306->setTarget(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow306);
	fUML_Tests->addPackagedElement(fUML_Tests_TestClassAttributeValueRemover);
		// Activity TestAssociationEndWriterReader
		fUML_Tests_TestAssociationEndWriterReader->setThisActivityPtr(fUML_Tests_TestAssociationEndWriterReader);
		fUML_Tests_TestAssociationEndWriterReader->setName("TestAssociationEndWriterReader");
		fUML_Tests_TestAssociationEndWriterReader->setVisibility(VisibilityKind::public_);
			// Parameter object1
			fUML_Tests_TestAssociationEndWriterReader_object1->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_object1);
			fUML_Tests_TestAssociationEndWriterReader_object1->setName("object1");
			fUML_Tests_TestAssociationEndWriterReader_object1->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_object1->setType(fUML_Tests_TestClass);
		fUML_Tests_TestAssociationEndWriterReader->addOwnedParameter(fUML_Tests_TestAssociationEndWriterReader_object1);
			// Parameter object2
			fUML_Tests_TestAssociationEndWriterReader_object2->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_object2);
			fUML_Tests_TestAssociationEndWriterReader_object2->setName("object2");
			fUML_Tests_TestAssociationEndWriterReader_object2->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_object2->setType(fUML_Tests_TestClass);
		fUML_Tests_TestAssociationEndWriterReader->addOwnedParameter(fUML_Tests_TestAssociationEndWriterReader_object2);
			// Parameter object3
			fUML_Tests_TestAssociationEndWriterReader_object3->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_object3);
			fUML_Tests_TestAssociationEndWriterReader_object3->setName("object3");
			fUML_Tests_TestAssociationEndWriterReader_object3->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_object3->setType(fUML_Tests_TestClass);
		fUML_Tests_TestAssociationEndWriterReader->addOwnedParameter(fUML_Tests_TestAssociationEndWriterReader_object3);
			// Parameter output1
			fUML_Tests_TestAssociationEndWriterReader_output1->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_output1);
			fUML_Tests_TestAssociationEndWriterReader_output1->setName("output1");
			fUML_Tests_TestAssociationEndWriterReader_output1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_output1->setUpper(-1);
			fUML_Tests_TestAssociationEndWriterReader_output1->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_output1->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestAssociationEndWriterReader->addOwnedParameter(fUML_Tests_TestAssociationEndWriterReader_output1);
			// Parameter output2
			fUML_Tests_TestAssociationEndWriterReader_output2->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_output2);
			fUML_Tests_TestAssociationEndWriterReader_output2->setName("output2");
			fUML_Tests_TestAssociationEndWriterReader_output2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_output2->setUpper(-1);
			fUML_Tests_TestAssociationEndWriterReader_output2->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_output2->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestAssociationEndWriterReader->addOwnedParameter(fUML_Tests_TestAssociationEndWriterReader_output2);
			// Parameter expected
			fUML_Tests_TestAssociationEndWriterReader_expected->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_expected);
			fUML_Tests_TestAssociationEndWriterReader_expected->setName("expected");
			fUML_Tests_TestAssociationEndWriterReader_expected->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_expected->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_expected->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestAssociationEndWriterReader->addOwnedParameter(fUML_Tests_TestAssociationEndWriterReader_expected);
			// ReadStructuralFeatureAction Read(end2)-1
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1->setThisExecutableNodePtr(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1);
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1->setName("Read(end2)-1");
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1->setStructuralFeature(fUML_Tests_TestAssociation_end2);
				// InputPin object
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object->setName("object");
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1->setObject(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object);
				// OutputPin result
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result->setName("result");
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result->setType(fUML_Tests_TestClass);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result->setUpper(-1);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result->setLower(0);
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1->setResult(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1);
			// AddStructuralFeatureValueAction Add(end2)-3
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3->setThisExecutableNodePtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3->setName("Add(end2)-3");
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3->setStructuralFeature(fUML_Tests_TestAssociation_end2);
				// InputPin object
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object->setName("object");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3->setObject(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object);
				// InputPin value
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value->setName("value");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3->setValue(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value);
				// OutputPin result
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result->setName("result");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3->setResult(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result);
				// InputPin insertAt
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt->setName("insertAt");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3->setInsertAt(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3);
			// ForkNode ForkNode404
			fUML_Tests_TestAssociationEndWriterReader_ForkNode404->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_ForkNode404);
			fUML_Tests_TestAssociationEndWriterReader_ForkNode404->setName("ForkNode404");
			fUML_Tests_TestAssociationEndWriterReader_ForkNode404->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_ForkNode404);
			// ActivityParameterNode object1Node
			fUML_Tests_TestAssociationEndWriterReader_object1Node->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_object1Node);
			fUML_Tests_TestAssociationEndWriterReader_object1Node->setName("object1Node");
			fUML_Tests_TestAssociationEndWriterReader_object1Node->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_object1Node->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_object1Node->setParameter(fUML_Tests_TestAssociationEndWriterReader_object1);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_object1Node);
			// RemoveStructuralFeatureValueAction RemoveAll(end2)
			fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2->setThisExecutableNodePtr(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2->setName("RemoveAll(end2)");
			fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2->setStructuralFeature(fUML_Tests_TestAssociation_end2);
				// InputPin object
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object->setName("object");
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2->setObject(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object);
				// InputPin value
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value->setName("value");
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2->setValue(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value);
				// OutputPin result
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result->setName("result");
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2->setResult(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2->setIsRemoveDuplicates(true);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2);
			// ReadStructuralFeatureAction Read(end2)-2
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2->setThisExecutableNodePtr(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2);
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2->setName("Read(end2)-2");
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2->setStructuralFeature(fUML_Tests_TestAssociation_end2);
				// InputPin object
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object->setName("object");
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2->setObject(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object);
				// OutputPin result
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result->setName("result");
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result->setType(fUML_Tests_TestClass);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result->setUpper(-1);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result->setLower(0);
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2->setResult(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2);
			// ValueSpecificationAction Value(*)
			fUML_Tests_TestAssociationEndWriterReader_Value_times->setThisExecutableNodePtr(fUML_Tests_TestAssociationEndWriterReader_Value_times);
			fUML_Tests_TestAssociationEndWriterReader_Value_times->setName("Value(*)");
			fUML_Tests_TestAssociationEndWriterReader_Value_times->setVisibility(VisibilityKind::public_);
				// LiteralUnlimitedNatural LiteralUnlimitedNatural371
				fUML_Tests_TestAssociationEndWriterReader_Value_times_LiteralUnlimitedNatural371->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Value_times_LiteralUnlimitedNatural371);
				fUML_Tests_TestAssociationEndWriterReader_Value_times_LiteralUnlimitedNatural371->setName("LiteralUnlimitedNatural371");
				fUML_Tests_TestAssociationEndWriterReader_Value_times_LiteralUnlimitedNatural371->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Value_times_LiteralUnlimitedNatural371->setValue(-1);
			fUML_Tests_TestAssociationEndWriterReader_Value_times->setValue(fUML_Tests_TestAssociationEndWriterReader_Value_times_LiteralUnlimitedNatural371);
				// OutputPin result
				fUML_Tests_TestAssociationEndWriterReader_Value_times_result->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Value_times_result);
				fUML_Tests_TestAssociationEndWriterReader_Value_times_result->setName("result");
				fUML_Tests_TestAssociationEndWriterReader_Value_times_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Value_times->setResult(fUML_Tests_TestAssociationEndWriterReader_Value_times_result);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_Value_times);
			// RemoveStructuralFeatureValueAction RemoveAt(end2)
			fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2->setThisExecutableNodePtr(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2->setName("RemoveAt(end2)");
			fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2->setStructuralFeature(fUML_Tests_TestAssociation_end2);
				// InputPin object
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object->setName("object");
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2->setObject(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object);
				// OutputPin result
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result->setName("result");
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2->setResult(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result);
				// InputPin removeAt
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt->setName("removeAt");
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2->setRemoveAt(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2);
			// AddStructuralFeatureValueAction Add(end2)-2
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2->setThisExecutableNodePtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2->setName("Add(end2)-2");
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2->setStructuralFeature(fUML_Tests_TestAssociation_end2);
				// InputPin object
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object->setName("object");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2->setObject(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object);
				// InputPin value
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value->setName("value");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2->setValue(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value);
				// OutputPin result
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result->setName("result");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2->setResult(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result);
				// InputPin insertAt
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt->setName("insertAt");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2->setInsertAt(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2);
			// ActivityParameterNode output1Node
			fUML_Tests_TestAssociationEndWriterReader_output1Node->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_output1Node);
			fUML_Tests_TestAssociationEndWriterReader_output1Node->setName("output1Node");
			fUML_Tests_TestAssociationEndWriterReader_output1Node->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_output1Node->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_output1Node->setParameter(fUML_Tests_TestAssociationEndWriterReader_output1);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_output1Node);
			// ForkNode ForkNode378
			fUML_Tests_TestAssociationEndWriterReader_ForkNode378->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_ForkNode378);
			fUML_Tests_TestAssociationEndWriterReader_ForkNode378->setName("ForkNode378");
			fUML_Tests_TestAssociationEndWriterReader_ForkNode378->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_ForkNode378);
			// ActivityParameterNode object3Node
			fUML_Tests_TestAssociationEndWriterReader_object3Node->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_object3Node);
			fUML_Tests_TestAssociationEndWriterReader_object3Node->setName("object3Node");
			fUML_Tests_TestAssociationEndWriterReader_object3Node->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_object3Node->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_object3Node->setParameter(fUML_Tests_TestAssociationEndWriterReader_object3);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_object3Node);
			// ActivityParameterNode output2Node
			fUML_Tests_TestAssociationEndWriterReader_output2Node->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_output2Node);
			fUML_Tests_TestAssociationEndWriterReader_output2Node->setName("output2Node");
			fUML_Tests_TestAssociationEndWriterReader_output2Node->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_output2Node->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_output2Node->setParameter(fUML_Tests_TestAssociationEndWriterReader_output2);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_output2Node);
			// ValueSpecificationAction Value(2)
			fUML_Tests_TestAssociationEndWriterReader_Value_2->setThisExecutableNodePtr(fUML_Tests_TestAssociationEndWriterReader_Value_2);
			fUML_Tests_TestAssociationEndWriterReader_Value_2->setName("Value(2)");
			fUML_Tests_TestAssociationEndWriterReader_Value_2->setVisibility(VisibilityKind::public_);
				// LiteralUnlimitedNatural LiteralUnlimitedNatural385
				fUML_Tests_TestAssociationEndWriterReader_Value_2_LiteralUnlimitedNatural385->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Value_2_LiteralUnlimitedNatural385);
				fUML_Tests_TestAssociationEndWriterReader_Value_2_LiteralUnlimitedNatural385->setName("LiteralUnlimitedNatural385");
				fUML_Tests_TestAssociationEndWriterReader_Value_2_LiteralUnlimitedNatural385->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Value_2_LiteralUnlimitedNatural385->setValue(2);
			fUML_Tests_TestAssociationEndWriterReader_Value_2->setValue(fUML_Tests_TestAssociationEndWriterReader_Value_2_LiteralUnlimitedNatural385);
				// OutputPin result
				fUML_Tests_TestAssociationEndWriterReader_Value_2_result->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Value_2_result);
				fUML_Tests_TestAssociationEndWriterReader_Value_2_result->setName("result");
				fUML_Tests_TestAssociationEndWriterReader_Value_2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Value_2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestAssociationEndWriterReader_Value_2->setResult(fUML_Tests_TestAssociationEndWriterReader_Value_2_result);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_Value_2);
			// AddStructuralFeatureValueAction Add(end2)-1
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1->setThisExecutableNodePtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1->setName("Add(end2)-1");
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1->setStructuralFeature(fUML_Tests_TestAssociation_end2);
				// InputPin object
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object->setName("object");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1->setObject(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object);
				// InputPin value
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value->setName("value");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1->setValue(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value);
				// OutputPin result
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result->setName("result");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1->setResult(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result);
				// InputPin insertAt
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt->setName("insertAt");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1->setInsertAt(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1);
			// ForkNode ForkNode447
			fUML_Tests_TestAssociationEndWriterReader_ForkNode447->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_ForkNode447);
			fUML_Tests_TestAssociationEndWriterReader_ForkNode447->setName("ForkNode447");
			fUML_Tests_TestAssociationEndWriterReader_ForkNode447->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_ForkNode447);
			// ActivityParameterNode object2Node
			fUML_Tests_TestAssociationEndWriterReader_object2Node->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_object2Node);
			fUML_Tests_TestAssociationEndWriterReader_object2Node->setName("object2Node");
			fUML_Tests_TestAssociationEndWriterReader_object2Node->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_object2Node->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_object2Node->setParameter(fUML_Tests_TestAssociationEndWriterReader_object2);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_object2Node);
			// ForkNode ForkNode448
			fUML_Tests_TestAssociationEndWriterReader_ForkNode448->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_ForkNode448);
			fUML_Tests_TestAssociationEndWriterReader_ForkNode448->setName("ForkNode448");
			fUML_Tests_TestAssociationEndWriterReader_ForkNode448->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_ForkNode448);
			// ActivityParameterNode expectedNode
			fUML_Tests_TestAssociationEndWriterReader_expectedNode->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_expectedNode);
			fUML_Tests_TestAssociationEndWriterReader_expectedNode->setName("expectedNode");
			fUML_Tests_TestAssociationEndWriterReader_expectedNode->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_expectedNode->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_expectedNode->setParameter(fUML_Tests_TestAssociationEndWriterReader_expected);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_expectedNode);
			// ObjectFlow ObjectFlow347 from result to ForkNode448
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow347->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow347);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow347->setName("ObjectFlow347");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow347->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow347->setSource(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow347->setTarget(fUML_Tests_TestAssociationEndWriterReader_ForkNode448);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow347);
			// ObjectFlow ObjectFlow400 from ForkNode447 to insertAt
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow400->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow400);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow400->setName("ObjectFlow400");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow400->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow400->setSource(fUML_Tests_TestAssociationEndWriterReader_ForkNode447);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow400->setTarget(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow400);
			// ObjectFlow ObjectFlow402 from ForkNode404 to value
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow402->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow402);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow402->setName("ObjectFlow402");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow402->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow402->setSource(fUML_Tests_TestAssociationEndWriterReader_ForkNode404);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow402->setTarget(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow402);
			// ObjectFlow ObjectFlow353 from ForkNode448 to object
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow353->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow353);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow353->setName("ObjectFlow353");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow353->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow353->setSource(fUML_Tests_TestAssociationEndWriterReader_ForkNode448);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow353->setTarget(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow353);
			// ObjectFlow ObjectFlow349 from result to output2Node
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow349->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow349);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow349->setName("ObjectFlow349");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow349->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow349->setSource(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow349->setTarget(fUML_Tests_TestAssociationEndWriterReader_output2Node);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow349);
			// ObjectFlow ObjectFlow351 from result to ForkNode447
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow351->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow351);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow351->setName("ObjectFlow351");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow351->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow351->setSource(fUML_Tests_TestAssociationEndWriterReader_Value_times_result);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow351->setTarget(fUML_Tests_TestAssociationEndWriterReader_ForkNode447);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow351);
			// ObjectFlow ObjectFlow405 from result to object
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow405->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow405);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow405->setName("ObjectFlow405");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow405->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow405->setSource(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow405->setTarget(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow405);
			// ObjectFlow ObjectFlow363 from result to object
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow363->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow363);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow363->setName("ObjectFlow363");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow363->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow363->setSource(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow363->setTarget(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow363);
			// ObjectFlow ObjectFlow365 from ForkNode378 to value
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow365->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow365);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow365->setName("ObjectFlow365");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow365->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow365->setSource(fUML_Tests_TestAssociationEndWriterReader_ForkNode378);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow365->setTarget(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow365);
			// ObjectFlow ObjectFlow413 from object3Node to ForkNode404
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow413->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow413);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow413->setName("ObjectFlow413");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow413->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow413->setSource(fUML_Tests_TestAssociationEndWriterReader_object3Node);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow413->setTarget(fUML_Tests_TestAssociationEndWriterReader_ForkNode404);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow413);
			// ObjectFlow ObjectFlow421 from ForkNode378 to value
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow421->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow421);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow421->setName("ObjectFlow421");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow421->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow421->setSource(fUML_Tests_TestAssociationEndWriterReader_ForkNode378);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow421->setTarget(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow421);
			// ObjectFlow ObjectFlow423 from result to removeAt
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow423->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow423);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow423->setName("ObjectFlow423");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow423->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow423->setSource(fUML_Tests_TestAssociationEndWriterReader_Value_2_result);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow423->setTarget(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow423);
			// ObjectFlow ObjectFlow372 from object1Node to object
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow372->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow372);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow372->setName("ObjectFlow372");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow372->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow372->setSource(fUML_Tests_TestAssociationEndWriterReader_object1Node);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow372->setTarget(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow372);
			// ControlFlow ControlFlow433 from Read(end2)-1 to RemoveAt(end2)
			fUML_Tests_TestAssociationEndWriterReader_ControlFlow433->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ControlFlow433);
			fUML_Tests_TestAssociationEndWriterReader_ControlFlow433->setName("ControlFlow433");
			fUML_Tests_TestAssociationEndWriterReader_ControlFlow433->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ControlFlow433->setSource(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1);
			fUML_Tests_TestAssociationEndWriterReader_ControlFlow433->setTarget(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ControlFlow433);
			// ObjectFlow ObjectFlow374 from result to output1Node
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow374->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow374);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow374->setName("ObjectFlow374");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow374->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow374->setSource(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow374->setTarget(fUML_Tests_TestAssociationEndWriterReader_output1Node);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow374);
			// ObjectFlow ObjectFlow376 from ForkNode378 to expectedNode
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow376->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow376);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow376->setName("ObjectFlow376");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow376->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow376->setSource(fUML_Tests_TestAssociationEndWriterReader_ForkNode378);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow376->setTarget(fUML_Tests_TestAssociationEndWriterReader_expectedNode);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow376);
			// ObjectFlow ObjectFlow381 from object2Node to ForkNode378
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow381->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow381);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow381->setName("ObjectFlow381");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow381->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow381->setSource(fUML_Tests_TestAssociationEndWriterReader_object2Node);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow381->setTarget(fUML_Tests_TestAssociationEndWriterReader_ForkNode378);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow381);
			// ObjectFlow ObjectFlow437 from result to object
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow437->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow437);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow437->setName("ObjectFlow437");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow437->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow437->setSource(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow437->setTarget(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow437);
			// ObjectFlow ObjectFlow388 from ForkNode404 to value
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow388->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow388);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow388->setName("ObjectFlow388");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow388->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow388->setSource(fUML_Tests_TestAssociationEndWriterReader_ForkNode404);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow388->setTarget(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow388);
			// ObjectFlow ObjectFlow390 from ForkNode447 to insertAt
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow390->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow390);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow390->setName("ObjectFlow390");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow390->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow390->setSource(fUML_Tests_TestAssociationEndWriterReader_ForkNode447);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow390->setTarget(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow390);
			// ObjectFlow ObjectFlow392 from ForkNode447 to insertAt
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow392->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow392);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow392->setName("ObjectFlow392");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow392->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow392->setSource(fUML_Tests_TestAssociationEndWriterReader_ForkNode447);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow392->setTarget(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow392);
			// ObjectFlow ObjectFlow394 from result to object
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow394->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow394);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow394->setName("ObjectFlow394");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow394->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow394->setSource(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow394->setTarget(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow394);
			// ObjectFlow ObjectFlow449 from ForkNode448 to object
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow449->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow449);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow449->setName("ObjectFlow449");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow449->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow449->setSource(fUML_Tests_TestAssociationEndWriterReader_ForkNode448);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow449->setTarget(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow449);
	fUML_Tests->addPackagedElement(fUML_Tests_TestAssociationEndWriterReader);
		// SignalEvent SignalEvent451
		fUML_Tests_SignalEvent451->setThisElementPtr(fUML_Tests_SignalEvent451);
		fUML_Tests_SignalEvent451->setName("SignalEvent451");
		fUML_Tests_SignalEvent451->setVisibility(VisibilityKind::public_);
		fUML_Tests_SignalEvent451->setSignal(fUML_Tests_TestSignal);
	fUML_Tests->addPackagedElement(fUML_Tests_SignalEvent451);
		// Class TestClass
		fUML_Tests_TestClass->setThisClass_Ptr(fUML_Tests_TestClass);
		fUML_Tests_TestClass->setName("TestClass");
		fUML_Tests_TestClass->setVisibility(VisibilityKind::public_);
		
			// Property x
			fUML_Tests_TestClass_x->setThisElementPtr(fUML_Tests_TestClass_x);
			fUML_Tests_TestClass_x->setName("x");
			fUML_Tests_TestClass_x->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClass_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
		fUML_Tests_TestClass->addOwnedAttribute(fUML_Tests_TestClass_x);
			// Property y
			fUML_Tests_TestClass_y->setThisElementPtr(fUML_Tests_TestClass_y);
			fUML_Tests_TestClass_y->setName("y");
			fUML_Tests_TestClass_y->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClass_y->setIsOrdered(true);
			fUML_Tests_TestClass_y->setIsUnique(false);
			fUML_Tests_TestClass_y->setUpper(-1);
			fUML_Tests_TestClass_y->setLower(0);
			fUML_Tests_TestClass_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
		fUML_Tests_TestClass->addOwnedAttribute(fUML_Tests_TestClass_y);
	fUML_Tests->addPackagedElement(fUML_Tests_TestClass);
		// Activity TestDataStore
		fUML_Tests_TestDataStore->setThisActivityPtr(fUML_Tests_TestDataStore);
		fUML_Tests_TestDataStore->setName("TestDataStore");
		fUML_Tests_TestDataStore->setVisibility(VisibilityKind::public_);
			// Parameter output
			fUML_Tests_TestDataStore_output->setThisElementPtr(fUML_Tests_TestDataStore_output);
			fUML_Tests_TestDataStore_output->setName("output");
			fUML_Tests_TestDataStore_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestDataStore_output->setUpper(-1);
			fUML_Tests_TestDataStore_output->setLower(0);
			fUML_Tests_TestDataStore_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestDataStore_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestDataStore->addOwnedParameter(fUML_Tests_TestDataStore_output);
			// ValueSpecificationAction Value(3)
			fUML_Tests_TestDataStore_Value_3->setThisExecutableNodePtr(fUML_Tests_TestDataStore_Value_3);
			fUML_Tests_TestDataStore_Value_3->setName("Value(3)");
			fUML_Tests_TestDataStore_Value_3->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger483
				fUML_Tests_TestDataStore_Value_3_LiteralInteger483->setThisElementPtr(fUML_Tests_TestDataStore_Value_3_LiteralInteger483);
				fUML_Tests_TestDataStore_Value_3_LiteralInteger483->setName("LiteralInteger483");
				fUML_Tests_TestDataStore_Value_3_LiteralInteger483->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_Value_3_LiteralInteger483->setValue(3);
			fUML_Tests_TestDataStore_Value_3->setValue(fUML_Tests_TestDataStore_Value_3_LiteralInteger483);
				// OutputPin Value(3).result
				fUML_Tests_TestDataStore_Value_3_Value_3_result->setThisElementPtr(fUML_Tests_TestDataStore_Value_3_Value_3_result);
				fUML_Tests_TestDataStore_Value_3_Value_3_result->setName("Value(3).result");
				fUML_Tests_TestDataStore_Value_3_Value_3_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestDataStore_Value_3->setResult(fUML_Tests_TestDataStore_Value_3_Value_3_result);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Value_3);
			// ValueSpecificationAction Value(2)
			fUML_Tests_TestDataStore_Value_2->setThisExecutableNodePtr(fUML_Tests_TestDataStore_Value_2);
			fUML_Tests_TestDataStore_Value_2->setName("Value(2)");
			fUML_Tests_TestDataStore_Value_2->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger486
				fUML_Tests_TestDataStore_Value_2_LiteralInteger486->setThisElementPtr(fUML_Tests_TestDataStore_Value_2_LiteralInteger486);
				fUML_Tests_TestDataStore_Value_2_LiteralInteger486->setName("LiteralInteger486");
				fUML_Tests_TestDataStore_Value_2_LiteralInteger486->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_Value_2_LiteralInteger486->setValue(2);
			fUML_Tests_TestDataStore_Value_2->setValue(fUML_Tests_TestDataStore_Value_2_LiteralInteger486);
				// OutputPin Value(2).result
				fUML_Tests_TestDataStore_Value_2_Value_2_result->setThisElementPtr(fUML_Tests_TestDataStore_Value_2_Value_2_result);
				fUML_Tests_TestDataStore_Value_2_Value_2_result->setName("Value(2).result");
				fUML_Tests_TestDataStore_Value_2_Value_2_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestDataStore_Value_2->setResult(fUML_Tests_TestDataStore_Value_2_Value_2_result);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Value_2);
			// MergeNode Merge2
			fUML_Tests_TestDataStore_Merge2->setThisElementPtr(fUML_Tests_TestDataStore_Merge2);
			fUML_Tests_TestDataStore_Merge2->setName("Merge2");
			fUML_Tests_TestDataStore_Merge2->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Merge2);
			// CallBehaviorAction Call(Copier)-2
			fUML_Tests_TestDataStore_Call_Copierminus2->setThisExecutableNodePtr(fUML_Tests_TestDataStore_Call_Copierminus2);
			fUML_Tests_TestDataStore_Call_Copierminus2->setName("Call(Copier)-2");
			fUML_Tests_TestDataStore_Call_Copierminus2->setVisibility(VisibilityKind::public_);
				// OutputPin Call(Copier)-2.output
				fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output->setThisElementPtr(fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output);
				fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output->setName("Call(Copier)-2.output");
				fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestDataStore_Call_Copierminus2->addResult(fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output);
			fUML_Tests_TestDataStore_Call_Copierminus2->setBehavior(fUML_Tests_Copier);
				// InputPin Call(Copier)-2.input
				fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input->setThisElementPtr(fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input);
				fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input->setName("Call(Copier)-2.input");
				fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestDataStore_Call_Copierminus2->addArgument(fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Call_Copierminus2);
			// ValueSpecificationAction Value(1)
			fUML_Tests_TestDataStore_Value_1->setThisExecutableNodePtr(fUML_Tests_TestDataStore_Value_1);
			fUML_Tests_TestDataStore_Value_1->setName("Value(1)");
			fUML_Tests_TestDataStore_Value_1->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger463
				fUML_Tests_TestDataStore_Value_1_LiteralInteger463->setThisElementPtr(fUML_Tests_TestDataStore_Value_1_LiteralInteger463);
				fUML_Tests_TestDataStore_Value_1_LiteralInteger463->setName("LiteralInteger463");
				fUML_Tests_TestDataStore_Value_1_LiteralInteger463->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_Value_1_LiteralInteger463->setValue(1);
			fUML_Tests_TestDataStore_Value_1->setValue(fUML_Tests_TestDataStore_Value_1_LiteralInteger463);
				// OutputPin Value(1).result
				fUML_Tests_TestDataStore_Value_1_Value_1_result->setThisElementPtr(fUML_Tests_TestDataStore_Value_1_Value_1_result);
				fUML_Tests_TestDataStore_Value_1_Value_1_result->setName("Value(1).result");
				fUML_Tests_TestDataStore_Value_1_Value_1_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestDataStore_Value_1->setResult(fUML_Tests_TestDataStore_Value_1_Value_1_result);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Value_1);
			// ValueSpecificationAction Value(1)-Init-2
			fUML_Tests_TestDataStore_Value_1minusInitminus2->setThisExecutableNodePtr(fUML_Tests_TestDataStore_Value_1minusInitminus2);
			fUML_Tests_TestDataStore_Value_1minusInitminus2->setName("Value(1)-Init-2");
			fUML_Tests_TestDataStore_Value_1minusInitminus2->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger466
				fUML_Tests_TestDataStore_Value_1minusInitminus2_LiteralInteger466->setThisElementPtr(fUML_Tests_TestDataStore_Value_1minusInitminus2_LiteralInteger466);
				fUML_Tests_TestDataStore_Value_1minusInitminus2_LiteralInteger466->setName("LiteralInteger466");
				fUML_Tests_TestDataStore_Value_1minusInitminus2_LiteralInteger466->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_Value_1minusInitminus2_LiteralInteger466->setValue(1);
			fUML_Tests_TestDataStore_Value_1minusInitminus2->setValue(fUML_Tests_TestDataStore_Value_1minusInitminus2_LiteralInteger466);
				// OutputPin Value(1)-Init-2.result
				fUML_Tests_TestDataStore_Value_1minusInitminus2_Value_1minusInitminus2_result->setThisElementPtr(fUML_Tests_TestDataStore_Value_1minusInitminus2_Value_1minusInitminus2_result);
				fUML_Tests_TestDataStore_Value_1minusInitminus2_Value_1minusInitminus2_result->setName("Value(1)-Init-2.result");
				fUML_Tests_TestDataStore_Value_1minusInitminus2_Value_1minusInitminus2_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestDataStore_Value_1minusInitminus2->setResult(fUML_Tests_TestDataStore_Value_1minusInitminus2_Value_1minusInitminus2_result);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Value_1minusInitminus2);
			// MergeNode Merge1
			fUML_Tests_TestDataStore_Merge1->setThisElementPtr(fUML_Tests_TestDataStore_Merge1);
			fUML_Tests_TestDataStore_Merge1->setName("Merge1");
			fUML_Tests_TestDataStore_Merge1->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Merge1);
			// ActivityParameterNode Parameter(output)
			fUML_Tests_TestDataStore_Parameter_output->setThisElementPtr(fUML_Tests_TestDataStore_Parameter_output);
			fUML_Tests_TestDataStore_Parameter_output->setName("Parameter(output)");
			fUML_Tests_TestDataStore_Parameter_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestDataStore_Parameter_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestDataStore_Parameter_output->setParameter(fUML_Tests_TestDataStore_output);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Parameter_output);
			// InitialNode InitialNode492
			fUML_Tests_TestDataStore_InitialNode492->setThisElementPtr(fUML_Tests_TestDataStore_InitialNode492);
			fUML_Tests_TestDataStore_InitialNode492->setName("InitialNode492");
			fUML_Tests_TestDataStore_InitialNode492->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_InitialNode492);
			// ValueSpecificationAction Value(2)-Init-3
			fUML_Tests_TestDataStore_Value_2minusInitminus3->setThisExecutableNodePtr(fUML_Tests_TestDataStore_Value_2minusInitminus3);
			fUML_Tests_TestDataStore_Value_2minusInitminus3->setName("Value(2)-Init-3");
			fUML_Tests_TestDataStore_Value_2minusInitminus3->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger467
				fUML_Tests_TestDataStore_Value_2minusInitminus3_LiteralInteger467->setThisElementPtr(fUML_Tests_TestDataStore_Value_2minusInitminus3_LiteralInteger467);
				fUML_Tests_TestDataStore_Value_2minusInitminus3_LiteralInteger467->setName("LiteralInteger467");
				fUML_Tests_TestDataStore_Value_2minusInitminus3_LiteralInteger467->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_Value_2minusInitminus3_LiteralInteger467->setValue(2);
			fUML_Tests_TestDataStore_Value_2minusInitminus3->setValue(fUML_Tests_TestDataStore_Value_2minusInitminus3_LiteralInteger467);
				// OutputPin Value(2)-Init-1.result
				fUML_Tests_TestDataStore_Value_2minusInitminus3_Value_2minusInitminus1_result->setThisElementPtr(fUML_Tests_TestDataStore_Value_2minusInitminus3_Value_2minusInitminus1_result);
				fUML_Tests_TestDataStore_Value_2minusInitminus3_Value_2minusInitminus1_result->setName("Value(2)-Init-1.result");
				fUML_Tests_TestDataStore_Value_2minusInitminus3_Value_2minusInitminus1_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestDataStore_Value_2minusInitminus3->setResult(fUML_Tests_TestDataStore_Value_2minusInitminus3_Value_2minusInitminus1_result);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Value_2minusInitminus3);
			// CallBehaviorAction Call(Copier)-1
			fUML_Tests_TestDataStore_Call_Copierminus1->setThisExecutableNodePtr(fUML_Tests_TestDataStore_Call_Copierminus1);
			fUML_Tests_TestDataStore_Call_Copierminus1->setName("Call(Copier)-1");
			fUML_Tests_TestDataStore_Call_Copierminus1->setVisibility(VisibilityKind::public_);
				// OutputPin Call(Copier)-1.output
				fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output->setThisElementPtr(fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output);
				fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output->setName("Call(Copier)-1.output");
				fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestDataStore_Call_Copierminus1->addResult(fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output);
			fUML_Tests_TestDataStore_Call_Copierminus1->setBehavior(fUML_Tests_Copier);
				// InputPin Call(Copier)-1.input
				fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input->setThisElementPtr(fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input);
				fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input->setName("Call(Copier)-1.input");
				fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestDataStore_Call_Copierminus1->addArgument(fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Call_Copierminus1);
			// ValueSpecificationAction Value(1)-Init-1
			fUML_Tests_TestDataStore_Value_1minusInitminus1->setThisExecutableNodePtr(fUML_Tests_TestDataStore_Value_1minusInitminus1);
			fUML_Tests_TestDataStore_Value_1minusInitminus1->setName("Value(1)-Init-1");
			fUML_Tests_TestDataStore_Value_1minusInitminus1->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger472
				fUML_Tests_TestDataStore_Value_1minusInitminus1_LiteralInteger472->setThisElementPtr(fUML_Tests_TestDataStore_Value_1minusInitminus1_LiteralInteger472);
				fUML_Tests_TestDataStore_Value_1minusInitminus1_LiteralInteger472->setName("LiteralInteger472");
				fUML_Tests_TestDataStore_Value_1minusInitminus1_LiteralInteger472->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_Value_1minusInitminus1_LiteralInteger472->setValue(1);
			fUML_Tests_TestDataStore_Value_1minusInitminus1->setValue(fUML_Tests_TestDataStore_Value_1minusInitminus1_LiteralInteger472);
				// OutputPin Value(1)-Init-1.result
				fUML_Tests_TestDataStore_Value_1minusInitminus1_Value_1minusInitminus1_result->setThisElementPtr(fUML_Tests_TestDataStore_Value_1minusInitminus1_Value_1minusInitminus1_result);
				fUML_Tests_TestDataStore_Value_1minusInitminus1_Value_1minusInitminus1_result->setName("Value(1)-Init-1.result");
				fUML_Tests_TestDataStore_Value_1minusInitminus1_Value_1minusInitminus1_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestDataStore_Value_1minusInitminus1->setResult(fUML_Tests_TestDataStore_Value_1minusInitminus1_Value_1minusInitminus1_result);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Value_1minusInitminus1);
			// ActivityFinalNode FinalNode
			fUML_Tests_TestDataStore_FinalNode->setThisElementPtr(fUML_Tests_TestDataStore_FinalNode);
			fUML_Tests_TestDataStore_FinalNode->setName("FinalNode");
			fUML_Tests_TestDataStore_FinalNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_FinalNode);
			// MergeNode Merge3
			fUML_Tests_TestDataStore_Merge3->setThisElementPtr(fUML_Tests_TestDataStore_Merge3);
			fUML_Tests_TestDataStore_Merge3->setName("Merge3");
			fUML_Tests_TestDataStore_Merge3->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Merge3);
			// DecisionNode DecisionNode
			fUML_Tests_TestDataStore_DecisionNode->setThisElementPtr(fUML_Tests_TestDataStore_DecisionNode);
			fUML_Tests_TestDataStore_DecisionNode->setName("DecisionNode");
			fUML_Tests_TestDataStore_DecisionNode->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestDataStore_DecisionNode->setDecisionInputFlow(fUML_Tests_TestDataStore_decisionInputFlow);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_DecisionNode);
			// DataStoreNode DataStoreNode
			fUML_Tests_TestDataStore_DataStoreNode->setThisElementPtr(fUML_Tests_TestDataStore_DataStoreNode);
			fUML_Tests_TestDataStore_DataStoreNode->setName("DataStoreNode");
			fUML_Tests_TestDataStore_DataStoreNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_DataStoreNode);
			// ObjectFlow decisionInputFlow from Merge2 to DecisionNode
			fUML_Tests_TestDataStore_decisionInputFlow->setThisActivityEdgePtr(fUML_Tests_TestDataStore_decisionInputFlow);
			fUML_Tests_TestDataStore_decisionInputFlow->setName("decisionInputFlow");
			fUML_Tests_TestDataStore_decisionInputFlow->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_decisionInputFlow->setSource(fUML_Tests_TestDataStore_Merge2);
			fUML_Tests_TestDataStore_decisionInputFlow->setTarget(fUML_Tests_TestDataStore_DecisionNode);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_decisionInputFlow);
			// ObjectFlow ObjectFlow457 from Value(2)-Init-1.result to DataStoreNode
			fUML_Tests_TestDataStore_ObjectFlow457->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ObjectFlow457);
			fUML_Tests_TestDataStore_ObjectFlow457->setName("ObjectFlow457");
			fUML_Tests_TestDataStore_ObjectFlow457->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ObjectFlow457->setSource(fUML_Tests_TestDataStore_Value_2minusInitminus3_Value_2minusInitminus1_result);
			fUML_Tests_TestDataStore_ObjectFlow457->setTarget(fUML_Tests_TestDataStore_DataStoreNode);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ObjectFlow457);
			// ObjectFlow ObjectFlow464 from Call(Copier)-1.output to Parameter(output)
			fUML_Tests_TestDataStore_ObjectFlow464->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ObjectFlow464);
			fUML_Tests_TestDataStore_ObjectFlow464->setName("ObjectFlow464");
			fUML_Tests_TestDataStore_ObjectFlow464->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ObjectFlow464->setSource(fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output);
			fUML_Tests_TestDataStore_ObjectFlow464->setTarget(fUML_Tests_TestDataStore_Parameter_output);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ObjectFlow464);
			// ControlFlow ControlFlow473 from Value(2)-Init-3 to Merge1
			fUML_Tests_TestDataStore_ControlFlow473->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow473);
			fUML_Tests_TestDataStore_ControlFlow473->setName("ControlFlow473");
			fUML_Tests_TestDataStore_ControlFlow473->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow473->setSource(fUML_Tests_TestDataStore_Value_2minusInitminus3);
			fUML_Tests_TestDataStore_ControlFlow473->setTarget(fUML_Tests_TestDataStore_Merge1);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow473);
			// ObjectFlow ObjectFlow475 from Value(1)-Init-2.result to DataStoreNode
			fUML_Tests_TestDataStore_ObjectFlow475->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ObjectFlow475);
			fUML_Tests_TestDataStore_ObjectFlow475->setName("ObjectFlow475");
			fUML_Tests_TestDataStore_ObjectFlow475->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ObjectFlow475->setSource(fUML_Tests_TestDataStore_Value_1minusInitminus2_Value_1minusInitminus2_result);
			fUML_Tests_TestDataStore_ObjectFlow475->setTarget(fUML_Tests_TestDataStore_DataStoreNode);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ObjectFlow475);
			// ObjectFlow ObjectFlow477 from Value(1).result to Merge2
			fUML_Tests_TestDataStore_ObjectFlow477->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ObjectFlow477);
			fUML_Tests_TestDataStore_ObjectFlow477->setName("ObjectFlow477");
			fUML_Tests_TestDataStore_ObjectFlow477->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ObjectFlow477->setSource(fUML_Tests_TestDataStore_Value_1_Value_1_result);
			fUML_Tests_TestDataStore_ObjectFlow477->setTarget(fUML_Tests_TestDataStore_Merge2);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ObjectFlow477);
			// ControlFlow ControlFlow479 from Value(2) to Merge3
			fUML_Tests_TestDataStore_ControlFlow479->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow479);
			fUML_Tests_TestDataStore_ControlFlow479->setName("ControlFlow479");
			fUML_Tests_TestDataStore_ControlFlow479->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow479->setSource(fUML_Tests_TestDataStore_Value_2);
			fUML_Tests_TestDataStore_ControlFlow479->setTarget(fUML_Tests_TestDataStore_Merge3);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow479);
			// ObjectFlow ObjectFlow481 from Value(2).result to Merge2
			fUML_Tests_TestDataStore_ObjectFlow481->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ObjectFlow481);
			fUML_Tests_TestDataStore_ObjectFlow481->setName("ObjectFlow481");
			fUML_Tests_TestDataStore_ObjectFlow481->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ObjectFlow481->setSource(fUML_Tests_TestDataStore_Value_2_Value_2_result);
			fUML_Tests_TestDataStore_ObjectFlow481->setTarget(fUML_Tests_TestDataStore_Merge2);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ObjectFlow481);
			// ControlFlow ControlFlow484 from Value(1)-Init-1 to Value(1)-Init-2
			fUML_Tests_TestDataStore_ControlFlow484->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow484);
			fUML_Tests_TestDataStore_ControlFlow484->setName("ControlFlow484");
			fUML_Tests_TestDataStore_ControlFlow484->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow484->setSource(fUML_Tests_TestDataStore_Value_1minusInitminus1);
			fUML_Tests_TestDataStore_ControlFlow484->setTarget(fUML_Tests_TestDataStore_Value_1minusInitminus2);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow484);
			// ControlFlow ControlFlow487 from DecisionNode to FinalNode
			fUML_Tests_TestDataStore_ControlFlow487->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow487);
			fUML_Tests_TestDataStore_ControlFlow487->setName("ControlFlow487");
			fUML_Tests_TestDataStore_ControlFlow487->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow487->setSource(fUML_Tests_TestDataStore_DecisionNode);
			fUML_Tests_TestDataStore_ControlFlow487->setTarget(fUML_Tests_TestDataStore_FinalNode);
				// LiteralInteger LiteralInteger489
				fUML_Tests_TestDataStore_ControlFlow487_LiteralInteger489->setThisElementPtr(fUML_Tests_TestDataStore_ControlFlow487_LiteralInteger489);
				fUML_Tests_TestDataStore_ControlFlow487_LiteralInteger489->setName("LiteralInteger489");
				fUML_Tests_TestDataStore_ControlFlow487_LiteralInteger489->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_ControlFlow487_LiteralInteger489->setValue(3);
			fUML_Tests_TestDataStore_ControlFlow487->setGuard(fUML_Tests_TestDataStore_ControlFlow487_LiteralInteger489);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow487);
			// ControlFlow ControlFlow490 from Call(Copier)-1 to Value(2)
			fUML_Tests_TestDataStore_ControlFlow490->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow490);
			fUML_Tests_TestDataStore_ControlFlow490->setName("ControlFlow490");
			fUML_Tests_TestDataStore_ControlFlow490->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow490->setSource(fUML_Tests_TestDataStore_Call_Copierminus1);
			fUML_Tests_TestDataStore_ControlFlow490->setTarget(fUML_Tests_TestDataStore_Value_2);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow490);
			// ObjectFlow ObjectFlow493 from Value(3).result to Merge2
			fUML_Tests_TestDataStore_ObjectFlow493->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ObjectFlow493);
			fUML_Tests_TestDataStore_ObjectFlow493->setName("ObjectFlow493");
			fUML_Tests_TestDataStore_ObjectFlow493->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ObjectFlow493->setSource(fUML_Tests_TestDataStore_Value_3_Value_3_result);
			fUML_Tests_TestDataStore_ObjectFlow493->setTarget(fUML_Tests_TestDataStore_Merge2);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ObjectFlow493);
			// ObjectFlow ObjectFlow495 from Value(1)-Init-1.result to DataStoreNode
			fUML_Tests_TestDataStore_ObjectFlow495->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ObjectFlow495);
			fUML_Tests_TestDataStore_ObjectFlow495->setName("ObjectFlow495");
			fUML_Tests_TestDataStore_ObjectFlow495->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ObjectFlow495->setSource(fUML_Tests_TestDataStore_Value_1minusInitminus1_Value_1minusInitminus1_result);
			fUML_Tests_TestDataStore_ObjectFlow495->setTarget(fUML_Tests_TestDataStore_DataStoreNode);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ObjectFlow495);
			// ControlFlow ControlFlow497 from Merge1 to DecisionNode
			fUML_Tests_TestDataStore_ControlFlow497->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow497);
			fUML_Tests_TestDataStore_ControlFlow497->setName("ControlFlow497");
			fUML_Tests_TestDataStore_ControlFlow497->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow497->setSource(fUML_Tests_TestDataStore_Merge1);
			fUML_Tests_TestDataStore_ControlFlow497->setTarget(fUML_Tests_TestDataStore_DecisionNode);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow497);
			// ControlFlow ControlFlow501 from InitialNode492 to Value(1)-Init-1
			fUML_Tests_TestDataStore_ControlFlow501->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow501);
			fUML_Tests_TestDataStore_ControlFlow501->setName("ControlFlow501");
			fUML_Tests_TestDataStore_ControlFlow501->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow501->setSource(fUML_Tests_TestDataStore_InitialNode492);
			fUML_Tests_TestDataStore_ControlFlow501->setTarget(fUML_Tests_TestDataStore_Value_1minusInitminus1);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow501);
			// ControlFlow ControlFlow503 from DecisionNode to Call(Copier)-1
			fUML_Tests_TestDataStore_ControlFlow503->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow503);
			fUML_Tests_TestDataStore_ControlFlow503->setName("ControlFlow503");
			fUML_Tests_TestDataStore_ControlFlow503->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow503->setSource(fUML_Tests_TestDataStore_DecisionNode);
			fUML_Tests_TestDataStore_ControlFlow503->setTarget(fUML_Tests_TestDataStore_Call_Copierminus1);
				// LiteralInteger LiteralInteger504
				fUML_Tests_TestDataStore_ControlFlow503_LiteralInteger504->setThisElementPtr(fUML_Tests_TestDataStore_ControlFlow503_LiteralInteger504);
				fUML_Tests_TestDataStore_ControlFlow503_LiteralInteger504->setName("LiteralInteger504");
				fUML_Tests_TestDataStore_ControlFlow503_LiteralInteger504->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_ControlFlow503_LiteralInteger504->setValue(1);
			fUML_Tests_TestDataStore_ControlFlow503->setGuard(fUML_Tests_TestDataStore_ControlFlow503_LiteralInteger504);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow503);
			// ControlFlow ControlFlow506 from Call(Copier)-2 to Value(3)
			fUML_Tests_TestDataStore_ControlFlow506->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow506);
			fUML_Tests_TestDataStore_ControlFlow506->setName("ControlFlow506");
			fUML_Tests_TestDataStore_ControlFlow506->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow506->setSource(fUML_Tests_TestDataStore_Call_Copierminus2);
			fUML_Tests_TestDataStore_ControlFlow506->setTarget(fUML_Tests_TestDataStore_Value_3);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow506);
			// ObjectFlow ObjectFlow508 from DataStoreNode to Call(Copier)-1.input
			fUML_Tests_TestDataStore_ObjectFlow508->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ObjectFlow508);
			fUML_Tests_TestDataStore_ObjectFlow508->setName("ObjectFlow508");
			fUML_Tests_TestDataStore_ObjectFlow508->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ObjectFlow508->setSource(fUML_Tests_TestDataStore_DataStoreNode);
			fUML_Tests_TestDataStore_ObjectFlow508->setTarget(fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ObjectFlow508);
			// ControlFlow ControlFlow510 from Value(1)-Init-2 to Value(2)-Init-3
			fUML_Tests_TestDataStore_ControlFlow510->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow510);
			fUML_Tests_TestDataStore_ControlFlow510->setName("ControlFlow510");
			fUML_Tests_TestDataStore_ControlFlow510->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow510->setSource(fUML_Tests_TestDataStore_Value_1minusInitminus2);
			fUML_Tests_TestDataStore_ControlFlow510->setTarget(fUML_Tests_TestDataStore_Value_2minusInitminus3);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow510);
			// ControlFlow ControlFlow512 from DecisionNode to Call(Copier)-2
			fUML_Tests_TestDataStore_ControlFlow512->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow512);
			fUML_Tests_TestDataStore_ControlFlow512->setName("ControlFlow512");
			fUML_Tests_TestDataStore_ControlFlow512->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow512->setSource(fUML_Tests_TestDataStore_DecisionNode);
			fUML_Tests_TestDataStore_ControlFlow512->setTarget(fUML_Tests_TestDataStore_Call_Copierminus2);
				// LiteralInteger LiteralInteger513
				fUML_Tests_TestDataStore_ControlFlow512_LiteralInteger513->setThisElementPtr(fUML_Tests_TestDataStore_ControlFlow512_LiteralInteger513);
				fUML_Tests_TestDataStore_ControlFlow512_LiteralInteger513->setName("LiteralInteger513");
				fUML_Tests_TestDataStore_ControlFlow512_LiteralInteger513->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_ControlFlow512_LiteralInteger513->setValue(2);
			fUML_Tests_TestDataStore_ControlFlow512->setGuard(fUML_Tests_TestDataStore_ControlFlow512_LiteralInteger513);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow512);
			// ControlFlow ControlFlow515 from Merge3 to Merge1
			fUML_Tests_TestDataStore_ControlFlow515->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow515);
			fUML_Tests_TestDataStore_ControlFlow515->setName("ControlFlow515");
			fUML_Tests_TestDataStore_ControlFlow515->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow515->setSource(fUML_Tests_TestDataStore_Merge3);
			fUML_Tests_TestDataStore_ControlFlow515->setTarget(fUML_Tests_TestDataStore_Merge1);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow515);
			// ObjectFlow ObjectFlow517 from Call(Copier)-2.output to Parameter(output)
			fUML_Tests_TestDataStore_ObjectFlow517->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ObjectFlow517);
			fUML_Tests_TestDataStore_ObjectFlow517->setName("ObjectFlow517");
			fUML_Tests_TestDataStore_ObjectFlow517->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ObjectFlow517->setSource(fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output);
			fUML_Tests_TestDataStore_ObjectFlow517->setTarget(fUML_Tests_TestDataStore_Parameter_output);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ObjectFlow517);
			// ControlFlow ControlFlow519 from Value(3) to Merge3
			fUML_Tests_TestDataStore_ControlFlow519->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow519);
			fUML_Tests_TestDataStore_ControlFlow519->setName("ControlFlow519");
			fUML_Tests_TestDataStore_ControlFlow519->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow519->setSource(fUML_Tests_TestDataStore_Value_3);
			fUML_Tests_TestDataStore_ControlFlow519->setTarget(fUML_Tests_TestDataStore_Merge3);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow519);
			// ObjectFlow ObjectFlow521 from DataStoreNode to Call(Copier)-2.input
			fUML_Tests_TestDataStore_ObjectFlow521->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ObjectFlow521);
			fUML_Tests_TestDataStore_ObjectFlow521->setName("ObjectFlow521");
			fUML_Tests_TestDataStore_ObjectFlow521->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ObjectFlow521->setSource(fUML_Tests_TestDataStore_DataStoreNode);
			fUML_Tests_TestDataStore_ObjectFlow521->setTarget(fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ObjectFlow521);
	fUML_Tests->addPackagedElement(fUML_Tests_TestDataStore);
		// Class Subclass1
		fUML_Tests_Subclass1->setThisClass_Ptr(fUML_Tests_Subclass1);
		fUML_Tests_Subclass1->setName("Subclass1");
		fUML_Tests_Subclass1->setVisibility(VisibilityKind::public_);
		
			// Generalization to TestClass
			fUML_Tests_Subclass1_Generalization523->setThisElementPtr(fUML_Tests_Subclass1_Generalization523);
			fUML_Tests_Subclass1_Generalization523->setGeneral(fUML_Tests_TestClass);
		fUML_Tests_Subclass1->addGeneralization(fUML_Tests_Subclass1_Generalization523);
			// Property a
			fUML_Tests_Subclass1_a->setThisElementPtr(fUML_Tests_Subclass1_a);
			fUML_Tests_Subclass1_a->setName("a");
			fUML_Tests_Subclass1_a->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_Subclass1_a->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
		fUML_Tests_Subclass1->addOwnedAttribute(fUML_Tests_Subclass1_a);
	fUML_Tests->addPackagedElement(fUML_Tests_Subclass1);
		// Activity TestSimpleActivities
		fUML_Tests_TestSimpleActivities->setThisActivityPtr(fUML_Tests_TestSimpleActivities);
		fUML_Tests_TestSimpleActivities->setName("TestSimpleActivities");
		fUML_Tests_TestSimpleActivities->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestSimpleActivities->isReentrant = false;
			// Parameter Copier.output
			fUML_Tests_TestSimpleActivities_Copier_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_Copier_output);
			fUML_Tests_TestSimpleActivities_Copier_output->setName("Copier.output");
			fUML_Tests_TestSimpleActivities_Copier_output->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_Copier_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Copier_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestSimpleActivities->addOwnedParameter(fUML_Tests_TestSimpleActivities_Copier_output);
			// Parameter CopierCaller.output
			fUML_Tests_TestSimpleActivities_CopierCaller_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_CopierCaller_output);
			fUML_Tests_TestSimpleActivities_CopierCaller_output->setName("CopierCaller.output");
			fUML_Tests_TestSimpleActivities_CopierCaller_output->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_CopierCaller_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_CopierCaller_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestSimpleActivities->addOwnedParameter(fUML_Tests_TestSimpleActivities_CopierCaller_output);
			// Parameter SimpleDecision_0.output_0
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0->setThisElementPtr(fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0);
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0->setName("SimpleDecision_0.output_0");
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0->setLower(0);
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestSimpleActivities->addOwnedParameter(fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0);
			// Parameter SimpleDecision_0.output_1
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1->setThisElementPtr(fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1);
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1->setName("SimpleDecision_0.output_1");
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1->setLower(0);
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestSimpleActivities->addOwnedParameter(fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1);
			// Parameter SimpleDecision_1.output_0
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0->setThisElementPtr(fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0->setName("SimpleDecision_1.output_0");
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0->setLower(0);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestSimpleActivities->addOwnedParameter(fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0);
			// Parameter SimpleDecision_1.output_1
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1->setThisElementPtr(fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1->setName("SimpleDecision_1.output_1");
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1->setLower(0);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestSimpleActivities->addOwnedParameter(fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1);
			// Parameter DecisionJoin.output
			fUML_Tests_TestSimpleActivities_DecisionJoin_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_DecisionJoin_output);
			fUML_Tests_TestSimpleActivities_DecisionJoin_output->setName("DecisionJoin.output");
			fUML_Tests_TestSimpleActivities_DecisionJoin_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_DecisionJoin_output->setIsOrdered(true);
			fUML_Tests_TestSimpleActivities_DecisionJoin_output->setUpper(-1);
			fUML_Tests_TestSimpleActivities_DecisionJoin_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_DecisionJoin_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestSimpleActivities->addOwnedParameter(fUML_Tests_TestSimpleActivities_DecisionJoin_output);
			// Parameter ForkMerge
			fUML_Tests_TestSimpleActivities_ForkMerge->setThisElementPtr(fUML_Tests_TestSimpleActivities_ForkMerge);
			fUML_Tests_TestSimpleActivities_ForkMerge->setName("ForkMerge");
			fUML_Tests_TestSimpleActivities_ForkMerge->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_ForkMerge->setUpper(-1);
			fUML_Tests_TestSimpleActivities_ForkMerge->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_ForkMerge->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestSimpleActivities->addOwnedParameter(fUML_Tests_TestSimpleActivities_ForkMerge);
			// Parameter ForkMergeData.output
			fUML_Tests_TestSimpleActivities_ForkMergeData_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_ForkMergeData_output);
			fUML_Tests_TestSimpleActivities_ForkMergeData_output->setName("ForkMergeData.output");
			fUML_Tests_TestSimpleActivities_ForkMergeData_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_ForkMergeData_output->setUpper(-1);
			fUML_Tests_TestSimpleActivities_ForkMergeData_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_ForkMergeData_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestSimpleActivities->addOwnedParameter(fUML_Tests_TestSimpleActivities_ForkMergeData_output);
			// ValueSpecificationAction Value(0)
			fUML_Tests_TestSimpleActivities_Value_0->setThisExecutableNodePtr(fUML_Tests_TestSimpleActivities_Value_0);
			fUML_Tests_TestSimpleActivities_Value_0->setName("Value(0)");
			fUML_Tests_TestSimpleActivities_Value_0->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger534
				fUML_Tests_TestSimpleActivities_Value_0_LiteralInteger534->setThisElementPtr(fUML_Tests_TestSimpleActivities_Value_0_LiteralInteger534);
				fUML_Tests_TestSimpleActivities_Value_0_LiteralInteger534->setName("LiteralInteger534");
				fUML_Tests_TestSimpleActivities_Value_0_LiteralInteger534->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Value_0_LiteralInteger534->setValue(0);
			fUML_Tests_TestSimpleActivities_Value_0->setValue(fUML_Tests_TestSimpleActivities_Value_0_LiteralInteger534);
				// OutputPin Value(0).result
				fUML_Tests_TestSimpleActivities_Value_0_Value_0_result->setThisElementPtr(fUML_Tests_TestSimpleActivities_Value_0_Value_0_result);
				fUML_Tests_TestSimpleActivities_Value_0_Value_0_result->setName("Value(0).result");
				fUML_Tests_TestSimpleActivities_Value_0_Value_0_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Value_0_Value_0_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Value_0->setResult(fUML_Tests_TestSimpleActivities_Value_0_Value_0_result);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Value_0);
			// ActivityParameterNode Parameter(SimpleDecision_1.output_0)
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_1_output_0->setThisElementPtr(fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_1_output_0);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_1_output_0->setName("Parameter(SimpleDecision_1.output_0)");
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_1_output_0->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_1_output_0->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_1_output_0->setParameter(fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_1_output_0);
			// ValueSpecificationAction Value(1)
			fUML_Tests_TestSimpleActivities_Value_1->setThisExecutableNodePtr(fUML_Tests_TestSimpleActivities_Value_1);
			fUML_Tests_TestSimpleActivities_Value_1->setName("Value(1)");
			fUML_Tests_TestSimpleActivities_Value_1->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger537
				fUML_Tests_TestSimpleActivities_Value_1_LiteralInteger537->setThisElementPtr(fUML_Tests_TestSimpleActivities_Value_1_LiteralInteger537);
				fUML_Tests_TestSimpleActivities_Value_1_LiteralInteger537->setName("LiteralInteger537");
				fUML_Tests_TestSimpleActivities_Value_1_LiteralInteger537->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Value_1_LiteralInteger537->setValue(1);
			fUML_Tests_TestSimpleActivities_Value_1->setValue(fUML_Tests_TestSimpleActivities_Value_1_LiteralInteger537);
				// OutputPin Value(1).result
				fUML_Tests_TestSimpleActivities_Value_1_Value_1_result->setThisElementPtr(fUML_Tests_TestSimpleActivities_Value_1_Value_1_result);
				fUML_Tests_TestSimpleActivities_Value_1_Value_1_result->setName("Value(1).result");
				fUML_Tests_TestSimpleActivities_Value_1_Value_1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Value_1_Value_1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Value_1->setResult(fUML_Tests_TestSimpleActivities_Value_1_Value_1_result);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Value_1);
			// ActivityParameterNode Parameter(SimpleDecision_0.output_1)
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_1->setThisElementPtr(fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_1);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_1->setName("Parameter(SimpleDecision_0.output_1)");
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_1->setParameter(fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_1);
			// CallBehaviorAction Call(ForkMergeData)
			fUML_Tests_TestSimpleActivities_Call_ForkMergeData->setThisExecutableNodePtr(fUML_Tests_TestSimpleActivities_Call_ForkMergeData);
			fUML_Tests_TestSimpleActivities_Call_ForkMergeData->setName("Call(ForkMergeData)");
			fUML_Tests_TestSimpleActivities_Call_ForkMergeData->setVisibility(VisibilityKind::public_);
				// OutputPin ForkMergeData.output
				fUML_Tests_TestSimpleActivities_Call_ForkMergeData_ForkMergeData_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_ForkMergeData_ForkMergeData_output);
				fUML_Tests_TestSimpleActivities_Call_ForkMergeData_ForkMergeData_output->setName("ForkMergeData.output");
				fUML_Tests_TestSimpleActivities_Call_ForkMergeData_ForkMergeData_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_ForkMergeData_ForkMergeData_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_ForkMergeData->addResult(fUML_Tests_TestSimpleActivities_Call_ForkMergeData_ForkMergeData_output);
			fUML_Tests_TestSimpleActivities_Call_ForkMergeData->setBehavior(fUML_Tests_ForkMergeData);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Call_ForkMergeData);
			// ActivityParameterNode Parameter(SimpleDecision_0.output_0)
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_0->setThisElementPtr(fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_0);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_0->setName("Parameter(SimpleDecision_0.output_0)");
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_0->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_0->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_0->setParameter(fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_0);
			// CallBehaviorAction Call(SimpleDecision_1)
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1->setThisExecutableNodePtr(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1->setName("Call(SimpleDecision_1)");
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1->setVisibility(VisibilityKind::public_);
				// OutputPin SimpleDecision_1.output_0
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_0->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_0);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_0->setName("SimpleDecision_1.output_0");
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_0->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_0->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1->addResult(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_0);
				// OutputPin SimpleDecision_1.output_1
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_1->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_1);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_1->setName("SimpleDecision_1.output_1");
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_1->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1->addResult(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_1);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1->setBehavior(fUML_Tests_SimpleDecision);
				// InputPin SimpleDecision_1.testValue
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_testValue->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_testValue);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_testValue->setName("SimpleDecision_1.testValue");
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_testValue->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_testValue->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1->addArgument(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_testValue);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1);
			// ActivityParameterNode Parameter(DecisionJoin.output)
			fUML_Tests_TestSimpleActivities_Parameter_DecisionJoin_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_Parameter_DecisionJoin_output);
			fUML_Tests_TestSimpleActivities_Parameter_DecisionJoin_output->setName("Parameter(DecisionJoin.output)");
			fUML_Tests_TestSimpleActivities_Parameter_DecisionJoin_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_Parameter_DecisionJoin_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Parameter_DecisionJoin_output->setParameter(fUML_Tests_TestSimpleActivities_DecisionJoin_output);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Parameter_DecisionJoin_output);
			// CallBehaviorAction Call(SimpleDecision_0)
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0->setThisExecutableNodePtr(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0->setName("Call(SimpleDecision_0)");
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0->setVisibility(VisibilityKind::public_);
				// OutputPin SimpleDecision_0.output_0
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_output_0->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_output_0);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_output_0->setName("SimpleDecision_0.output_0");
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_output_0->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_output_0->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0->addResult(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_output_0);
				// OutputPin SimpleDcision_0.output_1
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDcision_0_output_1->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDcision_0_output_1);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDcision_0_output_1->setName("SimpleDcision_0.output_1");
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDcision_0_output_1->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDcision_0_output_1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0->addResult(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDcision_0_output_1);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0->setBehavior(fUML_Tests_SimpleDecision);
				// InputPin SimpleDecision_0.testValue
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_testValue->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_testValue);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_testValue->setName("SimpleDecision_0.testValue");
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_testValue->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_testValue->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0->addArgument(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_testValue);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0);
			// ActivityParameterNode Parameter(ForkMerge)
			fUML_Tests_TestSimpleActivities_Parameter_ForkMerge->setThisElementPtr(fUML_Tests_TestSimpleActivities_Parameter_ForkMerge);
			fUML_Tests_TestSimpleActivities_Parameter_ForkMerge->setName("Parameter(ForkMerge)");
			fUML_Tests_TestSimpleActivities_Parameter_ForkMerge->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_Parameter_ForkMerge->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Parameter_ForkMerge->setParameter(fUML_Tests_TestSimpleActivities_ForkMerge);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Parameter_ForkMerge);
			// ForkNode Fork_0
			fUML_Tests_TestSimpleActivities_Fork_0->setThisElementPtr(fUML_Tests_TestSimpleActivities_Fork_0);
			fUML_Tests_TestSimpleActivities_Fork_0->setName("Fork_0");
			fUML_Tests_TestSimpleActivities_Fork_0->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Fork_0);
			// ActivityParameterNode Parameter(CopierCaller.output)
			fUML_Tests_TestSimpleActivities_Parameter_CopierCaller_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_Parameter_CopierCaller_output);
			fUML_Tests_TestSimpleActivities_Parameter_CopierCaller_output->setName("Parameter(CopierCaller.output)");
			fUML_Tests_TestSimpleActivities_Parameter_CopierCaller_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_Parameter_CopierCaller_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Parameter_CopierCaller_output->setParameter(fUML_Tests_TestSimpleActivities_CopierCaller_output);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Parameter_CopierCaller_output);
			// ActivityParameterNode Parameter(ForkMergeData.output)
			fUML_Tests_TestSimpleActivities_Parameter_ForkMergeData_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_Parameter_ForkMergeData_output);
			fUML_Tests_TestSimpleActivities_Parameter_ForkMergeData_output->setName("Parameter(ForkMergeData.output)");
			fUML_Tests_TestSimpleActivities_Parameter_ForkMergeData_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_Parameter_ForkMergeData_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Parameter_ForkMergeData_output->setParameter(fUML_Tests_TestSimpleActivities_ForkMergeData_output);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Parameter_ForkMergeData_output);
			// CallBehaviorAction Call(Copier)
			fUML_Tests_TestSimpleActivities_Call_Copier->setThisExecutableNodePtr(fUML_Tests_TestSimpleActivities_Call_Copier);
			fUML_Tests_TestSimpleActivities_Call_Copier->setName("Call(Copier)");
			fUML_Tests_TestSimpleActivities_Call_Copier->setVisibility(VisibilityKind::public_);
				// OutputPin Copier.output
				fUML_Tests_TestSimpleActivities_Call_Copier_Copier_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_Copier_Copier_output);
				fUML_Tests_TestSimpleActivities_Call_Copier_Copier_output->setName("Copier.output");
				fUML_Tests_TestSimpleActivities_Call_Copier_Copier_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_Copier_Copier_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_Copier->addResult(fUML_Tests_TestSimpleActivities_Call_Copier_Copier_output);
			fUML_Tests_TestSimpleActivities_Call_Copier->setBehavior(fUML_Tests_Copier);
				// InputPin Copier.input
				fUML_Tests_TestSimpleActivities_Call_Copier_Copier_input->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_Copier_Copier_input);
				fUML_Tests_TestSimpleActivities_Call_Copier_Copier_input->setName("Copier.input");
				fUML_Tests_TestSimpleActivities_Call_Copier_Copier_input->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_Copier_Copier_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_Copier->addArgument(fUML_Tests_TestSimpleActivities_Call_Copier_Copier_input);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Call_Copier);
			// CallBehaviorAction Call(CopierCaller)
			fUML_Tests_TestSimpleActivities_Call_CopierCaller->setThisExecutableNodePtr(fUML_Tests_TestSimpleActivities_Call_CopierCaller);
			fUML_Tests_TestSimpleActivities_Call_CopierCaller->setName("Call(CopierCaller)");
			fUML_Tests_TestSimpleActivities_Call_CopierCaller->setVisibility(VisibilityKind::public_);
				// OutputPin CopierCaller.output
				fUML_Tests_TestSimpleActivities_Call_CopierCaller_CopierCaller_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_CopierCaller_CopierCaller_output);
				fUML_Tests_TestSimpleActivities_Call_CopierCaller_CopierCaller_output->setName("CopierCaller.output");
				fUML_Tests_TestSimpleActivities_Call_CopierCaller_CopierCaller_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_CopierCaller_CopierCaller_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_CopierCaller->addResult(fUML_Tests_TestSimpleActivities_Call_CopierCaller_CopierCaller_output);
			fUML_Tests_TestSimpleActivities_Call_CopierCaller->setBehavior(fUML_Tests_CopierCaller);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Call_CopierCaller);
			// ActivityParameterNode SimpleDecision_1.output_1Node
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1Node->setThisElementPtr(fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1Node);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1Node->setName("SimpleDecision_1.output_1Node");
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1Node->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1Node->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1Node->setParameter(fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1Node);
			// CallBehaviorAction Call(ForkJoin)
			fUML_Tests_TestSimpleActivities_Call_ForkJoin->setThisExecutableNodePtr(fUML_Tests_TestSimpleActivities_Call_ForkJoin);
			fUML_Tests_TestSimpleActivities_Call_ForkJoin->setName("Call(ForkJoin)");
			fUML_Tests_TestSimpleActivities_Call_ForkJoin->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_Call_ForkJoin->setBehavior(fUML_Tests_ForkJoin);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Call_ForkJoin);
			// ActivityParameterNode Parameter(Copier.output)
			fUML_Tests_TestSimpleActivities_Parameter_Copier_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_Parameter_Copier_output);
			fUML_Tests_TestSimpleActivities_Parameter_Copier_output->setName("Parameter(Copier.output)");
			fUML_Tests_TestSimpleActivities_Parameter_Copier_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_Parameter_Copier_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Parameter_Copier_output->setParameter(fUML_Tests_TestSimpleActivities_Copier_output);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Parameter_Copier_output);
			// CallBehaviorAction Call(ForkMerge)
			fUML_Tests_TestSimpleActivities_Call_ForkMerge->setThisExecutableNodePtr(fUML_Tests_TestSimpleActivities_Call_ForkMerge);
			fUML_Tests_TestSimpleActivities_Call_ForkMerge->setName("Call(ForkMerge)");
			fUML_Tests_TestSimpleActivities_Call_ForkMerge->setVisibility(VisibilityKind::public_);
				// OutputPin ForkMerge.output
				fUML_Tests_TestSimpleActivities_Call_ForkMerge_ForkMerge_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_ForkMerge_ForkMerge_output);
				fUML_Tests_TestSimpleActivities_Call_ForkMerge_ForkMerge_output->setName("ForkMerge.output");
				fUML_Tests_TestSimpleActivities_Call_ForkMerge_ForkMerge_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_ForkMerge_ForkMerge_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_ForkMerge->addResult(fUML_Tests_TestSimpleActivities_Call_ForkMerge_ForkMerge_output);
			fUML_Tests_TestSimpleActivities_Call_ForkMerge->setBehavior(fUML_Tests_ForkMerge);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Call_ForkMerge);
			// CallBehaviorAction Call(DecisionJoin)
			fUML_Tests_TestSimpleActivities_Call_DecisionJoin->setThisExecutableNodePtr(fUML_Tests_TestSimpleActivities_Call_DecisionJoin);
			fUML_Tests_TestSimpleActivities_Call_DecisionJoin->setName("Call(DecisionJoin)");
			fUML_Tests_TestSimpleActivities_Call_DecisionJoin->setVisibility(VisibilityKind::public_);
				// OutputPin DecisionJoin.output
				fUML_Tests_TestSimpleActivities_Call_DecisionJoin_DecisionJoin_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_DecisionJoin_DecisionJoin_output);
				fUML_Tests_TestSimpleActivities_Call_DecisionJoin_DecisionJoin_output->setName("DecisionJoin.output");
				fUML_Tests_TestSimpleActivities_Call_DecisionJoin_DecisionJoin_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_DecisionJoin_DecisionJoin_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_DecisionJoin->addResult(fUML_Tests_TestSimpleActivities_Call_DecisionJoin_DecisionJoin_output);
			fUML_Tests_TestSimpleActivities_Call_DecisionJoin->setBehavior(fUML_Tests_DecisionJoin);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Call_DecisionJoin);
			// ControlFlow ControlFlow568 from Call(SimpleDecision_1) to Call(ForkJoin)
			fUML_Tests_TestSimpleActivities_ControlFlow568->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ControlFlow568);
			fUML_Tests_TestSimpleActivities_ControlFlow568->setName("ControlFlow568");
			fUML_Tests_TestSimpleActivities_ControlFlow568->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ControlFlow568->setSource(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1);
			fUML_Tests_TestSimpleActivities_ControlFlow568->setTarget(fUML_Tests_TestSimpleActivities_Call_ForkJoin);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ControlFlow568);
			// ObjectFlow ObjectFlow550 from SimpleDecision_1.output_0 to Parameter(SimpleDecision_1.output_0)
			fUML_Tests_TestSimpleActivities_ObjectFlow550->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow550);
			fUML_Tests_TestSimpleActivities_ObjectFlow550->setName("ObjectFlow550");
			fUML_Tests_TestSimpleActivities_ObjectFlow550->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow550->setSource(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_0);
			fUML_Tests_TestSimpleActivities_ObjectFlow550->setTarget(fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_1_output_0);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow550);
			// ObjectFlow ObjectFlow552 from SimpleDecision_0.output_0 to Parameter(SimpleDecision_0.output_0)
			fUML_Tests_TestSimpleActivities_ObjectFlow552->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow552);
			fUML_Tests_TestSimpleActivities_ObjectFlow552->setName("ObjectFlow552");
			fUML_Tests_TestSimpleActivities_ObjectFlow552->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow552->setSource(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_output_0);
			fUML_Tests_TestSimpleActivities_ObjectFlow552->setTarget(fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_0);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow552);
			// ControlFlow ControlFlow540 from Call(DecisionJoin) to Call(ForkMerge)
			fUML_Tests_TestSimpleActivities_ControlFlow540->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ControlFlow540);
			fUML_Tests_TestSimpleActivities_ControlFlow540->setName("ControlFlow540");
			fUML_Tests_TestSimpleActivities_ControlFlow540->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ControlFlow540->setSource(fUML_Tests_TestSimpleActivities_Call_DecisionJoin);
			fUML_Tests_TestSimpleActivities_ControlFlow540->setTarget(fUML_Tests_TestSimpleActivities_Call_ForkMerge);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ControlFlow540);
			// ObjectFlow ObjectFlow572 from Value(0).result to Fork_0
			fUML_Tests_TestSimpleActivities_ObjectFlow572->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow572);
			fUML_Tests_TestSimpleActivities_ObjectFlow572->setName("ObjectFlow572");
			fUML_Tests_TestSimpleActivities_ObjectFlow572->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow572->setSource(fUML_Tests_TestSimpleActivities_Value_0_Value_0_result);
			fUML_Tests_TestSimpleActivities_ObjectFlow572->setTarget(fUML_Tests_TestSimpleActivities_Fork_0);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow572);
			// ObjectFlow ObjectFlow574 from SimpleDcision_0.output_1 to Parameter(SimpleDecision_0.output_1)
			fUML_Tests_TestSimpleActivities_ObjectFlow574->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow574);
			fUML_Tests_TestSimpleActivities_ObjectFlow574->setName("ObjectFlow574");
			fUML_Tests_TestSimpleActivities_ObjectFlow574->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow574->setSource(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDcision_0_output_1);
			fUML_Tests_TestSimpleActivities_ObjectFlow574->setTarget(fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_1);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow574);
			// ControlFlow ControlFlow524 from Call(ForkMerge) to Call(ForkMergeData)
			fUML_Tests_TestSimpleActivities_ControlFlow524->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ControlFlow524);
			fUML_Tests_TestSimpleActivities_ControlFlow524->setName("ControlFlow524");
			fUML_Tests_TestSimpleActivities_ControlFlow524->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ControlFlow524->setSource(fUML_Tests_TestSimpleActivities_Call_ForkMerge);
			fUML_Tests_TestSimpleActivities_ControlFlow524->setTarget(fUML_Tests_TestSimpleActivities_Call_ForkMergeData);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ControlFlow524);
			// ObjectFlow ObjectFlow554 from DecisionJoin.output to Parameter(DecisionJoin.output)
			fUML_Tests_TestSimpleActivities_ObjectFlow554->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow554);
			fUML_Tests_TestSimpleActivities_ObjectFlow554->setName("ObjectFlow554");
			fUML_Tests_TestSimpleActivities_ObjectFlow554->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow554->setSource(fUML_Tests_TestSimpleActivities_Call_DecisionJoin_DecisionJoin_output);
			fUML_Tests_TestSimpleActivities_ObjectFlow554->setTarget(fUML_Tests_TestSimpleActivities_Parameter_DecisionJoin_output);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow554);
			// ObjectFlow ObjectFlow556 from ForkMergeData.output to Parameter(ForkMergeData.output)
			fUML_Tests_TestSimpleActivities_ObjectFlow556->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow556);
			fUML_Tests_TestSimpleActivities_ObjectFlow556->setName("ObjectFlow556");
			fUML_Tests_TestSimpleActivities_ObjectFlow556->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow556->setSource(fUML_Tests_TestSimpleActivities_Call_ForkMergeData_ForkMergeData_output);
			fUML_Tests_TestSimpleActivities_ObjectFlow556->setTarget(fUML_Tests_TestSimpleActivities_Parameter_ForkMergeData_output);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow556);
			// ObjectFlow ObjectFlow576 from Fork_0 to Copier.input
			fUML_Tests_TestSimpleActivities_ObjectFlow576->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow576);
			fUML_Tests_TestSimpleActivities_ObjectFlow576->setName("ObjectFlow576");
			fUML_Tests_TestSimpleActivities_ObjectFlow576->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow576->setSource(fUML_Tests_TestSimpleActivities_Fork_0);
			fUML_Tests_TestSimpleActivities_ObjectFlow576->setTarget(fUML_Tests_TestSimpleActivities_Call_Copier_Copier_input);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow576);
			// ObjectFlow ObjectFlow560 from Copier.output to Parameter(Copier.output)
			fUML_Tests_TestSimpleActivities_ObjectFlow560->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow560);
			fUML_Tests_TestSimpleActivities_ObjectFlow560->setName("ObjectFlow560");
			fUML_Tests_TestSimpleActivities_ObjectFlow560->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow560->setSource(fUML_Tests_TestSimpleActivities_Call_Copier_Copier_output);
			fUML_Tests_TestSimpleActivities_ObjectFlow560->setTarget(fUML_Tests_TestSimpleActivities_Parameter_Copier_output);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow560);
			// ObjectFlow ObjectFlow542 from SimpleDecision_1.output_1 to SimpleDecision_1.output_1Node
			fUML_Tests_TestSimpleActivities_ObjectFlow542->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow542);
			fUML_Tests_TestSimpleActivities_ObjectFlow542->setName("ObjectFlow542");
			fUML_Tests_TestSimpleActivities_ObjectFlow542->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow542->setSource(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_1);
			fUML_Tests_TestSimpleActivities_ObjectFlow542->setTarget(fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1Node);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow542);
			// ObjectFlow ObjectFlow526 from Fork_0 to SimpleDecision_0.testValue
			fUML_Tests_TestSimpleActivities_ObjectFlow526->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow526);
			fUML_Tests_TestSimpleActivities_ObjectFlow526->setName("ObjectFlow526");
			fUML_Tests_TestSimpleActivities_ObjectFlow526->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow526->setSource(fUML_Tests_TestSimpleActivities_Fork_0);
			fUML_Tests_TestSimpleActivities_ObjectFlow526->setTarget(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_testValue);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow526);
			// ControlFlow ControlFlow528 from Call(SimpleDecision_0) to Call(SimpleDecision_1)
			fUML_Tests_TestSimpleActivities_ControlFlow528->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ControlFlow528);
			fUML_Tests_TestSimpleActivities_ControlFlow528->setName("ControlFlow528");
			fUML_Tests_TestSimpleActivities_ControlFlow528->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ControlFlow528->setSource(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0);
			fUML_Tests_TestSimpleActivities_ControlFlow528->setTarget(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ControlFlow528);
			// ControlFlow ControlFlow578 from Call(CopierCaller) to Call(SimpleDecision_0)
			fUML_Tests_TestSimpleActivities_ControlFlow578->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ControlFlow578);
			fUML_Tests_TestSimpleActivities_ControlFlow578->setName("ControlFlow578");
			fUML_Tests_TestSimpleActivities_ControlFlow578->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ControlFlow578->setSource(fUML_Tests_TestSimpleActivities_Call_CopierCaller);
			fUML_Tests_TestSimpleActivities_ControlFlow578->setTarget(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ControlFlow578);
			// ObjectFlow ObjectFlow582 from Value(1).result to SimpleDecision_1.testValue
			fUML_Tests_TestSimpleActivities_ObjectFlow582->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow582);
			fUML_Tests_TestSimpleActivities_ObjectFlow582->setName("ObjectFlow582");
			fUML_Tests_TestSimpleActivities_ObjectFlow582->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow582->setSource(fUML_Tests_TestSimpleActivities_Value_1_Value_1_result);
			fUML_Tests_TestSimpleActivities_ObjectFlow582->setTarget(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_testValue);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow582);
			// ControlFlow ControlFlow544 from Call(ForkJoin) to Call(DecisionJoin)
			fUML_Tests_TestSimpleActivities_ControlFlow544->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ControlFlow544);
			fUML_Tests_TestSimpleActivities_ControlFlow544->setName("ControlFlow544");
			fUML_Tests_TestSimpleActivities_ControlFlow544->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ControlFlow544->setSource(fUML_Tests_TestSimpleActivities_Call_ForkJoin);
			fUML_Tests_TestSimpleActivities_ControlFlow544->setTarget(fUML_Tests_TestSimpleActivities_Call_DecisionJoin);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ControlFlow544);
			// ObjectFlow ObjectFlow530 from CopierCaller.output to Parameter(CopierCaller.output)
			fUML_Tests_TestSimpleActivities_ObjectFlow530->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow530);
			fUML_Tests_TestSimpleActivities_ObjectFlow530->setName("ObjectFlow530");
			fUML_Tests_TestSimpleActivities_ObjectFlow530->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow530->setSource(fUML_Tests_TestSimpleActivities_Call_CopierCaller_CopierCaller_output);
			fUML_Tests_TestSimpleActivities_ObjectFlow530->setTarget(fUML_Tests_TestSimpleActivities_Parameter_CopierCaller_output);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow530);
			// ObjectFlow ObjectFlow584 from ForkMerge.output to Parameter(ForkMerge)
			fUML_Tests_TestSimpleActivities_ObjectFlow584->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow584);
			fUML_Tests_TestSimpleActivities_ObjectFlow584->setName("ObjectFlow584");
			fUML_Tests_TestSimpleActivities_ObjectFlow584->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow584->setSource(fUML_Tests_TestSimpleActivities_Call_ForkMerge_ForkMerge_output);
			fUML_Tests_TestSimpleActivities_ObjectFlow584->setTarget(fUML_Tests_TestSimpleActivities_Parameter_ForkMerge);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow584);
			// ControlFlow ControlFlow586 from Call(Copier) to Call(CopierCaller)
			fUML_Tests_TestSimpleActivities_ControlFlow586->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ControlFlow586);
			fUML_Tests_TestSimpleActivities_ControlFlow586->setName("ControlFlow586");
			fUML_Tests_TestSimpleActivities_ControlFlow586->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ControlFlow586->setSource(fUML_Tests_TestSimpleActivities_Call_Copier);
			fUML_Tests_TestSimpleActivities_ControlFlow586->setTarget(fUML_Tests_TestSimpleActivities_Call_CopierCaller);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ControlFlow586);
	fUML_Tests->addPackagedElement(fUML_Tests_TestSimpleActivities);
		// Class ActiveClass
		fUML_Tests_ActiveClass->setThisClass_Ptr(fUML_Tests_ActiveClass);
		fUML_Tests_ActiveClass->setName("ActiveClass");
		fUML_Tests_ActiveClass->setVisibility(VisibilityKind::public_);
		
			// Property signal1
			fUML_Tests_ActiveClass_signal1->setThisElementPtr(fUML_Tests_ActiveClass_signal1);
			fUML_Tests_ActiveClass_signal1->setName("signal1");
			fUML_Tests_ActiveClass_signal1->setVisibility(VisibilityKind::private_);
			
			fUML_Tests_ActiveClass_signal1->setType(fUML_Tests_TestSignal);
		fUML_Tests_ActiveClass->addOwnedAttribute(fUML_Tests_ActiveClass_signal1);
			// Property signal2
			fUML_Tests_ActiveClass_signal2->setThisElementPtr(fUML_Tests_ActiveClass_signal2);
			fUML_Tests_ActiveClass_signal2->setName("signal2");
			fUML_Tests_ActiveClass_signal2->setVisibility(VisibilityKind::private_);
			
			fUML_Tests_ActiveClass_signal2->setType(fUML_Tests_OtherSignal);
		fUML_Tests_ActiveClass->addOwnedAttribute(fUML_Tests_ActiveClass_signal2);
		fUML_Tests_ActiveClass->setClassifierBehavior(fUML_Tests_ActiveClass_ActiveClassBehavior);
			// Activity ActiveClassBehavior
			fUML_Tests_ActiveClass_ActiveClassBehavior->setThisActivityPtr(fUML_Tests_ActiveClass_ActiveClassBehavior);
			fUML_Tests_ActiveClass_ActiveClassBehavior->setName("ActiveClassBehavior");
			fUML_Tests_ActiveClass_ActiveClassBehavior->setVisibility(VisibilityKind::public_);
				// AddStructuralFeatureValueAction Write(signal2)
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2->setThisExecutableNodePtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2->setName("Write(signal2)");
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2->setVisibility(VisibilityKind::public_);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2->setStructuralFeature(fUML_Tests_ActiveClass_signal2);
					// InputPin Write(signal2).object
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_object->setThisElementPtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_object);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_object->setName("Write(signal2).object");
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_object->setVisibility(VisibilityKind::public_);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_object->setType(fUML_Tests_ActiveClass);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2->setObject(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_object);
					// InputPin Write(signal2).value
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_value->setThisElementPtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_value);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_value->setName("Write(signal2).value");
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2->setValue(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_value);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addNode(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2);
				// ReadSelfAction ReadSelf
				fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf->setThisExecutableNodePtr(fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf->setName("ReadSelf");
				fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf->setVisibility(VisibilityKind::public_);
					// OutputPin self
					fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf_self->setThisElementPtr(fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf_self);
					fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf_self->setName("self");
					fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf_self->setVisibility(VisibilityKind::public_);
					fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf_self->setType(fUML_Tests_ActiveClass);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf->setResult(fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf_self);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addNode(fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf);
				// AcceptEventAction Accept(OtherSignal)
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal->setThisExecutableNodePtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal->setName("Accept(OtherSignal)");
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal->setVisibility(VisibilityKind::public_);
					// OutputPin Accept(OtherSignal).result
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Accept_OtherSignal_result->setThisElementPtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Accept_OtherSignal_result);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Accept_OtherSignal_result->setName("Accept(OtherSignal).result");
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Accept_OtherSignal_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal->addResult(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Accept_OtherSignal_result);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Trigger592->setName("Trigger592");
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Trigger592->setVisibility(VisibilityKind::public_);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Trigger592->setEvent(fUML_Tests_SignalEvent1289);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal->addTrigger(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Trigger592);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addNode(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal);
				// ForkNode Fork(self)
				fUML_Tests_ActiveClass_ActiveClassBehavior_Fork_self->setThisElementPtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Fork_self);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Fork_self->setName("Fork(self)");
				fUML_Tests_ActiveClass_ActiveClassBehavior_Fork_self->setVisibility(VisibilityKind::public_);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addNode(fUML_Tests_ActiveClass_ActiveClassBehavior_Fork_self);
				// AcceptEventAction Accept(TestSignal)
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal->setThisExecutableNodePtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal->setName("Accept(TestSignal)");
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal->setVisibility(VisibilityKind::public_);
					// OutputPin Accept(TestSignal).result
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Accept_TestSignal_result->setThisElementPtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Accept_TestSignal_result);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Accept_TestSignal_result->setName("Accept(TestSignal).result");
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Accept_TestSignal_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal->addResult(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Accept_TestSignal_result);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Trigger593->setName("Trigger593");
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Trigger593->setVisibility(VisibilityKind::public_);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Trigger593->setEvent(fUML_Tests_SignalEvent1040);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal->addTrigger(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Trigger593);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addNode(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal);
				// AddStructuralFeatureValueAction Write(signal1)
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1->setThisExecutableNodePtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1->setName("Write(signal1)");
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1->setVisibility(VisibilityKind::public_);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1->setStructuralFeature(fUML_Tests_ActiveClass_signal1);
					// InputPin Write(signal1).object
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_object->setThisElementPtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_object);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_object->setName("Write(signal1).object");
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_object->setVisibility(VisibilityKind::public_);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_object->setType(fUML_Tests_ActiveClass);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1->setObject(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_object);
					// InputPin Write(signal1).value
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_value->setThisElementPtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_value);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_value->setName("Write(signal1).value");
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1->setValue(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_value);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addNode(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1);
				// ObjectFlow ObjectFlow588 from Fork(self) to Write(signal1).object
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow588->setThisActivityEdgePtr(fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow588);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow588->setName("ObjectFlow588");
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow588->setVisibility(VisibilityKind::public_);
				
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow588->setSource(fUML_Tests_ActiveClass_ActiveClassBehavior_Fork_self);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow588->setTarget(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_object);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addEdge(fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow588);
				// ObjectFlow ObjectFlow590 from Fork(self) to Write(signal2).object
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow590->setThisActivityEdgePtr(fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow590);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow590->setName("ObjectFlow590");
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow590->setVisibility(VisibilityKind::public_);
				
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow590->setSource(fUML_Tests_ActiveClass_ActiveClassBehavior_Fork_self);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow590->setTarget(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_object);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addEdge(fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow590);
				// ObjectFlow ObjectFlow594 from Accept(OtherSignal).result to Write(signal2).value
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow594->setThisActivityEdgePtr(fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow594);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow594->setName("ObjectFlow594");
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow594->setVisibility(VisibilityKind::public_);
				
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow594->setSource(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Accept_OtherSignal_result);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow594->setTarget(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_value);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addEdge(fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow594);
				// ObjectFlow ObjectFlow596 from self to Fork(self)
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow596->setThisActivityEdgePtr(fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow596);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow596->setName("ObjectFlow596");
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow596->setVisibility(VisibilityKind::public_);
				
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow596->setSource(fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf_self);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow596->setTarget(fUML_Tests_ActiveClass_ActiveClassBehavior_Fork_self);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addEdge(fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow596);
				// ObjectFlow ObjectFlow598 from Accept(TestSignal).result to Write(signal1).value
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow598->setThisActivityEdgePtr(fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow598);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow598->setName("ObjectFlow598");
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow598->setVisibility(VisibilityKind::public_);
				
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow598->setSource(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Accept_TestSignal_result);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow598->setTarget(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_value);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addEdge(fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow598);
		fUML_Tests_ActiveClass->addOwnedBehavior(fUML_Tests_ActiveClass_ActiveClassBehavior);
		fUML_Tests_ActiveClass->setIsActive(true);
	fUML_Tests->addPackagedElement(fUML_Tests_ActiveClass);
		// Activity TestSignalReceiver
		fUML_Tests_TestSignalReceiver->setThisActivityPtr(fUML_Tests_TestSignalReceiver);
		fUML_Tests_TestSignalReceiver->setName("TestSignalReceiver");
		fUML_Tests_TestSignalReceiver->setVisibility(VisibilityKind::public_);
		
			// Property signal
			fUML_Tests_TestSignalReceiver_signal->setThisElementPtr(fUML_Tests_TestSignalReceiver_signal);
			fUML_Tests_TestSignalReceiver_signal->setName("signal");
			fUML_Tests_TestSignalReceiver_signal->setVisibility(VisibilityKind::private_);
			fUML_Tests_TestSignalReceiver_signal->setLower(0);
			fUML_Tests_TestSignalReceiver_signal->setType(fUML_Tests_TestSignal);
		fUML_Tests_TestSignalReceiver->addOwnedAttribute(fUML_Tests_TestSignalReceiver_signal);
			// Parameter testSignalOut
			fUML_Tests_TestSignalReceiver_testSignalOut->setThisElementPtr(fUML_Tests_TestSignalReceiver_testSignalOut);
			fUML_Tests_TestSignalReceiver_testSignalOut->setName("testSignalOut");
			fUML_Tests_TestSignalReceiver_testSignalOut->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSignalReceiver_testSignalOut->setLower(0);
			fUML_Tests_TestSignalReceiver_testSignalOut->setType(fUML_Tests_TestSignal);
			fUML_Tests_TestSignalReceiver_testSignalOut->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestSignalReceiver->addOwnedParameter(fUML_Tests_TestSignalReceiver_testSignalOut);
			// ForkNode Fork(signal)
			fUML_Tests_TestSignalReceiver_Fork_signal->setThisElementPtr(fUML_Tests_TestSignalReceiver_Fork_signal);
			fUML_Tests_TestSignalReceiver_Fork_signal->setName("Fork(signal)");
			fUML_Tests_TestSignalReceiver_Fork_signal->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestSignalReceiver->addNode(fUML_Tests_TestSignalReceiver_Fork_signal);
			// AcceptEventAction Accept(TestSignal)
			fUML_Tests_TestSignalReceiver_Accept_TestSignal->setThisExecutableNodePtr(fUML_Tests_TestSignalReceiver_Accept_TestSignal);
			fUML_Tests_TestSignalReceiver_Accept_TestSignal->setName("Accept(TestSignal)");
			fUML_Tests_TestSignalReceiver_Accept_TestSignal->setVisibility(VisibilityKind::public_);
				// OutputPin signal
				fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal->setThisElementPtr(fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal);
				fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal->setName("signal");
				fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal->setType(fUML_Tests_TestSignal);
			fUML_Tests_TestSignalReceiver_Accept_TestSignal->addResult(fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal);
				fUML_Tests_TestSignalReceiver_Accept_TestSignal_Trigger602->setName("Trigger602");
				fUML_Tests_TestSignalReceiver_Accept_TestSignal_Trigger602->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSignalReceiver_Accept_TestSignal_Trigger602->setEvent(fUML_Tests_SignalEvent451);
			fUML_Tests_TestSignalReceiver_Accept_TestSignal->addTrigger(fUML_Tests_TestSignalReceiver_Accept_TestSignal_Trigger602);
		fUML_Tests_TestSignalReceiver->addNode(fUML_Tests_TestSignalReceiver_Accept_TestSignal);
			// ReadSelfAction ReadSelf
			fUML_Tests_TestSignalReceiver_ReadSelf->setThisExecutableNodePtr(fUML_Tests_TestSignalReceiver_ReadSelf);
			fUML_Tests_TestSignalReceiver_ReadSelf->setName("ReadSelf");
			fUML_Tests_TestSignalReceiver_ReadSelf->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestSignalReceiver_ReadSelf_result->setThisElementPtr(fUML_Tests_TestSignalReceiver_ReadSelf_result);
				fUML_Tests_TestSignalReceiver_ReadSelf_result->setName("result");
				fUML_Tests_TestSignalReceiver_ReadSelf_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSignalReceiver_ReadSelf->setResult(fUML_Tests_TestSignalReceiver_ReadSelf_result);
		fUML_Tests_TestSignalReceiver->addNode(fUML_Tests_TestSignalReceiver_ReadSelf);
			// InitialNode InitialNode605
			fUML_Tests_TestSignalReceiver_InitialNode605->setThisElementPtr(fUML_Tests_TestSignalReceiver_InitialNode605);
			fUML_Tests_TestSignalReceiver_InitialNode605->setName("InitialNode605");
			fUML_Tests_TestSignalReceiver_InitialNode605->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestSignalReceiver->addNode(fUML_Tests_TestSignalReceiver_InitialNode605);
			// AddStructuralFeatureValueAction Write(signal)
			fUML_Tests_TestSignalReceiver_Write_signal->setThisExecutableNodePtr(fUML_Tests_TestSignalReceiver_Write_signal);
			fUML_Tests_TestSignalReceiver_Write_signal->setName("Write(signal)");
			fUML_Tests_TestSignalReceiver_Write_signal->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSignalReceiver_Write_signal->setStructuralFeature(fUML_Tests_TestSignalReceiver_signal);
				// InputPin object
				fUML_Tests_TestSignalReceiver_Write_signal_object->setThisElementPtr(fUML_Tests_TestSignalReceiver_Write_signal_object);
				fUML_Tests_TestSignalReceiver_Write_signal_object->setName("object");
				fUML_Tests_TestSignalReceiver_Write_signal_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSignalReceiver_Write_signal->setObject(fUML_Tests_TestSignalReceiver_Write_signal_object);
				// InputPin value
				fUML_Tests_TestSignalReceiver_Write_signal_value->setThisElementPtr(fUML_Tests_TestSignalReceiver_Write_signal_value);
				fUML_Tests_TestSignalReceiver_Write_signal_value->setName("value");
				fUML_Tests_TestSignalReceiver_Write_signal_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSignalReceiver_Write_signal_value->setType(fUML_Tests_TestSignal);
			fUML_Tests_TestSignalReceiver_Write_signal->setValue(fUML_Tests_TestSignalReceiver_Write_signal_value);
		fUML_Tests_TestSignalReceiver->addNode(fUML_Tests_TestSignalReceiver_Write_signal);
			// ActivityParameterNode Output(testSignalOut)
			fUML_Tests_TestSignalReceiver_Output_testSignalOut->setThisElementPtr(fUML_Tests_TestSignalReceiver_Output_testSignalOut);
			fUML_Tests_TestSignalReceiver_Output_testSignalOut->setName("Output(testSignalOut)");
			fUML_Tests_TestSignalReceiver_Output_testSignalOut->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSignalReceiver_Output_testSignalOut->setType(fUML_Tests_TestSignal);
			fUML_Tests_TestSignalReceiver_Output_testSignalOut->setParameter(fUML_Tests_TestSignalReceiver_testSignalOut);
		fUML_Tests_TestSignalReceiver->addNode(fUML_Tests_TestSignalReceiver_Output_testSignalOut);
			// ControlFlow ControlFlow612 from InitialNode605 to Accept(TestSignal)
			fUML_Tests_TestSignalReceiver_ControlFlow612->setThisActivityEdgePtr(fUML_Tests_TestSignalReceiver_ControlFlow612);
			fUML_Tests_TestSignalReceiver_ControlFlow612->setName("ControlFlow612");
			fUML_Tests_TestSignalReceiver_ControlFlow612->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSignalReceiver_ControlFlow612->setSource(fUML_Tests_TestSignalReceiver_InitialNode605);
			fUML_Tests_TestSignalReceiver_ControlFlow612->setTarget(fUML_Tests_TestSignalReceiver_Accept_TestSignal);
		fUML_Tests_TestSignalReceiver->addEdge(fUML_Tests_TestSignalReceiver_ControlFlow612);
			// ControlFlow ControlFlow614 from Accept(TestSignal) to ReadSelf
			fUML_Tests_TestSignalReceiver_ControlFlow614->setThisActivityEdgePtr(fUML_Tests_TestSignalReceiver_ControlFlow614);
			fUML_Tests_TestSignalReceiver_ControlFlow614->setName("ControlFlow614");
			fUML_Tests_TestSignalReceiver_ControlFlow614->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSignalReceiver_ControlFlow614->setSource(fUML_Tests_TestSignalReceiver_Accept_TestSignal);
			fUML_Tests_TestSignalReceiver_ControlFlow614->setTarget(fUML_Tests_TestSignalReceiver_ReadSelf);
		fUML_Tests_TestSignalReceiver->addEdge(fUML_Tests_TestSignalReceiver_ControlFlow614);
			// ObjectFlow ObjectFlow616 from signal to Fork(signal)
			fUML_Tests_TestSignalReceiver_ObjectFlow616->setThisActivityEdgePtr(fUML_Tests_TestSignalReceiver_ObjectFlow616);
			fUML_Tests_TestSignalReceiver_ObjectFlow616->setName("ObjectFlow616");
			fUML_Tests_TestSignalReceiver_ObjectFlow616->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSignalReceiver_ObjectFlow616->setSource(fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal);
			fUML_Tests_TestSignalReceiver_ObjectFlow616->setTarget(fUML_Tests_TestSignalReceiver_Fork_signal);
		fUML_Tests_TestSignalReceiver->addEdge(fUML_Tests_TestSignalReceiver_ObjectFlow616);
			// ObjectFlow ObjectFlow618 from result to object
			fUML_Tests_TestSignalReceiver_ObjectFlow618->setThisActivityEdgePtr(fUML_Tests_TestSignalReceiver_ObjectFlow618);
			fUML_Tests_TestSignalReceiver_ObjectFlow618->setName("ObjectFlow618");
			fUML_Tests_TestSignalReceiver_ObjectFlow618->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSignalReceiver_ObjectFlow618->setSource(fUML_Tests_TestSignalReceiver_ReadSelf_result);
			fUML_Tests_TestSignalReceiver_ObjectFlow618->setTarget(fUML_Tests_TestSignalReceiver_Write_signal_object);
		fUML_Tests_TestSignalReceiver->addEdge(fUML_Tests_TestSignalReceiver_ObjectFlow618);
			// ObjectFlow ObjectFlow606 from Fork(signal) to value
			fUML_Tests_TestSignalReceiver_ObjectFlow606->setThisActivityEdgePtr(fUML_Tests_TestSignalReceiver_ObjectFlow606);
			fUML_Tests_TestSignalReceiver_ObjectFlow606->setName("ObjectFlow606");
			fUML_Tests_TestSignalReceiver_ObjectFlow606->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSignalReceiver_ObjectFlow606->setSource(fUML_Tests_TestSignalReceiver_Fork_signal);
			fUML_Tests_TestSignalReceiver_ObjectFlow606->setTarget(fUML_Tests_TestSignalReceiver_Write_signal_value);
		fUML_Tests_TestSignalReceiver->addEdge(fUML_Tests_TestSignalReceiver_ObjectFlow606);
			// ObjectFlow ObjectFlow608 from Fork(signal) to Output(testSignalOut)
			fUML_Tests_TestSignalReceiver_ObjectFlow608->setThisActivityEdgePtr(fUML_Tests_TestSignalReceiver_ObjectFlow608);
			fUML_Tests_TestSignalReceiver_ObjectFlow608->setName("ObjectFlow608");
			fUML_Tests_TestSignalReceiver_ObjectFlow608->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSignalReceiver_ObjectFlow608->setSource(fUML_Tests_TestSignalReceiver_Fork_signal);
			fUML_Tests_TestSignalReceiver_ObjectFlow608->setTarget(fUML_Tests_TestSignalReceiver_Output_testSignalOut);
		fUML_Tests_TestSignalReceiver->addEdge(fUML_Tests_TestSignalReceiver_ObjectFlow608);
	fUML_Tests->addPackagedElement(fUML_Tests_TestSignalReceiver);
		// Activity TestClassIdentityTester
		fUML_Tests_TestClassIdentityTester->setThisActivityPtr(fUML_Tests_TestClassIdentityTester);
		fUML_Tests_TestClassIdentityTester->setName("TestClassIdentityTester");
		fUML_Tests_TestClassIdentityTester->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestClassIdentityTester->isReentrant = false;
			// Parameter value1
			fUML_Tests_TestClassIdentityTester_value1->setThisElementPtr(fUML_Tests_TestClassIdentityTester_value1);
			fUML_Tests_TestClassIdentityTester_value1->setName("value1");
			fUML_Tests_TestClassIdentityTester_value1->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassIdentityTester_value1->setType(fUML_Tests_TestClass);
		fUML_Tests_TestClassIdentityTester->addOwnedParameter(fUML_Tests_TestClassIdentityTester_value1);
			// Parameter value2
			fUML_Tests_TestClassIdentityTester_value2->setThisElementPtr(fUML_Tests_TestClassIdentityTester_value2);
			fUML_Tests_TestClassIdentityTester_value2->setName("value2");
			fUML_Tests_TestClassIdentityTester_value2->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassIdentityTester_value2->setType(fUML_Tests_TestClass);
		fUML_Tests_TestClassIdentityTester->addOwnedParameter(fUML_Tests_TestClassIdentityTester_value2);
			// Parameter result
			fUML_Tests_TestClassIdentityTester_result->setThisElementPtr(fUML_Tests_TestClassIdentityTester_result);
			fUML_Tests_TestClassIdentityTester_result->setName("result");
			fUML_Tests_TestClassIdentityTester_result->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassIdentityTester_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestClassIdentityTester_result->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassIdentityTester->addOwnedParameter(fUML_Tests_TestClassIdentityTester_result);
			// ActivityParameterNode Parameter(value1)
			fUML_Tests_TestClassIdentityTester_Parameter_value1->setThisElementPtr(fUML_Tests_TestClassIdentityTester_Parameter_value1);
			fUML_Tests_TestClassIdentityTester_Parameter_value1->setName("Parameter(value1)");
			fUML_Tests_TestClassIdentityTester_Parameter_value1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassIdentityTester_Parameter_value1->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassIdentityTester_Parameter_value1->setParameter(fUML_Tests_TestClassIdentityTester_value1);
		fUML_Tests_TestClassIdentityTester->addNode(fUML_Tests_TestClassIdentityTester_Parameter_value1);
			// TestIdentityAction TestIdentity
			fUML_Tests_TestClassIdentityTester_TestIdentity->setThisExecutableNodePtr(fUML_Tests_TestClassIdentityTester_TestIdentity);
			fUML_Tests_TestClassIdentityTester_TestIdentity->setName("TestIdentity");
			fUML_Tests_TestClassIdentityTester_TestIdentity->setVisibility(VisibilityKind::public_);
				// InputPin TestIdentity.first
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_first->setThisElementPtr(fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_first);
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_first->setName("TestIdentity.first");
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_first->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassIdentityTester_TestIdentity->setFirst(fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_first);
				// InputPin TestIdentity.second
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_second->setThisElementPtr(fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_second);
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_second->setName("TestIdentity.second");
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_second->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassIdentityTester_TestIdentity->setSecond(fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_second);
				// OutputPin TestIdentity.result
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_result->setThisElementPtr(fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_result);
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_result->setName("TestIdentity.result");
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestClassIdentityTester_TestIdentity->setResult(fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_result);
		fUML_Tests_TestClassIdentityTester->addNode(fUML_Tests_TestClassIdentityTester_TestIdentity);
			// ActivityParameterNode Parameter(value2)
			fUML_Tests_TestClassIdentityTester_Parameter_value2->setThisElementPtr(fUML_Tests_TestClassIdentityTester_Parameter_value2);
			fUML_Tests_TestClassIdentityTester_Parameter_value2->setName("Parameter(value2)");
			fUML_Tests_TestClassIdentityTester_Parameter_value2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassIdentityTester_Parameter_value2->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassIdentityTester_Parameter_value2->setParameter(fUML_Tests_TestClassIdentityTester_value2);
		fUML_Tests_TestClassIdentityTester->addNode(fUML_Tests_TestClassIdentityTester_Parameter_value2);
			// ActivityParameterNode Parameter(result)
			fUML_Tests_TestClassIdentityTester_Parameter_result->setThisElementPtr(fUML_Tests_TestClassIdentityTester_Parameter_result);
			fUML_Tests_TestClassIdentityTester_Parameter_result->setName("Parameter(result)");
			fUML_Tests_TestClassIdentityTester_Parameter_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassIdentityTester_Parameter_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestClassIdentityTester_Parameter_result->setParameter(fUML_Tests_TestClassIdentityTester_result);
		fUML_Tests_TestClassIdentityTester->addNode(fUML_Tests_TestClassIdentityTester_Parameter_result);
			// ObjectFlow ObjectFlow620 from TestIdentity.result to Parameter(result)
			fUML_Tests_TestClassIdentityTester_ObjectFlow620->setThisActivityEdgePtr(fUML_Tests_TestClassIdentityTester_ObjectFlow620);
			fUML_Tests_TestClassIdentityTester_ObjectFlow620->setName("ObjectFlow620");
			fUML_Tests_TestClassIdentityTester_ObjectFlow620->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassIdentityTester_ObjectFlow620->setSource(fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_result);
			fUML_Tests_TestClassIdentityTester_ObjectFlow620->setTarget(fUML_Tests_TestClassIdentityTester_Parameter_result);
		fUML_Tests_TestClassIdentityTester->addEdge(fUML_Tests_TestClassIdentityTester_ObjectFlow620);
			// ObjectFlow ObjectFlow628 from Parameter(value1) to TestIdentity.first
			fUML_Tests_TestClassIdentityTester_ObjectFlow628->setThisActivityEdgePtr(fUML_Tests_TestClassIdentityTester_ObjectFlow628);
			fUML_Tests_TestClassIdentityTester_ObjectFlow628->setName("ObjectFlow628");
			fUML_Tests_TestClassIdentityTester_ObjectFlow628->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassIdentityTester_ObjectFlow628->setSource(fUML_Tests_TestClassIdentityTester_Parameter_value1);
			fUML_Tests_TestClassIdentityTester_ObjectFlow628->setTarget(fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_first);
		fUML_Tests_TestClassIdentityTester->addEdge(fUML_Tests_TestClassIdentityTester_ObjectFlow628);
			// ObjectFlow ObjectFlow630 from Parameter(value2) to TestIdentity.second
			fUML_Tests_TestClassIdentityTester_ObjectFlow630->setThisActivityEdgePtr(fUML_Tests_TestClassIdentityTester_ObjectFlow630);
			fUML_Tests_TestClassIdentityTester_ObjectFlow630->setName("ObjectFlow630");
			fUML_Tests_TestClassIdentityTester_ObjectFlow630->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassIdentityTester_ObjectFlow630->setSource(fUML_Tests_TestClassIdentityTester_Parameter_value2);
			fUML_Tests_TestClassIdentityTester_ObjectFlow630->setTarget(fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_second);
		fUML_Tests_TestClassIdentityTester->addEdge(fUML_Tests_TestClassIdentityTester_ObjectFlow630);
	fUML_Tests->addPackagedElement(fUML_Tests_TestClassIdentityTester);
		// Activity TestNodeEnabler
		fUML_Tests_TestNodeEnabler->setThisActivityPtr(fUML_Tests_TestNodeEnabler);
		fUML_Tests_TestNodeEnabler->setName("TestNodeEnabler");
		fUML_Tests_TestNodeEnabler->setVisibility(VisibilityKind::public_);
			// Parameter output
			fUML_Tests_TestNodeEnabler_output->setThisElementPtr(fUML_Tests_TestNodeEnabler_output);
			fUML_Tests_TestNodeEnabler_output->setName("output");
			fUML_Tests_TestNodeEnabler_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestNodeEnabler_output->setLower(0);
			fUML_Tests_TestNodeEnabler_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestNodeEnabler_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestNodeEnabler->addOwnedParameter(fUML_Tests_TestNodeEnabler_output);
			// ValueSpecificationAction Value(1)
			fUML_Tests_TestNodeEnabler_Value_1->setThisExecutableNodePtr(fUML_Tests_TestNodeEnabler_Value_1);
			fUML_Tests_TestNodeEnabler_Value_1->setName("Value(1)");
			fUML_Tests_TestNodeEnabler_Value_1->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger632
				fUML_Tests_TestNodeEnabler_Value_1_LiteralInteger632->setThisElementPtr(fUML_Tests_TestNodeEnabler_Value_1_LiteralInteger632);
				fUML_Tests_TestNodeEnabler_Value_1_LiteralInteger632->setName("LiteralInteger632");
				fUML_Tests_TestNodeEnabler_Value_1_LiteralInteger632->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestNodeEnabler_Value_1_LiteralInteger632->setValue(1);
			fUML_Tests_TestNodeEnabler_Value_1->setValue(fUML_Tests_TestNodeEnabler_Value_1_LiteralInteger632);
				// OutputPin Value(1).result
				fUML_Tests_TestNodeEnabler_Value_1_Value_1_result->setThisElementPtr(fUML_Tests_TestNodeEnabler_Value_1_Value_1_result);
				fUML_Tests_TestNodeEnabler_Value_1_Value_1_result->setName("Value(1).result");
				fUML_Tests_TestNodeEnabler_Value_1_Value_1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestNodeEnabler_Value_1_Value_1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestNodeEnabler_Value_1->setResult(fUML_Tests_TestNodeEnabler_Value_1_Value_1_result);
		fUML_Tests_TestNodeEnabler->addNode(fUML_Tests_TestNodeEnabler_Value_1);
			// CallBehaviorAction Call(NodeEnabler)
			fUML_Tests_TestNodeEnabler_Call_NodeEnabler->setThisExecutableNodePtr(fUML_Tests_TestNodeEnabler_Call_NodeEnabler);
			fUML_Tests_TestNodeEnabler_Call_NodeEnabler->setName("Call(NodeEnabler)");
			fUML_Tests_TestNodeEnabler_Call_NodeEnabler->setVisibility(VisibilityKind::public_);
				// OutputPin Call(NodeEnabler).output
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output->setThisElementPtr(fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output);
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output->setName("Call(NodeEnabler).output");
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output->setLower(0);
			fUML_Tests_TestNodeEnabler_Call_NodeEnabler->addResult(fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output);
			fUML_Tests_TestNodeEnabler_Call_NodeEnabler->setBehavior(fUML_Tests_NodeEnabler);
				// InputPin Call(NodeEnabler).input
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input->setThisElementPtr(fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input);
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input->setName("Call(NodeEnabler).input");
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input->setLower(0);
			fUML_Tests_TestNodeEnabler_Call_NodeEnabler->addArgument(fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input);
		fUML_Tests_TestNodeEnabler->addNode(fUML_Tests_TestNodeEnabler_Call_NodeEnabler);
			// ActivityParameterNode outputNode
			fUML_Tests_TestNodeEnabler_outputNode->setThisElementPtr(fUML_Tests_TestNodeEnabler_outputNode);
			fUML_Tests_TestNodeEnabler_outputNode->setName("outputNode");
			fUML_Tests_TestNodeEnabler_outputNode->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestNodeEnabler_outputNode->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestNodeEnabler_outputNode->setParameter(fUML_Tests_TestNodeEnabler_output);
		fUML_Tests_TestNodeEnabler->addNode(fUML_Tests_TestNodeEnabler_outputNode);
			// ObjectFlow ObjectFlow633 from Call(NodeEnabler).output to outputNode
			fUML_Tests_TestNodeEnabler_ObjectFlow633->setThisActivityEdgePtr(fUML_Tests_TestNodeEnabler_ObjectFlow633);
			fUML_Tests_TestNodeEnabler_ObjectFlow633->setName("ObjectFlow633");
			fUML_Tests_TestNodeEnabler_ObjectFlow633->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestNodeEnabler_ObjectFlow633->setSource(fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output);
			fUML_Tests_TestNodeEnabler_ObjectFlow633->setTarget(fUML_Tests_TestNodeEnabler_outputNode);
		fUML_Tests_TestNodeEnabler->addEdge(fUML_Tests_TestNodeEnabler_ObjectFlow633);
			// ObjectFlow ObjectFlow635 from Value(1).result to Call(NodeEnabler).input
			fUML_Tests_TestNodeEnabler_ObjectFlow635->setThisActivityEdgePtr(fUML_Tests_TestNodeEnabler_ObjectFlow635);
			fUML_Tests_TestNodeEnabler_ObjectFlow635->setName("ObjectFlow635");
			fUML_Tests_TestNodeEnabler_ObjectFlow635->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestNodeEnabler_ObjectFlow635->setSource(fUML_Tests_TestNodeEnabler_Value_1_Value_1_result);
			fUML_Tests_TestNodeEnabler_ObjectFlow635->setTarget(fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input);
		fUML_Tests_TestNodeEnabler->addEdge(fUML_Tests_TestNodeEnabler_ObjectFlow635);
	fUML_Tests->addPackagedElement(fUML_Tests_TestNodeEnabler);
		// Activity TestIntegerFunctions
		fUML_Tests_TestIntegerFunctions->setThisActivityPtr(fUML_Tests_TestIntegerFunctions);
		fUML_Tests_TestIntegerFunctions->setName("TestIntegerFunctions");
		fUML_Tests_TestIntegerFunctions->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestIntegerFunctions->isReentrant = false;
			// Parameter NegResult
			fUML_Tests_TestIntegerFunctions_NegResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_NegResult);
			fUML_Tests_TestIntegerFunctions_NegResult->setName("NegResult");
			fUML_Tests_TestIntegerFunctions_NegResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_NegResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_NegResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerFunctions->addOwnedParameter(fUML_Tests_TestIntegerFunctions_NegResult);
			// Parameter PlusResult
			fUML_Tests_TestIntegerFunctions_PlusResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_PlusResult);
			fUML_Tests_TestIntegerFunctions_PlusResult->setName("PlusResult");
			fUML_Tests_TestIntegerFunctions_PlusResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_PlusResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_PlusResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerFunctions->addOwnedParameter(fUML_Tests_TestIntegerFunctions_PlusResult);
			// Parameter MinusResult
			fUML_Tests_TestIntegerFunctions_MinusResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_MinusResult);
			fUML_Tests_TestIntegerFunctions_MinusResult->setName("MinusResult");
			fUML_Tests_TestIntegerFunctions_MinusResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_MinusResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_MinusResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerFunctions->addOwnedParameter(fUML_Tests_TestIntegerFunctions_MinusResult);
			// Parameter TimesResult
			fUML_Tests_TestIntegerFunctions_TimesResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_TimesResult);
			fUML_Tests_TestIntegerFunctions_TimesResult->setName("TimesResult");
			fUML_Tests_TestIntegerFunctions_TimesResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_TimesResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_TimesResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerFunctions->addOwnedParameter(fUML_Tests_TestIntegerFunctions_TimesResult);
			// Parameter DivResult
			fUML_Tests_TestIntegerFunctions_DivResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_DivResult);
			fUML_Tests_TestIntegerFunctions_DivResult->setName("DivResult");
			fUML_Tests_TestIntegerFunctions_DivResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_DivResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_DivResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerFunctions->addOwnedParameter(fUML_Tests_TestIntegerFunctions_DivResult);
			// Parameter ModResult
			fUML_Tests_TestIntegerFunctions_ModResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_ModResult);
			fUML_Tests_TestIntegerFunctions_ModResult->setName("ModResult");
			fUML_Tests_TestIntegerFunctions_ModResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ModResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_ModResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerFunctions->addOwnedParameter(fUML_Tests_TestIntegerFunctions_ModResult);
			// Parameter MaxResult
			fUML_Tests_TestIntegerFunctions_MaxResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_MaxResult);
			fUML_Tests_TestIntegerFunctions_MaxResult->setName("MaxResult");
			fUML_Tests_TestIntegerFunctions_MaxResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_MaxResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_MaxResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerFunctions->addOwnedParameter(fUML_Tests_TestIntegerFunctions_MaxResult);
			// Parameter MinResult
			fUML_Tests_TestIntegerFunctions_MinResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_MinResult);
			fUML_Tests_TestIntegerFunctions_MinResult->setName("MinResult");
			fUML_Tests_TestIntegerFunctions_MinResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_MinResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_MinResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerFunctions->addOwnedParameter(fUML_Tests_TestIntegerFunctions_MinResult);
			// Parameter AbsResult
			fUML_Tests_TestIntegerFunctions_AbsResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_AbsResult);
			fUML_Tests_TestIntegerFunctions_AbsResult->setName("AbsResult");
			fUML_Tests_TestIntegerFunctions_AbsResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_AbsResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_AbsResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerFunctions->addOwnedParameter(fUML_Tests_TestIntegerFunctions_AbsResult);
			// ActivityParameterNode Param(TimesResult)
			fUML_Tests_TestIntegerFunctions_Param_TimesResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Param_TimesResult);
			fUML_Tests_TestIntegerFunctions_Param_TimesResult->setName("Param(TimesResult)");
			fUML_Tests_TestIntegerFunctions_Param_TimesResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerFunctions_Param_TimesResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Param_TimesResult->setParameter(fUML_Tests_TestIntegerFunctions_TimesResult);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Param_TimesResult);
			// ForkNode Fork(2)
			fUML_Tests_TestIntegerFunctions_Fork_2->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Fork_2);
			fUML_Tests_TestIntegerFunctions_Fork_2->setName("Fork(2)");
			fUML_Tests_TestIntegerFunctions_Fork_2->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Fork_2);
			// CallBehaviorAction Call(Neg)
			fUML_Tests_TestIntegerFunctions_Call_Neg->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Call_Neg);
			fUML_Tests_TestIntegerFunctions_Call_Neg->setName("Call(Neg)");
			fUML_Tests_TestIntegerFunctions_Call_Neg->setVisibility(VisibilityKind::public_);
				// OutputPin Neg.result
				fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result);
				fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result->setName("Neg.result");
				fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Neg->addResult(fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result);
			fUML_Tests_TestIntegerFunctions_Call_Neg->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_Neg);
				// InputPin Neg.x
				fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x);
				fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x->setName("Neg.x");
				fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Neg->addArgument(fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Call_Neg);
			// CallBehaviorAction Call(Div)
			fUML_Tests_TestIntegerFunctions_Call_Div->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Call_Div);
			fUML_Tests_TestIntegerFunctions_Call_Div->setName("Call(Div)");
			fUML_Tests_TestIntegerFunctions_Call_Div->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestIntegerFunctions_Call_Div_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Div_result);
				fUML_Tests_TestIntegerFunctions_Call_Div_result->setName("result");
				fUML_Tests_TestIntegerFunctions_Call_Div_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Div_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_TestIntegerFunctions_Call_Div_result->setLower(0);
			fUML_Tests_TestIntegerFunctions_Call_Div->addResult(fUML_Tests_TestIntegerFunctions_Call_Div_result);
			fUML_Tests_TestIntegerFunctions_Call_Div->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_Div);
				// InputPin Div.x
				fUML_Tests_TestIntegerFunctions_Call_Div_Div_x->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Div_Div_x);
				fUML_Tests_TestIntegerFunctions_Call_Div_Div_x->setName("Div.x");
				fUML_Tests_TestIntegerFunctions_Call_Div_Div_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Div_Div_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Div->addArgument(fUML_Tests_TestIntegerFunctions_Call_Div_Div_x);
				// InputPin Div.y
				fUML_Tests_TestIntegerFunctions_Call_Div_Div_y->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Div_Div_y);
				fUML_Tests_TestIntegerFunctions_Call_Div_Div_y->setName("Div.y");
				fUML_Tests_TestIntegerFunctions_Call_Div_Div_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Div_Div_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Div->addArgument(fUML_Tests_TestIntegerFunctions_Call_Div_Div_y);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Call_Div);
			// ValueSpecificationAction Value(neg 2)
			fUML_Tests_TestIntegerFunctions_Value_neg_2->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Value_neg_2);
			fUML_Tests_TestIntegerFunctions_Value_neg_2->setName("Value(neg 2)");
			fUML_Tests_TestIntegerFunctions_Value_neg_2->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger659
				fUML_Tests_TestIntegerFunctions_Value_neg_2_LiteralInteger659->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Value_neg_2_LiteralInteger659);
				fUML_Tests_TestIntegerFunctions_Value_neg_2_LiteralInteger659->setName("LiteralInteger659");
				fUML_Tests_TestIntegerFunctions_Value_neg_2_LiteralInteger659->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Value_neg_2_LiteralInteger659->setValue(-2);
			fUML_Tests_TestIntegerFunctions_Value_neg_2->setValue(fUML_Tests_TestIntegerFunctions_Value_neg_2_LiteralInteger659);
				// OutputPin Value(-2).result
				fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result);
				fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result->setName("Value(-2).result");
				fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Value_neg_2->setResult(fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Value_neg_2);
			// ActivityParameterNode Param(MaxResult)
			fUML_Tests_TestIntegerFunctions_Param_MaxResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Param_MaxResult);
			fUML_Tests_TestIntegerFunctions_Param_MaxResult->setName("Param(MaxResult)");
			fUML_Tests_TestIntegerFunctions_Param_MaxResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerFunctions_Param_MaxResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Param_MaxResult->setParameter(fUML_Tests_TestIntegerFunctions_MaxResult);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Param_MaxResult);
			// ValueSpecificationAction Value(3)
			fUML_Tests_TestIntegerFunctions_Value_3->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Value_3);
			fUML_Tests_TestIntegerFunctions_Value_3->setName("Value(3)");
			fUML_Tests_TestIntegerFunctions_Value_3->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger660
				fUML_Tests_TestIntegerFunctions_Value_3_LiteralInteger660->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Value_3_LiteralInteger660);
				fUML_Tests_TestIntegerFunctions_Value_3_LiteralInteger660->setName("LiteralInteger660");
				fUML_Tests_TestIntegerFunctions_Value_3_LiteralInteger660->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Value_3_LiteralInteger660->setValue(3);
			fUML_Tests_TestIntegerFunctions_Value_3->setValue(fUML_Tests_TestIntegerFunctions_Value_3_LiteralInteger660);
				// OutputPin Value(3).result
				fUML_Tests_TestIntegerFunctions_Value_3_Value_3_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Value_3_Value_3_result);
				fUML_Tests_TestIntegerFunctions_Value_3_Value_3_result->setName("Value(3).result");
				fUML_Tests_TestIntegerFunctions_Value_3_Value_3_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Value_3_Value_3_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Value_3->setResult(fUML_Tests_TestIntegerFunctions_Value_3_Value_3_result);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Value_3);
			// CallBehaviorAction Call(Minus)
			fUML_Tests_TestIntegerFunctions_Call_Minus->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Call_Minus);
			fUML_Tests_TestIntegerFunctions_Call_Minus->setName("Call(Minus)");
			fUML_Tests_TestIntegerFunctions_Call_Minus->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestIntegerFunctions_Call_Minus_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Minus_result);
				fUML_Tests_TestIntegerFunctions_Call_Minus_result->setName("result");
				fUML_Tests_TestIntegerFunctions_Call_Minus_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Minus_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Minus->addResult(fUML_Tests_TestIntegerFunctions_Call_Minus_result);
			fUML_Tests_TestIntegerFunctions_Call_Minus->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_minus);
				// InputPin x
				fUML_Tests_TestIntegerFunctions_Call_Minus_x->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Minus_x);
				fUML_Tests_TestIntegerFunctions_Call_Minus_x->setName("x");
				fUML_Tests_TestIntegerFunctions_Call_Minus_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Minus_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Minus->addArgument(fUML_Tests_TestIntegerFunctions_Call_Minus_x);
				// InputPin y
				fUML_Tests_TestIntegerFunctions_Call_Minus_y->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Minus_y);
				fUML_Tests_TestIntegerFunctions_Call_Minus_y->setName("y");
				fUML_Tests_TestIntegerFunctions_Call_Minus_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Minus_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Minus->addArgument(fUML_Tests_TestIntegerFunctions_Call_Minus_y);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Call_Minus);
			// ValueSpecificationAction Value(2)
			fUML_Tests_TestIntegerFunctions_Value_2->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Value_2);
			fUML_Tests_TestIntegerFunctions_Value_2->setName("Value(2)");
			fUML_Tests_TestIntegerFunctions_Value_2->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger692
				fUML_Tests_TestIntegerFunctions_Value_2_LiteralInteger692->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Value_2_LiteralInteger692);
				fUML_Tests_TestIntegerFunctions_Value_2_LiteralInteger692->setName("LiteralInteger692");
				fUML_Tests_TestIntegerFunctions_Value_2_LiteralInteger692->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Value_2_LiteralInteger692->setValue(2);
			fUML_Tests_TestIntegerFunctions_Value_2->setValue(fUML_Tests_TestIntegerFunctions_Value_2_LiteralInteger692);
				// OutputPin Value(2).result
				fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result);
				fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result->setName("Value(2).result");
				fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Value_2->setResult(fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Value_2);
			// ActivityParameterNode Param(MinusResult)
			fUML_Tests_TestIntegerFunctions_Param_MinusResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Param_MinusResult);
			fUML_Tests_TestIntegerFunctions_Param_MinusResult->setName("Param(MinusResult)");
			fUML_Tests_TestIntegerFunctions_Param_MinusResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerFunctions_Param_MinusResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Param_MinusResult->setParameter(fUML_Tests_TestIntegerFunctions_MinusResult);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Param_MinusResult);
			// ActivityParameterNode Param(DivResult)
			fUML_Tests_TestIntegerFunctions_Param_DivResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Param_DivResult);
			fUML_Tests_TestIntegerFunctions_Param_DivResult->setName("Param(DivResult)");
			fUML_Tests_TestIntegerFunctions_Param_DivResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerFunctions_Param_DivResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Param_DivResult->setParameter(fUML_Tests_TestIntegerFunctions_DivResult);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Param_DivResult);
			// CallBehaviorAction Call(Plus)
			fUML_Tests_TestIntegerFunctions_Call_Plus->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Call_Plus);
			fUML_Tests_TestIntegerFunctions_Call_Plus->setName("Call(Plus)");
			fUML_Tests_TestIntegerFunctions_Call_Plus->setVisibility(VisibilityKind::public_);
				// OutputPin Plus.result
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result);
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result->setName("Plus.result");
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Plus->addResult(fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result);
			fUML_Tests_TestIntegerFunctions_Call_Plus->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_plus);
				// InputPin Plus.x
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x);
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x->setName("Plus.x");
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Plus->addArgument(fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x);
				// InputPin Plus.y
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y);
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y->setName("Plus.y");
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Plus->addArgument(fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Call_Plus);
			// ActivityParameterNode Param(MinResult)
			fUML_Tests_TestIntegerFunctions_Param_MinResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Param_MinResult);
			fUML_Tests_TestIntegerFunctions_Param_MinResult->setName("Param(MinResult)");
			fUML_Tests_TestIntegerFunctions_Param_MinResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerFunctions_Param_MinResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Param_MinResult->setParameter(fUML_Tests_TestIntegerFunctions_MinResult);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Param_MinResult);
			// ActivityParameterNode Param(PlusResult)
			fUML_Tests_TestIntegerFunctions_Param_PlusResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Param_PlusResult);
			fUML_Tests_TestIntegerFunctions_Param_PlusResult->setName("Param(PlusResult)");
			fUML_Tests_TestIntegerFunctions_Param_PlusResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerFunctions_Param_PlusResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Param_PlusResult->setParameter(fUML_Tests_TestIntegerFunctions_PlusResult);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Param_PlusResult);
			// CallBehaviorAction Call(Times)
			fUML_Tests_TestIntegerFunctions_Call_Times->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Call_Times);
			fUML_Tests_TestIntegerFunctions_Call_Times->setName("Call(Times)");
			fUML_Tests_TestIntegerFunctions_Call_Times->setVisibility(VisibilityKind::public_);
				// OutputPin Times.result
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Times_Times_result);
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_result->setName("Times.result");
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Times->addResult(fUML_Tests_TestIntegerFunctions_Call_Times_Times_result);
			fUML_Tests_TestIntegerFunctions_Call_Times->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_times);
				// InputPin Times.x
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_x->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Times_Times_x);
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_x->setName("Times.x");
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Times->addArgument(fUML_Tests_TestIntegerFunctions_Call_Times_Times_x);
				// InputPin Times.y
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_y->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Times_Times_y);
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_y->setName("Times.y");
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Times->addArgument(fUML_Tests_TestIntegerFunctions_Call_Times_Times_y);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Call_Times);
			// ActivityParameterNode Param(NegResult)
			fUML_Tests_TestIntegerFunctions_Param_NegResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Param_NegResult);
			fUML_Tests_TestIntegerFunctions_Param_NegResult->setName("Param(NegResult)");
			fUML_Tests_TestIntegerFunctions_Param_NegResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerFunctions_Param_NegResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Param_NegResult->setParameter(fUML_Tests_TestIntegerFunctions_NegResult);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Param_NegResult);
			// CallBehaviorAction Call(Abs)
			fUML_Tests_TestIntegerFunctions_Call_Abs->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Call_Abs);
			fUML_Tests_TestIntegerFunctions_Call_Abs->setName("Call(Abs)");
			fUML_Tests_TestIntegerFunctions_Call_Abs->setVisibility(VisibilityKind::public_);
				// OutputPin Abs.result
				fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result);
				fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result->setName("Abs.result");
				fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Abs->addResult(fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result);
			fUML_Tests_TestIntegerFunctions_Call_Abs->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_Abs);
				// InputPin Abs.x
				fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x);
				fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x->setName("Abs.x");
				fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Abs->addArgument(fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Call_Abs);
			// ActivityParameterNode Param(ModResult)
			fUML_Tests_TestIntegerFunctions_Param_ModResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Param_ModResult);
			fUML_Tests_TestIntegerFunctions_Param_ModResult->setName("Param(ModResult)");
			fUML_Tests_TestIntegerFunctions_Param_ModResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerFunctions_Param_ModResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Param_ModResult->setParameter(fUML_Tests_TestIntegerFunctions_ModResult);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Param_ModResult);
			// ForkNode Fork(3)
			fUML_Tests_TestIntegerFunctions_Fork_3->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Fork_3);
			fUML_Tests_TestIntegerFunctions_Fork_3->setName("Fork(3)");
			fUML_Tests_TestIntegerFunctions_Fork_3->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Fork_3);
			// CallBehaviorAction Call(Min)
			fUML_Tests_TestIntegerFunctions_Call_Min->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Call_Min);
			fUML_Tests_TestIntegerFunctions_Call_Min->setName("Call(Min)");
			fUML_Tests_TestIntegerFunctions_Call_Min->setVisibility(VisibilityKind::public_);
				// OutputPin Min.result
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Min_Min_result);
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_result->setName("Min.result");
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Min->addResult(fUML_Tests_TestIntegerFunctions_Call_Min_Min_result);
			fUML_Tests_TestIntegerFunctions_Call_Min->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_Min);
				// InputPin Min.x
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_x->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Min_Min_x);
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_x->setName("Min.x");
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Min->addArgument(fUML_Tests_TestIntegerFunctions_Call_Min_Min_x);
				// InputPin Min.y
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_y->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Min_Min_y);
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_y->setName("Min.y");
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Min->addArgument(fUML_Tests_TestIntegerFunctions_Call_Min_Min_y);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Call_Min);
			// ActivityParameterNode Param(AbsResult)
			fUML_Tests_TestIntegerFunctions_Param_AbsResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Param_AbsResult);
			fUML_Tests_TestIntegerFunctions_Param_AbsResult->setName("Param(AbsResult)");
			fUML_Tests_TestIntegerFunctions_Param_AbsResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerFunctions_Param_AbsResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Param_AbsResult->setParameter(fUML_Tests_TestIntegerFunctions_AbsResult);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Param_AbsResult);
			// CallBehaviorAction Call(Max)
			fUML_Tests_TestIntegerFunctions_Call_Max->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Call_Max);
			fUML_Tests_TestIntegerFunctions_Call_Max->setName("Call(Max)");
			fUML_Tests_TestIntegerFunctions_Call_Max->setVisibility(VisibilityKind::public_);
				// OutputPin Max.result
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Max_Max_result);
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_result->setName("Max.result");
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Max->addResult(fUML_Tests_TestIntegerFunctions_Call_Max_Max_result);
			fUML_Tests_TestIntegerFunctions_Call_Max->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_Max);
				// InputPin Max.x
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_x->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Max_Max_x);
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_x->setName("Max.x");
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Max->addArgument(fUML_Tests_TestIntegerFunctions_Call_Max_Max_x);
				// InputPin Max.y
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_y->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Max_Max_y);
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_y->setName("Max.y");
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Max->addArgument(fUML_Tests_TestIntegerFunctions_Call_Max_Max_y);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Call_Max);
			// CallBehaviorAction Call(Mod)
			fUML_Tests_TestIntegerFunctions_Call_Mod->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Call_Mod);
			fUML_Tests_TestIntegerFunctions_Call_Mod->setName("Call(Mod)");
			fUML_Tests_TestIntegerFunctions_Call_Mod->setVisibility(VisibilityKind::public_);
				// OutputPin Mod.result
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result);
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result->setName("Mod.result");
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Mod->addResult(fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result);
			fUML_Tests_TestIntegerFunctions_Call_Mod->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_Mod);
				// InputPin Mod.x
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x);
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x->setName("Mod.x");
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Mod->addArgument(fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x);
				// InputPin Mod.y
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y);
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y->setName("Mod.y");
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Mod->addArgument(fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Call_Mod);
			// ObjectFlow ObjectFlow643 from Max.result to Param(MaxResult)
			fUML_Tests_TestIntegerFunctions_ObjectFlow643->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow643);
			fUML_Tests_TestIntegerFunctions_ObjectFlow643->setName("ObjectFlow643");
			fUML_Tests_TestIntegerFunctions_ObjectFlow643->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow643->setSource(fUML_Tests_TestIntegerFunctions_Call_Max_Max_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow643->setTarget(fUML_Tests_TestIntegerFunctions_Param_MaxResult);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow643);
			// ControlFlow ControlFlow709 from Call(Max) to Call(Min)
			fUML_Tests_TestIntegerFunctions_ControlFlow709->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ControlFlow709);
			fUML_Tests_TestIntegerFunctions_ControlFlow709->setName("ControlFlow709");
			fUML_Tests_TestIntegerFunctions_ControlFlow709->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ControlFlow709->setSource(fUML_Tests_TestIntegerFunctions_Call_Max);
			fUML_Tests_TestIntegerFunctions_ControlFlow709->setTarget(fUML_Tests_TestIntegerFunctions_Call_Min);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ControlFlow709);
			// ObjectFlow ObjectFlow711 from Fork(3) to Plus.x
			fUML_Tests_TestIntegerFunctions_ObjectFlow711->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow711);
			fUML_Tests_TestIntegerFunctions_ObjectFlow711->setName("ObjectFlow711");
			fUML_Tests_TestIntegerFunctions_ObjectFlow711->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow711->setSource(fUML_Tests_TestIntegerFunctions_Fork_3);
			fUML_Tests_TestIntegerFunctions_ObjectFlow711->setTarget(fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow711);
			// ObjectFlow ObjectFlow645 from Plus.result to Param(PlusResult)
			fUML_Tests_TestIntegerFunctions_ObjectFlow645->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow645);
			fUML_Tests_TestIntegerFunctions_ObjectFlow645->setName("ObjectFlow645");
			fUML_Tests_TestIntegerFunctions_ObjectFlow645->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow645->setSource(fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow645->setTarget(fUML_Tests_TestIntegerFunctions_Param_PlusResult);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow645);
			// ObjectFlow ObjectFlow647 from Value(-2).result to Abs.x
			fUML_Tests_TestIntegerFunctions_ObjectFlow647->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow647);
			fUML_Tests_TestIntegerFunctions_ObjectFlow647->setName("ObjectFlow647");
			fUML_Tests_TestIntegerFunctions_ObjectFlow647->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow647->setSource(fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow647->setTarget(fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow647);
			// ControlFlow ControlFlow649 from Call(Times) to Call(Div)
			fUML_Tests_TestIntegerFunctions_ControlFlow649->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ControlFlow649);
			fUML_Tests_TestIntegerFunctions_ControlFlow649->setName("ControlFlow649");
			fUML_Tests_TestIntegerFunctions_ControlFlow649->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ControlFlow649->setSource(fUML_Tests_TestIntegerFunctions_Call_Times);
			fUML_Tests_TestIntegerFunctions_ControlFlow649->setTarget(fUML_Tests_TestIntegerFunctions_Call_Div);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ControlFlow649);
			// ControlFlow ControlFlow713 from Call(Min) to Call(Abs)
			fUML_Tests_TestIntegerFunctions_ControlFlow713->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ControlFlow713);
			fUML_Tests_TestIntegerFunctions_ControlFlow713->setName("ControlFlow713");
			fUML_Tests_TestIntegerFunctions_ControlFlow713->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ControlFlow713->setSource(fUML_Tests_TestIntegerFunctions_Call_Min);
			fUML_Tests_TestIntegerFunctions_ControlFlow713->setTarget(fUML_Tests_TestIntegerFunctions_Call_Abs);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ControlFlow713);
			// ObjectFlow ObjectFlow715 from Mod.result to Param(ModResult)
			fUML_Tests_TestIntegerFunctions_ObjectFlow715->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow715);
			fUML_Tests_TestIntegerFunctions_ObjectFlow715->setName("ObjectFlow715");
			fUML_Tests_TestIntegerFunctions_ObjectFlow715->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow715->setSource(fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow715->setTarget(fUML_Tests_TestIntegerFunctions_Param_ModResult);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow715);
			// ObjectFlow ObjectFlow717 from Fork(3) to Div.x
			fUML_Tests_TestIntegerFunctions_ObjectFlow717->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow717);
			fUML_Tests_TestIntegerFunctions_ObjectFlow717->setName("ObjectFlow717");
			fUML_Tests_TestIntegerFunctions_ObjectFlow717->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow717->setSource(fUML_Tests_TestIntegerFunctions_Fork_3);
			fUML_Tests_TestIntegerFunctions_ObjectFlow717->setTarget(fUML_Tests_TestIntegerFunctions_Call_Div_Div_x);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow717);
			// ControlFlow ControlFlow725 from Call(Minus) to Call(Times)
			fUML_Tests_TestIntegerFunctions_ControlFlow725->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ControlFlow725);
			fUML_Tests_TestIntegerFunctions_ControlFlow725->setName("ControlFlow725");
			fUML_Tests_TestIntegerFunctions_ControlFlow725->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ControlFlow725->setSource(fUML_Tests_TestIntegerFunctions_Call_Minus);
			fUML_Tests_TestIntegerFunctions_ControlFlow725->setTarget(fUML_Tests_TestIntegerFunctions_Call_Times);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ControlFlow725);
			// ObjectFlow ObjectFlow661 from result to Param(DivResult)
			fUML_Tests_TestIntegerFunctions_ObjectFlow661->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow661);
			fUML_Tests_TestIntegerFunctions_ObjectFlow661->setName("ObjectFlow661");
			fUML_Tests_TestIntegerFunctions_ObjectFlow661->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow661->setSource(fUML_Tests_TestIntegerFunctions_Call_Div_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow661->setTarget(fUML_Tests_TestIntegerFunctions_Param_DivResult);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow661);
			// ObjectFlow ObjectFlow663 from Fork(2) to Mod.y
			fUML_Tests_TestIntegerFunctions_ObjectFlow663->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow663);
			fUML_Tests_TestIntegerFunctions_ObjectFlow663->setName("ObjectFlow663");
			fUML_Tests_TestIntegerFunctions_ObjectFlow663->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow663->setSource(fUML_Tests_TestIntegerFunctions_Fork_2);
			fUML_Tests_TestIntegerFunctions_ObjectFlow663->setTarget(fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow663);
			// ControlFlow ControlFlow665 from Call(Neg) to Call(Plus)
			fUML_Tests_TestIntegerFunctions_ControlFlow665->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ControlFlow665);
			fUML_Tests_TestIntegerFunctions_ControlFlow665->setName("ControlFlow665");
			fUML_Tests_TestIntegerFunctions_ControlFlow665->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ControlFlow665->setSource(fUML_Tests_TestIntegerFunctions_Call_Neg);
			fUML_Tests_TestIntegerFunctions_ControlFlow665->setTarget(fUML_Tests_TestIntegerFunctions_Call_Plus);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ControlFlow665);
			// ObjectFlow ObjectFlow727 from Fork(3) to Neg.x
			fUML_Tests_TestIntegerFunctions_ObjectFlow727->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow727);
			fUML_Tests_TestIntegerFunctions_ObjectFlow727->setName("ObjectFlow727");
			fUML_Tests_TestIntegerFunctions_ObjectFlow727->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow727->setSource(fUML_Tests_TestIntegerFunctions_Fork_3);
			fUML_Tests_TestIntegerFunctions_ObjectFlow727->setTarget(fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow727);
			// ObjectFlow ObjectFlow667 from Fork(2) to Min.y
			fUML_Tests_TestIntegerFunctions_ObjectFlow667->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow667);
			fUML_Tests_TestIntegerFunctions_ObjectFlow667->setName("ObjectFlow667");
			fUML_Tests_TestIntegerFunctions_ObjectFlow667->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow667->setSource(fUML_Tests_TestIntegerFunctions_Fork_2);
			fUML_Tests_TestIntegerFunctions_ObjectFlow667->setTarget(fUML_Tests_TestIntegerFunctions_Call_Min_Min_y);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow667);
			// ObjectFlow ObjectFlow729 from Fork(2) to Times.y
			fUML_Tests_TestIntegerFunctions_ObjectFlow729->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow729);
			fUML_Tests_TestIntegerFunctions_ObjectFlow729->setName("ObjectFlow729");
			fUML_Tests_TestIntegerFunctions_ObjectFlow729->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow729->setSource(fUML_Tests_TestIntegerFunctions_Fork_2);
			fUML_Tests_TestIntegerFunctions_ObjectFlow729->setTarget(fUML_Tests_TestIntegerFunctions_Call_Times_Times_y);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow729);
			// ObjectFlow ObjectFlow669 from Fork(2) to Plus.y
			fUML_Tests_TestIntegerFunctions_ObjectFlow669->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow669);
			fUML_Tests_TestIntegerFunctions_ObjectFlow669->setName("ObjectFlow669");
			fUML_Tests_TestIntegerFunctions_ObjectFlow669->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow669->setSource(fUML_Tests_TestIntegerFunctions_Fork_2);
			fUML_Tests_TestIntegerFunctions_ObjectFlow669->setTarget(fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow669);
			// ObjectFlow ObjectFlow677 from Fork(3) to Times.x
			fUML_Tests_TestIntegerFunctions_ObjectFlow677->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow677);
			fUML_Tests_TestIntegerFunctions_ObjectFlow677->setName("ObjectFlow677");
			fUML_Tests_TestIntegerFunctions_ObjectFlow677->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow677->setSource(fUML_Tests_TestIntegerFunctions_Fork_3);
			fUML_Tests_TestIntegerFunctions_ObjectFlow677->setTarget(fUML_Tests_TestIntegerFunctions_Call_Times_Times_x);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow677);
			// ObjectFlow ObjectFlow679 from Fork(3) to Mod.x
			fUML_Tests_TestIntegerFunctions_ObjectFlow679->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow679);
			fUML_Tests_TestIntegerFunctions_ObjectFlow679->setName("ObjectFlow679");
			fUML_Tests_TestIntegerFunctions_ObjectFlow679->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow679->setSource(fUML_Tests_TestIntegerFunctions_Fork_3);
			fUML_Tests_TestIntegerFunctions_ObjectFlow679->setTarget(fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow679);
			// ObjectFlow ObjectFlow731 from Value(2).result to Fork(2)
			fUML_Tests_TestIntegerFunctions_ObjectFlow731->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow731);
			fUML_Tests_TestIntegerFunctions_ObjectFlow731->setName("ObjectFlow731");
			fUML_Tests_TestIntegerFunctions_ObjectFlow731->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow731->setSource(fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow731->setTarget(fUML_Tests_TestIntegerFunctions_Fork_2);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow731);
			// ObjectFlow ObjectFlow733 from result to Param(MinusResult)
			fUML_Tests_TestIntegerFunctions_ObjectFlow733->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow733);
			fUML_Tests_TestIntegerFunctions_ObjectFlow733->setName("ObjectFlow733");
			fUML_Tests_TestIntegerFunctions_ObjectFlow733->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow733->setSource(fUML_Tests_TestIntegerFunctions_Call_Minus_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow733->setTarget(fUML_Tests_TestIntegerFunctions_Param_MinusResult);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow733);
			// ObjectFlow ObjectFlow687 from Fork(3) to Max.x
			fUML_Tests_TestIntegerFunctions_ObjectFlow687->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow687);
			fUML_Tests_TestIntegerFunctions_ObjectFlow687->setName("ObjectFlow687");
			fUML_Tests_TestIntegerFunctions_ObjectFlow687->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow687->setSource(fUML_Tests_TestIntegerFunctions_Fork_3);
			fUML_Tests_TestIntegerFunctions_ObjectFlow687->setTarget(fUML_Tests_TestIntegerFunctions_Call_Max_Max_x);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow687);
			// ObjectFlow ObjectFlow735 from Fork(3) to Min.x
			fUML_Tests_TestIntegerFunctions_ObjectFlow735->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow735);
			fUML_Tests_TestIntegerFunctions_ObjectFlow735->setName("ObjectFlow735");
			fUML_Tests_TestIntegerFunctions_ObjectFlow735->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow735->setSource(fUML_Tests_TestIntegerFunctions_Fork_3);
			fUML_Tests_TestIntegerFunctions_ObjectFlow735->setTarget(fUML_Tests_TestIntegerFunctions_Call_Min_Min_x);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow735);
			// ControlFlow ControlFlow741 from Call(Mod) to Call(Max)
			fUML_Tests_TestIntegerFunctions_ControlFlow741->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ControlFlow741);
			fUML_Tests_TestIntegerFunctions_ControlFlow741->setName("ControlFlow741");
			fUML_Tests_TestIntegerFunctions_ControlFlow741->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ControlFlow741->setSource(fUML_Tests_TestIntegerFunctions_Call_Mod);
			fUML_Tests_TestIntegerFunctions_ControlFlow741->setTarget(fUML_Tests_TestIntegerFunctions_Call_Max);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ControlFlow741);
			// ObjectFlow ObjectFlow689 from Fork(2) to Div.y
			fUML_Tests_TestIntegerFunctions_ObjectFlow689->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow689);
			fUML_Tests_TestIntegerFunctions_ObjectFlow689->setName("ObjectFlow689");
			fUML_Tests_TestIntegerFunctions_ObjectFlow689->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow689->setSource(fUML_Tests_TestIntegerFunctions_Fork_2);
			fUML_Tests_TestIntegerFunctions_ObjectFlow689->setTarget(fUML_Tests_TestIntegerFunctions_Call_Div_Div_y);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow689);
			// ObjectFlow ObjectFlow743 from Value(3).result to Fork(3)
			fUML_Tests_TestIntegerFunctions_ObjectFlow743->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow743);
			fUML_Tests_TestIntegerFunctions_ObjectFlow743->setName("ObjectFlow743");
			fUML_Tests_TestIntegerFunctions_ObjectFlow743->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow743->setSource(fUML_Tests_TestIntegerFunctions_Value_3_Value_3_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow743->setTarget(fUML_Tests_TestIntegerFunctions_Fork_3);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow743);
			// ObjectFlow ObjectFlow751 from Times.result to Param(TimesResult)
			fUML_Tests_TestIntegerFunctions_ObjectFlow751->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow751);
			fUML_Tests_TestIntegerFunctions_ObjectFlow751->setName("ObjectFlow751");
			fUML_Tests_TestIntegerFunctions_ObjectFlow751->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow751->setSource(fUML_Tests_TestIntegerFunctions_Call_Times_Times_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow751->setTarget(fUML_Tests_TestIntegerFunctions_Param_TimesResult);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow751);
			// ObjectFlow ObjectFlow753 from Fork(2) to y
			fUML_Tests_TestIntegerFunctions_ObjectFlow753->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow753);
			fUML_Tests_TestIntegerFunctions_ObjectFlow753->setName("ObjectFlow753");
			fUML_Tests_TestIntegerFunctions_ObjectFlow753->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow753->setSource(fUML_Tests_TestIntegerFunctions_Fork_2);
			fUML_Tests_TestIntegerFunctions_ObjectFlow753->setTarget(fUML_Tests_TestIntegerFunctions_Call_Minus_y);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow753);
			// ObjectFlow ObjectFlow693 from Neg.result to Param(NegResult)
			fUML_Tests_TestIntegerFunctions_ObjectFlow693->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow693);
			fUML_Tests_TestIntegerFunctions_ObjectFlow693->setName("ObjectFlow693");
			fUML_Tests_TestIntegerFunctions_ObjectFlow693->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow693->setSource(fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow693->setTarget(fUML_Tests_TestIntegerFunctions_Param_NegResult);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow693);
			// ControlFlow ControlFlow695 from Call(Plus) to Call(Minus)
			fUML_Tests_TestIntegerFunctions_ControlFlow695->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ControlFlow695);
			fUML_Tests_TestIntegerFunctions_ControlFlow695->setName("ControlFlow695");
			fUML_Tests_TestIntegerFunctions_ControlFlow695->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ControlFlow695->setSource(fUML_Tests_TestIntegerFunctions_Call_Plus);
			fUML_Tests_TestIntegerFunctions_ControlFlow695->setTarget(fUML_Tests_TestIntegerFunctions_Call_Minus);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ControlFlow695);
			// ControlFlow ControlFlow697 from Call(Div) to Call(Mod)
			fUML_Tests_TestIntegerFunctions_ControlFlow697->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ControlFlow697);
			fUML_Tests_TestIntegerFunctions_ControlFlow697->setName("ControlFlow697");
			fUML_Tests_TestIntegerFunctions_ControlFlow697->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ControlFlow697->setSource(fUML_Tests_TestIntegerFunctions_Call_Div);
			fUML_Tests_TestIntegerFunctions_ControlFlow697->setTarget(fUML_Tests_TestIntegerFunctions_Call_Mod);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ControlFlow697);
			// ObjectFlow ObjectFlow699 from Fork(3) to x
			fUML_Tests_TestIntegerFunctions_ObjectFlow699->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow699);
			fUML_Tests_TestIntegerFunctions_ObjectFlow699->setName("ObjectFlow699");
			fUML_Tests_TestIntegerFunctions_ObjectFlow699->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow699->setSource(fUML_Tests_TestIntegerFunctions_Fork_3);
			fUML_Tests_TestIntegerFunctions_ObjectFlow699->setTarget(fUML_Tests_TestIntegerFunctions_Call_Minus_x);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow699);
			// ObjectFlow ObjectFlow701 from Fork(2) to Max.y
			fUML_Tests_TestIntegerFunctions_ObjectFlow701->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow701);
			fUML_Tests_TestIntegerFunctions_ObjectFlow701->setName("ObjectFlow701");
			fUML_Tests_TestIntegerFunctions_ObjectFlow701->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow701->setSource(fUML_Tests_TestIntegerFunctions_Fork_2);
			fUML_Tests_TestIntegerFunctions_ObjectFlow701->setTarget(fUML_Tests_TestIntegerFunctions_Call_Max_Max_y);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow701);
			// ObjectFlow ObjectFlow765 from Min.result to Param(MinResult)
			fUML_Tests_TestIntegerFunctions_ObjectFlow765->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow765);
			fUML_Tests_TestIntegerFunctions_ObjectFlow765->setName("ObjectFlow765");
			fUML_Tests_TestIntegerFunctions_ObjectFlow765->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow765->setSource(fUML_Tests_TestIntegerFunctions_Call_Min_Min_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow765->setTarget(fUML_Tests_TestIntegerFunctions_Param_MinResult);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow765);
			// ObjectFlow ObjectFlow767 from Abs.result to Param(AbsResult)
			fUML_Tests_TestIntegerFunctions_ObjectFlow767->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow767);
			fUML_Tests_TestIntegerFunctions_ObjectFlow767->setName("ObjectFlow767");
			fUML_Tests_TestIntegerFunctions_ObjectFlow767->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow767->setSource(fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow767->setTarget(fUML_Tests_TestIntegerFunctions_Param_AbsResult);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow767);
	fUML_Tests->addPackagedElement(fUML_Tests_TestIntegerFunctions);
		// Activity SelfReader
		fUML_Tests_SelfReader->setThisActivityPtr(fUML_Tests_SelfReader);
		fUML_Tests_SelfReader->setName("SelfReader");
		fUML_Tests_SelfReader->setVisibility(VisibilityKind::public_);
		fUML_Tests_SelfReader->isReentrant = false;
			// Parameter self
			fUML_Tests_SelfReader_self->setThisElementPtr(fUML_Tests_SelfReader_self);
			fUML_Tests_SelfReader_self->setName("self");
			fUML_Tests_SelfReader_self->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_SelfReader_self->setType(fUML_Tests_SelfReader);
			fUML_Tests_SelfReader_self->setDirection(ParameterDirectionKind::out);
		fUML_Tests_SelfReader->addOwnedParameter(fUML_Tests_SelfReader_self);
			// Parameter isSelfReader
			fUML_Tests_SelfReader_isSelfReader->setThisElementPtr(fUML_Tests_SelfReader_isSelfReader);
			fUML_Tests_SelfReader_isSelfReader->setName("isSelfReader");
			fUML_Tests_SelfReader_isSelfReader->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_SelfReader_isSelfReader->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_SelfReader_isSelfReader->setDirection(ParameterDirectionKind::out);
		fUML_Tests_SelfReader->addOwnedParameter(fUML_Tests_SelfReader_isSelfReader);
			// ActivityParameterNode Parameter(isSelfReader)
			fUML_Tests_SelfReader_Parameter_isSelfReader->setThisElementPtr(fUML_Tests_SelfReader_Parameter_isSelfReader);
			fUML_Tests_SelfReader_Parameter_isSelfReader->setName("Parameter(isSelfReader)");
			fUML_Tests_SelfReader_Parameter_isSelfReader->setVisibility(VisibilityKind::public_);
			fUML_Tests_SelfReader_Parameter_isSelfReader->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_SelfReader_Parameter_isSelfReader->setParameter(fUML_Tests_SelfReader_isSelfReader);
		fUML_Tests_SelfReader->addNode(fUML_Tests_SelfReader_Parameter_isSelfReader);
			// ForkNode ForkNode771
			fUML_Tests_SelfReader_ForkNode771->setThisElementPtr(fUML_Tests_SelfReader_ForkNode771);
			fUML_Tests_SelfReader_ForkNode771->setName("ForkNode771");
			fUML_Tests_SelfReader_ForkNode771->setVisibility(VisibilityKind::public_);
		fUML_Tests_SelfReader->addNode(fUML_Tests_SelfReader_ForkNode771);
			// ReadIsClassifiedObjectAction IsClassified(SelfReader)
			fUML_Tests_SelfReader_IsClassified_SelfReader->setThisExecutableNodePtr(fUML_Tests_SelfReader_IsClassified_SelfReader);
			fUML_Tests_SelfReader_IsClassified_SelfReader->setName("IsClassified(SelfReader)");
			fUML_Tests_SelfReader_IsClassified_SelfReader->setVisibility(VisibilityKind::public_);
			fUML_Tests_SelfReader_IsClassified_SelfReader->setClassifier(fUML_Tests_SelfReader);
				// InputPin object
				fUML_Tests_SelfReader_IsClassified_SelfReader_object->setThisElementPtr(fUML_Tests_SelfReader_IsClassified_SelfReader_object);
				fUML_Tests_SelfReader_IsClassified_SelfReader_object->setName("object");
				fUML_Tests_SelfReader_IsClassified_SelfReader_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_SelfReader_IsClassified_SelfReader->setObject(fUML_Tests_SelfReader_IsClassified_SelfReader_object);
				// OutputPin result
				fUML_Tests_SelfReader_IsClassified_SelfReader_result->setThisElementPtr(fUML_Tests_SelfReader_IsClassified_SelfReader_result);
				fUML_Tests_SelfReader_IsClassified_SelfReader_result->setName("result");
				fUML_Tests_SelfReader_IsClassified_SelfReader_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_SelfReader_IsClassified_SelfReader->setResult(fUML_Tests_SelfReader_IsClassified_SelfReader_result);
		fUML_Tests_SelfReader->addNode(fUML_Tests_SelfReader_IsClassified_SelfReader);
			// ActivityParameterNode Parameter(self)
			fUML_Tests_SelfReader_Parameter_self->setThisElementPtr(fUML_Tests_SelfReader_Parameter_self);
			fUML_Tests_SelfReader_Parameter_self->setName("Parameter(self)");
			fUML_Tests_SelfReader_Parameter_self->setVisibility(VisibilityKind::public_);
			fUML_Tests_SelfReader_Parameter_self->setType(fUML_Tests_SelfReader);
			fUML_Tests_SelfReader_Parameter_self->setParameter(fUML_Tests_SelfReader_self);
		fUML_Tests_SelfReader->addNode(fUML_Tests_SelfReader_Parameter_self);
			// ReadSelfAction ReadSelf
			fUML_Tests_SelfReader_ReadSelf->setThisExecutableNodePtr(fUML_Tests_SelfReader_ReadSelf);
			fUML_Tests_SelfReader_ReadSelf->setName("ReadSelf");
			fUML_Tests_SelfReader_ReadSelf->setVisibility(VisibilityKind::public_);
				// OutputPin ReadSelf.result
				fUML_Tests_SelfReader_ReadSelf_ReadSelf_result->setThisElementPtr(fUML_Tests_SelfReader_ReadSelf_ReadSelf_result);
				fUML_Tests_SelfReader_ReadSelf_ReadSelf_result->setName("ReadSelf.result");
				fUML_Tests_SelfReader_ReadSelf_ReadSelf_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_SelfReader_ReadSelf->setResult(fUML_Tests_SelfReader_ReadSelf_ReadSelf_result);
		fUML_Tests_SelfReader->addNode(fUML_Tests_SelfReader_ReadSelf);
			// ObjectFlow ObjectFlow772 from ReadSelf.result to ForkNode771
			fUML_Tests_SelfReader_ObjectFlow772->setThisActivityEdgePtr(fUML_Tests_SelfReader_ObjectFlow772);
			fUML_Tests_SelfReader_ObjectFlow772->setName("ObjectFlow772");
			fUML_Tests_SelfReader_ObjectFlow772->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_SelfReader_ObjectFlow772->setSource(fUML_Tests_SelfReader_ReadSelf_ReadSelf_result);
			fUML_Tests_SelfReader_ObjectFlow772->setTarget(fUML_Tests_SelfReader_ForkNode771);
		fUML_Tests_SelfReader->addEdge(fUML_Tests_SelfReader_ObjectFlow772);
			// ObjectFlow ObjectFlow774 from ForkNode771 to Parameter(self)
			fUML_Tests_SelfReader_ObjectFlow774->setThisActivityEdgePtr(fUML_Tests_SelfReader_ObjectFlow774);
			fUML_Tests_SelfReader_ObjectFlow774->setName("ObjectFlow774");
			fUML_Tests_SelfReader_ObjectFlow774->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_SelfReader_ObjectFlow774->setSource(fUML_Tests_SelfReader_ForkNode771);
			fUML_Tests_SelfReader_ObjectFlow774->setTarget(fUML_Tests_SelfReader_Parameter_self);
		fUML_Tests_SelfReader->addEdge(fUML_Tests_SelfReader_ObjectFlow774);
			// ObjectFlow ObjectFlow776 from ForkNode771 to object
			fUML_Tests_SelfReader_ObjectFlow776->setThisActivityEdgePtr(fUML_Tests_SelfReader_ObjectFlow776);
			fUML_Tests_SelfReader_ObjectFlow776->setName("ObjectFlow776");
			fUML_Tests_SelfReader_ObjectFlow776->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_SelfReader_ObjectFlow776->setSource(fUML_Tests_SelfReader_ForkNode771);
			fUML_Tests_SelfReader_ObjectFlow776->setTarget(fUML_Tests_SelfReader_IsClassified_SelfReader_object);
		fUML_Tests_SelfReader->addEdge(fUML_Tests_SelfReader_ObjectFlow776);
			// ObjectFlow ObjectFlow778 from result to Parameter(isSelfReader)
			fUML_Tests_SelfReader_ObjectFlow778->setThisActivityEdgePtr(fUML_Tests_SelfReader_ObjectFlow778);
			fUML_Tests_SelfReader_ObjectFlow778->setName("ObjectFlow778");
			fUML_Tests_SelfReader_ObjectFlow778->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_SelfReader_ObjectFlow778->setSource(fUML_Tests_SelfReader_IsClassified_SelfReader_result);
			fUML_Tests_SelfReader_ObjectFlow778->setTarget(fUML_Tests_SelfReader_Parameter_isSelfReader);
		fUML_Tests_SelfReader->addEdge(fUML_Tests_SelfReader_ObjectFlow778);
	fUML_Tests->addPackagedElement(fUML_Tests_SelfReader);
		// Activity TestClassExtentReader
		fUML_Tests_TestClassExtentReader->setThisActivityPtr(fUML_Tests_TestClassExtentReader);
		fUML_Tests_TestClassExtentReader->setName("TestClassExtentReader");
		fUML_Tests_TestClassExtentReader->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestClassExtentReader->isReentrant = false;
			// Parameter object
			fUML_Tests_TestClassExtentReader_object->setThisElementPtr(fUML_Tests_TestClassExtentReader_object);
			fUML_Tests_TestClassExtentReader_object->setName("object");
			fUML_Tests_TestClassExtentReader_object->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassExtentReader_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassExtentReader_object->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassExtentReader->addOwnedParameter(fUML_Tests_TestClassExtentReader_object);
			// Parameter extent
			fUML_Tests_TestClassExtentReader_extent->setThisElementPtr(fUML_Tests_TestClassExtentReader_extent);
			fUML_Tests_TestClassExtentReader_extent->setName("extent");
			fUML_Tests_TestClassExtentReader_extent->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassExtentReader_extent->setUpper(-1);
			fUML_Tests_TestClassExtentReader_extent->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassExtentReader_extent->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassExtentReader->addOwnedParameter(fUML_Tests_TestClassExtentReader_extent);
			// CreateObjectAction Create(TestClass)
			fUML_Tests_TestClassExtentReader_Create_TestClass->setThisExecutableNodePtr(fUML_Tests_TestClassExtentReader_Create_TestClass);
			fUML_Tests_TestClassExtentReader_Create_TestClass->setName("Create(TestClass)");
			fUML_Tests_TestClassExtentReader_Create_TestClass->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassExtentReader_Create_TestClass->setClassifier(fUML_Tests_TestClass);
				// OutputPin Create.result
				fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result->setThisElementPtr(fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result);
				fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result->setName("Create.result");
				fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassExtentReader_Create_TestClass->setResult(fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result);
		fUML_Tests_TestClassExtentReader->addNode(fUML_Tests_TestClassExtentReader_Create_TestClass);
			// ActivityParameterNode Param(object)
			fUML_Tests_TestClassExtentReader_Param_object->setThisElementPtr(fUML_Tests_TestClassExtentReader_Param_object);
			fUML_Tests_TestClassExtentReader_Param_object->setName("Param(object)");
			fUML_Tests_TestClassExtentReader_Param_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassExtentReader_Param_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassExtentReader_Param_object->setParameter(fUML_Tests_TestClassExtentReader_object);
		fUML_Tests_TestClassExtentReader->addNode(fUML_Tests_TestClassExtentReader_Param_object);
			// ActivityParameterNode Param(extent)
			fUML_Tests_TestClassExtentReader_Param_extent->setThisElementPtr(fUML_Tests_TestClassExtentReader_Param_extent);
			fUML_Tests_TestClassExtentReader_Param_extent->setName("Param(extent)");
			fUML_Tests_TestClassExtentReader_Param_extent->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassExtentReader_Param_extent->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassExtentReader_Param_extent->setParameter(fUML_Tests_TestClassExtentReader_extent);
		fUML_Tests_TestClassExtentReader->addNode(fUML_Tests_TestClassExtentReader_Param_extent);
			// ReadExtentAction ReadExtent(TestClass)
			fUML_Tests_TestClassExtentReader_ReadExtent_TestClass->setThisExecutableNodePtr(fUML_Tests_TestClassExtentReader_ReadExtent_TestClass);
			fUML_Tests_TestClassExtentReader_ReadExtent_TestClass->setName("ReadExtent(TestClass)");
			fUML_Tests_TestClassExtentReader_ReadExtent_TestClass->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassExtentReader_ReadExtent_TestClass->setClassifier(fUML_Tests_TestClass);
				// OutputPin ReadExtent.result
				fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result->setThisElementPtr(fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result);
				fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result->setName("ReadExtent.result");
				fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result->setType(fUML_Tests_TestClass);
				fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result->setUpper(-1);
			fUML_Tests_TestClassExtentReader_ReadExtent_TestClass->setResult(fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result);
		fUML_Tests_TestClassExtentReader->addNode(fUML_Tests_TestClassExtentReader_ReadExtent_TestClass);
			// ObjectFlow ObjectFlow780 from Create.result to Param(object)
			fUML_Tests_TestClassExtentReader_ObjectFlow780->setThisActivityEdgePtr(fUML_Tests_TestClassExtentReader_ObjectFlow780);
			fUML_Tests_TestClassExtentReader_ObjectFlow780->setName("ObjectFlow780");
			fUML_Tests_TestClassExtentReader_ObjectFlow780->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassExtentReader_ObjectFlow780->setSource(fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result);
			fUML_Tests_TestClassExtentReader_ObjectFlow780->setTarget(fUML_Tests_TestClassExtentReader_Param_object);
		fUML_Tests_TestClassExtentReader->addEdge(fUML_Tests_TestClassExtentReader_ObjectFlow780);
			// ObjectFlow ObjectFlow782 from ReadExtent.result to Param(extent)
			fUML_Tests_TestClassExtentReader_ObjectFlow782->setThisActivityEdgePtr(fUML_Tests_TestClassExtentReader_ObjectFlow782);
			fUML_Tests_TestClassExtentReader_ObjectFlow782->setName("ObjectFlow782");
			fUML_Tests_TestClassExtentReader_ObjectFlow782->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassExtentReader_ObjectFlow782->setSource(fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result);
			fUML_Tests_TestClassExtentReader_ObjectFlow782->setTarget(fUML_Tests_TestClassExtentReader_Param_extent);
		fUML_Tests_TestClassExtentReader->addEdge(fUML_Tests_TestClassExtentReader_ObjectFlow782);
			// ControlFlow ControlFlow784 from Create(TestClass) to ReadExtent(TestClass)
			fUML_Tests_TestClassExtentReader_ControlFlow784->setThisActivityEdgePtr(fUML_Tests_TestClassExtentReader_ControlFlow784);
			fUML_Tests_TestClassExtentReader_ControlFlow784->setName("ControlFlow784");
			fUML_Tests_TestClassExtentReader_ControlFlow784->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassExtentReader_ControlFlow784->setSource(fUML_Tests_TestClassExtentReader_Create_TestClass);
			fUML_Tests_TestClassExtentReader_ControlFlow784->setTarget(fUML_Tests_TestClassExtentReader_ReadExtent_TestClass);
		fUML_Tests_TestClassExtentReader->addEdge(fUML_Tests_TestClassExtentReader_ControlFlow784);
	fUML_Tests->addPackagedElement(fUML_Tests_TestClassExtentReader);
		// CallEvent CallEvent794
		fUML_Tests_CallEvent794->setThisElementPtr(fUML_Tests_CallEvent794);
		fUML_Tests_CallEvent794->setName("CallEvent794");
		fUML_Tests_CallEvent794->setVisibility(VisibilityKind::public_);
		fUML_Tests_CallEvent794->setOperation(fUML_Tests_TestCallAccepter_test);
	fUML_Tests->addPackagedElement(fUML_Tests_CallEvent794);
		// Activity TestCallSend
		fUML_Tests_TestCallSend->setThisActivityPtr(fUML_Tests_TestCallSend);
		fUML_Tests_TestCallSend->setName("TestCallSend");
		fUML_Tests_TestCallSend->setVisibility(VisibilityKind::public_);
			// SendSignalAction Send(TestSignal)
			fUML_Tests_TestCallSend_Send_TestSignal->setThisExecutableNodePtr(fUML_Tests_TestCallSend_Send_TestSignal);
			fUML_Tests_TestCallSend_Send_TestSignal->setName("Send(TestSignal)");
			fUML_Tests_TestCallSend_Send_TestSignal->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSend_Send_TestSignal->setSignal(fUML_Tests_TestSignal);
				// InputPin Send(TestSignal).target
				fUML_Tests_TestCallSend_Send_TestSignal_Send_TestSignal_target->setThisElementPtr(fUML_Tests_TestCallSend_Send_TestSignal_Send_TestSignal_target);
				fUML_Tests_TestCallSend_Send_TestSignal_Send_TestSignal_target->setName("Send(TestSignal).target");
				fUML_Tests_TestCallSend_Send_TestSignal_Send_TestSignal_target->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSend_Send_TestSignal->setTarget(fUML_Tests_TestCallSend_Send_TestSignal_Send_TestSignal_target);
		fUML_Tests_TestCallSend->addNode(fUML_Tests_TestCallSend_Send_TestSignal);
			// ForkNode ForkNode
			fUML_Tests_TestCallSend_ForkNode->setThisElementPtr(fUML_Tests_TestCallSend_ForkNode);
			fUML_Tests_TestCallSend_ForkNode->setName("ForkNode");
			fUML_Tests_TestCallSend_ForkNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestCallSend->addNode(fUML_Tests_TestCallSend_ForkNode);
			// CreateObjectAction Create(TestCallSender)
			fUML_Tests_TestCallSend_Create_TestCallSender->setThisExecutableNodePtr(fUML_Tests_TestCallSend_Create_TestCallSender);
			fUML_Tests_TestCallSend_Create_TestCallSender->setName("Create(TestCallSender)");
			fUML_Tests_TestCallSend_Create_TestCallSender->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSend_Create_TestCallSender->setClassifier(fUML_Tests_TestCallSender);
				// OutputPin Create(TestCallSender).result
				fUML_Tests_TestCallSend_Create_TestCallSender_Create_TestCallSender_result->setThisElementPtr(fUML_Tests_TestCallSend_Create_TestCallSender_Create_TestCallSender_result);
				fUML_Tests_TestCallSend_Create_TestCallSender_Create_TestCallSender_result->setName("Create(TestCallSender).result");
				fUML_Tests_TestCallSend_Create_TestCallSender_Create_TestCallSender_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSend_Create_TestCallSender->setResult(fUML_Tests_TestCallSend_Create_TestCallSender_Create_TestCallSender_result);
		fUML_Tests_TestCallSend->addNode(fUML_Tests_TestCallSend_Create_TestCallSender);
			// StartObjectBehaviorAction Start(TestCallSender)
			fUML_Tests_TestCallSend_Start_TestCallSender->setThisExecutableNodePtr(fUML_Tests_TestCallSend_Start_TestCallSender);
			fUML_Tests_TestCallSend_Start_TestCallSender->setName("Start(TestCallSender)");
			fUML_Tests_TestCallSend_Start_TestCallSender->setVisibility(VisibilityKind::public_);
				// InputPin Start(TestCallSender).object
				fUML_Tests_TestCallSend_Start_TestCallSender_Start_TestCallSender_object->setThisElementPtr(fUML_Tests_TestCallSend_Start_TestCallSender_Start_TestCallSender_object);
				fUML_Tests_TestCallSend_Start_TestCallSender_Start_TestCallSender_object->setName("Start(TestCallSender).object");
				fUML_Tests_TestCallSend_Start_TestCallSender_Start_TestCallSender_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSend_Start_TestCallSender->setObject(fUML_Tests_TestCallSend_Start_TestCallSender_Start_TestCallSender_object);
		fUML_Tests_TestCallSend->addNode(fUML_Tests_TestCallSend_Start_TestCallSender);
			// ObjectFlow ObjectFlow795 from ForkNode to Start(TestCallSender).object
			fUML_Tests_TestCallSend_ObjectFlow795->setThisActivityEdgePtr(fUML_Tests_TestCallSend_ObjectFlow795);
			fUML_Tests_TestCallSend_ObjectFlow795->setName("ObjectFlow795");
			fUML_Tests_TestCallSend_ObjectFlow795->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSend_ObjectFlow795->setSource(fUML_Tests_TestCallSend_ForkNode);
			fUML_Tests_TestCallSend_ObjectFlow795->setTarget(fUML_Tests_TestCallSend_Start_TestCallSender_Start_TestCallSender_object);
		fUML_Tests_TestCallSend->addEdge(fUML_Tests_TestCallSend_ObjectFlow795);
			// ObjectFlow ObjectFlow797 from Create(TestCallSender).result to ForkNode
			fUML_Tests_TestCallSend_ObjectFlow797->setThisActivityEdgePtr(fUML_Tests_TestCallSend_ObjectFlow797);
			fUML_Tests_TestCallSend_ObjectFlow797->setName("ObjectFlow797");
			fUML_Tests_TestCallSend_ObjectFlow797->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSend_ObjectFlow797->setSource(fUML_Tests_TestCallSend_Create_TestCallSender_Create_TestCallSender_result);
			fUML_Tests_TestCallSend_ObjectFlow797->setTarget(fUML_Tests_TestCallSend_ForkNode);
		fUML_Tests_TestCallSend->addEdge(fUML_Tests_TestCallSend_ObjectFlow797);
			// ObjectFlow ObjectFlow799 from ForkNode to Send(TestSignal).target
			fUML_Tests_TestCallSend_ObjectFlow799->setThisActivityEdgePtr(fUML_Tests_TestCallSend_ObjectFlow799);
			fUML_Tests_TestCallSend_ObjectFlow799->setName("ObjectFlow799");
			fUML_Tests_TestCallSend_ObjectFlow799->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSend_ObjectFlow799->setSource(fUML_Tests_TestCallSend_ForkNode);
			fUML_Tests_TestCallSend_ObjectFlow799->setTarget(fUML_Tests_TestCallSend_Send_TestSignal_Send_TestSignal_target);
		fUML_Tests_TestCallSend->addEdge(fUML_Tests_TestCallSend_ObjectFlow799);
			// ControlFlow ControlFlow801 from Start(TestCallSender) to Send(TestSignal)
			fUML_Tests_TestCallSend_ControlFlow801->setThisActivityEdgePtr(fUML_Tests_TestCallSend_ControlFlow801);
			fUML_Tests_TestCallSend_ControlFlow801->setName("ControlFlow801");
			fUML_Tests_TestCallSend_ControlFlow801->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSend_ControlFlow801->setSource(fUML_Tests_TestCallSend_Start_TestCallSender);
			fUML_Tests_TestCallSend_ControlFlow801->setTarget(fUML_Tests_TestCallSend_Send_TestSignal);
		fUML_Tests_TestCallSend->addEdge(fUML_Tests_TestCallSend_ControlFlow801);
	fUML_Tests->addPackagedElement(fUML_Tests_TestCallSend);
		// Activity TestListFunctions
		fUML_Tests_TestListFunctions->setThisActivityPtr(fUML_Tests_TestListFunctions);
		fUML_Tests_TestListFunctions->setName("TestListFunctions");
		fUML_Tests_TestListFunctions->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestListFunctions->isReentrant = false;
			// Parameter size
			fUML_Tests_TestListFunctions_size->setThisElementPtr(fUML_Tests_TestListFunctions_size);
			fUML_Tests_TestListFunctions_size->setName("size");
			fUML_Tests_TestListFunctions_size->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_size->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestListFunctions_size->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestListFunctions->addOwnedParameter(fUML_Tests_TestListFunctions_size);
			// Parameter element
			fUML_Tests_TestListFunctions_element->setThisElementPtr(fUML_Tests_TestListFunctions_element);
			fUML_Tests_TestListFunctions_element->setName("element");
			fUML_Tests_TestListFunctions_element->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_element->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestListFunctions_element->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestListFunctions->addOwnedParameter(fUML_Tests_TestListFunctions_element);
			// Parameter concat
			fUML_Tests_TestListFunctions_concat->setThisElementPtr(fUML_Tests_TestListFunctions_concat);
			fUML_Tests_TestListFunctions_concat->setName("concat");
			fUML_Tests_TestListFunctions_concat->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestListFunctions_concat->setIsOrdered(true);
			fUML_Tests_TestListFunctions_concat->setIsUnique(false);
			fUML_Tests_TestListFunctions_concat->setUpper(-1);
			fUML_Tests_TestListFunctions_concat->setLower(0);
			fUML_Tests_TestListFunctions_concat->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestListFunctions_concat->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestListFunctions->addOwnedParameter(fUML_Tests_TestListFunctions_concat);
			// ActivityParameterNode concatNode
			fUML_Tests_TestListFunctions_concatNode->setThisElementPtr(fUML_Tests_TestListFunctions_concatNode);
			fUML_Tests_TestListFunctions_concatNode->setName("concatNode");
			fUML_Tests_TestListFunctions_concatNode->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestListFunctions_concatNode->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestListFunctions_concatNode->setParameter(fUML_Tests_TestListFunctions_concat);
		fUML_Tests_TestListFunctions->addNode(fUML_Tests_TestListFunctions_concatNode);
			// ForkNode Fork
			fUML_Tests_TestListFunctions_Fork->setThisElementPtr(fUML_Tests_TestListFunctions_Fork);
			fUML_Tests_TestListFunctions_Fork->setName("Fork");
			fUML_Tests_TestListFunctions_Fork->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestListFunctions->addNode(fUML_Tests_TestListFunctions_Fork);
			// CallBehaviorAction Call(ListGet)
			fUML_Tests_TestListFunctions_Call_ListGet->setThisExecutableNodePtr(fUML_Tests_TestListFunctions_Call_ListGet);
			fUML_Tests_TestListFunctions_Call_ListGet->setName("Call(ListGet)");
			fUML_Tests_TestListFunctions_Call_ListGet->setVisibility(VisibilityKind::public_);
				// OutputPin ListGet.result
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result->setThisElementPtr(fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result);
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result->setName("ListGet.result");
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestListFunctions_Call_ListGet->addResult(fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result);
			fUML_Tests_TestListFunctions_Call_ListGet->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_ListFunctions_ListGet);
				// InputPin ListGet.list
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list->setThisElementPtr(fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list);
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list->setName("ListGet.list");
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list->setVisibility(VisibilityKind::public_);
				
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list->setUpper(-1);
			fUML_Tests_TestListFunctions_Call_ListGet->addArgument(fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list);
				// InputPin ListGet.index
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index->setThisElementPtr(fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index);
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index->setName("ListGet.index");
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestListFunctions_Call_ListGet->addArgument(fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index);
		fUML_Tests_TestListFunctions->addNode(fUML_Tests_TestListFunctions_Call_ListGet);
			// CallBehaviorAction Call(GenerateListTestData)
			fUML_Tests_TestListFunctions_Call_GenerateListTestData->setThisExecutableNodePtr(fUML_Tests_TestListFunctions_Call_GenerateListTestData);
			fUML_Tests_TestListFunctions_Call_GenerateListTestData->setName("Call(GenerateListTestData)");
			fUML_Tests_TestListFunctions_Call_GenerateListTestData->setVisibility(VisibilityKind::public_);
				// OutputPin GenData.list
				fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list->setThisElementPtr(fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list);
				fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list->setName("GenData.list");
				fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list->setUpper(-1);
			fUML_Tests_TestListFunctions_Call_GenerateListTestData->addResult(fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list);
			fUML_Tests_TestListFunctions_Call_GenerateListTestData->setBehavior(fUML_Tests_GenerateListTestData);
		fUML_Tests_TestListFunctions->addNode(fUML_Tests_TestListFunctions_Call_GenerateListTestData);
			// CallBehaviorAction Call(ListSize)
			fUML_Tests_TestListFunctions_Call_ListSize->setThisExecutableNodePtr(fUML_Tests_TestListFunctions_Call_ListSize);
			fUML_Tests_TestListFunctions_Call_ListSize->setName("Call(ListSize)");
			fUML_Tests_TestListFunctions_Call_ListSize->setVisibility(VisibilityKind::public_);
				// OutputPin ListSize.result
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result->setThisElementPtr(fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result);
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result->setName("ListSize.result");
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestListFunctions_Call_ListSize->addResult(fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result);
			fUML_Tests_TestListFunctions_Call_ListSize->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_ListFunctions_ListSize);
				// InputPin ListSize.list
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list->setThisElementPtr(fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list);
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list->setName("ListSize.list");
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list->setVisibility(VisibilityKind::public_);
				
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list->setUpper(-1);
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list->setLower(0);
			fUML_Tests_TestListFunctions_Call_ListSize->addArgument(fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list);
		fUML_Tests_TestListFunctions->addNode(fUML_Tests_TestListFunctions_Call_ListSize);
			// ValueSpecificationAction Value(index)
			fUML_Tests_TestListFunctions_Value_index->setThisExecutableNodePtr(fUML_Tests_TestListFunctions_Value_index);
			fUML_Tests_TestListFunctions_Value_index->setName("Value(index)");
			fUML_Tests_TestListFunctions_Value_index->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger825
				fUML_Tests_TestListFunctions_Value_index_LiteralInteger825->setThisElementPtr(fUML_Tests_TestListFunctions_Value_index_LiteralInteger825);
				fUML_Tests_TestListFunctions_Value_index_LiteralInteger825->setName("LiteralInteger825");
				fUML_Tests_TestListFunctions_Value_index_LiteralInteger825->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestListFunctions_Value_index_LiteralInteger825->setValue(2);
			fUML_Tests_TestListFunctions_Value_index->setValue(fUML_Tests_TestListFunctions_Value_index_LiteralInteger825);
				// OutputPin Value(index).result
				fUML_Tests_TestListFunctions_Value_index_Value_index_result->setThisElementPtr(fUML_Tests_TestListFunctions_Value_index_Value_index_result);
				fUML_Tests_TestListFunctions_Value_index_Value_index_result->setName("Value(index).result");
				fUML_Tests_TestListFunctions_Value_index_Value_index_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestListFunctions_Value_index_Value_index_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestListFunctions_Value_index->setResult(fUML_Tests_TestListFunctions_Value_index_Value_index_result);
		fUML_Tests_TestListFunctions->addNode(fUML_Tests_TestListFunctions_Value_index);
			// CallBehaviorAction Call(ListConcat)
			fUML_Tests_TestListFunctions_Call_ListConcat->setThisExecutableNodePtr(fUML_Tests_TestListFunctions_Call_ListConcat);
			fUML_Tests_TestListFunctions_Call_ListConcat->setName("Call(ListConcat)");
			fUML_Tests_TestListFunctions_Call_ListConcat->setVisibility(VisibilityKind::public_);
				// OutputPin ListConcat.result
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result->setThisElementPtr(fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result->setName("ListConcat.result");
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result->setUpper(-1);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result->setLower(0);
			fUML_Tests_TestListFunctions_Call_ListConcat->addResult(fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result);
			fUML_Tests_TestListFunctions_Call_ListConcat->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_ListFunctions_ListConcat);
				// InputPin ListConcat.list1
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1->setThisElementPtr(fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1->setName("ListConcat.list1");
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1->setUpper(-1);
			fUML_Tests_TestListFunctions_Call_ListConcat->addArgument(fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1);
				// InputPin ListConcat.list2
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2->setThisElementPtr(fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2->setName("ListConcat.list2");
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2->setUpper(-1);
			fUML_Tests_TestListFunctions_Call_ListConcat->addArgument(fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2);
		fUML_Tests_TestListFunctions->addNode(fUML_Tests_TestListFunctions_Call_ListConcat);
			// ActivityParameterNode Param(element)
			fUML_Tests_TestListFunctions_Param_element->setThisElementPtr(fUML_Tests_TestListFunctions_Param_element);
			fUML_Tests_TestListFunctions_Param_element->setName("Param(element)");
			fUML_Tests_TestListFunctions_Param_element->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestListFunctions_Param_element->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestListFunctions_Param_element->setParameter(fUML_Tests_TestListFunctions_element);
		fUML_Tests_TestListFunctions->addNode(fUML_Tests_TestListFunctions_Param_element);
			// ActivityParameterNode Param(size)
			fUML_Tests_TestListFunctions_Param_size->setThisElementPtr(fUML_Tests_TestListFunctions_Param_size);
			fUML_Tests_TestListFunctions_Param_size->setName("Param(size)");
			fUML_Tests_TestListFunctions_Param_size->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestListFunctions_Param_size->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestListFunctions_Param_size->setParameter(fUML_Tests_TestListFunctions_size);
		fUML_Tests_TestListFunctions->addNode(fUML_Tests_TestListFunctions_Param_size);
			// ObjectFlow ObjectFlow803 from ListGet.result to Param(element)
			fUML_Tests_TestListFunctions_ObjectFlow803->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ObjectFlow803);
			fUML_Tests_TestListFunctions_ObjectFlow803->setName("ObjectFlow803");
			fUML_Tests_TestListFunctions_ObjectFlow803->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ObjectFlow803->setSource(fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result);
			fUML_Tests_TestListFunctions_ObjectFlow803->setTarget(fUML_Tests_TestListFunctions_Param_element);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ObjectFlow803);
			// ControlFlow ControlFlow805 from Call(ListSize) to Call(ListGet)
			fUML_Tests_TestListFunctions_ControlFlow805->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ControlFlow805);
			fUML_Tests_TestListFunctions_ControlFlow805->setName("ControlFlow805");
			fUML_Tests_TestListFunctions_ControlFlow805->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ControlFlow805->setSource(fUML_Tests_TestListFunctions_Call_ListSize);
			fUML_Tests_TestListFunctions_ControlFlow805->setTarget(fUML_Tests_TestListFunctions_Call_ListGet);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ControlFlow805);
			// ObjectFlow ObjectFlow807 from GenData.list to Fork
			fUML_Tests_TestListFunctions_ObjectFlow807->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ObjectFlow807);
			fUML_Tests_TestListFunctions_ObjectFlow807->setName("ObjectFlow807");
			fUML_Tests_TestListFunctions_ObjectFlow807->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ObjectFlow807->setSource(fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list);
			fUML_Tests_TestListFunctions_ObjectFlow807->setTarget(fUML_Tests_TestListFunctions_Fork);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ObjectFlow807);
			// ObjectFlow ObjectFlow809 from ListConcat.result to concatNode
			fUML_Tests_TestListFunctions_ObjectFlow809->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ObjectFlow809);
			fUML_Tests_TestListFunctions_ObjectFlow809->setName("ObjectFlow809");
			fUML_Tests_TestListFunctions_ObjectFlow809->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ObjectFlow809->setSource(fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result);
			fUML_Tests_TestListFunctions_ObjectFlow809->setTarget(fUML_Tests_TestListFunctions_concatNode);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ObjectFlow809);
			// ObjectFlow ObjectFlow815 from Fork to ListGet.list
			fUML_Tests_TestListFunctions_ObjectFlow815->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ObjectFlow815);
			fUML_Tests_TestListFunctions_ObjectFlow815->setName("ObjectFlow815");
			fUML_Tests_TestListFunctions_ObjectFlow815->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ObjectFlow815->setSource(fUML_Tests_TestListFunctions_Fork);
			fUML_Tests_TestListFunctions_ObjectFlow815->setTarget(fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ObjectFlow815);
			// ObjectFlow ObjectFlow846 from ListSize.result to Param(size)
			fUML_Tests_TestListFunctions_ObjectFlow846->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ObjectFlow846);
			fUML_Tests_TestListFunctions_ObjectFlow846->setName("ObjectFlow846");
			fUML_Tests_TestListFunctions_ObjectFlow846->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ObjectFlow846->setSource(fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result);
			fUML_Tests_TestListFunctions_ObjectFlow846->setTarget(fUML_Tests_TestListFunctions_Param_size);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ObjectFlow846);
			// ControlFlow ControlFlow817 from Call(ListGet) to Call(ListConcat)
			fUML_Tests_TestListFunctions_ControlFlow817->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ControlFlow817);
			fUML_Tests_TestListFunctions_ControlFlow817->setName("ControlFlow817");
			fUML_Tests_TestListFunctions_ControlFlow817->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ControlFlow817->setSource(fUML_Tests_TestListFunctions_Call_ListGet);
			fUML_Tests_TestListFunctions_ControlFlow817->setTarget(fUML_Tests_TestListFunctions_Call_ListConcat);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ControlFlow817);
			// ObjectFlow ObjectFlow848 from Fork to ListConcat.list1
			fUML_Tests_TestListFunctions_ObjectFlow848->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ObjectFlow848);
			fUML_Tests_TestListFunctions_ObjectFlow848->setName("ObjectFlow848");
			fUML_Tests_TestListFunctions_ObjectFlow848->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ObjectFlow848->setSource(fUML_Tests_TestListFunctions_Fork);
			fUML_Tests_TestListFunctions_ObjectFlow848->setTarget(fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ObjectFlow848);
			// ObjectFlow ObjectFlow850 from Fork to ListSize.list
			fUML_Tests_TestListFunctions_ObjectFlow850->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ObjectFlow850);
			fUML_Tests_TestListFunctions_ObjectFlow850->setName("ObjectFlow850");
			fUML_Tests_TestListFunctions_ObjectFlow850->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ObjectFlow850->setSource(fUML_Tests_TestListFunctions_Fork);
			fUML_Tests_TestListFunctions_ObjectFlow850->setTarget(fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ObjectFlow850);
			// ObjectFlow ObjectFlow832 from Value(index).result to ListGet.index
			fUML_Tests_TestListFunctions_ObjectFlow832->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ObjectFlow832);
			fUML_Tests_TestListFunctions_ObjectFlow832->setName("ObjectFlow832");
			fUML_Tests_TestListFunctions_ObjectFlow832->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ObjectFlow832->setSource(fUML_Tests_TestListFunctions_Value_index_Value_index_result);
			fUML_Tests_TestListFunctions_ObjectFlow832->setTarget(fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ObjectFlow832);
			// ObjectFlow ObjectFlow834 from Fork to ListConcat.list2
			fUML_Tests_TestListFunctions_ObjectFlow834->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ObjectFlow834);
			fUML_Tests_TestListFunctions_ObjectFlow834->setName("ObjectFlow834");
			fUML_Tests_TestListFunctions_ObjectFlow834->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ObjectFlow834->setSource(fUML_Tests_TestListFunctions_Fork);
			fUML_Tests_TestListFunctions_ObjectFlow834->setTarget(fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ObjectFlow834);
	fUML_Tests->addPackagedElement(fUML_Tests_TestListFunctions);
		// Activity TestRealFunctions
		fUML_Tests_TestRealFunctions->setThisActivityPtr(fUML_Tests_TestRealFunctions);
		fUML_Tests_TestRealFunctions->setName("TestRealFunctions");
		fUML_Tests_TestRealFunctions->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestRealFunctions->isReentrant = false;
			// Parameter NegResult
			fUML_Tests_TestRealFunctions_NegResult->setThisElementPtr(fUML_Tests_TestRealFunctions_NegResult);
			fUML_Tests_TestRealFunctions_NegResult->setName("NegResult");
			fUML_Tests_TestRealFunctions_NegResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_NegResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_NegResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_NegResult);
			// Parameter PlusResult
			fUML_Tests_TestRealFunctions_PlusResult->setThisElementPtr(fUML_Tests_TestRealFunctions_PlusResult);
			fUML_Tests_TestRealFunctions_PlusResult->setName("PlusResult");
			fUML_Tests_TestRealFunctions_PlusResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_PlusResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_PlusResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_PlusResult);
			// Parameter MinusResult
			fUML_Tests_TestRealFunctions_MinusResult->setThisElementPtr(fUML_Tests_TestRealFunctions_MinusResult);
			fUML_Tests_TestRealFunctions_MinusResult->setName("MinusResult");
			fUML_Tests_TestRealFunctions_MinusResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_MinusResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_MinusResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_MinusResult);
			// Parameter InvResult
			fUML_Tests_TestRealFunctions_InvResult->setThisElementPtr(fUML_Tests_TestRealFunctions_InvResult);
			fUML_Tests_TestRealFunctions_InvResult->setName("InvResult");
			fUML_Tests_TestRealFunctions_InvResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_InvResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_InvResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_InvResult);
			// Parameter TimesResult
			fUML_Tests_TestRealFunctions_TimesResult->setThisElementPtr(fUML_Tests_TestRealFunctions_TimesResult);
			fUML_Tests_TestRealFunctions_TimesResult->setName("TimesResult");
			fUML_Tests_TestRealFunctions_TimesResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_TimesResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_TimesResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_TimesResult);
			// Parameter DivideResult
			fUML_Tests_TestRealFunctions_DivideResult->setThisElementPtr(fUML_Tests_TestRealFunctions_DivideResult);
			fUML_Tests_TestRealFunctions_DivideResult->setName("DivideResult");
			fUML_Tests_TestRealFunctions_DivideResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_DivideResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_DivideResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_DivideResult);
			// Parameter MaxResult
			fUML_Tests_TestRealFunctions_MaxResult->setThisElementPtr(fUML_Tests_TestRealFunctions_MaxResult);
			fUML_Tests_TestRealFunctions_MaxResult->setName("MaxResult");
			fUML_Tests_TestRealFunctions_MaxResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_MaxResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_MaxResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_MaxResult);
			// Parameter MinResult
			fUML_Tests_TestRealFunctions_MinResult->setThisElementPtr(fUML_Tests_TestRealFunctions_MinResult);
			fUML_Tests_TestRealFunctions_MinResult->setName("MinResult");
			fUML_Tests_TestRealFunctions_MinResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_MinResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_MinResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_MinResult);
			// Parameter AbsResult
			fUML_Tests_TestRealFunctions_AbsResult->setThisElementPtr(fUML_Tests_TestRealFunctions_AbsResult);
			fUML_Tests_TestRealFunctions_AbsResult->setName("AbsResult");
			fUML_Tests_TestRealFunctions_AbsResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_AbsResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_AbsResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_AbsResult);
			// Parameter RoundResult
			fUML_Tests_TestRealFunctions_RoundResult->setThisElementPtr(fUML_Tests_TestRealFunctions_RoundResult);
			fUML_Tests_TestRealFunctions_RoundResult->setName("RoundResult");
			fUML_Tests_TestRealFunctions_RoundResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_RoundResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestRealFunctions_RoundResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_RoundResult);
			// Parameter FloorResult
			fUML_Tests_TestRealFunctions_FloorResult->setThisElementPtr(fUML_Tests_TestRealFunctions_FloorResult);
			fUML_Tests_TestRealFunctions_FloorResult->setName("FloorResult");
			fUML_Tests_TestRealFunctions_FloorResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_FloorResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestRealFunctions_FloorResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_FloorResult);
			// Parameter ToIntegerResult
			fUML_Tests_TestRealFunctions_ToIntegerResult->setThisElementPtr(fUML_Tests_TestRealFunctions_ToIntegerResult);
			fUML_Tests_TestRealFunctions_ToIntegerResult->setName("ToIntegerResult");
			fUML_Tests_TestRealFunctions_ToIntegerResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ToIntegerResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestRealFunctions_ToIntegerResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_ToIntegerResult);
			// ActivityParameterNode Param(InvResult)
			fUML_Tests_TestRealFunctions_Param_InvResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_InvResult);
			fUML_Tests_TestRealFunctions_Param_InvResult->setName("Param(InvResult)");
			fUML_Tests_TestRealFunctions_Param_InvResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_InvResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Param_InvResult->setParameter(fUML_Tests_TestRealFunctions_InvResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_InvResult);
			// CallBehaviorAction Call(Round)
			fUML_Tests_TestRealFunctions_Call_Round->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Round);
			fUML_Tests_TestRealFunctions_Call_Round->setName("Call(Round)");
			fUML_Tests_TestRealFunctions_Call_Round->setVisibility(VisibilityKind::public_);
				// OutputPin Round.result
				fUML_Tests_TestRealFunctions_Call_Round_Round_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Round_Round_result);
				fUML_Tests_TestRealFunctions_Call_Round_Round_result->setName("Round.result");
				fUML_Tests_TestRealFunctions_Call_Round_Round_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Round_Round_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestRealFunctions_Call_Round->addResult(fUML_Tests_TestRealFunctions_Call_Round_Round_result);
			fUML_Tests_TestRealFunctions_Call_Round->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_Round);
				// InputPin Round.x
				fUML_Tests_TestRealFunctions_Call_Round_Round_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Round_Round_x);
				fUML_Tests_TestRealFunctions_Call_Round_Round_x->setName("Round.x");
				fUML_Tests_TestRealFunctions_Call_Round_Round_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Round_Round_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Round->addArgument(fUML_Tests_TestRealFunctions_Call_Round_Round_x);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Round);
			// ActivityParameterNode Param(MinusResult)
			fUML_Tests_TestRealFunctions_Param_MinusResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_MinusResult);
			fUML_Tests_TestRealFunctions_Param_MinusResult->setName("Param(MinusResult)");
			fUML_Tests_TestRealFunctions_Param_MinusResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_MinusResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Param_MinusResult->setParameter(fUML_Tests_TestRealFunctions_MinusResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_MinusResult);
			// CallBehaviorAction Call(Min)
			fUML_Tests_TestRealFunctions_Call_Min->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Min);
			fUML_Tests_TestRealFunctions_Call_Min->setName("Call(Min)");
			fUML_Tests_TestRealFunctions_Call_Min->setVisibility(VisibilityKind::public_);
				// OutputPin Min.result
				fUML_Tests_TestRealFunctions_Call_Min_Min_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Min_Min_result);
				fUML_Tests_TestRealFunctions_Call_Min_Min_result->setName("Min.result");
				fUML_Tests_TestRealFunctions_Call_Min_Min_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Min_Min_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Min->addResult(fUML_Tests_TestRealFunctions_Call_Min_Min_result);
			fUML_Tests_TestRealFunctions_Call_Min->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_Min);
				// InputPin Min.x
				fUML_Tests_TestRealFunctions_Call_Min_Min_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Min_Min_x);
				fUML_Tests_TestRealFunctions_Call_Min_Min_x->setName("Min.x");
				fUML_Tests_TestRealFunctions_Call_Min_Min_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Min_Min_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Min->addArgument(fUML_Tests_TestRealFunctions_Call_Min_Min_x);
				// InputPin Min.y
				fUML_Tests_TestRealFunctions_Call_Min_Min_y->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Min_Min_y);
				fUML_Tests_TestRealFunctions_Call_Min_Min_y->setName("Min.y");
				fUML_Tests_TestRealFunctions_Call_Min_Min_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Min_Min_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Min->addArgument(fUML_Tests_TestRealFunctions_Call_Min_Min_y);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Min);
			// ActivityParameterNode Param(DivideResult)
			fUML_Tests_TestRealFunctions_Param_DivideResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_DivideResult);
			fUML_Tests_TestRealFunctions_Param_DivideResult->setName("Param(DivideResult)");
			fUML_Tests_TestRealFunctions_Param_DivideResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_DivideResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Param_DivideResult->setParameter(fUML_Tests_TestRealFunctions_DivideResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_DivideResult);
			// ValueSpecificationAction Value(0.5)
			fUML_Tests_TestRealFunctions_Value_0_5->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Value_0_5);
			fUML_Tests_TestRealFunctions_Value_0_5->setName("Value(0.5)");
			fUML_Tests_TestRealFunctions_Value_0_5->setVisibility(VisibilityKind::public_);
				// LiteralReal LiteralReal941
				fUML_Tests_TestRealFunctions_Value_0_5_LiteralReal941->setThisElementPtr(fUML_Tests_TestRealFunctions_Value_0_5_LiteralReal941);
				fUML_Tests_TestRealFunctions_Value_0_5_LiteralReal941->setName("LiteralReal941");
				fUML_Tests_TestRealFunctions_Value_0_5_LiteralReal941->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Value_0_5_LiteralReal941->setValue(0.5f);
			fUML_Tests_TestRealFunctions_Value_0_5->setValue(fUML_Tests_TestRealFunctions_Value_0_5_LiteralReal941);
				// OutputPin Value(0.5).result
				fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result);
				fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result->setName("Value(0.5).result");
				fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Value_0_5->setResult(fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Value_0_5);
			// CallBehaviorAction Call(Times)
			fUML_Tests_TestRealFunctions_Call_Times->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Times);
			fUML_Tests_TestRealFunctions_Call_Times->setName("Call(Times)");
			fUML_Tests_TestRealFunctions_Call_Times->setVisibility(VisibilityKind::public_);
				// OutputPin Times.result
				fUML_Tests_TestRealFunctions_Call_Times_Times_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Times_Times_result);
				fUML_Tests_TestRealFunctions_Call_Times_Times_result->setName("Times.result");
				fUML_Tests_TestRealFunctions_Call_Times_Times_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Times_Times_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Times->addResult(fUML_Tests_TestRealFunctions_Call_Times_Times_result);
			fUML_Tests_TestRealFunctions_Call_Times->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_times);
				// InputPin Times.x
				fUML_Tests_TestRealFunctions_Call_Times_Times_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Times_Times_x);
				fUML_Tests_TestRealFunctions_Call_Times_Times_x->setName("Times.x");
				fUML_Tests_TestRealFunctions_Call_Times_Times_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Times_Times_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Times->addArgument(fUML_Tests_TestRealFunctions_Call_Times_Times_x);
				// InputPin Times.y
				fUML_Tests_TestRealFunctions_Call_Times_Times_y->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Times_Times_y);
				fUML_Tests_TestRealFunctions_Call_Times_Times_y->setName("Times.y");
				fUML_Tests_TestRealFunctions_Call_Times_Times_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Times_Times_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Times->addArgument(fUML_Tests_TestRealFunctions_Call_Times_Times_y);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Times);
			// CallBehaviorAction Call(Minus)
			fUML_Tests_TestRealFunctions_Call_Minus->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Minus);
			fUML_Tests_TestRealFunctions_Call_Minus->setName("Call(Minus)");
			fUML_Tests_TestRealFunctions_Call_Minus->setVisibility(VisibilityKind::public_);
				// OutputPin Minus.result
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Minus_Minus_result);
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_result->setName("Minus.result");
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Minus->addResult(fUML_Tests_TestRealFunctions_Call_Minus_Minus_result);
			fUML_Tests_TestRealFunctions_Call_Minus->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_minus);
				// InputPin Minus.x
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Minus_Minus_x);
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_x->setName("Minus.x");
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Minus->addArgument(fUML_Tests_TestRealFunctions_Call_Minus_Minus_x);
				// InputPin Minus.y
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_y->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Minus_Minus_y);
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_y->setName("Minus.y");
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Minus->addArgument(fUML_Tests_TestRealFunctions_Call_Minus_Minus_y);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Minus);
			// ValueSpecificationAction Value(3.1)
			fUML_Tests_TestRealFunctions_Value_3_1->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Value_3_1);
			fUML_Tests_TestRealFunctions_Value_3_1->setName("Value(3.1)");
			fUML_Tests_TestRealFunctions_Value_3_1->setVisibility(VisibilityKind::public_);
				// LiteralReal LiteralReal874
				fUML_Tests_TestRealFunctions_Value_3_1_LiteralReal874->setThisElementPtr(fUML_Tests_TestRealFunctions_Value_3_1_LiteralReal874);
				fUML_Tests_TestRealFunctions_Value_3_1_LiteralReal874->setName("LiteralReal874");
				fUML_Tests_TestRealFunctions_Value_3_1_LiteralReal874->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Value_3_1_LiteralReal874->setValue(3.1f);
			fUML_Tests_TestRealFunctions_Value_3_1->setValue(fUML_Tests_TestRealFunctions_Value_3_1_LiteralReal874);
				// OutputPin Value(3.1).result
				fUML_Tests_TestRealFunctions_Value_3_1_Value_3_1_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Value_3_1_Value_3_1_result);
				fUML_Tests_TestRealFunctions_Value_3_1_Value_3_1_result->setName("Value(3.1).result");
				fUML_Tests_TestRealFunctions_Value_3_1_Value_3_1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Value_3_1_Value_3_1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Value_3_1->setResult(fUML_Tests_TestRealFunctions_Value_3_1_Value_3_1_result);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Value_3_1);
			// CallBehaviorAction Call(Plus)
			fUML_Tests_TestRealFunctions_Call_Plus->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Plus);
			fUML_Tests_TestRealFunctions_Call_Plus->setName("Call(Plus)");
			fUML_Tests_TestRealFunctions_Call_Plus->setVisibility(VisibilityKind::public_);
				// OutputPin Plus.result
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Plus_Plus_result);
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_result->setName("Plus.result");
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Plus->addResult(fUML_Tests_TestRealFunctions_Call_Plus_Plus_result);
			fUML_Tests_TestRealFunctions_Call_Plus->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_plus);
				// InputPin Plus.x
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Plus_Plus_x);
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_x->setName("Plus.x");
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Plus->addArgument(fUML_Tests_TestRealFunctions_Call_Plus_Plus_x);
				// InputPin Plus.y
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_y->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Plus_Plus_y);
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_y->setName("Plus.y");
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Plus->addArgument(fUML_Tests_TestRealFunctions_Call_Plus_Plus_y);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Plus);
			// ActivityParameterNode Param(PlusResult)
			fUML_Tests_TestRealFunctions_Param_PlusResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_PlusResult);
			fUML_Tests_TestRealFunctions_Param_PlusResult->setName("Param(PlusResult)");
			fUML_Tests_TestRealFunctions_Param_PlusResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_PlusResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Param_PlusResult->setParameter(fUML_Tests_TestRealFunctions_PlusResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_PlusResult);
			// ActivityParameterNode Param(MaxResult)
			fUML_Tests_TestRealFunctions_Param_MaxResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_MaxResult);
			fUML_Tests_TestRealFunctions_Param_MaxResult->setName("Param(MaxResult)");
			fUML_Tests_TestRealFunctions_Param_MaxResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_MaxResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Param_MaxResult->setParameter(fUML_Tests_TestRealFunctions_MaxResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_MaxResult);
			// ActivityParameterNode Param(RoundResult)
			fUML_Tests_TestRealFunctions_Param_RoundResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_RoundResult);
			fUML_Tests_TestRealFunctions_Param_RoundResult->setName("Param(RoundResult)");
			fUML_Tests_TestRealFunctions_Param_RoundResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_RoundResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestRealFunctions_Param_RoundResult->setParameter(fUML_Tests_TestRealFunctions_RoundResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_RoundResult);
			// CallBehaviorAction Call(Max)
			fUML_Tests_TestRealFunctions_Call_Max->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Max);
			fUML_Tests_TestRealFunctions_Call_Max->setName("Call(Max)");
			fUML_Tests_TestRealFunctions_Call_Max->setVisibility(VisibilityKind::public_);
				// OutputPin Max.result
				fUML_Tests_TestRealFunctions_Call_Max_Max_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Max_Max_result);
				fUML_Tests_TestRealFunctions_Call_Max_Max_result->setName("Max.result");
				fUML_Tests_TestRealFunctions_Call_Max_Max_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Max_Max_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Max->addResult(fUML_Tests_TestRealFunctions_Call_Max_Max_result);
			fUML_Tests_TestRealFunctions_Call_Max->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_Max);
				// InputPin Max.x
				fUML_Tests_TestRealFunctions_Call_Max_Max_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Max_Max_x);
				fUML_Tests_TestRealFunctions_Call_Max_Max_x->setName("Max.x");
				fUML_Tests_TestRealFunctions_Call_Max_Max_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Max_Max_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Max->addArgument(fUML_Tests_TestRealFunctions_Call_Max_Max_x);
				// InputPin Max.y
				fUML_Tests_TestRealFunctions_Call_Max_Max_y->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Max_Max_y);
				fUML_Tests_TestRealFunctions_Call_Max_Max_y->setName("Max.y");
				fUML_Tests_TestRealFunctions_Call_Max_Max_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Max_Max_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Max->addArgument(fUML_Tests_TestRealFunctions_Call_Max_Max_y);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Max);
			// ActivityParameterNode Param(FloorResult)
			fUML_Tests_TestRealFunctions_Param_FloorResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_FloorResult);
			fUML_Tests_TestRealFunctions_Param_FloorResult->setName("Param(FloorResult)");
			fUML_Tests_TestRealFunctions_Param_FloorResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_FloorResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestRealFunctions_Param_FloorResult->setParameter(fUML_Tests_TestRealFunctions_FloorResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_FloorResult);
			// CallBehaviorAction Call(Divide)
			fUML_Tests_TestRealFunctions_Call_Divide->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Divide);
			fUML_Tests_TestRealFunctions_Call_Divide->setName("Call(Divide)");
			fUML_Tests_TestRealFunctions_Call_Divide->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestRealFunctions_Call_Divide_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Divide_result);
				fUML_Tests_TestRealFunctions_Call_Divide_result->setName("result");
				fUML_Tests_TestRealFunctions_Call_Divide_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Divide_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
				fUML_Tests_TestRealFunctions_Call_Divide_result->setLower(0);
			fUML_Tests_TestRealFunctions_Call_Divide->addResult(fUML_Tests_TestRealFunctions_Call_Divide_result);
			fUML_Tests_TestRealFunctions_Call_Divide->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_divide);
				// InputPin x
				fUML_Tests_TestRealFunctions_Call_Divide_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Divide_x);
				fUML_Tests_TestRealFunctions_Call_Divide_x->setName("x");
				fUML_Tests_TestRealFunctions_Call_Divide_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Divide_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Divide->addArgument(fUML_Tests_TestRealFunctions_Call_Divide_x);
				// InputPin y
				fUML_Tests_TestRealFunctions_Call_Divide_y->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Divide_y);
				fUML_Tests_TestRealFunctions_Call_Divide_y->setName("y");
				fUML_Tests_TestRealFunctions_Call_Divide_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Divide_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Divide->addArgument(fUML_Tests_TestRealFunctions_Call_Divide_y);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Divide);
			// CallBehaviorAction Call(Inv)
			fUML_Tests_TestRealFunctions_Call_Inv->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Inv);
			fUML_Tests_TestRealFunctions_Call_Inv->setName("Call(Inv)");
			fUML_Tests_TestRealFunctions_Call_Inv->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestRealFunctions_Call_Inv_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Inv_result);
				fUML_Tests_TestRealFunctions_Call_Inv_result->setName("result");
				fUML_Tests_TestRealFunctions_Call_Inv_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Inv_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Inv->addResult(fUML_Tests_TestRealFunctions_Call_Inv_result);
			fUML_Tests_TestRealFunctions_Call_Inv->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_Inv);
				// InputPin x
				fUML_Tests_TestRealFunctions_Call_Inv_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Inv_x);
				fUML_Tests_TestRealFunctions_Call_Inv_x->setName("x");
				fUML_Tests_TestRealFunctions_Call_Inv_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Inv_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Inv->addArgument(fUML_Tests_TestRealFunctions_Call_Inv_x);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Inv);
			// ActivityParameterNode Param(ToIntegerResult)
			fUML_Tests_TestRealFunctions_Param_ToIntegerResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_ToIntegerResult);
			fUML_Tests_TestRealFunctions_Param_ToIntegerResult->setName("Param(ToIntegerResult)");
			fUML_Tests_TestRealFunctions_Param_ToIntegerResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_ToIntegerResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestRealFunctions_Param_ToIntegerResult->setParameter(fUML_Tests_TestRealFunctions_ToIntegerResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_ToIntegerResult);
			// CallBehaviorAction Call(Neg)
			fUML_Tests_TestRealFunctions_Call_Neg->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Neg);
			fUML_Tests_TestRealFunctions_Call_Neg->setName("Call(Neg)");
			fUML_Tests_TestRealFunctions_Call_Neg->setVisibility(VisibilityKind::public_);
				// OutputPin Neg.result
				fUML_Tests_TestRealFunctions_Call_Neg_Neg_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Neg_Neg_result);
				fUML_Tests_TestRealFunctions_Call_Neg_Neg_result->setName("Neg.result");
				fUML_Tests_TestRealFunctions_Call_Neg_Neg_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Neg_Neg_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Neg->addResult(fUML_Tests_TestRealFunctions_Call_Neg_Neg_result);
			fUML_Tests_TestRealFunctions_Call_Neg->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_Neg);
				// InputPin Neg.x
				fUML_Tests_TestRealFunctions_Call_Neg_Neg_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Neg_Neg_x);
				fUML_Tests_TestRealFunctions_Call_Neg_Neg_x->setName("Neg.x");
				fUML_Tests_TestRealFunctions_Call_Neg_Neg_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Neg_Neg_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Neg->addArgument(fUML_Tests_TestRealFunctions_Call_Neg_Neg_x);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Neg);
			// CallBehaviorAction Call(Floor)
			fUML_Tests_TestRealFunctions_Call_Floor->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Floor);
			fUML_Tests_TestRealFunctions_Call_Floor->setName("Call(Floor)");
			fUML_Tests_TestRealFunctions_Call_Floor->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestRealFunctions_Call_Floor_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Floor_result);
				fUML_Tests_TestRealFunctions_Call_Floor_result->setName("result");
				fUML_Tests_TestRealFunctions_Call_Floor_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Floor_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestRealFunctions_Call_Floor->addResult(fUML_Tests_TestRealFunctions_Call_Floor_result);
			fUML_Tests_TestRealFunctions_Call_Floor->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_Floor);
				// InputPin x
				fUML_Tests_TestRealFunctions_Call_Floor_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Floor_x);
				fUML_Tests_TestRealFunctions_Call_Floor_x->setName("x");
				fUML_Tests_TestRealFunctions_Call_Floor_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Floor_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Floor->addArgument(fUML_Tests_TestRealFunctions_Call_Floor_x);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Floor);
			// ActivityParameterNode Call(AbsResult)
			fUML_Tests_TestRealFunctions_Call_AbsResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_AbsResult);
			fUML_Tests_TestRealFunctions_Call_AbsResult->setName("Call(AbsResult)");
			fUML_Tests_TestRealFunctions_Call_AbsResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Call_AbsResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_AbsResult->setParameter(fUML_Tests_TestRealFunctions_AbsResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_AbsResult);
			// CallBehaviorAction Call(ToInteger)
			fUML_Tests_TestRealFunctions_Call_ToInteger->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_ToInteger);
			fUML_Tests_TestRealFunctions_Call_ToInteger->setName("Call(ToInteger)");
			fUML_Tests_TestRealFunctions_Call_ToInteger->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestRealFunctions_Call_ToInteger_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_ToInteger_result);
				fUML_Tests_TestRealFunctions_Call_ToInteger_result->setName("result");
				fUML_Tests_TestRealFunctions_Call_ToInteger_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_ToInteger_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestRealFunctions_Call_ToInteger->addResult(fUML_Tests_TestRealFunctions_Call_ToInteger_result);
			fUML_Tests_TestRealFunctions_Call_ToInteger->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_ToInteger);
				// InputPin x
				fUML_Tests_TestRealFunctions_Call_ToInteger_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_ToInteger_x);
				fUML_Tests_TestRealFunctions_Call_ToInteger_x->setName("x");
				fUML_Tests_TestRealFunctions_Call_ToInteger_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_ToInteger_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_ToInteger->addArgument(fUML_Tests_TestRealFunctions_Call_ToInteger_x);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_ToInteger);
			// ForkNode Fork(3.1)
			fUML_Tests_TestRealFunctions_Fork_3_1->setThisElementPtr(fUML_Tests_TestRealFunctions_Fork_3_1);
			fUML_Tests_TestRealFunctions_Fork_3_1->setName("Fork(3.1)");
			fUML_Tests_TestRealFunctions_Fork_3_1->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Fork_3_1);
			// ActivityParameterNode Param(NegResult)
			fUML_Tests_TestRealFunctions_Param_NegResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_NegResult);
			fUML_Tests_TestRealFunctions_Param_NegResult->setName("Param(NegResult)");
			fUML_Tests_TestRealFunctions_Param_NegResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_NegResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Param_NegResult->setParameter(fUML_Tests_TestRealFunctions_NegResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_NegResult);
			// ValueSpecificationAction Value(-2.3)
			fUML_Tests_TestRealFunctions_Value_minus2_3->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Value_minus2_3);
			fUML_Tests_TestRealFunctions_Value_minus2_3->setName("Value(-2.3)");
			fUML_Tests_TestRealFunctions_Value_minus2_3->setVisibility(VisibilityKind::public_);
				// LiteralReal LiteralReal986
				fUML_Tests_TestRealFunctions_Value_minus2_3_LiteralReal986->setThisElementPtr(fUML_Tests_TestRealFunctions_Value_minus2_3_LiteralReal986);
				fUML_Tests_TestRealFunctions_Value_minus2_3_LiteralReal986->setName("LiteralReal986");
				fUML_Tests_TestRealFunctions_Value_minus2_3_LiteralReal986->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Value_minus2_3_LiteralReal986->setValue(-2.3f);
			fUML_Tests_TestRealFunctions_Value_minus2_3->setValue(fUML_Tests_TestRealFunctions_Value_minus2_3_LiteralReal986);
				// OutputPin Value(-2.3).result
				fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result);
				fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result->setName("Value(-2.3).result");
				fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Value_minus2_3->setResult(fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Value_minus2_3);
			// CallBehaviorAction Call(Abs)
			fUML_Tests_TestRealFunctions_Call_Abs->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Abs);
			fUML_Tests_TestRealFunctions_Call_Abs->setName("Call(Abs)");
			fUML_Tests_TestRealFunctions_Call_Abs->setVisibility(VisibilityKind::public_);
				// OutputPin Abs.result
				fUML_Tests_TestRealFunctions_Call_Abs_Abs_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Abs_Abs_result);
				fUML_Tests_TestRealFunctions_Call_Abs_Abs_result->setName("Abs.result");
				fUML_Tests_TestRealFunctions_Call_Abs_Abs_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Abs_Abs_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Abs->addResult(fUML_Tests_TestRealFunctions_Call_Abs_Abs_result);
			fUML_Tests_TestRealFunctions_Call_Abs->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_Abs);
				// InputPin Abs.x
				fUML_Tests_TestRealFunctions_Call_Abs_Abs_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Abs_Abs_x);
				fUML_Tests_TestRealFunctions_Call_Abs_Abs_x->setName("Abs.x");
				fUML_Tests_TestRealFunctions_Call_Abs_Abs_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Abs_Abs_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Abs->addArgument(fUML_Tests_TestRealFunctions_Call_Abs_Abs_x);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Abs);
			// ForkNode Fork(0.5)
			fUML_Tests_TestRealFunctions_Fork_0_5->setThisElementPtr(fUML_Tests_TestRealFunctions_Fork_0_5);
			fUML_Tests_TestRealFunctions_Fork_0_5->setName("Fork(0.5)");
			fUML_Tests_TestRealFunctions_Fork_0_5->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Fork_0_5);
			// ActivityParameterNode Param(TimesResult)
			fUML_Tests_TestRealFunctions_Param_TimesResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_TimesResult);
			fUML_Tests_TestRealFunctions_Param_TimesResult->setName("Param(TimesResult)");
			fUML_Tests_TestRealFunctions_Param_TimesResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_TimesResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Param_TimesResult->setParameter(fUML_Tests_TestRealFunctions_TimesResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_TimesResult);
			// ActivityParameterNode Param(MinResult)
			fUML_Tests_TestRealFunctions_Param_MinResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_MinResult);
			fUML_Tests_TestRealFunctions_Param_MinResult->setName("Param(MinResult)");
			fUML_Tests_TestRealFunctions_Param_MinResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_MinResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Param_MinResult->setParameter(fUML_Tests_TestRealFunctions_MinResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_MinResult);
			// ForkNode Fork(-2.3)
			fUML_Tests_TestRealFunctions_Fork_minus2_3->setThisElementPtr(fUML_Tests_TestRealFunctions_Fork_minus2_3);
			fUML_Tests_TestRealFunctions_Fork_minus2_3->setName("Fork(-2.3)");
			fUML_Tests_TestRealFunctions_Fork_minus2_3->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Fork_minus2_3);
			// ObjectFlow ObjectFlow852 from Fork(3.1) to Plus.x
			fUML_Tests_TestRealFunctions_ObjectFlow852->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow852);
			fUML_Tests_TestRealFunctions_ObjectFlow852->setName("ObjectFlow852");
			fUML_Tests_TestRealFunctions_ObjectFlow852->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow852->setSource(fUML_Tests_TestRealFunctions_Fork_3_1);
			fUML_Tests_TestRealFunctions_ObjectFlow852->setTarget(fUML_Tests_TestRealFunctions_Call_Plus_Plus_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow852);
			// ObjectFlow ObjectFlow933 from Fork(3.1) to x
			fUML_Tests_TestRealFunctions_ObjectFlow933->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow933);
			fUML_Tests_TestRealFunctions_ObjectFlow933->setName("ObjectFlow933");
			fUML_Tests_TestRealFunctions_ObjectFlow933->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow933->setSource(fUML_Tests_TestRealFunctions_Fork_3_1);
			fUML_Tests_TestRealFunctions_ObjectFlow933->setTarget(fUML_Tests_TestRealFunctions_Call_Divide_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow933);
			// ObjectFlow ObjectFlow935 from result to Param(InvResult)
			fUML_Tests_TestRealFunctions_ObjectFlow935->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow935);
			fUML_Tests_TestRealFunctions_ObjectFlow935->setName("ObjectFlow935");
			fUML_Tests_TestRealFunctions_ObjectFlow935->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow935->setSource(fUML_Tests_TestRealFunctions_Call_Inv_result);
			fUML_Tests_TestRealFunctions_ObjectFlow935->setTarget(fUML_Tests_TestRealFunctions_Param_InvResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow935);
			// ObjectFlow ObjectFlow937 from Fork(3.1) to Max.x
			fUML_Tests_TestRealFunctions_ObjectFlow937->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow937);
			fUML_Tests_TestRealFunctions_ObjectFlow937->setName("ObjectFlow937");
			fUML_Tests_TestRealFunctions_ObjectFlow937->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow937->setSource(fUML_Tests_TestRealFunctions_Fork_3_1);
			fUML_Tests_TestRealFunctions_ObjectFlow937->setTarget(fUML_Tests_TestRealFunctions_Call_Max_Max_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow937);
			// ObjectFlow ObjectFlow942 from result to Param(FloorResult)
			fUML_Tests_TestRealFunctions_ObjectFlow942->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow942);
			fUML_Tests_TestRealFunctions_ObjectFlow942->setName("ObjectFlow942");
			fUML_Tests_TestRealFunctions_ObjectFlow942->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow942->setSource(fUML_Tests_TestRealFunctions_Call_Floor_result);
			fUML_Tests_TestRealFunctions_ObjectFlow942->setTarget(fUML_Tests_TestRealFunctions_Param_FloorResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow942);
			// ObjectFlow ObjectFlow944 from Value(0.5).result to Fork(0.5)
			fUML_Tests_TestRealFunctions_ObjectFlow944->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow944);
			fUML_Tests_TestRealFunctions_ObjectFlow944->setName("ObjectFlow944");
			fUML_Tests_TestRealFunctions_ObjectFlow944->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow944->setSource(fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result);
			fUML_Tests_TestRealFunctions_ObjectFlow944->setTarget(fUML_Tests_TestRealFunctions_Fork_0_5);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow944);
			// ObjectFlow ObjectFlow866 from Plus.result to Param(PlusResult)
			fUML_Tests_TestRealFunctions_ObjectFlow866->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow866);
			fUML_Tests_TestRealFunctions_ObjectFlow866->setName("ObjectFlow866");
			fUML_Tests_TestRealFunctions_ObjectFlow866->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow866->setSource(fUML_Tests_TestRealFunctions_Call_Plus_Plus_result);
			fUML_Tests_TestRealFunctions_ObjectFlow866->setTarget(fUML_Tests_TestRealFunctions_Param_PlusResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow866);
			// ObjectFlow ObjectFlow946 from Fork(3.1) to Min.x
			fUML_Tests_TestRealFunctions_ObjectFlow946->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow946);
			fUML_Tests_TestRealFunctions_ObjectFlow946->setName("ObjectFlow946");
			fUML_Tests_TestRealFunctions_ObjectFlow946->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow946->setSource(fUML_Tests_TestRealFunctions_Fork_3_1);
			fUML_Tests_TestRealFunctions_ObjectFlow946->setTarget(fUML_Tests_TestRealFunctions_Call_Min_Min_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow946);
			// ControlFlow ControlFlow948 from Call(Minus) to Call(Inv)
			fUML_Tests_TestRealFunctions_ControlFlow948->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow948);
			fUML_Tests_TestRealFunctions_ControlFlow948->setName("ControlFlow948");
			fUML_Tests_TestRealFunctions_ControlFlow948->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow948->setSource(fUML_Tests_TestRealFunctions_Call_Minus);
			fUML_Tests_TestRealFunctions_ControlFlow948->setTarget(fUML_Tests_TestRealFunctions_Call_Inv);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow948);
			// ControlFlow ControlFlow868 from Call(Min) to Call(Abs)
			fUML_Tests_TestRealFunctions_ControlFlow868->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow868);
			fUML_Tests_TestRealFunctions_ControlFlow868->setName("ControlFlow868");
			fUML_Tests_TestRealFunctions_ControlFlow868->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow868->setSource(fUML_Tests_TestRealFunctions_Call_Min);
			fUML_Tests_TestRealFunctions_ControlFlow868->setTarget(fUML_Tests_TestRealFunctions_Call_Abs);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow868);
			// ObjectFlow ObjectFlow870 from result to Param(DivideResult)
			fUML_Tests_TestRealFunctions_ObjectFlow870->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow870);
			fUML_Tests_TestRealFunctions_ObjectFlow870->setName("ObjectFlow870");
			fUML_Tests_TestRealFunctions_ObjectFlow870->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow870->setSource(fUML_Tests_TestRealFunctions_Call_Divide_result);
			fUML_Tests_TestRealFunctions_ObjectFlow870->setTarget(fUML_Tests_TestRealFunctions_Param_DivideResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow870);
			// ObjectFlow ObjectFlow872 from Fork(3.1) to Times.x
			fUML_Tests_TestRealFunctions_ObjectFlow872->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow872);
			fUML_Tests_TestRealFunctions_ObjectFlow872->setName("ObjectFlow872");
			fUML_Tests_TestRealFunctions_ObjectFlow872->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow872->setSource(fUML_Tests_TestRealFunctions_Fork_3_1);
			fUML_Tests_TestRealFunctions_ObjectFlow872->setTarget(fUML_Tests_TestRealFunctions_Call_Times_Times_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow872);
			// ObjectFlow ObjectFlow875 from Round.result to Param(RoundResult)
			fUML_Tests_TestRealFunctions_ObjectFlow875->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow875);
			fUML_Tests_TestRealFunctions_ObjectFlow875->setName("ObjectFlow875");
			fUML_Tests_TestRealFunctions_ObjectFlow875->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow875->setSource(fUML_Tests_TestRealFunctions_Call_Round_Round_result);
			fUML_Tests_TestRealFunctions_ObjectFlow875->setTarget(fUML_Tests_TestRealFunctions_Param_RoundResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow875);
			// ObjectFlow ObjectFlow877 from Fork(0.5) to Plus.y
			fUML_Tests_TestRealFunctions_ObjectFlow877->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow877);
			fUML_Tests_TestRealFunctions_ObjectFlow877->setName("ObjectFlow877");
			fUML_Tests_TestRealFunctions_ObjectFlow877->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow877->setSource(fUML_Tests_TestRealFunctions_Fork_0_5);
			fUML_Tests_TestRealFunctions_ObjectFlow877->setTarget(fUML_Tests_TestRealFunctions_Call_Plus_Plus_y);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow877);
			// ObjectFlow ObjectFlow950 from Neg.result to Param(NegResult)
			fUML_Tests_TestRealFunctions_ObjectFlow950->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow950);
			fUML_Tests_TestRealFunctions_ObjectFlow950->setName("ObjectFlow950");
			fUML_Tests_TestRealFunctions_ObjectFlow950->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow950->setSource(fUML_Tests_TestRealFunctions_Call_Neg_Neg_result);
			fUML_Tests_TestRealFunctions_ObjectFlow950->setTarget(fUML_Tests_TestRealFunctions_Param_NegResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow950);
			// ObjectFlow ObjectFlow952 from Value(-2.3).result to Fork(-2.3)
			fUML_Tests_TestRealFunctions_ObjectFlow952->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow952);
			fUML_Tests_TestRealFunctions_ObjectFlow952->setName("ObjectFlow952");
			fUML_Tests_TestRealFunctions_ObjectFlow952->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow952->setSource(fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result);
			fUML_Tests_TestRealFunctions_ObjectFlow952->setTarget(fUML_Tests_TestRealFunctions_Fork_minus2_3);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow952);
			// ObjectFlow ObjectFlow885 from Fork(0.5) to Max.y
			fUML_Tests_TestRealFunctions_ObjectFlow885->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow885);
			fUML_Tests_TestRealFunctions_ObjectFlow885->setName("ObjectFlow885");
			fUML_Tests_TestRealFunctions_ObjectFlow885->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow885->setSource(fUML_Tests_TestRealFunctions_Fork_0_5);
			fUML_Tests_TestRealFunctions_ObjectFlow885->setTarget(fUML_Tests_TestRealFunctions_Call_Max_Max_y);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow885);
			// ObjectFlow ObjectFlow960 from Fork(3.1) to Minus.x
			fUML_Tests_TestRealFunctions_ObjectFlow960->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow960);
			fUML_Tests_TestRealFunctions_ObjectFlow960->setName("ObjectFlow960");
			fUML_Tests_TestRealFunctions_ObjectFlow960->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow960->setSource(fUML_Tests_TestRealFunctions_Fork_3_1);
			fUML_Tests_TestRealFunctions_ObjectFlow960->setTarget(fUML_Tests_TestRealFunctions_Call_Minus_Minus_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow960);
			// ControlFlow ControlFlow962 from Call(Plus) to Call(Minus)
			fUML_Tests_TestRealFunctions_ControlFlow962->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow962);
			fUML_Tests_TestRealFunctions_ControlFlow962->setName("ControlFlow962");
			fUML_Tests_TestRealFunctions_ControlFlow962->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow962->setSource(fUML_Tests_TestRealFunctions_Call_Plus);
			fUML_Tests_TestRealFunctions_ControlFlow962->setTarget(fUML_Tests_TestRealFunctions_Call_Minus);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow962);
			// ControlFlow ControlFlow964 from Call(Round) to Call(ToInteger)
			fUML_Tests_TestRealFunctions_ControlFlow964->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow964);
			fUML_Tests_TestRealFunctions_ControlFlow964->setName("ControlFlow964");
			fUML_Tests_TestRealFunctions_ControlFlow964->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow964->setSource(fUML_Tests_TestRealFunctions_Call_Round);
			fUML_Tests_TestRealFunctions_ControlFlow964->setTarget(fUML_Tests_TestRealFunctions_Call_ToInteger);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow964);
			// ObjectFlow ObjectFlow887 from Fork(0.5) to x
			fUML_Tests_TestRealFunctions_ObjectFlow887->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow887);
			fUML_Tests_TestRealFunctions_ObjectFlow887->setName("ObjectFlow887");
			fUML_Tests_TestRealFunctions_ObjectFlow887->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow887->setSource(fUML_Tests_TestRealFunctions_Fork_0_5);
			fUML_Tests_TestRealFunctions_ObjectFlow887->setTarget(fUML_Tests_TestRealFunctions_Call_Inv_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow887);
			// ObjectFlow ObjectFlow889 from Minus.result to Param(MinusResult)
			fUML_Tests_TestRealFunctions_ObjectFlow889->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow889);
			fUML_Tests_TestRealFunctions_ObjectFlow889->setName("ObjectFlow889");
			fUML_Tests_TestRealFunctions_ObjectFlow889->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow889->setSource(fUML_Tests_TestRealFunctions_Call_Minus_Minus_result);
			fUML_Tests_TestRealFunctions_ObjectFlow889->setTarget(fUML_Tests_TestRealFunctions_Param_MinusResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow889);
			// ControlFlow ControlFlow976 from Call(Abs) to Call(Floor)
			fUML_Tests_TestRealFunctions_ControlFlow976->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow976);
			fUML_Tests_TestRealFunctions_ControlFlow976->setName("ControlFlow976");
			fUML_Tests_TestRealFunctions_ControlFlow976->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow976->setSource(fUML_Tests_TestRealFunctions_Call_Abs);
			fUML_Tests_TestRealFunctions_ControlFlow976->setTarget(fUML_Tests_TestRealFunctions_Call_Floor);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow976);
			// ControlFlow ControlFlow980 from Call(Floor) to Call(Round)
			fUML_Tests_TestRealFunctions_ControlFlow980->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow980);
			fUML_Tests_TestRealFunctions_ControlFlow980->setName("ControlFlow980");
			fUML_Tests_TestRealFunctions_ControlFlow980->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow980->setSource(fUML_Tests_TestRealFunctions_Call_Floor);
			fUML_Tests_TestRealFunctions_ControlFlow980->setTarget(fUML_Tests_TestRealFunctions_Call_Round);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow980);
			// ObjectFlow ObjectFlow899 from Fork(0.5) to Minus.y
			fUML_Tests_TestRealFunctions_ObjectFlow899->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow899);
			fUML_Tests_TestRealFunctions_ObjectFlow899->setName("ObjectFlow899");
			fUML_Tests_TestRealFunctions_ObjectFlow899->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow899->setSource(fUML_Tests_TestRealFunctions_Fork_0_5);
			fUML_Tests_TestRealFunctions_ObjectFlow899->setTarget(fUML_Tests_TestRealFunctions_Call_Minus_Minus_y);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow899);
			// ObjectFlow ObjectFlow982 from Times.result to Param(TimesResult)
			fUML_Tests_TestRealFunctions_ObjectFlow982->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow982);
			fUML_Tests_TestRealFunctions_ObjectFlow982->setName("ObjectFlow982");
			fUML_Tests_TestRealFunctions_ObjectFlow982->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow982->setSource(fUML_Tests_TestRealFunctions_Call_Times_Times_result);
			fUML_Tests_TestRealFunctions_ObjectFlow982->setTarget(fUML_Tests_TestRealFunctions_Param_TimesResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow982);
			// ObjectFlow ObjectFlow901 from Fork(0.5) to Min.y
			fUML_Tests_TestRealFunctions_ObjectFlow901->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow901);
			fUML_Tests_TestRealFunctions_ObjectFlow901->setName("ObjectFlow901");
			fUML_Tests_TestRealFunctions_ObjectFlow901->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow901->setSource(fUML_Tests_TestRealFunctions_Fork_0_5);
			fUML_Tests_TestRealFunctions_ObjectFlow901->setTarget(fUML_Tests_TestRealFunctions_Call_Min_Min_y);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow901);
			// ObjectFlow ObjectFlow903 from Fork(-2.3) to Abs.x
			fUML_Tests_TestRealFunctions_ObjectFlow903->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow903);
			fUML_Tests_TestRealFunctions_ObjectFlow903->setName("ObjectFlow903");
			fUML_Tests_TestRealFunctions_ObjectFlow903->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow903->setSource(fUML_Tests_TestRealFunctions_Fork_minus2_3);
			fUML_Tests_TestRealFunctions_ObjectFlow903->setTarget(fUML_Tests_TestRealFunctions_Call_Abs_Abs_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow903);
			// ObjectFlow ObjectFlow987 from Value(3.1).result to Fork(3.1)
			fUML_Tests_TestRealFunctions_ObjectFlow987->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow987);
			fUML_Tests_TestRealFunctions_ObjectFlow987->setName("ObjectFlow987");
			fUML_Tests_TestRealFunctions_ObjectFlow987->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow987->setSource(fUML_Tests_TestRealFunctions_Value_3_1_Value_3_1_result);
			fUML_Tests_TestRealFunctions_ObjectFlow987->setTarget(fUML_Tests_TestRealFunctions_Fork_3_1);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow987);
			// ObjectFlow ObjectFlow905 from Fork(-2.3) to Round.x
			fUML_Tests_TestRealFunctions_ObjectFlow905->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow905);
			fUML_Tests_TestRealFunctions_ObjectFlow905->setName("ObjectFlow905");
			fUML_Tests_TestRealFunctions_ObjectFlow905->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow905->setSource(fUML_Tests_TestRealFunctions_Fork_minus2_3);
			fUML_Tests_TestRealFunctions_ObjectFlow905->setTarget(fUML_Tests_TestRealFunctions_Call_Round_Round_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow905);
			// ControlFlow ControlFlow911 from Call(Inv) to Call(Times)
			fUML_Tests_TestRealFunctions_ControlFlow911->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow911);
			fUML_Tests_TestRealFunctions_ControlFlow911->setName("ControlFlow911");
			fUML_Tests_TestRealFunctions_ControlFlow911->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow911->setSource(fUML_Tests_TestRealFunctions_Call_Inv);
			fUML_Tests_TestRealFunctions_ControlFlow911->setTarget(fUML_Tests_TestRealFunctions_Call_Times);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow911);
			// ControlFlow ControlFlow991 from Call(Neg) to Call(Plus)
			fUML_Tests_TestRealFunctions_ControlFlow991->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow991);
			fUML_Tests_TestRealFunctions_ControlFlow991->setName("ControlFlow991");
			fUML_Tests_TestRealFunctions_ControlFlow991->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow991->setSource(fUML_Tests_TestRealFunctions_Call_Neg);
			fUML_Tests_TestRealFunctions_ControlFlow991->setTarget(fUML_Tests_TestRealFunctions_Call_Plus);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow991);
			// ControlFlow ControlFlow993 from Call(Times) to Call(Divide)
			fUML_Tests_TestRealFunctions_ControlFlow993->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow993);
			fUML_Tests_TestRealFunctions_ControlFlow993->setName("ControlFlow993");
			fUML_Tests_TestRealFunctions_ControlFlow993->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow993->setSource(fUML_Tests_TestRealFunctions_Call_Times);
			fUML_Tests_TestRealFunctions_ControlFlow993->setTarget(fUML_Tests_TestRealFunctions_Call_Divide);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow993);
			// ObjectFlow ObjectFlow995 from Fork(0.5) to Times.y
			fUML_Tests_TestRealFunctions_ObjectFlow995->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow995);
			fUML_Tests_TestRealFunctions_ObjectFlow995->setName("ObjectFlow995");
			fUML_Tests_TestRealFunctions_ObjectFlow995->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow995->setSource(fUML_Tests_TestRealFunctions_Fork_0_5);
			fUML_Tests_TestRealFunctions_ObjectFlow995->setTarget(fUML_Tests_TestRealFunctions_Call_Times_Times_y);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow995);
			// ObjectFlow ObjectFlow997 from Fork(-2.3) to x
			fUML_Tests_TestRealFunctions_ObjectFlow997->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow997);
			fUML_Tests_TestRealFunctions_ObjectFlow997->setName("ObjectFlow997");
			fUML_Tests_TestRealFunctions_ObjectFlow997->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow997->setSource(fUML_Tests_TestRealFunctions_Fork_minus2_3);
			fUML_Tests_TestRealFunctions_ObjectFlow997->setTarget(fUML_Tests_TestRealFunctions_Call_Floor_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow997);
			// ObjectFlow ObjectFlow999 from Max.result to Param(MaxResult)
			fUML_Tests_TestRealFunctions_ObjectFlow999->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow999);
			fUML_Tests_TestRealFunctions_ObjectFlow999->setName("ObjectFlow999");
			fUML_Tests_TestRealFunctions_ObjectFlow999->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow999->setSource(fUML_Tests_TestRealFunctions_Call_Max_Max_result);
			fUML_Tests_TestRealFunctions_ObjectFlow999->setTarget(fUML_Tests_TestRealFunctions_Param_MaxResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow999);
			// ObjectFlow ObjectFlow913 from Fork(-2.3) to x
			fUML_Tests_TestRealFunctions_ObjectFlow913->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow913);
			fUML_Tests_TestRealFunctions_ObjectFlow913->setName("ObjectFlow913");
			fUML_Tests_TestRealFunctions_ObjectFlow913->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow913->setSource(fUML_Tests_TestRealFunctions_Fork_minus2_3);
			fUML_Tests_TestRealFunctions_ObjectFlow913->setTarget(fUML_Tests_TestRealFunctions_Call_ToInteger_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow913);
			// ObjectFlow ObjectFlow915 from Abs.result to Call(AbsResult)
			fUML_Tests_TestRealFunctions_ObjectFlow915->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow915);
			fUML_Tests_TestRealFunctions_ObjectFlow915->setName("ObjectFlow915");
			fUML_Tests_TestRealFunctions_ObjectFlow915->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow915->setSource(fUML_Tests_TestRealFunctions_Call_Abs_Abs_result);
			fUML_Tests_TestRealFunctions_ObjectFlow915->setTarget(fUML_Tests_TestRealFunctions_Call_AbsResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow915);
			// ControlFlow ControlFlow917 from Call(Divide) to Call(Max)
			fUML_Tests_TestRealFunctions_ControlFlow917->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow917);
			fUML_Tests_TestRealFunctions_ControlFlow917->setName("ControlFlow917");
			fUML_Tests_TestRealFunctions_ControlFlow917->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow917->setSource(fUML_Tests_TestRealFunctions_Call_Divide);
			fUML_Tests_TestRealFunctions_ControlFlow917->setTarget(fUML_Tests_TestRealFunctions_Call_Max);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow917);
			// ObjectFlow ObjectFlow919 from Fork(3.1) to Neg.x
			fUML_Tests_TestRealFunctions_ObjectFlow919->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow919);
			fUML_Tests_TestRealFunctions_ObjectFlow919->setName("ObjectFlow919");
			fUML_Tests_TestRealFunctions_ObjectFlow919->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow919->setSource(fUML_Tests_TestRealFunctions_Fork_3_1);
			fUML_Tests_TestRealFunctions_ObjectFlow919->setTarget(fUML_Tests_TestRealFunctions_Call_Neg_Neg_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow919);
			// ObjectFlow ObjectFlow921 from Fork(0.5) to y
			fUML_Tests_TestRealFunctions_ObjectFlow921->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow921);
			fUML_Tests_TestRealFunctions_ObjectFlow921->setName("ObjectFlow921");
			fUML_Tests_TestRealFunctions_ObjectFlow921->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow921->setSource(fUML_Tests_TestRealFunctions_Fork_0_5);
			fUML_Tests_TestRealFunctions_ObjectFlow921->setTarget(fUML_Tests_TestRealFunctions_Call_Divide_y);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow921);
			// ObjectFlow ObjectFlow1001 from Min.result to Param(MinResult)
			fUML_Tests_TestRealFunctions_ObjectFlow1001->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1001);
			fUML_Tests_TestRealFunctions_ObjectFlow1001->setName("ObjectFlow1001");
			fUML_Tests_TestRealFunctions_ObjectFlow1001->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1001->setSource(fUML_Tests_TestRealFunctions_Call_Min_Min_result);
			fUML_Tests_TestRealFunctions_ObjectFlow1001->setTarget(fUML_Tests_TestRealFunctions_Param_MinResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1001);
			// ControlFlow ControlFlow1003 from Call(Max) to Call(Min)
			fUML_Tests_TestRealFunctions_ControlFlow1003->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow1003);
			fUML_Tests_TestRealFunctions_ControlFlow1003->setName("ControlFlow1003");
			fUML_Tests_TestRealFunctions_ControlFlow1003->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow1003->setSource(fUML_Tests_TestRealFunctions_Call_Max);
			fUML_Tests_TestRealFunctions_ControlFlow1003->setTarget(fUML_Tests_TestRealFunctions_Call_Min);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow1003);
			// ObjectFlow ObjectFlow923 from result to Param(ToIntegerResult)
			fUML_Tests_TestRealFunctions_ObjectFlow923->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow923);
			fUML_Tests_TestRealFunctions_ObjectFlow923->setName("ObjectFlow923");
			fUML_Tests_TestRealFunctions_ObjectFlow923->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow923->setSource(fUML_Tests_TestRealFunctions_Call_ToInteger_result);
			fUML_Tests_TestRealFunctions_ObjectFlow923->setTarget(fUML_Tests_TestRealFunctions_Param_ToIntegerResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow923);
	fUML_Tests->addPackagedElement(fUML_Tests_TestRealFunctions);
		// Activity TestClassWriterReader
		fUML_Tests_TestClassWriterReader->setThisActivityPtr(fUML_Tests_TestClassWriterReader);
		fUML_Tests_TestClassWriterReader->setName("TestClassWriterReader");
		fUML_Tests_TestClassWriterReader->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestClassWriterReader->isReentrant = false;
			// Parameter x
			fUML_Tests_TestClassWriterReader_x->setThisElementPtr(fUML_Tests_TestClassWriterReader_x);
			fUML_Tests_TestClassWriterReader_x->setName("x");
			fUML_Tests_TestClassWriterReader_x->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassWriterReader_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassWriterReader_x->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassWriterReader->addOwnedParameter(fUML_Tests_TestClassWriterReader_x);
			// ActivityParameterNode Parameter(x)
			fUML_Tests_TestClassWriterReader_Parameter_x->setThisElementPtr(fUML_Tests_TestClassWriterReader_Parameter_x);
			fUML_Tests_TestClassWriterReader_Parameter_x->setName("Parameter(x)");
			fUML_Tests_TestClassWriterReader_Parameter_x->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassWriterReader_Parameter_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassWriterReader_Parameter_x->setParameter(fUML_Tests_TestClassWriterReader_x);
		fUML_Tests_TestClassWriterReader->addNode(fUML_Tests_TestClassWriterReader_Parameter_x);
			// ValueSpecificationAction Value(999)
			fUML_Tests_TestClassWriterReader_Value_999->setThisExecutableNodePtr(fUML_Tests_TestClassWriterReader_Value_999);
			fUML_Tests_TestClassWriterReader_Value_999->setName("Value(999)");
			fUML_Tests_TestClassWriterReader_Value_999->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1011
				fUML_Tests_TestClassWriterReader_Value_999_LiteralInteger1011->setThisElementPtr(fUML_Tests_TestClassWriterReader_Value_999_LiteralInteger1011);
				fUML_Tests_TestClassWriterReader_Value_999_LiteralInteger1011->setName("LiteralInteger1011");
				fUML_Tests_TestClassWriterReader_Value_999_LiteralInteger1011->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassWriterReader_Value_999_LiteralInteger1011->setValue(999);
			fUML_Tests_TestClassWriterReader_Value_999->setValue(fUML_Tests_TestClassWriterReader_Value_999_LiteralInteger1011);
				// OutputPin Value(999).result
				fUML_Tests_TestClassWriterReader_Value_999_Value_999_result->setThisElementPtr(fUML_Tests_TestClassWriterReader_Value_999_Value_999_result);
				fUML_Tests_TestClassWriterReader_Value_999_Value_999_result->setName("Value(999).result");
				fUML_Tests_TestClassWriterReader_Value_999_Value_999_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassWriterReader_Value_999_Value_999_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassWriterReader_Value_999->setResult(fUML_Tests_TestClassWriterReader_Value_999_Value_999_result);
		fUML_Tests_TestClassWriterReader->addNode(fUML_Tests_TestClassWriterReader_Value_999);
			// CreateObjectAction Create(TestClass)
			fUML_Tests_TestClassWriterReader_Create_TestClass->setThisExecutableNodePtr(fUML_Tests_TestClassWriterReader_Create_TestClass);
			fUML_Tests_TestClassWriterReader_Create_TestClass->setName("Create(TestClass)");
			fUML_Tests_TestClassWriterReader_Create_TestClass->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassWriterReader_Create_TestClass->setClassifier(fUML_Tests_TestClass);
				// OutputPin Create(TestClass).result
				fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result->setThisElementPtr(fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result);
				fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result->setName("Create(TestClass).result");
				fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassWriterReader_Create_TestClass->setResult(fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result);
		fUML_Tests_TestClassWriterReader->addNode(fUML_Tests_TestClassWriterReader_Create_TestClass);
			// ReadStructuralFeatureAction Read(x)
			fUML_Tests_TestClassWriterReader_Read_x->setThisExecutableNodePtr(fUML_Tests_TestClassWriterReader_Read_x);
			fUML_Tests_TestClassWriterReader_Read_x->setName("Read(x)");
			fUML_Tests_TestClassWriterReader_Read_x->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassWriterReader_Read_x->setStructuralFeature(fUML_Tests_TestClass_x);
				// InputPin Read(x).object
				fUML_Tests_TestClassWriterReader_Read_x_Read_x_object->setThisElementPtr(fUML_Tests_TestClassWriterReader_Read_x_Read_x_object);
				fUML_Tests_TestClassWriterReader_Read_x_Read_x_object->setName("Read(x).object");
				fUML_Tests_TestClassWriterReader_Read_x_Read_x_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassWriterReader_Read_x_Read_x_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassWriterReader_Read_x->setObject(fUML_Tests_TestClassWriterReader_Read_x_Read_x_object);
				// OutputPin Read(x).result
				fUML_Tests_TestClassWriterReader_Read_x_Read_x_result->setThisElementPtr(fUML_Tests_TestClassWriterReader_Read_x_Read_x_result);
				fUML_Tests_TestClassWriterReader_Read_x_Read_x_result->setName("Read(x).result");
				fUML_Tests_TestClassWriterReader_Read_x_Read_x_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassWriterReader_Read_x_Read_x_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassWriterReader_Read_x->setResult(fUML_Tests_TestClassWriterReader_Read_x_Read_x_result);
		fUML_Tests_TestClassWriterReader->addNode(fUML_Tests_TestClassWriterReader_Read_x);
			// AddStructuralFeatureValueAction Write(x)
			fUML_Tests_TestClassWriterReader_Write_x->setThisExecutableNodePtr(fUML_Tests_TestClassWriterReader_Write_x);
			fUML_Tests_TestClassWriterReader_Write_x->setName("Write(x)");
			fUML_Tests_TestClassWriterReader_Write_x->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassWriterReader_Write_x->setStructuralFeature(fUML_Tests_TestClass_x);
				// InputPin Write(x).object
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_object->setThisElementPtr(fUML_Tests_TestClassWriterReader_Write_x_Write_x_object);
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_object->setName("Write(x).object");
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassWriterReader_Write_x->setObject(fUML_Tests_TestClassWriterReader_Write_x_Write_x_object);
				// InputPin Write(x).value
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_value->setThisElementPtr(fUML_Tests_TestClassWriterReader_Write_x_Write_x_value);
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_value->setName("Write(x).value");
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassWriterReader_Write_x->setValue(fUML_Tests_TestClassWriterReader_Write_x_Write_x_value);
				// OutputPin Write(x).result
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_result->setThisElementPtr(fUML_Tests_TestClassWriterReader_Write_x_Write_x_result);
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_result->setName("Write(x).result");
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassWriterReader_Write_x->setResult(fUML_Tests_TestClassWriterReader_Write_x_Write_x_result);
			fUML_Tests_TestClassWriterReader_Write_x->setIsReplaceAll(true);
		fUML_Tests_TestClassWriterReader->addNode(fUML_Tests_TestClassWriterReader_Write_x);
			// ObjectFlow ObjectFlow1005 from Write(x).result to Read(x).object
			fUML_Tests_TestClassWriterReader_ObjectFlow1005->setThisActivityEdgePtr(fUML_Tests_TestClassWriterReader_ObjectFlow1005);
			fUML_Tests_TestClassWriterReader_ObjectFlow1005->setName("ObjectFlow1005");
			fUML_Tests_TestClassWriterReader_ObjectFlow1005->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassWriterReader_ObjectFlow1005->setSource(fUML_Tests_TestClassWriterReader_Write_x_Write_x_result);
			fUML_Tests_TestClassWriterReader_ObjectFlow1005->setTarget(fUML_Tests_TestClassWriterReader_Read_x_Read_x_object);
		fUML_Tests_TestClassWriterReader->addEdge(fUML_Tests_TestClassWriterReader_ObjectFlow1005);
			// ObjectFlow ObjectFlow1007 from Create(TestClass).result to Write(x).object
			fUML_Tests_TestClassWriterReader_ObjectFlow1007->setThisActivityEdgePtr(fUML_Tests_TestClassWriterReader_ObjectFlow1007);
			fUML_Tests_TestClassWriterReader_ObjectFlow1007->setName("ObjectFlow1007");
			fUML_Tests_TestClassWriterReader_ObjectFlow1007->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassWriterReader_ObjectFlow1007->setSource(fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result);
			fUML_Tests_TestClassWriterReader_ObjectFlow1007->setTarget(fUML_Tests_TestClassWriterReader_Write_x_Write_x_object);
		fUML_Tests_TestClassWriterReader->addEdge(fUML_Tests_TestClassWriterReader_ObjectFlow1007);
			// ObjectFlow ObjectFlow1009 from Value(999).result to Write(x).value
			fUML_Tests_TestClassWriterReader_ObjectFlow1009->setThisActivityEdgePtr(fUML_Tests_TestClassWriterReader_ObjectFlow1009);
			fUML_Tests_TestClassWriterReader_ObjectFlow1009->setName("ObjectFlow1009");
			fUML_Tests_TestClassWriterReader_ObjectFlow1009->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassWriterReader_ObjectFlow1009->setSource(fUML_Tests_TestClassWriterReader_Value_999_Value_999_result);
			fUML_Tests_TestClassWriterReader_ObjectFlow1009->setTarget(fUML_Tests_TestClassWriterReader_Write_x_Write_x_value);
		fUML_Tests_TestClassWriterReader->addEdge(fUML_Tests_TestClassWriterReader_ObjectFlow1009);
			// ObjectFlow ObjectFlow1016 from Read(x).result to Parameter(x)
			fUML_Tests_TestClassWriterReader_ObjectFlow1016->setThisActivityEdgePtr(fUML_Tests_TestClassWriterReader_ObjectFlow1016);
			fUML_Tests_TestClassWriterReader_ObjectFlow1016->setName("ObjectFlow1016");
			fUML_Tests_TestClassWriterReader_ObjectFlow1016->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassWriterReader_ObjectFlow1016->setSource(fUML_Tests_TestClassWriterReader_Read_x_Read_x_result);
			fUML_Tests_TestClassWriterReader_ObjectFlow1016->setTarget(fUML_Tests_TestClassWriterReader_Parameter_x);
		fUML_Tests_TestClassWriterReader->addEdge(fUML_Tests_TestClassWriterReader_ObjectFlow1016);
	fUML_Tests->addPackagedElement(fUML_Tests_TestClassWriterReader);
		// Activity TestCentralBuffer
		fUML_Tests_TestCentralBuffer->setThisActivityPtr(fUML_Tests_TestCentralBuffer);
		fUML_Tests_TestCentralBuffer->setName("TestCentralBuffer");
		fUML_Tests_TestCentralBuffer->setVisibility(VisibilityKind::public_);
			// Parameter input1
			fUML_Tests_TestCentralBuffer_input1->setThisElementPtr(fUML_Tests_TestCentralBuffer_input1);
			fUML_Tests_TestCentralBuffer_input1->setName("input1");
			fUML_Tests_TestCentralBuffer_input1->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCentralBuffer_input1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
		fUML_Tests_TestCentralBuffer->addOwnedParameter(fUML_Tests_TestCentralBuffer_input1);
			// Parameter input2
			fUML_Tests_TestCentralBuffer_input2->setThisElementPtr(fUML_Tests_TestCentralBuffer_input2);
			fUML_Tests_TestCentralBuffer_input2->setName("input2");
			fUML_Tests_TestCentralBuffer_input2->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCentralBuffer_input2->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
		fUML_Tests_TestCentralBuffer->addOwnedParameter(fUML_Tests_TestCentralBuffer_input2);
			// Parameter output
			fUML_Tests_TestCentralBuffer_output->setThisElementPtr(fUML_Tests_TestCentralBuffer_output);
			fUML_Tests_TestCentralBuffer_output->setName("output");
			fUML_Tests_TestCentralBuffer_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCentralBuffer_output->setUpper(-1);
			fUML_Tests_TestCentralBuffer_output->setLower(0);
			fUML_Tests_TestCentralBuffer_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestCentralBuffer_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestCentralBuffer->addOwnedParameter(fUML_Tests_TestCentralBuffer_output);
			// InitialNode InitialNode
			fUML_Tests_TestCentralBuffer_InitialNode->setThisElementPtr(fUML_Tests_TestCentralBuffer_InitialNode);
			fUML_Tests_TestCentralBuffer_InitialNode->setName("InitialNode");
			fUML_Tests_TestCentralBuffer_InitialNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestCentralBuffer->addNode(fUML_Tests_TestCentralBuffer_InitialNode);
			// ActivityParameterNode Parameter(input1)
			fUML_Tests_TestCentralBuffer_Parameter_input1->setThisElementPtr(fUML_Tests_TestCentralBuffer_Parameter_input1);
			fUML_Tests_TestCentralBuffer_Parameter_input1->setName("Parameter(input1)");
			fUML_Tests_TestCentralBuffer_Parameter_input1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCentralBuffer_Parameter_input1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestCentralBuffer_Parameter_input1->setParameter(fUML_Tests_TestCentralBuffer_input1);
		fUML_Tests_TestCentralBuffer->addNode(fUML_Tests_TestCentralBuffer_Parameter_input1);
			// ActivityParameterNode Parameter(output)
			fUML_Tests_TestCentralBuffer_Parameter_output->setThisElementPtr(fUML_Tests_TestCentralBuffer_Parameter_output);
			fUML_Tests_TestCentralBuffer_Parameter_output->setName("Parameter(output)");
			fUML_Tests_TestCentralBuffer_Parameter_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCentralBuffer_Parameter_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestCentralBuffer_Parameter_output->setParameter(fUML_Tests_TestCentralBuffer_output);
		fUML_Tests_TestCentralBuffer->addNode(fUML_Tests_TestCentralBuffer_Parameter_output);
			// ActivityParameterNode Parameter(input2)
			fUML_Tests_TestCentralBuffer_Parameter_input2->setThisElementPtr(fUML_Tests_TestCentralBuffer_Parameter_input2);
			fUML_Tests_TestCentralBuffer_Parameter_input2->setName("Parameter(input2)");
			fUML_Tests_TestCentralBuffer_Parameter_input2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCentralBuffer_Parameter_input2->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestCentralBuffer_Parameter_input2->setParameter(fUML_Tests_TestCentralBuffer_input2);
		fUML_Tests_TestCentralBuffer->addNode(fUML_Tests_TestCentralBuffer_Parameter_input2);
			// Initialization is currently unimplemented for metaclass StructuredActivityNode
		fUML_Tests_TestCentralBuffer->addNode(fUML_Tests_TestCentralBuffer_StructuredActivityNode);
			// ObjectFlow ObjectFlow1032 from CentralBufferNode to Parameter(output)
			fUML_Tests_TestCentralBuffer_ObjectFlow1032->setThisActivityEdgePtr(fUML_Tests_TestCentralBuffer_ObjectFlow1032);
			fUML_Tests_TestCentralBuffer_ObjectFlow1032->setName("ObjectFlow1032");
			fUML_Tests_TestCentralBuffer_ObjectFlow1032->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCentralBuffer_ObjectFlow1032->setSource(fUML_Tests_TestCentralBuffer_StructuredActivityNode_CentralBufferNode);
			fUML_Tests_TestCentralBuffer_ObjectFlow1032->setTarget(fUML_Tests_TestCentralBuffer_Parameter_output);
		fUML_Tests_TestCentralBuffer->addEdge(fUML_Tests_TestCentralBuffer_ObjectFlow1032);
			// ControlFlow ControlFlow1034 from InitialNode to StructuredActivityNode
			fUML_Tests_TestCentralBuffer_ControlFlow1034->setThisActivityEdgePtr(fUML_Tests_TestCentralBuffer_ControlFlow1034);
			fUML_Tests_TestCentralBuffer_ControlFlow1034->setName("ControlFlow1034");
			fUML_Tests_TestCentralBuffer_ControlFlow1034->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCentralBuffer_ControlFlow1034->setSource(fUML_Tests_TestCentralBuffer_InitialNode);
			fUML_Tests_TestCentralBuffer_ControlFlow1034->setTarget(fUML_Tests_TestCentralBuffer_StructuredActivityNode);
		fUML_Tests_TestCentralBuffer->addEdge(fUML_Tests_TestCentralBuffer_ControlFlow1034);
			// ObjectFlow ObjectFlow1036 from Parameter(input1) to CentralBufferNode
			fUML_Tests_TestCentralBuffer_ObjectFlow1036->setThisActivityEdgePtr(fUML_Tests_TestCentralBuffer_ObjectFlow1036);
			fUML_Tests_TestCentralBuffer_ObjectFlow1036->setName("ObjectFlow1036");
			fUML_Tests_TestCentralBuffer_ObjectFlow1036->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCentralBuffer_ObjectFlow1036->setSource(fUML_Tests_TestCentralBuffer_Parameter_input1);
			fUML_Tests_TestCentralBuffer_ObjectFlow1036->setTarget(fUML_Tests_TestCentralBuffer_StructuredActivityNode_CentralBufferNode);
		fUML_Tests_TestCentralBuffer->addEdge(fUML_Tests_TestCentralBuffer_ObjectFlow1036);
			// ObjectFlow ObjectFlow1038 from Parameter(input2) to CentralBufferNode
			fUML_Tests_TestCentralBuffer_ObjectFlow1038->setThisActivityEdgePtr(fUML_Tests_TestCentralBuffer_ObjectFlow1038);
			fUML_Tests_TestCentralBuffer_ObjectFlow1038->setName("ObjectFlow1038");
			fUML_Tests_TestCentralBuffer_ObjectFlow1038->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCentralBuffer_ObjectFlow1038->setSource(fUML_Tests_TestCentralBuffer_Parameter_input2);
			fUML_Tests_TestCentralBuffer_ObjectFlow1038->setTarget(fUML_Tests_TestCentralBuffer_StructuredActivityNode_CentralBufferNode);
		fUML_Tests_TestCentralBuffer->addEdge(fUML_Tests_TestCentralBuffer_ObjectFlow1038);
			// Initialization is currently unimplemented for metaclass StructuredActivityNode
		fUML_Tests_TestCentralBuffer->addStructuredNode(fUML_Tests_TestCentralBuffer_StructuredActivityNode);
			// Initialization is currently unimplemented for metaclass StructuredActivityNode
		fUML_Tests_TestCentralBuffer->addStructuredNode(fUML_Tests_TestCentralBuffer_StructuredActivityNode);
	fUML_Tests->addPackagedElement(fUML_Tests_TestCentralBuffer);
		// Association CompositeAssociation
		fUML_Tests_CompositeAssociation->setThisAssociationPtr(fUML_Tests_CompositeAssociation);
		fUML_Tests_CompositeAssociation->setName("CompositeAssociation");
		fUML_Tests_CompositeAssociation->setVisibility(VisibilityKind::public_);
		fUML_Tests_CompositeAssociation->addOwnedEnd(fUML_Tests_CompositeAssociation_c2);
		fUML_Tests_CompositeAssociation->addOwnedEnd(fUML_Tests_CompositeAssociation_composite);
		fUML_Tests_CompositeAssociation->addNavigableOwnedEnd(fUML_Tests_CompositeAssociation_c2);
	fUML_Tests->addPackagedElement(fUML_Tests_CompositeAssociation);
		// SignalEvent SignalEvent1040
		fUML_Tests_SignalEvent1040->setThisElementPtr(fUML_Tests_SignalEvent1040);
		fUML_Tests_SignalEvent1040->setName("SignalEvent1040");
		fUML_Tests_SignalEvent1040->setVisibility(VisibilityKind::public_);
		fUML_Tests_SignalEvent1040->setSignal(fUML_Tests_TestSignal);
	fUML_Tests->addPackagedElement(fUML_Tests_SignalEvent1040);
		// Activity TestCallAccepter
		fUML_Tests_TestCallAccepter->setThisActivityPtr(fUML_Tests_TestCallAccepter);
		fUML_Tests_TestCallAccepter->setName("TestCallAccepter");
		fUML_Tests_TestCallAccepter->setVisibility(VisibilityKind::public_);
			// Operation test
			fUML_Tests_TestCallAccepter_test->setThisOperationPtr(fUML_Tests_TestCallAccepter_test);
			fUML_Tests_TestCallAccepter_test->setName("test");
			fUML_Tests_TestCallAccepter_test->setVisibility(VisibilityKind::public_);
				// Parameter input
				fUML_Tests_TestCallAccepter_test_input->setThisElementPtr(fUML_Tests_TestCallAccepter_test_input);
				fUML_Tests_TestCallAccepter_test_input->setName("input");
				fUML_Tests_TestCallAccepter_test_input->setVisibility(VisibilityKind::public_);
				
				fUML_Tests_TestCallAccepter_test_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestCallAccepter_test->addOwnedParameter(fUML_Tests_TestCallAccepter_test_input);
				// Parameter output
				fUML_Tests_TestCallAccepter_test_output->setThisElementPtr(fUML_Tests_TestCallAccepter_test_output);
				fUML_Tests_TestCallAccepter_test_output->setName("output");
				fUML_Tests_TestCallAccepter_test_output->setVisibility(VisibilityKind::public_);
				
				fUML_Tests_TestCallAccepter_test_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_TestCallAccepter_test_output->setDirection(ParameterDirectionKind::out);
			fUML_Tests_TestCallAccepter_test->addOwnedParameter(fUML_Tests_TestCallAccepter_test_output);
		fUML_Tests_TestCallAccepter->addOwnedOperation(fUML_Tests_TestCallAccepter_test);
			// InitialNode InitialNode1043
			fUML_Tests_TestCallAccepter_InitialNode1043->setThisElementPtr(fUML_Tests_TestCallAccepter_InitialNode1043);
			fUML_Tests_TestCallAccepter_InitialNode1043->setName("InitialNode1043");
			fUML_Tests_TestCallAccepter_InitialNode1043->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestCallAccepter->addNode(fUML_Tests_TestCallAccepter_InitialNode1043);
			// ReplyAction Reply(test)
			fUML_Tests_TestCallAccepter_Reply_test->setThisExecutableNodePtr(fUML_Tests_TestCallAccepter_Reply_test);
			fUML_Tests_TestCallAccepter_Reply_test->setName("Reply(test)");
			fUML_Tests_TestCallAccepter_Reply_test->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallAccepter_Reply_test->setReplyToCall(fUML_Tests_TestCallAccepter_Accept_test_Trigger1046);
				// InputPin Reply(test).returnInfo
				fUML_Tests_TestCallAccepter_Reply_test_Reply_test_returnInfo->setThisElementPtr(fUML_Tests_TestCallAccepter_Reply_test_Reply_test_returnInfo);
				fUML_Tests_TestCallAccepter_Reply_test_Reply_test_returnInfo->setName("Reply(test).returnInfo");
				fUML_Tests_TestCallAccepter_Reply_test_Reply_test_returnInfo->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallAccepter_Reply_test->setReturnInformation(fUML_Tests_TestCallAccepter_Reply_test_Reply_test_returnInfo);
				// InputPin Reply(test).replyValue
				fUML_Tests_TestCallAccepter_Reply_test_Reply_test_replyValue->setThisElementPtr(fUML_Tests_TestCallAccepter_Reply_test_Reply_test_replyValue);
				fUML_Tests_TestCallAccepter_Reply_test_Reply_test_replyValue->setName("Reply(test).replyValue");
				fUML_Tests_TestCallAccepter_Reply_test_Reply_test_replyValue->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallAccepter_Reply_test->addReplyValue(fUML_Tests_TestCallAccepter_Reply_test_Reply_test_replyValue);
		fUML_Tests_TestCallAccepter->addNode(fUML_Tests_TestCallAccepter_Reply_test);
			// AcceptCallAction Accept(test)
			fUML_Tests_TestCallAccepter_Accept_test->setThisExecutableNodePtr(fUML_Tests_TestCallAccepter_Accept_test);
			fUML_Tests_TestCallAccepter_Accept_test->setName("Accept(test)");
			fUML_Tests_TestCallAccepter_Accept_test->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallAccepter_Accept_test->setIsUnmarshall(true);
				// OutputPin Accept(test).result
				fUML_Tests_TestCallAccepter_Accept_test_Accept_test_result->setThisElementPtr(fUML_Tests_TestCallAccepter_Accept_test_Accept_test_result);
				fUML_Tests_TestCallAccepter_Accept_test_Accept_test_result->setName("Accept(test).result");
				fUML_Tests_TestCallAccepter_Accept_test_Accept_test_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallAccepter_Accept_test->addResult(fUML_Tests_TestCallAccepter_Accept_test_Accept_test_result);
				fUML_Tests_TestCallAccepter_Accept_test_Trigger1046->setName("Trigger1046");
				fUML_Tests_TestCallAccepter_Accept_test_Trigger1046->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCallAccepter_Accept_test_Trigger1046->setEvent(fUML_Tests_CallEvent794);
			fUML_Tests_TestCallAccepter_Accept_test->addTrigger(fUML_Tests_TestCallAccepter_Accept_test_Trigger1046);
				// OutputPin Accept(test).returnInfo
				fUML_Tests_TestCallAccepter_Accept_test_Accept_test_returnInfo->setThisElementPtr(fUML_Tests_TestCallAccepter_Accept_test_Accept_test_returnInfo);
				fUML_Tests_TestCallAccepter_Accept_test_Accept_test_returnInfo->setName("Accept(test).returnInfo");
				fUML_Tests_TestCallAccepter_Accept_test_Accept_test_returnInfo->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallAccepter_Accept_test->setReturnInformation(fUML_Tests_TestCallAccepter_Accept_test_Accept_test_returnInfo);
		fUML_Tests_TestCallAccepter->addNode(fUML_Tests_TestCallAccepter_Accept_test);
			// ObjectFlow ObjectFlow1041 from Accept(test).result to Reply(test).replyValue
			fUML_Tests_TestCallAccepter_ObjectFlow1041->setThisActivityEdgePtr(fUML_Tests_TestCallAccepter_ObjectFlow1041);
			fUML_Tests_TestCallAccepter_ObjectFlow1041->setName("ObjectFlow1041");
			fUML_Tests_TestCallAccepter_ObjectFlow1041->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallAccepter_ObjectFlow1041->setSource(fUML_Tests_TestCallAccepter_Accept_test_Accept_test_result);
			fUML_Tests_TestCallAccepter_ObjectFlow1041->setTarget(fUML_Tests_TestCallAccepter_Reply_test_Reply_test_replyValue);
		fUML_Tests_TestCallAccepter->addEdge(fUML_Tests_TestCallAccepter_ObjectFlow1041);
			// ObjectFlow ObjectFlow1044 from Accept(test).returnInfo to Reply(test).returnInfo
			fUML_Tests_TestCallAccepter_ObjectFlow1044->setThisActivityEdgePtr(fUML_Tests_TestCallAccepter_ObjectFlow1044);
			fUML_Tests_TestCallAccepter_ObjectFlow1044->setName("ObjectFlow1044");
			fUML_Tests_TestCallAccepter_ObjectFlow1044->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallAccepter_ObjectFlow1044->setSource(fUML_Tests_TestCallAccepter_Accept_test_Accept_test_returnInfo);
			fUML_Tests_TestCallAccepter_ObjectFlow1044->setTarget(fUML_Tests_TestCallAccepter_Reply_test_Reply_test_returnInfo);
		fUML_Tests_TestCallAccepter->addEdge(fUML_Tests_TestCallAccepter_ObjectFlow1044);
			// ControlFlow ControlFlow1047 from InitialNode1043 to Accept(test)
			fUML_Tests_TestCallAccepter_ControlFlow1047->setThisActivityEdgePtr(fUML_Tests_TestCallAccepter_ControlFlow1047);
			fUML_Tests_TestCallAccepter_ControlFlow1047->setName("ControlFlow1047");
			fUML_Tests_TestCallAccepter_ControlFlow1047->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallAccepter_ControlFlow1047->setSource(fUML_Tests_TestCallAccepter_InitialNode1043);
			fUML_Tests_TestCallAccepter_ControlFlow1047->setTarget(fUML_Tests_TestCallAccepter_Accept_test);
		fUML_Tests_TestCallAccepter->addEdge(fUML_Tests_TestCallAccepter_ControlFlow1047);
	fUML_Tests->addPackagedElement(fUML_Tests_TestCallAccepter);
		// Activity TestClassObjectCreator
		fUML_Tests_TestClassObjectCreator->setThisActivityPtr(fUML_Tests_TestClassObjectCreator);
		fUML_Tests_TestClassObjectCreator->setName("TestClassObjectCreator");
		fUML_Tests_TestClassObjectCreator->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestClassObjectCreator->isReentrant = false;
			// Parameter result
			fUML_Tests_TestClassObjectCreator_result->setThisElementPtr(fUML_Tests_TestClassObjectCreator_result);
			fUML_Tests_TestClassObjectCreator_result->setName("result");
			fUML_Tests_TestClassObjectCreator_result->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassObjectCreator_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassObjectCreator_result->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassObjectCreator->addOwnedParameter(fUML_Tests_TestClassObjectCreator_result);
			// CreateObjectAction Create(TestClass)
			fUML_Tests_TestClassObjectCreator_Create_TestClass->setThisExecutableNodePtr(fUML_Tests_TestClassObjectCreator_Create_TestClass);
			fUML_Tests_TestClassObjectCreator_Create_TestClass->setName("Create(TestClass)");
			fUML_Tests_TestClassObjectCreator_Create_TestClass->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassObjectCreator_Create_TestClass->setClassifier(fUML_Tests_TestClass);
				// OutputPin Create(TestClass).result
				fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result->setThisElementPtr(fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result);
				fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result->setName("Create(TestClass).result");
				fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassObjectCreator_Create_TestClass->setResult(fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result);
		fUML_Tests_TestClassObjectCreator->addNode(fUML_Tests_TestClassObjectCreator_Create_TestClass);
			// ActivityParameterNode Parameter(result)
			fUML_Tests_TestClassObjectCreator_Parameter_result->setThisElementPtr(fUML_Tests_TestClassObjectCreator_Parameter_result);
			fUML_Tests_TestClassObjectCreator_Parameter_result->setName("Parameter(result)");
			fUML_Tests_TestClassObjectCreator_Parameter_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassObjectCreator_Parameter_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassObjectCreator_Parameter_result->setParameter(fUML_Tests_TestClassObjectCreator_result);
		fUML_Tests_TestClassObjectCreator->addNode(fUML_Tests_TestClassObjectCreator_Parameter_result);
			// ObjectFlow ObjectFlow1049 from Create(TestClass).result to Parameter(result)
			fUML_Tests_TestClassObjectCreator_ObjectFlow1049->setThisActivityEdgePtr(fUML_Tests_TestClassObjectCreator_ObjectFlow1049);
			fUML_Tests_TestClassObjectCreator_ObjectFlow1049->setName("ObjectFlow1049");
			fUML_Tests_TestClassObjectCreator_ObjectFlow1049->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassObjectCreator_ObjectFlow1049->setSource(fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result);
			fUML_Tests_TestClassObjectCreator_ObjectFlow1049->setTarget(fUML_Tests_TestClassObjectCreator_Parameter_result);
		fUML_Tests_TestClassObjectCreator->addEdge(fUML_Tests_TestClassObjectCreator_ObjectFlow1049);
	fUML_Tests->addPackagedElement(fUML_Tests_TestClassObjectCreator);
		// Association TestAssociation
		fUML_Tests_TestAssociation->setThisAssociationPtr(fUML_Tests_TestAssociation);
		fUML_Tests_TestAssociation->setName("TestAssociation");
		fUML_Tests_TestAssociation->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestAssociation->addOwnedEnd(fUML_Tests_TestAssociation_end1);
		fUML_Tests_TestAssociation->addOwnedEnd(fUML_Tests_TestAssociation_end2);
		fUML_Tests_TestAssociation->addNavigableOwnedEnd(fUML_Tests_TestAssociation_end1);
		fUML_Tests_TestAssociation->addNavigableOwnedEnd(fUML_Tests_TestAssociation_end2);
	fUML_Tests->addPackagedElement(fUML_Tests_TestAssociation);
		// Activity NodeEnabler
		fUML_Tests_NodeEnabler->setThisActivityPtr(fUML_Tests_NodeEnabler);
		fUML_Tests_NodeEnabler->setName("NodeEnabler");
		fUML_Tests_NodeEnabler->setVisibility(VisibilityKind::public_);
			// Parameter input
			fUML_Tests_NodeEnabler_input->setThisElementPtr(fUML_Tests_NodeEnabler_input);
			fUML_Tests_NodeEnabler_input->setName("input");
			fUML_Tests_NodeEnabler_input->setVisibility(VisibilityKind::public_);
			fUML_Tests_NodeEnabler_input->setLower(0);
			fUML_Tests_NodeEnabler_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
		fUML_Tests_NodeEnabler->addOwnedParameter(fUML_Tests_NodeEnabler_input);
			// Parameter output
			fUML_Tests_NodeEnabler_output->setThisElementPtr(fUML_Tests_NodeEnabler_output);
			fUML_Tests_NodeEnabler_output->setName("output");
			fUML_Tests_NodeEnabler_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_NodeEnabler_output->setLower(0);
			fUML_Tests_NodeEnabler_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_NodeEnabler_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_NodeEnabler->addOwnedParameter(fUML_Tests_NodeEnabler_output);
			// ActivityFinalNode FinalNode
			fUML_Tests_NodeEnabler_FinalNode->setThisElementPtr(fUML_Tests_NodeEnabler_FinalNode);
			fUML_Tests_NodeEnabler_FinalNode->setName("FinalNode");
			fUML_Tests_NodeEnabler_FinalNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_NodeEnabler->addNode(fUML_Tests_NodeEnabler_FinalNode);
			// Initialization is currently unimplemented for metaclass StructuredActivityNode
		fUML_Tests_NodeEnabler->addNode(fUML_Tests_NodeEnabler_StructuredNode);
			// ActivityParameterNode Input(input)
			fUML_Tests_NodeEnabler_Input_input->setThisElementPtr(fUML_Tests_NodeEnabler_Input_input);
			fUML_Tests_NodeEnabler_Input_input->setName("Input(input)");
			fUML_Tests_NodeEnabler_Input_input->setVisibility(VisibilityKind::public_);
			fUML_Tests_NodeEnabler_Input_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_NodeEnabler_Input_input->setParameter(fUML_Tests_NodeEnabler_input);
		fUML_Tests_NodeEnabler->addNode(fUML_Tests_NodeEnabler_Input_input);
			// ActivityParameterNode Output(output)
			fUML_Tests_NodeEnabler_Output_output->setThisElementPtr(fUML_Tests_NodeEnabler_Output_output);
			fUML_Tests_NodeEnabler_Output_output->setName("Output(output)");
			fUML_Tests_NodeEnabler_Output_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_NodeEnabler_Output_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_NodeEnabler_Output_output->setParameter(fUML_Tests_NodeEnabler_output);
		fUML_Tests_NodeEnabler->addNode(fUML_Tests_NodeEnabler_Output_output);
			// ObjectFlow ObjectFlow1063 from Input(input) to Call(Copier).input
			fUML_Tests_NodeEnabler_ObjectFlow1063->setThisActivityEdgePtr(fUML_Tests_NodeEnabler_ObjectFlow1063);
			fUML_Tests_NodeEnabler_ObjectFlow1063->setName("ObjectFlow1063");
			fUML_Tests_NodeEnabler_ObjectFlow1063->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_NodeEnabler_ObjectFlow1063->setSource(fUML_Tests_NodeEnabler_Input_input);
			fUML_Tests_NodeEnabler_ObjectFlow1063->setTarget(fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_input);
		fUML_Tests_NodeEnabler->addEdge(fUML_Tests_NodeEnabler_ObjectFlow1063);
			// ControlFlow ControlFlow1065 from StructuredNode to FinalNode
			fUML_Tests_NodeEnabler_ControlFlow1065->setThisActivityEdgePtr(fUML_Tests_NodeEnabler_ControlFlow1065);
			fUML_Tests_NodeEnabler_ControlFlow1065->setName("ControlFlow1065");
			fUML_Tests_NodeEnabler_ControlFlow1065->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_NodeEnabler_ControlFlow1065->setSource(fUML_Tests_NodeEnabler_StructuredNode);
			fUML_Tests_NodeEnabler_ControlFlow1065->setTarget(fUML_Tests_NodeEnabler_FinalNode);
		fUML_Tests_NodeEnabler->addEdge(fUML_Tests_NodeEnabler_ControlFlow1065);
			// ObjectFlow ObjectFlow1071 from Call(Copier).output to Output(output)
			fUML_Tests_NodeEnabler_ObjectFlow1071->setThisActivityEdgePtr(fUML_Tests_NodeEnabler_ObjectFlow1071);
			fUML_Tests_NodeEnabler_ObjectFlow1071->setName("ObjectFlow1071");
			fUML_Tests_NodeEnabler_ObjectFlow1071->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_NodeEnabler_ObjectFlow1071->setSource(fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_output);
			fUML_Tests_NodeEnabler_ObjectFlow1071->setTarget(fUML_Tests_NodeEnabler_Output_output);
		fUML_Tests_NodeEnabler->addEdge(fUML_Tests_NodeEnabler_ObjectFlow1071);
			// Initialization is currently unimplemented for metaclass StructuredActivityNode
		fUML_Tests_NodeEnabler->addStructuredNode(fUML_Tests_NodeEnabler_StructuredNode);
			// Initialization is currently unimplemented for metaclass StructuredActivityNode
		fUML_Tests_NodeEnabler->addStructuredNode(fUML_Tests_NodeEnabler_StructuredNode);
	fUML_Tests->addPackagedElement(fUML_Tests_NodeEnabler);
		// Activity DecisionJoin
		fUML_Tests_DecisionJoin->setThisActivityPtr(fUML_Tests_DecisionJoin);
		fUML_Tests_DecisionJoin->setName("DecisionJoin");
		fUML_Tests_DecisionJoin->setVisibility(VisibilityKind::public_);
		fUML_Tests_DecisionJoin->isReentrant = false;
			// Parameter output
			fUML_Tests_DecisionJoin_output->setThisElementPtr(fUML_Tests_DecisionJoin_output);
			fUML_Tests_DecisionJoin_output->setName("output");
			fUML_Tests_DecisionJoin_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_DecisionJoin_output->setIsOrdered(true);
			fUML_Tests_DecisionJoin_output->setUpper(-1);
			fUML_Tests_DecisionJoin_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_DecisionJoin_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_DecisionJoin->addOwnedParameter(fUML_Tests_DecisionJoin_output);
			// ValueSpecificationAction Value(0)
			fUML_Tests_DecisionJoin_Value_0->setThisExecutableNodePtr(fUML_Tests_DecisionJoin_Value_0);
			fUML_Tests_DecisionJoin_Value_0->setName("Value(0)");
			fUML_Tests_DecisionJoin_Value_0->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1077
				fUML_Tests_DecisionJoin_Value_0_LiteralInteger1077->setThisElementPtr(fUML_Tests_DecisionJoin_Value_0_LiteralInteger1077);
				fUML_Tests_DecisionJoin_Value_0_LiteralInteger1077->setName("LiteralInteger1077");
				fUML_Tests_DecisionJoin_Value_0_LiteralInteger1077->setVisibility(VisibilityKind::public_);
				fUML_Tests_DecisionJoin_Value_0_LiteralInteger1077->setValue(0);
			fUML_Tests_DecisionJoin_Value_0->setValue(fUML_Tests_DecisionJoin_Value_0_LiteralInteger1077);
				// OutputPin OutputPin1076
				fUML_Tests_DecisionJoin_Value_0_OutputPin1076->setThisElementPtr(fUML_Tests_DecisionJoin_Value_0_OutputPin1076);
				fUML_Tests_DecisionJoin_Value_0_OutputPin1076->setName("OutputPin1076");
				fUML_Tests_DecisionJoin_Value_0_OutputPin1076->setVisibility(VisibilityKind::public_);
				fUML_Tests_DecisionJoin_Value_0_OutputPin1076->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_DecisionJoin_Value_0->setResult(fUML_Tests_DecisionJoin_Value_0_OutputPin1076);
		fUML_Tests_DecisionJoin->addNode(fUML_Tests_DecisionJoin_Value_0);
			// DecisionNode DecisionNode
			fUML_Tests_DecisionJoin_DecisionNode->setThisElementPtr(fUML_Tests_DecisionJoin_DecisionNode);
			fUML_Tests_DecisionJoin_DecisionNode->setName("DecisionNode");
			fUML_Tests_DecisionJoin_DecisionNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_DecisionJoin->addNode(fUML_Tests_DecisionJoin_DecisionNode);
			// ActivityParameterNode OutputNode
			fUML_Tests_DecisionJoin_OutputNode->setThisElementPtr(fUML_Tests_DecisionJoin_OutputNode);
			fUML_Tests_DecisionJoin_OutputNode->setName("OutputNode");
			fUML_Tests_DecisionJoin_OutputNode->setVisibility(VisibilityKind::public_);
			fUML_Tests_DecisionJoin_OutputNode->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_DecisionJoin_OutputNode->setParameter(fUML_Tests_DecisionJoin_output);
		fUML_Tests_DecisionJoin->addNode(fUML_Tests_DecisionJoin_OutputNode);
			// CallBehaviorAction Action_B
			fUML_Tests_DecisionJoin_Action_B->setThisExecutableNodePtr(fUML_Tests_DecisionJoin_Action_B);
			fUML_Tests_DecisionJoin_Action_B->setName("Action_B");
			fUML_Tests_DecisionJoin_Action_B->setVisibility(VisibilityKind::public_);
				// OutputPin Action_C.output
				fUML_Tests_DecisionJoin_Action_B_Action_C_output->setThisElementPtr(fUML_Tests_DecisionJoin_Action_B_Action_C_output);
				fUML_Tests_DecisionJoin_Action_B_Action_C_output->setName("Action_C.output");
				fUML_Tests_DecisionJoin_Action_B_Action_C_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_DecisionJoin_Action_B_Action_C_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_DecisionJoin_Action_B_Action_C_output->setUpper(2);
				fUML_Tests_DecisionJoin_Action_B_Action_C_output->setLower(2);
			fUML_Tests_DecisionJoin_Action_B->addResult(fUML_Tests_DecisionJoin_Action_B_Action_C_output);
			fUML_Tests_DecisionJoin_Action_B->setBehavior(fUML_Tests_Copier);
				// InputPin Action_B.input
				fUML_Tests_DecisionJoin_Action_B_Action_B_input->setThisElementPtr(fUML_Tests_DecisionJoin_Action_B_Action_B_input);
				fUML_Tests_DecisionJoin_Action_B_Action_B_input->setName("Action_B.input");
				fUML_Tests_DecisionJoin_Action_B_Action_B_input->setVisibility(VisibilityKind::public_);
				fUML_Tests_DecisionJoin_Action_B_Action_B_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_DecisionJoin_Action_B_Action_B_input->setUpper(2);
				fUML_Tests_DecisionJoin_Action_B_Action_B_input->setLower(2);
			fUML_Tests_DecisionJoin_Action_B->addArgument(fUML_Tests_DecisionJoin_Action_B_Action_B_input);
		fUML_Tests_DecisionJoin->addNode(fUML_Tests_DecisionJoin_Action_B);
			// JoinNode JoinNode
			fUML_Tests_DecisionJoin_JoinNode->setThisElementPtr(fUML_Tests_DecisionJoin_JoinNode);
			fUML_Tests_DecisionJoin_JoinNode->setName("JoinNode");
			fUML_Tests_DecisionJoin_JoinNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_DecisionJoin->addNode(fUML_Tests_DecisionJoin_JoinNode);
			// ValueSpecificationAction Value(1)
			fUML_Tests_DecisionJoin_Value_1->setThisExecutableNodePtr(fUML_Tests_DecisionJoin_Value_1);
			fUML_Tests_DecisionJoin_Value_1->setName("Value(1)");
			fUML_Tests_DecisionJoin_Value_1->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1084
				fUML_Tests_DecisionJoin_Value_1_LiteralInteger1084->setThisElementPtr(fUML_Tests_DecisionJoin_Value_1_LiteralInteger1084);
				fUML_Tests_DecisionJoin_Value_1_LiteralInteger1084->setName("LiteralInteger1084");
				fUML_Tests_DecisionJoin_Value_1_LiteralInteger1084->setVisibility(VisibilityKind::public_);
				fUML_Tests_DecisionJoin_Value_1_LiteralInteger1084->setValue(1);
			fUML_Tests_DecisionJoin_Value_1->setValue(fUML_Tests_DecisionJoin_Value_1_LiteralInteger1084);
				// OutputPin OutputPin1085
				fUML_Tests_DecisionJoin_Value_1_OutputPin1085->setThisElementPtr(fUML_Tests_DecisionJoin_Value_1_OutputPin1085);
				fUML_Tests_DecisionJoin_Value_1_OutputPin1085->setName("OutputPin1085");
				fUML_Tests_DecisionJoin_Value_1_OutputPin1085->setVisibility(VisibilityKind::public_);
				fUML_Tests_DecisionJoin_Value_1_OutputPin1085->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_DecisionJoin_Value_1->setResult(fUML_Tests_DecisionJoin_Value_1_OutputPin1085);
		fUML_Tests_DecisionJoin->addNode(fUML_Tests_DecisionJoin_Value_1);
			// CallBehaviorAction Action_A
			fUML_Tests_DecisionJoin_Action_A->setThisExecutableNodePtr(fUML_Tests_DecisionJoin_Action_A);
			fUML_Tests_DecisionJoin_Action_A->setName("Action_A");
			fUML_Tests_DecisionJoin_Action_A->setVisibility(VisibilityKind::public_);
				// OutputPin Action_A.output
				fUML_Tests_DecisionJoin_Action_A_Action_A_output->setThisElementPtr(fUML_Tests_DecisionJoin_Action_A_Action_A_output);
				fUML_Tests_DecisionJoin_Action_A_Action_A_output->setName("Action_A.output");
				fUML_Tests_DecisionJoin_Action_A_Action_A_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_DecisionJoin_Action_A_Action_A_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_DecisionJoin_Action_A->addResult(fUML_Tests_DecisionJoin_Action_A_Action_A_output);
			fUML_Tests_DecisionJoin_Action_A->setBehavior(fUML_Tests_Copier);
				// InputPin Action_A.input
				fUML_Tests_DecisionJoin_Action_A_Action_A_input->setThisElementPtr(fUML_Tests_DecisionJoin_Action_A_Action_A_input);
				fUML_Tests_DecisionJoin_Action_A_Action_A_input->setName("Action_A.input");
				fUML_Tests_DecisionJoin_Action_A_Action_A_input->setVisibility(VisibilityKind::public_);
				fUML_Tests_DecisionJoin_Action_A_Action_A_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_DecisionJoin_Action_A->addArgument(fUML_Tests_DecisionJoin_Action_A_Action_A_input);
		fUML_Tests_DecisionJoin->addNode(fUML_Tests_DecisionJoin_Action_A);
			// ObjectFlow ObjectFlow1073 from DecisionNode to JoinNode
			fUML_Tests_DecisionJoin_ObjectFlow1073->setThisActivityEdgePtr(fUML_Tests_DecisionJoin_ObjectFlow1073);
			fUML_Tests_DecisionJoin_ObjectFlow1073->setName("ObjectFlow1073");
			fUML_Tests_DecisionJoin_ObjectFlow1073->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_DecisionJoin_ObjectFlow1073->setSource(fUML_Tests_DecisionJoin_DecisionNode);
			fUML_Tests_DecisionJoin_ObjectFlow1073->setTarget(fUML_Tests_DecisionJoin_JoinNode);
				// LiteralInteger LiteralInteger1074
				fUML_Tests_DecisionJoin_ObjectFlow1073_LiteralInteger1074->setThisElementPtr(fUML_Tests_DecisionJoin_ObjectFlow1073_LiteralInteger1074);
				fUML_Tests_DecisionJoin_ObjectFlow1073_LiteralInteger1074->setName("LiteralInteger1074");
				fUML_Tests_DecisionJoin_ObjectFlow1073_LiteralInteger1074->setVisibility(VisibilityKind::public_);
				fUML_Tests_DecisionJoin_ObjectFlow1073_LiteralInteger1074->setValue(0);
			fUML_Tests_DecisionJoin_ObjectFlow1073->setGuard(fUML_Tests_DecisionJoin_ObjectFlow1073_LiteralInteger1074);
		fUML_Tests_DecisionJoin->addEdge(fUML_Tests_DecisionJoin_ObjectFlow1073);
			// ObjectFlow ObjectFlow1078 from Action_C.output to OutputNode
			fUML_Tests_DecisionJoin_ObjectFlow1078->setThisActivityEdgePtr(fUML_Tests_DecisionJoin_ObjectFlow1078);
			fUML_Tests_DecisionJoin_ObjectFlow1078->setName("ObjectFlow1078");
			fUML_Tests_DecisionJoin_ObjectFlow1078->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_DecisionJoin_ObjectFlow1078->setSource(fUML_Tests_DecisionJoin_Action_B_Action_C_output);
			fUML_Tests_DecisionJoin_ObjectFlow1078->setTarget(fUML_Tests_DecisionJoin_OutputNode);
		fUML_Tests_DecisionJoin->addEdge(fUML_Tests_DecisionJoin_ObjectFlow1078);
			// ObjectFlow ObjectFlow1092 from DecisionNode to JoinNode
			fUML_Tests_DecisionJoin_ObjectFlow1092->setThisActivityEdgePtr(fUML_Tests_DecisionJoin_ObjectFlow1092);
			fUML_Tests_DecisionJoin_ObjectFlow1092->setName("ObjectFlow1092");
			fUML_Tests_DecisionJoin_ObjectFlow1092->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_DecisionJoin_ObjectFlow1092->setSource(fUML_Tests_DecisionJoin_DecisionNode);
			fUML_Tests_DecisionJoin_ObjectFlow1092->setTarget(fUML_Tests_DecisionJoin_JoinNode);
				// LiteralInteger LiteralInteger1093
				fUML_Tests_DecisionJoin_ObjectFlow1092_LiteralInteger1093->setThisElementPtr(fUML_Tests_DecisionJoin_ObjectFlow1092_LiteralInteger1093);
				fUML_Tests_DecisionJoin_ObjectFlow1092_LiteralInteger1093->setName("LiteralInteger1093");
				fUML_Tests_DecisionJoin_ObjectFlow1092_LiteralInteger1093->setVisibility(VisibilityKind::public_);
				fUML_Tests_DecisionJoin_ObjectFlow1092_LiteralInteger1093->setValue(1);
			fUML_Tests_DecisionJoin_ObjectFlow1092->setGuard(fUML_Tests_DecisionJoin_ObjectFlow1092_LiteralInteger1093);
		fUML_Tests_DecisionJoin->addEdge(fUML_Tests_DecisionJoin_ObjectFlow1092);
			// ControlFlow ControlFlow1080 from Value(0) to Value(1)
			fUML_Tests_DecisionJoin_ControlFlow1080->setThisActivityEdgePtr(fUML_Tests_DecisionJoin_ControlFlow1080);
			fUML_Tests_DecisionJoin_ControlFlow1080->setName("ControlFlow1080");
			fUML_Tests_DecisionJoin_ControlFlow1080->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_DecisionJoin_ControlFlow1080->setSource(fUML_Tests_DecisionJoin_Value_0);
			fUML_Tests_DecisionJoin_ControlFlow1080->setTarget(fUML_Tests_DecisionJoin_Value_1);
		fUML_Tests_DecisionJoin->addEdge(fUML_Tests_DecisionJoin_ControlFlow1080);
			// ObjectFlow ObjectFlow1082 from JoinNode to Action_B.input
			fUML_Tests_DecisionJoin_ObjectFlow1082->setThisActivityEdgePtr(fUML_Tests_DecisionJoin_ObjectFlow1082);
			fUML_Tests_DecisionJoin_ObjectFlow1082->setName("ObjectFlow1082");
			fUML_Tests_DecisionJoin_ObjectFlow1082->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_DecisionJoin_ObjectFlow1082->setSource(fUML_Tests_DecisionJoin_JoinNode);
			fUML_Tests_DecisionJoin_ObjectFlow1082->setTarget(fUML_Tests_DecisionJoin_Action_B_Action_B_input);
		fUML_Tests_DecisionJoin->addEdge(fUML_Tests_DecisionJoin_ObjectFlow1082);
			// ObjectFlow ObjectFlow1097 from OutputPin1076 to Action_A.input
			fUML_Tests_DecisionJoin_ObjectFlow1097->setThisActivityEdgePtr(fUML_Tests_DecisionJoin_ObjectFlow1097);
			fUML_Tests_DecisionJoin_ObjectFlow1097->setName("ObjectFlow1097");
			fUML_Tests_DecisionJoin_ObjectFlow1097->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_DecisionJoin_ObjectFlow1097->setSource(fUML_Tests_DecisionJoin_Value_0_OutputPin1076);
			fUML_Tests_DecisionJoin_ObjectFlow1097->setTarget(fUML_Tests_DecisionJoin_Action_A_Action_A_input);
		fUML_Tests_DecisionJoin->addEdge(fUML_Tests_DecisionJoin_ObjectFlow1097);
			// ObjectFlow ObjectFlow1099 from OutputPin1085 to Action_A.input
			fUML_Tests_DecisionJoin_ObjectFlow1099->setThisActivityEdgePtr(fUML_Tests_DecisionJoin_ObjectFlow1099);
			fUML_Tests_DecisionJoin_ObjectFlow1099->setName("ObjectFlow1099");
			fUML_Tests_DecisionJoin_ObjectFlow1099->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_DecisionJoin_ObjectFlow1099->setSource(fUML_Tests_DecisionJoin_Value_1_OutputPin1085);
			fUML_Tests_DecisionJoin_ObjectFlow1099->setTarget(fUML_Tests_DecisionJoin_Action_A_Action_A_input);
		fUML_Tests_DecisionJoin->addEdge(fUML_Tests_DecisionJoin_ObjectFlow1099);
			// ObjectFlow ObjectFlow1086 from Action_A.output to DecisionNode
			fUML_Tests_DecisionJoin_ObjectFlow1086->setThisActivityEdgePtr(fUML_Tests_DecisionJoin_ObjectFlow1086);
			fUML_Tests_DecisionJoin_ObjectFlow1086->setName("ObjectFlow1086");
			fUML_Tests_DecisionJoin_ObjectFlow1086->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_DecisionJoin_ObjectFlow1086->setSource(fUML_Tests_DecisionJoin_Action_A_Action_A_output);
			fUML_Tests_DecisionJoin_ObjectFlow1086->setTarget(fUML_Tests_DecisionJoin_DecisionNode);
		fUML_Tests_DecisionJoin->addEdge(fUML_Tests_DecisionJoin_ObjectFlow1086);
	fUML_Tests->addPackagedElement(fUML_Tests_DecisionJoin);
		// Activity ForkMergeData
		fUML_Tests_ForkMergeData->setThisActivityPtr(fUML_Tests_ForkMergeData);
		fUML_Tests_ForkMergeData->setName("ForkMergeData");
		fUML_Tests_ForkMergeData->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkMergeData->isReentrant = false;
			// Parameter output
			fUML_Tests_ForkMergeData_output->setThisElementPtr(fUML_Tests_ForkMergeData_output);
			fUML_Tests_ForkMergeData_output->setName("output");
			fUML_Tests_ForkMergeData_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_ForkMergeData_output->setUpper(-1);
			fUML_Tests_ForkMergeData_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_ForkMergeData_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_ForkMergeData->addOwnedParameter(fUML_Tests_ForkMergeData_output);
			// MergeNode MergeNode
			fUML_Tests_ForkMergeData_MergeNode->setThisElementPtr(fUML_Tests_ForkMergeData_MergeNode);
			fUML_Tests_ForkMergeData_MergeNode->setName("MergeNode");
			fUML_Tests_ForkMergeData_MergeNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkMergeData->addNode(fUML_Tests_ForkMergeData_MergeNode);
			// ForkNode ForkNode
			fUML_Tests_ForkMergeData_ForkNode->setThisElementPtr(fUML_Tests_ForkMergeData_ForkNode);
			fUML_Tests_ForkMergeData_ForkNode->setName("ForkNode");
			fUML_Tests_ForkMergeData_ForkNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkMergeData->addNode(fUML_Tests_ForkMergeData_ForkNode);
			// ActivityParameterNode Parameter(output)
			fUML_Tests_ForkMergeData_Parameter_output->setThisElementPtr(fUML_Tests_ForkMergeData_Parameter_output);
			fUML_Tests_ForkMergeData_Parameter_output->setName("Parameter(output)");
			fUML_Tests_ForkMergeData_Parameter_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_ForkMergeData_Parameter_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_ForkMergeData_Parameter_output->setParameter(fUML_Tests_ForkMergeData_output);
		fUML_Tests_ForkMergeData->addNode(fUML_Tests_ForkMergeData_Parameter_output);
			// ValueSpecificationAction Action_A
			fUML_Tests_ForkMergeData_Action_A->setThisExecutableNodePtr(fUML_Tests_ForkMergeData_Action_A);
			fUML_Tests_ForkMergeData_Action_A->setName("Action_A");
			fUML_Tests_ForkMergeData_Action_A->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1107
				fUML_Tests_ForkMergeData_Action_A_LiteralInteger1107->setThisElementPtr(fUML_Tests_ForkMergeData_Action_A_LiteralInteger1107);
				fUML_Tests_ForkMergeData_Action_A_LiteralInteger1107->setName("LiteralInteger1107");
				fUML_Tests_ForkMergeData_Action_A_LiteralInteger1107->setVisibility(VisibilityKind::public_);
				fUML_Tests_ForkMergeData_Action_A_LiteralInteger1107->setValue(0);
			fUML_Tests_ForkMergeData_Action_A->setValue(fUML_Tests_ForkMergeData_Action_A_LiteralInteger1107);
				// OutputPin Action_A.result
				fUML_Tests_ForkMergeData_Action_A_Action_A_result->setThisElementPtr(fUML_Tests_ForkMergeData_Action_A_Action_A_result);
				fUML_Tests_ForkMergeData_Action_A_Action_A_result->setName("Action_A.result");
				fUML_Tests_ForkMergeData_Action_A_Action_A_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_ForkMergeData_Action_A_Action_A_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_ForkMergeData_Action_A->setResult(fUML_Tests_ForkMergeData_Action_A_Action_A_result);
		fUML_Tests_ForkMergeData->addNode(fUML_Tests_ForkMergeData_Action_A);
			// CallBehaviorAction Action_B
			fUML_Tests_ForkMergeData_Action_B->setThisExecutableNodePtr(fUML_Tests_ForkMergeData_Action_B);
			fUML_Tests_ForkMergeData_Action_B->setName("Action_B");
			fUML_Tests_ForkMergeData_Action_B->setVisibility(VisibilityKind::public_);
				// OutputPin Action_B.output
				fUML_Tests_ForkMergeData_Action_B_Action_B_output->setThisElementPtr(fUML_Tests_ForkMergeData_Action_B_Action_B_output);
				fUML_Tests_ForkMergeData_Action_B_Action_B_output->setName("Action_B.output");
				fUML_Tests_ForkMergeData_Action_B_Action_B_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_ForkMergeData_Action_B_Action_B_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_ForkMergeData_Action_B->addResult(fUML_Tests_ForkMergeData_Action_B_Action_B_output);
			fUML_Tests_ForkMergeData_Action_B->setBehavior(fUML_Tests_Copier);
				// InputPin Action_B.input
				fUML_Tests_ForkMergeData_Action_B_Action_B_input->setThisElementPtr(fUML_Tests_ForkMergeData_Action_B_Action_B_input);
				fUML_Tests_ForkMergeData_Action_B_Action_B_input->setName("Action_B.input");
				fUML_Tests_ForkMergeData_Action_B_Action_B_input->setVisibility(VisibilityKind::public_);
				fUML_Tests_ForkMergeData_Action_B_Action_B_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_ForkMergeData_Action_B->addArgument(fUML_Tests_ForkMergeData_Action_B_Action_B_input);
		fUML_Tests_ForkMergeData->addNode(fUML_Tests_ForkMergeData_Action_B);
			// InitialNode InitialNode
			fUML_Tests_ForkMergeData_InitialNode->setThisElementPtr(fUML_Tests_ForkMergeData_InitialNode);
			fUML_Tests_ForkMergeData_InitialNode->setName("InitialNode");
			fUML_Tests_ForkMergeData_InitialNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkMergeData->addNode(fUML_Tests_ForkMergeData_InitialNode);
			// ObjectFlow ObjectFlow1112 from MergeNode to Action_B.input
			fUML_Tests_ForkMergeData_ObjectFlow1112->setThisActivityEdgePtr(fUML_Tests_ForkMergeData_ObjectFlow1112);
			fUML_Tests_ForkMergeData_ObjectFlow1112->setName("ObjectFlow1112");
			fUML_Tests_ForkMergeData_ObjectFlow1112->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMergeData_ObjectFlow1112->setSource(fUML_Tests_ForkMergeData_MergeNode);
			fUML_Tests_ForkMergeData_ObjectFlow1112->setTarget(fUML_Tests_ForkMergeData_Action_B_Action_B_input);
		fUML_Tests_ForkMergeData->addEdge(fUML_Tests_ForkMergeData_ObjectFlow1112);
			// ObjectFlow ObjectFlow1114 from ForkNode to MergeNode
			fUML_Tests_ForkMergeData_ObjectFlow1114->setThisActivityEdgePtr(fUML_Tests_ForkMergeData_ObjectFlow1114);
			fUML_Tests_ForkMergeData_ObjectFlow1114->setName("ObjectFlow1114");
			fUML_Tests_ForkMergeData_ObjectFlow1114->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMergeData_ObjectFlow1114->setSource(fUML_Tests_ForkMergeData_ForkNode);
			fUML_Tests_ForkMergeData_ObjectFlow1114->setTarget(fUML_Tests_ForkMergeData_MergeNode);
		fUML_Tests_ForkMergeData->addEdge(fUML_Tests_ForkMergeData_ObjectFlow1114);
			// ObjectFlow ObjectFlow1116 from ForkNode to MergeNode
			fUML_Tests_ForkMergeData_ObjectFlow1116->setThisActivityEdgePtr(fUML_Tests_ForkMergeData_ObjectFlow1116);
			fUML_Tests_ForkMergeData_ObjectFlow1116->setName("ObjectFlow1116");
			fUML_Tests_ForkMergeData_ObjectFlow1116->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMergeData_ObjectFlow1116->setSource(fUML_Tests_ForkMergeData_ForkNode);
			fUML_Tests_ForkMergeData_ObjectFlow1116->setTarget(fUML_Tests_ForkMergeData_MergeNode);
		fUML_Tests_ForkMergeData->addEdge(fUML_Tests_ForkMergeData_ObjectFlow1116);
			// ObjectFlow ObjectFlow1122 from Action_A.result to ForkNode
			fUML_Tests_ForkMergeData_ObjectFlow1122->setThisActivityEdgePtr(fUML_Tests_ForkMergeData_ObjectFlow1122);
			fUML_Tests_ForkMergeData_ObjectFlow1122->setName("ObjectFlow1122");
			fUML_Tests_ForkMergeData_ObjectFlow1122->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMergeData_ObjectFlow1122->setSource(fUML_Tests_ForkMergeData_Action_A_Action_A_result);
			fUML_Tests_ForkMergeData_ObjectFlow1122->setTarget(fUML_Tests_ForkMergeData_ForkNode);
		fUML_Tests_ForkMergeData->addEdge(fUML_Tests_ForkMergeData_ObjectFlow1122);
			// ControlFlow ControlFlow1110 from InitialNode to Action_A
			fUML_Tests_ForkMergeData_ControlFlow1110->setThisActivityEdgePtr(fUML_Tests_ForkMergeData_ControlFlow1110);
			fUML_Tests_ForkMergeData_ControlFlow1110->setName("ControlFlow1110");
			fUML_Tests_ForkMergeData_ControlFlow1110->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMergeData_ControlFlow1110->setSource(fUML_Tests_ForkMergeData_InitialNode);
			fUML_Tests_ForkMergeData_ControlFlow1110->setTarget(fUML_Tests_ForkMergeData_Action_A);
		fUML_Tests_ForkMergeData->addEdge(fUML_Tests_ForkMergeData_ControlFlow1110);
			// ObjectFlow ObjectFlow1124 from Action_B.output to Parameter(output)
			fUML_Tests_ForkMergeData_ObjectFlow1124->setThisActivityEdgePtr(fUML_Tests_ForkMergeData_ObjectFlow1124);
			fUML_Tests_ForkMergeData_ObjectFlow1124->setName("ObjectFlow1124");
			fUML_Tests_ForkMergeData_ObjectFlow1124->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMergeData_ObjectFlow1124->setSource(fUML_Tests_ForkMergeData_Action_B_Action_B_output);
			fUML_Tests_ForkMergeData_ObjectFlow1124->setTarget(fUML_Tests_ForkMergeData_Parameter_output);
		fUML_Tests_ForkMergeData->addEdge(fUML_Tests_ForkMergeData_ObjectFlow1124);
	fUML_Tests->addPackagedElement(fUML_Tests_ForkMergeData);
		// Activity TestClassReclassifier
		fUML_Tests_TestClassReclassifier->setThisActivityPtr(fUML_Tests_TestClassReclassifier);
		fUML_Tests_TestClassReclassifier->setName("TestClassReclassifier");
		fUML_Tests_TestClassReclassifier->setVisibility(VisibilityKind::public_);
			// Parameter result
			fUML_Tests_TestClassReclassifier_result->setThisElementPtr(fUML_Tests_TestClassReclassifier_result);
			fUML_Tests_TestClassReclassifier_result->setName("result");
			fUML_Tests_TestClassReclassifier_result->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassReclassifier_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassReclassifier_result->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassReclassifier->addOwnedParameter(fUML_Tests_TestClassReclassifier_result);
			// ActivityParameterNode resultNode
			fUML_Tests_TestClassReclassifier_resultNode->setThisElementPtr(fUML_Tests_TestClassReclassifier_resultNode);
			fUML_Tests_TestClassReclassifier_resultNode->setName("resultNode");
			fUML_Tests_TestClassReclassifier_resultNode->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassReclassifier_resultNode->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassReclassifier_resultNode->setParameter(fUML_Tests_TestClassReclassifier_result);
		fUML_Tests_TestClassReclassifier->addNode(fUML_Tests_TestClassReclassifier_resultNode);
			// ValueSpecificationAction Value(true)
			fUML_Tests_TestClassReclassifier_Value_true->setThisExecutableNodePtr(fUML_Tests_TestClassReclassifier_Value_true);
			fUML_Tests_TestClassReclassifier_Value_true->setName("Value(true)");
			fUML_Tests_TestClassReclassifier_Value_true->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1157
				fUML_Tests_TestClassReclassifier_Value_true_LiteralBoolean1157->setThisElementPtr(fUML_Tests_TestClassReclassifier_Value_true_LiteralBoolean1157);
				fUML_Tests_TestClassReclassifier_Value_true_LiteralBoolean1157->setName("LiteralBoolean1157");
				fUML_Tests_TestClassReclassifier_Value_true_LiteralBoolean1157->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Value_true_LiteralBoolean1157->setValue(true);
			fUML_Tests_TestClassReclassifier_Value_true->setValue(fUML_Tests_TestClassReclassifier_Value_true_LiteralBoolean1157);
				// OutputPin result
				fUML_Tests_TestClassReclassifier_Value_true_result->setThisElementPtr(fUML_Tests_TestClassReclassifier_Value_true_result);
				fUML_Tests_TestClassReclassifier_Value_true_result->setName("result");
				fUML_Tests_TestClassReclassifier_Value_true_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Value_true_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestClassReclassifier_Value_true->setResult(fUML_Tests_TestClassReclassifier_Value_true_result);
		fUML_Tests_TestClassReclassifier->addNode(fUML_Tests_TestClassReclassifier_Value_true);
			// ReclassifyObjectAction Reclassify(Subclass2)
			fUML_Tests_TestClassReclassifier_Reclassify_Subclass2->setThisExecutableNodePtr(fUML_Tests_TestClassReclassifier_Reclassify_Subclass2);
			fUML_Tests_TestClassReclassifier_Reclassify_Subclass2->setName("Reclassify(Subclass2)");
			fUML_Tests_TestClassReclassifier_Reclassify_Subclass2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassReclassifier_Reclassify_Subclass2->addOldClassifier(fUML_Tests_Subclass1);
			fUML_Tests_TestClassReclassifier_Reclassify_Subclass2->addNewClassifier(fUML_Tests_Subclass2);
				// InputPin object
				fUML_Tests_TestClassReclassifier_Reclassify_Subclass2_object->setThisElementPtr(fUML_Tests_TestClassReclassifier_Reclassify_Subclass2_object);
				fUML_Tests_TestClassReclassifier_Reclassify_Subclass2_object->setName("object");
				fUML_Tests_TestClassReclassifier_Reclassify_Subclass2_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Reclassify_Subclass2_object->setType(fUML_Tests_Subclass1);
			fUML_Tests_TestClassReclassifier_Reclassify_Subclass2->setObject(fUML_Tests_TestClassReclassifier_Reclassify_Subclass2_object);
		fUML_Tests_TestClassReclassifier->addNode(fUML_Tests_TestClassReclassifier_Reclassify_Subclass2);
			// ValueSpecificationAction Value(1)
			fUML_Tests_TestClassReclassifier_Value_1->setThisExecutableNodePtr(fUML_Tests_TestClassReclassifier_Value_1);
			fUML_Tests_TestClassReclassifier_Value_1->setName("Value(1)");
			fUML_Tests_TestClassReclassifier_Value_1->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1162
				fUML_Tests_TestClassReclassifier_Value_1_LiteralInteger1162->setThisElementPtr(fUML_Tests_TestClassReclassifier_Value_1_LiteralInteger1162);
				fUML_Tests_TestClassReclassifier_Value_1_LiteralInteger1162->setName("LiteralInteger1162");
				fUML_Tests_TestClassReclassifier_Value_1_LiteralInteger1162->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Value_1_LiteralInteger1162->setValue(1);
			fUML_Tests_TestClassReclassifier_Value_1->setValue(fUML_Tests_TestClassReclassifier_Value_1_LiteralInteger1162);
				// OutputPin result
				fUML_Tests_TestClassReclassifier_Value_1_result->setThisElementPtr(fUML_Tests_TestClassReclassifier_Value_1_result);
				fUML_Tests_TestClassReclassifier_Value_1_result->setName("result");
				fUML_Tests_TestClassReclassifier_Value_1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Value_1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassReclassifier_Value_1->setResult(fUML_Tests_TestClassReclassifier_Value_1_result);
		fUML_Tests_TestClassReclassifier->addNode(fUML_Tests_TestClassReclassifier_Value_1);
			// ForkNode ForkNode1132
			fUML_Tests_TestClassReclassifier_ForkNode1132->setThisElementPtr(fUML_Tests_TestClassReclassifier_ForkNode1132);
			fUML_Tests_TestClassReclassifier_ForkNode1132->setName("ForkNode1132");
			fUML_Tests_TestClassReclassifier_ForkNode1132->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestClassReclassifier->addNode(fUML_Tests_TestClassReclassifier_ForkNode1132);
			// AddStructuralFeatureValueAction Write(a)
			fUML_Tests_TestClassReclassifier_Write_a->setThisExecutableNodePtr(fUML_Tests_TestClassReclassifier_Write_a);
			fUML_Tests_TestClassReclassifier_Write_a->setName("Write(a)");
			fUML_Tests_TestClassReclassifier_Write_a->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassReclassifier_Write_a->setStructuralFeature(fUML_Tests_Subclass1_a);
				// InputPin object
				fUML_Tests_TestClassReclassifier_Write_a_object->setThisElementPtr(fUML_Tests_TestClassReclassifier_Write_a_object);
				fUML_Tests_TestClassReclassifier_Write_a_object->setName("object");
				fUML_Tests_TestClassReclassifier_Write_a_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Write_a_object->setType(fUML_Tests_Subclass1);
			fUML_Tests_TestClassReclassifier_Write_a->setObject(fUML_Tests_TestClassReclassifier_Write_a_object);
				// InputPin value
				fUML_Tests_TestClassReclassifier_Write_a_value->setThisElementPtr(fUML_Tests_TestClassReclassifier_Write_a_value);
				fUML_Tests_TestClassReclassifier_Write_a_value->setName("value");
				fUML_Tests_TestClassReclassifier_Write_a_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Write_a_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestClassReclassifier_Write_a->setValue(fUML_Tests_TestClassReclassifier_Write_a_value);
				// OutputPin result
				fUML_Tests_TestClassReclassifier_Write_a_result->setThisElementPtr(fUML_Tests_TestClassReclassifier_Write_a_result);
				fUML_Tests_TestClassReclassifier_Write_a_result->setName("result");
				fUML_Tests_TestClassReclassifier_Write_a_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Write_a_result->setType(fUML_Tests_Subclass1);
			fUML_Tests_TestClassReclassifier_Write_a->setResult(fUML_Tests_TestClassReclassifier_Write_a_result);
		fUML_Tests_TestClassReclassifier->addNode(fUML_Tests_TestClassReclassifier_Write_a);
			// CreateObjectAction Create(Subclass1)
			fUML_Tests_TestClassReclassifier_Create_Subclass1->setThisExecutableNodePtr(fUML_Tests_TestClassReclassifier_Create_Subclass1);
			fUML_Tests_TestClassReclassifier_Create_Subclass1->setName("Create(Subclass1)");
			fUML_Tests_TestClassReclassifier_Create_Subclass1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassReclassifier_Create_Subclass1->setClassifier(fUML_Tests_Subclass1);
				// OutputPin result
				fUML_Tests_TestClassReclassifier_Create_Subclass1_result->setThisElementPtr(fUML_Tests_TestClassReclassifier_Create_Subclass1_result);
				fUML_Tests_TestClassReclassifier_Create_Subclass1_result->setName("result");
				fUML_Tests_TestClassReclassifier_Create_Subclass1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Create_Subclass1_result->setType(fUML_Tests_Subclass1);
			fUML_Tests_TestClassReclassifier_Create_Subclass1->setResult(fUML_Tests_TestClassReclassifier_Create_Subclass1_result);
		fUML_Tests_TestClassReclassifier->addNode(fUML_Tests_TestClassReclassifier_Create_Subclass1);
			// AddStructuralFeatureValueAction Write(x)
			fUML_Tests_TestClassReclassifier_Write_x->setThisExecutableNodePtr(fUML_Tests_TestClassReclassifier_Write_x);
			fUML_Tests_TestClassReclassifier_Write_x->setName("Write(x)");
			fUML_Tests_TestClassReclassifier_Write_x->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassReclassifier_Write_x->setStructuralFeature(fUML_Tests_TestClass_x);
				// InputPin object
				fUML_Tests_TestClassReclassifier_Write_x_object->setThisElementPtr(fUML_Tests_TestClassReclassifier_Write_x_object);
				fUML_Tests_TestClassReclassifier_Write_x_object->setName("object");
				fUML_Tests_TestClassReclassifier_Write_x_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Write_x_object->setType(fUML_Tests_Subclass1);
			fUML_Tests_TestClassReclassifier_Write_x->setObject(fUML_Tests_TestClassReclassifier_Write_x_object);
				// InputPin value
				fUML_Tests_TestClassReclassifier_Write_x_value->setThisElementPtr(fUML_Tests_TestClassReclassifier_Write_x_value);
				fUML_Tests_TestClassReclassifier_Write_x_value->setName("value");
				fUML_Tests_TestClassReclassifier_Write_x_value->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassReclassifier_Write_x->setValue(fUML_Tests_TestClassReclassifier_Write_x_value);
				// OutputPin result
				fUML_Tests_TestClassReclassifier_Write_x_result->setThisElementPtr(fUML_Tests_TestClassReclassifier_Write_x_result);
				fUML_Tests_TestClassReclassifier_Write_x_result->setName("result");
				fUML_Tests_TestClassReclassifier_Write_x_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Write_x_result->setType(fUML_Tests_Subclass1);
			fUML_Tests_TestClassReclassifier_Write_x->setResult(fUML_Tests_TestClassReclassifier_Write_x_result);
		fUML_Tests_TestClassReclassifier->addNode(fUML_Tests_TestClassReclassifier_Write_x);
			// ValueSpecificationAction Value(2)
			fUML_Tests_TestClassReclassifier_Value_2->setThisExecutableNodePtr(fUML_Tests_TestClassReclassifier_Value_2);
			fUML_Tests_TestClassReclassifier_Value_2->setName("Value(2)");
			fUML_Tests_TestClassReclassifier_Value_2->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1169
				fUML_Tests_TestClassReclassifier_Value_2_LiteralInteger1169->setThisElementPtr(fUML_Tests_TestClassReclassifier_Value_2_LiteralInteger1169);
				fUML_Tests_TestClassReclassifier_Value_2_LiteralInteger1169->setName("LiteralInteger1169");
				fUML_Tests_TestClassReclassifier_Value_2_LiteralInteger1169->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Value_2_LiteralInteger1169->setValue(2);
			fUML_Tests_TestClassReclassifier_Value_2->setValue(fUML_Tests_TestClassReclassifier_Value_2_LiteralInteger1169);
				// OutputPin result
				fUML_Tests_TestClassReclassifier_Value_2_result->setThisElementPtr(fUML_Tests_TestClassReclassifier_Value_2_result);
				fUML_Tests_TestClassReclassifier_Value_2_result->setName("result");
				fUML_Tests_TestClassReclassifier_Value_2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Value_2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassReclassifier_Value_2->setResult(fUML_Tests_TestClassReclassifier_Value_2_result);
		fUML_Tests_TestClassReclassifier->addNode(fUML_Tests_TestClassReclassifier_Value_2);
			// AddStructuralFeatureValueAction Write(y)
			fUML_Tests_TestClassReclassifier_Write_y->setThisExecutableNodePtr(fUML_Tests_TestClassReclassifier_Write_y);
			fUML_Tests_TestClassReclassifier_Write_y->setName("Write(y)");
			fUML_Tests_TestClassReclassifier_Write_y->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassReclassifier_Write_y->setStructuralFeature(fUML_Tests_TestClass_y);
				// InputPin object
				fUML_Tests_TestClassReclassifier_Write_y_object->setThisElementPtr(fUML_Tests_TestClassReclassifier_Write_y_object);
				fUML_Tests_TestClassReclassifier_Write_y_object->setName("object");
				fUML_Tests_TestClassReclassifier_Write_y_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Write_y_object->setType(fUML_Tests_Subclass1);
			fUML_Tests_TestClassReclassifier_Write_y->setObject(fUML_Tests_TestClassReclassifier_Write_y_object);
				// InputPin value
				fUML_Tests_TestClassReclassifier_Write_y_value->setThisElementPtr(fUML_Tests_TestClassReclassifier_Write_y_value);
				fUML_Tests_TestClassReclassifier_Write_y_value->setName("value");
				fUML_Tests_TestClassReclassifier_Write_y_value->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassReclassifier_Write_y->setValue(fUML_Tests_TestClassReclassifier_Write_y_value);
				// OutputPin result
				fUML_Tests_TestClassReclassifier_Write_y_result->setThisElementPtr(fUML_Tests_TestClassReclassifier_Write_y_result);
				fUML_Tests_TestClassReclassifier_Write_y_result->setName("result");
				fUML_Tests_TestClassReclassifier_Write_y_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Write_y_result->setType(fUML_Tests_Subclass1);
			fUML_Tests_TestClassReclassifier_Write_y->setResult(fUML_Tests_TestClassReclassifier_Write_y_result);
			fUML_Tests_TestClassReclassifier_Write_y->setIsReplaceAll(true);
		fUML_Tests_TestClassReclassifier->addNode(fUML_Tests_TestClassReclassifier_Write_y);
			// ObjectFlow ObjectFlow1126 from result to object
			fUML_Tests_TestClassReclassifier_ObjectFlow1126->setThisActivityEdgePtr(fUML_Tests_TestClassReclassifier_ObjectFlow1126);
			fUML_Tests_TestClassReclassifier_ObjectFlow1126->setName("ObjectFlow1126");
			fUML_Tests_TestClassReclassifier_ObjectFlow1126->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassReclassifier_ObjectFlow1126->setSource(fUML_Tests_TestClassReclassifier_Write_x_result);
			fUML_Tests_TestClassReclassifier_ObjectFlow1126->setTarget(fUML_Tests_TestClassReclassifier_Write_y_object);
		fUML_Tests_TestClassReclassifier->addEdge(fUML_Tests_TestClassReclassifier_ObjectFlow1126);
			// ObjectFlow ObjectFlow1128 from result to value
			fUML_Tests_TestClassReclassifier_ObjectFlow1128->setThisActivityEdgePtr(fUML_Tests_TestClassReclassifier_ObjectFlow1128);
			fUML_Tests_TestClassReclassifier_ObjectFlow1128->setName("ObjectFlow1128");
			fUML_Tests_TestClassReclassifier_ObjectFlow1128->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassReclassifier_ObjectFlow1128->setSource(fUML_Tests_TestClassReclassifier_Value_true_result);
			fUML_Tests_TestClassReclassifier_ObjectFlow1128->setTarget(fUML_Tests_TestClassReclassifier_Write_a_value);
		fUML_Tests_TestClassReclassifier->addEdge(fUML_Tests_TestClassReclassifier_ObjectFlow1128);
			// ObjectFlow ObjectFlow1130 from result to object
			fUML_Tests_TestClassReclassifier_ObjectFlow1130->setThisActivityEdgePtr(fUML_Tests_TestClassReclassifier_ObjectFlow1130);
			fUML_Tests_TestClassReclassifier_ObjectFlow1130->setName("ObjectFlow1130");
			fUML_Tests_TestClassReclassifier_ObjectFlow1130->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassReclassifier_ObjectFlow1130->setSource(fUML_Tests_TestClassReclassifier_Write_y_result);
			fUML_Tests_TestClassReclassifier_ObjectFlow1130->setTarget(fUML_Tests_TestClassReclassifier_Write_a_object);
		fUML_Tests_TestClassReclassifier->addEdge(fUML_Tests_TestClassReclassifier_ObjectFlow1130);
			// ObjectFlow ObjectFlow1139 from ForkNode1132 to resultNode
			fUML_Tests_TestClassReclassifier_ObjectFlow1139->setThisActivityEdgePtr(fUML_Tests_TestClassReclassifier_ObjectFlow1139);
			fUML_Tests_TestClassReclassifier_ObjectFlow1139->setName("ObjectFlow1139");
			fUML_Tests_TestClassReclassifier_ObjectFlow1139->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassReclassifier_ObjectFlow1139->setSource(fUML_Tests_TestClassReclassifier_ForkNode1132);
			fUML_Tests_TestClassReclassifier_ObjectFlow1139->setTarget(fUML_Tests_TestClassReclassifier_resultNode);
		fUML_Tests_TestClassReclassifier->addEdge(fUML_Tests_TestClassReclassifier_ObjectFlow1139);
			// ObjectFlow ObjectFlow1165 from result to ForkNode1132
			fUML_Tests_TestClassReclassifier_ObjectFlow1165->setThisActivityEdgePtr(fUML_Tests_TestClassReclassifier_ObjectFlow1165);
			fUML_Tests_TestClassReclassifier_ObjectFlow1165->setName("ObjectFlow1165");
			fUML_Tests_TestClassReclassifier_ObjectFlow1165->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassReclassifier_ObjectFlow1165->setSource(fUML_Tests_TestClassReclassifier_Write_a_result);
			fUML_Tests_TestClassReclassifier_ObjectFlow1165->setTarget(fUML_Tests_TestClassReclassifier_ForkNode1132);
		fUML_Tests_TestClassReclassifier->addEdge(fUML_Tests_TestClassReclassifier_ObjectFlow1165);
			// ObjectFlow ObjectFlow1143 from result to object
			fUML_Tests_TestClassReclassifier_ObjectFlow1143->setThisActivityEdgePtr(fUML_Tests_TestClassReclassifier_ObjectFlow1143);
			fUML_Tests_TestClassReclassifier_ObjectFlow1143->setName("ObjectFlow1143");
			fUML_Tests_TestClassReclassifier_ObjectFlow1143->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassReclassifier_ObjectFlow1143->setSource(fUML_Tests_TestClassReclassifier_Create_Subclass1_result);
			fUML_Tests_TestClassReclassifier_ObjectFlow1143->setTarget(fUML_Tests_TestClassReclassifier_Write_x_object);
		fUML_Tests_TestClassReclassifier->addEdge(fUML_Tests_TestClassReclassifier_ObjectFlow1143);
			// ObjectFlow ObjectFlow1170 from ForkNode1132 to object
			fUML_Tests_TestClassReclassifier_ObjectFlow1170->setThisActivityEdgePtr(fUML_Tests_TestClassReclassifier_ObjectFlow1170);
			fUML_Tests_TestClassReclassifier_ObjectFlow1170->setName("ObjectFlow1170");
			fUML_Tests_TestClassReclassifier_ObjectFlow1170->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassReclassifier_ObjectFlow1170->setSource(fUML_Tests_TestClassReclassifier_ForkNode1132);
			fUML_Tests_TestClassReclassifier_ObjectFlow1170->setTarget(fUML_Tests_TestClassReclassifier_Reclassify_Subclass2_object);
		fUML_Tests_TestClassReclassifier->addEdge(fUML_Tests_TestClassReclassifier_ObjectFlow1170);
			// ObjectFlow ObjectFlow1151 from result to value
			fUML_Tests_TestClassReclassifier_ObjectFlow1151->setThisActivityEdgePtr(fUML_Tests_TestClassReclassifier_ObjectFlow1151);
			fUML_Tests_TestClassReclassifier_ObjectFlow1151->setName("ObjectFlow1151");
			fUML_Tests_TestClassReclassifier_ObjectFlow1151->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassReclassifier_ObjectFlow1151->setSource(fUML_Tests_TestClassReclassifier_Value_2_result);
			fUML_Tests_TestClassReclassifier_ObjectFlow1151->setTarget(fUML_Tests_TestClassReclassifier_Write_y_value);
		fUML_Tests_TestClassReclassifier->addEdge(fUML_Tests_TestClassReclassifier_ObjectFlow1151);
			// ObjectFlow ObjectFlow1172 from result to value
			fUML_Tests_TestClassReclassifier_ObjectFlow1172->setThisActivityEdgePtr(fUML_Tests_TestClassReclassifier_ObjectFlow1172);
			fUML_Tests_TestClassReclassifier_ObjectFlow1172->setName("ObjectFlow1172");
			fUML_Tests_TestClassReclassifier_ObjectFlow1172->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassReclassifier_ObjectFlow1172->setSource(fUML_Tests_TestClassReclassifier_Value_1_result);
			fUML_Tests_TestClassReclassifier_ObjectFlow1172->setTarget(fUML_Tests_TestClassReclassifier_Write_x_value);
		fUML_Tests_TestClassReclassifier->addEdge(fUML_Tests_TestClassReclassifier_ObjectFlow1172);
	fUML_Tests->addPackagedElement(fUML_Tests_TestClassReclassifier);
		// Activity GenerateBooleanTestData
		fUML_Tests_GenerateBooleanTestData->setThisActivityPtr(fUML_Tests_GenerateBooleanTestData);
		fUML_Tests_GenerateBooleanTestData->setName("GenerateBooleanTestData");
		fUML_Tests_GenerateBooleanTestData->setVisibility(VisibilityKind::public_);
		fUML_Tests_GenerateBooleanTestData->isReentrant = false;
			// Parameter argumentData1
			fUML_Tests_GenerateBooleanTestData_argumentData1->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_argumentData1);
			fUML_Tests_GenerateBooleanTestData_argumentData1->setName("argumentData1");
			fUML_Tests_GenerateBooleanTestData_argumentData1->setVisibility(VisibilityKind::public_);
			fUML_Tests_GenerateBooleanTestData_argumentData1->setIsOrdered(true);
			fUML_Tests_GenerateBooleanTestData_argumentData1->setUpper(4);
			fUML_Tests_GenerateBooleanTestData_argumentData1->setLower(4);
			fUML_Tests_GenerateBooleanTestData_argumentData1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_argumentData1->setDirection(ParameterDirectionKind::out);
		fUML_Tests_GenerateBooleanTestData->addOwnedParameter(fUML_Tests_GenerateBooleanTestData_argumentData1);
			// Parameter argumentData2
			fUML_Tests_GenerateBooleanTestData_argumentData2->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_argumentData2);
			fUML_Tests_GenerateBooleanTestData_argumentData2->setName("argumentData2");
			fUML_Tests_GenerateBooleanTestData_argumentData2->setVisibility(VisibilityKind::public_);
			fUML_Tests_GenerateBooleanTestData_argumentData2->setIsOrdered(true);
			fUML_Tests_GenerateBooleanTestData_argumentData2->setUpper(4);
			fUML_Tests_GenerateBooleanTestData_argumentData2->setLower(4);
			fUML_Tests_GenerateBooleanTestData_argumentData2->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_argumentData2->setDirection(ParameterDirectionKind::out);
		fUML_Tests_GenerateBooleanTestData->addOwnedParameter(fUML_Tests_GenerateBooleanTestData_argumentData2);
			// ValueSpecificationAction Value(false)-3
			fUML_Tests_GenerateBooleanTestData_Value_falseminus3->setThisExecutableNodePtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus3);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus3->setName("Value(false)-3");
			fUML_Tests_GenerateBooleanTestData_Value_falseminus3->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1199
				fUML_Tests_GenerateBooleanTestData_Value_falseminus3_LiteralBoolean1199->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus3_LiteralBoolean1199);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus3_LiteralBoolean1199->setName("LiteralBoolean1199");
				fUML_Tests_GenerateBooleanTestData_Value_falseminus3_LiteralBoolean1199->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus3_LiteralBoolean1199->setValue(false);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus3->setValue(fUML_Tests_GenerateBooleanTestData_Value_falseminus3_LiteralBoolean1199);
				// OutputPin Value(false)-3.result
				fUML_Tests_GenerateBooleanTestData_Value_falseminus3_Value_falseminus3_result->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus3_Value_falseminus3_result);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus3_Value_falseminus3_result->setName("Value(false)-3.result");
				fUML_Tests_GenerateBooleanTestData_Value_falseminus3_Value_falseminus3_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus3_Value_falseminus3_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus3->setResult(fUML_Tests_GenerateBooleanTestData_Value_falseminus3_Value_falseminus3_result);
		fUML_Tests_GenerateBooleanTestData->addNode(fUML_Tests_GenerateBooleanTestData_Value_falseminus3);
			// ValueSpecificationAction Value(true)-1
			fUML_Tests_GenerateBooleanTestData_Value_trueminus1->setThisExecutableNodePtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus1);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus1->setName("Value(true)-1");
			fUML_Tests_GenerateBooleanTestData_Value_trueminus1->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1178
				fUML_Tests_GenerateBooleanTestData_Value_trueminus1_LiteralBoolean1178->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus1_LiteralBoolean1178);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus1_LiteralBoolean1178->setName("LiteralBoolean1178");
				fUML_Tests_GenerateBooleanTestData_Value_trueminus1_LiteralBoolean1178->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus1_LiteralBoolean1178->setValue(true);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus1->setValue(fUML_Tests_GenerateBooleanTestData_Value_trueminus1_LiteralBoolean1178);
				// OutputPin Value(true)-1.result
				fUML_Tests_GenerateBooleanTestData_Value_trueminus1_Value_trueminus1_result->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus1_Value_trueminus1_result);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus1_Value_trueminus1_result->setName("Value(true)-1.result");
				fUML_Tests_GenerateBooleanTestData_Value_trueminus1_Value_trueminus1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus1_Value_trueminus1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus1->setResult(fUML_Tests_GenerateBooleanTestData_Value_trueminus1_Value_trueminus1_result);
		fUML_Tests_GenerateBooleanTestData->addNode(fUML_Tests_GenerateBooleanTestData_Value_trueminus1);
			// ValueSpecificationAction Value(true)-4
			fUML_Tests_GenerateBooleanTestData_Value_trueminus4->setThisExecutableNodePtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus4);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus4->setName("Value(true)-4");
			fUML_Tests_GenerateBooleanTestData_Value_trueminus4->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1202
				fUML_Tests_GenerateBooleanTestData_Value_trueminus4_LiteralBoolean1202->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus4_LiteralBoolean1202);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus4_LiteralBoolean1202->setName("LiteralBoolean1202");
				fUML_Tests_GenerateBooleanTestData_Value_trueminus4_LiteralBoolean1202->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus4_LiteralBoolean1202->setValue(true);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus4->setValue(fUML_Tests_GenerateBooleanTestData_Value_trueminus4_LiteralBoolean1202);
				// OutputPin Value(true)-4.result
				fUML_Tests_GenerateBooleanTestData_Value_trueminus4_Value_trueminus4_result->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus4_Value_trueminus4_result);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus4_Value_trueminus4_result->setName("Value(true)-4.result");
				fUML_Tests_GenerateBooleanTestData_Value_trueminus4_Value_trueminus4_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus4_Value_trueminus4_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus4->setResult(fUML_Tests_GenerateBooleanTestData_Value_trueminus4_Value_trueminus4_result);
		fUML_Tests_GenerateBooleanTestData->addNode(fUML_Tests_GenerateBooleanTestData_Value_trueminus4);
			// ValueSpecificationAction Value(true)-2
			fUML_Tests_GenerateBooleanTestData_Value_trueminus2->setThisExecutableNodePtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus2);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus2->setName("Value(true)-2");
			fUML_Tests_GenerateBooleanTestData_Value_trueminus2->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1192
				fUML_Tests_GenerateBooleanTestData_Value_trueminus2_LiteralBoolean1192->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus2_LiteralBoolean1192);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus2_LiteralBoolean1192->setName("LiteralBoolean1192");
				fUML_Tests_GenerateBooleanTestData_Value_trueminus2_LiteralBoolean1192->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus2_LiteralBoolean1192->setValue(true);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus2->setValue(fUML_Tests_GenerateBooleanTestData_Value_trueminus2_LiteralBoolean1192);
				// OutputPin Value(true)-2.result
				fUML_Tests_GenerateBooleanTestData_Value_trueminus2_Value_trueminus2_result->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus2_Value_trueminus2_result);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus2_Value_trueminus2_result->setName("Value(true)-2.result");
				fUML_Tests_GenerateBooleanTestData_Value_trueminus2_Value_trueminus2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus2_Value_trueminus2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus2->setResult(fUML_Tests_GenerateBooleanTestData_Value_trueminus2_Value_trueminus2_result);
		fUML_Tests_GenerateBooleanTestData->addNode(fUML_Tests_GenerateBooleanTestData_Value_trueminus2);
			// ValueSpecificationAction Value(false)-1
			fUML_Tests_GenerateBooleanTestData_Value_falseminus1->setThisExecutableNodePtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus1);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus1->setName("Value(false)-1");
			fUML_Tests_GenerateBooleanTestData_Value_falseminus1->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1179
				fUML_Tests_GenerateBooleanTestData_Value_falseminus1_LiteralBoolean1179->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus1_LiteralBoolean1179);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus1_LiteralBoolean1179->setName("LiteralBoolean1179");
				fUML_Tests_GenerateBooleanTestData_Value_falseminus1_LiteralBoolean1179->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus1_LiteralBoolean1179->setValue(false);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus1->setValue(fUML_Tests_GenerateBooleanTestData_Value_falseminus1_LiteralBoolean1179);
				// OutputPin Value(false)-1.result
				fUML_Tests_GenerateBooleanTestData_Value_falseminus1_Value_falseminus1_result->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus1_Value_falseminus1_result);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus1_Value_falseminus1_result->setName("Value(false)-1.result");
				fUML_Tests_GenerateBooleanTestData_Value_falseminus1_Value_falseminus1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus1_Value_falseminus1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus1->setResult(fUML_Tests_GenerateBooleanTestData_Value_falseminus1_Value_falseminus1_result);
		fUML_Tests_GenerateBooleanTestData->addNode(fUML_Tests_GenerateBooleanTestData_Value_falseminus1);
			// ValueSpecificationAction Value(true)-3
			fUML_Tests_GenerateBooleanTestData_Value_trueminus3->setThisExecutableNodePtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus3);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus3->setName("Value(true)-3");
			fUML_Tests_GenerateBooleanTestData_Value_trueminus3->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1195
				fUML_Tests_GenerateBooleanTestData_Value_trueminus3_LiteralBoolean1195->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus3_LiteralBoolean1195);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus3_LiteralBoolean1195->setName("LiteralBoolean1195");
				fUML_Tests_GenerateBooleanTestData_Value_trueminus3_LiteralBoolean1195->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus3_LiteralBoolean1195->setValue(true);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus3->setValue(fUML_Tests_GenerateBooleanTestData_Value_trueminus3_LiteralBoolean1195);
				// OutputPin Value(true)-3.result
				fUML_Tests_GenerateBooleanTestData_Value_trueminus3_Value_trueminus3_result->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus3_Value_trueminus3_result);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus3_Value_trueminus3_result->setName("Value(true)-3.result");
				fUML_Tests_GenerateBooleanTestData_Value_trueminus3_Value_trueminus3_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus3_Value_trueminus3_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus3->setResult(fUML_Tests_GenerateBooleanTestData_Value_trueminus3_Value_trueminus3_result);
		fUML_Tests_GenerateBooleanTestData->addNode(fUML_Tests_GenerateBooleanTestData_Value_trueminus3);
			// ValueSpecificationAction Value(false)-2
			fUML_Tests_GenerateBooleanTestData_Value_falseminus2->setThisExecutableNodePtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus2);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus2->setName("Value(false)-2");
			fUML_Tests_GenerateBooleanTestData_Value_falseminus2->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1196
				fUML_Tests_GenerateBooleanTestData_Value_falseminus2_LiteralBoolean1196->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus2_LiteralBoolean1196);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus2_LiteralBoolean1196->setName("LiteralBoolean1196");
				fUML_Tests_GenerateBooleanTestData_Value_falseminus2_LiteralBoolean1196->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus2_LiteralBoolean1196->setValue(false);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus2->setValue(fUML_Tests_GenerateBooleanTestData_Value_falseminus2_LiteralBoolean1196);
				// OutputPin Value(false)-2.result
				fUML_Tests_GenerateBooleanTestData_Value_falseminus2_Value_falseminus2_result->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus2_Value_falseminus2_result);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus2_Value_falseminus2_result->setName("Value(false)-2.result");
				fUML_Tests_GenerateBooleanTestData_Value_falseminus2_Value_falseminus2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus2_Value_falseminus2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus2->setResult(fUML_Tests_GenerateBooleanTestData_Value_falseminus2_Value_falseminus2_result);
		fUML_Tests_GenerateBooleanTestData->addNode(fUML_Tests_GenerateBooleanTestData_Value_falseminus2);
			// ActivityParameterNode Param(argumentData1)
			fUML_Tests_GenerateBooleanTestData_Param_argumentData1->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Param_argumentData1);
			fUML_Tests_GenerateBooleanTestData_Param_argumentData1->setName("Param(argumentData1)");
			fUML_Tests_GenerateBooleanTestData_Param_argumentData1->setVisibility(VisibilityKind::public_);
			fUML_Tests_GenerateBooleanTestData_Param_argumentData1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_Param_argumentData1->setParameter(fUML_Tests_GenerateBooleanTestData_argumentData1);
		fUML_Tests_GenerateBooleanTestData->addNode(fUML_Tests_GenerateBooleanTestData_Param_argumentData1);
			// ActivityParameterNode Param(argumentData2)
			fUML_Tests_GenerateBooleanTestData_Param_argumentData2->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Param_argumentData2);
			fUML_Tests_GenerateBooleanTestData_Param_argumentData2->setName("Param(argumentData2)");
			fUML_Tests_GenerateBooleanTestData_Param_argumentData2->setVisibility(VisibilityKind::public_);
			fUML_Tests_GenerateBooleanTestData_Param_argumentData2->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_Param_argumentData2->setParameter(fUML_Tests_GenerateBooleanTestData_argumentData2);
		fUML_Tests_GenerateBooleanTestData->addNode(fUML_Tests_GenerateBooleanTestData_Param_argumentData2);
			// ValueSpecificationAction Value(false)-4
			fUML_Tests_GenerateBooleanTestData_Value_falseminus4->setThisExecutableNodePtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus4);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus4->setName("Value(false)-4");
			fUML_Tests_GenerateBooleanTestData_Value_falseminus4->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1213
				fUML_Tests_GenerateBooleanTestData_Value_falseminus4_LiteralBoolean1213->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus4_LiteralBoolean1213);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus4_LiteralBoolean1213->setName("LiteralBoolean1213");
				fUML_Tests_GenerateBooleanTestData_Value_falseminus4_LiteralBoolean1213->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus4_LiteralBoolean1213->setValue(false);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus4->setValue(fUML_Tests_GenerateBooleanTestData_Value_falseminus4_LiteralBoolean1213);
				// OutputPin Value(false)-4.result
				fUML_Tests_GenerateBooleanTestData_Value_falseminus4_Value_falseminus4_result->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus4_Value_falseminus4_result);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus4_Value_falseminus4_result->setName("Value(false)-4.result");
				fUML_Tests_GenerateBooleanTestData_Value_falseminus4_Value_falseminus4_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus4_Value_falseminus4_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus4->setResult(fUML_Tests_GenerateBooleanTestData_Value_falseminus4_Value_falseminus4_result);
		fUML_Tests_GenerateBooleanTestData->addNode(fUML_Tests_GenerateBooleanTestData_Value_falseminus4);
			// ObjectFlow ObjectFlow1174 from Value(false)-2.result to Param(argumentData1)
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1174->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ObjectFlow1174);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1174->setName("ObjectFlow1174");
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1174->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1174->setSource(fUML_Tests_GenerateBooleanTestData_Value_falseminus2_Value_falseminus2_result);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1174->setTarget(fUML_Tests_GenerateBooleanTestData_Param_argumentData1);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ObjectFlow1174);
			// ObjectFlow ObjectFlow1176 from Value(false)-4.result to Param(argumentData2)
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1176->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ObjectFlow1176);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1176->setName("ObjectFlow1176");
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1176->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1176->setSource(fUML_Tests_GenerateBooleanTestData_Value_falseminus4_Value_falseminus4_result);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1176->setTarget(fUML_Tests_GenerateBooleanTestData_Param_argumentData2);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ObjectFlow1176);
			// ObjectFlow ObjectFlow1200 from Value(true)-3.result to Param(argumentData2)
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1200->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ObjectFlow1200);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1200->setName("ObjectFlow1200");
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1200->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1200->setSource(fUML_Tests_GenerateBooleanTestData_Value_trueminus3_Value_trueminus3_result);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1200->setTarget(fUML_Tests_GenerateBooleanTestData_Param_argumentData2);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ObjectFlow1200);
			// ObjectFlow ObjectFlow1203 from Value(true)-2.result to Param(argumentData1)
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1203->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ObjectFlow1203);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1203->setName("ObjectFlow1203");
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1203->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1203->setSource(fUML_Tests_GenerateBooleanTestData_Value_trueminus2_Value_trueminus2_result);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1203->setTarget(fUML_Tests_GenerateBooleanTestData_Param_argumentData1);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ObjectFlow1203);
			// ControlFlow ControlFlow1205 from Value(true)-3 to Value(false)-3
			fUML_Tests_GenerateBooleanTestData_ControlFlow1205->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ControlFlow1205);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1205->setName("ControlFlow1205");
			fUML_Tests_GenerateBooleanTestData_ControlFlow1205->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ControlFlow1205->setSource(fUML_Tests_GenerateBooleanTestData_Value_trueminus3);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1205->setTarget(fUML_Tests_GenerateBooleanTestData_Value_falseminus3);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ControlFlow1205);
			// ObjectFlow ObjectFlow1207 from Value(true)-4.result to Param(argumentData2)
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1207->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ObjectFlow1207);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1207->setName("ObjectFlow1207");
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1207->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1207->setSource(fUML_Tests_GenerateBooleanTestData_Value_trueminus4_Value_trueminus4_result);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1207->setTarget(fUML_Tests_GenerateBooleanTestData_Param_argumentData2);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ObjectFlow1207);
			// ObjectFlow ObjectFlow1209 from Value(true)-1.result to Param(argumentData1)
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1209->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ObjectFlow1209);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1209->setName("ObjectFlow1209");
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1209->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1209->setSource(fUML_Tests_GenerateBooleanTestData_Value_trueminus1_Value_trueminus1_result);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1209->setTarget(fUML_Tests_GenerateBooleanTestData_Param_argumentData1);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ObjectFlow1209);
			// ControlFlow ControlFlow1182 from Value(true)-1 to Value(true)-2
			fUML_Tests_GenerateBooleanTestData_ControlFlow1182->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ControlFlow1182);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1182->setName("ControlFlow1182");
			fUML_Tests_GenerateBooleanTestData_ControlFlow1182->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ControlFlow1182->setSource(fUML_Tests_GenerateBooleanTestData_Value_trueminus1);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1182->setTarget(fUML_Tests_GenerateBooleanTestData_Value_trueminus2);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ControlFlow1182);
			// ControlFlow ControlFlow1184 from Value(false)-3 to Value(true)-4
			fUML_Tests_GenerateBooleanTestData_ControlFlow1184->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ControlFlow1184);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1184->setName("ControlFlow1184");
			fUML_Tests_GenerateBooleanTestData_ControlFlow1184->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ControlFlow1184->setSource(fUML_Tests_GenerateBooleanTestData_Value_falseminus3);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1184->setTarget(fUML_Tests_GenerateBooleanTestData_Value_trueminus4);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ControlFlow1184);
			// ControlFlow ControlFlow1211 from Value(true)-4 to Value(false)-4
			fUML_Tests_GenerateBooleanTestData_ControlFlow1211->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ControlFlow1211);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1211->setName("ControlFlow1211");
			fUML_Tests_GenerateBooleanTestData_ControlFlow1211->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ControlFlow1211->setSource(fUML_Tests_GenerateBooleanTestData_Value_trueminus4);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1211->setTarget(fUML_Tests_GenerateBooleanTestData_Value_falseminus4);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ControlFlow1211);
			// ObjectFlow ObjectFlow1186 from Value(false)-1.result to Param(argumentData1)
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1186->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ObjectFlow1186);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1186->setName("ObjectFlow1186");
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1186->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1186->setSource(fUML_Tests_GenerateBooleanTestData_Value_falseminus1_Value_falseminus1_result);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1186->setTarget(fUML_Tests_GenerateBooleanTestData_Param_argumentData1);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ObjectFlow1186);
			// ControlFlow ControlFlow1188 from Value(false)-1 to Value(false)-2
			fUML_Tests_GenerateBooleanTestData_ControlFlow1188->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ControlFlow1188);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1188->setName("ControlFlow1188");
			fUML_Tests_GenerateBooleanTestData_ControlFlow1188->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ControlFlow1188->setSource(fUML_Tests_GenerateBooleanTestData_Value_falseminus1);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1188->setTarget(fUML_Tests_GenerateBooleanTestData_Value_falseminus2);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ControlFlow1188);
			// ControlFlow ControlFlow1190 from Value(true)-2 to Value(false)-1
			fUML_Tests_GenerateBooleanTestData_ControlFlow1190->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ControlFlow1190);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1190->setName("ControlFlow1190");
			fUML_Tests_GenerateBooleanTestData_ControlFlow1190->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ControlFlow1190->setSource(fUML_Tests_GenerateBooleanTestData_Value_trueminus2);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1190->setTarget(fUML_Tests_GenerateBooleanTestData_Value_falseminus1);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ControlFlow1190);
			// ObjectFlow ObjectFlow1193 from Value(false)-3.result to Param(argumentData2)
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1193->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ObjectFlow1193);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1193->setName("ObjectFlow1193");
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1193->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1193->setSource(fUML_Tests_GenerateBooleanTestData_Value_falseminus3_Value_falseminus3_result);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1193->setTarget(fUML_Tests_GenerateBooleanTestData_Param_argumentData2);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ObjectFlow1193);
	fUML_Tests->addPackagedElement(fUML_Tests_GenerateBooleanTestData);
		// Activity TestRealComparisonFunctions
		fUML_Tests_TestRealComparisonFunctions->setThisActivityPtr(fUML_Tests_TestRealComparisonFunctions);
		fUML_Tests_TestRealComparisonFunctions->setName("TestRealComparisonFunctions");
		fUML_Tests_TestRealComparisonFunctions->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestRealComparisonFunctions->isReentrant = false;
			// Parameter LTResult
			fUML_Tests_TestRealComparisonFunctions_LTResult->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_LTResult);
			fUML_Tests_TestRealComparisonFunctions_LTResult->setName("LTResult");
			fUML_Tests_TestRealComparisonFunctions_LTResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_LTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_LTResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealComparisonFunctions->addOwnedParameter(fUML_Tests_TestRealComparisonFunctions_LTResult);
			// Parameter LEResult
			fUML_Tests_TestRealComparisonFunctions_LEResult->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_LEResult);
			fUML_Tests_TestRealComparisonFunctions_LEResult->setName("LEResult");
			fUML_Tests_TestRealComparisonFunctions_LEResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_LEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_LEResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealComparisonFunctions->addOwnedParameter(fUML_Tests_TestRealComparisonFunctions_LEResult);
			// Parameter GTResult
			fUML_Tests_TestRealComparisonFunctions_GTResult->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_GTResult);
			fUML_Tests_TestRealComparisonFunctions_GTResult->setName("GTResult");
			fUML_Tests_TestRealComparisonFunctions_GTResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_GTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_GTResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealComparisonFunctions->addOwnedParameter(fUML_Tests_TestRealComparisonFunctions_GTResult);
			// Parameter GEResult
			fUML_Tests_TestRealComparisonFunctions_GEResult->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_GEResult);
			fUML_Tests_TestRealComparisonFunctions_GEResult->setName("GEResult");
			fUML_Tests_TestRealComparisonFunctions_GEResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_GEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_GEResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealComparisonFunctions->addOwnedParameter(fUML_Tests_TestRealComparisonFunctions_GEResult);
			// ForkNode Fork(3.0)
			fUML_Tests_TestRealComparisonFunctions_Fork_3_0->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Fork_3_0);
			fUML_Tests_TestRealComparisonFunctions_Fork_3_0->setName("Fork(3.0)");
			fUML_Tests_TestRealComparisonFunctions_Fork_3_0->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Fork_3_0);
			// CallBehaviorAction Call(LE)
			fUML_Tests_TestRealComparisonFunctions_Call_LE->setThisExecutableNodePtr(fUML_Tests_TestRealComparisonFunctions_Call_LE);
			fUML_Tests_TestRealComparisonFunctions_Call_LE->setName("Call(LE)");
			fUML_Tests_TestRealComparisonFunctions_Call_LE->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestRealComparisonFunctions_Call_LE_result->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_LE_result);
				fUML_Tests_TestRealComparisonFunctions_Call_LE_result->setName("result");
				fUML_Tests_TestRealComparisonFunctions_Call_LE_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_LE_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_Call_LE->addResult(fUML_Tests_TestRealComparisonFunctions_Call_LE_result);
			fUML_Tests_TestRealComparisonFunctions_Call_LE->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_lessOrEqual);
				// InputPin x
				fUML_Tests_TestRealComparisonFunctions_Call_LE_x->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_LE_x);
				fUML_Tests_TestRealComparisonFunctions_Call_LE_x->setName("x");
				fUML_Tests_TestRealComparisonFunctions_Call_LE_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_LE_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealComparisonFunctions_Call_LE->addArgument(fUML_Tests_TestRealComparisonFunctions_Call_LE_x);
				// InputPin y
				fUML_Tests_TestRealComparisonFunctions_Call_LE_y->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_LE_y);
				fUML_Tests_TestRealComparisonFunctions_Call_LE_y->setName("y");
				fUML_Tests_TestRealComparisonFunctions_Call_LE_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_LE_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealComparisonFunctions_Call_LE->addArgument(fUML_Tests_TestRealComparisonFunctions_Call_LE_y);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Call_LE);
			// ValueSpecificationAction Value(3.0)
			fUML_Tests_TestRealComparisonFunctions_Value_3_0->setThisExecutableNodePtr(fUML_Tests_TestRealComparisonFunctions_Value_3_0);
			fUML_Tests_TestRealComparisonFunctions_Value_3_0->setName("Value(3.0)");
			fUML_Tests_TestRealComparisonFunctions_Value_3_0->setVisibility(VisibilityKind::public_);
				// LiteralReal LiteralReal1256
				fUML_Tests_TestRealComparisonFunctions_Value_3_0_LiteralReal1256->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Value_3_0_LiteralReal1256);
				fUML_Tests_TestRealComparisonFunctions_Value_3_0_LiteralReal1256->setName("LiteralReal1256");
				fUML_Tests_TestRealComparisonFunctions_Value_3_0_LiteralReal1256->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Value_3_0_LiteralReal1256->setValue(3.0f);
			fUML_Tests_TestRealComparisonFunctions_Value_3_0->setValue(fUML_Tests_TestRealComparisonFunctions_Value_3_0_LiteralReal1256);
				// OutputPin Value(3.0).result
				fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result);
				fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result->setName("Value(3.0).result");
				fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealComparisonFunctions_Value_3_0->setResult(fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Value_3_0);
			// ActivityParameterNode Param(GEResult)
			fUML_Tests_TestRealComparisonFunctions_Param_GEResult->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Param_GEResult);
			fUML_Tests_TestRealComparisonFunctions_Param_GEResult->setName("Param(GEResult)");
			fUML_Tests_TestRealComparisonFunctions_Param_GEResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealComparisonFunctions_Param_GEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_Param_GEResult->setParameter(fUML_Tests_TestRealComparisonFunctions_GEResult);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Param_GEResult);
			// CallBehaviorAction Call(LT)
			fUML_Tests_TestRealComparisonFunctions_Call_LT->setThisExecutableNodePtr(fUML_Tests_TestRealComparisonFunctions_Call_LT);
			fUML_Tests_TestRealComparisonFunctions_Call_LT->setName("Call(LT)");
			fUML_Tests_TestRealComparisonFunctions_Call_LT->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestRealComparisonFunctions_Call_LT_result->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_LT_result);
				fUML_Tests_TestRealComparisonFunctions_Call_LT_result->setName("result");
				fUML_Tests_TestRealComparisonFunctions_Call_LT_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_LT_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_Call_LT->addResult(fUML_Tests_TestRealComparisonFunctions_Call_LT_result);
			fUML_Tests_TestRealComparisonFunctions_Call_LT->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_lessThan);
				// InputPin x
				fUML_Tests_TestRealComparisonFunctions_Call_LT_x->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_LT_x);
				fUML_Tests_TestRealComparisonFunctions_Call_LT_x->setName("x");
				fUML_Tests_TestRealComparisonFunctions_Call_LT_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_LT_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealComparisonFunctions_Call_LT->addArgument(fUML_Tests_TestRealComparisonFunctions_Call_LT_x);
				// InputPin y
				fUML_Tests_TestRealComparisonFunctions_Call_LT_y->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_LT_y);
				fUML_Tests_TestRealComparisonFunctions_Call_LT_y->setName("y");
				fUML_Tests_TestRealComparisonFunctions_Call_LT_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_LT_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealComparisonFunctions_Call_LT->addArgument(fUML_Tests_TestRealComparisonFunctions_Call_LT_y);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Call_LT);
			// CallBehaviorAction Call(GE)
			fUML_Tests_TestRealComparisonFunctions_Call_GE->setThisExecutableNodePtr(fUML_Tests_TestRealComparisonFunctions_Call_GE);
			fUML_Tests_TestRealComparisonFunctions_Call_GE->setName("Call(GE)");
			fUML_Tests_TestRealComparisonFunctions_Call_GE->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestRealComparisonFunctions_Call_GE_result->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_GE_result);
				fUML_Tests_TestRealComparisonFunctions_Call_GE_result->setName("result");
				fUML_Tests_TestRealComparisonFunctions_Call_GE_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_GE_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_Call_GE->addResult(fUML_Tests_TestRealComparisonFunctions_Call_GE_result);
			fUML_Tests_TestRealComparisonFunctions_Call_GE->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_greaterOrEqual);
				// InputPin x
				fUML_Tests_TestRealComparisonFunctions_Call_GE_x->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_GE_x);
				fUML_Tests_TestRealComparisonFunctions_Call_GE_x->setName("x");
				fUML_Tests_TestRealComparisonFunctions_Call_GE_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_GE_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealComparisonFunctions_Call_GE->addArgument(fUML_Tests_TestRealComparisonFunctions_Call_GE_x);
				// InputPin y
				fUML_Tests_TestRealComparisonFunctions_Call_GE_y->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_GE_y);
				fUML_Tests_TestRealComparisonFunctions_Call_GE_y->setName("y");
				fUML_Tests_TestRealComparisonFunctions_Call_GE_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_GE_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealComparisonFunctions_Call_GE->addArgument(fUML_Tests_TestRealComparisonFunctions_Call_GE_y);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Call_GE);
			// ActivityParameterNode Param(LTResult)
			fUML_Tests_TestRealComparisonFunctions_Param_LTResult->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Param_LTResult);
			fUML_Tests_TestRealComparisonFunctions_Param_LTResult->setName("Param(LTResult)");
			fUML_Tests_TestRealComparisonFunctions_Param_LTResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealComparisonFunctions_Param_LTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_Param_LTResult->setParameter(fUML_Tests_TestRealComparisonFunctions_LTResult);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Param_LTResult);
			// ActivityParameterNode Param(LEResult)
			fUML_Tests_TestRealComparisonFunctions_Param_LEResult->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Param_LEResult);
			fUML_Tests_TestRealComparisonFunctions_Param_LEResult->setName("Param(LEResult)");
			fUML_Tests_TestRealComparisonFunctions_Param_LEResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealComparisonFunctions_Param_LEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_Param_LEResult->setParameter(fUML_Tests_TestRealComparisonFunctions_LEResult);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Param_LEResult);
			// CallBehaviorAction Call(GT)
			fUML_Tests_TestRealComparisonFunctions_Call_GT->setThisExecutableNodePtr(fUML_Tests_TestRealComparisonFunctions_Call_GT);
			fUML_Tests_TestRealComparisonFunctions_Call_GT->setName("Call(GT)");
			fUML_Tests_TestRealComparisonFunctions_Call_GT->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestRealComparisonFunctions_Call_GT_result->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_GT_result);
				fUML_Tests_TestRealComparisonFunctions_Call_GT_result->setName("result");
				fUML_Tests_TestRealComparisonFunctions_Call_GT_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_GT_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_Call_GT->addResult(fUML_Tests_TestRealComparisonFunctions_Call_GT_result);
			fUML_Tests_TestRealComparisonFunctions_Call_GT->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_greaterThan);
				// InputPin x
				fUML_Tests_TestRealComparisonFunctions_Call_GT_x->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_GT_x);
				fUML_Tests_TestRealComparisonFunctions_Call_GT_x->setName("x");
				fUML_Tests_TestRealComparisonFunctions_Call_GT_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_GT_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealComparisonFunctions_Call_GT->addArgument(fUML_Tests_TestRealComparisonFunctions_Call_GT_x);
				// InputPin y
				fUML_Tests_TestRealComparisonFunctions_Call_GT_y->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_GT_y);
				fUML_Tests_TestRealComparisonFunctions_Call_GT_y->setName("y");
				fUML_Tests_TestRealComparisonFunctions_Call_GT_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_GT_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealComparisonFunctions_Call_GT->addArgument(fUML_Tests_TestRealComparisonFunctions_Call_GT_y);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Call_GT);
			// ActivityParameterNode Param(GTResult)
			fUML_Tests_TestRealComparisonFunctions_Param_GTResult->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Param_GTResult);
			fUML_Tests_TestRealComparisonFunctions_Param_GTResult->setName("Param(GTResult)");
			fUML_Tests_TestRealComparisonFunctions_Param_GTResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealComparisonFunctions_Param_GTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_Param_GTResult->setParameter(fUML_Tests_TestRealComparisonFunctions_GTResult);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Param_GTResult);
			// ForkNode Fork(2.0)
			fUML_Tests_TestRealComparisonFunctions_Fork_2_0->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Fork_2_0);
			fUML_Tests_TestRealComparisonFunctions_Fork_2_0->setName("Fork(2.0)");
			fUML_Tests_TestRealComparisonFunctions_Fork_2_0->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Fork_2_0);
			// ValueSpecificationAction Value(2.0)
			fUML_Tests_TestRealComparisonFunctions_Value_2_0->setThisExecutableNodePtr(fUML_Tests_TestRealComparisonFunctions_Value_2_0);
			fUML_Tests_TestRealComparisonFunctions_Value_2_0->setName("Value(2.0)");
			fUML_Tests_TestRealComparisonFunctions_Value_2_0->setVisibility(VisibilityKind::public_);
				// LiteralReal LiteralReal1277
				fUML_Tests_TestRealComparisonFunctions_Value_2_0_LiteralReal1277->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Value_2_0_LiteralReal1277);
				fUML_Tests_TestRealComparisonFunctions_Value_2_0_LiteralReal1277->setName("LiteralReal1277");
				fUML_Tests_TestRealComparisonFunctions_Value_2_0_LiteralReal1277->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Value_2_0_LiteralReal1277->setValue(2.0f);
			fUML_Tests_TestRealComparisonFunctions_Value_2_0->setValue(fUML_Tests_TestRealComparisonFunctions_Value_2_0_LiteralReal1277);
				// OutputPin Value(2.0).result
				fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result);
				fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result->setName("Value(2.0).result");
				fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestRealComparisonFunctions_Value_2_0->setResult(fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Value_2_0);
			// ObjectFlow ObjectFlow1248 from result to Param(LTResult)
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1248->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1248);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1248->setName("ObjectFlow1248");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1248->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1248->setSource(fUML_Tests_TestRealComparisonFunctions_Call_LT_result);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1248->setTarget(fUML_Tests_TestRealComparisonFunctions_Param_LTResult);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1248);
			// ObjectFlow ObjectFlow1250 from Value(3.0).result to Fork(3.0)
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1250->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1250);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1250->setName("ObjectFlow1250");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1250->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1250->setSource(fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1250->setTarget(fUML_Tests_TestRealComparisonFunctions_Fork_3_0);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1250);
			// ObjectFlow ObjectFlow1214 from Fork(3.0) to x
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1214->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1214);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1214->setName("ObjectFlow1214");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1214->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1214->setSource(fUML_Tests_TestRealComparisonFunctions_Fork_3_0);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1214->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_GE_x);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1214);
			// ControlFlow ControlFlow1252 from Call(LE) to Call(GT)
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1252->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ControlFlow1252);
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1252->setName("ControlFlow1252");
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1252->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1252->setSource(fUML_Tests_TestRealComparisonFunctions_Call_LE);
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1252->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_GT);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ControlFlow1252);
			// ControlFlow ControlFlow1222 from Call(LT) to Call(LE)
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1222->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ControlFlow1222);
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1222->setName("ControlFlow1222");
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1222->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1222->setSource(fUML_Tests_TestRealComparisonFunctions_Call_LT);
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1222->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_LE);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ControlFlow1222);
			// ObjectFlow ObjectFlow1224 from Fork(2.0) to y
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1224->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1224);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1224->setName("ObjectFlow1224");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1224->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1224->setSource(fUML_Tests_TestRealComparisonFunctions_Fork_2_0);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1224->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_GE_y);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1224);
			// ObjectFlow ObjectFlow1232 from result to Param(GEResult)
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1232->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1232);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1232->setName("ObjectFlow1232");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1232->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1232->setSource(fUML_Tests_TestRealComparisonFunctions_Call_GE_result);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1232->setTarget(fUML_Tests_TestRealComparisonFunctions_Param_GEResult);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1232);
			// ObjectFlow ObjectFlow1234 from result to Param(GTResult)
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1234->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1234);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1234->setName("ObjectFlow1234");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1234->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1234->setSource(fUML_Tests_TestRealComparisonFunctions_Call_GT_result);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1234->setTarget(fUML_Tests_TestRealComparisonFunctions_Param_GTResult);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1234);
			// ObjectFlow ObjectFlow1236 from Fork(2.0) to y
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1236->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1236);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1236->setName("ObjectFlow1236");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1236->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1236->setSource(fUML_Tests_TestRealComparisonFunctions_Fork_2_0);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1236->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_LE_y);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1236);
			// ObjectFlow ObjectFlow1263 from Fork(3.0) to x
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1263->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1263);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1263->setName("ObjectFlow1263");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1263->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1263->setSource(fUML_Tests_TestRealComparisonFunctions_Fork_3_0);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1263->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_LE_x);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1263);
			// ObjectFlow ObjectFlow1238 from Value(2.0).result to Fork(2.0)
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1238->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1238);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1238->setName("ObjectFlow1238");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1238->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1238->setSource(fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1238->setTarget(fUML_Tests_TestRealComparisonFunctions_Fork_2_0);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1238);
			// ObjectFlow ObjectFlow1265 from Fork(3.0) to x
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1265->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1265);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1265->setName("ObjectFlow1265");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1265->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1265->setSource(fUML_Tests_TestRealComparisonFunctions_Fork_3_0);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1265->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_LT_x);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1265);
			// ControlFlow ControlFlow1267 from Call(GT) to Call(GE)
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1267->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ControlFlow1267);
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1267->setName("ControlFlow1267");
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1267->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1267->setSource(fUML_Tests_TestRealComparisonFunctions_Call_GT);
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1267->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_GE);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ControlFlow1267);
			// ObjectFlow ObjectFlow1246 from Fork(2.0) to y
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1246->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1246);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1246->setName("ObjectFlow1246");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1246->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1246->setSource(fUML_Tests_TestRealComparisonFunctions_Fork_2_0);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1246->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_LT_y);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1246);
			// ObjectFlow ObjectFlow1269 from Fork(3.0) to x
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1269->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1269);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1269->setName("ObjectFlow1269");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1269->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1269->setSource(fUML_Tests_TestRealComparisonFunctions_Fork_3_0);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1269->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_GT_x);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1269);
			// ObjectFlow ObjectFlow1271 from result to Param(LEResult)
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1271->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1271);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1271->setName("ObjectFlow1271");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1271->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1271->setSource(fUML_Tests_TestRealComparisonFunctions_Call_LE_result);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1271->setTarget(fUML_Tests_TestRealComparisonFunctions_Param_LEResult);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1271);
			// ObjectFlow ObjectFlow1273 from Fork(2.0) to y
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1273->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1273);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1273->setName("ObjectFlow1273");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1273->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1273->setSource(fUML_Tests_TestRealComparisonFunctions_Fork_2_0);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1273->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_GT_y);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1273);
	fUML_Tests->addPackagedElement(fUML_Tests_TestRealComparisonFunctions);
		// Activity CopierCaller
		fUML_Tests_CopierCaller->setThisActivityPtr(fUML_Tests_CopierCaller);
		fUML_Tests_CopierCaller->setName("CopierCaller");
		fUML_Tests_CopierCaller->setVisibility(VisibilityKind::public_);
		fUML_Tests_CopierCaller->isReentrant = false;
			// Parameter output
			fUML_Tests_CopierCaller_output->setThisElementPtr(fUML_Tests_CopierCaller_output);
			fUML_Tests_CopierCaller_output->setName("output");
			fUML_Tests_CopierCaller_output->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_CopierCaller_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_CopierCaller_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_CopierCaller->addOwnedParameter(fUML_Tests_CopierCaller_output);
			// ActivityParameterNode Parameter(output)
			fUML_Tests_CopierCaller_Parameter_output->setThisElementPtr(fUML_Tests_CopierCaller_Parameter_output);
			fUML_Tests_CopierCaller_Parameter_output->setName("Parameter(output)");
			fUML_Tests_CopierCaller_Parameter_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_CopierCaller_Parameter_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_CopierCaller_Parameter_output->setParameter(fUML_Tests_CopierCaller_output);
		fUML_Tests_CopierCaller->addNode(fUML_Tests_CopierCaller_Parameter_output);
			// CallBehaviorAction Call(Copier)
			fUML_Tests_CopierCaller_Call_Copier->setThisExecutableNodePtr(fUML_Tests_CopierCaller_Call_Copier);
			fUML_Tests_CopierCaller_Call_Copier->setName("Call(Copier)");
			fUML_Tests_CopierCaller_Call_Copier->setVisibility(VisibilityKind::public_);
				// OutputPin Copier.output
				fUML_Tests_CopierCaller_Call_Copier_Copier_output->setThisElementPtr(fUML_Tests_CopierCaller_Call_Copier_Copier_output);
				fUML_Tests_CopierCaller_Call_Copier_Copier_output->setName("Copier.output");
				fUML_Tests_CopierCaller_Call_Copier_Copier_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_CopierCaller_Call_Copier_Copier_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_CopierCaller_Call_Copier->addResult(fUML_Tests_CopierCaller_Call_Copier_Copier_output);
			fUML_Tests_CopierCaller_Call_Copier->setBehavior(fUML_Tests_Copier);
				// InputPin Copier.input
				fUML_Tests_CopierCaller_Call_Copier_Copier_input->setThisElementPtr(fUML_Tests_CopierCaller_Call_Copier_Copier_input);
				fUML_Tests_CopierCaller_Call_Copier_Copier_input->setName("Copier.input");
				fUML_Tests_CopierCaller_Call_Copier_Copier_input->setVisibility(VisibilityKind::public_);
				fUML_Tests_CopierCaller_Call_Copier_Copier_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_CopierCaller_Call_Copier->addArgument(fUML_Tests_CopierCaller_Call_Copier_Copier_input);
		fUML_Tests_CopierCaller->addNode(fUML_Tests_CopierCaller_Call_Copier);
			// ValueSpecificationAction Value(888)
			fUML_Tests_CopierCaller_Value_888->setThisExecutableNodePtr(fUML_Tests_CopierCaller_Value_888);
			fUML_Tests_CopierCaller_Value_888->setName("Value(888)");
			fUML_Tests_CopierCaller_Value_888->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1286
				fUML_Tests_CopierCaller_Value_888_LiteralInteger1286->setThisElementPtr(fUML_Tests_CopierCaller_Value_888_LiteralInteger1286);
				fUML_Tests_CopierCaller_Value_888_LiteralInteger1286->setName("LiteralInteger1286");
				fUML_Tests_CopierCaller_Value_888_LiteralInteger1286->setVisibility(VisibilityKind::public_);
				fUML_Tests_CopierCaller_Value_888_LiteralInteger1286->setValue(888);
			fUML_Tests_CopierCaller_Value_888->setValue(fUML_Tests_CopierCaller_Value_888_LiteralInteger1286);
				// OutputPin Value(0).result
				fUML_Tests_CopierCaller_Value_888_Value_0_result->setThisElementPtr(fUML_Tests_CopierCaller_Value_888_Value_0_result);
				fUML_Tests_CopierCaller_Value_888_Value_0_result->setName("Value(0).result");
				fUML_Tests_CopierCaller_Value_888_Value_0_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_CopierCaller_Value_888_Value_0_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_CopierCaller_Value_888->setResult(fUML_Tests_CopierCaller_Value_888_Value_0_result);
		fUML_Tests_CopierCaller->addNode(fUML_Tests_CopierCaller_Value_888);
			// ObjectFlow ObjectFlow1284 from Copier.output to Parameter(output)
			fUML_Tests_CopierCaller_ObjectFlow1284->setThisActivityEdgePtr(fUML_Tests_CopierCaller_ObjectFlow1284);
			fUML_Tests_CopierCaller_ObjectFlow1284->setName("ObjectFlow1284");
			fUML_Tests_CopierCaller_ObjectFlow1284->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_CopierCaller_ObjectFlow1284->setSource(fUML_Tests_CopierCaller_Call_Copier_Copier_output);
			fUML_Tests_CopierCaller_ObjectFlow1284->setTarget(fUML_Tests_CopierCaller_Parameter_output);
		fUML_Tests_CopierCaller->addEdge(fUML_Tests_CopierCaller_ObjectFlow1284);
			// ObjectFlow ObjectFlow1287 from Value(0).result to Copier.input
			fUML_Tests_CopierCaller_ObjectFlow1287->setThisActivityEdgePtr(fUML_Tests_CopierCaller_ObjectFlow1287);
			fUML_Tests_CopierCaller_ObjectFlow1287->setName("ObjectFlow1287");
			fUML_Tests_CopierCaller_ObjectFlow1287->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_CopierCaller_ObjectFlow1287->setSource(fUML_Tests_CopierCaller_Value_888_Value_0_result);
			fUML_Tests_CopierCaller_ObjectFlow1287->setTarget(fUML_Tests_CopierCaller_Call_Copier_Copier_input);
		fUML_Tests_CopierCaller->addEdge(fUML_Tests_CopierCaller_ObjectFlow1287);
	fUML_Tests->addPackagedElement(fUML_Tests_CopierCaller);
		// SignalEvent SignalEvent1289
		fUML_Tests_SignalEvent1289->setThisElementPtr(fUML_Tests_SignalEvent1289);
		fUML_Tests_SignalEvent1289->setName("SignalEvent1289");
		fUML_Tests_SignalEvent1289->setVisibility(VisibilityKind::public_);
		fUML_Tests_SignalEvent1289->setSignal(fUML_Tests_OtherSignal);
	fUML_Tests->addPackagedElement(fUML_Tests_SignalEvent1289);
		// Signal SpecializedSignal
		fUML_Tests_SpecializedSignal->setThisSignalPtr(fUML_Tests_SpecializedSignal);
		fUML_Tests_SpecializedSignal->setName("SpecializedSignal");
		fUML_Tests_SpecializedSignal->setVisibility(VisibilityKind::public_);
		
			// Generalization to TestSignal
			fUML_Tests_SpecializedSignal_Generalization1290->setThisElementPtr(fUML_Tests_SpecializedSignal_Generalization1290);
			fUML_Tests_SpecializedSignal_Generalization1290->setGeneral(fUML_Tests_TestSignal);
		fUML_Tests_SpecializedSignal->addGeneralization(fUML_Tests_SpecializedSignal_Generalization1290);
	fUML_Tests->addPackagedElement(fUML_Tests_SpecializedSignal);
		// Activity ActiveClassBehaviorSender
		fUML_Tests_ActiveClassBehaviorSender->setThisActivityPtr(fUML_Tests_ActiveClassBehaviorSender);
		fUML_Tests_ActiveClassBehaviorSender->setName("ActiveClassBehaviorSender");
		fUML_Tests_ActiveClassBehaviorSender->setVisibility(VisibilityKind::public_);
			// InitialNode InitialNode1295
			fUML_Tests_ActiveClassBehaviorSender_InitialNode1295->setThisElementPtr(fUML_Tests_ActiveClassBehaviorSender_InitialNode1295);
			fUML_Tests_ActiveClassBehaviorSender_InitialNode1295->setName("InitialNode1295");
			fUML_Tests_ActiveClassBehaviorSender_InitialNode1295->setVisibility(VisibilityKind::public_);
		fUML_Tests_ActiveClassBehaviorSender->addNode(fUML_Tests_ActiveClassBehaviorSender_InitialNode1295);
			// StartObjectBehaviorAction Start(ActiveClass)
			fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass->setThisExecutableNodePtr(fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass);
			fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass->setName("Start(ActiveClass)");
			fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass->setVisibility(VisibilityKind::public_);
				// InputPin object
				fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object->setThisElementPtr(fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object);
				fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object->setName("object");
				fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object->setType(fUML_Tests_ActiveClass);
			fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass->setObject(fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object);
		fUML_Tests_ActiveClassBehaviorSender->addNode(fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass);
			// CreateObjectAction Create(ActiveClass)
			fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass->setThisExecutableNodePtr(fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass);
			fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass->setName("Create(ActiveClass)");
			fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass->setVisibility(VisibilityKind::public_);
			fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass->setClassifier(fUML_Tests_ActiveClass);
				// OutputPin result
				fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result->setThisElementPtr(fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result);
				fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result->setName("result");
				fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result->setType(fUML_Tests_ActiveClass);
			fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass->setResult(fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result);
		fUML_Tests_ActiveClassBehaviorSender->addNode(fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass);
			// ForkNode ForkNode1312
			fUML_Tests_ActiveClassBehaviorSender_ForkNode1312->setThisElementPtr(fUML_Tests_ActiveClassBehaviorSender_ForkNode1312);
			fUML_Tests_ActiveClassBehaviorSender_ForkNode1312->setName("ForkNode1312");
			fUML_Tests_ActiveClassBehaviorSender_ForkNode1312->setVisibility(VisibilityKind::public_);
		fUML_Tests_ActiveClassBehaviorSender->addNode(fUML_Tests_ActiveClassBehaviorSender_ForkNode1312);
			// SendSignalAction Send(TestSignal)
			fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal->setThisExecutableNodePtr(fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal);
			fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal->setName("Send(TestSignal)");
			fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal->setVisibility(VisibilityKind::public_);
			fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal->setSignal(fUML_Tests_TestSignal);
				// InputPin target
				fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target->setThisElementPtr(fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target);
				fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target->setName("target");
				fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target->setVisibility(VisibilityKind::public_);
				fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target->setType(fUML_Tests_ActiveClass);
			fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal->setTarget(fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target);
		fUML_Tests_ActiveClassBehaviorSender->addNode(fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal);
			// SendSignalAction Send(OtherSignal)
			fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal->setThisExecutableNodePtr(fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal);
			fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal->setName("Send(OtherSignal)");
			fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal->setVisibility(VisibilityKind::public_);
			fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal->setSignal(fUML_Tests_OtherSignal);
				// InputPin target
				fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target->setThisElementPtr(fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target);
				fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target->setName("target");
				fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target->setVisibility(VisibilityKind::public_);
				fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target->setType(fUML_Tests_ActiveClass);
			fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal->setTarget(fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target);
		fUML_Tests_ActiveClassBehaviorSender->addNode(fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal);
			// ControlFlow ControlFlow1306 from InitialNode1295 to Create(ActiveClass)
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow1306->setThisActivityEdgePtr(fUML_Tests_ActiveClassBehaviorSender_ControlFlow1306);
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow1306->setName("ControlFlow1306");
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow1306->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow1306->setSource(fUML_Tests_ActiveClassBehaviorSender_InitialNode1295);
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow1306->setTarget(fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass);
		fUML_Tests_ActiveClassBehaviorSender->addEdge(fUML_Tests_ActiveClassBehaviorSender_ControlFlow1306);
			// ObjectFlow ObjectFlow1291 from ForkNode1312 to target
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1291->setThisActivityEdgePtr(fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1291);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1291->setName("ObjectFlow1291");
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1291->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1291->setSource(fUML_Tests_ActiveClassBehaviorSender_ForkNode1312);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1291->setTarget(fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target);
		fUML_Tests_ActiveClassBehaviorSender->addEdge(fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1291);
			// ObjectFlow ObjectFlow1293 from ForkNode1312 to target
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1293->setThisActivityEdgePtr(fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1293);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1293->setName("ObjectFlow1293");
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1293->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1293->setSource(fUML_Tests_ActiveClassBehaviorSender_ForkNode1312);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1293->setTarget(fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target);
		fUML_Tests_ActiveClassBehaviorSender->addEdge(fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1293);
			// ObjectFlow ObjectFlow1296 from ForkNode1312 to object
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1296->setThisActivityEdgePtr(fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1296);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1296->setName("ObjectFlow1296");
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1296->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1296->setSource(fUML_Tests_ActiveClassBehaviorSender_ForkNode1312);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1296->setTarget(fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object);
		fUML_Tests_ActiveClassBehaviorSender->addEdge(fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1296);
			// ControlFlow ControlFlow1298 from Send(TestSignal) to Send(OtherSignal)
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow1298->setThisActivityEdgePtr(fUML_Tests_ActiveClassBehaviorSender_ControlFlow1298);
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow1298->setName("ControlFlow1298");
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow1298->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow1298->setSource(fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal);
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow1298->setTarget(fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal);
		fUML_Tests_ActiveClassBehaviorSender->addEdge(fUML_Tests_ActiveClassBehaviorSender_ControlFlow1298);
			// ObjectFlow ObjectFlow1300 from result to ForkNode1312
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1300->setThisActivityEdgePtr(fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1300);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1300->setName("ObjectFlow1300");
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1300->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1300->setSource(fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1300->setTarget(fUML_Tests_ActiveClassBehaviorSender_ForkNode1312);
		fUML_Tests_ActiveClassBehaviorSender->addEdge(fUML_Tests_ActiveClassBehaviorSender_ObjectFlow1300);
			// ControlFlow ControlFlow1310 from Start(ActiveClass) to Send(TestSignal)
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow1310->setThisActivityEdgePtr(fUML_Tests_ActiveClassBehaviorSender_ControlFlow1310);
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow1310->setName("ControlFlow1310");
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow1310->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow1310->setSource(fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass);
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow1310->setTarget(fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal);
		fUML_Tests_ActiveClassBehaviorSender->addEdge(fUML_Tests_ActiveClassBehaviorSender_ControlFlow1310);
	fUML_Tests->addPackagedElement(fUML_Tests_ActiveClassBehaviorSender);
		// Activity TestClassObjectDestroyer
		fUML_Tests_TestClassObjectDestroyer->setThisActivityPtr(fUML_Tests_TestClassObjectDestroyer);
		fUML_Tests_TestClassObjectDestroyer->setName("TestClassObjectDestroyer");
		fUML_Tests_TestClassObjectDestroyer->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestClassObjectDestroyer->isReentrant = false;
			// Parameter objectIn
			fUML_Tests_TestClassObjectDestroyer_objectIn->setThisElementPtr(fUML_Tests_TestClassObjectDestroyer_objectIn);
			fUML_Tests_TestClassObjectDestroyer_objectIn->setName("objectIn");
			fUML_Tests_TestClassObjectDestroyer_objectIn->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassObjectDestroyer_objectIn->setType(fUML_Tests_TestClass);
		fUML_Tests_TestClassObjectDestroyer->addOwnedParameter(fUML_Tests_TestClassObjectDestroyer_objectIn);
			// Parameter objectOut
			fUML_Tests_TestClassObjectDestroyer_objectOut->setThisElementPtr(fUML_Tests_TestClassObjectDestroyer_objectOut);
			fUML_Tests_TestClassObjectDestroyer_objectOut->setName("objectOut");
			fUML_Tests_TestClassObjectDestroyer_objectOut->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassObjectDestroyer_objectOut->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassObjectDestroyer_objectOut->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassObjectDestroyer->addOwnedParameter(fUML_Tests_TestClassObjectDestroyer_objectOut);
			// ActivityParameterNode Parameter(objectIn)
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectIn->setThisElementPtr(fUML_Tests_TestClassObjectDestroyer_Parameter_objectIn);
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectIn->setName("Parameter(objectIn)");
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectIn->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectIn->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectIn->setParameter(fUML_Tests_TestClassObjectDestroyer_objectIn);
		fUML_Tests_TestClassObjectDestroyer->addNode(fUML_Tests_TestClassObjectDestroyer_Parameter_objectIn);
			// ActivityParameterNode Parameter(objectOut)
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectOut->setThisElementPtr(fUML_Tests_TestClassObjectDestroyer_Parameter_objectOut);
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectOut->setName("Parameter(objectOut)");
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectOut->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectOut->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectOut->setParameter(fUML_Tests_TestClassObjectDestroyer_objectOut);
		fUML_Tests_TestClassObjectDestroyer->addNode(fUML_Tests_TestClassObjectDestroyer_Parameter_objectOut);
			// ForkNode Fork
			fUML_Tests_TestClassObjectDestroyer_Fork->setThisElementPtr(fUML_Tests_TestClassObjectDestroyer_Fork);
			fUML_Tests_TestClassObjectDestroyer_Fork->setName("Fork");
			fUML_Tests_TestClassObjectDestroyer_Fork->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestClassObjectDestroyer->addNode(fUML_Tests_TestClassObjectDestroyer_Fork);
			// DestroyObjectAction DestroyObject
			fUML_Tests_TestClassObjectDestroyer_DestroyObject->setThisExecutableNodePtr(fUML_Tests_TestClassObjectDestroyer_DestroyObject);
			fUML_Tests_TestClassObjectDestroyer_DestroyObject->setName("DestroyObject");
			fUML_Tests_TestClassObjectDestroyer_DestroyObject->setVisibility(VisibilityKind::public_);
				// InputPin DestroyObject.target
				fUML_Tests_TestClassObjectDestroyer_DestroyObject_DestroyObject_target->setThisElementPtr(fUML_Tests_TestClassObjectDestroyer_DestroyObject_DestroyObject_target);
				fUML_Tests_TestClassObjectDestroyer_DestroyObject_DestroyObject_target->setName("DestroyObject.target");
				fUML_Tests_TestClassObjectDestroyer_DestroyObject_DestroyObject_target->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassObjectDestroyer_DestroyObject->setTarget(fUML_Tests_TestClassObjectDestroyer_DestroyObject_DestroyObject_target);
		fUML_Tests_TestClassObjectDestroyer->addNode(fUML_Tests_TestClassObjectDestroyer_DestroyObject);
			// ObjectFlow ObjectFlow1315 from Parameter(objectIn) to Fork
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1315->setThisActivityEdgePtr(fUML_Tests_TestClassObjectDestroyer_ObjectFlow1315);
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1315->setName("ObjectFlow1315");
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1315->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1315->setSource(fUML_Tests_TestClassObjectDestroyer_Parameter_objectIn);
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1315->setTarget(fUML_Tests_TestClassObjectDestroyer_Fork);
		fUML_Tests_TestClassObjectDestroyer->addEdge(fUML_Tests_TestClassObjectDestroyer_ObjectFlow1315);
			// ObjectFlow ObjectFlow1321 from Fork to DestroyObject.target
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1321->setThisActivityEdgePtr(fUML_Tests_TestClassObjectDestroyer_ObjectFlow1321);
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1321->setName("ObjectFlow1321");
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1321->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1321->setSource(fUML_Tests_TestClassObjectDestroyer_Fork);
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1321->setTarget(fUML_Tests_TestClassObjectDestroyer_DestroyObject_DestroyObject_target);
		fUML_Tests_TestClassObjectDestroyer->addEdge(fUML_Tests_TestClassObjectDestroyer_ObjectFlow1321);
			// ObjectFlow ObjectFlow1323 from Fork to Parameter(objectOut)
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1323->setThisActivityEdgePtr(fUML_Tests_TestClassObjectDestroyer_ObjectFlow1323);
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1323->setName("ObjectFlow1323");
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1323->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1323->setSource(fUML_Tests_TestClassObjectDestroyer_Fork);
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1323->setTarget(fUML_Tests_TestClassObjectDestroyer_Parameter_objectOut);
		fUML_Tests_TestClassObjectDestroyer->addEdge(fUML_Tests_TestClassObjectDestroyer_ObjectFlow1323);
	fUML_Tests->addPackagedElement(fUML_Tests_TestClassObjectDestroyer);
		// Activity ForkJoin
		fUML_Tests_ForkJoin->setThisActivityPtr(fUML_Tests_ForkJoin);
		fUML_Tests_ForkJoin->setName("ForkJoin");
		fUML_Tests_ForkJoin->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkJoin->isReentrant = false;
			// JoinNode JoinNode
			fUML_Tests_ForkJoin_JoinNode->setThisElementPtr(fUML_Tests_ForkJoin_JoinNode);
			fUML_Tests_ForkJoin_JoinNode->setName("JoinNode");
			fUML_Tests_ForkJoin_JoinNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkJoin->addNode(fUML_Tests_ForkJoin_JoinNode);
			// ForkNode ForkNode
			fUML_Tests_ForkJoin_ForkNode->setThisElementPtr(fUML_Tests_ForkJoin_ForkNode);
			fUML_Tests_ForkJoin_ForkNode->setName("ForkNode");
			fUML_Tests_ForkJoin_ForkNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkJoin->addNode(fUML_Tests_ForkJoin_ForkNode);
			// ActivityFinalNode FinalNode
			fUML_Tests_ForkJoin_FinalNode->setThisElementPtr(fUML_Tests_ForkJoin_FinalNode);
			fUML_Tests_ForkJoin_FinalNode->setName("FinalNode");
			fUML_Tests_ForkJoin_FinalNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkJoin->addNode(fUML_Tests_ForkJoin_FinalNode);
			// InitialNode InitialNode
			fUML_Tests_ForkJoin_InitialNode->setThisElementPtr(fUML_Tests_ForkJoin_InitialNode);
			fUML_Tests_ForkJoin_InitialNode->setName("InitialNode");
			fUML_Tests_ForkJoin_InitialNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkJoin->addNode(fUML_Tests_ForkJoin_InitialNode);
			// ControlFlow ControlFlow1325 from ForkNode to JoinNode
			fUML_Tests_ForkJoin_ControlFlow1325->setThisActivityEdgePtr(fUML_Tests_ForkJoin_ControlFlow1325);
			fUML_Tests_ForkJoin_ControlFlow1325->setName("ControlFlow1325");
			fUML_Tests_ForkJoin_ControlFlow1325->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkJoin_ControlFlow1325->setSource(fUML_Tests_ForkJoin_ForkNode);
			fUML_Tests_ForkJoin_ControlFlow1325->setTarget(fUML_Tests_ForkJoin_JoinNode);
		fUML_Tests_ForkJoin->addEdge(fUML_Tests_ForkJoin_ControlFlow1325);
			// ControlFlow ControlFlow1327 from InitialNode to ForkNode
			fUML_Tests_ForkJoin_ControlFlow1327->setThisActivityEdgePtr(fUML_Tests_ForkJoin_ControlFlow1327);
			fUML_Tests_ForkJoin_ControlFlow1327->setName("ControlFlow1327");
			fUML_Tests_ForkJoin_ControlFlow1327->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkJoin_ControlFlow1327->setSource(fUML_Tests_ForkJoin_InitialNode);
			fUML_Tests_ForkJoin_ControlFlow1327->setTarget(fUML_Tests_ForkJoin_ForkNode);
		fUML_Tests_ForkJoin->addEdge(fUML_Tests_ForkJoin_ControlFlow1327);
			// ControlFlow ControlFlow1329 from JoinNode to FinalNode
			fUML_Tests_ForkJoin_ControlFlow1329->setThisActivityEdgePtr(fUML_Tests_ForkJoin_ControlFlow1329);
			fUML_Tests_ForkJoin_ControlFlow1329->setName("ControlFlow1329");
			fUML_Tests_ForkJoin_ControlFlow1329->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkJoin_ControlFlow1329->setSource(fUML_Tests_ForkJoin_JoinNode);
			fUML_Tests_ForkJoin_ControlFlow1329->setTarget(fUML_Tests_ForkJoin_FinalNode);
		fUML_Tests_ForkJoin->addEdge(fUML_Tests_ForkJoin_ControlFlow1329);
			// ControlFlow ControlFlow1331 from ForkNode to JoinNode
			fUML_Tests_ForkJoin_ControlFlow1331->setThisActivityEdgePtr(fUML_Tests_ForkJoin_ControlFlow1331);
			fUML_Tests_ForkJoin_ControlFlow1331->setName("ControlFlow1331");
			fUML_Tests_ForkJoin_ControlFlow1331->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkJoin_ControlFlow1331->setSource(fUML_Tests_ForkJoin_ForkNode);
			fUML_Tests_ForkJoin_ControlFlow1331->setTarget(fUML_Tests_ForkJoin_JoinNode);
		fUML_Tests_ForkJoin->addEdge(fUML_Tests_ForkJoin_ControlFlow1331);
	fUML_Tests->addPackagedElement(fUML_Tests_ForkJoin);
		// Signal TestSignal
		fUML_Tests_TestSignal->setThisSignalPtr(fUML_Tests_TestSignal);
		fUML_Tests_TestSignal->setName("TestSignal");
		fUML_Tests_TestSignal->setVisibility(VisibilityKind::public_);
	fUML_Tests->addPackagedElement(fUML_Tests_TestSignal);
		// Activity TestBooleanFunctions
		fUML_Tests_TestBooleanFunctions->setThisActivityPtr(fUML_Tests_TestBooleanFunctions);
		fUML_Tests_TestBooleanFunctions->setName("TestBooleanFunctions");
		fUML_Tests_TestBooleanFunctions->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestBooleanFunctions->isReentrant = false;
			// Parameter NotResult
			fUML_Tests_TestBooleanFunctions_NotResult->setThisElementPtr(fUML_Tests_TestBooleanFunctions_NotResult);
			fUML_Tests_TestBooleanFunctions_NotResult->setName("NotResult");
			fUML_Tests_TestBooleanFunctions_NotResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestBooleanFunctions_NotResult->setIsOrdered(true);
			fUML_Tests_TestBooleanFunctions_NotResult->setUpper(-1);
			fUML_Tests_TestBooleanFunctions_NotResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_NotResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestBooleanFunctions->addOwnedParameter(fUML_Tests_TestBooleanFunctions_NotResult);
			// Parameter AndResult
			fUML_Tests_TestBooleanFunctions_AndResult->setThisElementPtr(fUML_Tests_TestBooleanFunctions_AndResult);
			fUML_Tests_TestBooleanFunctions_AndResult->setName("AndResult");
			fUML_Tests_TestBooleanFunctions_AndResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestBooleanFunctions_AndResult->setIsOrdered(true);
			fUML_Tests_TestBooleanFunctions_AndResult->setUpper(-1);
			fUML_Tests_TestBooleanFunctions_AndResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_AndResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestBooleanFunctions->addOwnedParameter(fUML_Tests_TestBooleanFunctions_AndResult);
			// Parameter OrResult
			fUML_Tests_TestBooleanFunctions_OrResult->setThisElementPtr(fUML_Tests_TestBooleanFunctions_OrResult);
			fUML_Tests_TestBooleanFunctions_OrResult->setName("OrResult");
			fUML_Tests_TestBooleanFunctions_OrResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestBooleanFunctions_OrResult->setIsOrdered(true);
			fUML_Tests_TestBooleanFunctions_OrResult->setUpper(-1);
			fUML_Tests_TestBooleanFunctions_OrResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_OrResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestBooleanFunctions->addOwnedParameter(fUML_Tests_TestBooleanFunctions_OrResult);
			// Parameter ImpliesResult
			fUML_Tests_TestBooleanFunctions_ImpliesResult->setThisElementPtr(fUML_Tests_TestBooleanFunctions_ImpliesResult);
			fUML_Tests_TestBooleanFunctions_ImpliesResult->setName("ImpliesResult");
			fUML_Tests_TestBooleanFunctions_ImpliesResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestBooleanFunctions_ImpliesResult->setIsOrdered(true);
			fUML_Tests_TestBooleanFunctions_ImpliesResult->setUpper(-1);
			fUML_Tests_TestBooleanFunctions_ImpliesResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_ImpliesResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestBooleanFunctions->addOwnedParameter(fUML_Tests_TestBooleanFunctions_ImpliesResult);
			// Parameter XorResult
			fUML_Tests_TestBooleanFunctions_XorResult->setThisElementPtr(fUML_Tests_TestBooleanFunctions_XorResult);
			fUML_Tests_TestBooleanFunctions_XorResult->setName("XorResult");
			fUML_Tests_TestBooleanFunctions_XorResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestBooleanFunctions_XorResult->setIsOrdered(true);
			fUML_Tests_TestBooleanFunctions_XorResult->setUpper(-1);
			fUML_Tests_TestBooleanFunctions_XorResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_XorResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestBooleanFunctions->addOwnedParameter(fUML_Tests_TestBooleanFunctions_XorResult);
			// CallBehaviorAction GenData3
			fUML_Tests_TestBooleanFunctions_GenData3->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_GenData3);
			fUML_Tests_TestBooleanFunctions_GenData3->setName("GenData3");
			fUML_Tests_TestBooleanFunctions_GenData3->setVisibility(VisibilityKind::public_);
				// OutputPin GenData3.argumentData1
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1->setThisElementPtr(fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1);
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1->setName("GenData3.argumentData1");
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1->setUpper(4);
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1->setLower(4);
			fUML_Tests_TestBooleanFunctions_GenData3->addResult(fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1);
				// OutputPin GenData3.argumentData2
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2->setThisElementPtr(fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2);
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2->setName("GenData3.argumentData2");
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2->setUpper(4);
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2->setLower(4);
			fUML_Tests_TestBooleanFunctions_GenData3->addResult(fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2);
			fUML_Tests_TestBooleanFunctions_GenData3->setBehavior(fUML_Tests_GenerateBooleanTestData);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_GenData3);
			// CallBehaviorAction Call(And)
			fUML_Tests_TestBooleanFunctions_Call_And->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_Call_And);
			fUML_Tests_TestBooleanFunctions_Call_And->setName("Call(And)");
			fUML_Tests_TestBooleanFunctions_Call_And->setVisibility(VisibilityKind::public_);
				// OutputPin And.result
				fUML_Tests_TestBooleanFunctions_Call_And_And_result->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_And_And_result);
				fUML_Tests_TestBooleanFunctions_Call_And_And_result->setName("And.result");
				fUML_Tests_TestBooleanFunctions_Call_And_And_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_And_And_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_And->addResult(fUML_Tests_TestBooleanFunctions_Call_And_And_result);
			fUML_Tests_TestBooleanFunctions_Call_And->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_BooleanFunctions_And);
				// InputPin And.x
				fUML_Tests_TestBooleanFunctions_Call_And_And_x->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_And_And_x);
				fUML_Tests_TestBooleanFunctions_Call_And_And_x->setName("And.x");
				fUML_Tests_TestBooleanFunctions_Call_And_And_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_And_And_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_And->addArgument(fUML_Tests_TestBooleanFunctions_Call_And_And_x);
				// InputPin And.y
				fUML_Tests_TestBooleanFunctions_Call_And_And_y->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_And_And_y);
				fUML_Tests_TestBooleanFunctions_Call_And_And_y->setName("And.y");
				fUML_Tests_TestBooleanFunctions_Call_And_And_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_And_And_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_And->addArgument(fUML_Tests_TestBooleanFunctions_Call_And_And_y);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Call_And);
			// CallBehaviorAction GenData1
			fUML_Tests_TestBooleanFunctions_GenData1->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_GenData1);
			fUML_Tests_TestBooleanFunctions_GenData1->setName("GenData1");
			fUML_Tests_TestBooleanFunctions_GenData1->setVisibility(VisibilityKind::public_);
				// OutputPin GenData1.argumentData1
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1->setThisElementPtr(fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1);
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1->setName("GenData1.argumentData1");
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1->setUpper(4);
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1->setLower(4);
			fUML_Tests_TestBooleanFunctions_GenData1->addResult(fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1);
				// OutputPin GenData1.argumentData2
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2->setThisElementPtr(fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2);
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2->setName("GenData1.argumentData2");
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2->setUpper(4);
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2->setLower(4);
			fUML_Tests_TestBooleanFunctions_GenData1->addResult(fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2);
			fUML_Tests_TestBooleanFunctions_GenData1->setBehavior(fUML_Tests_GenerateBooleanTestData);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_GenData1);
			// ActivityParameterNode Param(ImpliesResult)
			fUML_Tests_TestBooleanFunctions_Param_ImpliesResult->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Param_ImpliesResult);
			fUML_Tests_TestBooleanFunctions_Param_ImpliesResult->setName("Param(ImpliesResult)");
			fUML_Tests_TestBooleanFunctions_Param_ImpliesResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestBooleanFunctions_Param_ImpliesResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Param_ImpliesResult->setParameter(fUML_Tests_TestBooleanFunctions_ImpliesResult);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Param_ImpliesResult);
			// ValueSpecificationAction Value(true)
			fUML_Tests_TestBooleanFunctions_Value_true->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_Value_true);
			fUML_Tests_TestBooleanFunctions_Value_true->setName("Value(true)");
			fUML_Tests_TestBooleanFunctions_Value_true->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1353
				fUML_Tests_TestBooleanFunctions_Value_true_LiteralBoolean1353->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Value_true_LiteralBoolean1353);
				fUML_Tests_TestBooleanFunctions_Value_true_LiteralBoolean1353->setName("LiteralBoolean1353");
				fUML_Tests_TestBooleanFunctions_Value_true_LiteralBoolean1353->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Value_true_LiteralBoolean1353->setValue(true);
			fUML_Tests_TestBooleanFunctions_Value_true->setValue(fUML_Tests_TestBooleanFunctions_Value_true_LiteralBoolean1353);
				// OutputPin Value(true).result
				fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result);
				fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result->setName("Value(true).result");
				fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Value_true->setResult(fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Value_true);
			// ActivityParameterNode Param(OrResult)
			fUML_Tests_TestBooleanFunctions_Param_OrResult->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Param_OrResult);
			fUML_Tests_TestBooleanFunctions_Param_OrResult->setName("Param(OrResult)");
			fUML_Tests_TestBooleanFunctions_Param_OrResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestBooleanFunctions_Param_OrResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Param_OrResult->setParameter(fUML_Tests_TestBooleanFunctions_OrResult);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Param_OrResult);
			// CallBehaviorAction Call(Or)
			fUML_Tests_TestBooleanFunctions_Call_Or->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_Call_Or);
			fUML_Tests_TestBooleanFunctions_Call_Or->setName("Call(Or)");
			fUML_Tests_TestBooleanFunctions_Call_Or->setVisibility(VisibilityKind::public_);
				// OutputPin Or.result
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_result->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Or_Or_result);
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_result->setName("Or.result");
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Or->addResult(fUML_Tests_TestBooleanFunctions_Call_Or_Or_result);
			fUML_Tests_TestBooleanFunctions_Call_Or->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_BooleanFunctions_Or);
				// InputPin Or.x
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_x->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Or_Or_x);
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_x->setName("Or.x");
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Or->addArgument(fUML_Tests_TestBooleanFunctions_Call_Or_Or_x);
				// InputPin Or.y
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_y->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Or_Or_y);
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_y->setName("Or.y");
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Or->addArgument(fUML_Tests_TestBooleanFunctions_Call_Or_Or_y);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Call_Or);
			// CallBehaviorAction Call(Implies)
			fUML_Tests_TestBooleanFunctions_Call_Implies->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_Call_Implies);
			fUML_Tests_TestBooleanFunctions_Call_Implies->setName("Call(Implies)");
			fUML_Tests_TestBooleanFunctions_Call_Implies->setVisibility(VisibilityKind::public_);
				// OutputPin Implies.result
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result);
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result->setName("Implies.result");
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Implies->addResult(fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result);
			fUML_Tests_TestBooleanFunctions_Call_Implies->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_BooleanFunctions_Implies);
				// InputPin Implies.x
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x);
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x->setName("Implies.x");
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Implies->addArgument(fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x);
				// InputPin Implies.y
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y);
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y->setName("Implies.y");
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Implies->addArgument(fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Call_Implies);
			// ActivityParameterNode Param(NotResult)
			fUML_Tests_TestBooleanFunctions_Param_NotResult->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Param_NotResult);
			fUML_Tests_TestBooleanFunctions_Param_NotResult->setName("Param(NotResult)");
			fUML_Tests_TestBooleanFunctions_Param_NotResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestBooleanFunctions_Param_NotResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Param_NotResult->setParameter(fUML_Tests_TestBooleanFunctions_NotResult);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Param_NotResult);
			// CallBehaviorAction GenData4
			fUML_Tests_TestBooleanFunctions_GenData4->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_GenData4);
			fUML_Tests_TestBooleanFunctions_GenData4->setName("GenData4");
			fUML_Tests_TestBooleanFunctions_GenData4->setVisibility(VisibilityKind::public_);
				// OutputPin GenData4.argumentData1
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1->setThisElementPtr(fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1);
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1->setName("GenData4.argumentData1");
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1->setUpper(4);
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1->setLower(4);
			fUML_Tests_TestBooleanFunctions_GenData4->addResult(fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1);
				// OutputPin GenData4.argumentData2
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2->setThisElementPtr(fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2);
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2->setName("GenData4.argumentData2");
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2->setUpper(4);
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2->setLower(4);
			fUML_Tests_TestBooleanFunctions_GenData4->addResult(fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2);
			fUML_Tests_TestBooleanFunctions_GenData4->setBehavior(fUML_Tests_GenerateBooleanTestData);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_GenData4);
			// CallBehaviorAction Call(Not)
			fUML_Tests_TestBooleanFunctions_Call_Not->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_Call_Not);
			fUML_Tests_TestBooleanFunctions_Call_Not->setName("Call(Not)");
			fUML_Tests_TestBooleanFunctions_Call_Not->setVisibility(VisibilityKind::public_);
				// OutputPin Not.result
				fUML_Tests_TestBooleanFunctions_Call_Not_Not_result->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Not_Not_result);
				fUML_Tests_TestBooleanFunctions_Call_Not_Not_result->setName("Not.result");
				fUML_Tests_TestBooleanFunctions_Call_Not_Not_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Not_Not_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Not->addResult(fUML_Tests_TestBooleanFunctions_Call_Not_Not_result);
			fUML_Tests_TestBooleanFunctions_Call_Not->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_BooleanFunctions_Not);
				// InputPin Not.x
				fUML_Tests_TestBooleanFunctions_Call_Not_Not_x->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Not_Not_x);
				fUML_Tests_TestBooleanFunctions_Call_Not_Not_x->setName("Not.x");
				fUML_Tests_TestBooleanFunctions_Call_Not_Not_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Not_Not_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Not->addArgument(fUML_Tests_TestBooleanFunctions_Call_Not_Not_x);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Call_Not);
			// CallBehaviorAction GenData2
			fUML_Tests_TestBooleanFunctions_GenData2->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_GenData2);
			fUML_Tests_TestBooleanFunctions_GenData2->setName("GenData2");
			fUML_Tests_TestBooleanFunctions_GenData2->setVisibility(VisibilityKind::public_);
				// OutputPin GenData2.argumentData1
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1->setThisElementPtr(fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1);
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1->setName("GenData2.argumentData1");
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1->setUpper(4);
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1->setLower(4);
			fUML_Tests_TestBooleanFunctions_GenData2->addResult(fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1);
				// OutputPin GenData2.argumentData2
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2->setThisElementPtr(fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2);
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2->setName("GenData2.argumentData2");
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2->setUpper(4);
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2->setLower(4);
			fUML_Tests_TestBooleanFunctions_GenData2->addResult(fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2);
			fUML_Tests_TestBooleanFunctions_GenData2->setBehavior(fUML_Tests_GenerateBooleanTestData);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_GenData2);
			// ActivityParameterNode Param(XorResult)
			fUML_Tests_TestBooleanFunctions_Param_XorResult->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Param_XorResult);
			fUML_Tests_TestBooleanFunctions_Param_XorResult->setName("Param(XorResult)");
			fUML_Tests_TestBooleanFunctions_Param_XorResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestBooleanFunctions_Param_XorResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Param_XorResult->setParameter(fUML_Tests_TestBooleanFunctions_XorResult);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Param_XorResult);
			// ActivityParameterNode Param(AndResult)
			fUML_Tests_TestBooleanFunctions_Param_AndResult->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Param_AndResult);
			fUML_Tests_TestBooleanFunctions_Param_AndResult->setName("Param(AndResult)");
			fUML_Tests_TestBooleanFunctions_Param_AndResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestBooleanFunctions_Param_AndResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Param_AndResult->setParameter(fUML_Tests_TestBooleanFunctions_AndResult);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Param_AndResult);
			// ValueSpecificationAction Value(false)
			fUML_Tests_TestBooleanFunctions_Value_false->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_Value_false);
			fUML_Tests_TestBooleanFunctions_Value_false->setName("Value(false)");
			fUML_Tests_TestBooleanFunctions_Value_false->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1380
				fUML_Tests_TestBooleanFunctions_Value_false_LiteralBoolean1380->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Value_false_LiteralBoolean1380);
				fUML_Tests_TestBooleanFunctions_Value_false_LiteralBoolean1380->setName("LiteralBoolean1380");
				fUML_Tests_TestBooleanFunctions_Value_false_LiteralBoolean1380->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Value_false_LiteralBoolean1380->setValue(false);
			fUML_Tests_TestBooleanFunctions_Value_false->setValue(fUML_Tests_TestBooleanFunctions_Value_false_LiteralBoolean1380);
				// OutputPin Value(false).result
				fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result);
				fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result->setName("Value(false).result");
				fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Value_false->setResult(fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Value_false);
			// CallBehaviorAction Call(Xor)
			fUML_Tests_TestBooleanFunctions_Call_Xor->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_Call_Xor);
			fUML_Tests_TestBooleanFunctions_Call_Xor->setName("Call(Xor)");
			fUML_Tests_TestBooleanFunctions_Call_Xor->setVisibility(VisibilityKind::public_);
				// OutputPin Xor.result
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result);
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result->setName("Xor.result");
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Xor->addResult(fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result);
			fUML_Tests_TestBooleanFunctions_Call_Xor->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_BooleanFunctions_Xor);
				// InputPin Xor.x
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x);
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x->setName("Xor.x");
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Xor->addArgument(fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x);
				// InputPin Xor.y
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y);
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y->setName("Xor.y");
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Xor->addArgument(fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Call_Xor);
			// ObjectFlow ObjectFlow1389 from Not.result to Param(NotResult)
			fUML_Tests_TestBooleanFunctions_ObjectFlow1389->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow1389);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1389->setName("ObjectFlow1389");
			fUML_Tests_TestBooleanFunctions_ObjectFlow1389->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow1389->setSource(fUML_Tests_TestBooleanFunctions_Call_Not_Not_result);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1389->setTarget(fUML_Tests_TestBooleanFunctions_Param_NotResult);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow1389);
			// ObjectFlow ObjectFlow1391 from GenData1.argumentData2 to And.y
			fUML_Tests_TestBooleanFunctions_ObjectFlow1391->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow1391);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1391->setName("ObjectFlow1391");
			fUML_Tests_TestBooleanFunctions_ObjectFlow1391->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow1391->setSource(fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1391->setTarget(fUML_Tests_TestBooleanFunctions_Call_And_And_y);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow1391);
			// ObjectFlow ObjectFlow1347 from GenData4.argumentData1 to Xor.x
			fUML_Tests_TestBooleanFunctions_ObjectFlow1347->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow1347);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1347->setName("ObjectFlow1347");
			fUML_Tests_TestBooleanFunctions_ObjectFlow1347->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow1347->setSource(fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1347->setTarget(fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow1347);
			// ObjectFlow ObjectFlow1349 from GenData4.argumentData2 to Xor.y
			fUML_Tests_TestBooleanFunctions_ObjectFlow1349->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow1349);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1349->setName("ObjectFlow1349");
			fUML_Tests_TestBooleanFunctions_ObjectFlow1349->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow1349->setSource(fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1349->setTarget(fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow1349);
			// ObjectFlow ObjectFlow1351 from Implies.result to Param(ImpliesResult)
			fUML_Tests_TestBooleanFunctions_ObjectFlow1351->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow1351);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1351->setName("ObjectFlow1351");
			fUML_Tests_TestBooleanFunctions_ObjectFlow1351->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow1351->setSource(fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1351->setTarget(fUML_Tests_TestBooleanFunctions_Param_ImpliesResult);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow1351);
			// ObjectFlow ObjectFlow1397 from And.result to Param(AndResult)
			fUML_Tests_TestBooleanFunctions_ObjectFlow1397->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow1397);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1397->setName("ObjectFlow1397");
			fUML_Tests_TestBooleanFunctions_ObjectFlow1397->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow1397->setSource(fUML_Tests_TestBooleanFunctions_Call_And_And_result);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1397->setTarget(fUML_Tests_TestBooleanFunctions_Param_AndResult);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow1397);
			// ControlFlow ControlFlow1356 from Value(true) to Value(false)
			fUML_Tests_TestBooleanFunctions_ControlFlow1356->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ControlFlow1356);
			fUML_Tests_TestBooleanFunctions_ControlFlow1356->setName("ControlFlow1356");
			fUML_Tests_TestBooleanFunctions_ControlFlow1356->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ControlFlow1356->setSource(fUML_Tests_TestBooleanFunctions_Value_true);
			fUML_Tests_TestBooleanFunctions_ControlFlow1356->setTarget(fUML_Tests_TestBooleanFunctions_Value_false);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ControlFlow1356);
			// ObjectFlow ObjectFlow1405 from Value(true).result to Not.x
			fUML_Tests_TestBooleanFunctions_ObjectFlow1405->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow1405);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1405->setName("ObjectFlow1405");
			fUML_Tests_TestBooleanFunctions_ObjectFlow1405->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow1405->setSource(fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1405->setTarget(fUML_Tests_TestBooleanFunctions_Call_Not_Not_x);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow1405);
			// ControlFlow ControlFlow1407 from GenData2 to GenData3
			fUML_Tests_TestBooleanFunctions_ControlFlow1407->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ControlFlow1407);
			fUML_Tests_TestBooleanFunctions_ControlFlow1407->setName("ControlFlow1407");
			fUML_Tests_TestBooleanFunctions_ControlFlow1407->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ControlFlow1407->setSource(fUML_Tests_TestBooleanFunctions_GenData2);
			fUML_Tests_TestBooleanFunctions_ControlFlow1407->setTarget(fUML_Tests_TestBooleanFunctions_GenData3);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ControlFlow1407);
			// ControlFlow ControlFlow1364 from GenData3 to GenData4
			fUML_Tests_TestBooleanFunctions_ControlFlow1364->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ControlFlow1364);
			fUML_Tests_TestBooleanFunctions_ControlFlow1364->setName("ControlFlow1364");
			fUML_Tests_TestBooleanFunctions_ControlFlow1364->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ControlFlow1364->setSource(fUML_Tests_TestBooleanFunctions_GenData3);
			fUML_Tests_TestBooleanFunctions_ControlFlow1364->setTarget(fUML_Tests_TestBooleanFunctions_GenData4);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ControlFlow1364);
			// ObjectFlow ObjectFlow1409 from Or.result to Param(OrResult)
			fUML_Tests_TestBooleanFunctions_ObjectFlow1409->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow1409);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1409->setName("ObjectFlow1409");
			fUML_Tests_TestBooleanFunctions_ObjectFlow1409->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow1409->setSource(fUML_Tests_TestBooleanFunctions_Call_Or_Or_result);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1409->setTarget(fUML_Tests_TestBooleanFunctions_Param_OrResult);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow1409);
			// ControlFlow ControlFlow1370 from Value(false) to GenData1
			fUML_Tests_TestBooleanFunctions_ControlFlow1370->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ControlFlow1370);
			fUML_Tests_TestBooleanFunctions_ControlFlow1370->setName("ControlFlow1370");
			fUML_Tests_TestBooleanFunctions_ControlFlow1370->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ControlFlow1370->setSource(fUML_Tests_TestBooleanFunctions_Value_false);
			fUML_Tests_TestBooleanFunctions_ControlFlow1370->setTarget(fUML_Tests_TestBooleanFunctions_GenData1);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ControlFlow1370);
			// ObjectFlow ObjectFlow1372 from GenData3.argumentData1 to Implies.x
			fUML_Tests_TestBooleanFunctions_ObjectFlow1372->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow1372);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1372->setName("ObjectFlow1372");
			fUML_Tests_TestBooleanFunctions_ObjectFlow1372->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow1372->setSource(fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1372->setTarget(fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow1372);
			// ObjectFlow ObjectFlow1374 from GenData1.argumentData1 to And.x
			fUML_Tests_TestBooleanFunctions_ObjectFlow1374->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow1374);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1374->setName("ObjectFlow1374");
			fUML_Tests_TestBooleanFunctions_ObjectFlow1374->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow1374->setSource(fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1374->setTarget(fUML_Tests_TestBooleanFunctions_Call_And_And_x);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow1374);
			// ObjectFlow ObjectFlow1421 from GenData3.argumentData2 to Implies.y
			fUML_Tests_TestBooleanFunctions_ObjectFlow1421->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow1421);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1421->setName("ObjectFlow1421");
			fUML_Tests_TestBooleanFunctions_ObjectFlow1421->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow1421->setSource(fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1421->setTarget(fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow1421);
			// ObjectFlow ObjectFlow1378 from GenData2.argumentData1 to Or.x
			fUML_Tests_TestBooleanFunctions_ObjectFlow1378->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow1378);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1378->setName("ObjectFlow1378");
			fUML_Tests_TestBooleanFunctions_ObjectFlow1378->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow1378->setSource(fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1378->setTarget(fUML_Tests_TestBooleanFunctions_Call_Or_Or_x);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow1378);
			// ControlFlow ControlFlow1423 from GenData1 to GenData2
			fUML_Tests_TestBooleanFunctions_ControlFlow1423->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ControlFlow1423);
			fUML_Tests_TestBooleanFunctions_ControlFlow1423->setName("ControlFlow1423");
			fUML_Tests_TestBooleanFunctions_ControlFlow1423->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ControlFlow1423->setSource(fUML_Tests_TestBooleanFunctions_GenData1);
			fUML_Tests_TestBooleanFunctions_ControlFlow1423->setTarget(fUML_Tests_TestBooleanFunctions_GenData2);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ControlFlow1423);
			// ObjectFlow ObjectFlow1425 from Value(false).result to Not.x
			fUML_Tests_TestBooleanFunctions_ObjectFlow1425->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow1425);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1425->setName("ObjectFlow1425");
			fUML_Tests_TestBooleanFunctions_ObjectFlow1425->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow1425->setSource(fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1425->setTarget(fUML_Tests_TestBooleanFunctions_Call_Not_Not_x);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow1425);
			// ObjectFlow ObjectFlow1427 from GenData2.argumentData2 to Or.y
			fUML_Tests_TestBooleanFunctions_ObjectFlow1427->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow1427);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1427->setName("ObjectFlow1427");
			fUML_Tests_TestBooleanFunctions_ObjectFlow1427->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow1427->setSource(fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1427->setTarget(fUML_Tests_TestBooleanFunctions_Call_Or_Or_y);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow1427);
			// ObjectFlow ObjectFlow1431 from Xor.result to Param(XorResult)
			fUML_Tests_TestBooleanFunctions_ObjectFlow1431->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow1431);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1431->setName("ObjectFlow1431");
			fUML_Tests_TestBooleanFunctions_ObjectFlow1431->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow1431->setSource(fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1431->setTarget(fUML_Tests_TestBooleanFunctions_Param_XorResult);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow1431);
	fUML_Tests->addPackagedElement(fUML_Tests_TestBooleanFunctions);
		// Activity Copier
		fUML_Tests_Copier->setThisActivityPtr(fUML_Tests_Copier);
		fUML_Tests_Copier->setName("Copier");
		fUML_Tests_Copier->setVisibility(VisibilityKind::public_);
		fUML_Tests_Copier->isReentrant = false;
			// Parameter input
			fUML_Tests_Copier_input->setThisElementPtr(fUML_Tests_Copier_input);
			fUML_Tests_Copier_input->setName("input");
			fUML_Tests_Copier_input->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_Copier_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
		fUML_Tests_Copier->addOwnedParameter(fUML_Tests_Copier_input);
			// Parameter output
			fUML_Tests_Copier_output->setThisElementPtr(fUML_Tests_Copier_output);
			fUML_Tests_Copier_output->setName("output");
			fUML_Tests_Copier_output->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_Copier_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_Copier_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_Copier->addOwnedParameter(fUML_Tests_Copier_output);
			// ActivityParameterNode Parameter(input)
			fUML_Tests_Copier_Parameter_input->setThisElementPtr(fUML_Tests_Copier_Parameter_input);
			fUML_Tests_Copier_Parameter_input->setName("Parameter(input)");
			fUML_Tests_Copier_Parameter_input->setVisibility(VisibilityKind::public_);
			fUML_Tests_Copier_Parameter_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_Copier_Parameter_input->setParameter(fUML_Tests_Copier_input);
		fUML_Tests_Copier->addNode(fUML_Tests_Copier_Parameter_input);
			// ActivityParameterNode Parameter(output)
			fUML_Tests_Copier_Parameter_output->setThisElementPtr(fUML_Tests_Copier_Parameter_output);
			fUML_Tests_Copier_Parameter_output->setName("Parameter(output)");
			fUML_Tests_Copier_Parameter_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_Copier_Parameter_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_Copier_Parameter_output->setParameter(fUML_Tests_Copier_output);
		fUML_Tests_Copier->addNode(fUML_Tests_Copier_Parameter_output);
			// ObjectFlow ObjectFlow1437 from Parameter(input) to Parameter(output)
			fUML_Tests_Copier_ObjectFlow1437->setThisActivityEdgePtr(fUML_Tests_Copier_ObjectFlow1437);
			fUML_Tests_Copier_ObjectFlow1437->setName("ObjectFlow1437");
			fUML_Tests_Copier_ObjectFlow1437->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_Copier_ObjectFlow1437->setSource(fUML_Tests_Copier_Parameter_input);
			fUML_Tests_Copier_ObjectFlow1437->setTarget(fUML_Tests_Copier_Parameter_output);
		fUML_Tests_Copier->addEdge(fUML_Tests_Copier_ObjectFlow1437);
	fUML_Tests->addPackagedElement(fUML_Tests_Copier);
		// Activity TestCallSender
		fUML_Tests_TestCallSender->setThisActivityPtr(fUML_Tests_TestCallSender);
		fUML_Tests_TestCallSender->setName("TestCallSender");
		fUML_Tests_TestCallSender->setVisibility(VisibilityKind::public_);
		
			// Property value
			fUML_Tests_TestCallSender_value->setThisElementPtr(fUML_Tests_TestCallSender_value);
			fUML_Tests_TestCallSender_value->setName("value");
			fUML_Tests_TestCallSender_value->setVisibility(VisibilityKind::private_);
		fUML_Tests_TestCallSender->addOwnedAttribute(fUML_Tests_TestCallSender_value);
		fUML_Tests_TestCallSender->setIsActive(true);
			// AcceptEventAction Accept(TestSignal)
			fUML_Tests_TestCallSender_Accept_TestSignal->setThisExecutableNodePtr(fUML_Tests_TestCallSender_Accept_TestSignal);
			fUML_Tests_TestCallSender_Accept_TestSignal->setName("Accept(TestSignal)");
			fUML_Tests_TestCallSender_Accept_TestSignal->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCallSender_Accept_TestSignal_Trigger1449->setName("Trigger1449");
				fUML_Tests_TestCallSender_Accept_TestSignal_Trigger1449->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCallSender_Accept_TestSignal_Trigger1449->setEvent(fUML_Tests_SignalEvent451);
			fUML_Tests_TestCallSender_Accept_TestSignal->addTrigger(fUML_Tests_TestCallSender_Accept_TestSignal_Trigger1449);
		fUML_Tests_TestCallSender->addNode(fUML_Tests_TestCallSender_Accept_TestSignal);
			// ValueSpecificationAction Value(0)
			fUML_Tests_TestCallSender_Value_0->setThisExecutableNodePtr(fUML_Tests_TestCallSender_Value_0);
			fUML_Tests_TestCallSender_Value_0->setName("Value(0)");
			fUML_Tests_TestCallSender_Value_0->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1441
				fUML_Tests_TestCallSender_Value_0_LiteralInteger1441->setThisElementPtr(fUML_Tests_TestCallSender_Value_0_LiteralInteger1441);
				fUML_Tests_TestCallSender_Value_0_LiteralInteger1441->setName("LiteralInteger1441");
				fUML_Tests_TestCallSender_Value_0_LiteralInteger1441->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCallSender_Value_0_LiteralInteger1441->setValue(0);
			fUML_Tests_TestCallSender_Value_0->setValue(fUML_Tests_TestCallSender_Value_0_LiteralInteger1441);
				// OutputPin Value(0).result
				fUML_Tests_TestCallSender_Value_0_Value_0_result->setThisElementPtr(fUML_Tests_TestCallSender_Value_0_Value_0_result);
				fUML_Tests_TestCallSender_Value_0_Value_0_result->setName("Value(0).result");
				fUML_Tests_TestCallSender_Value_0_Value_0_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCallSender_Value_0_Value_0_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestCallSender_Value_0->setResult(fUML_Tests_TestCallSender_Value_0_Value_0_result);
		fUML_Tests_TestCallSender->addNode(fUML_Tests_TestCallSender_Value_0);
			// ReadSelfAction ReadSelf
			fUML_Tests_TestCallSender_ReadSelf->setThisExecutableNodePtr(fUML_Tests_TestCallSender_ReadSelf);
			fUML_Tests_TestCallSender_ReadSelf->setName("ReadSelf");
			fUML_Tests_TestCallSender_ReadSelf->setVisibility(VisibilityKind::public_);
				// OutputPin ReadSelf.result
				fUML_Tests_TestCallSender_ReadSelf_ReadSelf_result->setThisElementPtr(fUML_Tests_TestCallSender_ReadSelf_ReadSelf_result);
				fUML_Tests_TestCallSender_ReadSelf_ReadSelf_result->setName("ReadSelf.result");
				fUML_Tests_TestCallSender_ReadSelf_ReadSelf_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSender_ReadSelf->setResult(fUML_Tests_TestCallSender_ReadSelf_ReadSelf_result);
		fUML_Tests_TestCallSender->addNode(fUML_Tests_TestCallSender_ReadSelf);
			// ForkNode ForkNode
			fUML_Tests_TestCallSender_ForkNode->setThisElementPtr(fUML_Tests_TestCallSender_ForkNode);
			fUML_Tests_TestCallSender_ForkNode->setName("ForkNode");
			fUML_Tests_TestCallSender_ForkNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestCallSender->addNode(fUML_Tests_TestCallSender_ForkNode);
			// CallOperationAction Call(test)
			fUML_Tests_TestCallSender_Call_test->setThisExecutableNodePtr(fUML_Tests_TestCallSender_Call_test);
			fUML_Tests_TestCallSender_Call_test->setName("Call(test)");
			fUML_Tests_TestCallSender_Call_test->setVisibility(VisibilityKind::public_);
				// OutputPin Call(test).output
				fUML_Tests_TestCallSender_Call_test_Call_test_output->setThisElementPtr(fUML_Tests_TestCallSender_Call_test_Call_test_output);
				fUML_Tests_TestCallSender_Call_test_Call_test_output->setName("Call(test).output");
				fUML_Tests_TestCallSender_Call_test_Call_test_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCallSender_Call_test_Call_test_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestCallSender_Call_test->addResult(fUML_Tests_TestCallSender_Call_test_Call_test_output);
			fUML_Tests_TestCallSender_Call_test->setOperation(fUML_Tests_TestCallAccepter_test);
				// InputPin Call(test).target
				fUML_Tests_TestCallSender_Call_test_Call_test_target->setThisElementPtr(fUML_Tests_TestCallSender_Call_test_Call_test_target);
				fUML_Tests_TestCallSender_Call_test_Call_test_target->setName("Call(test).target");
				fUML_Tests_TestCallSender_Call_test_Call_test_target->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCallSender_Call_test_Call_test_target->setType(fUML_Tests_TestCallAccepter);
			fUML_Tests_TestCallSender_Call_test->setTarget(fUML_Tests_TestCallSender_Call_test_Call_test_target);
				// InputPin Call(test).input
				fUML_Tests_TestCallSender_Call_test_Call_test_input->setThisElementPtr(fUML_Tests_TestCallSender_Call_test_Call_test_input);
				fUML_Tests_TestCallSender_Call_test_Call_test_input->setName("Call(test).input");
				fUML_Tests_TestCallSender_Call_test_Call_test_input->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCallSender_Call_test_Call_test_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestCallSender_Call_test->addArgument(fUML_Tests_TestCallSender_Call_test_Call_test_input);
		fUML_Tests_TestCallSender->addNode(fUML_Tests_TestCallSender_Call_test);
			// StartObjectBehaviorAction Start(TestCallAccepter)
			fUML_Tests_TestCallSender_Start_TestCallAccepter->setThisExecutableNodePtr(fUML_Tests_TestCallSender_Start_TestCallAccepter);
			fUML_Tests_TestCallSender_Start_TestCallAccepter->setName("Start(TestCallAccepter)");
			fUML_Tests_TestCallSender_Start_TestCallAccepter->setVisibility(VisibilityKind::public_);
				// InputPin Start(TestCallAccepter).object
				fUML_Tests_TestCallSender_Start_TestCallAccepter_Start_TestCallAccepter_object->setThisElementPtr(fUML_Tests_TestCallSender_Start_TestCallAccepter_Start_TestCallAccepter_object);
				fUML_Tests_TestCallSender_Start_TestCallAccepter_Start_TestCallAccepter_object->setName("Start(TestCallAccepter).object");
				fUML_Tests_TestCallSender_Start_TestCallAccepter_Start_TestCallAccepter_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSender_Start_TestCallAccepter->setObject(fUML_Tests_TestCallSender_Start_TestCallAccepter_Start_TestCallAccepter_object);
		fUML_Tests_TestCallSender->addNode(fUML_Tests_TestCallSender_Start_TestCallAccepter);
			// CreateObjectAction Create(TestCallAccepter)
			fUML_Tests_TestCallSender_Create_TestCallAccepter->setThisExecutableNodePtr(fUML_Tests_TestCallSender_Create_TestCallAccepter);
			fUML_Tests_TestCallSender_Create_TestCallAccepter->setName("Create(TestCallAccepter)");
			fUML_Tests_TestCallSender_Create_TestCallAccepter->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSender_Create_TestCallAccepter->setClassifier(fUML_Tests_TestCallAccepter);
				// OutputPin Create(TestCallAccepter).result
				fUML_Tests_TestCallSender_Create_TestCallAccepter_Create_TestCallAccepter_result->setThisElementPtr(fUML_Tests_TestCallSender_Create_TestCallAccepter_Create_TestCallAccepter_result);
				fUML_Tests_TestCallSender_Create_TestCallAccepter_Create_TestCallAccepter_result->setName("Create(TestCallAccepter).result");
				fUML_Tests_TestCallSender_Create_TestCallAccepter_Create_TestCallAccepter_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSender_Create_TestCallAccepter->setResult(fUML_Tests_TestCallSender_Create_TestCallAccepter_Create_TestCallAccepter_result);
		fUML_Tests_TestCallSender->addNode(fUML_Tests_TestCallSender_Create_TestCallAccepter);
			// AddStructuralFeatureValueAction Write(value)
			fUML_Tests_TestCallSender_Write_value->setThisExecutableNodePtr(fUML_Tests_TestCallSender_Write_value);
			fUML_Tests_TestCallSender_Write_value->setName("Write(value)");
			fUML_Tests_TestCallSender_Write_value->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSender_Write_value->setStructuralFeature(fUML_Tests_TestCallSender_value);
				// InputPin Write(value).object
				fUML_Tests_TestCallSender_Write_value_Write_value_object->setThisElementPtr(fUML_Tests_TestCallSender_Write_value_Write_value_object);
				fUML_Tests_TestCallSender_Write_value_Write_value_object->setName("Write(value).object");
				fUML_Tests_TestCallSender_Write_value_Write_value_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSender_Write_value->setObject(fUML_Tests_TestCallSender_Write_value_Write_value_object);
				// InputPin Write(value).value
				fUML_Tests_TestCallSender_Write_value_Write_value_value->setThisElementPtr(fUML_Tests_TestCallSender_Write_value_Write_value_value);
				fUML_Tests_TestCallSender_Write_value_Write_value_value->setName("Write(value).value");
				fUML_Tests_TestCallSender_Write_value_Write_value_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCallSender_Write_value_Write_value_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestCallSender_Write_value->setValue(fUML_Tests_TestCallSender_Write_value_Write_value_value);
		fUML_Tests_TestCallSender->addNode(fUML_Tests_TestCallSender_Write_value);
			// ActivityFinalNode ActivityFinalNode1446
			fUML_Tests_TestCallSender_ActivityFinalNode1446->setThisElementPtr(fUML_Tests_TestCallSender_ActivityFinalNode1446);
			fUML_Tests_TestCallSender_ActivityFinalNode1446->setName("ActivityFinalNode1446");
			fUML_Tests_TestCallSender_ActivityFinalNode1446->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestCallSender->addNode(fUML_Tests_TestCallSender_ActivityFinalNode1446);
			// ControlFlow ControlFlow1439 from Start(TestCallAccepter) to Call(test)
			fUML_Tests_TestCallSender_ControlFlow1439->setThisActivityEdgePtr(fUML_Tests_TestCallSender_ControlFlow1439);
			fUML_Tests_TestCallSender_ControlFlow1439->setName("ControlFlow1439");
			fUML_Tests_TestCallSender_ControlFlow1439->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSender_ControlFlow1439->setSource(fUML_Tests_TestCallSender_Start_TestCallAccepter);
			fUML_Tests_TestCallSender_ControlFlow1439->setTarget(fUML_Tests_TestCallSender_Call_test);
		fUML_Tests_TestCallSender->addEdge(fUML_Tests_TestCallSender_ControlFlow1439);
			// ObjectFlow ObjectFlow1450 from Call(test).output to Write(value).value
			fUML_Tests_TestCallSender_ObjectFlow1450->setThisActivityEdgePtr(fUML_Tests_TestCallSender_ObjectFlow1450);
			fUML_Tests_TestCallSender_ObjectFlow1450->setName("ObjectFlow1450");
			fUML_Tests_TestCallSender_ObjectFlow1450->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSender_ObjectFlow1450->setSource(fUML_Tests_TestCallSender_Call_test_Call_test_output);
			fUML_Tests_TestCallSender_ObjectFlow1450->setTarget(fUML_Tests_TestCallSender_Write_value_Write_value_value);
		fUML_Tests_TestCallSender->addEdge(fUML_Tests_TestCallSender_ObjectFlow1450);
			// ObjectFlow ObjectFlow1442 from ReadSelf.result to Write(value).object
			fUML_Tests_TestCallSender_ObjectFlow1442->setThisActivityEdgePtr(fUML_Tests_TestCallSender_ObjectFlow1442);
			fUML_Tests_TestCallSender_ObjectFlow1442->setName("ObjectFlow1442");
			fUML_Tests_TestCallSender_ObjectFlow1442->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSender_ObjectFlow1442->setSource(fUML_Tests_TestCallSender_ReadSelf_ReadSelf_result);
			fUML_Tests_TestCallSender_ObjectFlow1442->setTarget(fUML_Tests_TestCallSender_Write_value_Write_value_object);
		fUML_Tests_TestCallSender->addEdge(fUML_Tests_TestCallSender_ObjectFlow1442);
			// ObjectFlow ObjectFlow1444 from Create(TestCallAccepter).result to ForkNode
			fUML_Tests_TestCallSender_ObjectFlow1444->setThisActivityEdgePtr(fUML_Tests_TestCallSender_ObjectFlow1444);
			fUML_Tests_TestCallSender_ObjectFlow1444->setName("ObjectFlow1444");
			fUML_Tests_TestCallSender_ObjectFlow1444->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSender_ObjectFlow1444->setSource(fUML_Tests_TestCallSender_Create_TestCallAccepter_Create_TestCallAccepter_result);
			fUML_Tests_TestCallSender_ObjectFlow1444->setTarget(fUML_Tests_TestCallSender_ForkNode);
		fUML_Tests_TestCallSender->addEdge(fUML_Tests_TestCallSender_ObjectFlow1444);
			// ObjectFlow ObjectFlow1452 from ForkNode to Start(TestCallAccepter).object
			fUML_Tests_TestCallSender_ObjectFlow1452->setThisActivityEdgePtr(fUML_Tests_TestCallSender_ObjectFlow1452);
			fUML_Tests_TestCallSender_ObjectFlow1452->setName("ObjectFlow1452");
			fUML_Tests_TestCallSender_ObjectFlow1452->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSender_ObjectFlow1452->setSource(fUML_Tests_TestCallSender_ForkNode);
			fUML_Tests_TestCallSender_ObjectFlow1452->setTarget(fUML_Tests_TestCallSender_Start_TestCallAccepter_Start_TestCallAccepter_object);
		fUML_Tests_TestCallSender->addEdge(fUML_Tests_TestCallSender_ObjectFlow1452);
			// ObjectFlow ObjectFlow1454 from ForkNode to Call(test).target
			fUML_Tests_TestCallSender_ObjectFlow1454->setThisActivityEdgePtr(fUML_Tests_TestCallSender_ObjectFlow1454);
			fUML_Tests_TestCallSender_ObjectFlow1454->setName("ObjectFlow1454");
			fUML_Tests_TestCallSender_ObjectFlow1454->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSender_ObjectFlow1454->setSource(fUML_Tests_TestCallSender_ForkNode);
			fUML_Tests_TestCallSender_ObjectFlow1454->setTarget(fUML_Tests_TestCallSender_Call_test_Call_test_target);
		fUML_Tests_TestCallSender->addEdge(fUML_Tests_TestCallSender_ObjectFlow1454);
			// ObjectFlow ObjectFlow1447 from Value(0).result to Call(test).input
			fUML_Tests_TestCallSender_ObjectFlow1447->setThisActivityEdgePtr(fUML_Tests_TestCallSender_ObjectFlow1447);
			fUML_Tests_TestCallSender_ObjectFlow1447->setName("ObjectFlow1447");
			fUML_Tests_TestCallSender_ObjectFlow1447->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSender_ObjectFlow1447->setSource(fUML_Tests_TestCallSender_Value_0_Value_0_result);
			fUML_Tests_TestCallSender_ObjectFlow1447->setTarget(fUML_Tests_TestCallSender_Call_test_Call_test_input);
		fUML_Tests_TestCallSender->addEdge(fUML_Tests_TestCallSender_ObjectFlow1447);
			// ControlFlow ControlFlow1456 from Accept(TestSignal) to ActivityFinalNode1446
			fUML_Tests_TestCallSender_ControlFlow1456->setThisActivityEdgePtr(fUML_Tests_TestCallSender_ControlFlow1456);
			fUML_Tests_TestCallSender_ControlFlow1456->setName("ControlFlow1456");
			fUML_Tests_TestCallSender_ControlFlow1456->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSender_ControlFlow1456->setSource(fUML_Tests_TestCallSender_Accept_TestSignal);
			fUML_Tests_TestCallSender_ControlFlow1456->setTarget(fUML_Tests_TestCallSender_ActivityFinalNode1446);
		fUML_Tests_TestCallSender->addEdge(fUML_Tests_TestCallSender_ControlFlow1456);
	fUML_Tests->addPackagedElement(fUML_Tests_TestCallSender);
		// Activity SimpleDecision
		fUML_Tests_SimpleDecision->setThisActivityPtr(fUML_Tests_SimpleDecision);
		fUML_Tests_SimpleDecision->setName("SimpleDecision");
		fUML_Tests_SimpleDecision->setVisibility(VisibilityKind::public_);
		fUML_Tests_SimpleDecision->isReentrant = false;
			// Parameter testValue
			fUML_Tests_SimpleDecision_testValue->setThisElementPtr(fUML_Tests_SimpleDecision_testValue);
			fUML_Tests_SimpleDecision_testValue->setName("testValue");
			fUML_Tests_SimpleDecision_testValue->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_SimpleDecision_testValue->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
		fUML_Tests_SimpleDecision->addOwnedParameter(fUML_Tests_SimpleDecision_testValue);
			// Parameter output_0
			fUML_Tests_SimpleDecision_output_0->setThisElementPtr(fUML_Tests_SimpleDecision_output_0);
			fUML_Tests_SimpleDecision_output_0->setName("output_0");
			fUML_Tests_SimpleDecision_output_0->setVisibility(VisibilityKind::public_);
			fUML_Tests_SimpleDecision_output_0->setLower(0);
			fUML_Tests_SimpleDecision_output_0->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_SimpleDecision_output_0->setDirection(ParameterDirectionKind::out);
		fUML_Tests_SimpleDecision->addOwnedParameter(fUML_Tests_SimpleDecision_output_0);
			// Parameter output_1
			fUML_Tests_SimpleDecision_output_1->setThisElementPtr(fUML_Tests_SimpleDecision_output_1);
			fUML_Tests_SimpleDecision_output_1->setName("output_1");
			fUML_Tests_SimpleDecision_output_1->setVisibility(VisibilityKind::public_);
			fUML_Tests_SimpleDecision_output_1->setLower(0);
			fUML_Tests_SimpleDecision_output_1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_SimpleDecision_output_1->setDirection(ParameterDirectionKind::out);
		fUML_Tests_SimpleDecision->addOwnedParameter(fUML_Tests_SimpleDecision_output_1);
			// DecisionNode DecisionNode
			fUML_Tests_SimpleDecision_DecisionNode->setThisElementPtr(fUML_Tests_SimpleDecision_DecisionNode);
			fUML_Tests_SimpleDecision_DecisionNode->setName("DecisionNode");
			fUML_Tests_SimpleDecision_DecisionNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_SimpleDecision->addNode(fUML_Tests_SimpleDecision_DecisionNode);
			// ActivityParameterNode Parameter(output_0)
			fUML_Tests_SimpleDecision_Parameter_output_0->setThisElementPtr(fUML_Tests_SimpleDecision_Parameter_output_0);
			fUML_Tests_SimpleDecision_Parameter_output_0->setName("Parameter(output_0)");
			fUML_Tests_SimpleDecision_Parameter_output_0->setVisibility(VisibilityKind::public_);
			fUML_Tests_SimpleDecision_Parameter_output_0->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_SimpleDecision_Parameter_output_0->setParameter(fUML_Tests_SimpleDecision_output_0);
		fUML_Tests_SimpleDecision->addNode(fUML_Tests_SimpleDecision_Parameter_output_0);
			// ActivityParameterNode Parameter(output_1)
			fUML_Tests_SimpleDecision_Parameter_output_1->setThisElementPtr(fUML_Tests_SimpleDecision_Parameter_output_1);
			fUML_Tests_SimpleDecision_Parameter_output_1->setName("Parameter(output_1)");
			fUML_Tests_SimpleDecision_Parameter_output_1->setVisibility(VisibilityKind::public_);
			fUML_Tests_SimpleDecision_Parameter_output_1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_SimpleDecision_Parameter_output_1->setParameter(fUML_Tests_SimpleDecision_output_1);
		fUML_Tests_SimpleDecision->addNode(fUML_Tests_SimpleDecision_Parameter_output_1);
			// ActivityParameterNode Parameter(testValue)
			fUML_Tests_SimpleDecision_Parameter_testValue->setThisElementPtr(fUML_Tests_SimpleDecision_Parameter_testValue);
			fUML_Tests_SimpleDecision_Parameter_testValue->setName("Parameter(testValue)");
			fUML_Tests_SimpleDecision_Parameter_testValue->setVisibility(VisibilityKind::public_);
			fUML_Tests_SimpleDecision_Parameter_testValue->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_SimpleDecision_Parameter_testValue->setParameter(fUML_Tests_SimpleDecision_testValue);
		fUML_Tests_SimpleDecision->addNode(fUML_Tests_SimpleDecision_Parameter_testValue);
			// ObjectFlow ObjectFlow1458 from Parameter(testValue) to DecisionNode
			fUML_Tests_SimpleDecision_ObjectFlow1458->setThisActivityEdgePtr(fUML_Tests_SimpleDecision_ObjectFlow1458);
			fUML_Tests_SimpleDecision_ObjectFlow1458->setName("ObjectFlow1458");
			fUML_Tests_SimpleDecision_ObjectFlow1458->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_SimpleDecision_ObjectFlow1458->setSource(fUML_Tests_SimpleDecision_Parameter_testValue);
			fUML_Tests_SimpleDecision_ObjectFlow1458->setTarget(fUML_Tests_SimpleDecision_DecisionNode);
		fUML_Tests_SimpleDecision->addEdge(fUML_Tests_SimpleDecision_ObjectFlow1458);
			// ObjectFlow ObjectFlow1460 from DecisionNode to Parameter(output_1)
			fUML_Tests_SimpleDecision_ObjectFlow1460->setThisActivityEdgePtr(fUML_Tests_SimpleDecision_ObjectFlow1460);
			fUML_Tests_SimpleDecision_ObjectFlow1460->setName("ObjectFlow1460");
			fUML_Tests_SimpleDecision_ObjectFlow1460->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_SimpleDecision_ObjectFlow1460->setSource(fUML_Tests_SimpleDecision_DecisionNode);
			fUML_Tests_SimpleDecision_ObjectFlow1460->setTarget(fUML_Tests_SimpleDecision_Parameter_output_1);
				// LiteralInteger LiteralInteger1461
				fUML_Tests_SimpleDecision_ObjectFlow1460_LiteralInteger1461->setThisElementPtr(fUML_Tests_SimpleDecision_ObjectFlow1460_LiteralInteger1461);
				fUML_Tests_SimpleDecision_ObjectFlow1460_LiteralInteger1461->setName("LiteralInteger1461");
				fUML_Tests_SimpleDecision_ObjectFlow1460_LiteralInteger1461->setVisibility(VisibilityKind::public_);
				fUML_Tests_SimpleDecision_ObjectFlow1460_LiteralInteger1461->setValue(1);
			fUML_Tests_SimpleDecision_ObjectFlow1460->setGuard(fUML_Tests_SimpleDecision_ObjectFlow1460_LiteralInteger1461);
		fUML_Tests_SimpleDecision->addEdge(fUML_Tests_SimpleDecision_ObjectFlow1460);
			// ObjectFlow ObjectFlow1467 from DecisionNode to Parameter(output_0)
			fUML_Tests_SimpleDecision_ObjectFlow1467->setThisActivityEdgePtr(fUML_Tests_SimpleDecision_ObjectFlow1467);
			fUML_Tests_SimpleDecision_ObjectFlow1467->setName("ObjectFlow1467");
			fUML_Tests_SimpleDecision_ObjectFlow1467->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_SimpleDecision_ObjectFlow1467->setSource(fUML_Tests_SimpleDecision_DecisionNode);
			fUML_Tests_SimpleDecision_ObjectFlow1467->setTarget(fUML_Tests_SimpleDecision_Parameter_output_0);
				// LiteralInteger LiteralInteger1468
				fUML_Tests_SimpleDecision_ObjectFlow1467_LiteralInteger1468->setThisElementPtr(fUML_Tests_SimpleDecision_ObjectFlow1467_LiteralInteger1468);
				fUML_Tests_SimpleDecision_ObjectFlow1467_LiteralInteger1468->setName("LiteralInteger1468");
				fUML_Tests_SimpleDecision_ObjectFlow1467_LiteralInteger1468->setVisibility(VisibilityKind::public_);
				fUML_Tests_SimpleDecision_ObjectFlow1467_LiteralInteger1468->setValue(0);
			fUML_Tests_SimpleDecision_ObjectFlow1467->setGuard(fUML_Tests_SimpleDecision_ObjectFlow1467_LiteralInteger1468);
		fUML_Tests_SimpleDecision->addEdge(fUML_Tests_SimpleDecision_ObjectFlow1467);
	fUML_Tests->addPackagedElement(fUML_Tests_SimpleDecision);
		// Activity TestUnlimitedNaturalFunctions
		fUML_Tests_TestUnlimitedNaturalFunctions->setThisActivityPtr(fUML_Tests_TestUnlimitedNaturalFunctions);
		fUML_Tests_TestUnlimitedNaturalFunctions->setName("TestUnlimitedNaturalFunctions");
		fUML_Tests_TestUnlimitedNaturalFunctions->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestUnlimitedNaturalFunctions->isReentrant = false;
			// Parameter LTResult
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_LTResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResult->setName("LTResult");
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestUnlimitedNaturalFunctions->addOwnedParameter(fUML_Tests_TestUnlimitedNaturalFunctions_LTResult);
			// Parameter LEResult
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_LEResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResult->setName("LEResult");
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestUnlimitedNaturalFunctions->addOwnedParameter(fUML_Tests_TestUnlimitedNaturalFunctions_LEResult);
			// Parameter GTResult
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_GTResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResult->setName("GTResult");
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestUnlimitedNaturalFunctions->addOwnedParameter(fUML_Tests_TestUnlimitedNaturalFunctions_GTResult);
			// Parameter GEResult
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_GEResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResult->setName("GEResult");
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestUnlimitedNaturalFunctions->addOwnedParameter(fUML_Tests_TestUnlimitedNaturalFunctions_GEResult);
			// Parameter LTResult*
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResulttimes->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_LTResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResulttimes->setName("LTResult*");
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResulttimes->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResulttimes->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResulttimes->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestUnlimitedNaturalFunctions->addOwnedParameter(fUML_Tests_TestUnlimitedNaturalFunctions_LTResulttimes);
			// Parameter LEResult*
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResulttimes->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_LEResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResulttimes->setName("LEResult*");
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResulttimes->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResulttimes->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResulttimes->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestUnlimitedNaturalFunctions->addOwnedParameter(fUML_Tests_TestUnlimitedNaturalFunctions_LEResulttimes);
			// Parameter GTResult*
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResulttimes->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_GTResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResulttimes->setName("GTResult*");
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResulttimes->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResulttimes->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResulttimes->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestUnlimitedNaturalFunctions->addOwnedParameter(fUML_Tests_TestUnlimitedNaturalFunctions_GTResulttimes);
			// Parameter GEResult*
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResulttimes->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_GEResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResulttimes->setName("GEResult*");
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResulttimes->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResulttimes->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResulttimes->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestUnlimitedNaturalFunctions->addOwnedParameter(fUML_Tests_TestUnlimitedNaturalFunctions_GEResulttimes);
			// Parameter MaxResult
			fUML_Tests_TestUnlimitedNaturalFunctions_MaxResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_MaxResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_MaxResult->setName("MaxResult");
			fUML_Tests_TestUnlimitedNaturalFunctions_MaxResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_MaxResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_MaxResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestUnlimitedNaturalFunctions->addOwnedParameter(fUML_Tests_TestUnlimitedNaturalFunctions_MaxResult);
			// Parameter MinResult
			fUML_Tests_TestUnlimitedNaturalFunctions_MinResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_MinResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_MinResult->setName("MinResult");
			fUML_Tests_TestUnlimitedNaturalFunctions_MinResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_MinResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_MinResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestUnlimitedNaturalFunctions->addOwnedParameter(fUML_Tests_TestUnlimitedNaturalFunctions_MinResult);
			// ActivityParameterNode Param(LEResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResult->setName("Param(LEResult)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResult->setParameter(fUML_Tests_TestUnlimitedNaturalFunctions_LEResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResult);
			// CallBehaviorAction Call(GE)_2
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2->setName("Call(GE)_2");
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2->setVisibility(VisibilityKind::public_);
				// OutputPin GE.result
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result->setName("GE.result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2->addResult(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_UnlimitedNaturalFunctions_greaterOrEqual);
				// InputPin GE.x
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x->setName("GE.x");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x);
				// InputPin GE.y
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y->setName("GE.y");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2);
			// CallBehaviorAction Call(LE)_2
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2->setName("Call(LE)_2");
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2->setVisibility(VisibilityKind::public_);
				// OutputPin LE.result
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result->setName("LE.result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2->addResult(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_UnlimitedNaturalFunctions_lessOrEqual);
				// InputPin LE.x
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x->setName("LE.x");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x);
				// InputPin LE.y
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y->setName("LE.y");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2);
			// ForkNode Fork(*)
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times);
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times->setName("Fork(*)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times);
			// ValueSpecificationAction Value(*)
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_times->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Value_times);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_times->setName("Value(*)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_times->setVisibility(VisibilityKind::public_);
				// LiteralUnlimitedNatural LiteralUnlimitedNatural1556
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_LiteralUnlimitedNatural1556->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_LiteralUnlimitedNatural1556);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_LiteralUnlimitedNatural1556->setName("LiteralUnlimitedNatural1556");
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_LiteralUnlimitedNatural1556->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_LiteralUnlimitedNatural1556->setValue(-1);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_times->setValue(fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_LiteralUnlimitedNatural1556);
				// OutputPin Value(*).result
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result->setName("Value(*).result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_times->setResult(fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Value_times);
			// ActivityParameterNode Param(GTResult*)
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResulttimes->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResulttimes->setName("Param(GTResult*)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResulttimes->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResulttimes->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResulttimes->setParameter(fUML_Tests_TestUnlimitedNaturalFunctions_GTResulttimes);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResulttimes);
			// CallBehaviorAction Call(GE)_1
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1->setName("Call(GE)_1");
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1->setVisibility(VisibilityKind::public_);
				// OutputPin GE.result
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result->setName("GE.result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1->addResult(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_UnlimitedNaturalFunctions_greaterOrEqual);
				// InputPin GE.x
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x->setName("GE.x");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x);
				// InputPin GE.y
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y->setName("GE.y");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1);
			// ForkNode Fork(2)
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2->setName("Fork(2)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			// ActivityParameterNode Param(LEResult*)
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResulttimes->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResulttimes->setName("Param(LEResult*)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResulttimes->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResulttimes->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResulttimes->setParameter(fUML_Tests_TestUnlimitedNaturalFunctions_LEResulttimes);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResulttimes);
			// ActivityParameterNode Param(GTResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResult->setName("Param(GTResult)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResult->setParameter(fUML_Tests_TestUnlimitedNaturalFunctions_GTResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResult);
			// CallBehaviorAction Call(LT)_2
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2->setName("Call(LT)_2");
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2->setVisibility(VisibilityKind::public_);
				// OutputPin LT.result
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result->setName("LT.result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2->addResult(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_UnlimitedNaturalFunctions_lessThan);
				// InputPin LT.x
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x->setName("LT.x");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x);
				// InputPin LT.y
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y->setName("LT.y");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2);
			// CallBehaviorAction Call(LE)_1
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1->setName("Call(LE)_1");
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1->setVisibility(VisibilityKind::public_);
				// OutputPin LE.result
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result->setName("LE.result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1->addResult(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_UnlimitedNaturalFunctions_lessOrEqual);
				// InputPin LE.x
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x->setName("LE.x");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x);
				// InputPin LE.y
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y->setName("LE.y");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1);
			// CallBehaviorAction Call(GT)_1
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1->setName("Call(GT)_1");
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1->setVisibility(VisibilityKind::public_);
				// OutputPin GT.result
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result->setName("GT.result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1->addResult(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_UnlimitedNaturalFunctions_greaterThan);
				// InputPin GT.x
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x->setName("GT.x");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x);
				// InputPin GT.y
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y->setName("GT.y");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1);
			// ValueSpecificationAction Value(2)
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_2->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Value_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_2->setName("Value(2)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_2->setVisibility(VisibilityKind::public_);
				// LiteralUnlimitedNatural LiteralUnlimitedNatural1585
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_LiteralUnlimitedNatural1585->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_LiteralUnlimitedNatural1585);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_LiteralUnlimitedNatural1585->setName("LiteralUnlimitedNatural1585");
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_LiteralUnlimitedNatural1585->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_LiteralUnlimitedNatural1585->setValue(2);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_2->setValue(fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_LiteralUnlimitedNatural1585);
				// OutputPin Value(2).result
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result->setName("Value(2).result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_2->setResult(fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Value_2);
			// CallBehaviorAction Call(Min)
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min->setName("Call(Min)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min->setVisibility(VisibilityKind::public_);
				// OutputPin Min.result
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result->setName("Min.result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min->addResult(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_UnlimitedNaturalFunctions_Min);
				// InputPin Min.x
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x->setName("Min.x");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x);
				// InputPin Min.y
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y->setName("Min.y");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min);
			// CallBehaviorAction Call(Max)
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max->setName("Call(Max)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max->setVisibility(VisibilityKind::public_);
				// OutputPin Max.result
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result->setName("Max.result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max->addResult(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_UnlimitedNaturalFunctions_Max);
				// InputPin Max.x
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x->setName("Max.x");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x);
				// InputPin Min.y
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y->setName("Min.y");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max);
			// ActivityParameterNode Param(MaxResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MaxResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Param_MaxResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MaxResult->setName("Param(MaxResult)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MaxResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MaxResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MaxResult->setParameter(fUML_Tests_TestUnlimitedNaturalFunctions_MaxResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Param_MaxResult);
			// ActivityParameterNode Param(MinResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MinResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Param_MinResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MinResult->setName("Param(MinResult)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MinResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MinResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MinResult->setParameter(fUML_Tests_TestUnlimitedNaturalFunctions_MinResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Param_MinResult);
			// ActivityParameterNode Param(LTResult*)
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResulttimes->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResulttimes->setName("Param(LTResult*)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResulttimes->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResulttimes->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResulttimes->setParameter(fUML_Tests_TestUnlimitedNaturalFunctions_LTResulttimes);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResulttimes);
			// CallBehaviorAction Call(GT)_2
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2->setName("Call(GT)_2");
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2->setVisibility(VisibilityKind::public_);
				// OutputPin GT.result
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result->setName("GT.result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2->addResult(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_UnlimitedNaturalFunctions_greaterThan);
				// InputPin GT.x
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x->setName("GT.x");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x);
				// InputPin GT.y
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y->setName("GT.y");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2);
			// ForkNode Fork(3)
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3);
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3->setName("Fork(3)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3);
			// ValueSpecificationAction Value(3)
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_3->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Value_3);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_3->setName("Value(3)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_3->setVisibility(VisibilityKind::public_);
				// LiteralUnlimitedNatural LiteralUnlimitedNatural1606
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_LiteralUnlimitedNatural1606->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_LiteralUnlimitedNatural1606);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_LiteralUnlimitedNatural1606->setName("LiteralUnlimitedNatural1606");
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_LiteralUnlimitedNatural1606->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_LiteralUnlimitedNatural1606->setValue(3);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_3->setValue(fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_LiteralUnlimitedNatural1606);
				// OutputPin Value(3).result
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result->setName("Value(3).result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_3->setResult(fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Value_3);
			// ActivityParameterNode Param(GEResult*)
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResulttimes->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResulttimes->setName("Param(GEResult*)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResulttimes->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResulttimes->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResulttimes->setParameter(fUML_Tests_TestUnlimitedNaturalFunctions_GEResulttimes);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResulttimes);
			// CallBehaviorAction Call(LT)_1
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1->setName("Call(LT)_1");
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1->setVisibility(VisibilityKind::public_);
				// OutputPin LT.result
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result->setName("LT.result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1->addResult(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_UnlimitedNaturalFunctions_lessThan);
				// InputPin LT.x
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x->setName("LT.x");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x);
				// InputPin LT.y
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y->setName("LT.y");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1);
			// ActivityParameterNode Param(LTResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResult->setName("Param(LTResult)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResult->setParameter(fUML_Tests_TestUnlimitedNaturalFunctions_LTResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResult);
			// ActivityParameterNode Param(GEResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResult->setName("Param(GEResult)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResult->setParameter(fUML_Tests_TestUnlimitedNaturalFunctions_GEResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResult);
			// ObjectFlow ObjectFlow1472 from Fork(3) to GT.x
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1472->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1472);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1472->setName("ObjectFlow1472");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1472->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1472->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1472->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1472);
			// ObjectFlow ObjectFlow1474 from LT.result to Param(LTResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1474->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1474);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1474->setName("ObjectFlow1474");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1474->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1474->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1474->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1474);
			// ObjectFlow ObjectFlow1476 from GT.result to Param(GTResult*)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1476->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1476);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1476->setName("ObjectFlow1476");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1476->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1476->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1476->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResulttimes);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1476);
			// ObjectFlow ObjectFlow1548 from Fork(2) to GT.x
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1548->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1548);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1548->setName("ObjectFlow1548");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1548->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1548->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1548->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1548);
			// ObjectFlow ObjectFlow1565 from Fork(2) to LT.y
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1565->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1565);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1565->setName("ObjectFlow1565");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1565->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1565->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1565->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1565);
			// ControlFlow ControlFlow1484 from Call(LE)_2 to Call(GT)_2
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1484->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1484);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1484->setName("ControlFlow1484");
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1484->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1484->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1484->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1484);
			// ObjectFlow ObjectFlow1486 from Fork(2) to LT.x
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1486->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1486);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1486->setName("ObjectFlow1486");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1486->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1486->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1486->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1486);
			// ObjectFlow ObjectFlow1488 from Fork(3) to LE.x
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1488->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1488);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1488->setName("ObjectFlow1488");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1488->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1488->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1488->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1488);
			// ObjectFlow ObjectFlow1567 from GE.result to Param(GEResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1567->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1567);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1567->setName("ObjectFlow1567");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1567->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1567->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1567->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1567);
			// ObjectFlow ObjectFlow1569 from Value(3).result to Fork(3)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1569->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1569);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1569->setName("ObjectFlow1569");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1569->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1569->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1569->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1569);
			// ObjectFlow ObjectFlow1490 from Fork(2) to GE.y
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1490->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1490);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1490->setName("ObjectFlow1490");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1490->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1490->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1490->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1490);
			// ObjectFlow ObjectFlow1571 from Fork(*) to GE.y
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1571->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1571);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1571->setName("ObjectFlow1571");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1571->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1571->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1571->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1571);
			// ControlFlow ControlFlow1573 from Call(LT)_1 to Call(LE)_1
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1573->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1573);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1573->setName("ControlFlow1573");
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1573->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1573->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1573->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1573);
			// ControlFlow ControlFlow1498 from Call(LE)_1 to Call(GT)_1
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1498->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1498);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1498->setName("ControlFlow1498");
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1498->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1498->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1498->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1498);
			// ObjectFlow ObjectFlow1500 from Fork(*) to GT.y
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1500->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1500);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1500->setName("ObjectFlow1500");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1500->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1500->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1500->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1500);
			// ObjectFlow ObjectFlow1581 from Fork(*) to LT.y
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1581->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1581);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1581->setName("ObjectFlow1581");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1581->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1581->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1581->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1581);
			// ObjectFlow ObjectFlow1583 from Fork(*) to Min.y
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1583->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1583);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1583->setName("ObjectFlow1583");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1583->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1583->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1583->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1583);
			// ObjectFlow ObjectFlow1594 from Fork(*) to LE.y
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1594->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1594);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1594->setName("ObjectFlow1594");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1594->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1594->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1594->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1594);
			// ControlFlow ControlFlow1514 from Call(LT)_2 to Call(LE)_2
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1514->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1514);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1514->setName("ControlFlow1514");
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1514->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1514->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1514->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1514);
			// ObjectFlow ObjectFlow1516 from Min.result to Param(MinResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1516->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1516);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1516->setName("ObjectFlow1516");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1516->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1516->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1516->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Param_MinResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1516);
			// ControlFlow ControlFlow1518 from Call(GE)_2 to Call(Max)
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1518->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1518);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1518->setName("ControlFlow1518");
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1518->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1518->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1518->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1518);
			// ObjectFlow ObjectFlow1520 from LE.result to Param(LEResult*)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1520->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1520);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1520->setName("ObjectFlow1520");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1520->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1520->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1520->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResulttimes);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1520);
			// ObjectFlow ObjectFlow1596 from Max.result to Param(MaxResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1596->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1596);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1596->setName("ObjectFlow1596");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1596->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1596->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1596->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Param_MaxResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1596);
			// ObjectFlow ObjectFlow1598 from Fork(2) to GE.x
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1598->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1598);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1598->setName("ObjectFlow1598");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1598->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1598->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1598->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1598);
			// ControlFlow ControlFlow1600 from Call(Max) to Call(Min)
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1600->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1600);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1600->setName("ControlFlow1600");
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1600->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1600->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1600->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1600);
			// ControlFlow ControlFlow1522 from Call(GT)_1 to Call(GE)_1
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1522->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1522);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1522->setName("ControlFlow1522");
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1522->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1522->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1522->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1522);
			// ObjectFlow ObjectFlow1602 from Value(2).result to Fork(2)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1602->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1602);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1602->setName("ObjectFlow1602");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1602->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1602->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1602->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1602);
			// ObjectFlow ObjectFlow1530 from Fork(2) to GT.y
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1530->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1530);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1530->setName("ObjectFlow1530");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1530->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1530->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1530->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1530);
			// ObjectFlow ObjectFlow1532 from GT.result to Param(GTResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1532->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1532);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1532->setName("ObjectFlow1532");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1532->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1532->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1532->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1532);
			// ObjectFlow ObjectFlow1607 from Value(*).result to Fork(*)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1607->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1607);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1607->setName("ObjectFlow1607");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1607->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1607->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1607->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1607);
			// ObjectFlow ObjectFlow1534 from Fork(3) to LT.x
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1534->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1534);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1534->setName("ObjectFlow1534");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1534->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1534->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1534->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1534);
			// ObjectFlow ObjectFlow1536 from LE.result to Param(LEResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1536->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1536);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1536->setName("ObjectFlow1536");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1536->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1536->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1536->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1536);
			// ObjectFlow ObjectFlow1538 from Fork(3) to GE.x
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1538->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1538);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1538->setName("ObjectFlow1538");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1538->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1538->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1538->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1538);
			// ObjectFlow ObjectFlow1609 from LT.result to Param(LTResult*)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1609->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1609);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1609->setName("ObjectFlow1609");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1609->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1609->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1609->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResulttimes);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1609);
			// ObjectFlow ObjectFlow1611 from Fork(2) to LE.x
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1611->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1611);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1611->setName("ObjectFlow1611");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1611->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1611->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1611->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1611);
			// ObjectFlow ObjectFlow1613 from GE.result to Param(GEResult*)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1613->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1613);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1613->setName("ObjectFlow1613");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1613->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1613->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1613->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResulttimes);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1613);
			// ControlFlow ControlFlow1615 from Call(GE)_1 to Call(LT)_2
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1615->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1615);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1615->setName("ControlFlow1615");
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1615->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1615->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1615->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1615);
			// ObjectFlow ObjectFlow1546 from Fork(2) to Max.x
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1546->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1546);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1546->setName("ObjectFlow1546");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1546->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1546->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1546->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1546);
			// ObjectFlow ObjectFlow1617 from Fork(2) to LE.y
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1617->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1617);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1617->setName("ObjectFlow1617");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1617->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1617->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1617->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1617);
			// ControlFlow ControlFlow1619 from Call(GT)_2 to Call(GE)_2
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1619->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1619);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1619->setName("ControlFlow1619");
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1619->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1619->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1619->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow1619);
			// ObjectFlow ObjectFlow1621 from Fork(2) to Min.x
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1621->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1621);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1621->setName("ObjectFlow1621");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1621->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1621->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1621->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1621);
			// ObjectFlow ObjectFlow1623 from Fork(*) to Min.y
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1623->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1623);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1623->setName("ObjectFlow1623");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1623->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1623->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1623->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow1623);
	fUML_Tests->addPackagedElement(fUML_Tests_TestUnlimitedNaturalFunctions);
		// Activity TestStringFunctions
		fUML_Tests_TestStringFunctions->setThisActivityPtr(fUML_Tests_TestStringFunctions);
		fUML_Tests_TestStringFunctions->setName("TestStringFunctions");
		fUML_Tests_TestStringFunctions->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestStringFunctions->isReentrant = false;
			// Parameter SizeResult
			fUML_Tests_TestStringFunctions_SizeResult->setThisElementPtr(fUML_Tests_TestStringFunctions_SizeResult);
			fUML_Tests_TestStringFunctions_SizeResult->setName("SizeResult");
			fUML_Tests_TestStringFunctions_SizeResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_SizeResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_SizeResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestStringFunctions->addOwnedParameter(fUML_Tests_TestStringFunctions_SizeResult);
			// Parameter Substring1Result
			fUML_Tests_TestStringFunctions_Substring1Result->setThisElementPtr(fUML_Tests_TestStringFunctions_Substring1Result);
			fUML_Tests_TestStringFunctions_Substring1Result->setName("Substring1Result");
			fUML_Tests_TestStringFunctions_Substring1Result->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_Substring1Result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Substring1Result->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestStringFunctions->addOwnedParameter(fUML_Tests_TestStringFunctions_Substring1Result);
			// Parameter Substring2Result
			fUML_Tests_TestStringFunctions_Substring2Result->setThisElementPtr(fUML_Tests_TestStringFunctions_Substring2Result);
			fUML_Tests_TestStringFunctions_Substring2Result->setName("Substring2Result");
			fUML_Tests_TestStringFunctions_Substring2Result->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_Substring2Result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Substring2Result->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestStringFunctions->addOwnedParameter(fUML_Tests_TestStringFunctions_Substring2Result);
			// Parameter ConcatResult
			fUML_Tests_TestStringFunctions_ConcatResult->setThisElementPtr(fUML_Tests_TestStringFunctions_ConcatResult);
			fUML_Tests_TestStringFunctions_ConcatResult->setName("ConcatResult");
			fUML_Tests_TestStringFunctions_ConcatResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ConcatResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_ConcatResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestStringFunctions->addOwnedParameter(fUML_Tests_TestStringFunctions_ConcatResult);
			// ForkNode Fork(Substring-1)
			fUML_Tests_TestStringFunctions_Fork_Substringminus1->setThisElementPtr(fUML_Tests_TestStringFunctions_Fork_Substringminus1);
			fUML_Tests_TestStringFunctions_Fork_Substringminus1->setName("Fork(Substring-1)");
			fUML_Tests_TestStringFunctions_Fork_Substringminus1->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Fork_Substringminus1);
			// ActivityParameterNode Param(SizeResult)
			fUML_Tests_TestStringFunctions_Param_SizeResult->setThisElementPtr(fUML_Tests_TestStringFunctions_Param_SizeResult);
			fUML_Tests_TestStringFunctions_Param_SizeResult->setName("Param(SizeResult)");
			fUML_Tests_TestStringFunctions_Param_SizeResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestStringFunctions_Param_SizeResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_Param_SizeResult->setParameter(fUML_Tests_TestStringFunctions_SizeResult);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Param_SizeResult);
			// ForkNode Fork(Substring-2)
			fUML_Tests_TestStringFunctions_Fork_Substringminus2->setThisElementPtr(fUML_Tests_TestStringFunctions_Fork_Substringminus2);
			fUML_Tests_TestStringFunctions_Fork_Substringminus2->setName("Fork(Substring-2)");
			fUML_Tests_TestStringFunctions_Fork_Substringminus2->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Fork_Substringminus2);
			// ValueSpecificationAction Value(9)
			fUML_Tests_TestStringFunctions_Value_9->setThisExecutableNodePtr(fUML_Tests_TestStringFunctions_Value_9);
			fUML_Tests_TestStringFunctions_Value_9->setName("Value(9)");
			fUML_Tests_TestStringFunctions_Value_9->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1627
				fUML_Tests_TestStringFunctions_Value_9_LiteralInteger1627->setThisElementPtr(fUML_Tests_TestStringFunctions_Value_9_LiteralInteger1627);
				fUML_Tests_TestStringFunctions_Value_9_LiteralInteger1627->setName("LiteralInteger1627");
				fUML_Tests_TestStringFunctions_Value_9_LiteralInteger1627->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Value_9_LiteralInteger1627->setValue(9);
			fUML_Tests_TestStringFunctions_Value_9->setValue(fUML_Tests_TestStringFunctions_Value_9_LiteralInteger1627);
				// OutputPin Value(9).result
				fUML_Tests_TestStringFunctions_Value_9_Value_9_result->setThisElementPtr(fUML_Tests_TestStringFunctions_Value_9_Value_9_result);
				fUML_Tests_TestStringFunctions_Value_9_Value_9_result->setName("Value(9).result");
				fUML_Tests_TestStringFunctions_Value_9_Value_9_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Value_9_Value_9_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_Value_9->setResult(fUML_Tests_TestStringFunctions_Value_9_Value_9_result);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Value_9);
			// ValueSpecificationAction Value(\"123456789\")
			fUML_Tests_TestStringFunctions_Value_123456789->setThisExecutableNodePtr(fUML_Tests_TestStringFunctions_Value_123456789);
			fUML_Tests_TestStringFunctions_Value_123456789->setName("Value(\"123456789\")");
			fUML_Tests_TestStringFunctions_Value_123456789->setVisibility(VisibilityKind::public_);
				// LiteralString LiteralString1675
				fUML_Tests_TestStringFunctions_Value_123456789_LiteralString1675->setThisElementPtr(fUML_Tests_TestStringFunctions_Value_123456789_LiteralString1675);
				fUML_Tests_TestStringFunctions_Value_123456789_LiteralString1675->setName("LiteralString1675");
				fUML_Tests_TestStringFunctions_Value_123456789_LiteralString1675->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Value_123456789_LiteralString1675->setValue("123456789");
			fUML_Tests_TestStringFunctions_Value_123456789->setValue(fUML_Tests_TestStringFunctions_Value_123456789_LiteralString1675);
				// OutputPin Value.result
				fUML_Tests_TestStringFunctions_Value_123456789_Value_result->setThisElementPtr(fUML_Tests_TestStringFunctions_Value_123456789_Value_result);
				fUML_Tests_TestStringFunctions_Value_123456789_Value_result->setName("Value.result");
				fUML_Tests_TestStringFunctions_Value_123456789_Value_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Value_123456789_Value_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Value_123456789->setResult(fUML_Tests_TestStringFunctions_Value_123456789_Value_result);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Value_123456789);
			// ActivityParameterNode Param(ConcatResult)
			fUML_Tests_TestStringFunctions_Param_ConcatResult->setThisElementPtr(fUML_Tests_TestStringFunctions_Param_ConcatResult);
			fUML_Tests_TestStringFunctions_Param_ConcatResult->setName("Param(ConcatResult)");
			fUML_Tests_TestStringFunctions_Param_ConcatResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestStringFunctions_Param_ConcatResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Param_ConcatResult->setParameter(fUML_Tests_TestStringFunctions_ConcatResult);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Param_ConcatResult);
			// CallBehaviorAction Call(Concat)
			fUML_Tests_TestStringFunctions_Call_Concat->setThisExecutableNodePtr(fUML_Tests_TestStringFunctions_Call_Concat);
			fUML_Tests_TestStringFunctions_Call_Concat->setName("Call(Concat)");
			fUML_Tests_TestStringFunctions_Call_Concat->setVisibility(VisibilityKind::public_);
				// OutputPin Concat.result
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_result->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Concat_Concat_result);
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_result->setName("Concat.result");
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Call_Concat->addResult(fUML_Tests_TestStringFunctions_Call_Concat_Concat_result);
			fUML_Tests_TestStringFunctions_Call_Concat->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_StringFunctions_Concat);
				// InputPin Concat.x
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_x->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Concat_Concat_x);
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_x->setName("Concat.x");
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Call_Concat->addArgument(fUML_Tests_TestStringFunctions_Call_Concat_Concat_x);
				// InputPin Concat.y
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_y->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Concat_Concat_y);
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_y->setName("Concat.y");
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Call_Concat->addArgument(fUML_Tests_TestStringFunctions_Call_Concat_Concat_y);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Call_Concat);
			// ActivityParameterNode Param(Substring1Result)
			fUML_Tests_TestStringFunctions_Param_Substring1Result->setThisElementPtr(fUML_Tests_TestStringFunctions_Param_Substring1Result);
			fUML_Tests_TestStringFunctions_Param_Substring1Result->setName("Param(Substring1Result)");
			fUML_Tests_TestStringFunctions_Param_Substring1Result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestStringFunctions_Param_Substring1Result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Param_Substring1Result->setParameter(fUML_Tests_TestStringFunctions_Substring1Result);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Param_Substring1Result);
			// CallBehaviorAction Call(Substring)-1
			fUML_Tests_TestStringFunctions_Call_Substringminus1->setThisExecutableNodePtr(fUML_Tests_TestStringFunctions_Call_Substringminus1);
			fUML_Tests_TestStringFunctions_Call_Substringminus1->setName("Call(Substring)-1");
			fUML_Tests_TestStringFunctions_Call_Substringminus1->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestStringFunctions_Call_Substringminus1_result->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Substringminus1_result);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_result->setName("result");
				fUML_Tests_TestStringFunctions_Call_Substringminus1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_result->setLower(0);
			fUML_Tests_TestStringFunctions_Call_Substringminus1->addResult(fUML_Tests_TestStringFunctions_Call_Substringminus1_result);
			fUML_Tests_TestStringFunctions_Call_Substringminus1->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_StringFunctions_Substring);
				// InputPin x
				fUML_Tests_TestStringFunctions_Call_Substringminus1_x->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Substringminus1_x);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_x->setName("x");
				fUML_Tests_TestStringFunctions_Call_Substringminus1_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Call_Substringminus1->addArgument(fUML_Tests_TestStringFunctions_Call_Substringminus1_x);
				// InputPin lower
				fUML_Tests_TestStringFunctions_Call_Substringminus1_lower->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Substringminus1_lower);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_lower->setName("lower");
				fUML_Tests_TestStringFunctions_Call_Substringminus1_lower->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_lower->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_Call_Substringminus1->addArgument(fUML_Tests_TestStringFunctions_Call_Substringminus1_lower);
				// InputPin upper
				fUML_Tests_TestStringFunctions_Call_Substringminus1_upper->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Substringminus1_upper);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_upper->setName("upper");
				fUML_Tests_TestStringFunctions_Call_Substringminus1_upper->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_upper->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_Call_Substringminus1->addArgument(fUML_Tests_TestStringFunctions_Call_Substringminus1_upper);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Call_Substringminus1);
			// ValueSpecificationAction Value(1)
			fUML_Tests_TestStringFunctions_Value_1->setThisExecutableNodePtr(fUML_Tests_TestStringFunctions_Value_1);
			fUML_Tests_TestStringFunctions_Value_1->setName("Value(1)");
			fUML_Tests_TestStringFunctions_Value_1->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1698
				fUML_Tests_TestStringFunctions_Value_1_LiteralInteger1698->setThisElementPtr(fUML_Tests_TestStringFunctions_Value_1_LiteralInteger1698);
				fUML_Tests_TestStringFunctions_Value_1_LiteralInteger1698->setName("LiteralInteger1698");
				fUML_Tests_TestStringFunctions_Value_1_LiteralInteger1698->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Value_1_LiteralInteger1698->setValue(1);
			fUML_Tests_TestStringFunctions_Value_1->setValue(fUML_Tests_TestStringFunctions_Value_1_LiteralInteger1698);
				// OutputPin Value(1).result
				fUML_Tests_TestStringFunctions_Value_1_Value_1_result->setThisElementPtr(fUML_Tests_TestStringFunctions_Value_1_Value_1_result);
				fUML_Tests_TestStringFunctions_Value_1_Value_1_result->setName("Value(1).result");
				fUML_Tests_TestStringFunctions_Value_1_Value_1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Value_1_Value_1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_Value_1->setResult(fUML_Tests_TestStringFunctions_Value_1_Value_1_result);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Value_1);
			// ValueSpecificationAction Value(5)
			fUML_Tests_TestStringFunctions_Value_5->setThisExecutableNodePtr(fUML_Tests_TestStringFunctions_Value_5);
			fUML_Tests_TestStringFunctions_Value_5->setName("Value(5)");
			fUML_Tests_TestStringFunctions_Value_5->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1640
				fUML_Tests_TestStringFunctions_Value_5_LiteralInteger1640->setThisElementPtr(fUML_Tests_TestStringFunctions_Value_5_LiteralInteger1640);
				fUML_Tests_TestStringFunctions_Value_5_LiteralInteger1640->setName("LiteralInteger1640");
				fUML_Tests_TestStringFunctions_Value_5_LiteralInteger1640->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Value_5_LiteralInteger1640->setValue(5);
			fUML_Tests_TestStringFunctions_Value_5->setValue(fUML_Tests_TestStringFunctions_Value_5_LiteralInteger1640);
				// OutputPin Value(5).result
				fUML_Tests_TestStringFunctions_Value_5_Value_5_result->setThisElementPtr(fUML_Tests_TestStringFunctions_Value_5_Value_5_result);
				fUML_Tests_TestStringFunctions_Value_5_Value_5_result->setName("Value(5).result");
				fUML_Tests_TestStringFunctions_Value_5_Value_5_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Value_5_Value_5_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_Value_5->setResult(fUML_Tests_TestStringFunctions_Value_5_Value_5_result);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Value_5);
			// ActivityParameterNode Param(Substring2Result)
			fUML_Tests_TestStringFunctions_Param_Substring2Result->setThisElementPtr(fUML_Tests_TestStringFunctions_Param_Substring2Result);
			fUML_Tests_TestStringFunctions_Param_Substring2Result->setName("Param(Substring2Result)");
			fUML_Tests_TestStringFunctions_Param_Substring2Result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestStringFunctions_Param_Substring2Result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Param_Substring2Result->setParameter(fUML_Tests_TestStringFunctions_Substring2Result);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Param_Substring2Result);
			// CallBehaviorAction Call(Size)
			fUML_Tests_TestStringFunctions_Call_Size->setThisExecutableNodePtr(fUML_Tests_TestStringFunctions_Call_Size);
			fUML_Tests_TestStringFunctions_Call_Size->setName("Call(Size)");
			fUML_Tests_TestStringFunctions_Call_Size->setVisibility(VisibilityKind::public_);
				// OutputPin Size.result
				fUML_Tests_TestStringFunctions_Call_Size_Size_result->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Size_Size_result);
				fUML_Tests_TestStringFunctions_Call_Size_Size_result->setName("Size.result");
				fUML_Tests_TestStringFunctions_Call_Size_Size_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Size_Size_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_Call_Size->addResult(fUML_Tests_TestStringFunctions_Call_Size_Size_result);
			fUML_Tests_TestStringFunctions_Call_Size->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_StringFunctions_Size);
				// InputPin Size.x
				fUML_Tests_TestStringFunctions_Call_Size_Size_x->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Size_Size_x);
				fUML_Tests_TestStringFunctions_Call_Size_Size_x->setName("Size.x");
				fUML_Tests_TestStringFunctions_Call_Size_Size_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Size_Size_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Call_Size->addArgument(fUML_Tests_TestStringFunctions_Call_Size_Size_x);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Call_Size);
			// ValueSpecificationAction Value(6)
			fUML_Tests_TestStringFunctions_Value_6->setThisExecutableNodePtr(fUML_Tests_TestStringFunctions_Value_6);
			fUML_Tests_TestStringFunctions_Value_6->setName("Value(6)");
			fUML_Tests_TestStringFunctions_Value_6->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1699
				fUML_Tests_TestStringFunctions_Value_6_LiteralInteger1699->setThisElementPtr(fUML_Tests_TestStringFunctions_Value_6_LiteralInteger1699);
				fUML_Tests_TestStringFunctions_Value_6_LiteralInteger1699->setName("LiteralInteger1699");
				fUML_Tests_TestStringFunctions_Value_6_LiteralInteger1699->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Value_6_LiteralInteger1699->setValue(6);
			fUML_Tests_TestStringFunctions_Value_6->setValue(fUML_Tests_TestStringFunctions_Value_6_LiteralInteger1699);
				// OutputPin Value(6).result
				fUML_Tests_TestStringFunctions_Value_6_Value_6_result->setThisElementPtr(fUML_Tests_TestStringFunctions_Value_6_Value_6_result);
				fUML_Tests_TestStringFunctions_Value_6_Value_6_result->setName("Value(6).result");
				fUML_Tests_TestStringFunctions_Value_6_Value_6_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Value_6_Value_6_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_Value_6->setResult(fUML_Tests_TestStringFunctions_Value_6_Value_6_result);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Value_6);
			// ForkNode Fork(Value)
			fUML_Tests_TestStringFunctions_Fork_Value->setThisElementPtr(fUML_Tests_TestStringFunctions_Fork_Value);
			fUML_Tests_TestStringFunctions_Fork_Value->setName("Fork(Value)");
			fUML_Tests_TestStringFunctions_Fork_Value->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Fork_Value);
			// CallBehaviorAction Call(Substring)-2
			fUML_Tests_TestStringFunctions_Call_Substringminus2->setThisExecutableNodePtr(fUML_Tests_TestStringFunctions_Call_Substringminus2);
			fUML_Tests_TestStringFunctions_Call_Substringminus2->setName("Call(Substring)-2");
			fUML_Tests_TestStringFunctions_Call_Substringminus2->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestStringFunctions_Call_Substringminus2_result->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Substringminus2_result);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_result->setName("result");
				fUML_Tests_TestStringFunctions_Call_Substringminus2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_result->setLower(0);
			fUML_Tests_TestStringFunctions_Call_Substringminus2->addResult(fUML_Tests_TestStringFunctions_Call_Substringminus2_result);
			fUML_Tests_TestStringFunctions_Call_Substringminus2->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_StringFunctions_Substring);
				// InputPin x
				fUML_Tests_TestStringFunctions_Call_Substringminus2_x->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Substringminus2_x);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_x->setName("x");
				fUML_Tests_TestStringFunctions_Call_Substringminus2_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Call_Substringminus2->addArgument(fUML_Tests_TestStringFunctions_Call_Substringminus2_x);
				// InputPin lower
				fUML_Tests_TestStringFunctions_Call_Substringminus2_lower->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Substringminus2_lower);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_lower->setName("lower");
				fUML_Tests_TestStringFunctions_Call_Substringminus2_lower->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_lower->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_Call_Substringminus2->addArgument(fUML_Tests_TestStringFunctions_Call_Substringminus2_lower);
				// InputPin upper
				fUML_Tests_TestStringFunctions_Call_Substringminus2_upper->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Substringminus2_upper);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_upper->setName("upper");
				fUML_Tests_TestStringFunctions_Call_Substringminus2_upper->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_upper->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_Call_Substringminus2->addArgument(fUML_Tests_TestStringFunctions_Call_Substringminus2_upper);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Call_Substringminus2);
			// ObjectFlow ObjectFlow1661 from Value(5).result to upper
			fUML_Tests_TestStringFunctions_ObjectFlow1661->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow1661);
			fUML_Tests_TestStringFunctions_ObjectFlow1661->setName("ObjectFlow1661");
			fUML_Tests_TestStringFunctions_ObjectFlow1661->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow1661->setSource(fUML_Tests_TestStringFunctions_Value_5_Value_5_result);
			fUML_Tests_TestStringFunctions_ObjectFlow1661->setTarget(fUML_Tests_TestStringFunctions_Call_Substringminus1_upper);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow1661);
			// ObjectFlow ObjectFlow1663 from Value(9).result to upper
			fUML_Tests_TestStringFunctions_ObjectFlow1663->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow1663);
			fUML_Tests_TestStringFunctions_ObjectFlow1663->setName("ObjectFlow1663");
			fUML_Tests_TestStringFunctions_ObjectFlow1663->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow1663->setSource(fUML_Tests_TestStringFunctions_Value_9_Value_9_result);
			fUML_Tests_TestStringFunctions_ObjectFlow1663->setTarget(fUML_Tests_TestStringFunctions_Call_Substringminus2_upper);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow1663);
			// ObjectFlow ObjectFlow1667 from Value(6).result to lower
			fUML_Tests_TestStringFunctions_ObjectFlow1667->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow1667);
			fUML_Tests_TestStringFunctions_ObjectFlow1667->setName("ObjectFlow1667");
			fUML_Tests_TestStringFunctions_ObjectFlow1667->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow1667->setSource(fUML_Tests_TestStringFunctions_Value_6_Value_6_result);
			fUML_Tests_TestStringFunctions_ObjectFlow1667->setTarget(fUML_Tests_TestStringFunctions_Call_Substringminus2_lower);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow1667);
			// ObjectFlow ObjectFlow1669 from Value.result to Fork(Value)
			fUML_Tests_TestStringFunctions_ObjectFlow1669->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow1669);
			fUML_Tests_TestStringFunctions_ObjectFlow1669->setName("ObjectFlow1669");
			fUML_Tests_TestStringFunctions_ObjectFlow1669->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow1669->setSource(fUML_Tests_TestStringFunctions_Value_123456789_Value_result);
			fUML_Tests_TestStringFunctions_ObjectFlow1669->setTarget(fUML_Tests_TestStringFunctions_Fork_Value);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow1669);
			// ObjectFlow ObjectFlow1671 from Fork(Substring-2) to Concat.y
			fUML_Tests_TestStringFunctions_ObjectFlow1671->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow1671);
			fUML_Tests_TestStringFunctions_ObjectFlow1671->setName("ObjectFlow1671");
			fUML_Tests_TestStringFunctions_ObjectFlow1671->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow1671->setSource(fUML_Tests_TestStringFunctions_Fork_Substringminus2);
			fUML_Tests_TestStringFunctions_ObjectFlow1671->setTarget(fUML_Tests_TestStringFunctions_Call_Concat_Concat_y);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow1671);
			// ObjectFlow ObjectFlow1678 from Fork(Value) to x
			fUML_Tests_TestStringFunctions_ObjectFlow1678->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow1678);
			fUML_Tests_TestStringFunctions_ObjectFlow1678->setName("ObjectFlow1678");
			fUML_Tests_TestStringFunctions_ObjectFlow1678->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow1678->setSource(fUML_Tests_TestStringFunctions_Fork_Value);
			fUML_Tests_TestStringFunctions_ObjectFlow1678->setTarget(fUML_Tests_TestStringFunctions_Call_Substringminus2_x);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow1678);
			// ObjectFlow ObjectFlow1682 from result to Fork(Substring-2)
			fUML_Tests_TestStringFunctions_ObjectFlow1682->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow1682);
			fUML_Tests_TestStringFunctions_ObjectFlow1682->setName("ObjectFlow1682");
			fUML_Tests_TestStringFunctions_ObjectFlow1682->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow1682->setSource(fUML_Tests_TestStringFunctions_Call_Substringminus2_result);
			fUML_Tests_TestStringFunctions_ObjectFlow1682->setTarget(fUML_Tests_TestStringFunctions_Fork_Substringminus2);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow1682);
			// ObjectFlow ObjectFlow1634 from Fork(Value) to Size.x
			fUML_Tests_TestStringFunctions_ObjectFlow1634->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow1634);
			fUML_Tests_TestStringFunctions_ObjectFlow1634->setName("ObjectFlow1634");
			fUML_Tests_TestStringFunctions_ObjectFlow1634->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow1634->setSource(fUML_Tests_TestStringFunctions_Fork_Value);
			fUML_Tests_TestStringFunctions_ObjectFlow1634->setTarget(fUML_Tests_TestStringFunctions_Call_Size_Size_x);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow1634);
			// ObjectFlow ObjectFlow1636 from Fork(Substring-1) to Param(Substring1Result)
			fUML_Tests_TestStringFunctions_ObjectFlow1636->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow1636);
			fUML_Tests_TestStringFunctions_ObjectFlow1636->setName("ObjectFlow1636");
			fUML_Tests_TestStringFunctions_ObjectFlow1636->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow1636->setSource(fUML_Tests_TestStringFunctions_Fork_Substringminus1);
			fUML_Tests_TestStringFunctions_ObjectFlow1636->setTarget(fUML_Tests_TestStringFunctions_Param_Substring1Result);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow1636);
			// ObjectFlow ObjectFlow1638 from Concat.result to Param(ConcatResult)
			fUML_Tests_TestStringFunctions_ObjectFlow1638->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow1638);
			fUML_Tests_TestStringFunctions_ObjectFlow1638->setName("ObjectFlow1638");
			fUML_Tests_TestStringFunctions_ObjectFlow1638->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow1638->setSource(fUML_Tests_TestStringFunctions_Call_Concat_Concat_result);
			fUML_Tests_TestStringFunctions_ObjectFlow1638->setTarget(fUML_Tests_TestStringFunctions_Param_ConcatResult);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow1638);
			// ObjectFlow ObjectFlow1692 from Fork(Substring-1) to Concat.x
			fUML_Tests_TestStringFunctions_ObjectFlow1692->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow1692);
			fUML_Tests_TestStringFunctions_ObjectFlow1692->setName("ObjectFlow1692");
			fUML_Tests_TestStringFunctions_ObjectFlow1692->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow1692->setSource(fUML_Tests_TestStringFunctions_Fork_Substringminus1);
			fUML_Tests_TestStringFunctions_ObjectFlow1692->setTarget(fUML_Tests_TestStringFunctions_Call_Concat_Concat_x);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow1692);
			// ObjectFlow ObjectFlow1694 from result to Fork(Substring-1)
			fUML_Tests_TestStringFunctions_ObjectFlow1694->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow1694);
			fUML_Tests_TestStringFunctions_ObjectFlow1694->setName("ObjectFlow1694");
			fUML_Tests_TestStringFunctions_ObjectFlow1694->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow1694->setSource(fUML_Tests_TestStringFunctions_Call_Substringminus1_result);
			fUML_Tests_TestStringFunctions_ObjectFlow1694->setTarget(fUML_Tests_TestStringFunctions_Fork_Substringminus1);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow1694);
			// ObjectFlow ObjectFlow1643 from Size.result to Param(SizeResult)
			fUML_Tests_TestStringFunctions_ObjectFlow1643->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow1643);
			fUML_Tests_TestStringFunctions_ObjectFlow1643->setName("ObjectFlow1643");
			fUML_Tests_TestStringFunctions_ObjectFlow1643->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow1643->setSource(fUML_Tests_TestStringFunctions_Call_Size_Size_result);
			fUML_Tests_TestStringFunctions_ObjectFlow1643->setTarget(fUML_Tests_TestStringFunctions_Param_SizeResult);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow1643);
			// ObjectFlow ObjectFlow1645 from Fork(Substring-2) to Param(Substring2Result)
			fUML_Tests_TestStringFunctions_ObjectFlow1645->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow1645);
			fUML_Tests_TestStringFunctions_ObjectFlow1645->setName("ObjectFlow1645");
			fUML_Tests_TestStringFunctions_ObjectFlow1645->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow1645->setSource(fUML_Tests_TestStringFunctions_Fork_Substringminus2);
			fUML_Tests_TestStringFunctions_ObjectFlow1645->setTarget(fUML_Tests_TestStringFunctions_Param_Substring2Result);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow1645);
			// ObjectFlow ObjectFlow1651 from Value(1).result to lower
			fUML_Tests_TestStringFunctions_ObjectFlow1651->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow1651);
			fUML_Tests_TestStringFunctions_ObjectFlow1651->setName("ObjectFlow1651");
			fUML_Tests_TestStringFunctions_ObjectFlow1651->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow1651->setSource(fUML_Tests_TestStringFunctions_Value_1_Value_1_result);
			fUML_Tests_TestStringFunctions_ObjectFlow1651->setTarget(fUML_Tests_TestStringFunctions_Call_Substringminus1_lower);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow1651);
			// ObjectFlow ObjectFlow1702 from Fork(Value) to x
			fUML_Tests_TestStringFunctions_ObjectFlow1702->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow1702);
			fUML_Tests_TestStringFunctions_ObjectFlow1702->setName("ObjectFlow1702");
			fUML_Tests_TestStringFunctions_ObjectFlow1702->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow1702->setSource(fUML_Tests_TestStringFunctions_Fork_Value);
			fUML_Tests_TestStringFunctions_ObjectFlow1702->setTarget(fUML_Tests_TestStringFunctions_Call_Substringminus1_x);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow1702);
	fUML_Tests->addPackagedElement(fUML_Tests_TestStringFunctions);
}
