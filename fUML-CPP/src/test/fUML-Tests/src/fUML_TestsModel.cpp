/*
 * fUML_TestsModel.cpp
 * 
 * Auto-generated file
 */

#include "fUML_TestsModel.h"

#include <fuml/syntax/values/LiteralReal.h>
#include <fuml/syntax/commonbehavior/CallEvent.h>
#include <fuml/syntax/values/LiteralBoolean.h>
#include <fuml/syntax/actions/ReadStructuralFeatureAction.h>
#include <fuml/syntax/classification/Generalization.h>
#include <fuml/syntax/structuredclassifiers/Class_.h>
#include <fuml/syntax/values/LiteralInteger.h>
#include <fuml/syntax/actions/ValueSpecificationAction.h>
#include <fuml/syntax/commonbehavior/Trigger.h>
#include <fuml/syntax/activities/MergeNode.h>
#include <fuml/syntax/actions/ReplyAction.h>
#include <fuml/syntax/activities/JoinNode.h>
#include <fuml/syntax/actions/UnmarshallAction.h>
#include <fuml/syntax/activities/ControlFlow.h>
#include <fuml/syntax/actions/CreateObjectAction.h>
#include <fuml/syntax/actions/RemoveStructuralFeatureValueAction.h>
#include <utils/library/FoundationalModelLibraryModel.h>
#include <fuml/syntax/actions/DestroyObjectAction.h>
#include <fuml/syntax/activities/DataStoreNode.h>
#include <fuml/syntax/activities/ForkNode.h>
#include <fuml/syntax/actions/SendSignalAction.h>
#include <fuml/syntax/actions/ReclassifyObjectAction.h>
#include <fuml/syntax/actions/StructuredActivityNode.h>
#include <fuml/syntax/actions/CallOperationAction.h>
#include <fuml/syntax/actions/TestIdentityAction.h>
#include <fuml/syntax/activities/ActivityFinalNode.h>
#include <fuml/syntax/activities/InitialNode.h>
#include <fuml/syntax/structuredclassifiers/Association.h>
#include <fuml/syntax/commonbehavior/FunctionBehavior.h>
#include <fuml/syntax/classification/Property.h>
#include <fuml/syntax/actions/AddStructuralFeatureValueAction.h>
#include <fuml/syntax/values/LiteralString.h>
#include <fuml/syntax/actions/AcceptEventAction.h>
#include <fuml/syntax/activities/ActivityParameterNode.h>
#include <fuml/syntax/classification/Parameter.h>
#include <fuml/syntax/values/LiteralUnlimitedNatural.h>
#include <utils/primitivetypes/PrimitiveTypesModel.h>
#include <fuml/syntax/commonstructure/PackageImport.h>
#include <fuml/syntax/actions/LinkEndData.h>
#include <fuml/syntax/commonbehavior/SignalEvent.h>
#include <fuml/syntax/actions/CallBehaviorAction.h>
#include <fuml/syntax/actions/OutputPin.h>
#include <fuml/syntax/simpleclassifiers/PrimitiveType.h>
#include <fuml/syntax/actions/InputPin.h>
#include <fuml/syntax/activities/Activity.h>
#include <fuml/syntax/actions/AcceptCallAction.h>
#include <fuml/syntax/activities/DecisionNode.h>
#include <fuml/syntax/actions/StartObjectBehaviorAction.h>
#include <fuml/syntax/classification/Operation.h>
#include <fuml/syntax/activities/CentralBufferNode.h>
#include <fuml/syntax/simpleclassifiers/Signal.h>
#include <fuml/syntax/actions/ReadLinkAction.h>
#include <fuml/syntax/actions/ReadIsClassifiedObjectAction.h>
#include <fuml/syntax/activities/ObjectFlow.h>
#include <fuml/syntax/actions/ReadSelfAction.h>
#include <fuml/syntax/packages/Package.h>
#include <fuml/syntax/actions/ReadExtentAction.h>


/*
 *	TODO: Generate includes for metaclasses
 */

/* Start of user code : User-defined includes and using directives
 * This section may be used for includes and using directives.
 * It will not be overwritten by future generation processes.
 */

/*
 * End of user code
 */

using namespace fUML_Tests;
using namespace fuml::primitivetypes;
using namespace fuml::library;

/* Start of user code : User-defined members
 * This section may be used for user-defined members,
 * for exmaple implementations of user-defined member functions
 * or definition of static members.
 * It will not be overwritten by future generation processes.
 */

/*
 * End of user code
 */

fUML_TestsModel::fUML_TestsModel()
{
	/* Start of user code : Additional model initializations
 	 * This section may be used to do any additional model initialization,
	 * for example initializing user-defined members.
 	 * It will not be overwritten by future generation processes.
 	 */

	/*
 	 * End of user code
 	 */
}

fUML_TestsModel::~fUML_TestsModel()
{
	/* Start of user code : Additional model cleanup
 	 * This section may be used to do any additional model cleanup,
	 * for example freeing memory for user-defined members.
 	 * It will not be overwritten by future generation processes.
 	 */

	/*
 	 * End of user code
 	 */
}

const std::shared_ptr<fUML_TestsModel>& fUML_TestsModel::Instance()
{
	static std::shared_ptr<fUML_TestsModel> instance = nullptr;

	if(!instance)
	{
		instance.reset(new fUML_TestsModel());
		instance->initializeInMemoryModel();
	}

	return instance;
}

void fUML_TestsModel::initializeInMemoryModel()
{
	// Create public members
	/*
	 * Model fUML_Tests
	 */
	fUML_Tests.reset(new Package());
	this->addToElementRepository("fUML_Tests", fUML_Tests);
		fUML_Tests_OtherSignal.reset(new Signal());
		this->addToElementRepository("OtherSignal", fUML_Tests_OtherSignal);
		fUML_Tests_General.reset(new Class_());
		this->addToElementRepository("General", fUML_Tests_General);
			fUML_Tests_General_y.reset(new Property());
			this->addToElementRepository("y", fUML_Tests_General_y);
		fUML_Tests_TestClassObjectCreator.reset(new Activity());
		this->addToElementRepository("TestClassObjectCreator", fUML_Tests_TestClassObjectCreator);
			fUML_Tests_TestClassObjectCreator_Parameter_result.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(result)", fUML_Tests_TestClassObjectCreator_Parameter_result);
			fUML_Tests_TestClassObjectCreator_ObjectFlow0.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow0", fUML_Tests_TestClassObjectCreator_ObjectFlow0);
				fUML_Tests_TestClassObjectCreator_ObjectFlow0_LiteralInteger1.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1", fUML_Tests_TestClassObjectCreator_ObjectFlow0_LiteralInteger1);
			fUML_Tests_TestClassObjectCreator_Create_TestClass.reset(new CreateObjectAction());
			this->addToElementRepository("Create(TestClass)", fUML_Tests_TestClassObjectCreator_Create_TestClass);
				fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result.reset(new OutputPin());
				this->addToElementRepository("Create(TestClass).result", fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result);
					fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result_LiteralInteger2.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger2", fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result_LiteralInteger2);
					fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result_LiteralUnlimitedNatural3.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural3", fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result_LiteralUnlimitedNatural3);
			fUML_Tests_TestClassObjectCreator_result.reset(new Parameter());
			this->addToElementRepository("result", fUML_Tests_TestClassObjectCreator_result);
				fUML_Tests_TestClassObjectCreator_result_LiteralInteger4.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger4", fUML_Tests_TestClassObjectCreator_result_LiteralInteger4);
				fUML_Tests_TestClassObjectCreator_result_LiteralUnlimitedNatural5.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural5", fUML_Tests_TestClassObjectCreator_result_LiteralUnlimitedNatural5);
		fUML_Tests_TestSignalReceiver.reset(new Activity());
		this->addToElementRepository("TestSignalReceiver", fUML_Tests_TestSignalReceiver);
			fUML_Tests_TestSignalReceiver_ControlFlow6.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow6", fUML_Tests_TestSignalReceiver_ControlFlow6);
				fUML_Tests_TestSignalReceiver_ControlFlow6_LiteralUnlimitedNatural7.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural7", fUML_Tests_TestSignalReceiver_ControlFlow6_LiteralUnlimitedNatural7);
			fUML_Tests_TestSignalReceiver_ReadSelf.reset(new ReadSelfAction());
			this->addToElementRepository("ReadSelf", fUML_Tests_TestSignalReceiver_ReadSelf);
				fUML_Tests_TestSignalReceiver_ReadSelf_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestSignalReceiver_ReadSelf_result);
			fUML_Tests_TestSignalReceiver_Write_signal.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(signal)", fUML_Tests_TestSignalReceiver_Write_signal);
				fUML_Tests_TestSignalReceiver_Write_signal_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestSignalReceiver_Write_signal_value);
				fUML_Tests_TestSignalReceiver_Write_signal_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestSignalReceiver_Write_signal_object);
			fUML_Tests_TestSignalReceiver_Accept_TestSignal.reset(new AcceptEventAction());
			this->addToElementRepository("Accept(TestSignal)", fUML_Tests_TestSignalReceiver_Accept_TestSignal);
				fUML_Tests_TestSignalReceiver_Accept_TestSignal_Trigger8.reset(new Trigger());
				this->addToElementRepository("Trigger8", fUML_Tests_TestSignalReceiver_Accept_TestSignal_Trigger8);
				fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal.reset(new OutputPin());
				this->addToElementRepository("signal", fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal);
					fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal_LiteralInteger9.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger9", fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal_LiteralInteger9);
					fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal_LiteralUnlimitedNatural10.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural10", fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal_LiteralUnlimitedNatural10);
			fUML_Tests_TestSignalReceiver_ControlFlow11.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow11", fUML_Tests_TestSignalReceiver_ControlFlow11);
				fUML_Tests_TestSignalReceiver_ControlFlow11_LiteralUnlimitedNatural12.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural12", fUML_Tests_TestSignalReceiver_ControlFlow11_LiteralUnlimitedNatural12);
			fUML_Tests_TestSignalReceiver_ObjectFlow13.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow13", fUML_Tests_TestSignalReceiver_ObjectFlow13);
				fUML_Tests_TestSignalReceiver_ObjectFlow13_LiteralUnlimitedNatural14.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural14", fUML_Tests_TestSignalReceiver_ObjectFlow13_LiteralUnlimitedNatural14);
			fUML_Tests_TestSignalReceiver_testSignalOut.reset(new Parameter());
			this->addToElementRepository("testSignalOut", fUML_Tests_TestSignalReceiver_testSignalOut);
				fUML_Tests_TestSignalReceiver_testSignalOut_LiteralUnlimitedNatural15.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural15", fUML_Tests_TestSignalReceiver_testSignalOut_LiteralUnlimitedNatural15);
				fUML_Tests_TestSignalReceiver_testSignalOut_LiteralInteger16.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger16", fUML_Tests_TestSignalReceiver_testSignalOut_LiteralInteger16);
			fUML_Tests_TestSignalReceiver_InitialNode17.reset(new InitialNode());
			this->addToElementRepository("InitialNode17", fUML_Tests_TestSignalReceiver_InitialNode17);
			fUML_Tests_TestSignalReceiver_ObjectFlow18.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow18", fUML_Tests_TestSignalReceiver_ObjectFlow18);
				fUML_Tests_TestSignalReceiver_ObjectFlow18_LiteralUnlimitedNatural19.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural19", fUML_Tests_TestSignalReceiver_ObjectFlow18_LiteralUnlimitedNatural19);
			fUML_Tests_TestSignalReceiver_Output_testSignalOut.reset(new ActivityParameterNode());
			this->addToElementRepository("Output(testSignalOut)", fUML_Tests_TestSignalReceiver_Output_testSignalOut);
			fUML_Tests_TestSignalReceiver_ObjectFlow20.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow20", fUML_Tests_TestSignalReceiver_ObjectFlow20);
				fUML_Tests_TestSignalReceiver_ObjectFlow20_LiteralUnlimitedNatural21.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural21", fUML_Tests_TestSignalReceiver_ObjectFlow20_LiteralUnlimitedNatural21);
			fUML_Tests_TestSignalReceiver_signal.reset(new Property());
			this->addToElementRepository("signal", fUML_Tests_TestSignalReceiver_signal);
				fUML_Tests_TestSignalReceiver_signal_LiteralUnlimitedNatural22.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural22", fUML_Tests_TestSignalReceiver_signal_LiteralUnlimitedNatural22);
				fUML_Tests_TestSignalReceiver_signal_LiteralInteger23.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger23", fUML_Tests_TestSignalReceiver_signal_LiteralInteger23);
			fUML_Tests_TestSignalReceiver_ObjectFlow24.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow24", fUML_Tests_TestSignalReceiver_ObjectFlow24);
				fUML_Tests_TestSignalReceiver_ObjectFlow24_LiteralUnlimitedNatural25.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural25", fUML_Tests_TestSignalReceiver_ObjectFlow24_LiteralUnlimitedNatural25);
			fUML_Tests_TestSignalReceiver_Fork_signal.reset(new ForkNode());
			this->addToElementRepository("Fork(signal)", fUML_Tests_TestSignalReceiver_Fork_signal);
		fUML_Tests_TestComposite.reset(new Class_());
		this->addToElementRepository("TestComposite", fUML_Tests_TestComposite);
			fUML_Tests_TestComposite_c1.reset(new Property());
			this->addToElementRepository("c1", fUML_Tests_TestComposite_c1);
		fUML_Tests_TestCompositeObjectDestroyer.reset(new Activity());
		this->addToElementRepository("TestCompositeObjectDestroyer", fUML_Tests_TestCompositeObjectDestroyer);
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode26.reset(new ForkNode());
			this->addToElementRepository("ForkNode26", fUML_Tests_TestCompositeObjectDestroyer_ForkNode26);
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode27.reset(new ForkNode());
			this->addToElementRepository("ForkNode27", fUML_Tests_TestCompositeObjectDestroyer_ForkNode27);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow28.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow28", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow28);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow28_LiteralUnlimitedNatural29.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural29", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow28_LiteralUnlimitedNatural29);
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode30.reset(new ForkNode());
			this->addToElementRepository("ForkNode30", fUML_Tests_TestCompositeObjectDestroyer_ForkNode30);
			fUML_Tests_TestCompositeObjectDestroyer_object2Out.reset(new Parameter());
			this->addToElementRepository("object2Out", fUML_Tests_TestCompositeObjectDestroyer_object2Out);
				fUML_Tests_TestCompositeObjectDestroyer_object2Out_LiteralInteger31.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger31", fUML_Tests_TestCompositeObjectDestroyer_object2Out_LiteralInteger31);
				fUML_Tests_TestCompositeObjectDestroyer_object2Out_LiteralUnlimitedNatural32.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural32", fUML_Tests_TestCompositeObjectDestroyer_object2Out_LiteralUnlimitedNatural32);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow33.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow33", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow33);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow33_LiteralUnlimitedNatural34.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural34", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow33_LiteralUnlimitedNatural34);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow35.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow35", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow35);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow35_LiteralUnlimitedNatural36.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural36", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow35_LiteralUnlimitedNatural36);
			fUML_Tests_TestCompositeObjectDestroyer_object1.reset(new Parameter());
			this->addToElementRepository("object1", fUML_Tests_TestCompositeObjectDestroyer_object1);
				fUML_Tests_TestCompositeObjectDestroyer_object1_LiteralInteger37.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger37", fUML_Tests_TestCompositeObjectDestroyer_object1_LiteralInteger37);
				fUML_Tests_TestCompositeObjectDestroyer_object1_LiteralUnlimitedNatural38.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural38", fUML_Tests_TestCompositeObjectDestroyer_object1_LiteralUnlimitedNatural38);
			fUML_Tests_TestCompositeObjectDestroyer_compositeOut.reset(new Parameter());
			this->addToElementRepository("compositeOut", fUML_Tests_TestCompositeObjectDestroyer_compositeOut);
				fUML_Tests_TestCompositeObjectDestroyer_compositeOut_LiteralInteger39.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger39", fUML_Tests_TestCompositeObjectDestroyer_compositeOut_LiteralInteger39);
				fUML_Tests_TestCompositeObjectDestroyer_compositeOut_LiteralUnlimitedNatural40.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural40", fUML_Tests_TestCompositeObjectDestroyer_compositeOut_LiteralUnlimitedNatural40);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c1.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(c1)", fUML_Tests_TestCompositeObjectDestroyer_Write_c1);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_object.reset(new InputPin());
				this->addToElementRepository("Write(c1).object", fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_object);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_result.reset(new OutputPin());
				this->addToElementRepository("Write(c1).result", fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_result);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_value.reset(new InputPin());
				this->addToElementRepository("Write(c1).value", fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_value);
			fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite.reset(new DestroyObjectAction());
			this->addToElementRepository("Destroy(composite)", fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite);
				fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite_Destroy_composite_target.reset(new InputPin());
				this->addToElementRepository("Destroy(composite).target", fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite_Destroy_composite_target);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow41.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow41", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow41);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow41_LiteralUnlimitedNatural42.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural42", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow41_LiteralUnlimitedNatural42);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow43.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow43", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow43);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow43_LiteralUnlimitedNatural44.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural44", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow43_LiteralUnlimitedNatural44);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2Out.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(object2Out)", fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2Out);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c2.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(c2)", fUML_Tests_TestCompositeObjectDestroyer_Write_c2);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_value.reset(new InputPin());
				this->addToElementRepository("Write(c2).value", fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_value);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_result.reset(new OutputPin());
				this->addToElementRepository("Write(c2).result", fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_result);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_object.reset(new InputPin());
				this->addToElementRepository("Write(c2).object", fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_object);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow45.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow45", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow45);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow45_LiteralUnlimitedNatural46.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural46", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow45_LiteralUnlimitedNatural46);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow47.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow47", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow47);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow47_LiteralUnlimitedNatural48.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural48", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow47_LiteralUnlimitedNatural48);
			fUML_Tests_TestCompositeObjectDestroyer_assocOut.reset(new Parameter());
			this->addToElementRepository("assocOut", fUML_Tests_TestCompositeObjectDestroyer_assocOut);
				fUML_Tests_TestCompositeObjectDestroyer_assocOut_LiteralInteger49.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger49", fUML_Tests_TestCompositeObjectDestroyer_assocOut_LiteralInteger49);
				fUML_Tests_TestCompositeObjectDestroyer_assocOut_LiteralUnlimitedNatural50.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural50", fUML_Tests_TestCompositeObjectDestroyer_assocOut_LiteralUnlimitedNatural50);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(object2)", fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow51.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow51", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow51);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow51_LiteralUnlimitedNatural52.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural52", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow51_LiteralUnlimitedNatural52);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_composite.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(composite)", fUML_Tests_TestCompositeObjectDestroyer_Parameter_composite);
			fUML_Tests_TestCompositeObjectDestroyer_object1Out.reset(new Parameter());
			this->addToElementRepository("object1Out", fUML_Tests_TestCompositeObjectDestroyer_object1Out);
				fUML_Tests_TestCompositeObjectDestroyer_object1Out_LiteralInteger53.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger53", fUML_Tests_TestCompositeObjectDestroyer_object1Out_LiteralInteger53);
				fUML_Tests_TestCompositeObjectDestroyer_object1Out_LiteralUnlimitedNatural54.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural54", fUML_Tests_TestCompositeObjectDestroyer_object1Out_LiteralUnlimitedNatural54);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow55.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow55", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow55);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow55_LiteralUnlimitedNatural56.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural56", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow55_LiteralUnlimitedNatural56);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1Out.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(object1Out)", fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1Out);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_compositeOut.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(compositeOut)", fUML_Tests_TestCompositeObjectDestroyer_Parameter_compositeOut);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow57.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow57", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow57);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow57_LiteralUnlimitedNatural58.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural58", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow57_LiteralUnlimitedNatural58);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow59.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow59", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow59);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow59_LiteralUnlimitedNatural60.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural60", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow59_LiteralUnlimitedNatural60);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow61.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow61", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow61);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow61_LiteralUnlimitedNatural62.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural62", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow61_LiteralUnlimitedNatural62);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(object1)", fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1);
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode63.reset(new ForkNode());
			this->addToElementRepository("ForkNode63", fUML_Tests_TestCompositeObjectDestroyer_ForkNode63);
			fUML_Tests_TestCompositeObjectDestroyer_Read_composite.reset(new ReadLinkAction());
			this->addToElementRepository("Read(composite)", fUML_Tests_TestCompositeObjectDestroyer_Read_composite);
				fUML_Tests_TestCompositeObjectDestroyer_Read_composite_LinkEndData64.reset(new LinkEndData());
				this->addToElementRepository("LinkEndData64", fUML_Tests_TestCompositeObjectDestroyer_Read_composite_LinkEndData64);
				fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_inputValue.reset(new InputPin());
				this->addToElementRepository("Read(Composite).inputValue", fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_inputValue);
				fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_iresult.reset(new OutputPin());
				this->addToElementRepository("Read(Composite).iresult", fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_iresult);
				fUML_Tests_TestCompositeObjectDestroyer_Read_composite_LinkEndData65.reset(new LinkEndData());
				this->addToElementRepository("LinkEndData65", fUML_Tests_TestCompositeObjectDestroyer_Read_composite_LinkEndData65);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_assocOut.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(assocOut)", fUML_Tests_TestCompositeObjectDestroyer_Parameter_assocOut);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow66.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow66", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow66);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow66_LiteralUnlimitedNatural67.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural67", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow66_LiteralUnlimitedNatural67);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow68.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow68", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow68);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow68_LiteralUnlimitedNatural69.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural69", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow68_LiteralUnlimitedNatural69);
			fUML_Tests_TestCompositeObjectDestroyer_object2.reset(new Parameter());
			this->addToElementRepository("object2", fUML_Tests_TestCompositeObjectDestroyer_object2);
				fUML_Tests_TestCompositeObjectDestroyer_object2_LiteralUnlimitedNatural70.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural70", fUML_Tests_TestCompositeObjectDestroyer_object2_LiteralUnlimitedNatural70);
				fUML_Tests_TestCompositeObjectDestroyer_object2_LiteralInteger71.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger71", fUML_Tests_TestCompositeObjectDestroyer_object2_LiteralInteger71);
			fUML_Tests_TestCompositeObjectDestroyer_composite.reset(new Parameter());
			this->addToElementRepository("composite", fUML_Tests_TestCompositeObjectDestroyer_composite);
				fUML_Tests_TestCompositeObjectDestroyer_composite_LiteralInteger72.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger72", fUML_Tests_TestCompositeObjectDestroyer_composite_LiteralInteger72);
				fUML_Tests_TestCompositeObjectDestroyer_composite_LiteralUnlimitedNatural73.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural73", fUML_Tests_TestCompositeObjectDestroyer_composite_LiteralUnlimitedNatural73);
		fUML_Tests_TestStringFunctions.reset(new Activity());
		this->addToElementRepository("TestStringFunctions", fUML_Tests_TestStringFunctions);
			fUML_Tests_TestStringFunctions_ObjectFlow74.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow74", fUML_Tests_TestStringFunctions_ObjectFlow74);
				fUML_Tests_TestStringFunctions_ObjectFlow74_LiteralInteger75.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger75", fUML_Tests_TestStringFunctions_ObjectFlow74_LiteralInteger75);
			fUML_Tests_TestStringFunctions_Param_SizeResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(SizeResult)", fUML_Tests_TestStringFunctions_Param_SizeResult);
			fUML_Tests_TestStringFunctions_ObjectFlow76.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow76", fUML_Tests_TestStringFunctions_ObjectFlow76);
				fUML_Tests_TestStringFunctions_ObjectFlow76_LiteralInteger77.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger77", fUML_Tests_TestStringFunctions_ObjectFlow76_LiteralInteger77);
			fUML_Tests_TestStringFunctions_ObjectFlow78.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow78", fUML_Tests_TestStringFunctions_ObjectFlow78);
				fUML_Tests_TestStringFunctions_ObjectFlow78_LiteralInteger79.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger79", fUML_Tests_TestStringFunctions_ObjectFlow78_LiteralInteger79);
			fUML_Tests_TestStringFunctions_Call_Substringminus1.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Substring)-1", fUML_Tests_TestStringFunctions_Call_Substringminus1);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_upper.reset(new InputPin());
				this->addToElementRepository("upper", fUML_Tests_TestStringFunctions_Call_Substringminus1_upper);
					fUML_Tests_TestStringFunctions_Call_Substringminus1_upper_LiteralInteger80.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger80", fUML_Tests_TestStringFunctions_Call_Substringminus1_upper_LiteralInteger80);
					fUML_Tests_TestStringFunctions_Call_Substringminus1_upper_LiteralUnlimitedNatural81.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural81", fUML_Tests_TestStringFunctions_Call_Substringminus1_upper_LiteralUnlimitedNatural81);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestStringFunctions_Call_Substringminus1_x);
					fUML_Tests_TestStringFunctions_Call_Substringminus1_x_LiteralUnlimitedNatural82.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural82", fUML_Tests_TestStringFunctions_Call_Substringminus1_x_LiteralUnlimitedNatural82);
					fUML_Tests_TestStringFunctions_Call_Substringminus1_x_LiteralInteger83.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger83", fUML_Tests_TestStringFunctions_Call_Substringminus1_x_LiteralInteger83);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_lower.reset(new InputPin());
				this->addToElementRepository("lower", fUML_Tests_TestStringFunctions_Call_Substringminus1_lower);
					fUML_Tests_TestStringFunctions_Call_Substringminus1_lower_LiteralInteger84.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger84", fUML_Tests_TestStringFunctions_Call_Substringminus1_lower_LiteralInteger84);
					fUML_Tests_TestStringFunctions_Call_Substringminus1_lower_LiteralUnlimitedNatural85.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural85", fUML_Tests_TestStringFunctions_Call_Substringminus1_lower_LiteralUnlimitedNatural85);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestStringFunctions_Call_Substringminus1_result);
					fUML_Tests_TestStringFunctions_Call_Substringminus1_result_LiteralInteger86.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger86", fUML_Tests_TestStringFunctions_Call_Substringminus1_result_LiteralInteger86);
					fUML_Tests_TestStringFunctions_Call_Substringminus1_result_LiteralUnlimitedNatural87.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural87", fUML_Tests_TestStringFunctions_Call_Substringminus1_result_LiteralUnlimitedNatural87);
			fUML_Tests_TestStringFunctions_ObjectFlow88.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow88", fUML_Tests_TestStringFunctions_ObjectFlow88);
				fUML_Tests_TestStringFunctions_ObjectFlow88_LiteralInteger89.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger89", fUML_Tests_TestStringFunctions_ObjectFlow88_LiteralInteger89);
			fUML_Tests_TestStringFunctions_ObjectFlow90.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow90", fUML_Tests_TestStringFunctions_ObjectFlow90);
				fUML_Tests_TestStringFunctions_ObjectFlow90_LiteralInteger91.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger91", fUML_Tests_TestStringFunctions_ObjectFlow90_LiteralInteger91);
			fUML_Tests_TestStringFunctions_Value_9.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(9)", fUML_Tests_TestStringFunctions_Value_9);
				fUML_Tests_TestStringFunctions_Value_9_LiteralInteger92.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger92", fUML_Tests_TestStringFunctions_Value_9_LiteralInteger92);
				fUML_Tests_TestStringFunctions_Value_9_Value_9_result.reset(new OutputPin());
				this->addToElementRepository("Value(9).result", fUML_Tests_TestStringFunctions_Value_9_Value_9_result);
					fUML_Tests_TestStringFunctions_Value_9_Value_9_result_LiteralUnlimitedNatural93.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural93", fUML_Tests_TestStringFunctions_Value_9_Value_9_result_LiteralUnlimitedNatural93);
					fUML_Tests_TestStringFunctions_Value_9_Value_9_result_LiteralInteger94.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger94", fUML_Tests_TestStringFunctions_Value_9_Value_9_result_LiteralInteger94);
			fUML_Tests_TestStringFunctions_ObjectFlow95.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow95", fUML_Tests_TestStringFunctions_ObjectFlow95);
				fUML_Tests_TestStringFunctions_ObjectFlow95_LiteralInteger96.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger96", fUML_Tests_TestStringFunctions_ObjectFlow95_LiteralInteger96);
			fUML_Tests_TestStringFunctions_ObjectFlow97.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow97", fUML_Tests_TestStringFunctions_ObjectFlow97);
				fUML_Tests_TestStringFunctions_ObjectFlow97_LiteralInteger98.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger98", fUML_Tests_TestStringFunctions_ObjectFlow97_LiteralInteger98);
			fUML_Tests_TestStringFunctions_Value_6.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(6)", fUML_Tests_TestStringFunctions_Value_6);
				fUML_Tests_TestStringFunctions_Value_6_Value_6_result.reset(new OutputPin());
				this->addToElementRepository("Value(6).result", fUML_Tests_TestStringFunctions_Value_6_Value_6_result);
					fUML_Tests_TestStringFunctions_Value_6_Value_6_result_LiteralUnlimitedNatural99.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural99", fUML_Tests_TestStringFunctions_Value_6_Value_6_result_LiteralUnlimitedNatural99);
					fUML_Tests_TestStringFunctions_Value_6_Value_6_result_LiteralInteger100.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger100", fUML_Tests_TestStringFunctions_Value_6_Value_6_result_LiteralInteger100);
				fUML_Tests_TestStringFunctions_Value_6_LiteralInteger101.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger101", fUML_Tests_TestStringFunctions_Value_6_LiteralInteger101);
			fUML_Tests_TestStringFunctions_ObjectFlow102.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow102", fUML_Tests_TestStringFunctions_ObjectFlow102);
				fUML_Tests_TestStringFunctions_ObjectFlow102_LiteralInteger103.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger103", fUML_Tests_TestStringFunctions_ObjectFlow102_LiteralInteger103);
			fUML_Tests_TestStringFunctions_Substring2Result.reset(new Parameter());
			this->addToElementRepository("Substring2Result", fUML_Tests_TestStringFunctions_Substring2Result);
				fUML_Tests_TestStringFunctions_Substring2Result_LiteralInteger104.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger104", fUML_Tests_TestStringFunctions_Substring2Result_LiteralInteger104);
				fUML_Tests_TestStringFunctions_Substring2Result_LiteralUnlimitedNatural105.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural105", fUML_Tests_TestStringFunctions_Substring2Result_LiteralUnlimitedNatural105);
			fUML_Tests_TestStringFunctions_Value_123456789.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(\"123456789\")", fUML_Tests_TestStringFunctions_Value_123456789);
				fUML_Tests_TestStringFunctions_Value_123456789_LiteralString106.reset(new LiteralString());
				this->addToElementRepository("LiteralString106", fUML_Tests_TestStringFunctions_Value_123456789_LiteralString106);
				fUML_Tests_TestStringFunctions_Value_123456789_Value_result.reset(new OutputPin());
				this->addToElementRepository("Value.result", fUML_Tests_TestStringFunctions_Value_123456789_Value_result);
					fUML_Tests_TestStringFunctions_Value_123456789_Value_result_LiteralInteger107.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger107", fUML_Tests_TestStringFunctions_Value_123456789_Value_result_LiteralInteger107);
					fUML_Tests_TestStringFunctions_Value_123456789_Value_result_LiteralUnlimitedNatural108.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural108", fUML_Tests_TestStringFunctions_Value_123456789_Value_result_LiteralUnlimitedNatural108);
			fUML_Tests_TestStringFunctions_ConcatResult.reset(new Parameter());
			this->addToElementRepository("ConcatResult", fUML_Tests_TestStringFunctions_ConcatResult);
				fUML_Tests_TestStringFunctions_ConcatResult_LiteralInteger109.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger109", fUML_Tests_TestStringFunctions_ConcatResult_LiteralInteger109);
				fUML_Tests_TestStringFunctions_ConcatResult_LiteralUnlimitedNatural110.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural110", fUML_Tests_TestStringFunctions_ConcatResult_LiteralUnlimitedNatural110);
			fUML_Tests_TestStringFunctions_ObjectFlow111.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow111", fUML_Tests_TestStringFunctions_ObjectFlow111);
				fUML_Tests_TestStringFunctions_ObjectFlow111_LiteralInteger112.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger112", fUML_Tests_TestStringFunctions_ObjectFlow111_LiteralInteger112);
			fUML_Tests_TestStringFunctions_Substring1Result.reset(new Parameter());
			this->addToElementRepository("Substring1Result", fUML_Tests_TestStringFunctions_Substring1Result);
				fUML_Tests_TestStringFunctions_Substring1Result_LiteralInteger113.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger113", fUML_Tests_TestStringFunctions_Substring1Result_LiteralInteger113);
				fUML_Tests_TestStringFunctions_Substring1Result_LiteralUnlimitedNatural114.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural114", fUML_Tests_TestStringFunctions_Substring1Result_LiteralUnlimitedNatural114);
			fUML_Tests_TestStringFunctions_Param_ConcatResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(ConcatResult)", fUML_Tests_TestStringFunctions_Param_ConcatResult);
			fUML_Tests_TestStringFunctions_Fork_Value.reset(new ForkNode());
			this->addToElementRepository("Fork(Value)", fUML_Tests_TestStringFunctions_Fork_Value);
			fUML_Tests_TestStringFunctions_Call_Substringminus2.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Substring)-2", fUML_Tests_TestStringFunctions_Call_Substringminus2);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestStringFunctions_Call_Substringminus2_x);
					fUML_Tests_TestStringFunctions_Call_Substringminus2_x_LiteralInteger115.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger115", fUML_Tests_TestStringFunctions_Call_Substringminus2_x_LiteralInteger115);
					fUML_Tests_TestStringFunctions_Call_Substringminus2_x_LiteralUnlimitedNatural116.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural116", fUML_Tests_TestStringFunctions_Call_Substringminus2_x_LiteralUnlimitedNatural116);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_upper.reset(new InputPin());
				this->addToElementRepository("upper", fUML_Tests_TestStringFunctions_Call_Substringminus2_upper);
					fUML_Tests_TestStringFunctions_Call_Substringminus2_upper_LiteralInteger117.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger117", fUML_Tests_TestStringFunctions_Call_Substringminus2_upper_LiteralInteger117);
					fUML_Tests_TestStringFunctions_Call_Substringminus2_upper_LiteralUnlimitedNatural118.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural118", fUML_Tests_TestStringFunctions_Call_Substringminus2_upper_LiteralUnlimitedNatural118);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestStringFunctions_Call_Substringminus2_result);
					fUML_Tests_TestStringFunctions_Call_Substringminus2_result_LiteralUnlimitedNatural119.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural119", fUML_Tests_TestStringFunctions_Call_Substringminus2_result_LiteralUnlimitedNatural119);
					fUML_Tests_TestStringFunctions_Call_Substringminus2_result_LiteralInteger120.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger120", fUML_Tests_TestStringFunctions_Call_Substringminus2_result_LiteralInteger120);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_lower.reset(new InputPin());
				this->addToElementRepository("lower", fUML_Tests_TestStringFunctions_Call_Substringminus2_lower);
					fUML_Tests_TestStringFunctions_Call_Substringminus2_lower_LiteralUnlimitedNatural121.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural121", fUML_Tests_TestStringFunctions_Call_Substringminus2_lower_LiteralUnlimitedNatural121);
					fUML_Tests_TestStringFunctions_Call_Substringminus2_lower_LiteralInteger122.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger122", fUML_Tests_TestStringFunctions_Call_Substringminus2_lower_LiteralInteger122);
			fUML_Tests_TestStringFunctions_Param_Substring2Result.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(Substring2Result)", fUML_Tests_TestStringFunctions_Param_Substring2Result);
			fUML_Tests_TestStringFunctions_ObjectFlow123.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow123", fUML_Tests_TestStringFunctions_ObjectFlow123);
				fUML_Tests_TestStringFunctions_ObjectFlow123_LiteralInteger124.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger124", fUML_Tests_TestStringFunctions_ObjectFlow123_LiteralInteger124);
			fUML_Tests_TestStringFunctions_Fork_Substringminus2.reset(new ForkNode());
			this->addToElementRepository("Fork(Substring-2)", fUML_Tests_TestStringFunctions_Fork_Substringminus2);
			fUML_Tests_TestStringFunctions_ObjectFlow125.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow125", fUML_Tests_TestStringFunctions_ObjectFlow125);
				fUML_Tests_TestStringFunctions_ObjectFlow125_LiteralInteger126.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger126", fUML_Tests_TestStringFunctions_ObjectFlow125_LiteralInteger126);
			fUML_Tests_TestStringFunctions_ObjectFlow127.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow127", fUML_Tests_TestStringFunctions_ObjectFlow127);
				fUML_Tests_TestStringFunctions_ObjectFlow127_LiteralInteger128.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger128", fUML_Tests_TestStringFunctions_ObjectFlow127_LiteralInteger128);
			fUML_Tests_TestStringFunctions_Call_Size.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Size)", fUML_Tests_TestStringFunctions_Call_Size);
				fUML_Tests_TestStringFunctions_Call_Size_Size_x.reset(new InputPin());
				this->addToElementRepository("Size.x", fUML_Tests_TestStringFunctions_Call_Size_Size_x);
					fUML_Tests_TestStringFunctions_Call_Size_Size_x_LiteralInteger129.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger129", fUML_Tests_TestStringFunctions_Call_Size_Size_x_LiteralInteger129);
					fUML_Tests_TestStringFunctions_Call_Size_Size_x_LiteralUnlimitedNatural130.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural130", fUML_Tests_TestStringFunctions_Call_Size_Size_x_LiteralUnlimitedNatural130);
				fUML_Tests_TestStringFunctions_Call_Size_Size_result.reset(new OutputPin());
				this->addToElementRepository("Size.result", fUML_Tests_TestStringFunctions_Call_Size_Size_result);
					fUML_Tests_TestStringFunctions_Call_Size_Size_result_LiteralUnlimitedNatural131.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural131", fUML_Tests_TestStringFunctions_Call_Size_Size_result_LiteralUnlimitedNatural131);
					fUML_Tests_TestStringFunctions_Call_Size_Size_result_LiteralInteger132.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger132", fUML_Tests_TestStringFunctions_Call_Size_Size_result_LiteralInteger132);
			fUML_Tests_TestStringFunctions_Fork_Substringminus1.reset(new ForkNode());
			this->addToElementRepository("Fork(Substring-1)", fUML_Tests_TestStringFunctions_Fork_Substringminus1);
			fUML_Tests_TestStringFunctions_ObjectFlow133.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow133", fUML_Tests_TestStringFunctions_ObjectFlow133);
				fUML_Tests_TestStringFunctions_ObjectFlow133_LiteralInteger134.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger134", fUML_Tests_TestStringFunctions_ObjectFlow133_LiteralInteger134);
			fUML_Tests_TestStringFunctions_Call_Concat.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Concat)", fUML_Tests_TestStringFunctions_Call_Concat);
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_x.reset(new InputPin());
				this->addToElementRepository("Concat.x", fUML_Tests_TestStringFunctions_Call_Concat_Concat_x);
					fUML_Tests_TestStringFunctions_Call_Concat_Concat_x_LiteralInteger135.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger135", fUML_Tests_TestStringFunctions_Call_Concat_Concat_x_LiteralInteger135);
					fUML_Tests_TestStringFunctions_Call_Concat_Concat_x_LiteralUnlimitedNatural136.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural136", fUML_Tests_TestStringFunctions_Call_Concat_Concat_x_LiteralUnlimitedNatural136);
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_result.reset(new OutputPin());
				this->addToElementRepository("Concat.result", fUML_Tests_TestStringFunctions_Call_Concat_Concat_result);
					fUML_Tests_TestStringFunctions_Call_Concat_Concat_result_LiteralUnlimitedNatural137.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural137", fUML_Tests_TestStringFunctions_Call_Concat_Concat_result_LiteralUnlimitedNatural137);
					fUML_Tests_TestStringFunctions_Call_Concat_Concat_result_LiteralInteger138.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger138", fUML_Tests_TestStringFunctions_Call_Concat_Concat_result_LiteralInteger138);
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_y.reset(new InputPin());
				this->addToElementRepository("Concat.y", fUML_Tests_TestStringFunctions_Call_Concat_Concat_y);
					fUML_Tests_TestStringFunctions_Call_Concat_Concat_y_LiteralInteger139.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger139", fUML_Tests_TestStringFunctions_Call_Concat_Concat_y_LiteralInteger139);
					fUML_Tests_TestStringFunctions_Call_Concat_Concat_y_LiteralUnlimitedNatural140.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural140", fUML_Tests_TestStringFunctions_Call_Concat_Concat_y_LiteralUnlimitedNatural140);
			fUML_Tests_TestStringFunctions_SizeResult.reset(new Parameter());
			this->addToElementRepository("SizeResult", fUML_Tests_TestStringFunctions_SizeResult);
				fUML_Tests_TestStringFunctions_SizeResult_LiteralUnlimitedNatural141.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural141", fUML_Tests_TestStringFunctions_SizeResult_LiteralUnlimitedNatural141);
				fUML_Tests_TestStringFunctions_SizeResult_LiteralInteger142.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger142", fUML_Tests_TestStringFunctions_SizeResult_LiteralInteger142);
			fUML_Tests_TestStringFunctions_ObjectFlow143.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow143", fUML_Tests_TestStringFunctions_ObjectFlow143);
				fUML_Tests_TestStringFunctions_ObjectFlow143_LiteralInteger144.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger144", fUML_Tests_TestStringFunctions_ObjectFlow143_LiteralInteger144);
			fUML_Tests_TestStringFunctions_Value_1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)", fUML_Tests_TestStringFunctions_Value_1);
				fUML_Tests_TestStringFunctions_Value_1_Value_1_result.reset(new OutputPin());
				this->addToElementRepository("Value(1).result", fUML_Tests_TestStringFunctions_Value_1_Value_1_result);
					fUML_Tests_TestStringFunctions_Value_1_Value_1_result_LiteralUnlimitedNatural145.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural145", fUML_Tests_TestStringFunctions_Value_1_Value_1_result_LiteralUnlimitedNatural145);
					fUML_Tests_TestStringFunctions_Value_1_Value_1_result_LiteralInteger146.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger146", fUML_Tests_TestStringFunctions_Value_1_Value_1_result_LiteralInteger146);
				fUML_Tests_TestStringFunctions_Value_1_LiteralInteger147.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger147", fUML_Tests_TestStringFunctions_Value_1_LiteralInteger147);
			fUML_Tests_TestStringFunctions_Param_Substring1Result.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(Substring1Result)", fUML_Tests_TestStringFunctions_Param_Substring1Result);
			fUML_Tests_TestStringFunctions_Value_5.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(5)", fUML_Tests_TestStringFunctions_Value_5);
				fUML_Tests_TestStringFunctions_Value_5_Value_5_result.reset(new OutputPin());
				this->addToElementRepository("Value(5).result", fUML_Tests_TestStringFunctions_Value_5_Value_5_result);
					fUML_Tests_TestStringFunctions_Value_5_Value_5_result_LiteralUnlimitedNatural148.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural148", fUML_Tests_TestStringFunctions_Value_5_Value_5_result_LiteralUnlimitedNatural148);
					fUML_Tests_TestStringFunctions_Value_5_Value_5_result_LiteralInteger149.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger149", fUML_Tests_TestStringFunctions_Value_5_Value_5_result_LiteralInteger149);
				fUML_Tests_TestStringFunctions_Value_5_LiteralInteger150.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger150", fUML_Tests_TestStringFunctions_Value_5_LiteralInteger150);
			fUML_Tests_TestStringFunctions_ObjectFlow151.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow151", fUML_Tests_TestStringFunctions_ObjectFlow151);
				fUML_Tests_TestStringFunctions_ObjectFlow151_LiteralInteger152.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger152", fUML_Tests_TestStringFunctions_ObjectFlow151_LiteralInteger152);
			fUML_Tests_TestStringFunctions_ObjectFlow153.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow153", fUML_Tests_TestStringFunctions_ObjectFlow153);
				fUML_Tests_TestStringFunctions_ObjectFlow153_LiteralInteger154.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger154", fUML_Tests_TestStringFunctions_ObjectFlow153_LiteralInteger154);
		fUML_Tests_GenerateListTestData.reset(new Activity());
		this->addToElementRepository("GenerateListTestData", fUML_Tests_GenerateListTestData);
			fUML_Tests_GenerateListTestData_ObjectFlow155.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow155", fUML_Tests_GenerateListTestData_ObjectFlow155);
				fUML_Tests_GenerateListTestData_ObjectFlow155_LiteralInteger156.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger156", fUML_Tests_GenerateListTestData_ObjectFlow155_LiteralInteger156);
			fUML_Tests_GenerateListTestData_ObjectFlow157.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow157", fUML_Tests_GenerateListTestData_ObjectFlow157);
				fUML_Tests_GenerateListTestData_ObjectFlow157_LiteralInteger158.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger158", fUML_Tests_GenerateListTestData_ObjectFlow157_LiteralInteger158);
			fUML_Tests_GenerateListTestData_Value_2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2)", fUML_Tests_GenerateListTestData_Value_2);
				fUML_Tests_GenerateListTestData_Value_2_LiteralInteger159.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger159", fUML_Tests_GenerateListTestData_Value_2_LiteralInteger159);
				fUML_Tests_GenerateListTestData_Value_2_Value_2_result.reset(new OutputPin());
				this->addToElementRepository("Value(2).result", fUML_Tests_GenerateListTestData_Value_2_Value_2_result);
					fUML_Tests_GenerateListTestData_Value_2_Value_2_result_LiteralUnlimitedNatural160.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural160", fUML_Tests_GenerateListTestData_Value_2_Value_2_result_LiteralUnlimitedNatural160);
					fUML_Tests_GenerateListTestData_Value_2_Value_2_result_LiteralInteger161.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger161", fUML_Tests_GenerateListTestData_Value_2_Value_2_result_LiteralInteger161);
			fUML_Tests_GenerateListTestData_Value_3.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(3)", fUML_Tests_GenerateListTestData_Value_3);
				fUML_Tests_GenerateListTestData_Value_3_LiteralInteger162.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger162", fUML_Tests_GenerateListTestData_Value_3_LiteralInteger162);
				fUML_Tests_GenerateListTestData_Value_3_Value_3_result.reset(new OutputPin());
				this->addToElementRepository("Value(3).result", fUML_Tests_GenerateListTestData_Value_3_Value_3_result);
					fUML_Tests_GenerateListTestData_Value_3_Value_3_result_LiteralUnlimitedNatural163.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural163", fUML_Tests_GenerateListTestData_Value_3_Value_3_result_LiteralUnlimitedNatural163);
					fUML_Tests_GenerateListTestData_Value_3_Value_3_result_LiteralInteger164.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger164", fUML_Tests_GenerateListTestData_Value_3_Value_3_result_LiteralInteger164);
			fUML_Tests_GenerateListTestData_list.reset(new Parameter());
			this->addToElementRepository("list", fUML_Tests_GenerateListTestData_list);
				fUML_Tests_GenerateListTestData_list_LiteralUnlimitedNatural165.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural165", fUML_Tests_GenerateListTestData_list_LiteralUnlimitedNatural165);
				fUML_Tests_GenerateListTestData_list_LiteralUnlimitedNatural166.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural166", fUML_Tests_GenerateListTestData_list_LiteralUnlimitedNatural166);
			fUML_Tests_GenerateListTestData_ControlFlow167.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow167", fUML_Tests_GenerateListTestData_ControlFlow167);
				fUML_Tests_GenerateListTestData_ControlFlow167_LiteralInteger168.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger168", fUML_Tests_GenerateListTestData_ControlFlow167_LiteralInteger168);
			fUML_Tests_GenerateListTestData_ControlFlow169.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow169", fUML_Tests_GenerateListTestData_ControlFlow169);
				fUML_Tests_GenerateListTestData_ControlFlow169_LiteralInteger170.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger170", fUML_Tests_GenerateListTestData_ControlFlow169_LiteralInteger170);
			fUML_Tests_GenerateListTestData_Param_list.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(list)", fUML_Tests_GenerateListTestData_Param_list);
			fUML_Tests_GenerateListTestData_ObjectFlow171.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow171", fUML_Tests_GenerateListTestData_ObjectFlow171);
				fUML_Tests_GenerateListTestData_ObjectFlow171_LiteralInteger172.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger172", fUML_Tests_GenerateListTestData_ObjectFlow171_LiteralInteger172);
			fUML_Tests_GenerateListTestData_Value_1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)", fUML_Tests_GenerateListTestData_Value_1);
				fUML_Tests_GenerateListTestData_Value_1_Value_1_result.reset(new OutputPin());
				this->addToElementRepository("Value(1).result", fUML_Tests_GenerateListTestData_Value_1_Value_1_result);
					fUML_Tests_GenerateListTestData_Value_1_Value_1_result_LiteralInteger173.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger173", fUML_Tests_GenerateListTestData_Value_1_Value_1_result_LiteralInteger173);
					fUML_Tests_GenerateListTestData_Value_1_Value_1_result_LiteralUnlimitedNatural174.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural174", fUML_Tests_GenerateListTestData_Value_1_Value_1_result_LiteralUnlimitedNatural174);
				fUML_Tests_GenerateListTestData_Value_1_LiteralInteger175.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger175", fUML_Tests_GenerateListTestData_Value_1_LiteralInteger175);
		fUML_Tests_TestBooleanFunctions.reset(new Activity());
		this->addToElementRepository("TestBooleanFunctions", fUML_Tests_TestBooleanFunctions);
			fUML_Tests_TestBooleanFunctions_GenData3.reset(new CallBehaviorAction());
			this->addToElementRepository("GenData3", fUML_Tests_TestBooleanFunctions_GenData3);
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2.reset(new OutputPin());
				this->addToElementRepository("GenData3.argumentData2", fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2);
					fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2_LiteralUnlimitedNatural176.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural176", fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2_LiteralUnlimitedNatural176);
					fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2_LiteralInteger177.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger177", fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2_LiteralInteger177);
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1.reset(new OutputPin());
				this->addToElementRepository("GenData3.argumentData1", fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1);
					fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1_LiteralUnlimitedNatural178.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural178", fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1_LiteralUnlimitedNatural178);
					fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1_LiteralInteger179.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger179", fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1_LiteralInteger179);
			fUML_Tests_TestBooleanFunctions_Call_And.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(And)", fUML_Tests_TestBooleanFunctions_Call_And);
				fUML_Tests_TestBooleanFunctions_Call_And_And_x.reset(new InputPin());
				this->addToElementRepository("And.x", fUML_Tests_TestBooleanFunctions_Call_And_And_x);
					fUML_Tests_TestBooleanFunctions_Call_And_And_x_LiteralInteger180.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger180", fUML_Tests_TestBooleanFunctions_Call_And_And_x_LiteralInteger180);
					fUML_Tests_TestBooleanFunctions_Call_And_And_x_LiteralUnlimitedNatural181.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural181", fUML_Tests_TestBooleanFunctions_Call_And_And_x_LiteralUnlimitedNatural181);
				fUML_Tests_TestBooleanFunctions_Call_And_And_y.reset(new InputPin());
				this->addToElementRepository("And.y", fUML_Tests_TestBooleanFunctions_Call_And_And_y);
					fUML_Tests_TestBooleanFunctions_Call_And_And_y_LiteralInteger182.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger182", fUML_Tests_TestBooleanFunctions_Call_And_And_y_LiteralInteger182);
					fUML_Tests_TestBooleanFunctions_Call_And_And_y_LiteralUnlimitedNatural183.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural183", fUML_Tests_TestBooleanFunctions_Call_And_And_y_LiteralUnlimitedNatural183);
				fUML_Tests_TestBooleanFunctions_Call_And_And_result.reset(new OutputPin());
				this->addToElementRepository("And.result", fUML_Tests_TestBooleanFunctions_Call_And_And_result);
					fUML_Tests_TestBooleanFunctions_Call_And_And_result_LiteralUnlimitedNatural184.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural184", fUML_Tests_TestBooleanFunctions_Call_And_And_result_LiteralUnlimitedNatural184);
					fUML_Tests_TestBooleanFunctions_Call_And_And_result_LiteralInteger185.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger185", fUML_Tests_TestBooleanFunctions_Call_And_And_result_LiteralInteger185);
			fUML_Tests_TestBooleanFunctions_ControlFlow186.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow186", fUML_Tests_TestBooleanFunctions_ControlFlow186);
				fUML_Tests_TestBooleanFunctions_ControlFlow186_LiteralInteger187.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger187", fUML_Tests_TestBooleanFunctions_ControlFlow186_LiteralInteger187);
			fUML_Tests_TestBooleanFunctions_ObjectFlow188.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow188", fUML_Tests_TestBooleanFunctions_ObjectFlow188);
				fUML_Tests_TestBooleanFunctions_ObjectFlow188_LiteralInteger189.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger189", fUML_Tests_TestBooleanFunctions_ObjectFlow188_LiteralInteger189);
			fUML_Tests_TestBooleanFunctions_GenData1.reset(new CallBehaviorAction());
			this->addToElementRepository("GenData1", fUML_Tests_TestBooleanFunctions_GenData1);
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1.reset(new OutputPin());
				this->addToElementRepository("GenData1.argumentData1", fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1);
					fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1_LiteralUnlimitedNatural190.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural190", fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1_LiteralUnlimitedNatural190);
					fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1_LiteralInteger191.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger191", fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1_LiteralInteger191);
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2.reset(new OutputPin());
				this->addToElementRepository("GenData1.argumentData2", fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2);
					fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2_LiteralUnlimitedNatural192.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural192", fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2_LiteralUnlimitedNatural192);
					fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2_LiteralInteger193.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger193", fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2_LiteralInteger193);
			fUML_Tests_TestBooleanFunctions_Value_true.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(true)", fUML_Tests_TestBooleanFunctions_Value_true);
				fUML_Tests_TestBooleanFunctions_Value_true_LiteralBoolean194.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean194", fUML_Tests_TestBooleanFunctions_Value_true_LiteralBoolean194);
				fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result.reset(new OutputPin());
				this->addToElementRepository("Value(true).result", fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result);
					fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result_LiteralUnlimitedNatural195.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural195", fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result_LiteralUnlimitedNatural195);
					fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result_LiteralInteger196.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger196", fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result_LiteralInteger196);
			fUML_Tests_TestBooleanFunctions_Param_OrResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(OrResult)", fUML_Tests_TestBooleanFunctions_Param_OrResult);
			fUML_Tests_TestBooleanFunctions_XorResult.reset(new Parameter());
			this->addToElementRepository("XorResult", fUML_Tests_TestBooleanFunctions_XorResult);
				fUML_Tests_TestBooleanFunctions_XorResult_LiteralUnlimitedNatural197.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural197", fUML_Tests_TestBooleanFunctions_XorResult_LiteralUnlimitedNatural197);
				fUML_Tests_TestBooleanFunctions_XorResult_LiteralUnlimitedNatural198.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural198", fUML_Tests_TestBooleanFunctions_XorResult_LiteralUnlimitedNatural198);
			fUML_Tests_TestBooleanFunctions_ImpliesResult.reset(new Parameter());
			this->addToElementRepository("ImpliesResult", fUML_Tests_TestBooleanFunctions_ImpliesResult);
				fUML_Tests_TestBooleanFunctions_ImpliesResult_LiteralUnlimitedNatural199.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural199", fUML_Tests_TestBooleanFunctions_ImpliesResult_LiteralUnlimitedNatural199);
				fUML_Tests_TestBooleanFunctions_ImpliesResult_LiteralUnlimitedNatural200.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural200", fUML_Tests_TestBooleanFunctions_ImpliesResult_LiteralUnlimitedNatural200);
			fUML_Tests_TestBooleanFunctions_ObjectFlow201.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow201", fUML_Tests_TestBooleanFunctions_ObjectFlow201);
				fUML_Tests_TestBooleanFunctions_ObjectFlow201_LiteralInteger202.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger202", fUML_Tests_TestBooleanFunctions_ObjectFlow201_LiteralInteger202);
			fUML_Tests_TestBooleanFunctions_Call_Implies.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Implies)", fUML_Tests_TestBooleanFunctions_Call_Implies);
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x.reset(new InputPin());
				this->addToElementRepository("Implies.x", fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x);
					fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x_LiteralInteger203.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger203", fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x_LiteralInteger203);
					fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x_LiteralUnlimitedNatural204.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural204", fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x_LiteralUnlimitedNatural204);
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y.reset(new InputPin());
				this->addToElementRepository("Implies.y", fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y);
					fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y_LiteralInteger205.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger205", fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y_LiteralInteger205);
					fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y_LiteralUnlimitedNatural206.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural206", fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y_LiteralUnlimitedNatural206);
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result.reset(new OutputPin());
				this->addToElementRepository("Implies.result", fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result);
					fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result_LiteralUnlimitedNatural207.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural207", fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result_LiteralUnlimitedNatural207);
					fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result_LiteralInteger208.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger208", fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result_LiteralInteger208);
			fUML_Tests_TestBooleanFunctions_Value_false.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(false)", fUML_Tests_TestBooleanFunctions_Value_false);
				fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result.reset(new OutputPin());
				this->addToElementRepository("Value(false).result", fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result);
					fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result_LiteralUnlimitedNatural209.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural209", fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result_LiteralUnlimitedNatural209);
					fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result_LiteralInteger210.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger210", fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result_LiteralInteger210);
				fUML_Tests_TestBooleanFunctions_Value_false_LiteralBoolean211.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean211", fUML_Tests_TestBooleanFunctions_Value_false_LiteralBoolean211);
			fUML_Tests_TestBooleanFunctions_ObjectFlow212.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow212", fUML_Tests_TestBooleanFunctions_ObjectFlow212);
				fUML_Tests_TestBooleanFunctions_ObjectFlow212_LiteralInteger213.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger213", fUML_Tests_TestBooleanFunctions_ObjectFlow212_LiteralInteger213);
			fUML_Tests_TestBooleanFunctions_Param_NotResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(NotResult)", fUML_Tests_TestBooleanFunctions_Param_NotResult);
			fUML_Tests_TestBooleanFunctions_ControlFlow214.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow214", fUML_Tests_TestBooleanFunctions_ControlFlow214);
				fUML_Tests_TestBooleanFunctions_ControlFlow214_LiteralInteger215.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger215", fUML_Tests_TestBooleanFunctions_ControlFlow214_LiteralInteger215);
			fUML_Tests_TestBooleanFunctions_ObjectFlow216.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow216", fUML_Tests_TestBooleanFunctions_ObjectFlow216);
				fUML_Tests_TestBooleanFunctions_ObjectFlow216_LiteralInteger217.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger217", fUML_Tests_TestBooleanFunctions_ObjectFlow216_LiteralInteger217);
			fUML_Tests_TestBooleanFunctions_GenData4.reset(new CallBehaviorAction());
			this->addToElementRepository("GenData4", fUML_Tests_TestBooleanFunctions_GenData4);
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1.reset(new OutputPin());
				this->addToElementRepository("GenData4.argumentData1", fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1);
					fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1_LiteralUnlimitedNatural218.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural218", fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1_LiteralUnlimitedNatural218);
					fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1_LiteralInteger219.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger219", fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1_LiteralInteger219);
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2.reset(new OutputPin());
				this->addToElementRepository("GenData4.argumentData2", fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2);
					fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2_LiteralUnlimitedNatural220.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural220", fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2_LiteralUnlimitedNatural220);
					fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2_LiteralInteger221.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger221", fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2_LiteralInteger221);
			fUML_Tests_TestBooleanFunctions_ControlFlow222.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow222", fUML_Tests_TestBooleanFunctions_ControlFlow222);
				fUML_Tests_TestBooleanFunctions_ControlFlow222_LiteralInteger223.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger223", fUML_Tests_TestBooleanFunctions_ControlFlow222_LiteralInteger223);
			fUML_Tests_TestBooleanFunctions_ControlFlow224.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow224", fUML_Tests_TestBooleanFunctions_ControlFlow224);
				fUML_Tests_TestBooleanFunctions_ControlFlow224_LiteralInteger225.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger225", fUML_Tests_TestBooleanFunctions_ControlFlow224_LiteralInteger225);
			fUML_Tests_TestBooleanFunctions_ObjectFlow226.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow226", fUML_Tests_TestBooleanFunctions_ObjectFlow226);
				fUML_Tests_TestBooleanFunctions_ObjectFlow226_LiteralInteger227.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger227", fUML_Tests_TestBooleanFunctions_ObjectFlow226_LiteralInteger227);
			fUML_Tests_TestBooleanFunctions_NotResult.reset(new Parameter());
			this->addToElementRepository("NotResult", fUML_Tests_TestBooleanFunctions_NotResult);
				fUML_Tests_TestBooleanFunctions_NotResult_LiteralUnlimitedNatural228.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural228", fUML_Tests_TestBooleanFunctions_NotResult_LiteralUnlimitedNatural228);
				fUML_Tests_TestBooleanFunctions_NotResult_LiteralUnlimitedNatural229.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural229", fUML_Tests_TestBooleanFunctions_NotResult_LiteralUnlimitedNatural229);
			fUML_Tests_TestBooleanFunctions_ObjectFlow230.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow230", fUML_Tests_TestBooleanFunctions_ObjectFlow230);
				fUML_Tests_TestBooleanFunctions_ObjectFlow230_LiteralInteger231.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger231", fUML_Tests_TestBooleanFunctions_ObjectFlow230_LiteralInteger231);
			fUML_Tests_TestBooleanFunctions_OrResult.reset(new Parameter());
			this->addToElementRepository("OrResult", fUML_Tests_TestBooleanFunctions_OrResult);
				fUML_Tests_TestBooleanFunctions_OrResult_LiteralUnlimitedNatural232.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural232", fUML_Tests_TestBooleanFunctions_OrResult_LiteralUnlimitedNatural232);
				fUML_Tests_TestBooleanFunctions_OrResult_LiteralUnlimitedNatural233.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural233", fUML_Tests_TestBooleanFunctions_OrResult_LiteralUnlimitedNatural233);
			fUML_Tests_TestBooleanFunctions_Call_Xor.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Xor)", fUML_Tests_TestBooleanFunctions_Call_Xor);
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y.reset(new InputPin());
				this->addToElementRepository("Xor.y", fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y);
					fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y_LiteralUnlimitedNatural234.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural234", fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y_LiteralUnlimitedNatural234);
					fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y_LiteralInteger235.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger235", fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y_LiteralInteger235);
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result.reset(new OutputPin());
				this->addToElementRepository("Xor.result", fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result);
					fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result_LiteralInteger236.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger236", fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result_LiteralInteger236);
					fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result_LiteralUnlimitedNatural237.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural237", fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result_LiteralUnlimitedNatural237);
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x.reset(new InputPin());
				this->addToElementRepository("Xor.x", fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x);
					fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x_LiteralUnlimitedNatural238.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural238", fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x_LiteralUnlimitedNatural238);
					fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x_LiteralInteger239.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger239", fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x_LiteralInteger239);
			fUML_Tests_TestBooleanFunctions_ObjectFlow240.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow240", fUML_Tests_TestBooleanFunctions_ObjectFlow240);
				fUML_Tests_TestBooleanFunctions_ObjectFlow240_LiteralInteger241.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger241", fUML_Tests_TestBooleanFunctions_ObjectFlow240_LiteralInteger241);
			fUML_Tests_TestBooleanFunctions_ObjectFlow242.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow242", fUML_Tests_TestBooleanFunctions_ObjectFlow242);
				fUML_Tests_TestBooleanFunctions_ObjectFlow242_LiteralInteger243.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger243", fUML_Tests_TestBooleanFunctions_ObjectFlow242_LiteralInteger243);
			fUML_Tests_TestBooleanFunctions_Param_ImpliesResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(ImpliesResult)", fUML_Tests_TestBooleanFunctions_Param_ImpliesResult);
			fUML_Tests_TestBooleanFunctions_ObjectFlow244.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow244", fUML_Tests_TestBooleanFunctions_ObjectFlow244);
				fUML_Tests_TestBooleanFunctions_ObjectFlow244_LiteralInteger245.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger245", fUML_Tests_TestBooleanFunctions_ObjectFlow244_LiteralInteger245);
			fUML_Tests_TestBooleanFunctions_Call_Or.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Or)", fUML_Tests_TestBooleanFunctions_Call_Or);
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_y.reset(new InputPin());
				this->addToElementRepository("Or.y", fUML_Tests_TestBooleanFunctions_Call_Or_Or_y);
					fUML_Tests_TestBooleanFunctions_Call_Or_Or_y_LiteralInteger246.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger246", fUML_Tests_TestBooleanFunctions_Call_Or_Or_y_LiteralInteger246);
					fUML_Tests_TestBooleanFunctions_Call_Or_Or_y_LiteralUnlimitedNatural247.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural247", fUML_Tests_TestBooleanFunctions_Call_Or_Or_y_LiteralUnlimitedNatural247);
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_x.reset(new InputPin());
				this->addToElementRepository("Or.x", fUML_Tests_TestBooleanFunctions_Call_Or_Or_x);
					fUML_Tests_TestBooleanFunctions_Call_Or_Or_x_LiteralInteger248.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger248", fUML_Tests_TestBooleanFunctions_Call_Or_Or_x_LiteralInteger248);
					fUML_Tests_TestBooleanFunctions_Call_Or_Or_x_LiteralUnlimitedNatural249.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural249", fUML_Tests_TestBooleanFunctions_Call_Or_Or_x_LiteralUnlimitedNatural249);
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_result.reset(new OutputPin());
				this->addToElementRepository("Or.result", fUML_Tests_TestBooleanFunctions_Call_Or_Or_result);
					fUML_Tests_TestBooleanFunctions_Call_Or_Or_result_LiteralInteger250.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger250", fUML_Tests_TestBooleanFunctions_Call_Or_Or_result_LiteralInteger250);
					fUML_Tests_TestBooleanFunctions_Call_Or_Or_result_LiteralUnlimitedNatural251.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural251", fUML_Tests_TestBooleanFunctions_Call_Or_Or_result_LiteralUnlimitedNatural251);
			fUML_Tests_TestBooleanFunctions_Call_Not.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Not)", fUML_Tests_TestBooleanFunctions_Call_Not);
				fUML_Tests_TestBooleanFunctions_Call_Not_Not_x.reset(new InputPin());
				this->addToElementRepository("Not.x", fUML_Tests_TestBooleanFunctions_Call_Not_Not_x);
					fUML_Tests_TestBooleanFunctions_Call_Not_Not_x_LiteralUnlimitedNatural252.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural252", fUML_Tests_TestBooleanFunctions_Call_Not_Not_x_LiteralUnlimitedNatural252);
					fUML_Tests_TestBooleanFunctions_Call_Not_Not_x_LiteralInteger253.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger253", fUML_Tests_TestBooleanFunctions_Call_Not_Not_x_LiteralInteger253);
				fUML_Tests_TestBooleanFunctions_Call_Not_Not_result.reset(new OutputPin());
				this->addToElementRepository("Not.result", fUML_Tests_TestBooleanFunctions_Call_Not_Not_result);
					fUML_Tests_TestBooleanFunctions_Call_Not_Not_result_LiteralUnlimitedNatural254.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural254", fUML_Tests_TestBooleanFunctions_Call_Not_Not_result_LiteralUnlimitedNatural254);
					fUML_Tests_TestBooleanFunctions_Call_Not_Not_result_LiteralInteger255.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger255", fUML_Tests_TestBooleanFunctions_Call_Not_Not_result_LiteralInteger255);
			fUML_Tests_TestBooleanFunctions_ObjectFlow256.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow256", fUML_Tests_TestBooleanFunctions_ObjectFlow256);
				fUML_Tests_TestBooleanFunctions_ObjectFlow256_LiteralInteger257.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger257", fUML_Tests_TestBooleanFunctions_ObjectFlow256_LiteralInteger257);
			fUML_Tests_TestBooleanFunctions_ObjectFlow258.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow258", fUML_Tests_TestBooleanFunctions_ObjectFlow258);
				fUML_Tests_TestBooleanFunctions_ObjectFlow258_LiteralInteger259.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger259", fUML_Tests_TestBooleanFunctions_ObjectFlow258_LiteralInteger259);
			fUML_Tests_TestBooleanFunctions_ObjectFlow260.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow260", fUML_Tests_TestBooleanFunctions_ObjectFlow260);
				fUML_Tests_TestBooleanFunctions_ObjectFlow260_LiteralInteger261.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger261", fUML_Tests_TestBooleanFunctions_ObjectFlow260_LiteralInteger261);
			fUML_Tests_TestBooleanFunctions_GenData2.reset(new CallBehaviorAction());
			this->addToElementRepository("GenData2", fUML_Tests_TestBooleanFunctions_GenData2);
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1.reset(new OutputPin());
				this->addToElementRepository("GenData2.argumentData1", fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1);
					fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1_LiteralUnlimitedNatural262.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural262", fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1_LiteralUnlimitedNatural262);
					fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1_LiteralInteger263.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger263", fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1_LiteralInteger263);
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2.reset(new OutputPin());
				this->addToElementRepository("GenData2.argumentData2", fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2);
					fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2_LiteralInteger264.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger264", fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2_LiteralInteger264);
					fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2_LiteralUnlimitedNatural265.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural265", fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2_LiteralUnlimitedNatural265);
			fUML_Tests_TestBooleanFunctions_AndResult.reset(new Parameter());
			this->addToElementRepository("AndResult", fUML_Tests_TestBooleanFunctions_AndResult);
				fUML_Tests_TestBooleanFunctions_AndResult_LiteralUnlimitedNatural266.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural266", fUML_Tests_TestBooleanFunctions_AndResult_LiteralUnlimitedNatural266);
				fUML_Tests_TestBooleanFunctions_AndResult_LiteralUnlimitedNatural267.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural267", fUML_Tests_TestBooleanFunctions_AndResult_LiteralUnlimitedNatural267);
			fUML_Tests_TestBooleanFunctions_Param_XorResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(XorResult)", fUML_Tests_TestBooleanFunctions_Param_XorResult);
			fUML_Tests_TestBooleanFunctions_ControlFlow268.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow268", fUML_Tests_TestBooleanFunctions_ControlFlow268);
				fUML_Tests_TestBooleanFunctions_ControlFlow268_LiteralInteger269.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger269", fUML_Tests_TestBooleanFunctions_ControlFlow268_LiteralInteger269);
			fUML_Tests_TestBooleanFunctions_Param_AndResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(AndResult)", fUML_Tests_TestBooleanFunctions_Param_AndResult);
			fUML_Tests_TestBooleanFunctions_ObjectFlow270.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow270", fUML_Tests_TestBooleanFunctions_ObjectFlow270);
				fUML_Tests_TestBooleanFunctions_ObjectFlow270_LiteralInteger271.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger271", fUML_Tests_TestBooleanFunctions_ObjectFlow270_LiteralInteger271);
			fUML_Tests_TestBooleanFunctions_ObjectFlow272.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow272", fUML_Tests_TestBooleanFunctions_ObjectFlow272);
				fUML_Tests_TestBooleanFunctions_ObjectFlow272_LiteralInteger273.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger273", fUML_Tests_TestBooleanFunctions_ObjectFlow272_LiteralInteger273);
			fUML_Tests_TestBooleanFunctions_ObjectFlow274.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow274", fUML_Tests_TestBooleanFunctions_ObjectFlow274);
				fUML_Tests_TestBooleanFunctions_ObjectFlow274_LiteralInteger275.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger275", fUML_Tests_TestBooleanFunctions_ObjectFlow274_LiteralInteger275);
		fUML_Tests_TestNodeEnabler.reset(new Activity());
		this->addToElementRepository("TestNodeEnabler", fUML_Tests_TestNodeEnabler);
			fUML_Tests_TestNodeEnabler_output.reset(new Parameter());
			this->addToElementRepository("output", fUML_Tests_TestNodeEnabler_output);
				fUML_Tests_TestNodeEnabler_output_LiteralInteger276.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger276", fUML_Tests_TestNodeEnabler_output_LiteralInteger276);
				fUML_Tests_TestNodeEnabler_output_LiteralUnlimitedNatural277.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural277", fUML_Tests_TestNodeEnabler_output_LiteralUnlimitedNatural277);
			fUML_Tests_TestNodeEnabler_ObjectFlow278.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow278", fUML_Tests_TestNodeEnabler_ObjectFlow278);
				fUML_Tests_TestNodeEnabler_ObjectFlow278_LiteralUnlimitedNatural279.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural279", fUML_Tests_TestNodeEnabler_ObjectFlow278_LiteralUnlimitedNatural279);
			fUML_Tests_TestNodeEnabler_outputNode.reset(new ActivityParameterNode());
			this->addToElementRepository("outputNode", fUML_Tests_TestNodeEnabler_outputNode);
			fUML_Tests_TestNodeEnabler_Value_1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)", fUML_Tests_TestNodeEnabler_Value_1);
				fUML_Tests_TestNodeEnabler_Value_1_Value_1_result.reset(new OutputPin());
				this->addToElementRepository("Value(1).result", fUML_Tests_TestNodeEnabler_Value_1_Value_1_result);
				fUML_Tests_TestNodeEnabler_Value_1_LiteralInteger280.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger280", fUML_Tests_TestNodeEnabler_Value_1_LiteralInteger280);
			fUML_Tests_TestNodeEnabler_Call_NodeEnabler.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(NodeEnabler)", fUML_Tests_TestNodeEnabler_Call_NodeEnabler);
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input.reset(new InputPin());
				this->addToElementRepository("Call(NodeEnabler).input", fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input);
					fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input_LiteralInteger281.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger281", fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input_LiteralInteger281);
					fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input_LiteralUnlimitedNatural282.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural282", fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input_LiteralUnlimitedNatural282);
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output.reset(new OutputPin());
				this->addToElementRepository("Call(NodeEnabler).output", fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output);
					fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output_LiteralInteger283.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger283", fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output_LiteralInteger283);
					fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output_LiteralUnlimitedNatural284.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural284", fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output_LiteralUnlimitedNatural284);
			fUML_Tests_TestNodeEnabler_ObjectFlow285.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow285", fUML_Tests_TestNodeEnabler_ObjectFlow285);
				fUML_Tests_TestNodeEnabler_ObjectFlow285_LiteralUnlimitedNatural286.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural286", fUML_Tests_TestNodeEnabler_ObjectFlow285_LiteralUnlimitedNatural286);
		fUML_Tests_TestIntegerFunctions.reset(new Activity());
		this->addToElementRepository("TestIntegerFunctions", fUML_Tests_TestIntegerFunctions);
			fUML_Tests_TestIntegerFunctions_Param_NegResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(NegResult)", fUML_Tests_TestIntegerFunctions_Param_NegResult);
			fUML_Tests_TestIntegerFunctions_Call_Max.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Max)", fUML_Tests_TestIntegerFunctions_Call_Max);
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_x.reset(new InputPin());
				this->addToElementRepository("Max.x", fUML_Tests_TestIntegerFunctions_Call_Max_Max_x);
					fUML_Tests_TestIntegerFunctions_Call_Max_Max_x_LiteralUnlimitedNatural287.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural287", fUML_Tests_TestIntegerFunctions_Call_Max_Max_x_LiteralUnlimitedNatural287);
					fUML_Tests_TestIntegerFunctions_Call_Max_Max_x_LiteralInteger288.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger288", fUML_Tests_TestIntegerFunctions_Call_Max_Max_x_LiteralInteger288);
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_y.reset(new InputPin());
				this->addToElementRepository("Max.y", fUML_Tests_TestIntegerFunctions_Call_Max_Max_y);
					fUML_Tests_TestIntegerFunctions_Call_Max_Max_y_LiteralInteger289.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger289", fUML_Tests_TestIntegerFunctions_Call_Max_Max_y_LiteralInteger289);
					fUML_Tests_TestIntegerFunctions_Call_Max_Max_y_LiteralUnlimitedNatural290.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural290", fUML_Tests_TestIntegerFunctions_Call_Max_Max_y_LiteralUnlimitedNatural290);
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_result.reset(new OutputPin());
				this->addToElementRepository("Max.result", fUML_Tests_TestIntegerFunctions_Call_Max_Max_result);
					fUML_Tests_TestIntegerFunctions_Call_Max_Max_result_LiteralInteger291.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger291", fUML_Tests_TestIntegerFunctions_Call_Max_Max_result_LiteralInteger291);
					fUML_Tests_TestIntegerFunctions_Call_Max_Max_result_LiteralUnlimitedNatural292.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural292", fUML_Tests_TestIntegerFunctions_Call_Max_Max_result_LiteralUnlimitedNatural292);
			fUML_Tests_TestIntegerFunctions_ObjectFlow293.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow293", fUML_Tests_TestIntegerFunctions_ObjectFlow293);
				fUML_Tests_TestIntegerFunctions_ObjectFlow293_LiteralInteger294.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger294", fUML_Tests_TestIntegerFunctions_ObjectFlow293_LiteralInteger294);
			fUML_Tests_TestIntegerFunctions_ObjectFlow295.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow295", fUML_Tests_TestIntegerFunctions_ObjectFlow295);
				fUML_Tests_TestIntegerFunctions_ObjectFlow295_LiteralInteger296.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger296", fUML_Tests_TestIntegerFunctions_ObjectFlow295_LiteralInteger296);
			fUML_Tests_TestIntegerFunctions_ObjectFlow297.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow297", fUML_Tests_TestIntegerFunctions_ObjectFlow297);
				fUML_Tests_TestIntegerFunctions_ObjectFlow297_LiteralInteger298.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger298", fUML_Tests_TestIntegerFunctions_ObjectFlow297_LiteralInteger298);
			fUML_Tests_TestIntegerFunctions_ControlFlow299.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow299", fUML_Tests_TestIntegerFunctions_ControlFlow299);
				fUML_Tests_TestIntegerFunctions_ControlFlow299_LiteralInteger300.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger300", fUML_Tests_TestIntegerFunctions_ControlFlow299_LiteralInteger300);
			fUML_Tests_TestIntegerFunctions_Param_ModResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(ModResult)", fUML_Tests_TestIntegerFunctions_Param_ModResult);
			fUML_Tests_TestIntegerFunctions_ControlFlow301.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow301", fUML_Tests_TestIntegerFunctions_ControlFlow301);
				fUML_Tests_TestIntegerFunctions_ControlFlow301_LiteralInteger302.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger302", fUML_Tests_TestIntegerFunctions_ControlFlow301_LiteralInteger302);
			fUML_Tests_TestIntegerFunctions_PlusResult.reset(new Parameter());
			this->addToElementRepository("PlusResult", fUML_Tests_TestIntegerFunctions_PlusResult);
			fUML_Tests_TestIntegerFunctions_ObjectFlow303.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow303", fUML_Tests_TestIntegerFunctions_ObjectFlow303);
				fUML_Tests_TestIntegerFunctions_ObjectFlow303_LiteralInteger304.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger304", fUML_Tests_TestIntegerFunctions_ObjectFlow303_LiteralInteger304);
			fUML_Tests_TestIntegerFunctions_MaxResult.reset(new Parameter());
			this->addToElementRepository("MaxResult", fUML_Tests_TestIntegerFunctions_MaxResult);
			fUML_Tests_TestIntegerFunctions_Value_2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2)", fUML_Tests_TestIntegerFunctions_Value_2);
				fUML_Tests_TestIntegerFunctions_Value_2_LiteralInteger305.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger305", fUML_Tests_TestIntegerFunctions_Value_2_LiteralInteger305);
				fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result.reset(new OutputPin());
				this->addToElementRepository("Value(2).result", fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result);
					fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result_LiteralUnlimitedNatural306.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural306", fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result_LiteralUnlimitedNatural306);
			fUML_Tests_TestIntegerFunctions_Call_Neg.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Neg)", fUML_Tests_TestIntegerFunctions_Call_Neg);
				fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result.reset(new OutputPin());
				this->addToElementRepository("Neg.result", fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result);
					fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result_LiteralInteger307.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger307", fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result_LiteralInteger307);
					fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result_LiteralUnlimitedNatural308.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural308", fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result_LiteralUnlimitedNatural308);
				fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x.reset(new InputPin());
				this->addToElementRepository("Neg.x", fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x);
					fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x_LiteralUnlimitedNatural309.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural309", fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x_LiteralUnlimitedNatural309);
					fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x_LiteralInteger310.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger310", fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x_LiteralInteger310);
			fUML_Tests_TestIntegerFunctions_Call_Plus.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Plus)", fUML_Tests_TestIntegerFunctions_Call_Plus);
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result.reset(new OutputPin());
				this->addToElementRepository("Plus.result", fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result);
					fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result_LiteralInteger311.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger311", fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result_LiteralInteger311);
					fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result_LiteralUnlimitedNatural312.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural312", fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result_LiteralUnlimitedNatural312);
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y.reset(new InputPin());
				this->addToElementRepository("Plus.y", fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y);
					fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y_LiteralInteger313.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger313", fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y_LiteralInteger313);
					fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y_LiteralUnlimitedNatural314.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural314", fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y_LiteralUnlimitedNatural314);
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x.reset(new InputPin());
				this->addToElementRepository("Plus.x", fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x);
					fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x_LiteralUnlimitedNatural315.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural315", fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x_LiteralUnlimitedNatural315);
					fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x_LiteralInteger316.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger316", fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x_LiteralInteger316);
			fUML_Tests_TestIntegerFunctions_MinusResult.reset(new Parameter());
			this->addToElementRepository("MinusResult", fUML_Tests_TestIntegerFunctions_MinusResult);
			fUML_Tests_TestIntegerFunctions_ObjectFlow317.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow317", fUML_Tests_TestIntegerFunctions_ObjectFlow317);
				fUML_Tests_TestIntegerFunctions_ObjectFlow317_LiteralInteger318.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger318", fUML_Tests_TestIntegerFunctions_ObjectFlow317_LiteralInteger318);
			fUML_Tests_TestIntegerFunctions_Call_Min.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Min)", fUML_Tests_TestIntegerFunctions_Call_Min);
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_result.reset(new OutputPin());
				this->addToElementRepository("Min.result", fUML_Tests_TestIntegerFunctions_Call_Min_Min_result);
					fUML_Tests_TestIntegerFunctions_Call_Min_Min_result_LiteralUnlimitedNatural319.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural319", fUML_Tests_TestIntegerFunctions_Call_Min_Min_result_LiteralUnlimitedNatural319);
					fUML_Tests_TestIntegerFunctions_Call_Min_Min_result_LiteralInteger320.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger320", fUML_Tests_TestIntegerFunctions_Call_Min_Min_result_LiteralInteger320);
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_y.reset(new InputPin());
				this->addToElementRepository("Min.y", fUML_Tests_TestIntegerFunctions_Call_Min_Min_y);
					fUML_Tests_TestIntegerFunctions_Call_Min_Min_y_LiteralInteger321.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger321", fUML_Tests_TestIntegerFunctions_Call_Min_Min_y_LiteralInteger321);
					fUML_Tests_TestIntegerFunctions_Call_Min_Min_y_LiteralUnlimitedNatural322.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural322", fUML_Tests_TestIntegerFunctions_Call_Min_Min_y_LiteralUnlimitedNatural322);
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_x.reset(new InputPin());
				this->addToElementRepository("Min.x", fUML_Tests_TestIntegerFunctions_Call_Min_Min_x);
					fUML_Tests_TestIntegerFunctions_Call_Min_Min_x_LiteralInteger323.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger323", fUML_Tests_TestIntegerFunctions_Call_Min_Min_x_LiteralInteger323);
					fUML_Tests_TestIntegerFunctions_Call_Min_Min_x_LiteralUnlimitedNatural324.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural324", fUML_Tests_TestIntegerFunctions_Call_Min_Min_x_LiteralUnlimitedNatural324);
			fUML_Tests_TestIntegerFunctions_ObjectFlow325.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow325", fUML_Tests_TestIntegerFunctions_ObjectFlow325);
				fUML_Tests_TestIntegerFunctions_ObjectFlow325_LiteralInteger326.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger326", fUML_Tests_TestIntegerFunctions_ObjectFlow325_LiteralInteger326);
			fUML_Tests_TestIntegerFunctions_Param_MinResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(MinResult)", fUML_Tests_TestIntegerFunctions_Param_MinResult);
			fUML_Tests_TestIntegerFunctions_Param_MaxResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(MaxResult)", fUML_Tests_TestIntegerFunctions_Param_MaxResult);
			fUML_Tests_TestIntegerFunctions_ObjectFlow327.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow327", fUML_Tests_TestIntegerFunctions_ObjectFlow327);
				fUML_Tests_TestIntegerFunctions_ObjectFlow327_LiteralInteger328.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger328", fUML_Tests_TestIntegerFunctions_ObjectFlow327_LiteralInteger328);
			fUML_Tests_TestIntegerFunctions_ObjectFlow329.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow329", fUML_Tests_TestIntegerFunctions_ObjectFlow329);
				fUML_Tests_TestIntegerFunctions_ObjectFlow329_LiteralInteger330.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger330", fUML_Tests_TestIntegerFunctions_ObjectFlow329_LiteralInteger330);
			fUML_Tests_TestIntegerFunctions_ObjectFlow331.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow331", fUML_Tests_TestIntegerFunctions_ObjectFlow331);
				fUML_Tests_TestIntegerFunctions_ObjectFlow331_LiteralInteger332.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger332", fUML_Tests_TestIntegerFunctions_ObjectFlow331_LiteralInteger332);
			fUML_Tests_TestIntegerFunctions_ObjectFlow333.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow333", fUML_Tests_TestIntegerFunctions_ObjectFlow333);
				fUML_Tests_TestIntegerFunctions_ObjectFlow333_LiteralInteger334.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger334", fUML_Tests_TestIntegerFunctions_ObjectFlow333_LiteralInteger334);
			fUML_Tests_TestIntegerFunctions_Param_AbsResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(AbsResult)", fUML_Tests_TestIntegerFunctions_Param_AbsResult);
			fUML_Tests_TestIntegerFunctions_Param_DivResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(DivResult)", fUML_Tests_TestIntegerFunctions_Param_DivResult);
			fUML_Tests_TestIntegerFunctions_DivResult.reset(new Parameter());
			this->addToElementRepository("DivResult", fUML_Tests_TestIntegerFunctions_DivResult);
			fUML_Tests_TestIntegerFunctions_ObjectFlow335.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow335", fUML_Tests_TestIntegerFunctions_ObjectFlow335);
				fUML_Tests_TestIntegerFunctions_ObjectFlow335_LiteralInteger336.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger336", fUML_Tests_TestIntegerFunctions_ObjectFlow335_LiteralInteger336);
			fUML_Tests_TestIntegerFunctions_ObjectFlow337.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow337", fUML_Tests_TestIntegerFunctions_ObjectFlow337);
				fUML_Tests_TestIntegerFunctions_ObjectFlow337_LiteralInteger338.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger338", fUML_Tests_TestIntegerFunctions_ObjectFlow337_LiteralInteger338);
			fUML_Tests_TestIntegerFunctions_ObjectFlow339.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow339", fUML_Tests_TestIntegerFunctions_ObjectFlow339);
				fUML_Tests_TestIntegerFunctions_ObjectFlow339_LiteralInteger340.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger340", fUML_Tests_TestIntegerFunctions_ObjectFlow339_LiteralInteger340);
			fUML_Tests_TestIntegerFunctions_ModResult.reset(new Parameter());
			this->addToElementRepository("ModResult", fUML_Tests_TestIntegerFunctions_ModResult);
			fUML_Tests_TestIntegerFunctions_ControlFlow341.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow341", fUML_Tests_TestIntegerFunctions_ControlFlow341);
				fUML_Tests_TestIntegerFunctions_ControlFlow341_LiteralInteger342.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger342", fUML_Tests_TestIntegerFunctions_ControlFlow341_LiteralInteger342);
			fUML_Tests_TestIntegerFunctions_Fork_2.reset(new ForkNode());
			this->addToElementRepository("Fork(2)", fUML_Tests_TestIntegerFunctions_Fork_2);
			fUML_Tests_TestIntegerFunctions_Call_Abs.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Abs)", fUML_Tests_TestIntegerFunctions_Call_Abs);
				fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x.reset(new InputPin());
				this->addToElementRepository("Abs.x", fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x);
					fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x_LiteralUnlimitedNatural343.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural343", fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x_LiteralUnlimitedNatural343);
					fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x_LiteralInteger344.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger344", fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x_LiteralInteger344);
				fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result.reset(new OutputPin());
				this->addToElementRepository("Abs.result", fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result);
					fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result_LiteralInteger345.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger345", fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result_LiteralInteger345);
					fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result_LiteralUnlimitedNatural346.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural346", fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result_LiteralUnlimitedNatural346);
			fUML_Tests_TestIntegerFunctions_TimesResult.reset(new Parameter());
			this->addToElementRepository("TimesResult", fUML_Tests_TestIntegerFunctions_TimesResult);
			fUML_Tests_TestIntegerFunctions_ObjectFlow347.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow347", fUML_Tests_TestIntegerFunctions_ObjectFlow347);
				fUML_Tests_TestIntegerFunctions_ObjectFlow347_LiteralInteger348.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger348", fUML_Tests_TestIntegerFunctions_ObjectFlow347_LiteralInteger348);
			fUML_Tests_TestIntegerFunctions_Param_MinusResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(MinusResult)", fUML_Tests_TestIntegerFunctions_Param_MinusResult);
			fUML_Tests_TestIntegerFunctions_ObjectFlow349.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow349", fUML_Tests_TestIntegerFunctions_ObjectFlow349);
				fUML_Tests_TestIntegerFunctions_ObjectFlow349_LiteralInteger350.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger350", fUML_Tests_TestIntegerFunctions_ObjectFlow349_LiteralInteger350);
			fUML_Tests_TestIntegerFunctions_Value_3.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(3)", fUML_Tests_TestIntegerFunctions_Value_3);
				fUML_Tests_TestIntegerFunctions_Value_3_Value_3_result.reset(new OutputPin());
				this->addToElementRepository("Value(3).result", fUML_Tests_TestIntegerFunctions_Value_3_Value_3_result);
				fUML_Tests_TestIntegerFunctions_Value_3_LiteralInteger351.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger351", fUML_Tests_TestIntegerFunctions_Value_3_LiteralInteger351);
			fUML_Tests_TestIntegerFunctions_ControlFlow352.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow352", fUML_Tests_TestIntegerFunctions_ControlFlow352);
				fUML_Tests_TestIntegerFunctions_ControlFlow352_LiteralInteger353.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger353", fUML_Tests_TestIntegerFunctions_ControlFlow352_LiteralInteger353);
			fUML_Tests_TestIntegerFunctions_ObjectFlow354.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow354", fUML_Tests_TestIntegerFunctions_ObjectFlow354);
				fUML_Tests_TestIntegerFunctions_ObjectFlow354_LiteralInteger355.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger355", fUML_Tests_TestIntegerFunctions_ObjectFlow354_LiteralInteger355);
			fUML_Tests_TestIntegerFunctions_ObjectFlow356.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow356", fUML_Tests_TestIntegerFunctions_ObjectFlow356);
				fUML_Tests_TestIntegerFunctions_ObjectFlow356_LiteralInteger357.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger357", fUML_Tests_TestIntegerFunctions_ObjectFlow356_LiteralInteger357);
			fUML_Tests_TestIntegerFunctions_MinResult.reset(new Parameter());
			this->addToElementRepository("MinResult", fUML_Tests_TestIntegerFunctions_MinResult);
			fUML_Tests_TestIntegerFunctions_ObjectFlow358.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow358", fUML_Tests_TestIntegerFunctions_ObjectFlow358);
				fUML_Tests_TestIntegerFunctions_ObjectFlow358_LiteralInteger359.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger359", fUML_Tests_TestIntegerFunctions_ObjectFlow358_LiteralInteger359);
			fUML_Tests_TestIntegerFunctions_Param_TimesResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(TimesResult)", fUML_Tests_TestIntegerFunctions_Param_TimesResult);
			fUML_Tests_TestIntegerFunctions_ObjectFlow360.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow360", fUML_Tests_TestIntegerFunctions_ObjectFlow360);
				fUML_Tests_TestIntegerFunctions_ObjectFlow360_LiteralInteger361.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger361", fUML_Tests_TestIntegerFunctions_ObjectFlow360_LiteralInteger361);
			fUML_Tests_TestIntegerFunctions_Call_Minus.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Minus)", fUML_Tests_TestIntegerFunctions_Call_Minus);
				fUML_Tests_TestIntegerFunctions_Call_Minus_y.reset(new InputPin());
				this->addToElementRepository("y", fUML_Tests_TestIntegerFunctions_Call_Minus_y);
					fUML_Tests_TestIntegerFunctions_Call_Minus_y_LiteralUnlimitedNatural362.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural362", fUML_Tests_TestIntegerFunctions_Call_Minus_y_LiteralUnlimitedNatural362);
					fUML_Tests_TestIntegerFunctions_Call_Minus_y_LiteralInteger363.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger363", fUML_Tests_TestIntegerFunctions_Call_Minus_y_LiteralInteger363);
				fUML_Tests_TestIntegerFunctions_Call_Minus_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestIntegerFunctions_Call_Minus_x);
					fUML_Tests_TestIntegerFunctions_Call_Minus_x_LiteralUnlimitedNatural364.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural364", fUML_Tests_TestIntegerFunctions_Call_Minus_x_LiteralUnlimitedNatural364);
					fUML_Tests_TestIntegerFunctions_Call_Minus_x_LiteralInteger365.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger365", fUML_Tests_TestIntegerFunctions_Call_Minus_x_LiteralInteger365);
				fUML_Tests_TestIntegerFunctions_Call_Minus_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestIntegerFunctions_Call_Minus_result);
					fUML_Tests_TestIntegerFunctions_Call_Minus_result_LiteralInteger366.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger366", fUML_Tests_TestIntegerFunctions_Call_Minus_result_LiteralInteger366);
					fUML_Tests_TestIntegerFunctions_Call_Minus_result_LiteralUnlimitedNatural367.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural367", fUML_Tests_TestIntegerFunctions_Call_Minus_result_LiteralUnlimitedNatural367);
			fUML_Tests_TestIntegerFunctions_NegResult.reset(new Parameter());
			this->addToElementRepository("NegResult", fUML_Tests_TestIntegerFunctions_NegResult);
			fUML_Tests_TestIntegerFunctions_ObjectFlow368.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow368", fUML_Tests_TestIntegerFunctions_ObjectFlow368);
				fUML_Tests_TestIntegerFunctions_ObjectFlow368_LiteralInteger369.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger369", fUML_Tests_TestIntegerFunctions_ObjectFlow368_LiteralInteger369);
			fUML_Tests_TestIntegerFunctions_Fork_3.reset(new ForkNode());
			this->addToElementRepository("Fork(3)", fUML_Tests_TestIntegerFunctions_Fork_3);
			fUML_Tests_TestIntegerFunctions_Call_Div.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Div)", fUML_Tests_TestIntegerFunctions_Call_Div);
				fUML_Tests_TestIntegerFunctions_Call_Div_Div_x.reset(new InputPin());
				this->addToElementRepository("Div.x", fUML_Tests_TestIntegerFunctions_Call_Div_Div_x);
					fUML_Tests_TestIntegerFunctions_Call_Div_Div_x_LiteralInteger370.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger370", fUML_Tests_TestIntegerFunctions_Call_Div_Div_x_LiteralInteger370);
					fUML_Tests_TestIntegerFunctions_Call_Div_Div_x_LiteralUnlimitedNatural371.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural371", fUML_Tests_TestIntegerFunctions_Call_Div_Div_x_LiteralUnlimitedNatural371);
				fUML_Tests_TestIntegerFunctions_Call_Div_Div_y.reset(new InputPin());
				this->addToElementRepository("Div.y", fUML_Tests_TestIntegerFunctions_Call_Div_Div_y);
					fUML_Tests_TestIntegerFunctions_Call_Div_Div_y_LiteralInteger372.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger372", fUML_Tests_TestIntegerFunctions_Call_Div_Div_y_LiteralInteger372);
					fUML_Tests_TestIntegerFunctions_Call_Div_Div_y_LiteralUnlimitedNatural373.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural373", fUML_Tests_TestIntegerFunctions_Call_Div_Div_y_LiteralUnlimitedNatural373);
				fUML_Tests_TestIntegerFunctions_Call_Div_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestIntegerFunctions_Call_Div_result);
					fUML_Tests_TestIntegerFunctions_Call_Div_result_LiteralInteger374.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger374", fUML_Tests_TestIntegerFunctions_Call_Div_result_LiteralInteger374);
					fUML_Tests_TestIntegerFunctions_Call_Div_result_LiteralUnlimitedNatural375.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural375", fUML_Tests_TestIntegerFunctions_Call_Div_result_LiteralUnlimitedNatural375);
			fUML_Tests_TestIntegerFunctions_ObjectFlow376.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow376", fUML_Tests_TestIntegerFunctions_ObjectFlow376);
				fUML_Tests_TestIntegerFunctions_ObjectFlow376_LiteralInteger377.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger377", fUML_Tests_TestIntegerFunctions_ObjectFlow376_LiteralInteger377);
			fUML_Tests_TestIntegerFunctions_ControlFlow378.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow378", fUML_Tests_TestIntegerFunctions_ControlFlow378);
				fUML_Tests_TestIntegerFunctions_ControlFlow378_LiteralInteger379.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger379", fUML_Tests_TestIntegerFunctions_ControlFlow378_LiteralInteger379);
			fUML_Tests_TestIntegerFunctions_Call_Times.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Times)", fUML_Tests_TestIntegerFunctions_Call_Times);
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_y.reset(new InputPin());
				this->addToElementRepository("Times.y", fUML_Tests_TestIntegerFunctions_Call_Times_Times_y);
					fUML_Tests_TestIntegerFunctions_Call_Times_Times_y_LiteralUnlimitedNatural380.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural380", fUML_Tests_TestIntegerFunctions_Call_Times_Times_y_LiteralUnlimitedNatural380);
					fUML_Tests_TestIntegerFunctions_Call_Times_Times_y_LiteralInteger381.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger381", fUML_Tests_TestIntegerFunctions_Call_Times_Times_y_LiteralInteger381);
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_x.reset(new InputPin());
				this->addToElementRepository("Times.x", fUML_Tests_TestIntegerFunctions_Call_Times_Times_x);
					fUML_Tests_TestIntegerFunctions_Call_Times_Times_x_LiteralInteger382.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger382", fUML_Tests_TestIntegerFunctions_Call_Times_Times_x_LiteralInteger382);
					fUML_Tests_TestIntegerFunctions_Call_Times_Times_x_LiteralUnlimitedNatural383.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural383", fUML_Tests_TestIntegerFunctions_Call_Times_Times_x_LiteralUnlimitedNatural383);
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_result.reset(new OutputPin());
				this->addToElementRepository("Times.result", fUML_Tests_TestIntegerFunctions_Call_Times_Times_result);
					fUML_Tests_TestIntegerFunctions_Call_Times_Times_result_LiteralUnlimitedNatural384.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural384", fUML_Tests_TestIntegerFunctions_Call_Times_Times_result_LiteralUnlimitedNatural384);
					fUML_Tests_TestIntegerFunctions_Call_Times_Times_result_LiteralInteger385.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger385", fUML_Tests_TestIntegerFunctions_Call_Times_Times_result_LiteralInteger385);
			fUML_Tests_TestIntegerFunctions_AbsResult.reset(new Parameter());
			this->addToElementRepository("AbsResult", fUML_Tests_TestIntegerFunctions_AbsResult);
			fUML_Tests_TestIntegerFunctions_ControlFlow386.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow386", fUML_Tests_TestIntegerFunctions_ControlFlow386);
				fUML_Tests_TestIntegerFunctions_ControlFlow386_LiteralInteger387.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger387", fUML_Tests_TestIntegerFunctions_ControlFlow386_LiteralInteger387);
			fUML_Tests_TestIntegerFunctions_ObjectFlow388.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow388", fUML_Tests_TestIntegerFunctions_ObjectFlow388);
				fUML_Tests_TestIntegerFunctions_ObjectFlow388_LiteralInteger389.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger389", fUML_Tests_TestIntegerFunctions_ObjectFlow388_LiteralInteger389);
			fUML_Tests_TestIntegerFunctions_Value_neg_2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(neg 2)", fUML_Tests_TestIntegerFunctions_Value_neg_2);
				fUML_Tests_TestIntegerFunctions_Value_neg_2_LiteralInteger390.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger390", fUML_Tests_TestIntegerFunctions_Value_neg_2_LiteralInteger390);
				fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result.reset(new OutputPin());
				this->addToElementRepository("Value(-2).result", fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result);
					fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result_LiteralUnlimitedNatural391.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural391", fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result_LiteralUnlimitedNatural391);
					fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result_LiteralInteger392.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger392", fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result_LiteralInteger392);
			fUML_Tests_TestIntegerFunctions_Param_PlusResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(PlusResult)", fUML_Tests_TestIntegerFunctions_Param_PlusResult);
			fUML_Tests_TestIntegerFunctions_ObjectFlow393.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow393", fUML_Tests_TestIntegerFunctions_ObjectFlow393);
				fUML_Tests_TestIntegerFunctions_ObjectFlow393_LiteralInteger394.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger394", fUML_Tests_TestIntegerFunctions_ObjectFlow393_LiteralInteger394);
			fUML_Tests_TestIntegerFunctions_ObjectFlow395.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow395", fUML_Tests_TestIntegerFunctions_ObjectFlow395);
				fUML_Tests_TestIntegerFunctions_ObjectFlow395_LiteralInteger396.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger396", fUML_Tests_TestIntegerFunctions_ObjectFlow395_LiteralInteger396);
			fUML_Tests_TestIntegerFunctions_ControlFlow397.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow397", fUML_Tests_TestIntegerFunctions_ControlFlow397);
				fUML_Tests_TestIntegerFunctions_ControlFlow397_LiteralInteger398.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger398", fUML_Tests_TestIntegerFunctions_ControlFlow397_LiteralInteger398);
			fUML_Tests_TestIntegerFunctions_ControlFlow399.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow399", fUML_Tests_TestIntegerFunctions_ControlFlow399);
				fUML_Tests_TestIntegerFunctions_ControlFlow399_LiteralInteger400.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger400", fUML_Tests_TestIntegerFunctions_ControlFlow399_LiteralInteger400);
			fUML_Tests_TestIntegerFunctions_Call_Mod.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Mod)", fUML_Tests_TestIntegerFunctions_Call_Mod);
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x.reset(new InputPin());
				this->addToElementRepository("Mod.x", fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x);
					fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x_LiteralUnlimitedNatural401.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural401", fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x_LiteralUnlimitedNatural401);
					fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x_LiteralInteger402.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger402", fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x_LiteralInteger402);
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result.reset(new OutputPin());
				this->addToElementRepository("Mod.result", fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result);
					fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result_LiteralUnlimitedNatural403.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural403", fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result_LiteralUnlimitedNatural403);
					fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result_LiteralInteger404.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger404", fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result_LiteralInteger404);
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y.reset(new InputPin());
				this->addToElementRepository("Mod.y", fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y);
					fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y_LiteralUnlimitedNatural405.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural405", fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y_LiteralUnlimitedNatural405);
					fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y_LiteralInteger406.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger406", fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y_LiteralInteger406);
			fUML_Tests_TestIntegerFunctions_ObjectFlow407.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow407", fUML_Tests_TestIntegerFunctions_ObjectFlow407);
				fUML_Tests_TestIntegerFunctions_ObjectFlow407_LiteralInteger408.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger408", fUML_Tests_TestIntegerFunctions_ObjectFlow407_LiteralInteger408);
			fUML_Tests_TestIntegerFunctions_ObjectFlow409.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow409", fUML_Tests_TestIntegerFunctions_ObjectFlow409);
				fUML_Tests_TestIntegerFunctions_ObjectFlow409_LiteralInteger410.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger410", fUML_Tests_TestIntegerFunctions_ObjectFlow409_LiteralInteger410);
			fUML_Tests_TestIntegerFunctions_ObjectFlow411.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow411", fUML_Tests_TestIntegerFunctions_ObjectFlow411);
				fUML_Tests_TestIntegerFunctions_ObjectFlow411_LiteralInteger412.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger412", fUML_Tests_TestIntegerFunctions_ObjectFlow411_LiteralInteger412);
		fUML_Tests_TestUnlimitedNaturalFunctions.reset(new Activity());
		this->addToElementRepository("TestUnlimitedNaturalFunctions", fUML_Tests_TestUnlimitedNaturalFunctions);
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResulttimes.reset(new Parameter());
			this->addToElementRepository("GEResult*", fUML_Tests_TestUnlimitedNaturalFunctions_GEResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResulttimes.reset(new Parameter());
			this->addToElementRepository("LTResult*", fUML_Tests_TestUnlimitedNaturalFunctions_LTResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow413.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow413", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow413);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow413_LiteralInteger414.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger414", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow413_LiteralInteger414);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(GTResult)", fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow415.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow415", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow415);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow415_LiteralInteger416.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger416", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow415_LiteralInteger416);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(GE)_1", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result.reset(new OutputPin());
				this->addToElementRepository("GE.result", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result_LiteralUnlimitedNatural417.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural417", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result_LiteralUnlimitedNatural417);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result_LiteralInteger418.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger418", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result_LiteralInteger418);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x.reset(new InputPin());
				this->addToElementRepository("GE.x", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x_LiteralInteger419.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger419", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x_LiteralInteger419);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x_LiteralUnlimitedNatural420.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural420", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x_LiteralUnlimitedNatural420);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y.reset(new InputPin());
				this->addToElementRepository("GE.y", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y_LiteralUnlimitedNatural421.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural421", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y_LiteralUnlimitedNatural421);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y_LiteralInteger422.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger422", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y_LiteralInteger422);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow423.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow423", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow423);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow423_LiteralInteger424.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger424", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow423_LiteralInteger424);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow425.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow425", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow425);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow425_LiteralInteger426.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger426", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow425_LiteralInteger426);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow427.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow427", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow427);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow427_LiteralInteger428.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger428", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow427_LiteralInteger428);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow429.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow429", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow429);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow429_LiteralInteger430.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger430", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow429_LiteralInteger430);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow431.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow431", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow431);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow431_LiteralInteger432.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger432", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow431_LiteralInteger432);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow433.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow433", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow433);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow433_LiteralInteger434.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger434", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow433_LiteralInteger434);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_times.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(*)", fUML_Tests_TestUnlimitedNaturalFunctions_Value_times);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_LiteralUnlimitedNatural435.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural435", fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_LiteralUnlimitedNatural435);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result.reset(new OutputPin());
				this->addToElementRepository("Value(*).result", fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result_LiteralInteger436.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger436", fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result_LiteralInteger436);
					fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result_LiteralUnlimitedNatural437.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural437", fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result_LiteralUnlimitedNatural437);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow438.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow438", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow438);
				fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow438_LiteralInteger439.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger439", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow438_LiteralInteger439);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(LE)_1", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x.reset(new InputPin());
				this->addToElementRepository("LE.x", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x_LiteralInteger440.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger440", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x_LiteralInteger440);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x_LiteralUnlimitedNatural441.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural441", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x_LiteralUnlimitedNatural441);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result.reset(new OutputPin());
				this->addToElementRepository("LE.result", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result_LiteralInteger442.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger442", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result_LiteralInteger442);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result_LiteralUnlimitedNatural443.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural443", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result_LiteralUnlimitedNatural443);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y.reset(new InputPin());
				this->addToElementRepository("LE.y", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y_LiteralUnlimitedNatural444.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural444", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y_LiteralUnlimitedNatural444);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y_LiteralInteger445.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger445", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y_LiteralInteger445);
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResult.reset(new Parameter());
			this->addToElementRepository("GEResult", fUML_Tests_TestUnlimitedNaturalFunctions_GEResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResulttimes.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(LTResult*)", fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(GT)_2", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y.reset(new InputPin());
				this->addToElementRepository("GT.y", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y_LiteralUnlimitedNatural446.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural446", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y_LiteralUnlimitedNatural446);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y_LiteralInteger447.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger447", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y_LiteralInteger447);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x.reset(new InputPin());
				this->addToElementRepository("GT.x", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x_LiteralInteger448.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger448", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x_LiteralInteger448);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x_LiteralUnlimitedNatural449.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural449", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x_LiteralUnlimitedNatural449);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result.reset(new OutputPin());
				this->addToElementRepository("GT.result", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result_LiteralUnlimitedNatural450.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural450", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result_LiteralUnlimitedNatural450);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result_LiteralInteger451.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger451", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result_LiteralInteger451);
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResult.reset(new Parameter());
			this->addToElementRepository("GTResult", fUML_Tests_TestUnlimitedNaturalFunctions_GTResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResult.reset(new Parameter());
			this->addToElementRepository("LEResult", fUML_Tests_TestUnlimitedNaturalFunctions_LEResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow452.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow452", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow452);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow452_LiteralInteger453.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger453", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow452_LiteralInteger453);
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times.reset(new ForkNode());
			this->addToElementRepository("Fork(*)", fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow454.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow454", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow454);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow454_LiteralInteger455.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger455", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow454_LiteralInteger455);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow456.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow456", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow456);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow456_LiteralInteger457.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger457", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow456_LiteralInteger457);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow458.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow458", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow458);
				fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow458_LiteralInteger459.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger459", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow458_LiteralInteger459);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow460.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow460", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow460);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow460_LiteralInteger461.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger461", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow460_LiteralInteger461);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(GE)_2", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result.reset(new OutputPin());
				this->addToElementRepository("GE.result", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result_LiteralUnlimitedNatural462.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural462", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result_LiteralUnlimitedNatural462);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result_LiteralInteger463.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger463", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result_LiteralInteger463);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y.reset(new InputPin());
				this->addToElementRepository("GE.y", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y_LiteralUnlimitedNatural464.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural464", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y_LiteralUnlimitedNatural464);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y_LiteralInteger465.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger465", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y_LiteralInteger465);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x.reset(new InputPin());
				this->addToElementRepository("GE.x", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x_LiteralInteger466.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger466", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x_LiteralInteger466);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x_LiteralUnlimitedNatural467.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural467", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x_LiteralUnlimitedNatural467);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(LEResult)", fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow468.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow468", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow468);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow468_LiteralInteger469.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger469", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow468_LiteralInteger469);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow470.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow470", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow470);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow470_LiteralInteger471.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger471", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow470_LiteralInteger471);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow472.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow472", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow472);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow472_LiteralInteger473.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger473", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow472_LiteralInteger473);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(LE)_2", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y.reset(new InputPin());
				this->addToElementRepository("LE.y", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y_LiteralUnlimitedNatural474.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural474", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y_LiteralUnlimitedNatural474);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y_LiteralInteger475.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger475", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y_LiteralInteger475);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x.reset(new InputPin());
				this->addToElementRepository("LE.x", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x_LiteralInteger476.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger476", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x_LiteralInteger476);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x_LiteralUnlimitedNatural477.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural477", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x_LiteralUnlimitedNatural477);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result.reset(new OutputPin());
				this->addToElementRepository("LE.result", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result_LiteralUnlimitedNatural478.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural478", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result_LiteralUnlimitedNatural478);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result_LiteralInteger479.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger479", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result_LiteralInteger479);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(LT)_1", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x.reset(new InputPin());
				this->addToElementRepository("LT.x", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x_LiteralInteger480.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger480", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x_LiteralInteger480);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x_LiteralUnlimitedNatural481.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural481", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x_LiteralUnlimitedNatural481);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y.reset(new InputPin());
				this->addToElementRepository("LT.y", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y_LiteralUnlimitedNatural482.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural482", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y_LiteralUnlimitedNatural482);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y_LiteralInteger483.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger483", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y_LiteralInteger483);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result.reset(new OutputPin());
				this->addToElementRepository("LT.result", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result_LiteralInteger484.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger484", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result_LiteralInteger484);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result_LiteralUnlimitedNatural485.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural485", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result_LiteralUnlimitedNatural485);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(GT)_1", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y.reset(new InputPin());
				this->addToElementRepository("GT.y", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y_LiteralInteger486.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger486", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y_LiteralInteger486);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y_LiteralUnlimitedNatural487.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural487", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y_LiteralUnlimitedNatural487);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result.reset(new OutputPin());
				this->addToElementRepository("GT.result", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result_LiteralUnlimitedNatural488.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural488", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result_LiteralUnlimitedNatural488);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result_LiteralInteger489.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger489", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result_LiteralInteger489);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x.reset(new InputPin());
				this->addToElementRepository("GT.x", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x_LiteralInteger490.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger490", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x_LiteralInteger490);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x_LiteralUnlimitedNatural491.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural491", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x_LiteralUnlimitedNatural491);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResulttimes.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(GTResult*)", fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow492.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow492", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow492);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow492_LiteralInteger493.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger493", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow492_LiteralInteger493);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow494.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow494", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow494);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow494_LiteralInteger495.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger495", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow494_LiteralInteger495);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Min)", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y.reset(new InputPin());
				this->addToElementRepository("Min.y", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y_LiteralInteger496.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger496", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y_LiteralInteger496);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y_LiteralUnlimitedNatural497.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural497", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y_LiteralUnlimitedNatural497);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result.reset(new OutputPin());
				this->addToElementRepository("Min.result", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result_LiteralUnlimitedNatural498.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural498", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result_LiteralUnlimitedNatural498);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result_LiteralInteger499.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger499", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result_LiteralInteger499);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x.reset(new InputPin());
				this->addToElementRepository("Min.x", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x_LiteralUnlimitedNatural500.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural500", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x_LiteralUnlimitedNatural500);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x_LiteralInteger501.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger501", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x_LiteralInteger501);
			fUML_Tests_TestUnlimitedNaturalFunctions_MaxResult.reset(new Parameter());
			this->addToElementRepository("MaxResult", fUML_Tests_TestUnlimitedNaturalFunctions_MaxResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MaxResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(MaxResult)", fUML_Tests_TestUnlimitedNaturalFunctions_Param_MaxResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow502.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow502", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow502);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow502_LiteralInteger503.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger503", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow502_LiteralInteger503);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow504.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow504", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow504);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow504_LiteralInteger505.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger505", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow504_LiteralInteger505);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow506.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow506", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow506);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow506_LiteralInteger507.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger507", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow506_LiteralInteger507);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow508.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow508", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow508);
				fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow508_LiteralInteger509.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger509", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow508_LiteralInteger509);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow510.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow510", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow510);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow510_LiteralInteger511.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger511", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow510_LiteralInteger511);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow512.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow512", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow512);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow512_LiteralInteger513.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger513", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow512_LiteralInteger513);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(LTResult)", fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow514.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow514", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow514);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow514_LiteralInteger515.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger515", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow514_LiteralInteger515);
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2.reset(new ForkNode());
			this->addToElementRepository("Fork(2)", fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow516.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow516", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow516);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow516_LiteralInteger517.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger517", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow516_LiteralInteger517);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow518.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow518", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow518);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow518_LiteralInteger519.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger519", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow518_LiteralInteger519);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow520.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow520", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow520);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow520_LiteralInteger521.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger521", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow520_LiteralInteger521);
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3.reset(new ForkNode());
			this->addToElementRepository("Fork(3)", fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(GEResult)", fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow522.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow522", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow522);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow522_LiteralInteger523.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger523", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow522_LiteralInteger523);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow524.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow524", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow524);
				fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow524_LiteralInteger525.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger525", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow524_LiteralInteger525);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow526.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow526", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow526);
				fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow526_LiteralInteger527.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger527", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow526_LiteralInteger527);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow528.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow528", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow528);
				fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow528_LiteralInteger529.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger529", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow528_LiteralInteger529);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow530.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow530", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow530);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow530_LiteralInteger531.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger531", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow530_LiteralInteger531);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow532.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow532", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow532);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow532_LiteralInteger533.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger533", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow532_LiteralInteger533);
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResulttimes.reset(new Parameter());
			this->addToElementRepository("LEResult*", fUML_Tests_TestUnlimitedNaturalFunctions_LEResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_MinResult.reset(new Parameter());
			this->addToElementRepository("MinResult", fUML_Tests_TestUnlimitedNaturalFunctions_MinResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResulttimes.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(GEResult*)", fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResulttimes.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(LEResult*)", fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow534.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow534", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow534);
				fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow534_LiteralInteger535.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger535", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow534_LiteralInteger535);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2)", fUML_Tests_TestUnlimitedNaturalFunctions_Value_2);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_LiteralUnlimitedNatural536.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural536", fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_LiteralUnlimitedNatural536);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result.reset(new OutputPin());
				this->addToElementRepository("Value(2).result", fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result_LiteralUnlimitedNatural537.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural537", fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result_LiteralUnlimitedNatural537);
					fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result_LiteralInteger538.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger538", fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result_LiteralInteger538);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Max)", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x.reset(new InputPin());
				this->addToElementRepository("Max.x", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x_LiteralInteger539.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger539", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x_LiteralInteger539);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x_LiteralUnlimitedNatural540.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural540", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x_LiteralUnlimitedNatural540);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result.reset(new OutputPin());
				this->addToElementRepository("Max.result", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result_LiteralUnlimitedNatural541.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural541", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result_LiteralUnlimitedNatural541);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result_LiteralInteger542.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger542", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result_LiteralInteger542);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y.reset(new InputPin());
				this->addToElementRepository("Min.y", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y_LiteralUnlimitedNatural543.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural543", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y_LiteralUnlimitedNatural543);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y_LiteralInteger544.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger544", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y_LiteralInteger544);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow545.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow545", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow545);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow545_LiteralInteger546.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger546", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow545_LiteralInteger546);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow547.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow547", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow547);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow547_LiteralInteger548.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger548", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow547_LiteralInteger548);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MinResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(MinResult)", fUML_Tests_TestUnlimitedNaturalFunctions_Param_MinResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResult.reset(new Parameter());
			this->addToElementRepository("LTResult", fUML_Tests_TestUnlimitedNaturalFunctions_LTResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow549.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow549", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow549);
				fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow549_LiteralInteger550.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger550", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow549_LiteralInteger550);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow551.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow551", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow551);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow551_LiteralInteger552.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger552", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow551_LiteralInteger552);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_3.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(3)", fUML_Tests_TestUnlimitedNaturalFunctions_Value_3);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result.reset(new OutputPin());
				this->addToElementRepository("Value(3).result", fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result_LiteralInteger553.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger553", fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result_LiteralInteger553);
					fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result_LiteralUnlimitedNatural554.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural554", fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result_LiteralUnlimitedNatural554);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_LiteralUnlimitedNatural555.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural555", fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_LiteralUnlimitedNatural555);
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResulttimes.reset(new Parameter());
			this->addToElementRepository("GTResult*", fUML_Tests_TestUnlimitedNaturalFunctions_GTResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow556.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow556", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow556);
				fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow556_LiteralInteger557.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger557", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow556_LiteralInteger557);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow558.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow558", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow558);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow558_LiteralInteger559.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger559", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow558_LiteralInteger559);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(LT)_2", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x.reset(new InputPin());
				this->addToElementRepository("LT.x", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x_LiteralUnlimitedNatural560.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural560", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x_LiteralUnlimitedNatural560);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x_LiteralInteger561.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger561", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x_LiteralInteger561);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y.reset(new InputPin());
				this->addToElementRepository("LT.y", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y_LiteralInteger562.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger562", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y_LiteralInteger562);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y_LiteralUnlimitedNatural563.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural563", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y_LiteralUnlimitedNatural563);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result.reset(new OutputPin());
				this->addToElementRepository("LT.result", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result_LiteralInteger564.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger564", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result_LiteralInteger564);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result_LiteralUnlimitedNatural565.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural565", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result_LiteralUnlimitedNatural565);
		fUML_Tests_NodeEnabler.reset(new Activity());
		this->addToElementRepository("NodeEnabler", fUML_Tests_NodeEnabler);
			fUML_Tests_NodeEnabler_FinalNode.reset(new ActivityFinalNode());
			this->addToElementRepository("FinalNode", fUML_Tests_NodeEnabler_FinalNode);
			fUML_Tests_NodeEnabler_StructuredNode.reset(new StructuredActivityNode());
			this->addToElementRepository("StructuredNode", fUML_Tests_NodeEnabler_StructuredNode);
				fUML_Tests_NodeEnabler_StructuredNode_Call_Copier.reset(new CallBehaviorAction());
				this->addToElementRepository("Call(Copier)", fUML_Tests_NodeEnabler_StructuredNode_Call_Copier);
					fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_output.reset(new OutputPin());
					this->addToElementRepository("Call(Copier).output", fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_output);
						fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_output_LiteralUnlimitedNatural566.reset(new LiteralUnlimitedNatural());
						this->addToElementRepository("LiteralUnlimitedNatural566", fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_output_LiteralUnlimitedNatural566);
						fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_output_LiteralInteger567.reset(new LiteralInteger());
						this->addToElementRepository("LiteralInteger567", fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_output_LiteralInteger567);
					fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_input.reset(new InputPin());
					this->addToElementRepository("Call(Copier).input", fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_input);
						fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_input_LiteralInteger568.reset(new LiteralInteger());
						this->addToElementRepository("LiteralInteger568", fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_input_LiteralInteger568);
						fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_input_LiteralUnlimitedNatural569.reset(new LiteralUnlimitedNatural());
						this->addToElementRepository("LiteralUnlimitedNatural569", fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_input_LiteralUnlimitedNatural569);
			fUML_Tests_NodeEnabler_Input_input.reset(new ActivityParameterNode());
			this->addToElementRepository("Input(input)", fUML_Tests_NodeEnabler_Input_input);
			fUML_Tests_NodeEnabler_ControlFlow570.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow570", fUML_Tests_NodeEnabler_ControlFlow570);
				fUML_Tests_NodeEnabler_ControlFlow570_LiteralUnlimitedNatural571.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural571", fUML_Tests_NodeEnabler_ControlFlow570_LiteralUnlimitedNatural571);
			fUML_Tests_NodeEnabler_output.reset(new Parameter());
			this->addToElementRepository("output", fUML_Tests_NodeEnabler_output);
				fUML_Tests_NodeEnabler_output_LiteralUnlimitedNatural572.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural572", fUML_Tests_NodeEnabler_output_LiteralUnlimitedNatural572);
				fUML_Tests_NodeEnabler_output_LiteralInteger573.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger573", fUML_Tests_NodeEnabler_output_LiteralInteger573);
			fUML_Tests_NodeEnabler_Output_output.reset(new ActivityParameterNode());
			this->addToElementRepository("Output(output)", fUML_Tests_NodeEnabler_Output_output);
			fUML_Tests_NodeEnabler_input.reset(new Parameter());
			this->addToElementRepository("input", fUML_Tests_NodeEnabler_input);
				fUML_Tests_NodeEnabler_input_LiteralUnlimitedNatural574.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural574", fUML_Tests_NodeEnabler_input_LiteralUnlimitedNatural574);
				fUML_Tests_NodeEnabler_input_LiteralInteger575.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger575", fUML_Tests_NodeEnabler_input_LiteralInteger575);
			fUML_Tests_NodeEnabler_ObjectFlow576.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow576", fUML_Tests_NodeEnabler_ObjectFlow576);
				fUML_Tests_NodeEnabler_ObjectFlow576_LiteralUnlimitedNatural577.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural577", fUML_Tests_NodeEnabler_ObjectFlow576_LiteralUnlimitedNatural577);
			fUML_Tests_NodeEnabler_ObjectFlow578.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow578", fUML_Tests_NodeEnabler_ObjectFlow578);
				fUML_Tests_NodeEnabler_ObjectFlow578_LiteralUnlimitedNatural579.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural579", fUML_Tests_NodeEnabler_ObjectFlow578_LiteralUnlimitedNatural579);
		fUML_Tests_TestClassExtentReader.reset(new Activity());
		this->addToElementRepository("TestClassExtentReader", fUML_Tests_TestClassExtentReader);
			fUML_Tests_TestClassExtentReader_ControlFlow580.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow580", fUML_Tests_TestClassExtentReader_ControlFlow580);
				fUML_Tests_TestClassExtentReader_ControlFlow580_LiteralInteger581.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger581", fUML_Tests_TestClassExtentReader_ControlFlow580_LiteralInteger581);
			fUML_Tests_TestClassExtentReader_object.reset(new Parameter());
			this->addToElementRepository("object", fUML_Tests_TestClassExtentReader_object);
				fUML_Tests_TestClassExtentReader_object_LiteralInteger582.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger582", fUML_Tests_TestClassExtentReader_object_LiteralInteger582);
				fUML_Tests_TestClassExtentReader_object_LiteralUnlimitedNatural583.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural583", fUML_Tests_TestClassExtentReader_object_LiteralUnlimitedNatural583);
			fUML_Tests_TestClassExtentReader_Param_extent.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(extent)", fUML_Tests_TestClassExtentReader_Param_extent);
			fUML_Tests_TestClassExtentReader_ObjectFlow584.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow584", fUML_Tests_TestClassExtentReader_ObjectFlow584);
				fUML_Tests_TestClassExtentReader_ObjectFlow584_LiteralInteger585.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger585", fUML_Tests_TestClassExtentReader_ObjectFlow584_LiteralInteger585);
			fUML_Tests_TestClassExtentReader_ObjectFlow586.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow586", fUML_Tests_TestClassExtentReader_ObjectFlow586);
				fUML_Tests_TestClassExtentReader_ObjectFlow586_LiteralInteger587.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger587", fUML_Tests_TestClassExtentReader_ObjectFlow586_LiteralInteger587);
			fUML_Tests_TestClassExtentReader_ReadExtent_TestClass.reset(new ReadExtentAction());
			this->addToElementRepository("ReadExtent(TestClass)", fUML_Tests_TestClassExtentReader_ReadExtent_TestClass);
				fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result.reset(new OutputPin());
				this->addToElementRepository("ReadExtent.result", fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result);
					fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result_LiteralUnlimitedNatural588.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural588", fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result_LiteralUnlimitedNatural588);
					fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result_LiteralUnlimitedNatural589.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural589", fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result_LiteralUnlimitedNatural589);
			fUML_Tests_TestClassExtentReader_Create_TestClass.reset(new CreateObjectAction());
			this->addToElementRepository("Create(TestClass)", fUML_Tests_TestClassExtentReader_Create_TestClass);
				fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result.reset(new OutputPin());
				this->addToElementRepository("Create.result", fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result);
					fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result_LiteralUnlimitedNatural590.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural590", fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result_LiteralUnlimitedNatural590);
					fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result_LiteralInteger591.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger591", fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result_LiteralInteger591);
			fUML_Tests_TestClassExtentReader_extent.reset(new Parameter());
			this->addToElementRepository("extent", fUML_Tests_TestClassExtentReader_extent);
				fUML_Tests_TestClassExtentReader_extent_LiteralUnlimitedNatural592.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural592", fUML_Tests_TestClassExtentReader_extent_LiteralUnlimitedNatural592);
				fUML_Tests_TestClassExtentReader_extent_LiteralUnlimitedNatural593.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural593", fUML_Tests_TestClassExtentReader_extent_LiteralUnlimitedNatural593);
			fUML_Tests_TestClassExtentReader_Param_object.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(object)", fUML_Tests_TestClassExtentReader_Param_object);
		fUML_Tests_TestCentralBuffer.reset(new Activity());
		this->addToElementRepository("TestCentralBuffer", fUML_Tests_TestCentralBuffer);
			fUML_Tests_TestCentralBuffer_output.reset(new Parameter());
			this->addToElementRepository("output", fUML_Tests_TestCentralBuffer_output);
				fUML_Tests_TestCentralBuffer_output_LiteralUnlimitedNatural594.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural594", fUML_Tests_TestCentralBuffer_output_LiteralUnlimitedNatural594);
				fUML_Tests_TestCentralBuffer_output_LiteralInteger595.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger595", fUML_Tests_TestCentralBuffer_output_LiteralInteger595);
			fUML_Tests_TestCentralBuffer_ObjectFlow596.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow596", fUML_Tests_TestCentralBuffer_ObjectFlow596);
				fUML_Tests_TestCentralBuffer_ObjectFlow596_LiteralUnlimitedNatural597.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural597", fUML_Tests_TestCentralBuffer_ObjectFlow596_LiteralUnlimitedNatural597);
			fUML_Tests_TestCentralBuffer_input1.reset(new Parameter());
			this->addToElementRepository("input1", fUML_Tests_TestCentralBuffer_input1);
			fUML_Tests_TestCentralBuffer_ObjectFlow598.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow598", fUML_Tests_TestCentralBuffer_ObjectFlow598);
				fUML_Tests_TestCentralBuffer_ObjectFlow598_LiteralUnlimitedNatural599.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural599", fUML_Tests_TestCentralBuffer_ObjectFlow598_LiteralUnlimitedNatural599);
			fUML_Tests_TestCentralBuffer_StructuredActivityNode.reset(new StructuredActivityNode());
			this->addToElementRepository("StructuredActivityNode", fUML_Tests_TestCentralBuffer_StructuredActivityNode);
				fUML_Tests_TestCentralBuffer_StructuredActivityNode_CentralBufferNode.reset(new CentralBufferNode());
				this->addToElementRepository("CentralBufferNode", fUML_Tests_TestCentralBuffer_StructuredActivityNode_CentralBufferNode);
			fUML_Tests_TestCentralBuffer_ControlFlow600.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow600", fUML_Tests_TestCentralBuffer_ControlFlow600);
				fUML_Tests_TestCentralBuffer_ControlFlow600_LiteralUnlimitedNatural601.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural601", fUML_Tests_TestCentralBuffer_ControlFlow600_LiteralUnlimitedNatural601);
			fUML_Tests_TestCentralBuffer_InitialNode.reset(new InitialNode());
			this->addToElementRepository("InitialNode", fUML_Tests_TestCentralBuffer_InitialNode);
			fUML_Tests_TestCentralBuffer_input2.reset(new Parameter());
			this->addToElementRepository("input2", fUML_Tests_TestCentralBuffer_input2);
			fUML_Tests_TestCentralBuffer_Parameter_output.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(output)", fUML_Tests_TestCentralBuffer_Parameter_output);
			fUML_Tests_TestCentralBuffer_Parameter_input2.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(input2)", fUML_Tests_TestCentralBuffer_Parameter_input2);
			fUML_Tests_TestCentralBuffer_ObjectFlow602.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow602", fUML_Tests_TestCentralBuffer_ObjectFlow602);
				fUML_Tests_TestCentralBuffer_ObjectFlow602_LiteralUnlimitedNatural603.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural603", fUML_Tests_TestCentralBuffer_ObjectFlow602_LiteralUnlimitedNatural603);
			fUML_Tests_TestCentralBuffer_Parameter_input1.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(input1)", fUML_Tests_TestCentralBuffer_Parameter_input1);
		fUML_Tests_TestClassReclassifier.reset(new Activity());
		this->addToElementRepository("TestClassReclassifier", fUML_Tests_TestClassReclassifier);
			fUML_Tests_TestClassReclassifier_ObjectFlow604.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow604", fUML_Tests_TestClassReclassifier_ObjectFlow604);
				fUML_Tests_TestClassReclassifier_ObjectFlow604_LiteralUnlimitedNatural605.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural605", fUML_Tests_TestClassReclassifier_ObjectFlow604_LiteralUnlimitedNatural605);
			fUML_Tests_TestClassReclassifier_ObjectFlow606.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow606", fUML_Tests_TestClassReclassifier_ObjectFlow606);
				fUML_Tests_TestClassReclassifier_ObjectFlow606_LiteralUnlimitedNatural607.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural607", fUML_Tests_TestClassReclassifier_ObjectFlow606_LiteralUnlimitedNatural607);
			fUML_Tests_TestClassReclassifier_resultNode.reset(new ActivityParameterNode());
			this->addToElementRepository("resultNode", fUML_Tests_TestClassReclassifier_resultNode);
			fUML_Tests_TestClassReclassifier_Create_Subclass1.reset(new CreateObjectAction());
			this->addToElementRepository("Create(Subclass1)", fUML_Tests_TestClassReclassifier_Create_Subclass1);
				fUML_Tests_TestClassReclassifier_Create_Subclass1_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassReclassifier_Create_Subclass1_result);
					fUML_Tests_TestClassReclassifier_Create_Subclass1_result_LiteralInteger608.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger608", fUML_Tests_TestClassReclassifier_Create_Subclass1_result_LiteralInteger608);
					fUML_Tests_TestClassReclassifier_Create_Subclass1_result_LiteralUnlimitedNatural609.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural609", fUML_Tests_TestClassReclassifier_Create_Subclass1_result_LiteralUnlimitedNatural609);
			fUML_Tests_TestClassReclassifier_ForkNode610.reset(new ForkNode());
			this->addToElementRepository("ForkNode610", fUML_Tests_TestClassReclassifier_ForkNode610);
			fUML_Tests_TestClassReclassifier_ObjectFlow611.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow611", fUML_Tests_TestClassReclassifier_ObjectFlow611);
				fUML_Tests_TestClassReclassifier_ObjectFlow611_LiteralUnlimitedNatural612.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural612", fUML_Tests_TestClassReclassifier_ObjectFlow611_LiteralUnlimitedNatural612);
			fUML_Tests_TestClassReclassifier_Value_1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)", fUML_Tests_TestClassReclassifier_Value_1);
				fUML_Tests_TestClassReclassifier_Value_1_LiteralInteger613.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger613", fUML_Tests_TestClassReclassifier_Value_1_LiteralInteger613);
				fUML_Tests_TestClassReclassifier_Value_1_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassReclassifier_Value_1_result);
					fUML_Tests_TestClassReclassifier_Value_1_result_LiteralInteger614.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger614", fUML_Tests_TestClassReclassifier_Value_1_result_LiteralInteger614);
					fUML_Tests_TestClassReclassifier_Value_1_result_LiteralUnlimitedNatural615.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural615", fUML_Tests_TestClassReclassifier_Value_1_result_LiteralUnlimitedNatural615);
			fUML_Tests_TestClassReclassifier_result.reset(new Parameter());
			this->addToElementRepository("result", fUML_Tests_TestClassReclassifier_result);
				fUML_Tests_TestClassReclassifier_result_LiteralUnlimitedNatural616.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural616", fUML_Tests_TestClassReclassifier_result_LiteralUnlimitedNatural616);
				fUML_Tests_TestClassReclassifier_result_LiteralInteger617.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger617", fUML_Tests_TestClassReclassifier_result_LiteralInteger617);
			fUML_Tests_TestClassReclassifier_ObjectFlow618.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow618", fUML_Tests_TestClassReclassifier_ObjectFlow618);
				fUML_Tests_TestClassReclassifier_ObjectFlow618_LiteralUnlimitedNatural619.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural619", fUML_Tests_TestClassReclassifier_ObjectFlow618_LiteralUnlimitedNatural619);
			fUML_Tests_TestClassReclassifier_ObjectFlow620.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow620", fUML_Tests_TestClassReclassifier_ObjectFlow620);
				fUML_Tests_TestClassReclassifier_ObjectFlow620_LiteralUnlimitedNatural621.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural621", fUML_Tests_TestClassReclassifier_ObjectFlow620_LiteralUnlimitedNatural621);
			fUML_Tests_TestClassReclassifier_Write_x.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(x)", fUML_Tests_TestClassReclassifier_Write_x);
				fUML_Tests_TestClassReclassifier_Write_x_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassReclassifier_Write_x_result);
					fUML_Tests_TestClassReclassifier_Write_x_result_LiteralUnlimitedNatural622.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural622", fUML_Tests_TestClassReclassifier_Write_x_result_LiteralUnlimitedNatural622);
					fUML_Tests_TestClassReclassifier_Write_x_result_LiteralInteger623.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger623", fUML_Tests_TestClassReclassifier_Write_x_result_LiteralInteger623);
				fUML_Tests_TestClassReclassifier_Write_x_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassReclassifier_Write_x_value);
					fUML_Tests_TestClassReclassifier_Write_x_value_LiteralInteger624.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger624", fUML_Tests_TestClassReclassifier_Write_x_value_LiteralInteger624);
					fUML_Tests_TestClassReclassifier_Write_x_value_LiteralUnlimitedNatural625.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural625", fUML_Tests_TestClassReclassifier_Write_x_value_LiteralUnlimitedNatural625);
				fUML_Tests_TestClassReclassifier_Write_x_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassReclassifier_Write_x_object);
					fUML_Tests_TestClassReclassifier_Write_x_object_LiteralUnlimitedNatural626.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural626", fUML_Tests_TestClassReclassifier_Write_x_object_LiteralUnlimitedNatural626);
					fUML_Tests_TestClassReclassifier_Write_x_object_LiteralInteger627.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger627", fUML_Tests_TestClassReclassifier_Write_x_object_LiteralInteger627);
			fUML_Tests_TestClassReclassifier_Reclassify_Subclass2.reset(new ReclassifyObjectAction());
			this->addToElementRepository("Reclassify(Subclass2)", fUML_Tests_TestClassReclassifier_Reclassify_Subclass2);
				fUML_Tests_TestClassReclassifier_Reclassify_Subclass2_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassReclassifier_Reclassify_Subclass2_object);
			fUML_Tests_TestClassReclassifier_ObjectFlow628.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow628", fUML_Tests_TestClassReclassifier_ObjectFlow628);
				fUML_Tests_TestClassReclassifier_ObjectFlow628_LiteralUnlimitedNatural629.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural629", fUML_Tests_TestClassReclassifier_ObjectFlow628_LiteralUnlimitedNatural629);
			fUML_Tests_TestClassReclassifier_Value_2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2)", fUML_Tests_TestClassReclassifier_Value_2);
				fUML_Tests_TestClassReclassifier_Value_2_LiteralInteger630.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger630", fUML_Tests_TestClassReclassifier_Value_2_LiteralInteger630);
				fUML_Tests_TestClassReclassifier_Value_2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassReclassifier_Value_2_result);
					fUML_Tests_TestClassReclassifier_Value_2_result_LiteralInteger631.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger631", fUML_Tests_TestClassReclassifier_Value_2_result_LiteralInteger631);
					fUML_Tests_TestClassReclassifier_Value_2_result_LiteralUnlimitedNatural632.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural632", fUML_Tests_TestClassReclassifier_Value_2_result_LiteralUnlimitedNatural632);
			fUML_Tests_TestClassReclassifier_Write_y.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(y)", fUML_Tests_TestClassReclassifier_Write_y);
				fUML_Tests_TestClassReclassifier_Write_y_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassReclassifier_Write_y_result);
					fUML_Tests_TestClassReclassifier_Write_y_result_LiteralUnlimitedNatural633.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural633", fUML_Tests_TestClassReclassifier_Write_y_result_LiteralUnlimitedNatural633);
					fUML_Tests_TestClassReclassifier_Write_y_result_LiteralInteger634.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger634", fUML_Tests_TestClassReclassifier_Write_y_result_LiteralInteger634);
				fUML_Tests_TestClassReclassifier_Write_y_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassReclassifier_Write_y_value);
				fUML_Tests_TestClassReclassifier_Write_y_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassReclassifier_Write_y_object);
					fUML_Tests_TestClassReclassifier_Write_y_object_LiteralUnlimitedNatural635.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural635", fUML_Tests_TestClassReclassifier_Write_y_object_LiteralUnlimitedNatural635);
					fUML_Tests_TestClassReclassifier_Write_y_object_LiteralInteger636.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger636", fUML_Tests_TestClassReclassifier_Write_y_object_LiteralInteger636);
			fUML_Tests_TestClassReclassifier_Write_a.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(a)", fUML_Tests_TestClassReclassifier_Write_a);
				fUML_Tests_TestClassReclassifier_Write_a_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassReclassifier_Write_a_result);
					fUML_Tests_TestClassReclassifier_Write_a_result_LiteralUnlimitedNatural637.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural637", fUML_Tests_TestClassReclassifier_Write_a_result_LiteralUnlimitedNatural637);
					fUML_Tests_TestClassReclassifier_Write_a_result_LiteralInteger638.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger638", fUML_Tests_TestClassReclassifier_Write_a_result_LiteralInteger638);
				fUML_Tests_TestClassReclassifier_Write_a_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassReclassifier_Write_a_value);
					fUML_Tests_TestClassReclassifier_Write_a_value_LiteralUnlimitedNatural639.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural639", fUML_Tests_TestClassReclassifier_Write_a_value_LiteralUnlimitedNatural639);
					fUML_Tests_TestClassReclassifier_Write_a_value_LiteralInteger640.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger640", fUML_Tests_TestClassReclassifier_Write_a_value_LiteralInteger640);
				fUML_Tests_TestClassReclassifier_Write_a_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassReclassifier_Write_a_object);
					fUML_Tests_TestClassReclassifier_Write_a_object_LiteralInteger641.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger641", fUML_Tests_TestClassReclassifier_Write_a_object_LiteralInteger641);
					fUML_Tests_TestClassReclassifier_Write_a_object_LiteralUnlimitedNatural642.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural642", fUML_Tests_TestClassReclassifier_Write_a_object_LiteralUnlimitedNatural642);
			fUML_Tests_TestClassReclassifier_Value_true.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(true)", fUML_Tests_TestClassReclassifier_Value_true);
				fUML_Tests_TestClassReclassifier_Value_true_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassReclassifier_Value_true_result);
					fUML_Tests_TestClassReclassifier_Value_true_result_LiteralUnlimitedNatural643.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural643", fUML_Tests_TestClassReclassifier_Value_true_result_LiteralUnlimitedNatural643);
					fUML_Tests_TestClassReclassifier_Value_true_result_LiteralInteger644.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger644", fUML_Tests_TestClassReclassifier_Value_true_result_LiteralInteger644);
				fUML_Tests_TestClassReclassifier_Value_true_LiteralBoolean645.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean645", fUML_Tests_TestClassReclassifier_Value_true_LiteralBoolean645);
			fUML_Tests_TestClassReclassifier_ObjectFlow646.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow646", fUML_Tests_TestClassReclassifier_ObjectFlow646);
				fUML_Tests_TestClassReclassifier_ObjectFlow646_LiteralUnlimitedNatural647.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural647", fUML_Tests_TestClassReclassifier_ObjectFlow646_LiteralUnlimitedNatural647);
			fUML_Tests_TestClassReclassifier_ObjectFlow648.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow648", fUML_Tests_TestClassReclassifier_ObjectFlow648);
				fUML_Tests_TestClassReclassifier_ObjectFlow648_LiteralUnlimitedNatural649.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural649", fUML_Tests_TestClassReclassifier_ObjectFlow648_LiteralUnlimitedNatural649);
			fUML_Tests_TestClassReclassifier_ObjectFlow650.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow650", fUML_Tests_TestClassReclassifier_ObjectFlow650);
				fUML_Tests_TestClassReclassifier_ObjectFlow650_LiteralUnlimitedNatural651.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural651", fUML_Tests_TestClassReclassifier_ObjectFlow650_LiteralUnlimitedNatural651);
		fUML_Tests_CompositeAssociation.reset(new Association());
		this->addToElementRepository("CompositeAssociation", fUML_Tests_CompositeAssociation);
			fUML_Tests_CompositeAssociation_composite.reset(new Property());
			this->addToElementRepository("composite", fUML_Tests_CompositeAssociation_composite);
			fUML_Tests_CompositeAssociation_c2.reset(new Property());
			this->addToElementRepository("c2", fUML_Tests_CompositeAssociation_c2);
		fUML_Tests_SimpleDecision.reset(new Activity());
		this->addToElementRepository("SimpleDecision", fUML_Tests_SimpleDecision);
			fUML_Tests_SimpleDecision_output_0.reset(new Parameter());
			this->addToElementRepository("output_0", fUML_Tests_SimpleDecision_output_0);
				fUML_Tests_SimpleDecision_output_0_LiteralInteger652.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger652", fUML_Tests_SimpleDecision_output_0_LiteralInteger652);
				fUML_Tests_SimpleDecision_output_0_LiteralUnlimitedNatural653.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural653", fUML_Tests_SimpleDecision_output_0_LiteralUnlimitedNatural653);
			fUML_Tests_SimpleDecision_output_1.reset(new Parameter());
			this->addToElementRepository("output_1", fUML_Tests_SimpleDecision_output_1);
				fUML_Tests_SimpleDecision_output_1_LiteralInteger654.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger654", fUML_Tests_SimpleDecision_output_1_LiteralInteger654);
				fUML_Tests_SimpleDecision_output_1_LiteralUnlimitedNatural655.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural655", fUML_Tests_SimpleDecision_output_1_LiteralUnlimitedNatural655);
			fUML_Tests_SimpleDecision_Parameter_testValue.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(testValue)", fUML_Tests_SimpleDecision_Parameter_testValue);
			fUML_Tests_SimpleDecision_DecisionNode.reset(new DecisionNode());
			this->addToElementRepository("DecisionNode", fUML_Tests_SimpleDecision_DecisionNode);
			fUML_Tests_SimpleDecision_ObjectFlow656.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow656", fUML_Tests_SimpleDecision_ObjectFlow656);
				fUML_Tests_SimpleDecision_ObjectFlow656_LiteralInteger657.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger657", fUML_Tests_SimpleDecision_ObjectFlow656_LiteralInteger657);
				fUML_Tests_SimpleDecision_ObjectFlow656_LiteralInteger658.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger658", fUML_Tests_SimpleDecision_ObjectFlow656_LiteralInteger658);
			fUML_Tests_SimpleDecision_Parameter_output_1.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(output_1)", fUML_Tests_SimpleDecision_Parameter_output_1);
			fUML_Tests_SimpleDecision_testValue.reset(new Parameter());
			this->addToElementRepository("testValue", fUML_Tests_SimpleDecision_testValue);
				fUML_Tests_SimpleDecision_testValue_LiteralUnlimitedNatural659.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural659", fUML_Tests_SimpleDecision_testValue_LiteralUnlimitedNatural659);
				fUML_Tests_SimpleDecision_testValue_LiteralInteger660.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger660", fUML_Tests_SimpleDecision_testValue_LiteralInteger660);
			fUML_Tests_SimpleDecision_Parameter_output_0.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(output_0)", fUML_Tests_SimpleDecision_Parameter_output_0);
			fUML_Tests_SimpleDecision_ObjectFlow661.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow661", fUML_Tests_SimpleDecision_ObjectFlow661);
				fUML_Tests_SimpleDecision_ObjectFlow661_LiteralInteger662.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger662", fUML_Tests_SimpleDecision_ObjectFlow661_LiteralInteger662);
				fUML_Tests_SimpleDecision_ObjectFlow661_LiteralInteger663.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger663", fUML_Tests_SimpleDecision_ObjectFlow661_LiteralInteger663);
			fUML_Tests_SimpleDecision_ObjectFlow664.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow664", fUML_Tests_SimpleDecision_ObjectFlow664);
				fUML_Tests_SimpleDecision_ObjectFlow664_LiteralInteger665.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger665", fUML_Tests_SimpleDecision_ObjectFlow664_LiteralInteger665);
		fUML_Tests_TestSpecializedSignalSend.reset(new Activity());
		this->addToElementRepository("TestSpecializedSignalSend", fUML_Tests_TestSpecializedSignalSend);
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow666.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow666", fUML_Tests_TestSpecializedSignalSend_ObjectFlow666);
				fUML_Tests_TestSpecializedSignalSend_ObjectFlow666_LiteralUnlimitedNatural667.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural667", fUML_Tests_TestSpecializedSignalSend_ObjectFlow666_LiteralUnlimitedNatural667);
			fUML_Tests_TestSpecializedSignalSend_ControlFlow668.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow668", fUML_Tests_TestSpecializedSignalSend_ControlFlow668);
				fUML_Tests_TestSpecializedSignalSend_ControlFlow668_LiteralUnlimitedNatural669.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural669", fUML_Tests_TestSpecializedSignalSend_ControlFlow668_LiteralUnlimitedNatural669);
			fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal.reset(new SendSignalAction());
			this->addToElementRepository("Send(SpecializedSignal)", fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal);
				fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target.reset(new InputPin());
				this->addToElementRepository("target", fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target);
					fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target_LiteralInteger670.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger670", fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target_LiteralInteger670);
					fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target_LiteralUnlimitedNatural671.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural671", fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target_LiteralUnlimitedNatural671);
			fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver.reset(new CreateObjectAction());
			this->addToElementRepository("Create(TestSignalReceiver)", fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver);
				fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result);
					fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result_LiteralUnlimitedNatural672.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural672", fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result_LiteralUnlimitedNatural672);
					fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result_LiteralInteger673.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger673", fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result_LiteralInteger673);
			fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver.reset(new StartObjectBehaviorAction());
			this->addToElementRepository("Start(TestSignalReceiver)", fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver);
				fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object);
					fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object_LiteralUnlimitedNatural674.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural674", fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object_LiteralUnlimitedNatural674);
					fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object_LiteralInteger675.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger675", fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object_LiteralInteger675);
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow676.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow676", fUML_Tests_TestSpecializedSignalSend_ObjectFlow676);
				fUML_Tests_TestSpecializedSignalSend_ObjectFlow676_LiteralUnlimitedNatural677.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural677", fUML_Tests_TestSpecializedSignalSend_ObjectFlow676_LiteralUnlimitedNatural677);
			fUML_Tests_TestSpecializedSignalSend_ForkNode678.reset(new ForkNode());
			this->addToElementRepository("ForkNode678", fUML_Tests_TestSpecializedSignalSend_ForkNode678);
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow679.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow679", fUML_Tests_TestSpecializedSignalSend_ObjectFlow679);
				fUML_Tests_TestSpecializedSignalSend_ObjectFlow679_LiteralUnlimitedNatural680.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural680", fUML_Tests_TestSpecializedSignalSend_ObjectFlow679_LiteralUnlimitedNatural680);
			fUML_Tests_TestSpecializedSignalSend_ControlFlow681.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow681", fUML_Tests_TestSpecializedSignalSend_ControlFlow681);
				fUML_Tests_TestSpecializedSignalSend_ControlFlow681_LiteralUnlimitedNatural682.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural682", fUML_Tests_TestSpecializedSignalSend_ControlFlow681_LiteralUnlimitedNatural682);
			fUML_Tests_TestSpecializedSignalSend_ControlFlow683.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow683", fUML_Tests_TestSpecializedSignalSend_ControlFlow683);
				fUML_Tests_TestSpecializedSignalSend_ControlFlow683_LiteralUnlimitedNatural684.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural684", fUML_Tests_TestSpecializedSignalSend_ControlFlow683_LiteralUnlimitedNatural684);
			fUML_Tests_TestSpecializedSignalSend_InitialNode685.reset(new InitialNode());
			this->addToElementRepository("InitialNode685", fUML_Tests_TestSpecializedSignalSend_InitialNode685);
			fUML_Tests_TestSpecializedSignalSend_ActivityFinalNode686.reset(new ActivityFinalNode());
			this->addToElementRepository("ActivityFinalNode686", fUML_Tests_TestSpecializedSignalSend_ActivityFinalNode686);
		fUML_Tests_TestCallAccepter.reset(new Activity());
		this->addToElementRepository("TestCallAccepter", fUML_Tests_TestCallAccepter);
			fUML_Tests_TestCallAccepter_ObjectFlow687.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow687", fUML_Tests_TestCallAccepter_ObjectFlow687);
				fUML_Tests_TestCallAccepter_ObjectFlow687_LiteralUnlimitedNatural688.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural688", fUML_Tests_TestCallAccepter_ObjectFlow687_LiteralUnlimitedNatural688);
			fUML_Tests_TestCallAccepter_Reply_test.reset(new ReplyAction());
			this->addToElementRepository("Reply(test)", fUML_Tests_TestCallAccepter_Reply_test);
				fUML_Tests_TestCallAccepter_Reply_test_Reply_test_replyValue.reset(new InputPin());
				this->addToElementRepository("Reply(test).replyValue", fUML_Tests_TestCallAccepter_Reply_test_Reply_test_replyValue);
				fUML_Tests_TestCallAccepter_Reply_test_Reply_test_returnInfo.reset(new InputPin());
				this->addToElementRepository("Reply(test).returnInfo", fUML_Tests_TestCallAccepter_Reply_test_Reply_test_returnInfo);
			fUML_Tests_TestCallAccepter_ObjectFlow689.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow689", fUML_Tests_TestCallAccepter_ObjectFlow689);
				fUML_Tests_TestCallAccepter_ObjectFlow689_LiteralUnlimitedNatural690.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural690", fUML_Tests_TestCallAccepter_ObjectFlow689_LiteralUnlimitedNatural690);
			fUML_Tests_TestCallAccepter_ControlFlow691.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow691", fUML_Tests_TestCallAccepter_ControlFlow691);
				fUML_Tests_TestCallAccepter_ControlFlow691_LiteralUnlimitedNatural692.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural692", fUML_Tests_TestCallAccepter_ControlFlow691_LiteralUnlimitedNatural692);
			fUML_Tests_TestCallAccepter_InitialNode693.reset(new InitialNode());
			this->addToElementRepository("InitialNode693", fUML_Tests_TestCallAccepter_InitialNode693);
			fUML_Tests_TestCallAccepter_test.reset(new Operation());
			this->addToElementRepository("test", fUML_Tests_TestCallAccepter_test);
				fUML_Tests_TestCallAccepter_test_output.reset(new Parameter());
				this->addToElementRepository("output", fUML_Tests_TestCallAccepter_test_output);
				fUML_Tests_TestCallAccepter_test_input.reset(new Parameter());
				this->addToElementRepository("input", fUML_Tests_TestCallAccepter_test_input);
			fUML_Tests_TestCallAccepter_Accept_test.reset(new AcceptCallAction());
			this->addToElementRepository("Accept(test)", fUML_Tests_TestCallAccepter_Accept_test);
				fUML_Tests_TestCallAccepter_Accept_test_Accept_test_returnInfo.reset(new OutputPin());
				this->addToElementRepository("Accept(test).returnInfo", fUML_Tests_TestCallAccepter_Accept_test_Accept_test_returnInfo);
				fUML_Tests_TestCallAccepter_Accept_test_Accept_test_result.reset(new OutputPin());
				this->addToElementRepository("Accept(test).result", fUML_Tests_TestCallAccepter_Accept_test_Accept_test_result);
				fUML_Tests_TestCallAccepter_Accept_test_Trigger694.reset(new Trigger());
				this->addToElementRepository("Trigger694", fUML_Tests_TestCallAccepter_Accept_test_Trigger694);
		fUML_Tests_TestGeneralizationAssembly.reset(new Activity());
		this->addToElementRepository("TestGeneralizationAssembly", fUML_Tests_TestGeneralizationAssembly);
			fUML_Tests_TestGeneralizationAssembly_ObjectFlow695.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow695", fUML_Tests_TestGeneralizationAssembly_ObjectFlow695);
			fUML_Tests_TestGeneralizationAssembly_result.reset(new Parameter());
			this->addToElementRepository("result", fUML_Tests_TestGeneralizationAssembly_result);
			fUML_Tests_TestGeneralizationAssembly_Create_Specific.reset(new CreateObjectAction());
			this->addToElementRepository("Create(Specific)", fUML_Tests_TestGeneralizationAssembly_Create_Specific);
				fUML_Tests_TestGeneralizationAssembly_Create_Specific_CreateObjectAction_result.reset(new OutputPin());
				this->addToElementRepository("CreateObjectAction.result", fUML_Tests_TestGeneralizationAssembly_Create_Specific_CreateObjectAction_result);
			fUML_Tests_TestGeneralizationAssembly_ActivityParameterNode.reset(new ActivityParameterNode());
			this->addToElementRepository("ActivityParameterNode", fUML_Tests_TestGeneralizationAssembly_ActivityParameterNode);
		fUML_Tests_ActiveClass.reset(new Class_());
		this->addToElementRepository("ActiveClass", fUML_Tests_ActiveClass);
			fUML_Tests_ActiveClass_signal2.reset(new Property());
			this->addToElementRepository("signal2", fUML_Tests_ActiveClass_signal2);
			fUML_Tests_ActiveClass_ActiveClassBehavior.reset(new Activity());
			this->addToElementRepository("ActiveClassBehavior", fUML_Tests_ActiveClass_ActiveClassBehavior);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow696.reset(new ObjectFlow());
				this->addToElementRepository("ObjectFlow696", fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow696);
					fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow696_LiteralUnlimitedNatural697.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural697", fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow696_LiteralUnlimitedNatural697);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Fork_self.reset(new ForkNode());
				this->addToElementRepository("Fork(self)", fUML_Tests_ActiveClass_ActiveClassBehavior_Fork_self);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow698.reset(new ObjectFlow());
				this->addToElementRepository("ObjectFlow698", fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow698);
					fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow698_LiteralUnlimitedNatural699.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural699", fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow698_LiteralUnlimitedNatural699);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf.reset(new ReadSelfAction());
				this->addToElementRepository("ReadSelf", fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf);
					fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf_self.reset(new OutputPin());
					this->addToElementRepository("self", fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf_self);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow700.reset(new ObjectFlow());
				this->addToElementRepository("ObjectFlow700", fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow700);
					fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow700_LiteralUnlimitedNatural701.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural701", fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow700_LiteralUnlimitedNatural701);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal.reset(new AcceptEventAction());
				this->addToElementRepository("Accept(OtherSignal)", fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Trigger702.reset(new Trigger());
					this->addToElementRepository("Trigger702", fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Trigger702);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Accept_OtherSignal_result.reset(new OutputPin());
					this->addToElementRepository("Accept(OtherSignal).result", fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Accept_OtherSignal_result);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal.reset(new AcceptEventAction());
				this->addToElementRepository("Accept(TestSignal)", fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Trigger703.reset(new Trigger());
					this->addToElementRepository("Trigger703", fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Trigger703);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Accept_TestSignal_result.reset(new OutputPin());
					this->addToElementRepository("Accept(TestSignal).result", fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Accept_TestSignal_result);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1.reset(new AddStructuralFeatureValueAction());
				this->addToElementRepository("Write(signal1)", fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_object.reset(new InputPin());
					this->addToElementRepository("Write(signal1).object", fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_object);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_value.reset(new InputPin());
					this->addToElementRepository("Write(signal1).value", fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_value);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow704.reset(new ObjectFlow());
				this->addToElementRepository("ObjectFlow704", fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow704);
					fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow704_LiteralUnlimitedNatural705.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural705", fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow704_LiteralUnlimitedNatural705);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow706.reset(new ObjectFlow());
				this->addToElementRepository("ObjectFlow706", fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow706);
					fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow706_LiteralUnlimitedNatural707.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural707", fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow706_LiteralUnlimitedNatural707);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2.reset(new AddStructuralFeatureValueAction());
				this->addToElementRepository("Write(signal2)", fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_value.reset(new InputPin());
					this->addToElementRepository("Write(signal2).value", fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_value);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_object.reset(new InputPin());
					this->addToElementRepository("Write(signal2).object", fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_object);
			fUML_Tests_ActiveClass_signal1.reset(new Property());
			this->addToElementRepository("signal1", fUML_Tests_ActiveClass_signal1);
		fUML_Tests_Subclass2.reset(new Class_());
		this->addToElementRepository("Subclass2", fUML_Tests_Subclass2);
			fUML_Tests_Subclass2_b.reset(new Property());
			this->addToElementRepository("b", fUML_Tests_Subclass2_b);
			fUML_Tests_Subclass2_Generalization708.reset(new Generalization());
			this->addToElementRepository("Generalization708", fUML_Tests_Subclass2_Generalization708);
		fUML_Tests_TestClassIdentityTester.reset(new Activity());
		this->addToElementRepository("TestClassIdentityTester", fUML_Tests_TestClassIdentityTester);
			fUML_Tests_TestClassIdentityTester_value1.reset(new Parameter());
			this->addToElementRepository("value1", fUML_Tests_TestClassIdentityTester_value1);
				fUML_Tests_TestClassIdentityTester_value1_LiteralInteger709.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger709", fUML_Tests_TestClassIdentityTester_value1_LiteralInteger709);
				fUML_Tests_TestClassIdentityTester_value1_LiteralUnlimitedNatural710.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural710", fUML_Tests_TestClassIdentityTester_value1_LiteralUnlimitedNatural710);
			fUML_Tests_TestClassIdentityTester_Parameter_value2.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(value2)", fUML_Tests_TestClassIdentityTester_Parameter_value2);
			fUML_Tests_TestClassIdentityTester_result.reset(new Parameter());
			this->addToElementRepository("result", fUML_Tests_TestClassIdentityTester_result);
				fUML_Tests_TestClassIdentityTester_result_LiteralUnlimitedNatural711.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural711", fUML_Tests_TestClassIdentityTester_result_LiteralUnlimitedNatural711);
				fUML_Tests_TestClassIdentityTester_result_LiteralInteger712.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger712", fUML_Tests_TestClassIdentityTester_result_LiteralInteger712);
			fUML_Tests_TestClassIdentityTester_ObjectFlow713.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow713", fUML_Tests_TestClassIdentityTester_ObjectFlow713);
				fUML_Tests_TestClassIdentityTester_ObjectFlow713_LiteralInteger714.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger714", fUML_Tests_TestClassIdentityTester_ObjectFlow713_LiteralInteger714);
			fUML_Tests_TestClassIdentityTester_Parameter_result.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(result)", fUML_Tests_TestClassIdentityTester_Parameter_result);
			fUML_Tests_TestClassIdentityTester_Parameter_value1.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(value1)", fUML_Tests_TestClassIdentityTester_Parameter_value1);
			fUML_Tests_TestClassIdentityTester_ObjectFlow715.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow715", fUML_Tests_TestClassIdentityTester_ObjectFlow715);
				fUML_Tests_TestClassIdentityTester_ObjectFlow715_LiteralInteger716.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger716", fUML_Tests_TestClassIdentityTester_ObjectFlow715_LiteralInteger716);
			fUML_Tests_TestClassIdentityTester_TestIdentity.reset(new TestIdentityAction());
			this->addToElementRepository("TestIdentity", fUML_Tests_TestClassIdentityTester_TestIdentity);
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_second.reset(new InputPin());
				this->addToElementRepository("TestIdentity.second", fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_second);
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_first.reset(new InputPin());
				this->addToElementRepository("TestIdentity.first", fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_first);
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_result.reset(new OutputPin());
				this->addToElementRepository("TestIdentity.result", fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_result);
			fUML_Tests_TestClassIdentityTester_ObjectFlow717.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow717", fUML_Tests_TestClassIdentityTester_ObjectFlow717);
				fUML_Tests_TestClassIdentityTester_ObjectFlow717_LiteralInteger718.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger718", fUML_Tests_TestClassIdentityTester_ObjectFlow717_LiteralInteger718);
			fUML_Tests_TestClassIdentityTester_value2.reset(new Parameter());
			this->addToElementRepository("value2", fUML_Tests_TestClassIdentityTester_value2);
				fUML_Tests_TestClassIdentityTester_value2_LiteralUnlimitedNatural719.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural719", fUML_Tests_TestClassIdentityTester_value2_LiteralUnlimitedNatural719);
				fUML_Tests_TestClassIdentityTester_value2_LiteralInteger720.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger720", fUML_Tests_TestClassIdentityTester_value2_LiteralInteger720);
		fUML_Tests_SelfReader.reset(new Activity());
		this->addToElementRepository("SelfReader", fUML_Tests_SelfReader);
			fUML_Tests_SelfReader_Parameter_self.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(self)", fUML_Tests_SelfReader_Parameter_self);
			fUML_Tests_SelfReader_self.reset(new Parameter());
			this->addToElementRepository("self", fUML_Tests_SelfReader_self);
				fUML_Tests_SelfReader_self_LiteralUnlimitedNatural721.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural721", fUML_Tests_SelfReader_self_LiteralUnlimitedNatural721);
				fUML_Tests_SelfReader_self_LiteralInteger722.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger722", fUML_Tests_SelfReader_self_LiteralInteger722);
			fUML_Tests_SelfReader_Parameter_isSelfReader.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(isSelfReader)", fUML_Tests_SelfReader_Parameter_isSelfReader);
			fUML_Tests_SelfReader_ObjectFlow723.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow723", fUML_Tests_SelfReader_ObjectFlow723);
				fUML_Tests_SelfReader_ObjectFlow723_LiteralUnlimitedNatural724.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural724", fUML_Tests_SelfReader_ObjectFlow723_LiteralUnlimitedNatural724);
			fUML_Tests_SelfReader_ReadSelf.reset(new ReadSelfAction());
			this->addToElementRepository("ReadSelf", fUML_Tests_SelfReader_ReadSelf);
				fUML_Tests_SelfReader_ReadSelf_ReadSelf_result.reset(new OutputPin());
				this->addToElementRepository("ReadSelf.result", fUML_Tests_SelfReader_ReadSelf_ReadSelf_result);
			fUML_Tests_SelfReader_isSelfReader.reset(new Parameter());
			this->addToElementRepository("isSelfReader", fUML_Tests_SelfReader_isSelfReader);
			fUML_Tests_SelfReader_ObjectFlow725.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow725", fUML_Tests_SelfReader_ObjectFlow725);
				fUML_Tests_SelfReader_ObjectFlow725_LiteralUnlimitedNatural726.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural726", fUML_Tests_SelfReader_ObjectFlow725_LiteralUnlimitedNatural726);
			fUML_Tests_SelfReader_ObjectFlow727.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow727", fUML_Tests_SelfReader_ObjectFlow727);
				fUML_Tests_SelfReader_ObjectFlow727_LiteralUnlimitedNatural728.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural728", fUML_Tests_SelfReader_ObjectFlow727_LiteralUnlimitedNatural728);
			fUML_Tests_SelfReader_IsClassified_SelfReader.reset(new ReadIsClassifiedObjectAction());
			this->addToElementRepository("IsClassified(SelfReader)", fUML_Tests_SelfReader_IsClassified_SelfReader);
				fUML_Tests_SelfReader_IsClassified_SelfReader_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_SelfReader_IsClassified_SelfReader_result);
				fUML_Tests_SelfReader_IsClassified_SelfReader_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_SelfReader_IsClassified_SelfReader_object);
			fUML_Tests_SelfReader_ObjectFlow729.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow729", fUML_Tests_SelfReader_ObjectFlow729);
				fUML_Tests_SelfReader_ObjectFlow729_LiteralInteger730.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger730", fUML_Tests_SelfReader_ObjectFlow729_LiteralInteger730);
			fUML_Tests_SelfReader_ForkNode731.reset(new ForkNode());
			this->addToElementRepository("ForkNode731", fUML_Tests_SelfReader_ForkNode731);
		fUML_Tests_TestCallSend.reset(new Activity());
		this->addToElementRepository("TestCallSend", fUML_Tests_TestCallSend);
			fUML_Tests_TestCallSend_ControlFlow732.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow732", fUML_Tests_TestCallSend_ControlFlow732);
				fUML_Tests_TestCallSend_ControlFlow732_LiteralUnlimitedNatural733.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural733", fUML_Tests_TestCallSend_ControlFlow732_LiteralUnlimitedNatural733);
			fUML_Tests_TestCallSend_Create_TestCallSender.reset(new CreateObjectAction());
			this->addToElementRepository("Create(TestCallSender)", fUML_Tests_TestCallSend_Create_TestCallSender);
				fUML_Tests_TestCallSend_Create_TestCallSender_Create_TestCallSender_result.reset(new OutputPin());
				this->addToElementRepository("Create(TestCallSender).result", fUML_Tests_TestCallSend_Create_TestCallSender_Create_TestCallSender_result);
			fUML_Tests_TestCallSend_ForkNode.reset(new ForkNode());
			this->addToElementRepository("ForkNode", fUML_Tests_TestCallSend_ForkNode);
			fUML_Tests_TestCallSend_ObjectFlow734.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow734", fUML_Tests_TestCallSend_ObjectFlow734);
				fUML_Tests_TestCallSend_ObjectFlow734_LiteralUnlimitedNatural735.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural735", fUML_Tests_TestCallSend_ObjectFlow734_LiteralUnlimitedNatural735);
			fUML_Tests_TestCallSend_Send_TestSignal.reset(new SendSignalAction());
			this->addToElementRepository("Send(TestSignal)", fUML_Tests_TestCallSend_Send_TestSignal);
				fUML_Tests_TestCallSend_Send_TestSignal_Send_TestSignal_target.reset(new InputPin());
				this->addToElementRepository("Send(TestSignal).target", fUML_Tests_TestCallSend_Send_TestSignal_Send_TestSignal_target);
			fUML_Tests_TestCallSend_ObjectFlow736.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow736", fUML_Tests_TestCallSend_ObjectFlow736);
				fUML_Tests_TestCallSend_ObjectFlow736_LiteralUnlimitedNatural737.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural737", fUML_Tests_TestCallSend_ObjectFlow736_LiteralUnlimitedNatural737);
			fUML_Tests_TestCallSend_ObjectFlow738.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow738", fUML_Tests_TestCallSend_ObjectFlow738);
				fUML_Tests_TestCallSend_ObjectFlow738_LiteralUnlimitedNatural739.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural739", fUML_Tests_TestCallSend_ObjectFlow738_LiteralUnlimitedNatural739);
			fUML_Tests_TestCallSend_Start_TestCallSender.reset(new StartObjectBehaviorAction());
			this->addToElementRepository("Start(TestCallSender)", fUML_Tests_TestCallSend_Start_TestCallSender);
				fUML_Tests_TestCallSend_Start_TestCallSender_Start_TestCallSender_object.reset(new InputPin());
				this->addToElementRepository("Start(TestCallSender).object", fUML_Tests_TestCallSend_Start_TestCallSender_Start_TestCallSender_object);
		fUML_Tests_TestRealFunctions.reset(new Activity());
		this->addToElementRepository("TestRealFunctions", fUML_Tests_TestRealFunctions);
			fUML_Tests_TestRealFunctions_ControlFlow740.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow740", fUML_Tests_TestRealFunctions_ControlFlow740);
				fUML_Tests_TestRealFunctions_ControlFlow740_LiteralInteger741.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger741", fUML_Tests_TestRealFunctions_ControlFlow740_LiteralInteger741);
			fUML_Tests_TestRealFunctions_Call_Inv.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Inv)", fUML_Tests_TestRealFunctions_Call_Inv);
				fUML_Tests_TestRealFunctions_Call_Inv_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestRealFunctions_Call_Inv_x);
				fUML_Tests_TestRealFunctions_Call_Inv_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestRealFunctions_Call_Inv_result);
			fUML_Tests_TestRealFunctions_ObjectFlow742.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow742", fUML_Tests_TestRealFunctions_ObjectFlow742);
				fUML_Tests_TestRealFunctions_ObjectFlow742_LiteralInteger743.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger743", fUML_Tests_TestRealFunctions_ObjectFlow742_LiteralInteger743);
			fUML_Tests_TestRealFunctions_ObjectFlow744.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow744", fUML_Tests_TestRealFunctions_ObjectFlow744);
				fUML_Tests_TestRealFunctions_ObjectFlow744_LiteralUnlimitedNatural745.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural745", fUML_Tests_TestRealFunctions_ObjectFlow744_LiteralUnlimitedNatural745);
			fUML_Tests_TestRealFunctions_ObjectFlow746.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow746", fUML_Tests_TestRealFunctions_ObjectFlow746);
				fUML_Tests_TestRealFunctions_ObjectFlow746_LiteralUnlimitedNatural747.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural747", fUML_Tests_TestRealFunctions_ObjectFlow746_LiteralUnlimitedNatural747);
			fUML_Tests_TestRealFunctions_Call_Round.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Round)", fUML_Tests_TestRealFunctions_Call_Round);
				fUML_Tests_TestRealFunctions_Call_Round_Round_x.reset(new InputPin());
				this->addToElementRepository("Round.x", fUML_Tests_TestRealFunctions_Call_Round_Round_x);
				fUML_Tests_TestRealFunctions_Call_Round_Round_result.reset(new OutputPin());
				this->addToElementRepository("Round.result", fUML_Tests_TestRealFunctions_Call_Round_Round_result);
			fUML_Tests_TestRealFunctions_Param_PlusResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(PlusResult)", fUML_Tests_TestRealFunctions_Param_PlusResult);
			fUML_Tests_TestRealFunctions_Param_InvResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(InvResult)", fUML_Tests_TestRealFunctions_Param_InvResult);
			fUML_Tests_TestRealFunctions_AbsResult.reset(new Parameter());
			this->addToElementRepository("AbsResult", fUML_Tests_TestRealFunctions_AbsResult);
			fUML_Tests_TestRealFunctions_ObjectFlow748.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow748", fUML_Tests_TestRealFunctions_ObjectFlow748);
				fUML_Tests_TestRealFunctions_ObjectFlow748_LiteralInteger749.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger749", fUML_Tests_TestRealFunctions_ObjectFlow748_LiteralInteger749);
			fUML_Tests_TestRealFunctions_ControlFlow750.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow750", fUML_Tests_TestRealFunctions_ControlFlow750);
				fUML_Tests_TestRealFunctions_ControlFlow750_LiteralInteger751.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger751", fUML_Tests_TestRealFunctions_ControlFlow750_LiteralInteger751);
			fUML_Tests_TestRealFunctions_PlusResult.reset(new Parameter());
			this->addToElementRepository("PlusResult", fUML_Tests_TestRealFunctions_PlusResult);
			fUML_Tests_TestRealFunctions_ToIntegerResult.reset(new Parameter());
			this->addToElementRepository("ToIntegerResult", fUML_Tests_TestRealFunctions_ToIntegerResult);
				fUML_Tests_TestRealFunctions_ToIntegerResult_LiteralUnlimitedNatural752.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural752", fUML_Tests_TestRealFunctions_ToIntegerResult_LiteralUnlimitedNatural752);
				fUML_Tests_TestRealFunctions_ToIntegerResult_LiteralInteger753.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger753", fUML_Tests_TestRealFunctions_ToIntegerResult_LiteralInteger753);
			fUML_Tests_TestRealFunctions_ObjectFlow754.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow754", fUML_Tests_TestRealFunctions_ObjectFlow754);
				fUML_Tests_TestRealFunctions_ObjectFlow754_LiteralInteger755.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger755", fUML_Tests_TestRealFunctions_ObjectFlow754_LiteralInteger755);
			fUML_Tests_TestRealFunctions_ObjectFlow756.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow756", fUML_Tests_TestRealFunctions_ObjectFlow756);
				fUML_Tests_TestRealFunctions_ObjectFlow756_LiteralInteger757.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger757", fUML_Tests_TestRealFunctions_ObjectFlow756_LiteralInteger757);
			fUML_Tests_TestRealFunctions_Call_Plus.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Plus)", fUML_Tests_TestRealFunctions_Call_Plus);
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_result.reset(new OutputPin());
				this->addToElementRepository("Plus.result", fUML_Tests_TestRealFunctions_Call_Plus_Plus_result);
					fUML_Tests_TestRealFunctions_Call_Plus_Plus_result_LiteralInteger758.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger758", fUML_Tests_TestRealFunctions_Call_Plus_Plus_result_LiteralInteger758);
					fUML_Tests_TestRealFunctions_Call_Plus_Plus_result_LiteralUnlimitedNatural759.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural759", fUML_Tests_TestRealFunctions_Call_Plus_Plus_result_LiteralUnlimitedNatural759);
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_x.reset(new InputPin());
				this->addToElementRepository("Plus.x", fUML_Tests_TestRealFunctions_Call_Plus_Plus_x);
					fUML_Tests_TestRealFunctions_Call_Plus_Plus_x_LiteralInteger760.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger760", fUML_Tests_TestRealFunctions_Call_Plus_Plus_x_LiteralInteger760);
					fUML_Tests_TestRealFunctions_Call_Plus_Plus_x_LiteralUnlimitedNatural761.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural761", fUML_Tests_TestRealFunctions_Call_Plus_Plus_x_LiteralUnlimitedNatural761);
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_y.reset(new InputPin());
				this->addToElementRepository("Plus.y", fUML_Tests_TestRealFunctions_Call_Plus_Plus_y);
					fUML_Tests_TestRealFunctions_Call_Plus_Plus_y_LiteralUnlimitedNatural762.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural762", fUML_Tests_TestRealFunctions_Call_Plus_Plus_y_LiteralUnlimitedNatural762);
					fUML_Tests_TestRealFunctions_Call_Plus_Plus_y_LiteralInteger763.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger763", fUML_Tests_TestRealFunctions_Call_Plus_Plus_y_LiteralInteger763);
			fUML_Tests_TestRealFunctions_Param_MinResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(MinResult)", fUML_Tests_TestRealFunctions_Param_MinResult);
			fUML_Tests_TestRealFunctions_Param_NegResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(NegResult)", fUML_Tests_TestRealFunctions_Param_NegResult);
			fUML_Tests_TestRealFunctions_ObjectFlow764.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow764", fUML_Tests_TestRealFunctions_ObjectFlow764);
				fUML_Tests_TestRealFunctions_ObjectFlow764_LiteralInteger765.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger765", fUML_Tests_TestRealFunctions_ObjectFlow764_LiteralInteger765);
			fUML_Tests_TestRealFunctions_ControlFlow766.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow766", fUML_Tests_TestRealFunctions_ControlFlow766);
				fUML_Tests_TestRealFunctions_ControlFlow766_LiteralInteger767.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger767", fUML_Tests_TestRealFunctions_ControlFlow766_LiteralInteger767);
			fUML_Tests_TestRealFunctions_ControlFlow768.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow768", fUML_Tests_TestRealFunctions_ControlFlow768);
				fUML_Tests_TestRealFunctions_ControlFlow768_LiteralUnlimitedNatural769.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural769", fUML_Tests_TestRealFunctions_ControlFlow768_LiteralUnlimitedNatural769);
			fUML_Tests_TestRealFunctions_TimesResult.reset(new Parameter());
			this->addToElementRepository("TimesResult", fUML_Tests_TestRealFunctions_TimesResult);
			fUML_Tests_TestRealFunctions_MaxResult.reset(new Parameter());
			this->addToElementRepository("MaxResult", fUML_Tests_TestRealFunctions_MaxResult);
			fUML_Tests_TestRealFunctions_ObjectFlow770.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow770", fUML_Tests_TestRealFunctions_ObjectFlow770);
				fUML_Tests_TestRealFunctions_ObjectFlow770_LiteralInteger771.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger771", fUML_Tests_TestRealFunctions_ObjectFlow770_LiteralInteger771);
			fUML_Tests_TestRealFunctions_Param_TimesResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(TimesResult)", fUML_Tests_TestRealFunctions_Param_TimesResult);
			fUML_Tests_TestRealFunctions_Call_Divide.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Divide)", fUML_Tests_TestRealFunctions_Call_Divide);
				fUML_Tests_TestRealFunctions_Call_Divide_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestRealFunctions_Call_Divide_result);
					fUML_Tests_TestRealFunctions_Call_Divide_result_LiteralInteger772.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger772", fUML_Tests_TestRealFunctions_Call_Divide_result_LiteralInteger772);
					fUML_Tests_TestRealFunctions_Call_Divide_result_LiteralUnlimitedNatural773.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural773", fUML_Tests_TestRealFunctions_Call_Divide_result_LiteralUnlimitedNatural773);
				fUML_Tests_TestRealFunctions_Call_Divide_y.reset(new InputPin());
				this->addToElementRepository("y", fUML_Tests_TestRealFunctions_Call_Divide_y);
					fUML_Tests_TestRealFunctions_Call_Divide_y_LiteralUnlimitedNatural774.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural774", fUML_Tests_TestRealFunctions_Call_Divide_y_LiteralUnlimitedNatural774);
					fUML_Tests_TestRealFunctions_Call_Divide_y_LiteralInteger775.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger775", fUML_Tests_TestRealFunctions_Call_Divide_y_LiteralInteger775);
				fUML_Tests_TestRealFunctions_Call_Divide_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestRealFunctions_Call_Divide_x);
					fUML_Tests_TestRealFunctions_Call_Divide_x_LiteralUnlimitedNatural776.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural776", fUML_Tests_TestRealFunctions_Call_Divide_x_LiteralUnlimitedNatural776);
					fUML_Tests_TestRealFunctions_Call_Divide_x_LiteralInteger777.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger777", fUML_Tests_TestRealFunctions_Call_Divide_x_LiteralInteger777);
			fUML_Tests_TestRealFunctions_ObjectFlow778.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow778", fUML_Tests_TestRealFunctions_ObjectFlow778);
				fUML_Tests_TestRealFunctions_ObjectFlow778_LiteralInteger779.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger779", fUML_Tests_TestRealFunctions_ObjectFlow778_LiteralInteger779);
			fUML_Tests_TestRealFunctions_Call_Max.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Max)", fUML_Tests_TestRealFunctions_Call_Max);
				fUML_Tests_TestRealFunctions_Call_Max_Max_y.reset(new InputPin());
				this->addToElementRepository("Max.y", fUML_Tests_TestRealFunctions_Call_Max_Max_y);
					fUML_Tests_TestRealFunctions_Call_Max_Max_y_LiteralUnlimitedNatural780.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural780", fUML_Tests_TestRealFunctions_Call_Max_Max_y_LiteralUnlimitedNatural780);
					fUML_Tests_TestRealFunctions_Call_Max_Max_y_LiteralInteger781.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger781", fUML_Tests_TestRealFunctions_Call_Max_Max_y_LiteralInteger781);
				fUML_Tests_TestRealFunctions_Call_Max_Max_x.reset(new InputPin());
				this->addToElementRepository("Max.x", fUML_Tests_TestRealFunctions_Call_Max_Max_x);
					fUML_Tests_TestRealFunctions_Call_Max_Max_x_LiteralUnlimitedNatural782.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural782", fUML_Tests_TestRealFunctions_Call_Max_Max_x_LiteralUnlimitedNatural782);
					fUML_Tests_TestRealFunctions_Call_Max_Max_x_LiteralInteger783.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger783", fUML_Tests_TestRealFunctions_Call_Max_Max_x_LiteralInteger783);
				fUML_Tests_TestRealFunctions_Call_Max_Max_result.reset(new OutputPin());
				this->addToElementRepository("Max.result", fUML_Tests_TestRealFunctions_Call_Max_Max_result);
					fUML_Tests_TestRealFunctions_Call_Max_Max_result_LiteralUnlimitedNatural784.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural784", fUML_Tests_TestRealFunctions_Call_Max_Max_result_LiteralUnlimitedNatural784);
					fUML_Tests_TestRealFunctions_Call_Max_Max_result_LiteralInteger785.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger785", fUML_Tests_TestRealFunctions_Call_Max_Max_result_LiteralInteger785);
			fUML_Tests_TestRealFunctions_ControlFlow786.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow786", fUML_Tests_TestRealFunctions_ControlFlow786);
				fUML_Tests_TestRealFunctions_ControlFlow786_LiteralInteger787.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger787", fUML_Tests_TestRealFunctions_ControlFlow786_LiteralInteger787);
			fUML_Tests_TestRealFunctions_ObjectFlow788.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow788", fUML_Tests_TestRealFunctions_ObjectFlow788);
				fUML_Tests_TestRealFunctions_ObjectFlow788_LiteralInteger789.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger789", fUML_Tests_TestRealFunctions_ObjectFlow788_LiteralInteger789);
			fUML_Tests_TestRealFunctions_ObjectFlow790.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow790", fUML_Tests_TestRealFunctions_ObjectFlow790);
				fUML_Tests_TestRealFunctions_ObjectFlow790_LiteralUnlimitedNatural791.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural791", fUML_Tests_TestRealFunctions_ObjectFlow790_LiteralUnlimitedNatural791);
			fUML_Tests_TestRealFunctions_ControlFlow792.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow792", fUML_Tests_TestRealFunctions_ControlFlow792);
				fUML_Tests_TestRealFunctions_ControlFlow792_LiteralUnlimitedNatural793.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural793", fUML_Tests_TestRealFunctions_ControlFlow792_LiteralUnlimitedNatural793);
			fUML_Tests_TestRealFunctions_Call_Minus.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Minus)", fUML_Tests_TestRealFunctions_Call_Minus);
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_x.reset(new InputPin());
				this->addToElementRepository("Minus.x", fUML_Tests_TestRealFunctions_Call_Minus_Minus_x);
					fUML_Tests_TestRealFunctions_Call_Minus_Minus_x_LiteralInteger794.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger794", fUML_Tests_TestRealFunctions_Call_Minus_Minus_x_LiteralInteger794);
					fUML_Tests_TestRealFunctions_Call_Minus_Minus_x_LiteralUnlimitedNatural795.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural795", fUML_Tests_TestRealFunctions_Call_Minus_Minus_x_LiteralUnlimitedNatural795);
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_y.reset(new InputPin());
				this->addToElementRepository("Minus.y", fUML_Tests_TestRealFunctions_Call_Minus_Minus_y);
					fUML_Tests_TestRealFunctions_Call_Minus_Minus_y_LiteralUnlimitedNatural796.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural796", fUML_Tests_TestRealFunctions_Call_Minus_Minus_y_LiteralUnlimitedNatural796);
					fUML_Tests_TestRealFunctions_Call_Minus_Minus_y_LiteralInteger797.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger797", fUML_Tests_TestRealFunctions_Call_Minus_Minus_y_LiteralInteger797);
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_result.reset(new OutputPin());
				this->addToElementRepository("Minus.result", fUML_Tests_TestRealFunctions_Call_Minus_Minus_result);
					fUML_Tests_TestRealFunctions_Call_Minus_Minus_result_LiteralUnlimitedNatural798.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural798", fUML_Tests_TestRealFunctions_Call_Minus_Minus_result_LiteralUnlimitedNatural798);
					fUML_Tests_TestRealFunctions_Call_Minus_Minus_result_LiteralInteger799.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger799", fUML_Tests_TestRealFunctions_Call_Minus_Minus_result_LiteralInteger799);
			fUML_Tests_TestRealFunctions_ControlFlow800.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow800", fUML_Tests_TestRealFunctions_ControlFlow800);
				fUML_Tests_TestRealFunctions_ControlFlow800_LiteralInteger801.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger801", fUML_Tests_TestRealFunctions_ControlFlow800_LiteralInteger801);
			fUML_Tests_TestRealFunctions_ControlFlow802.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow802", fUML_Tests_TestRealFunctions_ControlFlow802);
				fUML_Tests_TestRealFunctions_ControlFlow802_LiteralUnlimitedNatural803.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural803", fUML_Tests_TestRealFunctions_ControlFlow802_LiteralUnlimitedNatural803);
			fUML_Tests_TestRealFunctions_ControlFlow804.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow804", fUML_Tests_TestRealFunctions_ControlFlow804);
				fUML_Tests_TestRealFunctions_ControlFlow804_LiteralUnlimitedNatural805.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural805", fUML_Tests_TestRealFunctions_ControlFlow804_LiteralUnlimitedNatural805);
			fUML_Tests_TestRealFunctions_FloorResult.reset(new Parameter());
			this->addToElementRepository("FloorResult", fUML_Tests_TestRealFunctions_FloorResult);
				fUML_Tests_TestRealFunctions_FloorResult_LiteralUnlimitedNatural806.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural806", fUML_Tests_TestRealFunctions_FloorResult_LiteralUnlimitedNatural806);
				fUML_Tests_TestRealFunctions_FloorResult_LiteralInteger807.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger807", fUML_Tests_TestRealFunctions_FloorResult_LiteralInteger807);
			fUML_Tests_TestRealFunctions_ObjectFlow808.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow808", fUML_Tests_TestRealFunctions_ObjectFlow808);
				fUML_Tests_TestRealFunctions_ObjectFlow808_LiteralInteger809.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger809", fUML_Tests_TestRealFunctions_ObjectFlow808_LiteralInteger809);
			fUML_Tests_TestRealFunctions_MinusResult.reset(new Parameter());
			this->addToElementRepository("MinusResult", fUML_Tests_TestRealFunctions_MinusResult);
			fUML_Tests_TestRealFunctions_ObjectFlow810.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow810", fUML_Tests_TestRealFunctions_ObjectFlow810);
				fUML_Tests_TestRealFunctions_ObjectFlow810_LiteralUnlimitedNatural811.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural811", fUML_Tests_TestRealFunctions_ObjectFlow810_LiteralUnlimitedNatural811);
			fUML_Tests_TestRealFunctions_ObjectFlow812.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow812", fUML_Tests_TestRealFunctions_ObjectFlow812);
				fUML_Tests_TestRealFunctions_ObjectFlow812_LiteralInteger813.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger813", fUML_Tests_TestRealFunctions_ObjectFlow812_LiteralInteger813);
			fUML_Tests_TestRealFunctions_DivideResult.reset(new Parameter());
			this->addToElementRepository("DivideResult", fUML_Tests_TestRealFunctions_DivideResult);
			fUML_Tests_TestRealFunctions_RoundResult.reset(new Parameter());
			this->addToElementRepository("RoundResult", fUML_Tests_TestRealFunctions_RoundResult);
				fUML_Tests_TestRealFunctions_RoundResult_LiteralInteger814.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger814", fUML_Tests_TestRealFunctions_RoundResult_LiteralInteger814);
				fUML_Tests_TestRealFunctions_RoundResult_LiteralUnlimitedNatural815.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural815", fUML_Tests_TestRealFunctions_RoundResult_LiteralUnlimitedNatural815);
			fUML_Tests_TestRealFunctions_ObjectFlow816.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow816", fUML_Tests_TestRealFunctions_ObjectFlow816);
				fUML_Tests_TestRealFunctions_ObjectFlow816_LiteralInteger817.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger817", fUML_Tests_TestRealFunctions_ObjectFlow816_LiteralInteger817);
			fUML_Tests_TestRealFunctions_Param_MinusResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(MinusResult)", fUML_Tests_TestRealFunctions_Param_MinusResult);
			fUML_Tests_TestRealFunctions_ObjectFlow818.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow818", fUML_Tests_TestRealFunctions_ObjectFlow818);
				fUML_Tests_TestRealFunctions_ObjectFlow818_LiteralInteger819.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger819", fUML_Tests_TestRealFunctions_ObjectFlow818_LiteralInteger819);
			fUML_Tests_TestRealFunctions_ControlFlow820.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow820", fUML_Tests_TestRealFunctions_ControlFlow820);
				fUML_Tests_TestRealFunctions_ControlFlow820_LiteralInteger821.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger821", fUML_Tests_TestRealFunctions_ControlFlow820_LiteralInteger821);
			fUML_Tests_TestRealFunctions_ObjectFlow822.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow822", fUML_Tests_TestRealFunctions_ObjectFlow822);
				fUML_Tests_TestRealFunctions_ObjectFlow822_LiteralInteger823.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger823", fUML_Tests_TestRealFunctions_ObjectFlow822_LiteralInteger823);
			fUML_Tests_TestRealFunctions_ObjectFlow824.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow824", fUML_Tests_TestRealFunctions_ObjectFlow824);
				fUML_Tests_TestRealFunctions_ObjectFlow824_LiteralInteger825.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger825", fUML_Tests_TestRealFunctions_ObjectFlow824_LiteralInteger825);
			fUML_Tests_TestRealFunctions_ObjectFlow826.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow826", fUML_Tests_TestRealFunctions_ObjectFlow826);
				fUML_Tests_TestRealFunctions_ObjectFlow826_LiteralUnlimitedNatural827.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural827", fUML_Tests_TestRealFunctions_ObjectFlow826_LiteralUnlimitedNatural827);
			fUML_Tests_TestRealFunctions_Fork_3_1.reset(new ForkNode());
			this->addToElementRepository("Fork(3.1)", fUML_Tests_TestRealFunctions_Fork_3_1);
			fUML_Tests_TestRealFunctions_NegResult.reset(new Parameter());
			this->addToElementRepository("NegResult", fUML_Tests_TestRealFunctions_NegResult);
			fUML_Tests_TestRealFunctions_ObjectFlow828.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow828", fUML_Tests_TestRealFunctions_ObjectFlow828);
				fUML_Tests_TestRealFunctions_ObjectFlow828_LiteralInteger829.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger829", fUML_Tests_TestRealFunctions_ObjectFlow828_LiteralInteger829);
			fUML_Tests_TestRealFunctions_MinResult.reset(new Parameter());
			this->addToElementRepository("MinResult", fUML_Tests_TestRealFunctions_MinResult);
			fUML_Tests_TestRealFunctions_Call_Times.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Times)", fUML_Tests_TestRealFunctions_Call_Times);
				fUML_Tests_TestRealFunctions_Call_Times_Times_result.reset(new OutputPin());
				this->addToElementRepository("Times.result", fUML_Tests_TestRealFunctions_Call_Times_Times_result);
					fUML_Tests_TestRealFunctions_Call_Times_Times_result_LiteralUnlimitedNatural830.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural830", fUML_Tests_TestRealFunctions_Call_Times_Times_result_LiteralUnlimitedNatural830);
					fUML_Tests_TestRealFunctions_Call_Times_Times_result_LiteralInteger831.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger831", fUML_Tests_TestRealFunctions_Call_Times_Times_result_LiteralInteger831);
				fUML_Tests_TestRealFunctions_Call_Times_Times_x.reset(new InputPin());
				this->addToElementRepository("Times.x", fUML_Tests_TestRealFunctions_Call_Times_Times_x);
					fUML_Tests_TestRealFunctions_Call_Times_Times_x_LiteralUnlimitedNatural832.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural832", fUML_Tests_TestRealFunctions_Call_Times_Times_x_LiteralUnlimitedNatural832);
					fUML_Tests_TestRealFunctions_Call_Times_Times_x_LiteralInteger833.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger833", fUML_Tests_TestRealFunctions_Call_Times_Times_x_LiteralInteger833);
				fUML_Tests_TestRealFunctions_Call_Times_Times_y.reset(new InputPin());
				this->addToElementRepository("Times.y", fUML_Tests_TestRealFunctions_Call_Times_Times_y);
					fUML_Tests_TestRealFunctions_Call_Times_Times_y_LiteralInteger834.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger834", fUML_Tests_TestRealFunctions_Call_Times_Times_y_LiteralInteger834);
					fUML_Tests_TestRealFunctions_Call_Times_Times_y_LiteralUnlimitedNatural835.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural835", fUML_Tests_TestRealFunctions_Call_Times_Times_y_LiteralUnlimitedNatural835);
			fUML_Tests_TestRealFunctions_Call_AbsResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Call(AbsResult)", fUML_Tests_TestRealFunctions_Call_AbsResult);
			fUML_Tests_TestRealFunctions_Fork_minus2_3.reset(new ForkNode());
			this->addToElementRepository("Fork(-2.3)", fUML_Tests_TestRealFunctions_Fork_minus2_3);
			fUML_Tests_TestRealFunctions_Call_Neg.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Neg)", fUML_Tests_TestRealFunctions_Call_Neg);
				fUML_Tests_TestRealFunctions_Call_Neg_Neg_x.reset(new InputPin());
				this->addToElementRepository("Neg.x", fUML_Tests_TestRealFunctions_Call_Neg_Neg_x);
					fUML_Tests_TestRealFunctions_Call_Neg_Neg_x_LiteralUnlimitedNatural836.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural836", fUML_Tests_TestRealFunctions_Call_Neg_Neg_x_LiteralUnlimitedNatural836);
					fUML_Tests_TestRealFunctions_Call_Neg_Neg_x_LiteralInteger837.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger837", fUML_Tests_TestRealFunctions_Call_Neg_Neg_x_LiteralInteger837);
				fUML_Tests_TestRealFunctions_Call_Neg_Neg_result.reset(new OutputPin());
				this->addToElementRepository("Neg.result", fUML_Tests_TestRealFunctions_Call_Neg_Neg_result);
					fUML_Tests_TestRealFunctions_Call_Neg_Neg_result_LiteralInteger838.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger838", fUML_Tests_TestRealFunctions_Call_Neg_Neg_result_LiteralInteger838);
					fUML_Tests_TestRealFunctions_Call_Neg_Neg_result_LiteralUnlimitedNatural839.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural839", fUML_Tests_TestRealFunctions_Call_Neg_Neg_result_LiteralUnlimitedNatural839);
			fUML_Tests_TestRealFunctions_ObjectFlow840.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow840", fUML_Tests_TestRealFunctions_ObjectFlow840);
				fUML_Tests_TestRealFunctions_ObjectFlow840_LiteralInteger841.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger841", fUML_Tests_TestRealFunctions_ObjectFlow840_LiteralInteger841);
			fUML_Tests_TestRealFunctions_ObjectFlow842.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow842", fUML_Tests_TestRealFunctions_ObjectFlow842);
				fUML_Tests_TestRealFunctions_ObjectFlow842_LiteralUnlimitedNatural843.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural843", fUML_Tests_TestRealFunctions_ObjectFlow842_LiteralUnlimitedNatural843);
			fUML_Tests_TestRealFunctions_InvResult.reset(new Parameter());
			this->addToElementRepository("InvResult", fUML_Tests_TestRealFunctions_InvResult);
			fUML_Tests_TestRealFunctions_ObjectFlow844.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow844", fUML_Tests_TestRealFunctions_ObjectFlow844);
				fUML_Tests_TestRealFunctions_ObjectFlow844_LiteralInteger845.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger845", fUML_Tests_TestRealFunctions_ObjectFlow844_LiteralInteger845);
			fUML_Tests_TestRealFunctions_Param_DivideResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(DivideResult)", fUML_Tests_TestRealFunctions_Param_DivideResult);
			fUML_Tests_TestRealFunctions_Param_FloorResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(FloorResult)", fUML_Tests_TestRealFunctions_Param_FloorResult);
			fUML_Tests_TestRealFunctions_Param_ToIntegerResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(ToIntegerResult)", fUML_Tests_TestRealFunctions_Param_ToIntegerResult);
			fUML_Tests_TestRealFunctions_ObjectFlow846.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow846", fUML_Tests_TestRealFunctions_ObjectFlow846);
				fUML_Tests_TestRealFunctions_ObjectFlow846_LiteralInteger847.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger847", fUML_Tests_TestRealFunctions_ObjectFlow846_LiteralInteger847);
			fUML_Tests_TestRealFunctions_ObjectFlow848.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow848", fUML_Tests_TestRealFunctions_ObjectFlow848);
				fUML_Tests_TestRealFunctions_ObjectFlow848_LiteralInteger849.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger849", fUML_Tests_TestRealFunctions_ObjectFlow848_LiteralInteger849);
			fUML_Tests_TestRealFunctions_ObjectFlow850.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow850", fUML_Tests_TestRealFunctions_ObjectFlow850);
				fUML_Tests_TestRealFunctions_ObjectFlow850_LiteralInteger851.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger851", fUML_Tests_TestRealFunctions_ObjectFlow850_LiteralInteger851);
			fUML_Tests_TestRealFunctions_Value_3_1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(3.1)", fUML_Tests_TestRealFunctions_Value_3_1);
				fUML_Tests_TestRealFunctions_Value_3_1_Value_3_1_result.reset(new OutputPin());
				this->addToElementRepository("Value(3.1).result", fUML_Tests_TestRealFunctions_Value_3_1_Value_3_1_result);
				fUML_Tests_TestRealFunctions_Value_3_1_LiteralReal852.reset(new LiteralReal());
				this->addToElementRepository("LiteralReal852", fUML_Tests_TestRealFunctions_Value_3_1_LiteralReal852);
			fUML_Tests_TestRealFunctions_Call_Abs.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Abs)", fUML_Tests_TestRealFunctions_Call_Abs);
				fUML_Tests_TestRealFunctions_Call_Abs_Abs_x.reset(new InputPin());
				this->addToElementRepository("Abs.x", fUML_Tests_TestRealFunctions_Call_Abs_Abs_x);
					fUML_Tests_TestRealFunctions_Call_Abs_Abs_x_LiteralUnlimitedNatural853.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural853", fUML_Tests_TestRealFunctions_Call_Abs_Abs_x_LiteralUnlimitedNatural853);
					fUML_Tests_TestRealFunctions_Call_Abs_Abs_x_LiteralInteger854.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger854", fUML_Tests_TestRealFunctions_Call_Abs_Abs_x_LiteralInteger854);
				fUML_Tests_TestRealFunctions_Call_Abs_Abs_result.reset(new OutputPin());
				this->addToElementRepository("Abs.result", fUML_Tests_TestRealFunctions_Call_Abs_Abs_result);
					fUML_Tests_TestRealFunctions_Call_Abs_Abs_result_LiteralInteger855.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger855", fUML_Tests_TestRealFunctions_Call_Abs_Abs_result_LiteralInteger855);
					fUML_Tests_TestRealFunctions_Call_Abs_Abs_result_LiteralUnlimitedNatural856.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural856", fUML_Tests_TestRealFunctions_Call_Abs_Abs_result_LiteralUnlimitedNatural856);
			fUML_Tests_TestRealFunctions_Call_ToInteger.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(ToInteger)", fUML_Tests_TestRealFunctions_Call_ToInteger);
				fUML_Tests_TestRealFunctions_Call_ToInteger_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestRealFunctions_Call_ToInteger_result);
					fUML_Tests_TestRealFunctions_Call_ToInteger_result_LiteralInteger857.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger857", fUML_Tests_TestRealFunctions_Call_ToInteger_result_LiteralInteger857);
					fUML_Tests_TestRealFunctions_Call_ToInteger_result_LiteralUnlimitedNatural858.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural858", fUML_Tests_TestRealFunctions_Call_ToInteger_result_LiteralUnlimitedNatural858);
				fUML_Tests_TestRealFunctions_Call_ToInteger_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestRealFunctions_Call_ToInteger_x);
					fUML_Tests_TestRealFunctions_Call_ToInteger_x_LiteralInteger859.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger859", fUML_Tests_TestRealFunctions_Call_ToInteger_x_LiteralInteger859);
					fUML_Tests_TestRealFunctions_Call_ToInteger_x_LiteralUnlimitedNatural860.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural860", fUML_Tests_TestRealFunctions_Call_ToInteger_x_LiteralUnlimitedNatural860);
			fUML_Tests_TestRealFunctions_Value_0_5.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(0.5)", fUML_Tests_TestRealFunctions_Value_0_5);
				fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result.reset(new OutputPin());
				this->addToElementRepository("Value(0.5).result", fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result);
					fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result_LiteralUnlimitedNatural861.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural861", fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result_LiteralUnlimitedNatural861);
					fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result_LiteralInteger862.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger862", fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result_LiteralInteger862);
				fUML_Tests_TestRealFunctions_Value_0_5_LiteralReal863.reset(new LiteralReal());
				this->addToElementRepository("LiteralReal863", fUML_Tests_TestRealFunctions_Value_0_5_LiteralReal863);
			fUML_Tests_TestRealFunctions_ObjectFlow864.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow864", fUML_Tests_TestRealFunctions_ObjectFlow864);
				fUML_Tests_TestRealFunctions_ObjectFlow864_LiteralUnlimitedNatural865.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural865", fUML_Tests_TestRealFunctions_ObjectFlow864_LiteralUnlimitedNatural865);
			fUML_Tests_TestRealFunctions_Param_MaxResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(MaxResult)", fUML_Tests_TestRealFunctions_Param_MaxResult);
			fUML_Tests_TestRealFunctions_ControlFlow866.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow866", fUML_Tests_TestRealFunctions_ControlFlow866);
				fUML_Tests_TestRealFunctions_ControlFlow866_LiteralUnlimitedNatural867.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural867", fUML_Tests_TestRealFunctions_ControlFlow866_LiteralUnlimitedNatural867);
			fUML_Tests_TestRealFunctions_ObjectFlow868.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow868", fUML_Tests_TestRealFunctions_ObjectFlow868);
				fUML_Tests_TestRealFunctions_ObjectFlow868_LiteralUnlimitedNatural869.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural869", fUML_Tests_TestRealFunctions_ObjectFlow868_LiteralUnlimitedNatural869);
			fUML_Tests_TestRealFunctions_ObjectFlow870.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow870", fUML_Tests_TestRealFunctions_ObjectFlow870);
				fUML_Tests_TestRealFunctions_ObjectFlow870_LiteralInteger871.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger871", fUML_Tests_TestRealFunctions_ObjectFlow870_LiteralInteger871);
			fUML_Tests_TestRealFunctions_ObjectFlow872.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow872", fUML_Tests_TestRealFunctions_ObjectFlow872);
				fUML_Tests_TestRealFunctions_ObjectFlow872_LiteralInteger873.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger873", fUML_Tests_TestRealFunctions_ObjectFlow872_LiteralInteger873);
			fUML_Tests_TestRealFunctions_ObjectFlow874.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow874", fUML_Tests_TestRealFunctions_ObjectFlow874);
				fUML_Tests_TestRealFunctions_ObjectFlow874_LiteralInteger875.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger875", fUML_Tests_TestRealFunctions_ObjectFlow874_LiteralInteger875);
			fUML_Tests_TestRealFunctions_Fork_0_5.reset(new ForkNode());
			this->addToElementRepository("Fork(0.5)", fUML_Tests_TestRealFunctions_Fork_0_5);
			fUML_Tests_TestRealFunctions_Call_Min.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Min)", fUML_Tests_TestRealFunctions_Call_Min);
				fUML_Tests_TestRealFunctions_Call_Min_Min_result.reset(new OutputPin());
				this->addToElementRepository("Min.result", fUML_Tests_TestRealFunctions_Call_Min_Min_result);
					fUML_Tests_TestRealFunctions_Call_Min_Min_result_LiteralUnlimitedNatural876.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural876", fUML_Tests_TestRealFunctions_Call_Min_Min_result_LiteralUnlimitedNatural876);
					fUML_Tests_TestRealFunctions_Call_Min_Min_result_LiteralInteger877.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger877", fUML_Tests_TestRealFunctions_Call_Min_Min_result_LiteralInteger877);
				fUML_Tests_TestRealFunctions_Call_Min_Min_x.reset(new InputPin());
				this->addToElementRepository("Min.x", fUML_Tests_TestRealFunctions_Call_Min_Min_x);
					fUML_Tests_TestRealFunctions_Call_Min_Min_x_LiteralInteger878.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger878", fUML_Tests_TestRealFunctions_Call_Min_Min_x_LiteralInteger878);
					fUML_Tests_TestRealFunctions_Call_Min_Min_x_LiteralUnlimitedNatural879.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural879", fUML_Tests_TestRealFunctions_Call_Min_Min_x_LiteralUnlimitedNatural879);
				fUML_Tests_TestRealFunctions_Call_Min_Min_y.reset(new InputPin());
				this->addToElementRepository("Min.y", fUML_Tests_TestRealFunctions_Call_Min_Min_y);
					fUML_Tests_TestRealFunctions_Call_Min_Min_y_LiteralUnlimitedNatural880.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural880", fUML_Tests_TestRealFunctions_Call_Min_Min_y_LiteralUnlimitedNatural880);
					fUML_Tests_TestRealFunctions_Call_Min_Min_y_LiteralInteger881.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger881", fUML_Tests_TestRealFunctions_Call_Min_Min_y_LiteralInteger881);
			fUML_Tests_TestRealFunctions_ObjectFlow882.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow882", fUML_Tests_TestRealFunctions_ObjectFlow882);
				fUML_Tests_TestRealFunctions_ObjectFlow882_LiteralInteger883.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger883", fUML_Tests_TestRealFunctions_ObjectFlow882_LiteralInteger883);
			fUML_Tests_TestRealFunctions_ObjectFlow884.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow884", fUML_Tests_TestRealFunctions_ObjectFlow884);
				fUML_Tests_TestRealFunctions_ObjectFlow884_LiteralUnlimitedNatural885.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural885", fUML_Tests_TestRealFunctions_ObjectFlow884_LiteralUnlimitedNatural885);
			fUML_Tests_TestRealFunctions_Param_RoundResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(RoundResult)", fUML_Tests_TestRealFunctions_Param_RoundResult);
			fUML_Tests_TestRealFunctions_Call_Floor.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Floor)", fUML_Tests_TestRealFunctions_Call_Floor);
				fUML_Tests_TestRealFunctions_Call_Floor_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestRealFunctions_Call_Floor_x);
					fUML_Tests_TestRealFunctions_Call_Floor_x_LiteralUnlimitedNatural886.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural886", fUML_Tests_TestRealFunctions_Call_Floor_x_LiteralUnlimitedNatural886);
					fUML_Tests_TestRealFunctions_Call_Floor_x_LiteralInteger887.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger887", fUML_Tests_TestRealFunctions_Call_Floor_x_LiteralInteger887);
				fUML_Tests_TestRealFunctions_Call_Floor_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestRealFunctions_Call_Floor_result);
					fUML_Tests_TestRealFunctions_Call_Floor_result_LiteralUnlimitedNatural888.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural888", fUML_Tests_TestRealFunctions_Call_Floor_result_LiteralUnlimitedNatural888);
					fUML_Tests_TestRealFunctions_Call_Floor_result_LiteralInteger889.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger889", fUML_Tests_TestRealFunctions_Call_Floor_result_LiteralInteger889);
			fUML_Tests_TestRealFunctions_Value_minus2_3.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(-2.3)", fUML_Tests_TestRealFunctions_Value_minus2_3);
				fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result.reset(new OutputPin());
				this->addToElementRepository("Value(-2.3).result", fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result);
					fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result_LiteralUnlimitedNatural890.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural890", fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result_LiteralUnlimitedNatural890);
					fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result_LiteralInteger891.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger891", fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result_LiteralInteger891);
				fUML_Tests_TestRealFunctions_Value_minus2_3_LiteralReal892.reset(new LiteralReal());
				this->addToElementRepository("LiteralReal892", fUML_Tests_TestRealFunctions_Value_minus2_3_LiteralReal892);
		fUML_Tests_ActiveClassBehaviorSender.reset(new Activity());
		this->addToElementRepository("ActiveClassBehaviorSender", fUML_Tests_ActiveClassBehaviorSender);
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow893.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow893", fUML_Tests_ActiveClassBehaviorSender_ControlFlow893);
				fUML_Tests_ActiveClassBehaviorSender_ControlFlow893_LiteralUnlimitedNatural894.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural894", fUML_Tests_ActiveClassBehaviorSender_ControlFlow893_LiteralUnlimitedNatural894);
			fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal.reset(new SendSignalAction());
			this->addToElementRepository("Send(OtherSignal)", fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal);
				fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target.reset(new InputPin());
				this->addToElementRepository("target", fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target);
					fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target_LiteralUnlimitedNatural895.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural895", fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target_LiteralUnlimitedNatural895);
					fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target_LiteralInteger896.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger896", fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target_LiteralInteger896);
			fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal.reset(new SendSignalAction());
			this->addToElementRepository("Send(TestSignal)", fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal);
				fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target.reset(new InputPin());
				this->addToElementRepository("target", fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target);
					fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target_LiteralInteger897.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger897", fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target_LiteralInteger897);
					fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target_LiteralUnlimitedNatural898.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural898", fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target_LiteralUnlimitedNatural898);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow899.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow899", fUML_Tests_ActiveClassBehaviorSender_ObjectFlow899);
				fUML_Tests_ActiveClassBehaviorSender_ObjectFlow899_LiteralUnlimitedNatural900.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural900", fUML_Tests_ActiveClassBehaviorSender_ObjectFlow899_LiteralUnlimitedNatural900);
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow901.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow901", fUML_Tests_ActiveClassBehaviorSender_ControlFlow901);
				fUML_Tests_ActiveClassBehaviorSender_ControlFlow901_LiteralUnlimitedNatural902.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural902", fUML_Tests_ActiveClassBehaviorSender_ControlFlow901_LiteralUnlimitedNatural902);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow903.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow903", fUML_Tests_ActiveClassBehaviorSender_ObjectFlow903);
				fUML_Tests_ActiveClassBehaviorSender_ObjectFlow903_LiteralUnlimitedNatural904.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural904", fUML_Tests_ActiveClassBehaviorSender_ObjectFlow903_LiteralUnlimitedNatural904);
			fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass.reset(new CreateObjectAction());
			this->addToElementRepository("Create(ActiveClass)", fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass);
				fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result);
					fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result_LiteralUnlimitedNatural905.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural905", fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result_LiteralUnlimitedNatural905);
					fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result_LiteralInteger906.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger906", fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result_LiteralInteger906);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow907.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow907", fUML_Tests_ActiveClassBehaviorSender_ObjectFlow907);
				fUML_Tests_ActiveClassBehaviorSender_ObjectFlow907_LiteralUnlimitedNatural908.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural908", fUML_Tests_ActiveClassBehaviorSender_ObjectFlow907_LiteralUnlimitedNatural908);
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow909.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow909", fUML_Tests_ActiveClassBehaviorSender_ControlFlow909);
				fUML_Tests_ActiveClassBehaviorSender_ControlFlow909_LiteralUnlimitedNatural910.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural910", fUML_Tests_ActiveClassBehaviorSender_ControlFlow909_LiteralUnlimitedNatural910);
			fUML_Tests_ActiveClassBehaviorSender_InitialNode911.reset(new InitialNode());
			this->addToElementRepository("InitialNode911", fUML_Tests_ActiveClassBehaviorSender_InitialNode911);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow912.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow912", fUML_Tests_ActiveClassBehaviorSender_ObjectFlow912);
				fUML_Tests_ActiveClassBehaviorSender_ObjectFlow912_LiteralUnlimitedNatural913.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural913", fUML_Tests_ActiveClassBehaviorSender_ObjectFlow912_LiteralUnlimitedNatural913);
			fUML_Tests_ActiveClassBehaviorSender_ForkNode914.reset(new ForkNode());
			this->addToElementRepository("ForkNode914", fUML_Tests_ActiveClassBehaviorSender_ForkNode914);
			fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass.reset(new StartObjectBehaviorAction());
			this->addToElementRepository("Start(ActiveClass)", fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass);
				fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object);
					fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object_LiteralInteger915.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger915", fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object_LiteralInteger915);
					fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object_LiteralUnlimitedNatural916.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural916", fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object_LiteralUnlimitedNatural916);
		fUML_Tests_TestSimpleActivities.reset(new Activity());
		this->addToElementRepository("TestSimpleActivities", fUML_Tests_TestSimpleActivities);
			fUML_Tests_TestSimpleActivities_ForkMerge.reset(new Parameter());
			this->addToElementRepository("ForkMerge", fUML_Tests_TestSimpleActivities_ForkMerge);
				fUML_Tests_TestSimpleActivities_ForkMerge_LiteralUnlimitedNatural917.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural917", fUML_Tests_TestSimpleActivities_ForkMerge_LiteralUnlimitedNatural917);
				fUML_Tests_TestSimpleActivities_ForkMerge_LiteralUnlimitedNatural918.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural918", fUML_Tests_TestSimpleActivities_ForkMerge_LiteralUnlimitedNatural918);
			fUML_Tests_TestSimpleActivities_ControlFlow919.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow919", fUML_Tests_TestSimpleActivities_ControlFlow919);
				fUML_Tests_TestSimpleActivities_ControlFlow919_LiteralInteger920.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger920", fUML_Tests_TestSimpleActivities_ControlFlow919_LiteralInteger920);
			fUML_Tests_TestSimpleActivities_ObjectFlow921.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow921", fUML_Tests_TestSimpleActivities_ObjectFlow921);
				fUML_Tests_TestSimpleActivities_ObjectFlow921_LiteralInteger922.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger922", fUML_Tests_TestSimpleActivities_ObjectFlow921_LiteralInteger922);
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1.reset(new Parameter());
			this->addToElementRepository("SimpleDecision_0.output_1", fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1);
				fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1_LiteralInteger923.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger923", fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1_LiteralInteger923);
				fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1_LiteralUnlimitedNatural924.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural924", fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1_LiteralUnlimitedNatural924);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0.reset(new Parameter());
			this->addToElementRepository("SimpleDecision_1.output_0", fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0);
				fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0_LiteralUnlimitedNatural925.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural925", fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0_LiteralUnlimitedNatural925);
				fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0_LiteralInteger926.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger926", fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0_LiteralInteger926);
			fUML_Tests_TestSimpleActivities_Call_CopierCaller.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(CopierCaller)", fUML_Tests_TestSimpleActivities_Call_CopierCaller);
				fUML_Tests_TestSimpleActivities_Call_CopierCaller_CopierCaller_output.reset(new OutputPin());
				this->addToElementRepository("CopierCaller.output", fUML_Tests_TestSimpleActivities_Call_CopierCaller_CopierCaller_output);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_1_output_0.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(SimpleDecision_1.output_0)", fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_1_output_0);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(SimpleDecision_1)", fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_1.reset(new OutputPin());
				this->addToElementRepository("SimpleDecision_1.output_1", fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_1);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_0.reset(new OutputPin());
				this->addToElementRepository("SimpleDecision_1.output_0", fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_0);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_testValue.reset(new InputPin());
				this->addToElementRepository("SimpleDecision_1.testValue", fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_testValue);
			fUML_Tests_TestSimpleActivities_Call_Copier.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Copier)", fUML_Tests_TestSimpleActivities_Call_Copier);
				fUML_Tests_TestSimpleActivities_Call_Copier_Copier_output.reset(new OutputPin());
				this->addToElementRepository("Copier.output", fUML_Tests_TestSimpleActivities_Call_Copier_Copier_output);
				fUML_Tests_TestSimpleActivities_Call_Copier_Copier_input.reset(new InputPin());
				this->addToElementRepository("Copier.input", fUML_Tests_TestSimpleActivities_Call_Copier_Copier_input);
			fUML_Tests_TestSimpleActivities_ObjectFlow927.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow927", fUML_Tests_TestSimpleActivities_ObjectFlow927);
				fUML_Tests_TestSimpleActivities_ObjectFlow927_LiteralInteger928.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger928", fUML_Tests_TestSimpleActivities_ObjectFlow927_LiteralInteger928);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1Node.reset(new ActivityParameterNode());
			this->addToElementRepository("SimpleDecision_1.output_1Node", fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1Node);
			fUML_Tests_TestSimpleActivities_ObjectFlow929.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow929", fUML_Tests_TestSimpleActivities_ObjectFlow929);
				fUML_Tests_TestSimpleActivities_ObjectFlow929_LiteralInteger930.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger930", fUML_Tests_TestSimpleActivities_ObjectFlow929_LiteralInteger930);
			fUML_Tests_TestSimpleActivities_Call_DecisionJoin.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(DecisionJoin)", fUML_Tests_TestSimpleActivities_Call_DecisionJoin);
				fUML_Tests_TestSimpleActivities_Call_DecisionJoin_DecisionJoin_output.reset(new OutputPin());
				this->addToElementRepository("DecisionJoin.output", fUML_Tests_TestSimpleActivities_Call_DecisionJoin_DecisionJoin_output);
			fUML_Tests_TestSimpleActivities_Parameter_Copier_output.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(Copier.output)", fUML_Tests_TestSimpleActivities_Parameter_Copier_output);
			fUML_Tests_TestSimpleActivities_ObjectFlow931.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow931", fUML_Tests_TestSimpleActivities_ObjectFlow931);
				fUML_Tests_TestSimpleActivities_ObjectFlow931_LiteralInteger932.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger932", fUML_Tests_TestSimpleActivities_ObjectFlow931_LiteralInteger932);
			fUML_Tests_TestSimpleActivities_ControlFlow933.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow933", fUML_Tests_TestSimpleActivities_ControlFlow933);
				fUML_Tests_TestSimpleActivities_ControlFlow933_LiteralInteger934.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger934", fUML_Tests_TestSimpleActivities_ControlFlow933_LiteralInteger934);
			fUML_Tests_TestSimpleActivities_Call_ForkMergeData.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(ForkMergeData)", fUML_Tests_TestSimpleActivities_Call_ForkMergeData);
				fUML_Tests_TestSimpleActivities_Call_ForkMergeData_ForkMergeData_output.reset(new OutputPin());
				this->addToElementRepository("ForkMergeData.output", fUML_Tests_TestSimpleActivities_Call_ForkMergeData_ForkMergeData_output);
			fUML_Tests_TestSimpleActivities_Parameter_CopierCaller_output.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(CopierCaller.output)", fUML_Tests_TestSimpleActivities_Parameter_CopierCaller_output);
			fUML_Tests_TestSimpleActivities_ObjectFlow935.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow935", fUML_Tests_TestSimpleActivities_ObjectFlow935);
				fUML_Tests_TestSimpleActivities_ObjectFlow935_LiteralInteger936.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger936", fUML_Tests_TestSimpleActivities_ObjectFlow935_LiteralInteger936);
			fUML_Tests_TestSimpleActivities_ControlFlow937.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow937", fUML_Tests_TestSimpleActivities_ControlFlow937);
				fUML_Tests_TestSimpleActivities_ControlFlow937_LiteralInteger938.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger938", fUML_Tests_TestSimpleActivities_ControlFlow937_LiteralInteger938);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_0.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(SimpleDecision_0.output_0)", fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_0);
			fUML_Tests_TestSimpleActivities_DecisionJoin_output.reset(new Parameter());
			this->addToElementRepository("DecisionJoin.output", fUML_Tests_TestSimpleActivities_DecisionJoin_output);
				fUML_Tests_TestSimpleActivities_DecisionJoin_output_LiteralUnlimitedNatural939.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural939", fUML_Tests_TestSimpleActivities_DecisionJoin_output_LiteralUnlimitedNatural939);
				fUML_Tests_TestSimpleActivities_DecisionJoin_output_LiteralUnlimitedNatural940.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural940", fUML_Tests_TestSimpleActivities_DecisionJoin_output_LiteralUnlimitedNatural940);
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0.reset(new Parameter());
			this->addToElementRepository("SimpleDecision_0.output_0", fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0);
				fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0_LiteralUnlimitedNatural941.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural941", fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0_LiteralUnlimitedNatural941);
				fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0_LiteralInteger942.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger942", fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0_LiteralInteger942);
			fUML_Tests_TestSimpleActivities_Call_ForkMerge.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(ForkMerge)", fUML_Tests_TestSimpleActivities_Call_ForkMerge);
				fUML_Tests_TestSimpleActivities_Call_ForkMerge_ForkMerge_output.reset(new OutputPin());
				this->addToElementRepository("ForkMerge.output", fUML_Tests_TestSimpleActivities_Call_ForkMerge_ForkMerge_output);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_1.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(SimpleDecision_0.output_1)", fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_1);
			fUML_Tests_TestSimpleActivities_Value_1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)", fUML_Tests_TestSimpleActivities_Value_1);
				fUML_Tests_TestSimpleActivities_Value_1_Value_1_result.reset(new OutputPin());
				this->addToElementRepository("Value(1).result", fUML_Tests_TestSimpleActivities_Value_1_Value_1_result);
					fUML_Tests_TestSimpleActivities_Value_1_Value_1_result_LiteralInteger943.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger943", fUML_Tests_TestSimpleActivities_Value_1_Value_1_result_LiteralInteger943);
					fUML_Tests_TestSimpleActivities_Value_1_Value_1_result_LiteralUnlimitedNatural944.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural944", fUML_Tests_TestSimpleActivities_Value_1_Value_1_result_LiteralUnlimitedNatural944);
				fUML_Tests_TestSimpleActivities_Value_1_LiteralInteger945.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger945", fUML_Tests_TestSimpleActivities_Value_1_LiteralInteger945);
			fUML_Tests_TestSimpleActivities_Parameter_DecisionJoin_output.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(DecisionJoin.output)", fUML_Tests_TestSimpleActivities_Parameter_DecisionJoin_output);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(SimpleDecision_0)", fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_testValue.reset(new InputPin());
				this->addToElementRepository("SimpleDecision_0.testValue", fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_testValue);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDcision_0_output_1.reset(new OutputPin());
				this->addToElementRepository("SimpleDcision_0.output_1", fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDcision_0_output_1);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_output_0.reset(new OutputPin());
				this->addToElementRepository("SimpleDecision_0.output_0", fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_output_0);
			fUML_Tests_TestSimpleActivities_Value_0.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(0)", fUML_Tests_TestSimpleActivities_Value_0);
				fUML_Tests_TestSimpleActivities_Value_0_LiteralInteger946.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger946", fUML_Tests_TestSimpleActivities_Value_0_LiteralInteger946);
				fUML_Tests_TestSimpleActivities_Value_0_Value_0_result.reset(new OutputPin());
				this->addToElementRepository("Value(0).result", fUML_Tests_TestSimpleActivities_Value_0_Value_0_result);
					fUML_Tests_TestSimpleActivities_Value_0_Value_0_result_LiteralInteger947.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger947", fUML_Tests_TestSimpleActivities_Value_0_Value_0_result_LiteralInteger947);
					fUML_Tests_TestSimpleActivities_Value_0_Value_0_result_LiteralUnlimitedNatural948.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural948", fUML_Tests_TestSimpleActivities_Value_0_Value_0_result_LiteralUnlimitedNatural948);
			fUML_Tests_TestSimpleActivities_ObjectFlow949.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow949", fUML_Tests_TestSimpleActivities_ObjectFlow949);
				fUML_Tests_TestSimpleActivities_ObjectFlow949_LiteralInteger950.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger950", fUML_Tests_TestSimpleActivities_ObjectFlow949_LiteralInteger950);
			fUML_Tests_TestSimpleActivities_CopierCaller_output.reset(new Parameter());
			this->addToElementRepository("CopierCaller.output", fUML_Tests_TestSimpleActivities_CopierCaller_output);
				fUML_Tests_TestSimpleActivities_CopierCaller_output_LiteralUnlimitedNatural951.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural951", fUML_Tests_TestSimpleActivities_CopierCaller_output_LiteralUnlimitedNatural951);
				fUML_Tests_TestSimpleActivities_CopierCaller_output_LiteralInteger952.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger952", fUML_Tests_TestSimpleActivities_CopierCaller_output_LiteralInteger952);
			fUML_Tests_TestSimpleActivities_ObjectFlow953.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow953", fUML_Tests_TestSimpleActivities_ObjectFlow953);
				fUML_Tests_TestSimpleActivities_ObjectFlow953_LiteralInteger954.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger954", fUML_Tests_TestSimpleActivities_ObjectFlow953_LiteralInteger954);
			fUML_Tests_TestSimpleActivities_ObjectFlow955.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow955", fUML_Tests_TestSimpleActivities_ObjectFlow955);
				fUML_Tests_TestSimpleActivities_ObjectFlow955_LiteralInteger956.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger956", fUML_Tests_TestSimpleActivities_ObjectFlow955_LiteralInteger956);
			fUML_Tests_TestSimpleActivities_ControlFlow957.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow957", fUML_Tests_TestSimpleActivities_ControlFlow957);
				fUML_Tests_TestSimpleActivities_ControlFlow957_LiteralInteger958.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger958", fUML_Tests_TestSimpleActivities_ControlFlow957_LiteralInteger958);
			fUML_Tests_TestSimpleActivities_ObjectFlow959.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow959", fUML_Tests_TestSimpleActivities_ObjectFlow959);
				fUML_Tests_TestSimpleActivities_ObjectFlow959_LiteralInteger960.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger960", fUML_Tests_TestSimpleActivities_ObjectFlow959_LiteralInteger960);
			fUML_Tests_TestSimpleActivities_ForkMergeData_output.reset(new Parameter());
			this->addToElementRepository("ForkMergeData.output", fUML_Tests_TestSimpleActivities_ForkMergeData_output);
				fUML_Tests_TestSimpleActivities_ForkMergeData_output_LiteralUnlimitedNatural961.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural961", fUML_Tests_TestSimpleActivities_ForkMergeData_output_LiteralUnlimitedNatural961);
				fUML_Tests_TestSimpleActivities_ForkMergeData_output_LiteralUnlimitedNatural962.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural962", fUML_Tests_TestSimpleActivities_ForkMergeData_output_LiteralUnlimitedNatural962);
			fUML_Tests_TestSimpleActivities_Parameter_ForkMergeData_output.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(ForkMergeData.output)", fUML_Tests_TestSimpleActivities_Parameter_ForkMergeData_output);
			fUML_Tests_TestSimpleActivities_Call_ForkJoin.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(ForkJoin)", fUML_Tests_TestSimpleActivities_Call_ForkJoin);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1.reset(new Parameter());
			this->addToElementRepository("SimpleDecision_1.output_1", fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1);
				fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1_LiteralUnlimitedNatural963.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural963", fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1_LiteralUnlimitedNatural963);
				fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1_LiteralInteger964.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger964", fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1_LiteralInteger964);
			fUML_Tests_TestSimpleActivities_ControlFlow965.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow965", fUML_Tests_TestSimpleActivities_ControlFlow965);
				fUML_Tests_TestSimpleActivities_ControlFlow965_LiteralInteger966.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger966", fUML_Tests_TestSimpleActivities_ControlFlow965_LiteralInteger966);
			fUML_Tests_TestSimpleActivities_ControlFlow967.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow967", fUML_Tests_TestSimpleActivities_ControlFlow967);
				fUML_Tests_TestSimpleActivities_ControlFlow967_LiteralInteger968.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger968", fUML_Tests_TestSimpleActivities_ControlFlow967_LiteralInteger968);
			fUML_Tests_TestSimpleActivities_ObjectFlow969.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow969", fUML_Tests_TestSimpleActivities_ObjectFlow969);
				fUML_Tests_TestSimpleActivities_ObjectFlow969_LiteralInteger970.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger970", fUML_Tests_TestSimpleActivities_ObjectFlow969_LiteralInteger970);
			fUML_Tests_TestSimpleActivities_Fork_0.reset(new ForkNode());
			this->addToElementRepository("Fork_0", fUML_Tests_TestSimpleActivities_Fork_0);
			fUML_Tests_TestSimpleActivities_ObjectFlow971.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow971", fUML_Tests_TestSimpleActivities_ObjectFlow971);
				fUML_Tests_TestSimpleActivities_ObjectFlow971_LiteralInteger972.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger972", fUML_Tests_TestSimpleActivities_ObjectFlow971_LiteralInteger972);
			fUML_Tests_TestSimpleActivities_ObjectFlow973.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow973", fUML_Tests_TestSimpleActivities_ObjectFlow973);
				fUML_Tests_TestSimpleActivities_ObjectFlow973_LiteralInteger974.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger974", fUML_Tests_TestSimpleActivities_ObjectFlow973_LiteralInteger974);
			fUML_Tests_TestSimpleActivities_Copier_output.reset(new Parameter());
			this->addToElementRepository("Copier.output", fUML_Tests_TestSimpleActivities_Copier_output);
				fUML_Tests_TestSimpleActivities_Copier_output_LiteralInteger975.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger975", fUML_Tests_TestSimpleActivities_Copier_output_LiteralInteger975);
				fUML_Tests_TestSimpleActivities_Copier_output_LiteralUnlimitedNatural976.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural976", fUML_Tests_TestSimpleActivities_Copier_output_LiteralUnlimitedNatural976);
			fUML_Tests_TestSimpleActivities_ControlFlow977.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow977", fUML_Tests_TestSimpleActivities_ControlFlow977);
				fUML_Tests_TestSimpleActivities_ControlFlow977_LiteralInteger978.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger978", fUML_Tests_TestSimpleActivities_ControlFlow977_LiteralInteger978);
			fUML_Tests_TestSimpleActivities_Parameter_ForkMerge.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(ForkMerge)", fUML_Tests_TestSimpleActivities_Parameter_ForkMerge);
			fUML_Tests_TestSimpleActivities_ObjectFlow979.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow979", fUML_Tests_TestSimpleActivities_ObjectFlow979);
				fUML_Tests_TestSimpleActivities_ObjectFlow979_LiteralInteger980.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger980", fUML_Tests_TestSimpleActivities_ObjectFlow979_LiteralInteger980);
		fUML_Tests_TestClassWriterReader.reset(new Activity());
		this->addToElementRepository("TestClassWriterReader", fUML_Tests_TestClassWriterReader);
			fUML_Tests_TestClassWriterReader_ObjectFlow981.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow981", fUML_Tests_TestClassWriterReader_ObjectFlow981);
				fUML_Tests_TestClassWriterReader_ObjectFlow981_LiteralInteger982.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger982", fUML_Tests_TestClassWriterReader_ObjectFlow981_LiteralInteger982);
			fUML_Tests_TestClassWriterReader_Write_x.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(x)", fUML_Tests_TestClassWriterReader_Write_x);
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_value.reset(new InputPin());
				this->addToElementRepository("Write(x).value", fUML_Tests_TestClassWriterReader_Write_x_Write_x_value);
					fUML_Tests_TestClassWriterReader_Write_x_Write_x_value_LiteralUnlimitedNatural983.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural983", fUML_Tests_TestClassWriterReader_Write_x_Write_x_value_LiteralUnlimitedNatural983);
					fUML_Tests_TestClassWriterReader_Write_x_Write_x_value_LiteralInteger984.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger984", fUML_Tests_TestClassWriterReader_Write_x_Write_x_value_LiteralInteger984);
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_object.reset(new InputPin());
				this->addToElementRepository("Write(x).object", fUML_Tests_TestClassWriterReader_Write_x_Write_x_object);
					fUML_Tests_TestClassWriterReader_Write_x_Write_x_object_LiteralInteger985.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger985", fUML_Tests_TestClassWriterReader_Write_x_Write_x_object_LiteralInteger985);
					fUML_Tests_TestClassWriterReader_Write_x_Write_x_object_LiteralUnlimitedNatural986.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural986", fUML_Tests_TestClassWriterReader_Write_x_Write_x_object_LiteralUnlimitedNatural986);
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_result.reset(new OutputPin());
				this->addToElementRepository("Write(x).result", fUML_Tests_TestClassWriterReader_Write_x_Write_x_result);
					fUML_Tests_TestClassWriterReader_Write_x_Write_x_result_LiteralInteger987.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger987", fUML_Tests_TestClassWriterReader_Write_x_Write_x_result_LiteralInteger987);
					fUML_Tests_TestClassWriterReader_Write_x_Write_x_result_LiteralUnlimitedNatural988.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural988", fUML_Tests_TestClassWriterReader_Write_x_Write_x_result_LiteralUnlimitedNatural988);
			fUML_Tests_TestClassWriterReader_ObjectFlow989.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow989", fUML_Tests_TestClassWriterReader_ObjectFlow989);
				fUML_Tests_TestClassWriterReader_ObjectFlow989_LiteralInteger990.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger990", fUML_Tests_TestClassWriterReader_ObjectFlow989_LiteralInteger990);
			fUML_Tests_TestClassWriterReader_ObjectFlow991.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow991", fUML_Tests_TestClassWriterReader_ObjectFlow991);
				fUML_Tests_TestClassWriterReader_ObjectFlow991_LiteralInteger992.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger992", fUML_Tests_TestClassWriterReader_ObjectFlow991_LiteralInteger992);
			fUML_Tests_TestClassWriterReader_ObjectFlow993.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow993", fUML_Tests_TestClassWriterReader_ObjectFlow993);
				fUML_Tests_TestClassWriterReader_ObjectFlow993_LiteralInteger994.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger994", fUML_Tests_TestClassWriterReader_ObjectFlow993_LiteralInteger994);
			fUML_Tests_TestClassWriterReader_x.reset(new Parameter());
			this->addToElementRepository("x", fUML_Tests_TestClassWriterReader_x);
				fUML_Tests_TestClassWriterReader_x_LiteralUnlimitedNatural995.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural995", fUML_Tests_TestClassWriterReader_x_LiteralUnlimitedNatural995);
				fUML_Tests_TestClassWriterReader_x_LiteralInteger996.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger996", fUML_Tests_TestClassWriterReader_x_LiteralInteger996);
			fUML_Tests_TestClassWriterReader_Create_TestClass.reset(new CreateObjectAction());
			this->addToElementRepository("Create(TestClass)", fUML_Tests_TestClassWriterReader_Create_TestClass);
				fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result.reset(new OutputPin());
				this->addToElementRepository("Create(TestClass).result", fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result);
					fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result_LiteralUnlimitedNatural997.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural997", fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result_LiteralUnlimitedNatural997);
					fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result_LiteralInteger998.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger998", fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result_LiteralInteger998);
			fUML_Tests_TestClassWriterReader_Value_999.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(999)", fUML_Tests_TestClassWriterReader_Value_999);
				fUML_Tests_TestClassWriterReader_Value_999_Value_999_result.reset(new OutputPin());
				this->addToElementRepository("Value(999).result", fUML_Tests_TestClassWriterReader_Value_999_Value_999_result);
					fUML_Tests_TestClassWriterReader_Value_999_Value_999_result_LiteralInteger999.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger999", fUML_Tests_TestClassWriterReader_Value_999_Value_999_result_LiteralInteger999);
					fUML_Tests_TestClassWriterReader_Value_999_Value_999_result_LiteralUnlimitedNatural1000.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1000", fUML_Tests_TestClassWriterReader_Value_999_Value_999_result_LiteralUnlimitedNatural1000);
				fUML_Tests_TestClassWriterReader_Value_999_LiteralInteger1001.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1001", fUML_Tests_TestClassWriterReader_Value_999_LiteralInteger1001);
			fUML_Tests_TestClassWriterReader_Parameter_x.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(x)", fUML_Tests_TestClassWriterReader_Parameter_x);
			fUML_Tests_TestClassWriterReader_Read_x.reset(new ReadStructuralFeatureAction());
			this->addToElementRepository("Read(x)", fUML_Tests_TestClassWriterReader_Read_x);
				fUML_Tests_TestClassWriterReader_Read_x_Read_x_object.reset(new InputPin());
				this->addToElementRepository("Read(x).object", fUML_Tests_TestClassWriterReader_Read_x_Read_x_object);
					fUML_Tests_TestClassWriterReader_Read_x_Read_x_object_LiteralUnlimitedNatural1002.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1002", fUML_Tests_TestClassWriterReader_Read_x_Read_x_object_LiteralUnlimitedNatural1002);
					fUML_Tests_TestClassWriterReader_Read_x_Read_x_object_LiteralInteger1003.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1003", fUML_Tests_TestClassWriterReader_Read_x_Read_x_object_LiteralInteger1003);
				fUML_Tests_TestClassWriterReader_Read_x_Read_x_result.reset(new OutputPin());
				this->addToElementRepository("Read(x).result", fUML_Tests_TestClassWriterReader_Read_x_Read_x_result);
					fUML_Tests_TestClassWriterReader_Read_x_Read_x_result_LiteralUnlimitedNatural1004.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1004", fUML_Tests_TestClassWriterReader_Read_x_Read_x_result_LiteralUnlimitedNatural1004);
					fUML_Tests_TestClassWriterReader_Read_x_Read_x_result_LiteralInteger1005.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1005", fUML_Tests_TestClassWriterReader_Read_x_Read_x_result_LiteralInteger1005);
		fUML_Tests_TestIntegerComparisonFunctions.reset(new Activity());
		this->addToElementRepository("TestIntegerComparisonFunctions", fUML_Tests_TestIntegerComparisonFunctions);
			fUML_Tests_TestIntegerComparisonFunctions_Value_3.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(3)", fUML_Tests_TestIntegerComparisonFunctions_Value_3);
				fUML_Tests_TestIntegerComparisonFunctions_Value_3_LiteralInteger1006.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1006", fUML_Tests_TestIntegerComparisonFunctions_Value_3_LiteralInteger1006);
				fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result.reset(new OutputPin());
				this->addToElementRepository("Value(3).result", fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result);
					fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result_LiteralUnlimitedNatural1007.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1007", fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result_LiteralUnlimitedNatural1007);
					fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result_LiteralInteger1008.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1008", fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result_LiteralInteger1008);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GE.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(GE)", fUML_Tests_TestIntegerComparisonFunctions_Call_GE);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x.reset(new InputPin());
				this->addToElementRepository("GE.x", fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x_LiteralUnlimitedNatural1009.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1009", fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x_LiteralUnlimitedNatural1009);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x_LiteralInteger1010.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1010", fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x_LiteralInteger1010);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result.reset(new OutputPin());
				this->addToElementRepository("GE.result", fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result_LiteralInteger1011.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1011", fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result_LiteralInteger1011);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result_LiteralUnlimitedNatural1012.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1012", fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result_LiteralUnlimitedNatural1012);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y.reset(new InputPin());
				this->addToElementRepository("GE.y", fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y_LiteralUnlimitedNatural1013.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1013", fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y_LiteralUnlimitedNatural1013);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y_LiteralInteger1014.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1014", fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y_LiteralInteger1014);
			fUML_Tests_TestIntegerComparisonFunctions_Param_LEResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(LEResult)", fUML_Tests_TestIntegerComparisonFunctions_Param_LEResult);
			fUML_Tests_TestIntegerComparisonFunctions_Fork_3.reset(new ForkNode());
			this->addToElementRepository("Fork(3)", fUML_Tests_TestIntegerComparisonFunctions_Fork_3);
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1015.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1015", fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1015);
				fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1015_LiteralInteger1016.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1016", fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1015_LiteralInteger1016);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LT.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(LT)", fUML_Tests_TestIntegerComparisonFunctions_Call_LT);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x.reset(new InputPin());
				this->addToElementRepository("LT.x", fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x_LiteralInteger1017.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1017", fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x_LiteralInteger1017);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x_LiteralUnlimitedNatural1018.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1018", fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x_LiteralUnlimitedNatural1018);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result.reset(new OutputPin());
				this->addToElementRepository("LT.result", fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result_LiteralInteger1019.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1019", fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result_LiteralInteger1019);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result_LiteralUnlimitedNatural1020.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1020", fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result_LiteralUnlimitedNatural1020);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y.reset(new InputPin());
				this->addToElementRepository("LT.y", fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y_LiteralUnlimitedNatural1021.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1021", fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y_LiteralUnlimitedNatural1021);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y_LiteralInteger1022.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1022", fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y_LiteralInteger1022);
			fUML_Tests_TestIntegerComparisonFunctions_Value_2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2)", fUML_Tests_TestIntegerComparisonFunctions_Value_2);
				fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result.reset(new OutputPin());
				this->addToElementRepository("Value(2).result", fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result);
					fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result_LiteralInteger1023.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1023", fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result_LiteralInteger1023);
					fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result_LiteralUnlimitedNatural1024.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1024", fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result_LiteralUnlimitedNatural1024);
				fUML_Tests_TestIntegerComparisonFunctions_Value_2_LiteralInteger1025.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1025", fUML_Tests_TestIntegerComparisonFunctions_Value_2_LiteralInteger1025);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1026.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1026", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1026);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1026_LiteralInteger1027.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1027", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1026_LiteralInteger1027);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LE.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(LE)", fUML_Tests_TestIntegerComparisonFunctions_Call_LE);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x.reset(new InputPin());
				this->addToElementRepository("LE.x", fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x_LiteralInteger1028.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1028", fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x_LiteralInteger1028);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x_LiteralUnlimitedNatural1029.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1029", fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x_LiteralUnlimitedNatural1029);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result.reset(new OutputPin());
				this->addToElementRepository("LE.result", fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result_LiteralInteger1030.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1030", fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result_LiteralInteger1030);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result_LiteralUnlimitedNatural1031.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1031", fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result_LiteralUnlimitedNatural1031);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y.reset(new InputPin());
				this->addToElementRepository("LE.y", fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y_LiteralInteger1032.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1032", fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y_LiteralInteger1032);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y_LiteralUnlimitedNatural1033.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1033", fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y_LiteralUnlimitedNatural1033);
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1034.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1034", fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1034);
				fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1034_LiteralInteger1035.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1035", fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1034_LiteralInteger1035);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1036.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1036", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1036);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1036_LiteralInteger1037.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1037", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1036_LiteralInteger1037);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1038.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1038", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1038);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1038_LiteralInteger1039.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1039", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1038_LiteralInteger1039);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1040.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1040", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1040);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1040_LiteralInteger1041.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1041", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1040_LiteralInteger1041);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GT.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(GT)", fUML_Tests_TestIntegerComparisonFunctions_Call_GT);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result.reset(new OutputPin());
				this->addToElementRepository("GT.result", fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result_LiteralUnlimitedNatural1042.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1042", fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result_LiteralUnlimitedNatural1042);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result_LiteralInteger1043.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1043", fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result_LiteralInteger1043);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y.reset(new InputPin());
				this->addToElementRepository("GT.y", fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y_LiteralInteger1044.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1044", fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y_LiteralInteger1044);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y_LiteralUnlimitedNatural1045.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1045", fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y_LiteralUnlimitedNatural1045);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x.reset(new InputPin());
				this->addToElementRepository("GT.x", fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x_LiteralInteger1046.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1046", fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x_LiteralInteger1046);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x_LiteralUnlimitedNatural1047.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1047", fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x_LiteralUnlimitedNatural1047);
			fUML_Tests_TestIntegerComparisonFunctions_LEResult.reset(new Parameter());
			this->addToElementRepository("LEResult", fUML_Tests_TestIntegerComparisonFunctions_LEResult);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1048.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1048", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1048);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1048_LiteralInteger1049.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1049", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1048_LiteralInteger1049);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1050.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1050", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1050);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1050_LiteralInteger1051.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1051", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1050_LiteralInteger1051);
			fUML_Tests_TestIntegerComparisonFunctions_Param_GTResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(GTResult)", fUML_Tests_TestIntegerComparisonFunctions_Param_GTResult);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1052.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1052", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1052);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1052_LiteralInteger1053.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1053", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1052_LiteralInteger1053);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1054.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1054", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1054);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1054_LiteralInteger1055.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1055", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1054_LiteralInteger1055);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1056.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1056", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1056);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1056_LiteralInteger1057.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1057", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1056_LiteralInteger1057);
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1058.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1058", fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1058);
				fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1058_LiteralInteger1059.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1059", fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1058_LiteralInteger1059);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1060.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1060", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1060);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1060_LiteralInteger1061.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1061", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1060_LiteralInteger1061);
			fUML_Tests_TestIntegerComparisonFunctions_GTResult.reset(new Parameter());
			this->addToElementRepository("GTResult", fUML_Tests_TestIntegerComparisonFunctions_GTResult);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1062.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1062", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1062);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1062_LiteralInteger1063.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1063", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1062_LiteralInteger1063);
			fUML_Tests_TestIntegerComparisonFunctions_LTResult.reset(new Parameter());
			this->addToElementRepository("LTResult", fUML_Tests_TestIntegerComparisonFunctions_LTResult);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1064.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1064", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1064);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1064_LiteralInteger1065.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1065", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1064_LiteralInteger1065);
			fUML_Tests_TestIntegerComparisonFunctions_GEResult.reset(new Parameter());
			this->addToElementRepository("GEResult", fUML_Tests_TestIntegerComparisonFunctions_GEResult);
			fUML_Tests_TestIntegerComparisonFunctions_Param_GEResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(GEResult)", fUML_Tests_TestIntegerComparisonFunctions_Param_GEResult);
			fUML_Tests_TestIntegerComparisonFunctions_Fork_2.reset(new ForkNode());
			this->addToElementRepository("Fork(2)", fUML_Tests_TestIntegerComparisonFunctions_Fork_2);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1066.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1066", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1066);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1066_LiteralInteger1067.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1067", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1066_LiteralInteger1067);
			fUML_Tests_TestIntegerComparisonFunctions_Param_LTResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(LTResult)", fUML_Tests_TestIntegerComparisonFunctions_Param_LTResult);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1068.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1068", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1068);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1068_LiteralInteger1069.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1069", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1068_LiteralInteger1069);
		fUML_Tests_TestListFunctions.reset(new Activity());
		this->addToElementRepository("TestListFunctions", fUML_Tests_TestListFunctions);
			fUML_Tests_TestListFunctions_ObjectFlow1070.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1070", fUML_Tests_TestListFunctions_ObjectFlow1070);
				fUML_Tests_TestListFunctions_ObjectFlow1070_LiteralInteger1071.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1071", fUML_Tests_TestListFunctions_ObjectFlow1070_LiteralInteger1071);
			fUML_Tests_TestListFunctions_ControlFlow1072.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1072", fUML_Tests_TestListFunctions_ControlFlow1072);
				fUML_Tests_TestListFunctions_ControlFlow1072_LiteralInteger1073.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1073", fUML_Tests_TestListFunctions_ControlFlow1072_LiteralInteger1073);
			fUML_Tests_TestListFunctions_ObjectFlow1074.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1074", fUML_Tests_TestListFunctions_ObjectFlow1074);
				fUML_Tests_TestListFunctions_ObjectFlow1074_LiteralInteger1075.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1075", fUML_Tests_TestListFunctions_ObjectFlow1074_LiteralInteger1075);
			fUML_Tests_TestListFunctions_Param_element.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(element)", fUML_Tests_TestListFunctions_Param_element);
			fUML_Tests_TestListFunctions_ObjectFlow1076.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1076", fUML_Tests_TestListFunctions_ObjectFlow1076);
				fUML_Tests_TestListFunctions_ObjectFlow1076_LiteralInteger1077.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1077", fUML_Tests_TestListFunctions_ObjectFlow1076_LiteralInteger1077);
			fUML_Tests_TestListFunctions_Call_ListGet.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(ListGet)", fUML_Tests_TestListFunctions_Call_ListGet);
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result.reset(new OutputPin());
				this->addToElementRepository("ListGet.result", fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result);
					fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result_LiteralInteger1078.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1078", fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result_LiteralInteger1078);
					fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result_LiteralUnlimitedNatural1079.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1079", fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result_LiteralUnlimitedNatural1079);
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list.reset(new InputPin());
				this->addToElementRepository("ListGet.list", fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list);
					fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list_LiteralUnlimitedNatural1080.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1080", fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list_LiteralUnlimitedNatural1080);
					fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list_LiteralInteger1081.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1081", fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list_LiteralInteger1081);
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index.reset(new InputPin());
				this->addToElementRepository("ListGet.index", fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index);
					fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index_LiteralInteger1082.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1082", fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index_LiteralInteger1082);
					fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index_LiteralUnlimitedNatural1083.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1083", fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index_LiteralUnlimitedNatural1083);
			fUML_Tests_TestListFunctions_Call_ListConcat.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(ListConcat)", fUML_Tests_TestListFunctions_Call_ListConcat);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1.reset(new InputPin());
				this->addToElementRepository("ListConcat.list1", fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1);
					fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1_LiteralInteger1084.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1084", fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1_LiteralInteger1084);
					fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1_LiteralUnlimitedNatural1085.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1085", fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1_LiteralUnlimitedNatural1085);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2.reset(new InputPin());
				this->addToElementRepository("ListConcat.list2", fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2);
					fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2_LiteralUnlimitedNatural1086.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1086", fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2_LiteralUnlimitedNatural1086);
					fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2_LiteralInteger1087.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1087", fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2_LiteralInteger1087);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result.reset(new OutputPin());
				this->addToElementRepository("ListConcat.result", fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result);
					fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result_LiteralInteger1088.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1088", fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result_LiteralInteger1088);
					fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result_LiteralUnlimitedNatural1089.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1089", fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result_LiteralUnlimitedNatural1089);
			fUML_Tests_TestListFunctions_Call_ListSize.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(ListSize)", fUML_Tests_TestListFunctions_Call_ListSize);
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list.reset(new InputPin());
				this->addToElementRepository("ListSize.list", fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list);
					fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list_LiteralUnlimitedNatural1090.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1090", fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list_LiteralUnlimitedNatural1090);
					fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list_LiteralInteger1091.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1091", fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list_LiteralInteger1091);
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result.reset(new OutputPin());
				this->addToElementRepository("ListSize.result", fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result);
					fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result_LiteralUnlimitedNatural1092.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1092", fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result_LiteralUnlimitedNatural1092);
					fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result_LiteralInteger1093.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1093", fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result_LiteralInteger1093);
			fUML_Tests_TestListFunctions_concatNode.reset(new ActivityParameterNode());
			this->addToElementRepository("concatNode", fUML_Tests_TestListFunctions_concatNode);
			fUML_Tests_TestListFunctions_ObjectFlow1094.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1094", fUML_Tests_TestListFunctions_ObjectFlow1094);
				fUML_Tests_TestListFunctions_ObjectFlow1094_LiteralUnlimitedNatural1095.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1095", fUML_Tests_TestListFunctions_ObjectFlow1094_LiteralUnlimitedNatural1095);
			fUML_Tests_TestListFunctions_ObjectFlow1096.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1096", fUML_Tests_TestListFunctions_ObjectFlow1096);
				fUML_Tests_TestListFunctions_ObjectFlow1096_LiteralUnlimitedNatural1097.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1097", fUML_Tests_TestListFunctions_ObjectFlow1096_LiteralUnlimitedNatural1097);
			fUML_Tests_TestListFunctions_ObjectFlow1098.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1098", fUML_Tests_TestListFunctions_ObjectFlow1098);
				fUML_Tests_TestListFunctions_ObjectFlow1098_LiteralInteger1099.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1099", fUML_Tests_TestListFunctions_ObjectFlow1098_LiteralInteger1099);
			fUML_Tests_TestListFunctions_ControlFlow1100.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1100", fUML_Tests_TestListFunctions_ControlFlow1100);
				fUML_Tests_TestListFunctions_ControlFlow1100_LiteralUnlimitedNatural1101.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1101", fUML_Tests_TestListFunctions_ControlFlow1100_LiteralUnlimitedNatural1101);
			fUML_Tests_TestListFunctions_ObjectFlow1102.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1102", fUML_Tests_TestListFunctions_ObjectFlow1102);
				fUML_Tests_TestListFunctions_ObjectFlow1102_LiteralInteger1103.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1103", fUML_Tests_TestListFunctions_ObjectFlow1102_LiteralInteger1103);
			fUML_Tests_TestListFunctions_Param_size.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(size)", fUML_Tests_TestListFunctions_Param_size);
			fUML_Tests_TestListFunctions_ObjectFlow1104.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1104", fUML_Tests_TestListFunctions_ObjectFlow1104);
				fUML_Tests_TestListFunctions_ObjectFlow1104_LiteralInteger1105.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1105", fUML_Tests_TestListFunctions_ObjectFlow1104_LiteralInteger1105);
			fUML_Tests_TestListFunctions_element.reset(new Parameter());
			this->addToElementRepository("element", fUML_Tests_TestListFunctions_element);
				fUML_Tests_TestListFunctions_element_LiteralInteger1106.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1106", fUML_Tests_TestListFunctions_element_LiteralInteger1106);
				fUML_Tests_TestListFunctions_element_LiteralUnlimitedNatural1107.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1107", fUML_Tests_TestListFunctions_element_LiteralUnlimitedNatural1107);
			fUML_Tests_TestListFunctions_Value_index.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(index)", fUML_Tests_TestListFunctions_Value_index);
				fUML_Tests_TestListFunctions_Value_index_LiteralInteger1108.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1108", fUML_Tests_TestListFunctions_Value_index_LiteralInteger1108);
				fUML_Tests_TestListFunctions_Value_index_Value_index_result.reset(new OutputPin());
				this->addToElementRepository("Value(index).result", fUML_Tests_TestListFunctions_Value_index_Value_index_result);
					fUML_Tests_TestListFunctions_Value_index_Value_index_result_LiteralUnlimitedNatural1109.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1109", fUML_Tests_TestListFunctions_Value_index_Value_index_result_LiteralUnlimitedNatural1109);
					fUML_Tests_TestListFunctions_Value_index_Value_index_result_LiteralInteger1110.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1110", fUML_Tests_TestListFunctions_Value_index_Value_index_result_LiteralInteger1110);
			fUML_Tests_TestListFunctions_size.reset(new Parameter());
			this->addToElementRepository("size", fUML_Tests_TestListFunctions_size);
				fUML_Tests_TestListFunctions_size_LiteralUnlimitedNatural1111.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1111", fUML_Tests_TestListFunctions_size_LiteralUnlimitedNatural1111);
				fUML_Tests_TestListFunctions_size_LiteralInteger1112.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1112", fUML_Tests_TestListFunctions_size_LiteralInteger1112);
			fUML_Tests_TestListFunctions_Fork.reset(new ForkNode());
			this->addToElementRepository("Fork", fUML_Tests_TestListFunctions_Fork);
			fUML_Tests_TestListFunctions_concat.reset(new Parameter());
			this->addToElementRepository("concat", fUML_Tests_TestListFunctions_concat);
				fUML_Tests_TestListFunctions_concat_LiteralInteger1113.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1113", fUML_Tests_TestListFunctions_concat_LiteralInteger1113);
				fUML_Tests_TestListFunctions_concat_LiteralUnlimitedNatural1114.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1114", fUML_Tests_TestListFunctions_concat_LiteralUnlimitedNatural1114);
			fUML_Tests_TestListFunctions_ObjectFlow1115.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1115", fUML_Tests_TestListFunctions_ObjectFlow1115);
				fUML_Tests_TestListFunctions_ObjectFlow1115_LiteralUnlimitedNatural1116.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1116", fUML_Tests_TestListFunctions_ObjectFlow1115_LiteralUnlimitedNatural1116);
			fUML_Tests_TestListFunctions_Call_GenerateListTestData.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(GenerateListTestData)", fUML_Tests_TestListFunctions_Call_GenerateListTestData);
				fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list.reset(new OutputPin());
				this->addToElementRepository("GenData.list", fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list);
					fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list_LiteralUnlimitedNatural1117.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1117", fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list_LiteralUnlimitedNatural1117);
					fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list_LiteralUnlimitedNatural1118.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1118", fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list_LiteralUnlimitedNatural1118);
		fUML_Tests_SignalEvent1119.reset(new SignalEvent());
		this->addToElementRepository("SignalEvent1119", fUML_Tests_SignalEvent1119);
		fUML_Tests_TestClassObjectDestroyer.reset(new Activity());
		this->addToElementRepository("TestClassObjectDestroyer", fUML_Tests_TestClassObjectDestroyer);
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectIn.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(objectIn)", fUML_Tests_TestClassObjectDestroyer_Parameter_objectIn);
			fUML_Tests_TestClassObjectDestroyer_objectOut.reset(new Parameter());
			this->addToElementRepository("objectOut", fUML_Tests_TestClassObjectDestroyer_objectOut);
				fUML_Tests_TestClassObjectDestroyer_objectOut_LiteralInteger1120.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1120", fUML_Tests_TestClassObjectDestroyer_objectOut_LiteralInteger1120);
				fUML_Tests_TestClassObjectDestroyer_objectOut_LiteralUnlimitedNatural1121.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1121", fUML_Tests_TestClassObjectDestroyer_objectOut_LiteralUnlimitedNatural1121);
			fUML_Tests_TestClassObjectDestroyer_DestroyObject.reset(new DestroyObjectAction());
			this->addToElementRepository("DestroyObject", fUML_Tests_TestClassObjectDestroyer_DestroyObject);
				fUML_Tests_TestClassObjectDestroyer_DestroyObject_DestroyObject_target.reset(new InputPin());
				this->addToElementRepository("DestroyObject.target", fUML_Tests_TestClassObjectDestroyer_DestroyObject_DestroyObject_target);
			fUML_Tests_TestClassObjectDestroyer_Fork.reset(new ForkNode());
			this->addToElementRepository("Fork", fUML_Tests_TestClassObjectDestroyer_Fork);
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1122.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1122", fUML_Tests_TestClassObjectDestroyer_ObjectFlow1122);
				fUML_Tests_TestClassObjectDestroyer_ObjectFlow1122_LiteralInteger1123.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1123", fUML_Tests_TestClassObjectDestroyer_ObjectFlow1122_LiteralInteger1123);
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1124.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1124", fUML_Tests_TestClassObjectDestroyer_ObjectFlow1124);
				fUML_Tests_TestClassObjectDestroyer_ObjectFlow1124_LiteralInteger1125.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1125", fUML_Tests_TestClassObjectDestroyer_ObjectFlow1124_LiteralInteger1125);
			fUML_Tests_TestClassObjectDestroyer_objectIn.reset(new Parameter());
			this->addToElementRepository("objectIn", fUML_Tests_TestClassObjectDestroyer_objectIn);
				fUML_Tests_TestClassObjectDestroyer_objectIn_LiteralUnlimitedNatural1126.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1126", fUML_Tests_TestClassObjectDestroyer_objectIn_LiteralUnlimitedNatural1126);
				fUML_Tests_TestClassObjectDestroyer_objectIn_LiteralInteger1127.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1127", fUML_Tests_TestClassObjectDestroyer_objectIn_LiteralInteger1127);
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1128.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1128", fUML_Tests_TestClassObjectDestroyer_ObjectFlow1128);
				fUML_Tests_TestClassObjectDestroyer_ObjectFlow1128_LiteralInteger1129.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1129", fUML_Tests_TestClassObjectDestroyer_ObjectFlow1128_LiteralInteger1129);
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectOut.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(objectOut)", fUML_Tests_TestClassObjectDestroyer_Parameter_objectOut);
		fUML_Tests_Subclass1.reset(new Class_());
		this->addToElementRepository("Subclass1", fUML_Tests_Subclass1);
			fUML_Tests_Subclass1_Generalization1130.reset(new Generalization());
			this->addToElementRepository("Generalization1130", fUML_Tests_Subclass1_Generalization1130);
			fUML_Tests_Subclass1_a.reset(new Property());
			this->addToElementRepository("a", fUML_Tests_Subclass1_a);
		fUML_Tests_CallEvent1131.reset(new CallEvent());
		this->addToElementRepository("CallEvent1131", fUML_Tests_CallEvent1131);
		fUML_Tests_TestClass.reset(new Class_());
		this->addToElementRepository("TestClass", fUML_Tests_TestClass);
			fUML_Tests_TestClass_x.reset(new Property());
			this->addToElementRepository("x", fUML_Tests_TestClass_x);
				fUML_Tests_TestClass_x_LiteralInteger1132.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1132", fUML_Tests_TestClass_x_LiteralInteger1132);
				fUML_Tests_TestClass_x_LiteralUnlimitedNatural1133.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1133", fUML_Tests_TestClass_x_LiteralUnlimitedNatural1133);
			fUML_Tests_TestClass_y.reset(new Property());
			this->addToElementRepository("y", fUML_Tests_TestClass_y);
				fUML_Tests_TestClass_y_LiteralUnlimitedNatural1134.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1134", fUML_Tests_TestClass_y_LiteralUnlimitedNatural1134);
				fUML_Tests_TestClass_y_LiteralInteger1135.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1135", fUML_Tests_TestClass_y_LiteralInteger1135);
		fUML_Tests_Copier.reset(new Activity());
		this->addToElementRepository("Copier", fUML_Tests_Copier);
			fUML_Tests_Copier_Parameter_output.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(output)", fUML_Tests_Copier_Parameter_output);
			fUML_Tests_Copier_Parameter_input.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(input)", fUML_Tests_Copier_Parameter_input);
			fUML_Tests_Copier_input.reset(new Parameter());
			this->addToElementRepository("input", fUML_Tests_Copier_input);
				fUML_Tests_Copier_input_LiteralUnlimitedNatural1136.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1136", fUML_Tests_Copier_input_LiteralUnlimitedNatural1136);
				fUML_Tests_Copier_input_LiteralInteger1137.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1137", fUML_Tests_Copier_input_LiteralInteger1137);
			fUML_Tests_Copier_output.reset(new Parameter());
			this->addToElementRepository("output", fUML_Tests_Copier_output);
				fUML_Tests_Copier_output_LiteralUnlimitedNatural1138.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1138", fUML_Tests_Copier_output_LiteralUnlimitedNatural1138);
				fUML_Tests_Copier_output_LiteralInteger1139.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1139", fUML_Tests_Copier_output_LiteralInteger1139);
			fUML_Tests_Copier_ObjectFlow1140.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1140", fUML_Tests_Copier_ObjectFlow1140);
				fUML_Tests_Copier_ObjectFlow1140_LiteralInteger1141.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1141", fUML_Tests_Copier_ObjectFlow1140_LiteralInteger1141);
		fUML_Tests_ForkJoin.reset(new Activity());
		this->addToElementRepository("ForkJoin", fUML_Tests_ForkJoin);
			fUML_Tests_ForkJoin_ControlFlow1142.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1142", fUML_Tests_ForkJoin_ControlFlow1142);
				fUML_Tests_ForkJoin_ControlFlow1142_LiteralInteger1143.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1143", fUML_Tests_ForkJoin_ControlFlow1142_LiteralInteger1143);
			fUML_Tests_ForkJoin_JoinNode.reset(new JoinNode());
			this->addToElementRepository("JoinNode", fUML_Tests_ForkJoin_JoinNode);
			fUML_Tests_ForkJoin_FinalNode.reset(new ActivityFinalNode());
			this->addToElementRepository("FinalNode", fUML_Tests_ForkJoin_FinalNode);
			fUML_Tests_ForkJoin_ForkNode.reset(new ForkNode());
			this->addToElementRepository("ForkNode", fUML_Tests_ForkJoin_ForkNode);
			fUML_Tests_ForkJoin_ControlFlow1144.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1144", fUML_Tests_ForkJoin_ControlFlow1144);
				fUML_Tests_ForkJoin_ControlFlow1144_LiteralInteger1145.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1145", fUML_Tests_ForkJoin_ControlFlow1144_LiteralInteger1145);
			fUML_Tests_ForkJoin_InitialNode.reset(new InitialNode());
			this->addToElementRepository("InitialNode", fUML_Tests_ForkJoin_InitialNode);
			fUML_Tests_ForkJoin_ControlFlow1146.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1146", fUML_Tests_ForkJoin_ControlFlow1146);
				fUML_Tests_ForkJoin_ControlFlow1146_LiteralInteger1147.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1147", fUML_Tests_ForkJoin_ControlFlow1146_LiteralInteger1147);
			fUML_Tests_ForkJoin_ControlFlow1148.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1148", fUML_Tests_ForkJoin_ControlFlow1148);
				fUML_Tests_ForkJoin_ControlFlow1148_LiteralInteger1149.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1149", fUML_Tests_ForkJoin_ControlFlow1148_LiteralInteger1149);
		fUML_Tests_TestDataStore.reset(new Activity());
		this->addToElementRepository("TestDataStore", fUML_Tests_TestDataStore);
			fUML_Tests_TestDataStore_Value_1minusInitminus2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)-Init-2", fUML_Tests_TestDataStore_Value_1minusInitminus2);
				fUML_Tests_TestDataStore_Value_1minusInitminus2_Value_1minusInitminus2_result.reset(new OutputPin());
				this->addToElementRepository("Value(1)-Init-2.result", fUML_Tests_TestDataStore_Value_1minusInitminus2_Value_1minusInitminus2_result);
				fUML_Tests_TestDataStore_Value_1minusInitminus2_LiteralInteger1150.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1150", fUML_Tests_TestDataStore_Value_1minusInitminus2_LiteralInteger1150);
			fUML_Tests_TestDataStore_Merge3.reset(new MergeNode());
			this->addToElementRepository("Merge3", fUML_Tests_TestDataStore_Merge3);
			fUML_Tests_TestDataStore_ObjectFlow1151.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1151", fUML_Tests_TestDataStore_ObjectFlow1151);
				fUML_Tests_TestDataStore_ObjectFlow1151_LiteralUnlimitedNatural1152.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1152", fUML_Tests_TestDataStore_ObjectFlow1151_LiteralUnlimitedNatural1152);
			fUML_Tests_TestDataStore_ObjectFlow1153.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1153", fUML_Tests_TestDataStore_ObjectFlow1153);
				fUML_Tests_TestDataStore_ObjectFlow1153_LiteralUnlimitedNatural1154.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1154", fUML_Tests_TestDataStore_ObjectFlow1153_LiteralUnlimitedNatural1154);
			fUML_Tests_TestDataStore_ControlFlow1155.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1155", fUML_Tests_TestDataStore_ControlFlow1155);
				fUML_Tests_TestDataStore_ControlFlow1155_LiteralUnlimitedNatural1156.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1156", fUML_Tests_TestDataStore_ControlFlow1155_LiteralUnlimitedNatural1156);
			fUML_Tests_TestDataStore_Call_Copierminus1.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Copier)-1", fUML_Tests_TestDataStore_Call_Copierminus1);
				fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input.reset(new InputPin());
				this->addToElementRepository("Call(Copier)-1.input", fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input);
					fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input_LiteralUnlimitedNatural1157.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1157", fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input_LiteralUnlimitedNatural1157);
					fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input_LiteralInteger1158.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1158", fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input_LiteralInteger1158);
				fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output.reset(new OutputPin());
				this->addToElementRepository("Call(Copier)-1.output", fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output);
					fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output_LiteralUnlimitedNatural1159.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1159", fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output_LiteralUnlimitedNatural1159);
					fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output_LiteralInteger1160.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1160", fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output_LiteralInteger1160);
			fUML_Tests_TestDataStore_ControlFlow1161.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1161", fUML_Tests_TestDataStore_ControlFlow1161);
				fUML_Tests_TestDataStore_ControlFlow1161_LiteralUnlimitedNatural1162.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1162", fUML_Tests_TestDataStore_ControlFlow1161_LiteralUnlimitedNatural1162);
				fUML_Tests_TestDataStore_ControlFlow1161_LiteralInteger1163.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1163", fUML_Tests_TestDataStore_ControlFlow1161_LiteralInteger1163);
			fUML_Tests_TestDataStore_ControlFlow1164.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1164", fUML_Tests_TestDataStore_ControlFlow1164);
				fUML_Tests_TestDataStore_ControlFlow1164_LiteralUnlimitedNatural1165.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1165", fUML_Tests_TestDataStore_ControlFlow1164_LiteralUnlimitedNatural1165);
			fUML_Tests_TestDataStore_output.reset(new Parameter());
			this->addToElementRepository("output", fUML_Tests_TestDataStore_output);
				fUML_Tests_TestDataStore_output_LiteralUnlimitedNatural1166.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1166", fUML_Tests_TestDataStore_output_LiteralUnlimitedNatural1166);
				fUML_Tests_TestDataStore_output_LiteralInteger1167.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1167", fUML_Tests_TestDataStore_output_LiteralInteger1167);
			fUML_Tests_TestDataStore_ObjectFlow1168.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1168", fUML_Tests_TestDataStore_ObjectFlow1168);
				fUML_Tests_TestDataStore_ObjectFlow1168_LiteralUnlimitedNatural1169.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1169", fUML_Tests_TestDataStore_ObjectFlow1168_LiteralUnlimitedNatural1169);
			fUML_Tests_TestDataStore_InitialNode1170.reset(new InitialNode());
			this->addToElementRepository("InitialNode1170", fUML_Tests_TestDataStore_InitialNode1170);
			fUML_Tests_TestDataStore_Value_2minusInitminus3.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2)-Init-3", fUML_Tests_TestDataStore_Value_2minusInitminus3);
				fUML_Tests_TestDataStore_Value_2minusInitminus3_Value_2minusInitminus1_result.reset(new OutputPin());
				this->addToElementRepository("Value(2)-Init-1.result", fUML_Tests_TestDataStore_Value_2minusInitminus3_Value_2minusInitminus1_result);
				fUML_Tests_TestDataStore_Value_2minusInitminus3_LiteralInteger1171.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1171", fUML_Tests_TestDataStore_Value_2minusInitminus3_LiteralInteger1171);
			fUML_Tests_TestDataStore_Value_2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2)", fUML_Tests_TestDataStore_Value_2);
				fUML_Tests_TestDataStore_Value_2_Value_2_result.reset(new OutputPin());
				this->addToElementRepository("Value(2).result", fUML_Tests_TestDataStore_Value_2_Value_2_result);
				fUML_Tests_TestDataStore_Value_2_LiteralInteger1172.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1172", fUML_Tests_TestDataStore_Value_2_LiteralInteger1172);
			fUML_Tests_TestDataStore_ControlFlow1173.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1173", fUML_Tests_TestDataStore_ControlFlow1173);
				fUML_Tests_TestDataStore_ControlFlow1173_LiteralUnlimitedNatural1174.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1174", fUML_Tests_TestDataStore_ControlFlow1173_LiteralUnlimitedNatural1174);
			fUML_Tests_TestDataStore_ObjectFlow1175.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1175", fUML_Tests_TestDataStore_ObjectFlow1175);
				fUML_Tests_TestDataStore_ObjectFlow1175_LiteralUnlimitedNatural1176.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1176", fUML_Tests_TestDataStore_ObjectFlow1175_LiteralUnlimitedNatural1176);
			fUML_Tests_TestDataStore_decisionInputFlow.reset(new ObjectFlow());
			this->addToElementRepository("decisionInputFlow", fUML_Tests_TestDataStore_decisionInputFlow);
				fUML_Tests_TestDataStore_decisionInputFlow_LiteralUnlimitedNatural1177.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1177", fUML_Tests_TestDataStore_decisionInputFlow_LiteralUnlimitedNatural1177);
			fUML_Tests_TestDataStore_Value_3.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(3)", fUML_Tests_TestDataStore_Value_3);
				fUML_Tests_TestDataStore_Value_3_Value_3_result.reset(new OutputPin());
				this->addToElementRepository("Value(3).result", fUML_Tests_TestDataStore_Value_3_Value_3_result);
				fUML_Tests_TestDataStore_Value_3_LiteralInteger1178.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1178", fUML_Tests_TestDataStore_Value_3_LiteralInteger1178);
			fUML_Tests_TestDataStore_Value_1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)", fUML_Tests_TestDataStore_Value_1);
				fUML_Tests_TestDataStore_Value_1_Value_1_result.reset(new OutputPin());
				this->addToElementRepository("Value(1).result", fUML_Tests_TestDataStore_Value_1_Value_1_result);
				fUML_Tests_TestDataStore_Value_1_LiteralInteger1179.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1179", fUML_Tests_TestDataStore_Value_1_LiteralInteger1179);
			fUML_Tests_TestDataStore_Parameter_output.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(output)", fUML_Tests_TestDataStore_Parameter_output);
			fUML_Tests_TestDataStore_ControlFlow1180.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1180", fUML_Tests_TestDataStore_ControlFlow1180);
				fUML_Tests_TestDataStore_ControlFlow1180_LiteralUnlimitedNatural1181.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1181", fUML_Tests_TestDataStore_ControlFlow1180_LiteralUnlimitedNatural1181);
			fUML_Tests_TestDataStore_ControlFlow1182.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1182", fUML_Tests_TestDataStore_ControlFlow1182);
				fUML_Tests_TestDataStore_ControlFlow1182_LiteralUnlimitedNatural1183.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1183", fUML_Tests_TestDataStore_ControlFlow1182_LiteralUnlimitedNatural1183);
			fUML_Tests_TestDataStore_ControlFlow1184.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1184", fUML_Tests_TestDataStore_ControlFlow1184);
				fUML_Tests_TestDataStore_ControlFlow1184_LiteralInteger1185.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1185", fUML_Tests_TestDataStore_ControlFlow1184_LiteralInteger1185);
				fUML_Tests_TestDataStore_ControlFlow1184_LiteralUnlimitedNatural1186.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1186", fUML_Tests_TestDataStore_ControlFlow1184_LiteralUnlimitedNatural1186);
			fUML_Tests_TestDataStore_ControlFlow1187.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1187", fUML_Tests_TestDataStore_ControlFlow1187);
				fUML_Tests_TestDataStore_ControlFlow1187_LiteralUnlimitedNatural1188.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1188", fUML_Tests_TestDataStore_ControlFlow1187_LiteralUnlimitedNatural1188);
			fUML_Tests_TestDataStore_ControlFlow1189.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1189", fUML_Tests_TestDataStore_ControlFlow1189);
				fUML_Tests_TestDataStore_ControlFlow1189_LiteralUnlimitedNatural1190.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1190", fUML_Tests_TestDataStore_ControlFlow1189_LiteralUnlimitedNatural1190);
			fUML_Tests_TestDataStore_ObjectFlow1191.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1191", fUML_Tests_TestDataStore_ObjectFlow1191);
				fUML_Tests_TestDataStore_ObjectFlow1191_LiteralUnlimitedNatural1192.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1192", fUML_Tests_TestDataStore_ObjectFlow1191_LiteralUnlimitedNatural1192);
			fUML_Tests_TestDataStore_ObjectFlow1193.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1193", fUML_Tests_TestDataStore_ObjectFlow1193);
				fUML_Tests_TestDataStore_ObjectFlow1193_LiteralUnlimitedNatural1194.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1194", fUML_Tests_TestDataStore_ObjectFlow1193_LiteralUnlimitedNatural1194);
			fUML_Tests_TestDataStore_Call_Copierminus2.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Copier)-2", fUML_Tests_TestDataStore_Call_Copierminus2);
				fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output.reset(new OutputPin());
				this->addToElementRepository("Call(Copier)-2.output", fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output);
					fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output_LiteralUnlimitedNatural1195.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1195", fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output_LiteralUnlimitedNatural1195);
					fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output_LiteralInteger1196.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1196", fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output_LiteralInteger1196);
				fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input.reset(new InputPin());
				this->addToElementRepository("Call(Copier)-2.input", fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input);
					fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input_LiteralUnlimitedNatural1197.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1197", fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input_LiteralUnlimitedNatural1197);
					fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input_LiteralInteger1198.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1198", fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input_LiteralInteger1198);
			fUML_Tests_TestDataStore_DecisionNode.reset(new DecisionNode());
			this->addToElementRepository("DecisionNode", fUML_Tests_TestDataStore_DecisionNode);
			fUML_Tests_TestDataStore_Merge2.reset(new MergeNode());
			this->addToElementRepository("Merge2", fUML_Tests_TestDataStore_Merge2);
			fUML_Tests_TestDataStore_ControlFlow1199.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1199", fUML_Tests_TestDataStore_ControlFlow1199);
				fUML_Tests_TestDataStore_ControlFlow1199_LiteralUnlimitedNatural1200.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1200", fUML_Tests_TestDataStore_ControlFlow1199_LiteralUnlimitedNatural1200);
			fUML_Tests_TestDataStore_ControlFlow1201.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1201", fUML_Tests_TestDataStore_ControlFlow1201);
				fUML_Tests_TestDataStore_ControlFlow1201_LiteralUnlimitedNatural1202.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1202", fUML_Tests_TestDataStore_ControlFlow1201_LiteralUnlimitedNatural1202);
			fUML_Tests_TestDataStore_ObjectFlow1203.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1203", fUML_Tests_TestDataStore_ObjectFlow1203);
				fUML_Tests_TestDataStore_ObjectFlow1203_LiteralUnlimitedNatural1204.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1204", fUML_Tests_TestDataStore_ObjectFlow1203_LiteralUnlimitedNatural1204);
			fUML_Tests_TestDataStore_FinalNode.reset(new ActivityFinalNode());
			this->addToElementRepository("FinalNode", fUML_Tests_TestDataStore_FinalNode);
			fUML_Tests_TestDataStore_DataStoreNode.reset(new DataStoreNode());
			this->addToElementRepository("DataStoreNode", fUML_Tests_TestDataStore_DataStoreNode);
			fUML_Tests_TestDataStore_ControlFlow1205.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1205", fUML_Tests_TestDataStore_ControlFlow1205);
				fUML_Tests_TestDataStore_ControlFlow1205_LiteralUnlimitedNatural1206.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1206", fUML_Tests_TestDataStore_ControlFlow1205_LiteralUnlimitedNatural1206);
			fUML_Tests_TestDataStore_ControlFlow1207.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1207", fUML_Tests_TestDataStore_ControlFlow1207);
				fUML_Tests_TestDataStore_ControlFlow1207_LiteralUnlimitedNatural1208.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1208", fUML_Tests_TestDataStore_ControlFlow1207_LiteralUnlimitedNatural1208);
				fUML_Tests_TestDataStore_ControlFlow1207_LiteralInteger1209.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1209", fUML_Tests_TestDataStore_ControlFlow1207_LiteralInteger1209);
			fUML_Tests_TestDataStore_Value_1minusInitminus1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)-Init-1", fUML_Tests_TestDataStore_Value_1minusInitminus1);
				fUML_Tests_TestDataStore_Value_1minusInitminus1_Value_1minusInitminus1_result.reset(new OutputPin());
				this->addToElementRepository("Value(1)-Init-1.result", fUML_Tests_TestDataStore_Value_1minusInitminus1_Value_1minusInitminus1_result);
				fUML_Tests_TestDataStore_Value_1minusInitminus1_LiteralInteger1210.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1210", fUML_Tests_TestDataStore_Value_1minusInitminus1_LiteralInteger1210);
			fUML_Tests_TestDataStore_ObjectFlow1211.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1211", fUML_Tests_TestDataStore_ObjectFlow1211);
				fUML_Tests_TestDataStore_ObjectFlow1211_LiteralUnlimitedNatural1212.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1212", fUML_Tests_TestDataStore_ObjectFlow1211_LiteralUnlimitedNatural1212);
			fUML_Tests_TestDataStore_ObjectFlow1213.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1213", fUML_Tests_TestDataStore_ObjectFlow1213);
				fUML_Tests_TestDataStore_ObjectFlow1213_LiteralUnlimitedNatural1214.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1214", fUML_Tests_TestDataStore_ObjectFlow1213_LiteralUnlimitedNatural1214);
			fUML_Tests_TestDataStore_Merge1.reset(new MergeNode());
			this->addToElementRepository("Merge1", fUML_Tests_TestDataStore_Merge1);
			fUML_Tests_TestDataStore_ObjectFlow1215.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1215", fUML_Tests_TestDataStore_ObjectFlow1215);
				fUML_Tests_TestDataStore_ObjectFlow1215_LiteralUnlimitedNatural1216.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1216", fUML_Tests_TestDataStore_ObjectFlow1215_LiteralUnlimitedNatural1216);
		fUML_Tests_ForkMergeData.reset(new Activity());
		this->addToElementRepository("ForkMergeData", fUML_Tests_ForkMergeData);
			fUML_Tests_ForkMergeData_ObjectFlow1217.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1217", fUML_Tests_ForkMergeData_ObjectFlow1217);
				fUML_Tests_ForkMergeData_ObjectFlow1217_LiteralInteger1218.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1218", fUML_Tests_ForkMergeData_ObjectFlow1217_LiteralInteger1218);
			fUML_Tests_ForkMergeData_Action_B.reset(new CallBehaviorAction());
			this->addToElementRepository("Action_B", fUML_Tests_ForkMergeData_Action_B);
				fUML_Tests_ForkMergeData_Action_B_Action_B_output.reset(new OutputPin());
				this->addToElementRepository("Action_B.output", fUML_Tests_ForkMergeData_Action_B_Action_B_output);
					fUML_Tests_ForkMergeData_Action_B_Action_B_output_LiteralInteger1219.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1219", fUML_Tests_ForkMergeData_Action_B_Action_B_output_LiteralInteger1219);
					fUML_Tests_ForkMergeData_Action_B_Action_B_output_LiteralUnlimitedNatural1220.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1220", fUML_Tests_ForkMergeData_Action_B_Action_B_output_LiteralUnlimitedNatural1220);
				fUML_Tests_ForkMergeData_Action_B_Action_B_input.reset(new InputPin());
				this->addToElementRepository("Action_B.input", fUML_Tests_ForkMergeData_Action_B_Action_B_input);
					fUML_Tests_ForkMergeData_Action_B_Action_B_input_LiteralInteger1221.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1221", fUML_Tests_ForkMergeData_Action_B_Action_B_input_LiteralInteger1221);
					fUML_Tests_ForkMergeData_Action_B_Action_B_input_LiteralUnlimitedNatural1222.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1222", fUML_Tests_ForkMergeData_Action_B_Action_B_input_LiteralUnlimitedNatural1222);
			fUML_Tests_ForkMergeData_Action_A.reset(new ValueSpecificationAction());
			this->addToElementRepository("Action_A", fUML_Tests_ForkMergeData_Action_A);
				fUML_Tests_ForkMergeData_Action_A_Action_A_result.reset(new OutputPin());
				this->addToElementRepository("Action_A.result", fUML_Tests_ForkMergeData_Action_A_Action_A_result);
					fUML_Tests_ForkMergeData_Action_A_Action_A_result_LiteralInteger1223.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1223", fUML_Tests_ForkMergeData_Action_A_Action_A_result_LiteralInteger1223);
					fUML_Tests_ForkMergeData_Action_A_Action_A_result_LiteralUnlimitedNatural1224.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1224", fUML_Tests_ForkMergeData_Action_A_Action_A_result_LiteralUnlimitedNatural1224);
				fUML_Tests_ForkMergeData_Action_A_LiteralInteger1225.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1225", fUML_Tests_ForkMergeData_Action_A_LiteralInteger1225);
			fUML_Tests_ForkMergeData_MergeNode.reset(new MergeNode());
			this->addToElementRepository("MergeNode", fUML_Tests_ForkMergeData_MergeNode);
			fUML_Tests_ForkMergeData_InitialNode.reset(new InitialNode());
			this->addToElementRepository("InitialNode", fUML_Tests_ForkMergeData_InitialNode);
			fUML_Tests_ForkMergeData_Parameter_output.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(output)", fUML_Tests_ForkMergeData_Parameter_output);
			fUML_Tests_ForkMergeData_ObjectFlow1226.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1226", fUML_Tests_ForkMergeData_ObjectFlow1226);
				fUML_Tests_ForkMergeData_ObjectFlow1226_LiteralUnlimitedNatural1227.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1227", fUML_Tests_ForkMergeData_ObjectFlow1226_LiteralUnlimitedNatural1227);
			fUML_Tests_ForkMergeData_output.reset(new Parameter());
			this->addToElementRepository("output", fUML_Tests_ForkMergeData_output);
				fUML_Tests_ForkMergeData_output_LiteralUnlimitedNatural1228.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1228", fUML_Tests_ForkMergeData_output_LiteralUnlimitedNatural1228);
				fUML_Tests_ForkMergeData_output_LiteralUnlimitedNatural1229.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1229", fUML_Tests_ForkMergeData_output_LiteralUnlimitedNatural1229);
			fUML_Tests_ForkMergeData_ObjectFlow1230.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1230", fUML_Tests_ForkMergeData_ObjectFlow1230);
				fUML_Tests_ForkMergeData_ObjectFlow1230_LiteralInteger1231.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1231", fUML_Tests_ForkMergeData_ObjectFlow1230_LiteralInteger1231);
			fUML_Tests_ForkMergeData_ControlFlow1232.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1232", fUML_Tests_ForkMergeData_ControlFlow1232);
				fUML_Tests_ForkMergeData_ControlFlow1232_LiteralInteger1233.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1233", fUML_Tests_ForkMergeData_ControlFlow1232_LiteralInteger1233);
			fUML_Tests_ForkMergeData_ForkNode.reset(new ForkNode());
			this->addToElementRepository("ForkNode", fUML_Tests_ForkMergeData_ForkNode);
			fUML_Tests_ForkMergeData_ObjectFlow1234.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1234", fUML_Tests_ForkMergeData_ObjectFlow1234);
				fUML_Tests_ForkMergeData_ObjectFlow1234_LiteralInteger1235.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1235", fUML_Tests_ForkMergeData_ObjectFlow1234_LiteralInteger1235);
			fUML_Tests_ForkMergeData_ObjectFlow1236.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1236", fUML_Tests_ForkMergeData_ObjectFlow1236);
				fUML_Tests_ForkMergeData_ObjectFlow1236_LiteralUnlimitedNatural1237.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1237", fUML_Tests_ForkMergeData_ObjectFlow1236_LiteralUnlimitedNatural1237);
		fUML_Tests_TestAssociation.reset(new Association());
		this->addToElementRepository("TestAssociation", fUML_Tests_TestAssociation);
			fUML_Tests_TestAssociation_end2.reset(new Property());
			this->addToElementRepository("end2", fUML_Tests_TestAssociation_end2);
				fUML_Tests_TestAssociation_end2_LiteralInteger1238.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1238", fUML_Tests_TestAssociation_end2_LiteralInteger1238);
				fUML_Tests_TestAssociation_end2_LiteralUnlimitedNatural1239.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1239", fUML_Tests_TestAssociation_end2_LiteralUnlimitedNatural1239);
			fUML_Tests_TestAssociation_end1.reset(new Property());
			this->addToElementRepository("end1", fUML_Tests_TestAssociation_end1);
				fUML_Tests_TestAssociation_end1_LiteralUnlimitedNatural1240.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1240", fUML_Tests_TestAssociation_end1_LiteralUnlimitedNatural1240);
				fUML_Tests_TestAssociation_end1_LiteralInteger1241.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1241", fUML_Tests_TestAssociation_end1_LiteralInteger1241);
		fUML_Tests_TestCallSender.reset(new Activity());
		this->addToElementRepository("TestCallSender", fUML_Tests_TestCallSender);
			fUML_Tests_TestCallSender_ObjectFlow1242.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1242", fUML_Tests_TestCallSender_ObjectFlow1242);
				fUML_Tests_TestCallSender_ObjectFlow1242_LiteralUnlimitedNatural1243.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1243", fUML_Tests_TestCallSender_ObjectFlow1242_LiteralUnlimitedNatural1243);
			fUML_Tests_TestCallSender_Write_value.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(value)", fUML_Tests_TestCallSender_Write_value);
				fUML_Tests_TestCallSender_Write_value_Write_value_object.reset(new InputPin());
				this->addToElementRepository("Write(value).object", fUML_Tests_TestCallSender_Write_value_Write_value_object);
				fUML_Tests_TestCallSender_Write_value_Write_value_value.reset(new InputPin());
				this->addToElementRepository("Write(value).value", fUML_Tests_TestCallSender_Write_value_Write_value_value);
			fUML_Tests_TestCallSender_Value_0.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(0)", fUML_Tests_TestCallSender_Value_0);
				fUML_Tests_TestCallSender_Value_0_LiteralInteger1244.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1244", fUML_Tests_TestCallSender_Value_0_LiteralInteger1244);
				fUML_Tests_TestCallSender_Value_0_Value_0_result.reset(new OutputPin());
				this->addToElementRepository("Value(0).result", fUML_Tests_TestCallSender_Value_0_Value_0_result);
			fUML_Tests_TestCallSender_value.reset(new Property());
			this->addToElementRepository("value", fUML_Tests_TestCallSender_value);
			fUML_Tests_TestCallSender_Create_TestCallAccepter.reset(new CreateObjectAction());
			this->addToElementRepository("Create(TestCallAccepter)", fUML_Tests_TestCallSender_Create_TestCallAccepter);
				fUML_Tests_TestCallSender_Create_TestCallAccepter_Create_TestCallAccepter_result.reset(new OutputPin());
				this->addToElementRepository("Create(TestCallAccepter).result", fUML_Tests_TestCallSender_Create_TestCallAccepter_Create_TestCallAccepter_result);
			fUML_Tests_TestCallSender_ObjectFlow1245.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1245", fUML_Tests_TestCallSender_ObjectFlow1245);
				fUML_Tests_TestCallSender_ObjectFlow1245_LiteralUnlimitedNatural1246.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1246", fUML_Tests_TestCallSender_ObjectFlow1245_LiteralUnlimitedNatural1246);
			fUML_Tests_TestCallSender_ForkNode.reset(new ForkNode());
			this->addToElementRepository("ForkNode", fUML_Tests_TestCallSender_ForkNode);
			fUML_Tests_TestCallSender_ObjectFlow1247.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1247", fUML_Tests_TestCallSender_ObjectFlow1247);
				fUML_Tests_TestCallSender_ObjectFlow1247_LiteralUnlimitedNatural1248.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1248", fUML_Tests_TestCallSender_ObjectFlow1247_LiteralUnlimitedNatural1248);
			fUML_Tests_TestCallSender_ReadSelf.reset(new ReadSelfAction());
			this->addToElementRepository("ReadSelf", fUML_Tests_TestCallSender_ReadSelf);
				fUML_Tests_TestCallSender_ReadSelf_ReadSelf_result.reset(new OutputPin());
				this->addToElementRepository("ReadSelf.result", fUML_Tests_TestCallSender_ReadSelf_ReadSelf_result);
			fUML_Tests_TestCallSender_Start_TestCallAccepter.reset(new StartObjectBehaviorAction());
			this->addToElementRepository("Start(TestCallAccepter)", fUML_Tests_TestCallSender_Start_TestCallAccepter);
				fUML_Tests_TestCallSender_Start_TestCallAccepter_Start_TestCallAccepter_object.reset(new InputPin());
				this->addToElementRepository("Start(TestCallAccepter).object", fUML_Tests_TestCallSender_Start_TestCallAccepter_Start_TestCallAccepter_object);
			fUML_Tests_TestCallSender_ObjectFlow1249.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1249", fUML_Tests_TestCallSender_ObjectFlow1249);
				fUML_Tests_TestCallSender_ObjectFlow1249_LiteralUnlimitedNatural1250.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1250", fUML_Tests_TestCallSender_ObjectFlow1249_LiteralUnlimitedNatural1250);
			fUML_Tests_TestCallSender_Call_test.reset(new CallOperationAction());
			this->addToElementRepository("Call(test)", fUML_Tests_TestCallSender_Call_test);
				fUML_Tests_TestCallSender_Call_test_Call_test_input.reset(new InputPin());
				this->addToElementRepository("Call(test).input", fUML_Tests_TestCallSender_Call_test_Call_test_input);
				fUML_Tests_TestCallSender_Call_test_Call_test_output.reset(new OutputPin());
				this->addToElementRepository("Call(test).output", fUML_Tests_TestCallSender_Call_test_Call_test_output);
				fUML_Tests_TestCallSender_Call_test_Call_test_target.reset(new InputPin());
				this->addToElementRepository("Call(test).target", fUML_Tests_TestCallSender_Call_test_Call_test_target);
			fUML_Tests_TestCallSender_ActivityFinalNode1251.reset(new ActivityFinalNode());
			this->addToElementRepository("ActivityFinalNode1251", fUML_Tests_TestCallSender_ActivityFinalNode1251);
			fUML_Tests_TestCallSender_ControlFlow1252.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1252", fUML_Tests_TestCallSender_ControlFlow1252);
				fUML_Tests_TestCallSender_ControlFlow1252_LiteralUnlimitedNatural1253.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1253", fUML_Tests_TestCallSender_ControlFlow1252_LiteralUnlimitedNatural1253);
			fUML_Tests_TestCallSender_ControlFlow1254.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1254", fUML_Tests_TestCallSender_ControlFlow1254);
				fUML_Tests_TestCallSender_ControlFlow1254_LiteralUnlimitedNatural1255.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1255", fUML_Tests_TestCallSender_ControlFlow1254_LiteralUnlimitedNatural1255);
			fUML_Tests_TestCallSender_Accept_TestSignal.reset(new AcceptEventAction());
			this->addToElementRepository("Accept(TestSignal)", fUML_Tests_TestCallSender_Accept_TestSignal);
				fUML_Tests_TestCallSender_Accept_TestSignal_Trigger1256.reset(new Trigger());
				this->addToElementRepository("Trigger1256", fUML_Tests_TestCallSender_Accept_TestSignal_Trigger1256);
			fUML_Tests_TestCallSender_ObjectFlow1257.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1257", fUML_Tests_TestCallSender_ObjectFlow1257);
				fUML_Tests_TestCallSender_ObjectFlow1257_LiteralUnlimitedNatural1258.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1258", fUML_Tests_TestCallSender_ObjectFlow1257_LiteralUnlimitedNatural1258);
			fUML_Tests_TestCallSender_ObjectFlow1259.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1259", fUML_Tests_TestCallSender_ObjectFlow1259);
				fUML_Tests_TestCallSender_ObjectFlow1259_LiteralUnlimitedNatural1260.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1260", fUML_Tests_TestCallSender_ObjectFlow1259_LiteralUnlimitedNatural1260);
		fUML_Tests_TestAssociationEndWriterReader.reset(new Activity());
		this->addToElementRepository("TestAssociationEndWriterReader", fUML_Tests_TestAssociationEndWriterReader);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Add(end2)-1", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value_LiteralInteger1261.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1261", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value_LiteralInteger1261);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value_LiteralUnlimitedNatural1262.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1262", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value_LiteralUnlimitedNatural1262);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result_LiteralInteger1263.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1263", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result_LiteralInteger1263);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result_LiteralUnlimitedNatural1264.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1264", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result_LiteralUnlimitedNatural1264);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt.reset(new InputPin());
				this->addToElementRepository("insertAt", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt_LiteralInteger1265.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1265", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt_LiteralInteger1265);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt_LiteralUnlimitedNatural1266.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1266", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt_LiteralUnlimitedNatural1266);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object_LiteralInteger1267.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1267", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object_LiteralInteger1267);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object_LiteralUnlimitedNatural1268.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1268", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object_LiteralUnlimitedNatural1268);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1269.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1269", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1269);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1269_LiteralUnlimitedNatural1270.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1270", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1269_LiteralUnlimitedNatural1270);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1271.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1271", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1271);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1271_LiteralUnlimitedNatural1272.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1272", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1271_LiteralUnlimitedNatural1272);
			fUML_Tests_TestAssociationEndWriterReader_output2Node.reset(new ActivityParameterNode());
			this->addToElementRepository("output2Node", fUML_Tests_TestAssociationEndWriterReader_output2Node);
			fUML_Tests_TestAssociationEndWriterReader_Value_2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2)", fUML_Tests_TestAssociationEndWriterReader_Value_2);
				fUML_Tests_TestAssociationEndWriterReader_Value_2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestAssociationEndWriterReader_Value_2_result);
					fUML_Tests_TestAssociationEndWriterReader_Value_2_result_LiteralUnlimitedNatural1273.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1273", fUML_Tests_TestAssociationEndWriterReader_Value_2_result_LiteralUnlimitedNatural1273);
					fUML_Tests_TestAssociationEndWriterReader_Value_2_result_LiteralInteger1274.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1274", fUML_Tests_TestAssociationEndWriterReader_Value_2_result_LiteralInteger1274);
				fUML_Tests_TestAssociationEndWriterReader_Value_2_LiteralUnlimitedNatural1275.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1275", fUML_Tests_TestAssociationEndWriterReader_Value_2_LiteralUnlimitedNatural1275);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1276.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1276", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1276);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1276_LiteralUnlimitedNatural1277.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1277", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1276_LiteralUnlimitedNatural1277);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1278.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1278", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1278);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1278_LiteralUnlimitedNatural1279.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1279", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1278_LiteralUnlimitedNatural1279);
			fUML_Tests_TestAssociationEndWriterReader_object3Node.reset(new ActivityParameterNode());
			this->addToElementRepository("object3Node", fUML_Tests_TestAssociationEndWriterReader_object3Node);
			fUML_Tests_TestAssociationEndWriterReader_output2.reset(new Parameter());
			this->addToElementRepository("output2", fUML_Tests_TestAssociationEndWriterReader_output2);
				fUML_Tests_TestAssociationEndWriterReader_output2_LiteralUnlimitedNatural1280.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1280", fUML_Tests_TestAssociationEndWriterReader_output2_LiteralUnlimitedNatural1280);
				fUML_Tests_TestAssociationEndWriterReader_output2_LiteralUnlimitedNatural1281.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1281", fUML_Tests_TestAssociationEndWriterReader_output2_LiteralUnlimitedNatural1281);
			fUML_Tests_TestAssociationEndWriterReader_object2.reset(new Parameter());
			this->addToElementRepository("object2", fUML_Tests_TestAssociationEndWriterReader_object2);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1282.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1282", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1282);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1282_LiteralUnlimitedNatural1283.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1283", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1282_LiteralUnlimitedNatural1283);
			fUML_Tests_TestAssociationEndWriterReader_expectedNode.reset(new ActivityParameterNode());
			this->addToElementRepository("expectedNode", fUML_Tests_TestAssociationEndWriterReader_expectedNode);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1284.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1284", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1284);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1284_LiteralUnlimitedNatural1285.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1285", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1284_LiteralUnlimitedNatural1285);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1286.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1286", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1286);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1286_LiteralUnlimitedNatural1287.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1287", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1286_LiteralUnlimitedNatural1287);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1288.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1288", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1288);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1288_LiteralUnlimitedNatural1289.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1289", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1288_LiteralUnlimitedNatural1289);
			fUML_Tests_TestAssociationEndWriterReader_ForkNode1290.reset(new ForkNode());
			this->addToElementRepository("ForkNode1290", fUML_Tests_TestAssociationEndWriterReader_ForkNode1290);
			fUML_Tests_TestAssociationEndWriterReader_ForkNode1291.reset(new ForkNode());
			this->addToElementRepository("ForkNode1291", fUML_Tests_TestAssociationEndWriterReader_ForkNode1291);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1292.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1292", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1292);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1292_LiteralUnlimitedNatural1293.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1293", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1292_LiteralUnlimitedNatural1293);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1294.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1294", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1294);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1294_LiteralUnlimitedNatural1295.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1295", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1294_LiteralUnlimitedNatural1295);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1296.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1296", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1296);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1296_LiteralUnlimitedNatural1297.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1297", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1296_LiteralUnlimitedNatural1297);
			fUML_Tests_TestAssociationEndWriterReader_Value_times.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(*)", fUML_Tests_TestAssociationEndWriterReader_Value_times);
				fUML_Tests_TestAssociationEndWriterReader_Value_times_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestAssociationEndWriterReader_Value_times_result);
				fUML_Tests_TestAssociationEndWriterReader_Value_times_LiteralUnlimitedNatural1298.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1298", fUML_Tests_TestAssociationEndWriterReader_Value_times_LiteralUnlimitedNatural1298);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1299.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1299", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1299);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1299_LiteralUnlimitedNatural1300.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1300", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1299_LiteralUnlimitedNatural1300);
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1.reset(new ReadStructuralFeatureAction());
			this->addToElementRepository("Read(end2)-1", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result);
					fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result_LiteralInteger1301.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1301", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result_LiteralInteger1301);
					fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result_LiteralUnlimitedNatural1302.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1302", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result_LiteralUnlimitedNatural1302);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object);
					fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object_LiteralUnlimitedNatural1303.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1303", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object_LiteralUnlimitedNatural1303);
					fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object_LiteralInteger1304.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1304", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object_LiteralInteger1304);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1305.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1305", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1305);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1305_LiteralUnlimitedNatural1306.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1306", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1305_LiteralUnlimitedNatural1306);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1307.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1307", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1307);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1307_LiteralUnlimitedNatural1308.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1308", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1307_LiteralUnlimitedNatural1308);
			fUML_Tests_TestAssociationEndWriterReader_object1.reset(new Parameter());
			this->addToElementRepository("object1", fUML_Tests_TestAssociationEndWriterReader_object1);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Add(end2)-2", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value_LiteralUnlimitedNatural1309.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1309", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value_LiteralUnlimitedNatural1309);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value_LiteralInteger1310.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1310", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value_LiteralInteger1310);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result_LiteralInteger1311.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1311", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result_LiteralInteger1311);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result_LiteralUnlimitedNatural1312.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1312", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result_LiteralUnlimitedNatural1312);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object_LiteralUnlimitedNatural1313.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1313", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object_LiteralUnlimitedNatural1313);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object_LiteralInteger1314.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1314", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object_LiteralInteger1314);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt.reset(new InputPin());
				this->addToElementRepository("insertAt", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt_LiteralInteger1315.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1315", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt_LiteralInteger1315);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt_LiteralUnlimitedNatural1316.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1316", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt_LiteralUnlimitedNatural1316);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2.reset(new RemoveStructuralFeatureValueAction());
			this->addToElementRepository("RemoveAt(end2)", fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt.reset(new InputPin());
				this->addToElementRepository("removeAt", fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt_LiteralInteger1317.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1317", fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt_LiteralInteger1317);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt_LiteralUnlimitedNatural1318.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1318", fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt_LiteralUnlimitedNatural1318);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result_LiteralInteger1319.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1319", fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result_LiteralInteger1319);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result_LiteralUnlimitedNatural1320.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1320", fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result_LiteralUnlimitedNatural1320);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object_LiteralUnlimitedNatural1321.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1321", fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object_LiteralUnlimitedNatural1321);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object_LiteralInteger1322.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1322", fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object_LiteralInteger1322);
			fUML_Tests_TestAssociationEndWriterReader_ForkNode1323.reset(new ForkNode());
			this->addToElementRepository("ForkNode1323", fUML_Tests_TestAssociationEndWriterReader_ForkNode1323);
			fUML_Tests_TestAssociationEndWriterReader_ForkNode1324.reset(new ForkNode());
			this->addToElementRepository("ForkNode1324", fUML_Tests_TestAssociationEndWriterReader_ForkNode1324);
			fUML_Tests_TestAssociationEndWriterReader_ControlFlow1325.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1325", fUML_Tests_TestAssociationEndWriterReader_ControlFlow1325);
				fUML_Tests_TestAssociationEndWriterReader_ControlFlow1325_LiteralUnlimitedNatural1326.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1326", fUML_Tests_TestAssociationEndWriterReader_ControlFlow1325_LiteralUnlimitedNatural1326);
			fUML_Tests_TestAssociationEndWriterReader_output1.reset(new Parameter());
			this->addToElementRepository("output1", fUML_Tests_TestAssociationEndWriterReader_output1);
				fUML_Tests_TestAssociationEndWriterReader_output1_LiteralUnlimitedNatural1327.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1327", fUML_Tests_TestAssociationEndWriterReader_output1_LiteralUnlimitedNatural1327);
				fUML_Tests_TestAssociationEndWriterReader_output1_LiteralUnlimitedNatural1328.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1328", fUML_Tests_TestAssociationEndWriterReader_output1_LiteralUnlimitedNatural1328);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1329.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1329", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1329);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1329_LiteralUnlimitedNatural1330.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1330", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1329_LiteralUnlimitedNatural1330);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Add(end2)-3", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object_LiteralUnlimitedNatural1331.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1331", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object_LiteralUnlimitedNatural1331);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object_LiteralInteger1332.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1332", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object_LiteralInteger1332);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result_LiteralInteger1333.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1333", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result_LiteralInteger1333);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result_LiteralUnlimitedNatural1334.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1334", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result_LiteralUnlimitedNatural1334);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt.reset(new InputPin());
				this->addToElementRepository("insertAt", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt_LiteralUnlimitedNatural1335.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1335", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt_LiteralUnlimitedNatural1335);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt_LiteralInteger1336.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1336", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt_LiteralInteger1336);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value_LiteralUnlimitedNatural1337.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1337", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value_LiteralUnlimitedNatural1337);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value_LiteralInteger1338.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1338", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value_LiteralInteger1338);
			fUML_Tests_TestAssociationEndWriterReader_output1Node.reset(new ActivityParameterNode());
			this->addToElementRepository("output1Node", fUML_Tests_TestAssociationEndWriterReader_output1Node);
			fUML_Tests_TestAssociationEndWriterReader_object3.reset(new Parameter());
			this->addToElementRepository("object3", fUML_Tests_TestAssociationEndWriterReader_object3);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1339.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1339", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1339);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1339_LiteralUnlimitedNatural1340.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1340", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1339_LiteralUnlimitedNatural1340);
			fUML_Tests_TestAssociationEndWriterReader_expected.reset(new Parameter());
			this->addToElementRepository("expected", fUML_Tests_TestAssociationEndWriterReader_expected);
				fUML_Tests_TestAssociationEndWriterReader_expected_LiteralUnlimitedNatural1341.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1341", fUML_Tests_TestAssociationEndWriterReader_expected_LiteralUnlimitedNatural1341);
				fUML_Tests_TestAssociationEndWriterReader_expected_LiteralInteger1342.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1342", fUML_Tests_TestAssociationEndWriterReader_expected_LiteralInteger1342);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2.reset(new RemoveStructuralFeatureValueAction());
			this->addToElementRepository("RemoveAll(end2)", fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object_LiteralInteger1343.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1343", fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object_LiteralInteger1343);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object_LiteralUnlimitedNatural1344.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1344", fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object_LiteralUnlimitedNatural1344);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result_LiteralInteger1345.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1345", fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result_LiteralInteger1345);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result_LiteralUnlimitedNatural1346.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1346", fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result_LiteralUnlimitedNatural1346);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value_LiteralUnlimitedNatural1347.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1347", fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value_LiteralUnlimitedNatural1347);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value_LiteralInteger1348.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1348", fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value_LiteralInteger1348);
			fUML_Tests_TestAssociationEndWriterReader_object1Node.reset(new ActivityParameterNode());
			this->addToElementRepository("object1Node", fUML_Tests_TestAssociationEndWriterReader_object1Node);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1349.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1349", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1349);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1349_LiteralUnlimitedNatural1350.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1350", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1349_LiteralUnlimitedNatural1350);
			fUML_Tests_TestAssociationEndWriterReader_object2Node.reset(new ActivityParameterNode());
			this->addToElementRepository("object2Node", fUML_Tests_TestAssociationEndWriterReader_object2Node);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1351.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1351", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1351);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1351_LiteralUnlimitedNatural1352.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1352", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1351_LiteralUnlimitedNatural1352);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1353.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1353", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1353);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1353_LiteralUnlimitedNatural1354.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1354", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1353_LiteralUnlimitedNatural1354);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1355.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1355", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1355);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1355_LiteralUnlimitedNatural1356.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1356", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1355_LiteralUnlimitedNatural1356);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1357.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1357", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1357);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1357_LiteralUnlimitedNatural1358.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1358", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1357_LiteralUnlimitedNatural1358);
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2.reset(new ReadStructuralFeatureAction());
			this->addToElementRepository("Read(end2)-2", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object);
					fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object_LiteralInteger1359.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1359", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object_LiteralInteger1359);
					fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object_LiteralUnlimitedNatural1360.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1360", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object_LiteralUnlimitedNatural1360);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result);
					fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result_LiteralInteger1361.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1361", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result_LiteralInteger1361);
					fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result_LiteralUnlimitedNatural1362.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1362", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result_LiteralUnlimitedNatural1362);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1363.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1363", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1363);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1363_LiteralUnlimitedNatural1364.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1364", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1363_LiteralUnlimitedNatural1364);
		fUML_Tests_ForkMerge.reset(new Activity());
		this->addToElementRepository("ForkMerge", fUML_Tests_ForkMerge);
			fUML_Tests_ForkMerge_ControlFlow1365.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1365", fUML_Tests_ForkMerge_ControlFlow1365);
				fUML_Tests_ForkMerge_ControlFlow1365_LiteralInteger1366.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1366", fUML_Tests_ForkMerge_ControlFlow1365_LiteralInteger1366);
			fUML_Tests_ForkMerge_Value_0.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(0)", fUML_Tests_ForkMerge_Value_0);
				fUML_Tests_ForkMerge_Value_0_Value_0_result.reset(new OutputPin());
				this->addToElementRepository("Value(0).result", fUML_Tests_ForkMerge_Value_0_Value_0_result);
					fUML_Tests_ForkMerge_Value_0_Value_0_result_LiteralInteger1367.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1367", fUML_Tests_ForkMerge_Value_0_Value_0_result_LiteralInteger1367);
					fUML_Tests_ForkMerge_Value_0_Value_0_result_LiteralUnlimitedNatural1368.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1368", fUML_Tests_ForkMerge_Value_0_Value_0_result_LiteralUnlimitedNatural1368);
				fUML_Tests_ForkMerge_Value_0_LiteralInteger1369.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1369", fUML_Tests_ForkMerge_Value_0_LiteralInteger1369);
			fUML_Tests_ForkMerge_ControlFlow1370.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1370", fUML_Tests_ForkMerge_ControlFlow1370);
				fUML_Tests_ForkMerge_ControlFlow1370_LiteralInteger1371.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1371", fUML_Tests_ForkMerge_ControlFlow1370_LiteralInteger1371);
			fUML_Tests_ForkMerge_ControlFlow1372.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1372", fUML_Tests_ForkMerge_ControlFlow1372);
				fUML_Tests_ForkMerge_ControlFlow1372_LiteralInteger1373.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1373", fUML_Tests_ForkMerge_ControlFlow1372_LiteralInteger1373);
			fUML_Tests_ForkMerge_ControlFlow1374.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1374", fUML_Tests_ForkMerge_ControlFlow1374);
				fUML_Tests_ForkMerge_ControlFlow1374_LiteralInteger1375.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1375", fUML_Tests_ForkMerge_ControlFlow1374_LiteralInteger1375);
			fUML_Tests_ForkMerge_InitialNode.reset(new InitialNode());
			this->addToElementRepository("InitialNode", fUML_Tests_ForkMerge_InitialNode);
			fUML_Tests_ForkMerge_ObjectFlow1376.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1376", fUML_Tests_ForkMerge_ObjectFlow1376);
				fUML_Tests_ForkMerge_ObjectFlow1376_LiteralInteger1377.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1377", fUML_Tests_ForkMerge_ObjectFlow1376_LiteralInteger1377);
			fUML_Tests_ForkMerge_MergeNode.reset(new MergeNode());
			this->addToElementRepository("MergeNode", fUML_Tests_ForkMerge_MergeNode);
			fUML_Tests_ForkMerge_output.reset(new Parameter());
			this->addToElementRepository("output", fUML_Tests_ForkMerge_output);
				fUML_Tests_ForkMerge_output_LiteralUnlimitedNatural1378.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1378", fUML_Tests_ForkMerge_output_LiteralUnlimitedNatural1378);
				fUML_Tests_ForkMerge_output_LiteralUnlimitedNatural1379.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1379", fUML_Tests_ForkMerge_output_LiteralUnlimitedNatural1379);
			fUML_Tests_ForkMerge_OutputNode.reset(new ActivityParameterNode());
			this->addToElementRepository("OutputNode", fUML_Tests_ForkMerge_OutputNode);
			fUML_Tests_ForkMerge_ForkNode.reset(new ForkNode());
			this->addToElementRepository("ForkNode", fUML_Tests_ForkMerge_ForkNode);
		fUML_Tests_HelloWorld.reset(new Activity());
		this->addToElementRepository("HelloWorld", fUML_Tests_HelloWorld);
			fUML_Tests_HelloWorld_Value_Hello_World_.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(\"Hello World!\")", fUML_Tests_HelloWorld_Value_Hello_World_);
				fUML_Tests_HelloWorld_Value_Hello_World__Value_result.reset(new OutputPin());
				this->addToElementRepository("Value.result", fUML_Tests_HelloWorld_Value_Hello_World__Value_result);
				fUML_Tests_HelloWorld_Value_Hello_World__LiteralString1380.reset(new LiteralString());
				this->addToElementRepository("LiteralString1380", fUML_Tests_HelloWorld_Value_Hello_World__LiteralString1380);
			fUML_Tests_HelloWorld_WriteLine.reset(new CallBehaviorAction());
			this->addToElementRepository("WriteLine", fUML_Tests_HelloWorld_WriteLine);
				fUML_Tests_HelloWorld_WriteLine_WriteLine_value.reset(new InputPin());
				this->addToElementRepository("WriteLine.value", fUML_Tests_HelloWorld_WriteLine_WriteLine_value);
				fUML_Tests_HelloWorld_WriteLine_WriteLine_errorStatus.reset(new OutputPin());
				this->addToElementRepository("WriteLine.errorStatus", fUML_Tests_HelloWorld_WriteLine_WriteLine_errorStatus);
			fUML_Tests_HelloWorld_ObjectFlow1381.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1381", fUML_Tests_HelloWorld_ObjectFlow1381);
				fUML_Tests_HelloWorld_ObjectFlow1381_LiteralInteger1382.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1382", fUML_Tests_HelloWorld_ObjectFlow1381_LiteralInteger1382);
		fUML_Tests_TestRealComparisonFunctions.reset(new Activity());
		this->addToElementRepository("TestRealComparisonFunctions", fUML_Tests_TestRealComparisonFunctions);
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1383.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1383", fUML_Tests_TestRealComparisonFunctions_ControlFlow1383);
				fUML_Tests_TestRealComparisonFunctions_ControlFlow1383_LiteralInteger1384.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1384", fUML_Tests_TestRealComparisonFunctions_ControlFlow1383_LiteralInteger1384);
			fUML_Tests_TestRealComparisonFunctions_Fork_3_0.reset(new ForkNode());
			this->addToElementRepository("Fork(3.0)", fUML_Tests_TestRealComparisonFunctions_Fork_3_0);
			fUML_Tests_TestRealComparisonFunctions_GTResult.reset(new Parameter());
			this->addToElementRepository("GTResult", fUML_Tests_TestRealComparisonFunctions_GTResult);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1385.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1385", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1385);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1385_LiteralInteger1386.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1386", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1385_LiteralInteger1386);
			fUML_Tests_TestRealComparisonFunctions_Call_LE.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(LE)", fUML_Tests_TestRealComparisonFunctions_Call_LE);
				fUML_Tests_TestRealComparisonFunctions_Call_LE_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestRealComparisonFunctions_Call_LE_x);
					fUML_Tests_TestRealComparisonFunctions_Call_LE_x_LiteralInteger1387.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1387", fUML_Tests_TestRealComparisonFunctions_Call_LE_x_LiteralInteger1387);
					fUML_Tests_TestRealComparisonFunctions_Call_LE_x_LiteralUnlimitedNatural1388.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1388", fUML_Tests_TestRealComparisonFunctions_Call_LE_x_LiteralUnlimitedNatural1388);
				fUML_Tests_TestRealComparisonFunctions_Call_LE_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestRealComparisonFunctions_Call_LE_result);
					fUML_Tests_TestRealComparisonFunctions_Call_LE_result_LiteralInteger1389.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1389", fUML_Tests_TestRealComparisonFunctions_Call_LE_result_LiteralInteger1389);
					fUML_Tests_TestRealComparisonFunctions_Call_LE_result_LiteralUnlimitedNatural1390.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1390", fUML_Tests_TestRealComparisonFunctions_Call_LE_result_LiteralUnlimitedNatural1390);
				fUML_Tests_TestRealComparisonFunctions_Call_LE_y.reset(new InputPin());
				this->addToElementRepository("y", fUML_Tests_TestRealComparisonFunctions_Call_LE_y);
					fUML_Tests_TestRealComparisonFunctions_Call_LE_y_LiteralUnlimitedNatural1391.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1391", fUML_Tests_TestRealComparisonFunctions_Call_LE_y_LiteralUnlimitedNatural1391);
					fUML_Tests_TestRealComparisonFunctions_Call_LE_y_LiteralInteger1392.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1392", fUML_Tests_TestRealComparisonFunctions_Call_LE_y_LiteralInteger1392);
			fUML_Tests_TestRealComparisonFunctions_Fork_2_0.reset(new ForkNode());
			this->addToElementRepository("Fork(2.0)", fUML_Tests_TestRealComparisonFunctions_Fork_2_0);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1393.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1393", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1393);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1393_LiteralInteger1394.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1394", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1393_LiteralInteger1394);
			fUML_Tests_TestRealComparisonFunctions_Param_GEResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(GEResult)", fUML_Tests_TestRealComparisonFunctions_Param_GEResult);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1395.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1395", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1395);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1395_LiteralInteger1396.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1396", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1395_LiteralInteger1396);
			fUML_Tests_TestRealComparisonFunctions_Value_3_0.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(3.0)", fUML_Tests_TestRealComparisonFunctions_Value_3_0);
				fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result.reset(new OutputPin());
				this->addToElementRepository("Value(3.0).result", fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result);
					fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result_LiteralUnlimitedNatural1397.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1397", fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result_LiteralUnlimitedNatural1397);
					fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result_LiteralInteger1398.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1398", fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result_LiteralInteger1398);
				fUML_Tests_TestRealComparisonFunctions_Value_3_0_LiteralReal1399.reset(new LiteralReal());
				this->addToElementRepository("LiteralReal1399", fUML_Tests_TestRealComparisonFunctions_Value_3_0_LiteralReal1399);
			fUML_Tests_TestRealComparisonFunctions_LEResult.reset(new Parameter());
			this->addToElementRepository("LEResult", fUML_Tests_TestRealComparisonFunctions_LEResult);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1400.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1400", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1400);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1400_LiteralInteger1401.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1401", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1400_LiteralInteger1401);
			fUML_Tests_TestRealComparisonFunctions_Call_GT.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(GT)", fUML_Tests_TestRealComparisonFunctions_Call_GT);
				fUML_Tests_TestRealComparisonFunctions_Call_GT_y.reset(new InputPin());
				this->addToElementRepository("y", fUML_Tests_TestRealComparisonFunctions_Call_GT_y);
					fUML_Tests_TestRealComparisonFunctions_Call_GT_y_LiteralInteger1402.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1402", fUML_Tests_TestRealComparisonFunctions_Call_GT_y_LiteralInteger1402);
					fUML_Tests_TestRealComparisonFunctions_Call_GT_y_LiteralUnlimitedNatural1403.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1403", fUML_Tests_TestRealComparisonFunctions_Call_GT_y_LiteralUnlimitedNatural1403);
				fUML_Tests_TestRealComparisonFunctions_Call_GT_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestRealComparisonFunctions_Call_GT_result);
					fUML_Tests_TestRealComparisonFunctions_Call_GT_result_LiteralInteger1404.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1404", fUML_Tests_TestRealComparisonFunctions_Call_GT_result_LiteralInteger1404);
					fUML_Tests_TestRealComparisonFunctions_Call_GT_result_LiteralUnlimitedNatural1405.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1405", fUML_Tests_TestRealComparisonFunctions_Call_GT_result_LiteralUnlimitedNatural1405);
				fUML_Tests_TestRealComparisonFunctions_Call_GT_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestRealComparisonFunctions_Call_GT_x);
					fUML_Tests_TestRealComparisonFunctions_Call_GT_x_LiteralUnlimitedNatural1406.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1406", fUML_Tests_TestRealComparisonFunctions_Call_GT_x_LiteralUnlimitedNatural1406);
					fUML_Tests_TestRealComparisonFunctions_Call_GT_x_LiteralInteger1407.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1407", fUML_Tests_TestRealComparisonFunctions_Call_GT_x_LiteralInteger1407);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1408.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1408", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1408);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1408_LiteralInteger1409.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1409", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1408_LiteralInteger1409);
			fUML_Tests_TestRealComparisonFunctions_LTResult.reset(new Parameter());
			this->addToElementRepository("LTResult", fUML_Tests_TestRealComparisonFunctions_LTResult);
			fUML_Tests_TestRealComparisonFunctions_Call_GE.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(GE)", fUML_Tests_TestRealComparisonFunctions_Call_GE);
				fUML_Tests_TestRealComparisonFunctions_Call_GE_y.reset(new InputPin());
				this->addToElementRepository("y", fUML_Tests_TestRealComparisonFunctions_Call_GE_y);
					fUML_Tests_TestRealComparisonFunctions_Call_GE_y_LiteralInteger1410.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1410", fUML_Tests_TestRealComparisonFunctions_Call_GE_y_LiteralInteger1410);
					fUML_Tests_TestRealComparisonFunctions_Call_GE_y_LiteralUnlimitedNatural1411.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1411", fUML_Tests_TestRealComparisonFunctions_Call_GE_y_LiteralUnlimitedNatural1411);
				fUML_Tests_TestRealComparisonFunctions_Call_GE_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestRealComparisonFunctions_Call_GE_x);
					fUML_Tests_TestRealComparisonFunctions_Call_GE_x_LiteralInteger1412.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1412", fUML_Tests_TestRealComparisonFunctions_Call_GE_x_LiteralInteger1412);
					fUML_Tests_TestRealComparisonFunctions_Call_GE_x_LiteralUnlimitedNatural1413.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1413", fUML_Tests_TestRealComparisonFunctions_Call_GE_x_LiteralUnlimitedNatural1413);
				fUML_Tests_TestRealComparisonFunctions_Call_GE_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestRealComparisonFunctions_Call_GE_result);
					fUML_Tests_TestRealComparisonFunctions_Call_GE_result_LiteralInteger1414.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1414", fUML_Tests_TestRealComparisonFunctions_Call_GE_result_LiteralInteger1414);
					fUML_Tests_TestRealComparisonFunctions_Call_GE_result_LiteralUnlimitedNatural1415.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1415", fUML_Tests_TestRealComparisonFunctions_Call_GE_result_LiteralUnlimitedNatural1415);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1416.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1416", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1416);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1416_LiteralInteger1417.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1417", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1416_LiteralInteger1417);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1418.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1418", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1418);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1418_LiteralInteger1419.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1419", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1418_LiteralInteger1419);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1420.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1420", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1420);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1420_LiteralInteger1421.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1421", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1420_LiteralInteger1421);
			fUML_Tests_TestRealComparisonFunctions_Call_LT.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(LT)", fUML_Tests_TestRealComparisonFunctions_Call_LT);
				fUML_Tests_TestRealComparisonFunctions_Call_LT_y.reset(new InputPin());
				this->addToElementRepository("y", fUML_Tests_TestRealComparisonFunctions_Call_LT_y);
					fUML_Tests_TestRealComparisonFunctions_Call_LT_y_LiteralUnlimitedNatural1422.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1422", fUML_Tests_TestRealComparisonFunctions_Call_LT_y_LiteralUnlimitedNatural1422);
					fUML_Tests_TestRealComparisonFunctions_Call_LT_y_LiteralInteger1423.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1423", fUML_Tests_TestRealComparisonFunctions_Call_LT_y_LiteralInteger1423);
				fUML_Tests_TestRealComparisonFunctions_Call_LT_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestRealComparisonFunctions_Call_LT_result);
					fUML_Tests_TestRealComparisonFunctions_Call_LT_result_LiteralInteger1424.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1424", fUML_Tests_TestRealComparisonFunctions_Call_LT_result_LiteralInteger1424);
					fUML_Tests_TestRealComparisonFunctions_Call_LT_result_LiteralUnlimitedNatural1425.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1425", fUML_Tests_TestRealComparisonFunctions_Call_LT_result_LiteralUnlimitedNatural1425);
				fUML_Tests_TestRealComparisonFunctions_Call_LT_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestRealComparisonFunctions_Call_LT_x);
					fUML_Tests_TestRealComparisonFunctions_Call_LT_x_LiteralUnlimitedNatural1426.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1426", fUML_Tests_TestRealComparisonFunctions_Call_LT_x_LiteralUnlimitedNatural1426);
					fUML_Tests_TestRealComparisonFunctions_Call_LT_x_LiteralInteger1427.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1427", fUML_Tests_TestRealComparisonFunctions_Call_LT_x_LiteralInteger1427);
			fUML_Tests_TestRealComparisonFunctions_Param_LEResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(LEResult)", fUML_Tests_TestRealComparisonFunctions_Param_LEResult);
			fUML_Tests_TestRealComparisonFunctions_Param_GTResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(GTResult)", fUML_Tests_TestRealComparisonFunctions_Param_GTResult);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1428.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1428", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1428);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1428_LiteralInteger1429.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1429", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1428_LiteralInteger1429);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1430.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1430", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1430);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1430_LiteralInteger1431.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1431", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1430_LiteralInteger1431);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1432.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1432", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1432);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1432_LiteralInteger1433.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1433", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1432_LiteralInteger1433);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1434.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1434", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1434);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1434_LiteralInteger1435.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1435", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1434_LiteralInteger1435);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1436.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1436", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1436);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1436_LiteralInteger1437.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1437", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1436_LiteralInteger1437);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1438.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1438", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1438);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1438_LiteralInteger1439.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1439", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1438_LiteralInteger1439);
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1440.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1440", fUML_Tests_TestRealComparisonFunctions_ControlFlow1440);
				fUML_Tests_TestRealComparisonFunctions_ControlFlow1440_LiteralInteger1441.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1441", fUML_Tests_TestRealComparisonFunctions_ControlFlow1440_LiteralInteger1441);
			fUML_Tests_TestRealComparisonFunctions_Value_2_0.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2.0)", fUML_Tests_TestRealComparisonFunctions_Value_2_0);
				fUML_Tests_TestRealComparisonFunctions_Value_2_0_LiteralReal1442.reset(new LiteralReal());
				this->addToElementRepository("LiteralReal1442", fUML_Tests_TestRealComparisonFunctions_Value_2_0_LiteralReal1442);
				fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result.reset(new OutputPin());
				this->addToElementRepository("Value(2.0).result", fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result);
					fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result_LiteralInteger1443.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1443", fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result_LiteralInteger1443);
					fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result_LiteralUnlimitedNatural1444.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1444", fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result_LiteralUnlimitedNatural1444);
			fUML_Tests_TestRealComparisonFunctions_GEResult.reset(new Parameter());
			this->addToElementRepository("GEResult", fUML_Tests_TestRealComparisonFunctions_GEResult);
			fUML_Tests_TestRealComparisonFunctions_Param_LTResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(LTResult)", fUML_Tests_TestRealComparisonFunctions_Param_LTResult);
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1445.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1445", fUML_Tests_TestRealComparisonFunctions_ControlFlow1445);
				fUML_Tests_TestRealComparisonFunctions_ControlFlow1445_LiteralInteger1446.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1446", fUML_Tests_TestRealComparisonFunctions_ControlFlow1445_LiteralInteger1446);
		fUML_Tests_TestClassAttributeWriter.reset(new Activity());
		this->addToElementRepository("TestClassAttributeWriter", fUML_Tests_TestClassAttributeWriter);
			fUML_Tests_TestClassAttributeWriter_Parameter_objectIn.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(objectIn)", fUML_Tests_TestClassAttributeWriter_Parameter_objectIn);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow1447.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1447", fUML_Tests_TestClassAttributeWriter_ObjectFlow1447);
				fUML_Tests_TestClassAttributeWriter_ObjectFlow1447_LiteralUnlimitedNatural1448.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1448", fUML_Tests_TestClassAttributeWriter_ObjectFlow1447_LiteralUnlimitedNatural1448);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow1449.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1449", fUML_Tests_TestClassAttributeWriter_ObjectFlow1449);
				fUML_Tests_TestClassAttributeWriter_ObjectFlow1449_LiteralInteger1450.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1450", fUML_Tests_TestClassAttributeWriter_ObjectFlow1449_LiteralInteger1450);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow1451.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1451", fUML_Tests_TestClassAttributeWriter_ObjectFlow1451);
				fUML_Tests_TestClassAttributeWriter_ObjectFlow1451_LiteralInteger1452.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1452", fUML_Tests_TestClassAttributeWriter_ObjectFlow1451_LiteralInteger1452);
			fUML_Tests_TestClassAttributeWriter_objectIn.reset(new Parameter());
			this->addToElementRepository("objectIn", fUML_Tests_TestClassAttributeWriter_objectIn);
				fUML_Tests_TestClassAttributeWriter_objectIn_LiteralUnlimitedNatural1453.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1453", fUML_Tests_TestClassAttributeWriter_objectIn_LiteralUnlimitedNatural1453);
				fUML_Tests_TestClassAttributeWriter_objectIn_LiteralInteger1454.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1454", fUML_Tests_TestClassAttributeWriter_objectIn_LiteralInteger1454);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow1455.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1455", fUML_Tests_TestClassAttributeWriter_ObjectFlow1455);
				fUML_Tests_TestClassAttributeWriter_ObjectFlow1455_LiteralInteger1456.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1456", fUML_Tests_TestClassAttributeWriter_ObjectFlow1455_LiteralInteger1456);
			fUML_Tests_TestClassAttributeWriter_value.reset(new Parameter());
			this->addToElementRepository("value", fUML_Tests_TestClassAttributeWriter_value);
				fUML_Tests_TestClassAttributeWriter_value_LiteralInteger1457.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1457", fUML_Tests_TestClassAttributeWriter_value_LiteralInteger1457);
				fUML_Tests_TestClassAttributeWriter_value_LiteralUnlimitedNatural1458.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1458", fUML_Tests_TestClassAttributeWriter_value_LiteralUnlimitedNatural1458);
			fUML_Tests_TestClassAttributeWriter_Parameter_value.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(value)", fUML_Tests_TestClassAttributeWriter_Parameter_value);
			fUML_Tests_TestClassAttributeWriter_Value_times.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(*)", fUML_Tests_TestClassAttributeWriter_Value_times);
				fUML_Tests_TestClassAttributeWriter_Value_times_LiteralUnlimitedNatural1459.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1459", fUML_Tests_TestClassAttributeWriter_Value_times_LiteralUnlimitedNatural1459);
				fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result.reset(new OutputPin());
				this->addToElementRepository("Value(*).result", fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result);
					fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result_LiteralUnlimitedNatural1460.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1460", fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result_LiteralUnlimitedNatural1460);
					fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result_LiteralInteger1461.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1461", fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result_LiteralInteger1461);
			fUML_Tests_TestClassAttributeWriter_Parameter_objectOut.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(objectOut)", fUML_Tests_TestClassAttributeWriter_Parameter_objectOut);
			fUML_Tests_TestClassAttributeWriter_Add_y.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Add(y)", fUML_Tests_TestClassAttributeWriter_Add_y);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result.reset(new OutputPin());
				this->addToElementRepository("Add(y).result", fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result);
					fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result_LiteralUnlimitedNatural1462.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1462", fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result_LiteralUnlimitedNatural1462);
					fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result_LiteralInteger1463.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1463", fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result_LiteralInteger1463);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object.reset(new InputPin());
				this->addToElementRepository("Add(x).object", fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object);
					fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object_LiteralInteger1464.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1464", fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object_LiteralInteger1464);
					fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object_LiteralUnlimitedNatural1465.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1465", fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object_LiteralUnlimitedNatural1465);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value.reset(new InputPin());
				this->addToElementRepository("Add(y).value", fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value);
					fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value_LiteralUnlimitedNatural1466.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1466", fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value_LiteralUnlimitedNatural1466);
					fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value_LiteralInteger1467.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1467", fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value_LiteralInteger1467);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt.reset(new InputPin());
				this->addToElementRepository("Add(y).insertAt", fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt);
					fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt_LiteralInteger1468.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1468", fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt_LiteralInteger1468);
					fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt_LiteralUnlimitedNatural1469.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1469", fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt_LiteralUnlimitedNatural1469);
			fUML_Tests_TestClassAttributeWriter_objectOut.reset(new Parameter());
			this->addToElementRepository("objectOut", fUML_Tests_TestClassAttributeWriter_objectOut);
				fUML_Tests_TestClassAttributeWriter_objectOut_LiteralUnlimitedNatural1470.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1470", fUML_Tests_TestClassAttributeWriter_objectOut_LiteralUnlimitedNatural1470);
				fUML_Tests_TestClassAttributeWriter_objectOut_LiteralInteger1471.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1471", fUML_Tests_TestClassAttributeWriter_objectOut_LiteralInteger1471);
		fUML_Tests_DecisionJoin.reset(new Activity());
		this->addToElementRepository("DecisionJoin", fUML_Tests_DecisionJoin);
			fUML_Tests_DecisionJoin_ControlFlow1472.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1472", fUML_Tests_DecisionJoin_ControlFlow1472);
				fUML_Tests_DecisionJoin_ControlFlow1472_LiteralInteger1473.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1473", fUML_Tests_DecisionJoin_ControlFlow1472_LiteralInteger1473);
			fUML_Tests_DecisionJoin_ObjectFlow1474.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1474", fUML_Tests_DecisionJoin_ObjectFlow1474);
				fUML_Tests_DecisionJoin_ObjectFlow1474_LiteralInteger1475.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1475", fUML_Tests_DecisionJoin_ObjectFlow1474_LiteralInteger1475);
			fUML_Tests_DecisionJoin_OutputNode.reset(new ActivityParameterNode());
			this->addToElementRepository("OutputNode", fUML_Tests_DecisionJoin_OutputNode);
			fUML_Tests_DecisionJoin_ObjectFlow1476.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1476", fUML_Tests_DecisionJoin_ObjectFlow1476);
				fUML_Tests_DecisionJoin_ObjectFlow1476_LiteralInteger1477.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1477", fUML_Tests_DecisionJoin_ObjectFlow1476_LiteralInteger1477);
				fUML_Tests_DecisionJoin_ObjectFlow1476_LiteralUnlimitedNatural1478.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1478", fUML_Tests_DecisionJoin_ObjectFlow1476_LiteralUnlimitedNatural1478);
			fUML_Tests_DecisionJoin_ObjectFlow1479.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1479", fUML_Tests_DecisionJoin_ObjectFlow1479);
				fUML_Tests_DecisionJoin_ObjectFlow1479_LiteralInteger1480.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1480", fUML_Tests_DecisionJoin_ObjectFlow1479_LiteralInteger1480);
			fUML_Tests_DecisionJoin_Action_B.reset(new CallBehaviorAction());
			this->addToElementRepository("Action_B", fUML_Tests_DecisionJoin_Action_B);
				fUML_Tests_DecisionJoin_Action_B_Action_B_input.reset(new InputPin());
				this->addToElementRepository("Action_B.input", fUML_Tests_DecisionJoin_Action_B_Action_B_input);
					fUML_Tests_DecisionJoin_Action_B_Action_B_input_LiteralUnlimitedNatural1481.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1481", fUML_Tests_DecisionJoin_Action_B_Action_B_input_LiteralUnlimitedNatural1481);
					fUML_Tests_DecisionJoin_Action_B_Action_B_input_LiteralInteger1482.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1482", fUML_Tests_DecisionJoin_Action_B_Action_B_input_LiteralInteger1482);
				fUML_Tests_DecisionJoin_Action_B_Action_C_output.reset(new OutputPin());
				this->addToElementRepository("Action_C.output", fUML_Tests_DecisionJoin_Action_B_Action_C_output);
					fUML_Tests_DecisionJoin_Action_B_Action_C_output_LiteralInteger1483.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1483", fUML_Tests_DecisionJoin_Action_B_Action_C_output_LiteralInteger1483);
					fUML_Tests_DecisionJoin_Action_B_Action_C_output_LiteralUnlimitedNatural1484.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1484", fUML_Tests_DecisionJoin_Action_B_Action_C_output_LiteralUnlimitedNatural1484);
			fUML_Tests_DecisionJoin_JoinNode.reset(new JoinNode());
			this->addToElementRepository("JoinNode", fUML_Tests_DecisionJoin_JoinNode);
			fUML_Tests_DecisionJoin_ObjectFlow1485.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1485", fUML_Tests_DecisionJoin_ObjectFlow1485);
				fUML_Tests_DecisionJoin_ObjectFlow1485_LiteralUnlimitedNatural1486.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1486", fUML_Tests_DecisionJoin_ObjectFlow1485_LiteralUnlimitedNatural1486);
				fUML_Tests_DecisionJoin_ObjectFlow1485_LiteralInteger1487.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1487", fUML_Tests_DecisionJoin_ObjectFlow1485_LiteralInteger1487);
			fUML_Tests_DecisionJoin_Value_1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)", fUML_Tests_DecisionJoin_Value_1);
				fUML_Tests_DecisionJoin_Value_1_LiteralInteger1488.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1488", fUML_Tests_DecisionJoin_Value_1_LiteralInteger1488);
				fUML_Tests_DecisionJoin_Value_1_OutputPin1489.reset(new OutputPin());
				this->addToElementRepository("OutputPin1489", fUML_Tests_DecisionJoin_Value_1_OutputPin1489);
			fUML_Tests_DecisionJoin_Action_A.reset(new CallBehaviorAction());
			this->addToElementRepository("Action_A", fUML_Tests_DecisionJoin_Action_A);
				fUML_Tests_DecisionJoin_Action_A_Action_A_output.reset(new OutputPin());
				this->addToElementRepository("Action_A.output", fUML_Tests_DecisionJoin_Action_A_Action_A_output);
					fUML_Tests_DecisionJoin_Action_A_Action_A_output_LiteralUnlimitedNatural1490.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1490", fUML_Tests_DecisionJoin_Action_A_Action_A_output_LiteralUnlimitedNatural1490);
					fUML_Tests_DecisionJoin_Action_A_Action_A_output_LiteralInteger1491.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1491", fUML_Tests_DecisionJoin_Action_A_Action_A_output_LiteralInteger1491);
				fUML_Tests_DecisionJoin_Action_A_Action_A_input.reset(new InputPin());
				this->addToElementRepository("Action_A.input", fUML_Tests_DecisionJoin_Action_A_Action_A_input);
					fUML_Tests_DecisionJoin_Action_A_Action_A_input_LiteralInteger1492.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1492", fUML_Tests_DecisionJoin_Action_A_Action_A_input_LiteralInteger1492);
					fUML_Tests_DecisionJoin_Action_A_Action_A_input_LiteralUnlimitedNatural1493.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1493", fUML_Tests_DecisionJoin_Action_A_Action_A_input_LiteralUnlimitedNatural1493);
			fUML_Tests_DecisionJoin_DecisionNode.reset(new DecisionNode());
			this->addToElementRepository("DecisionNode", fUML_Tests_DecisionJoin_DecisionNode);
			fUML_Tests_DecisionJoin_ObjectFlow1494.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1494", fUML_Tests_DecisionJoin_ObjectFlow1494);
				fUML_Tests_DecisionJoin_ObjectFlow1494_LiteralInteger1495.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1495", fUML_Tests_DecisionJoin_ObjectFlow1494_LiteralInteger1495);
			fUML_Tests_DecisionJoin_Value_0.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(0)", fUML_Tests_DecisionJoin_Value_0);
				fUML_Tests_DecisionJoin_Value_0_OutputPin1496.reset(new OutputPin());
				this->addToElementRepository("OutputPin1496", fUML_Tests_DecisionJoin_Value_0_OutputPin1496);
				fUML_Tests_DecisionJoin_Value_0_LiteralInteger1497.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1497", fUML_Tests_DecisionJoin_Value_0_LiteralInteger1497);
			fUML_Tests_DecisionJoin_output.reset(new Parameter());
			this->addToElementRepository("output", fUML_Tests_DecisionJoin_output);
				fUML_Tests_DecisionJoin_output_LiteralUnlimitedNatural1498.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1498", fUML_Tests_DecisionJoin_output_LiteralUnlimitedNatural1498);
				fUML_Tests_DecisionJoin_output_LiteralUnlimitedNatural1499.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1499", fUML_Tests_DecisionJoin_output_LiteralUnlimitedNatural1499);
			fUML_Tests_DecisionJoin_ObjectFlow1500.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1500", fUML_Tests_DecisionJoin_ObjectFlow1500);
				fUML_Tests_DecisionJoin_ObjectFlow1500_LiteralInteger1501.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1501", fUML_Tests_DecisionJoin_ObjectFlow1500_LiteralInteger1501);
			fUML_Tests_DecisionJoin_ObjectFlow1502.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1502", fUML_Tests_DecisionJoin_ObjectFlow1502);
				fUML_Tests_DecisionJoin_ObjectFlow1502_LiteralInteger1503.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1503", fUML_Tests_DecisionJoin_ObjectFlow1502_LiteralInteger1503);
		fUML_Tests_Specific.reset(new Class_());
		this->addToElementRepository("Specific", fUML_Tests_Specific);
			fUML_Tests_Specific_Generalization1504.reset(new Generalization());
			this->addToElementRepository("Generalization1504", fUML_Tests_Specific_Generalization1504);
			fUML_Tests_Specific_x.reset(new Property());
			this->addToElementRepository("x", fUML_Tests_Specific_x);
		fUML_Tests_TestClassUnmarshaller.reset(new Activity());
		this->addToElementRepository("TestClassUnmarshaller", fUML_Tests_TestClassUnmarshaller);
			fUML_Tests_TestClassUnmarshaller_Output_x.reset(new ActivityParameterNode());
			this->addToElementRepository("Output(x)", fUML_Tests_TestClassUnmarshaller_Output_x);
			fUML_Tests_TestClassUnmarshaller_Write_y_1.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(y[1])", fUML_Tests_TestClassUnmarshaller_Write_y_1);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassUnmarshaller_Write_y_1_object);
					fUML_Tests_TestClassUnmarshaller_Write_y_1_object_LiteralUnlimitedNatural1505.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1505", fUML_Tests_TestClassUnmarshaller_Write_y_1_object_LiteralUnlimitedNatural1505);
					fUML_Tests_TestClassUnmarshaller_Write_y_1_object_LiteralInteger1506.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1506", fUML_Tests_TestClassUnmarshaller_Write_y_1_object_LiteralInteger1506);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_insertAt.reset(new InputPin());
				this->addToElementRepository("insertAt", fUML_Tests_TestClassUnmarshaller_Write_y_1_insertAt);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassUnmarshaller_Write_y_1_result);
					fUML_Tests_TestClassUnmarshaller_Write_y_1_result_LiteralInteger1507.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1507", fUML_Tests_TestClassUnmarshaller_Write_y_1_result_LiteralInteger1507);
					fUML_Tests_TestClassUnmarshaller_Write_y_1_result_LiteralUnlimitedNatural1508.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1508", fUML_Tests_TestClassUnmarshaller_Write_y_1_result_LiteralUnlimitedNatural1508);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassUnmarshaller_Write_y_1_value);
					fUML_Tests_TestClassUnmarshaller_Write_y_1_value_LiteralUnlimitedNatural1509.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1509", fUML_Tests_TestClassUnmarshaller_Write_y_1_value_LiteralUnlimitedNatural1509);
					fUML_Tests_TestClassUnmarshaller_Write_y_1_value_LiteralInteger1510.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1510", fUML_Tests_TestClassUnmarshaller_Write_y_1_value_LiteralInteger1510);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1511.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1511", fUML_Tests_TestClassUnmarshaller_ObjectFlow1511);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow1511_LiteralUnlimitedNatural1512.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1512", fUML_Tests_TestClassUnmarshaller_ObjectFlow1511_LiteralUnlimitedNatural1512);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1513.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1513", fUML_Tests_TestClassUnmarshaller_ObjectFlow1513);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow1513_LiteralUnlimitedNatural1514.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1514", fUML_Tests_TestClassUnmarshaller_ObjectFlow1513_LiteralUnlimitedNatural1514);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1515.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1515", fUML_Tests_TestClassUnmarshaller_ObjectFlow1515);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow1515_LiteralUnlimitedNatural1516.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1516", fUML_Tests_TestClassUnmarshaller_ObjectFlow1515_LiteralUnlimitedNatural1516);
			fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass.reset(new UnmarshallAction());
			this->addToElementRepository("Unmarshall(TestClass)", fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x.reset(new OutputPin());
				this->addToElementRepository("result(x)", fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x);
					fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x_LiteralInteger1517.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1517", fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x_LiteralInteger1517);
					fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x_LiteralUnlimitedNatural1518.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1518", fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x_LiteralUnlimitedNatural1518);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object);
					fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object_LiteralUnlimitedNatural1519.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1519", fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object_LiteralUnlimitedNatural1519);
					fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object_LiteralInteger1520.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1520", fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object_LiteralInteger1520);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y.reset(new OutputPin());
				this->addToElementRepository("result(y)", fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y);
					fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y_LiteralInteger1521.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1521", fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y_LiteralInteger1521);
					fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y_LiteralUnlimitedNatural1522.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1522", fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y_LiteralUnlimitedNatural1522);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1523.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1523", fUML_Tests_TestClassUnmarshaller_ObjectFlow1523);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow1523_LiteralUnlimitedNatural1524.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1524", fUML_Tests_TestClassUnmarshaller_ObjectFlow1523_LiteralUnlimitedNatural1524);
			fUML_Tests_TestClassUnmarshaller_Write_x.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(x)", fUML_Tests_TestClassUnmarshaller_Write_x);
				fUML_Tests_TestClassUnmarshaller_Write_x_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassUnmarshaller_Write_x_object);
					fUML_Tests_TestClassUnmarshaller_Write_x_object_LiteralUnlimitedNatural1525.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1525", fUML_Tests_TestClassUnmarshaller_Write_x_object_LiteralUnlimitedNatural1525);
					fUML_Tests_TestClassUnmarshaller_Write_x_object_LiteralInteger1526.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1526", fUML_Tests_TestClassUnmarshaller_Write_x_object_LiteralInteger1526);
				fUML_Tests_TestClassUnmarshaller_Write_x_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassUnmarshaller_Write_x_value);
					fUML_Tests_TestClassUnmarshaller_Write_x_value_LiteralUnlimitedNatural1527.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1527", fUML_Tests_TestClassUnmarshaller_Write_x_value_LiteralUnlimitedNatural1527);
					fUML_Tests_TestClassUnmarshaller_Write_x_value_LiteralInteger1528.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1528", fUML_Tests_TestClassUnmarshaller_Write_x_value_LiteralInteger1528);
				fUML_Tests_TestClassUnmarshaller_Write_x_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassUnmarshaller_Write_x_result);
					fUML_Tests_TestClassUnmarshaller_Write_x_result_LiteralInteger1529.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1529", fUML_Tests_TestClassUnmarshaller_Write_x_result_LiteralInteger1529);
					fUML_Tests_TestClassUnmarshaller_Write_x_result_LiteralUnlimitedNatural1530.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1530", fUML_Tests_TestClassUnmarshaller_Write_x_result_LiteralUnlimitedNatural1530);
			fUML_Tests_TestClassUnmarshaller_Value_0.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(0)", fUML_Tests_TestClassUnmarshaller_Value_0);
				fUML_Tests_TestClassUnmarshaller_Value_0_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassUnmarshaller_Value_0_result);
					fUML_Tests_TestClassUnmarshaller_Value_0_result_LiteralUnlimitedNatural1531.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1531", fUML_Tests_TestClassUnmarshaller_Value_0_result_LiteralUnlimitedNatural1531);
					fUML_Tests_TestClassUnmarshaller_Value_0_result_LiteralInteger1532.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1532", fUML_Tests_TestClassUnmarshaller_Value_0_result_LiteralInteger1532);
				fUML_Tests_TestClassUnmarshaller_Value_0_LiteralInteger1533.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1533", fUML_Tests_TestClassUnmarshaller_Value_0_LiteralInteger1533);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1534.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1534", fUML_Tests_TestClassUnmarshaller_ObjectFlow1534);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow1534_LiteralUnlimitedNatural1535.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1535", fUML_Tests_TestClassUnmarshaller_ObjectFlow1534_LiteralUnlimitedNatural1535);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1536.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1536", fUML_Tests_TestClassUnmarshaller_ObjectFlow1536);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow1536_LiteralUnlimitedNatural1537.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1537", fUML_Tests_TestClassUnmarshaller_ObjectFlow1536_LiteralUnlimitedNatural1537);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1538.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1538", fUML_Tests_TestClassUnmarshaller_ObjectFlow1538);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow1538_LiteralUnlimitedNatural1539.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1539", fUML_Tests_TestClassUnmarshaller_ObjectFlow1538_LiteralUnlimitedNatural1539);
			fUML_Tests_TestClassUnmarshaller_Value_1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)", fUML_Tests_TestClassUnmarshaller_Value_1);
				fUML_Tests_TestClassUnmarshaller_Value_1_LiteralInteger1540.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1540", fUML_Tests_TestClassUnmarshaller_Value_1_LiteralInteger1540);
				fUML_Tests_TestClassUnmarshaller_Value_1_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassUnmarshaller_Value_1_result);
					fUML_Tests_TestClassUnmarshaller_Value_1_result_LiteralInteger1541.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1541", fUML_Tests_TestClassUnmarshaller_Value_1_result_LiteralInteger1541);
					fUML_Tests_TestClassUnmarshaller_Value_1_result_LiteralUnlimitedNatural1542.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1542", fUML_Tests_TestClassUnmarshaller_Value_1_result_LiteralUnlimitedNatural1542);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1543.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1543", fUML_Tests_TestClassUnmarshaller_ObjectFlow1543);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow1543_LiteralUnlimitedNatural1544.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1544", fUML_Tests_TestClassUnmarshaller_ObjectFlow1543_LiteralUnlimitedNatural1544);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1545.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1545", fUML_Tests_TestClassUnmarshaller_ObjectFlow1545);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow1545_LiteralUnlimitedNatural1546.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1546", fUML_Tests_TestClassUnmarshaller_ObjectFlow1545_LiteralUnlimitedNatural1546);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1547.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1547", fUML_Tests_TestClassUnmarshaller_ObjectFlow1547);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow1547_LiteralUnlimitedNatural1548.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1548", fUML_Tests_TestClassUnmarshaller_ObjectFlow1547_LiteralUnlimitedNatural1548);
			fUML_Tests_TestClassUnmarshaller_Write_y_2.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(y[2])", fUML_Tests_TestClassUnmarshaller_Write_y_2);
				fUML_Tests_TestClassUnmarshaller_Write_y_2_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassUnmarshaller_Write_y_2_object);
					fUML_Tests_TestClassUnmarshaller_Write_y_2_object_LiteralInteger1549.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1549", fUML_Tests_TestClassUnmarshaller_Write_y_2_object_LiteralInteger1549);
					fUML_Tests_TestClassUnmarshaller_Write_y_2_object_LiteralUnlimitedNatural1550.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1550", fUML_Tests_TestClassUnmarshaller_Write_y_2_object_LiteralUnlimitedNatural1550);
				fUML_Tests_TestClassUnmarshaller_Write_y_2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassUnmarshaller_Write_y_2_result);
				fUML_Tests_TestClassUnmarshaller_Write_y_2_insertAt.reset(new InputPin());
				this->addToElementRepository("insertAt", fUML_Tests_TestClassUnmarshaller_Write_y_2_insertAt);
				fUML_Tests_TestClassUnmarshaller_Write_y_2_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassUnmarshaller_Write_y_2_value);
					fUML_Tests_TestClassUnmarshaller_Write_y_2_value_LiteralUnlimitedNatural1551.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1551", fUML_Tests_TestClassUnmarshaller_Write_y_2_value_LiteralUnlimitedNatural1551);
					fUML_Tests_TestClassUnmarshaller_Write_y_2_value_LiteralInteger1552.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1552", fUML_Tests_TestClassUnmarshaller_Write_y_2_value_LiteralInteger1552);
			fUML_Tests_TestClassUnmarshaller_ForkNode1553.reset(new ForkNode());
			this->addToElementRepository("ForkNode1553", fUML_Tests_TestClassUnmarshaller_ForkNode1553);
			fUML_Tests_TestClassUnmarshaller_Create_Subclass1.reset(new CreateObjectAction());
			this->addToElementRepository("Create(Subclass1)", fUML_Tests_TestClassUnmarshaller_Create_Subclass1);
				fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result);
					fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result_LiteralInteger1554.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1554", fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result_LiteralInteger1554);
					fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result_LiteralUnlimitedNatural1555.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1555", fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result_LiteralUnlimitedNatural1555);
			fUML_Tests_TestClassUnmarshaller_Write_a.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(a)", fUML_Tests_TestClassUnmarshaller_Write_a);
				fUML_Tests_TestClassUnmarshaller_Write_a_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassUnmarshaller_Write_a_value);
					fUML_Tests_TestClassUnmarshaller_Write_a_value_LiteralInteger1556.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1556", fUML_Tests_TestClassUnmarshaller_Write_a_value_LiteralInteger1556);
					fUML_Tests_TestClassUnmarshaller_Write_a_value_LiteralUnlimitedNatural1557.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1557", fUML_Tests_TestClassUnmarshaller_Write_a_value_LiteralUnlimitedNatural1557);
				fUML_Tests_TestClassUnmarshaller_Write_a_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassUnmarshaller_Write_a_result);
				fUML_Tests_TestClassUnmarshaller_Write_a_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassUnmarshaller_Write_a_object);
					fUML_Tests_TestClassUnmarshaller_Write_a_object_LiteralInteger1558.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1558", fUML_Tests_TestClassUnmarshaller_Write_a_object_LiteralInteger1558);
					fUML_Tests_TestClassUnmarshaller_Write_a_object_LiteralUnlimitedNatural1559.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1559", fUML_Tests_TestClassUnmarshaller_Write_a_object_LiteralUnlimitedNatural1559);
			fUML_Tests_TestClassUnmarshaller_x.reset(new Parameter());
			this->addToElementRepository("x", fUML_Tests_TestClassUnmarshaller_x);
				fUML_Tests_TestClassUnmarshaller_x_LiteralInteger1560.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1560", fUML_Tests_TestClassUnmarshaller_x_LiteralInteger1560);
				fUML_Tests_TestClassUnmarshaller_x_LiteralUnlimitedNatural1561.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1561", fUML_Tests_TestClassUnmarshaller_x_LiteralUnlimitedNatural1561);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1562.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1562", fUML_Tests_TestClassUnmarshaller_ObjectFlow1562);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow1562_LiteralUnlimitedNatural1563.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1563", fUML_Tests_TestClassUnmarshaller_ObjectFlow1562_LiteralUnlimitedNatural1563);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1564.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1564", fUML_Tests_TestClassUnmarshaller_ObjectFlow1564);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow1564_LiteralUnlimitedNatural1565.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1565", fUML_Tests_TestClassUnmarshaller_ObjectFlow1564_LiteralUnlimitedNatural1565);
			fUML_Tests_TestClassUnmarshaller_Value_true.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(true)", fUML_Tests_TestClassUnmarshaller_Value_true);
				fUML_Tests_TestClassUnmarshaller_Value_true_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassUnmarshaller_Value_true_result);
					fUML_Tests_TestClassUnmarshaller_Value_true_result_LiteralInteger1566.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1566", fUML_Tests_TestClassUnmarshaller_Value_true_result_LiteralInteger1566);
					fUML_Tests_TestClassUnmarshaller_Value_true_result_LiteralUnlimitedNatural1567.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1567", fUML_Tests_TestClassUnmarshaller_Value_true_result_LiteralUnlimitedNatural1567);
				fUML_Tests_TestClassUnmarshaller_Value_true_LiteralBoolean1568.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1568", fUML_Tests_TestClassUnmarshaller_Value_true_LiteralBoolean1568);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1569.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1569", fUML_Tests_TestClassUnmarshaller_ObjectFlow1569);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow1569_LiteralUnlimitedNatural1570.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1570", fUML_Tests_TestClassUnmarshaller_ObjectFlow1569_LiteralUnlimitedNatural1570);
			fUML_Tests_TestClassUnmarshaller_Output_y.reset(new ActivityParameterNode());
			this->addToElementRepository("Output(y)", fUML_Tests_TestClassUnmarshaller_Output_y);
			fUML_Tests_TestClassUnmarshaller_Value_2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2)", fUML_Tests_TestClassUnmarshaller_Value_2);
				fUML_Tests_TestClassUnmarshaller_Value_2_LiteralInteger1571.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1571", fUML_Tests_TestClassUnmarshaller_Value_2_LiteralInteger1571);
				fUML_Tests_TestClassUnmarshaller_Value_2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassUnmarshaller_Value_2_result);
					fUML_Tests_TestClassUnmarshaller_Value_2_result_LiteralUnlimitedNatural1572.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1572", fUML_Tests_TestClassUnmarshaller_Value_2_result_LiteralUnlimitedNatural1572);
					fUML_Tests_TestClassUnmarshaller_Value_2_result_LiteralInteger1573.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1573", fUML_Tests_TestClassUnmarshaller_Value_2_result_LiteralInteger1573);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1574.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1574", fUML_Tests_TestClassUnmarshaller_ObjectFlow1574);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow1574_LiteralUnlimitedNatural1575.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1575", fUML_Tests_TestClassUnmarshaller_ObjectFlow1574_LiteralUnlimitedNatural1575);
			fUML_Tests_TestClassUnmarshaller_Value_times.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(*)", fUML_Tests_TestClassUnmarshaller_Value_times);
				fUML_Tests_TestClassUnmarshaller_Value_times_LiteralUnlimitedNatural1576.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1576", fUML_Tests_TestClassUnmarshaller_Value_times_LiteralUnlimitedNatural1576);
				fUML_Tests_TestClassUnmarshaller_Value_times_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassUnmarshaller_Value_times_result);
			fUML_Tests_TestClassUnmarshaller_y.reset(new Parameter());
			this->addToElementRepository("y", fUML_Tests_TestClassUnmarshaller_y);
				fUML_Tests_TestClassUnmarshaller_y_LiteralUnlimitedNatural1577.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1577", fUML_Tests_TestClassUnmarshaller_y_LiteralUnlimitedNatural1577);
				fUML_Tests_TestClassUnmarshaller_y_LiteralInteger1578.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1578", fUML_Tests_TestClassUnmarshaller_y_LiteralInteger1578);
		fUML_Tests_SignalEvent1579.reset(new SignalEvent());
		this->addToElementRepository("SignalEvent1579", fUML_Tests_SignalEvent1579);
		fUML_Tests_CopierCaller.reset(new Activity());
		this->addToElementRepository("CopierCaller", fUML_Tests_CopierCaller);
			fUML_Tests_CopierCaller_ObjectFlow1580.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1580", fUML_Tests_CopierCaller_ObjectFlow1580);
				fUML_Tests_CopierCaller_ObjectFlow1580_LiteralInteger1581.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1581", fUML_Tests_CopierCaller_ObjectFlow1580_LiteralInteger1581);
			fUML_Tests_CopierCaller_Parameter_output.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(output)", fUML_Tests_CopierCaller_Parameter_output);
			fUML_Tests_CopierCaller_ObjectFlow1582.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1582", fUML_Tests_CopierCaller_ObjectFlow1582);
				fUML_Tests_CopierCaller_ObjectFlow1582_LiteralInteger1583.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1583", fUML_Tests_CopierCaller_ObjectFlow1582_LiteralInteger1583);
			fUML_Tests_CopierCaller_Value_888.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(888)", fUML_Tests_CopierCaller_Value_888);
				fUML_Tests_CopierCaller_Value_888_Value_0_result.reset(new OutputPin());
				this->addToElementRepository("Value(0).result", fUML_Tests_CopierCaller_Value_888_Value_0_result);
				fUML_Tests_CopierCaller_Value_888_LiteralInteger1584.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1584", fUML_Tests_CopierCaller_Value_888_LiteralInteger1584);
			fUML_Tests_CopierCaller_output.reset(new Parameter());
			this->addToElementRepository("output", fUML_Tests_CopierCaller_output);
				fUML_Tests_CopierCaller_output_LiteralUnlimitedNatural1585.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1585", fUML_Tests_CopierCaller_output_LiteralUnlimitedNatural1585);
				fUML_Tests_CopierCaller_output_LiteralInteger1586.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1586", fUML_Tests_CopierCaller_output_LiteralInteger1586);
			fUML_Tests_CopierCaller_Call_Copier.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Copier)", fUML_Tests_CopierCaller_Call_Copier);
				fUML_Tests_CopierCaller_Call_Copier_Copier_input.reset(new InputPin());
				this->addToElementRepository("Copier.input", fUML_Tests_CopierCaller_Call_Copier_Copier_input);
					fUML_Tests_CopierCaller_Call_Copier_Copier_input_LiteralUnlimitedNatural1587.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1587", fUML_Tests_CopierCaller_Call_Copier_Copier_input_LiteralUnlimitedNatural1587);
					fUML_Tests_CopierCaller_Call_Copier_Copier_input_LiteralInteger1588.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1588", fUML_Tests_CopierCaller_Call_Copier_Copier_input_LiteralInteger1588);
				fUML_Tests_CopierCaller_Call_Copier_Copier_output.reset(new OutputPin());
				this->addToElementRepository("Copier.output", fUML_Tests_CopierCaller_Call_Copier_Copier_output);
					fUML_Tests_CopierCaller_Call_Copier_Copier_output_LiteralInteger1589.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1589", fUML_Tests_CopierCaller_Call_Copier_Copier_output_LiteralInteger1589);
					fUML_Tests_CopierCaller_Call_Copier_Copier_output_LiteralUnlimitedNatural1590.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1590", fUML_Tests_CopierCaller_Call_Copier_Copier_output_LiteralUnlimitedNatural1590);
		fUML_Tests_TestSignal.reset(new Signal());
		this->addToElementRepository("TestSignal", fUML_Tests_TestSignal);
		fUML_Tests_SignalEvent1591.reset(new SignalEvent());
		this->addToElementRepository("SignalEvent1591", fUML_Tests_SignalEvent1591);
		fUML_Tests_TestClassAttributeValueRemover.reset(new Activity());
		this->addToElementRepository("TestClassAttributeValueRemover", fUML_Tests_TestClassAttributeValueRemover);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1592.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1592", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1592);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1592_LiteralUnlimitedNatural1593.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1593", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1592_LiteralUnlimitedNatural1593);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1594.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1594", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1594);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1594_LiteralUnlimitedNatural1595.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1595", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1594_LiteralUnlimitedNatural1595);
			fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y.reset(new RemoveStructuralFeatureValueAction());
			this->addToElementRepository("RemoveAll(y)", fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y);
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object);
					fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object_LiteralUnlimitedNatural1596.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1596", fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object_LiteralUnlimitedNatural1596);
					fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object_LiteralInteger1597.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1597", fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object_LiteralInteger1597);
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value);
					fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value_LiteralInteger1598.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1598", fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value_LiteralInteger1598);
					fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value_LiteralUnlimitedNatural1599.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1599", fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value_LiteralUnlimitedNatural1599);
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_result);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1600.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1600", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1600);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1600_LiteralUnlimitedNatural1601.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1601", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1600_LiteralUnlimitedNatural1601);
			fUML_Tests_TestClassAttributeValueRemover_objectOut.reset(new Parameter());
			this->addToElementRepository("objectOut", fUML_Tests_TestClassAttributeValueRemover_objectOut);
				fUML_Tests_TestClassAttributeValueRemover_objectOut_LiteralInteger1602.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1602", fUML_Tests_TestClassAttributeValueRemover_objectOut_LiteralInteger1602);
				fUML_Tests_TestClassAttributeValueRemover_objectOut_LiteralUnlimitedNatural1603.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1603", fUML_Tests_TestClassAttributeValueRemover_objectOut_LiteralUnlimitedNatural1603);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1604.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1604", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1604);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1604_LiteralUnlimitedNatural1605.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1605", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1604_LiteralUnlimitedNatural1605);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1606.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1606", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1606);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1606_LiteralUnlimitedNatural1607.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1607", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1606_LiteralUnlimitedNatural1607);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1608.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1608", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1608);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1608_LiteralUnlimitedNatural1609.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1609", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1608_LiteralUnlimitedNatural1609);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus1.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Add(y)-1", fUML_Tests_TestClassAttributeValueRemover_Add_yminus1);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result_LiteralInteger1610.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1610", fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result_LiteralInteger1610);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result_LiteralUnlimitedNatural1611.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1611", fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result_LiteralUnlimitedNatural1611);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value_LiteralInteger1612.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1612", fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value_LiteralInteger1612);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value_LiteralUnlimitedNatural1613.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1613", fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value_LiteralUnlimitedNatural1613);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object_LiteralUnlimitedNatural1614.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1614", fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object_LiteralUnlimitedNatural1614);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object_LiteralInteger1615.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1615", fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object_LiteralInteger1615);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus2.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Add(y)-2", fUML_Tests_TestClassAttributeValueRemover_Add_yminus2);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value_LiteralInteger1616.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1616", fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value_LiteralInteger1616);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value_LiteralUnlimitedNatural1617.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1617", fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value_LiteralUnlimitedNatural1617);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object_LiteralUnlimitedNatural1618.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1618", fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object_LiteralUnlimitedNatural1618);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object_LiteralInteger1619.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1619", fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object_LiteralInteger1619);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result_LiteralInteger1620.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1620", fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result_LiteralInteger1620);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result_LiteralUnlimitedNatural1621.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1621", fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result_LiteralUnlimitedNatural1621);
			fUML_Tests_TestClassAttributeValueRemover_Value_2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2)", fUML_Tests_TestClassAttributeValueRemover_Value_2);
				fUML_Tests_TestClassAttributeValueRemover_Value_2_LiteralInteger1622.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1622", fUML_Tests_TestClassAttributeValueRemover_Value_2_LiteralInteger1622);
				fUML_Tests_TestClassAttributeValueRemover_Value_2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassAttributeValueRemover_Value_2_result);
					fUML_Tests_TestClassAttributeValueRemover_Value_2_result_LiteralInteger1623.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1623", fUML_Tests_TestClassAttributeValueRemover_Value_2_result_LiteralInteger1623);
					fUML_Tests_TestClassAttributeValueRemover_Value_2_result_LiteralUnlimitedNatural1624.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1624", fUML_Tests_TestClassAttributeValueRemover_Value_2_result_LiteralUnlimitedNatural1624);
			fUML_Tests_TestClassAttributeValueRemover_objectOutNode.reset(new ActivityParameterNode());
			this->addToElementRepository("objectOutNode", fUML_Tests_TestClassAttributeValueRemover_objectOutNode);
			fUML_Tests_TestClassAttributeValueRemover_objectInNode.reset(new ActivityParameterNode());
			this->addToElementRepository("objectInNode", fUML_Tests_TestClassAttributeValueRemover_objectInNode);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1625.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1625", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1625);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1625_LiteralUnlimitedNatural1626.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1626", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1625_LiteralUnlimitedNatural1626);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1627.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1627", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1627);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1627_LiteralUnlimitedNatural1628.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1628", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1627_LiteralUnlimitedNatural1628);
			fUML_Tests_TestClassAttributeValueRemover_objectIn.reset(new Parameter());
			this->addToElementRepository("objectIn", fUML_Tests_TestClassAttributeValueRemover_objectIn);
				fUML_Tests_TestClassAttributeValueRemover_objectIn_LiteralUnlimitedNatural1629.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1629", fUML_Tests_TestClassAttributeValueRemover_objectIn_LiteralUnlimitedNatural1629);
				fUML_Tests_TestClassAttributeValueRemover_objectIn_LiteralInteger1630.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1630", fUML_Tests_TestClassAttributeValueRemover_objectIn_LiteralInteger1630);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1631.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1631", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1631);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1631_LiteralUnlimitedNatural1632.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1632", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1631_LiteralUnlimitedNatural1632);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1633.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1633", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1633);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1633_LiteralUnlimitedNatural1634.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1634", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1633_LiteralUnlimitedNatural1634);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1635.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1635", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1635);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1635_LiteralUnlimitedNatural1636.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1636", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1635_LiteralUnlimitedNatural1636);
			fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y.reset(new RemoveStructuralFeatureValueAction());
			this->addToElementRepository("RemoveOne(y)", fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y);
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value);
					fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value_LiteralInteger1637.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1637", fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value_LiteralInteger1637);
					fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value_LiteralUnlimitedNatural1638.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1638", fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value_LiteralUnlimitedNatural1638);
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result);
					fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result_LiteralInteger1639.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1639", fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result_LiteralInteger1639);
					fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result_LiteralUnlimitedNatural1640.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1640", fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result_LiteralUnlimitedNatural1640);
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object);
					fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object_LiteralUnlimitedNatural1641.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1641", fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object_LiteralUnlimitedNatural1641);
					fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object_LiteralInteger1642.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1642", fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object_LiteralInteger1642);
			fUML_Tests_TestClassAttributeValueRemover_Value_1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)", fUML_Tests_TestClassAttributeValueRemover_Value_1);
				fUML_Tests_TestClassAttributeValueRemover_Value_1_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassAttributeValueRemover_Value_1_result);
					fUML_Tests_TestClassAttributeValueRemover_Value_1_result_LiteralUnlimitedNatural1643.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1643", fUML_Tests_TestClassAttributeValueRemover_Value_1_result_LiteralUnlimitedNatural1643);
					fUML_Tests_TestClassAttributeValueRemover_Value_1_result_LiteralInteger1644.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1644", fUML_Tests_TestClassAttributeValueRemover_Value_1_result_LiteralInteger1644);
				fUML_Tests_TestClassAttributeValueRemover_Value_1_LiteralInteger1645.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1645", fUML_Tests_TestClassAttributeValueRemover_Value_1_LiteralInteger1645);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1646.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1646", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1646);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1646_LiteralUnlimitedNatural1647.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1647", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1646_LiteralUnlimitedNatural1647);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus3.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Add(y)-3", fUML_Tests_TestClassAttributeValueRemover_Add_yminus3);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object_LiteralInteger1648.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1648", fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object_LiteralInteger1648);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object_LiteralUnlimitedNatural1649.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1649", fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object_LiteralUnlimitedNatural1649);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result_LiteralInteger1650.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1650", fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result_LiteralInteger1650);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result_LiteralUnlimitedNatural1651.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1651", fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result_LiteralUnlimitedNatural1651);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value_LiteralInteger1652.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1652", fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value_LiteralInteger1652);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value_LiteralUnlimitedNatural1653.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1653", fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value_LiteralUnlimitedNatural1653);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus4.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Add(y)-4", fUML_Tests_TestClassAttributeValueRemover_Add_yminus4);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result_LiteralInteger1654.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1654", fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result_LiteralInteger1654);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result_LiteralUnlimitedNatural1655.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1655", fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result_LiteralUnlimitedNatural1655);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value_LiteralInteger1656.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1656", fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value_LiteralInteger1656);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value_LiteralUnlimitedNatural1657.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1657", fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value_LiteralUnlimitedNatural1657);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object_LiteralUnlimitedNatural1658.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1658", fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object_LiteralUnlimitedNatural1658);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object_LiteralInteger1659.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1659", fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object_LiteralInteger1659);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1660.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1660", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1660);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1660_LiteralUnlimitedNatural1661.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1661", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1660_LiteralUnlimitedNatural1661);
			fUML_Tests_TestClassAttributeValueRemover_ForkNode1662.reset(new ForkNode());
			this->addToElementRepository("ForkNode1662", fUML_Tests_TestClassAttributeValueRemover_ForkNode1662);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1663.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1663", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1663);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1663_LiteralUnlimitedNatural1664.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1664", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1663_LiteralUnlimitedNatural1664);
		fUML_Tests_GenerateBooleanTestData.reset(new Activity());
		this->addToElementRepository("GenerateBooleanTestData", fUML_Tests_GenerateBooleanTestData);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1665.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1665", fUML_Tests_GenerateBooleanTestData_ObjectFlow1665);
				fUML_Tests_GenerateBooleanTestData_ObjectFlow1665_LiteralInteger1666.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1666", fUML_Tests_GenerateBooleanTestData_ObjectFlow1665_LiteralInteger1666);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(true)-2", fUML_Tests_GenerateBooleanTestData_Value_trueminus2);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus2_LiteralBoolean1667.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1667", fUML_Tests_GenerateBooleanTestData_Value_trueminus2_LiteralBoolean1667);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus2_Value_trueminus2_result.reset(new OutputPin());
				this->addToElementRepository("Value(true)-2.result", fUML_Tests_GenerateBooleanTestData_Value_trueminus2_Value_trueminus2_result);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1668.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1668", fUML_Tests_GenerateBooleanTestData_ObjectFlow1668);
				fUML_Tests_GenerateBooleanTestData_ObjectFlow1668_LiteralInteger1669.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1669", fUML_Tests_GenerateBooleanTestData_ObjectFlow1668_LiteralInteger1669);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(false)-1", fUML_Tests_GenerateBooleanTestData_Value_falseminus1);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus1_LiteralBoolean1670.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1670", fUML_Tests_GenerateBooleanTestData_Value_falseminus1_LiteralBoolean1670);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus1_Value_falseminus1_result.reset(new OutputPin());
				this->addToElementRepository("Value(false)-1.result", fUML_Tests_GenerateBooleanTestData_Value_falseminus1_Value_falseminus1_result);
			fUML_Tests_GenerateBooleanTestData_argumentData2.reset(new Parameter());
			this->addToElementRepository("argumentData2", fUML_Tests_GenerateBooleanTestData_argumentData2);
				fUML_Tests_GenerateBooleanTestData_argumentData2_LiteralUnlimitedNatural1671.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1671", fUML_Tests_GenerateBooleanTestData_argumentData2_LiteralUnlimitedNatural1671);
				fUML_Tests_GenerateBooleanTestData_argumentData2_LiteralInteger1672.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1672", fUML_Tests_GenerateBooleanTestData_argumentData2_LiteralInteger1672);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1673.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1673", fUML_Tests_GenerateBooleanTestData_ControlFlow1673);
				fUML_Tests_GenerateBooleanTestData_ControlFlow1673_LiteralInteger1674.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1674", fUML_Tests_GenerateBooleanTestData_ControlFlow1673_LiteralInteger1674);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus4.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(true)-4", fUML_Tests_GenerateBooleanTestData_Value_trueminus4);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus4_LiteralBoolean1675.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1675", fUML_Tests_GenerateBooleanTestData_Value_trueminus4_LiteralBoolean1675);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus4_Value_trueminus4_result.reset(new OutputPin());
				this->addToElementRepository("Value(true)-4.result", fUML_Tests_GenerateBooleanTestData_Value_trueminus4_Value_trueminus4_result);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus3.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(false)-3", fUML_Tests_GenerateBooleanTestData_Value_falseminus3);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus3_Value_falseminus3_result.reset(new OutputPin());
				this->addToElementRepository("Value(false)-3.result", fUML_Tests_GenerateBooleanTestData_Value_falseminus3_Value_falseminus3_result);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus3_LiteralBoolean1676.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1676", fUML_Tests_GenerateBooleanTestData_Value_falseminus3_LiteralBoolean1676);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1677.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1677", fUML_Tests_GenerateBooleanTestData_ControlFlow1677);
				fUML_Tests_GenerateBooleanTestData_ControlFlow1677_LiteralInteger1678.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1678", fUML_Tests_GenerateBooleanTestData_ControlFlow1677_LiteralInteger1678);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1679.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1679", fUML_Tests_GenerateBooleanTestData_ObjectFlow1679);
				fUML_Tests_GenerateBooleanTestData_ObjectFlow1679_LiteralInteger1680.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1680", fUML_Tests_GenerateBooleanTestData_ObjectFlow1679_LiteralInteger1680);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1681.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1681", fUML_Tests_GenerateBooleanTestData_ControlFlow1681);
				fUML_Tests_GenerateBooleanTestData_ControlFlow1681_LiteralInteger1682.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1682", fUML_Tests_GenerateBooleanTestData_ControlFlow1681_LiteralInteger1682);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1683.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1683", fUML_Tests_GenerateBooleanTestData_ObjectFlow1683);
				fUML_Tests_GenerateBooleanTestData_ObjectFlow1683_LiteralInteger1684.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1684", fUML_Tests_GenerateBooleanTestData_ObjectFlow1683_LiteralInteger1684);
			fUML_Tests_GenerateBooleanTestData_Param_argumentData2.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(argumentData2)", fUML_Tests_GenerateBooleanTestData_Param_argumentData2);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(true)-1", fUML_Tests_GenerateBooleanTestData_Value_trueminus1);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus1_Value_trueminus1_result.reset(new OutputPin());
				this->addToElementRepository("Value(true)-1.result", fUML_Tests_GenerateBooleanTestData_Value_trueminus1_Value_trueminus1_result);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus1_LiteralBoolean1685.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1685", fUML_Tests_GenerateBooleanTestData_Value_trueminus1_LiteralBoolean1685);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1686.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1686", fUML_Tests_GenerateBooleanTestData_ObjectFlow1686);
				fUML_Tests_GenerateBooleanTestData_ObjectFlow1686_LiteralInteger1687.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1687", fUML_Tests_GenerateBooleanTestData_ObjectFlow1686_LiteralInteger1687);
			fUML_Tests_GenerateBooleanTestData_argumentData1.reset(new Parameter());
			this->addToElementRepository("argumentData1", fUML_Tests_GenerateBooleanTestData_argumentData1);
				fUML_Tests_GenerateBooleanTestData_argumentData1_LiteralUnlimitedNatural1688.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1688", fUML_Tests_GenerateBooleanTestData_argumentData1_LiteralUnlimitedNatural1688);
				fUML_Tests_GenerateBooleanTestData_argumentData1_LiteralInteger1689.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1689", fUML_Tests_GenerateBooleanTestData_argumentData1_LiteralInteger1689);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus4.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(false)-4", fUML_Tests_GenerateBooleanTestData_Value_falseminus4);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus4_Value_falseminus4_result.reset(new OutputPin());
				this->addToElementRepository("Value(false)-4.result", fUML_Tests_GenerateBooleanTestData_Value_falseminus4_Value_falseminus4_result);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus4_LiteralBoolean1690.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1690", fUML_Tests_GenerateBooleanTestData_Value_falseminus4_LiteralBoolean1690);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1691.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1691", fUML_Tests_GenerateBooleanTestData_ObjectFlow1691);
				fUML_Tests_GenerateBooleanTestData_ObjectFlow1691_LiteralInteger1692.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1692", fUML_Tests_GenerateBooleanTestData_ObjectFlow1691_LiteralInteger1692);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1693.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1693", fUML_Tests_GenerateBooleanTestData_ControlFlow1693);
				fUML_Tests_GenerateBooleanTestData_ControlFlow1693_LiteralInteger1694.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1694", fUML_Tests_GenerateBooleanTestData_ControlFlow1693_LiteralInteger1694);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1695.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1695", fUML_Tests_GenerateBooleanTestData_ObjectFlow1695);
				fUML_Tests_GenerateBooleanTestData_ObjectFlow1695_LiteralInteger1696.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1696", fUML_Tests_GenerateBooleanTestData_ObjectFlow1695_LiteralInteger1696);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1697.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1697", fUML_Tests_GenerateBooleanTestData_ControlFlow1697);
				fUML_Tests_GenerateBooleanTestData_ControlFlow1697_LiteralInteger1698.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1698", fUML_Tests_GenerateBooleanTestData_ControlFlow1697_LiteralInteger1698);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus3.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(true)-3", fUML_Tests_GenerateBooleanTestData_Value_trueminus3);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus3_LiteralBoolean1699.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1699", fUML_Tests_GenerateBooleanTestData_Value_trueminus3_LiteralBoolean1699);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus3_Value_trueminus3_result.reset(new OutputPin());
				this->addToElementRepository("Value(true)-3.result", fUML_Tests_GenerateBooleanTestData_Value_trueminus3_Value_trueminus3_result);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(false)-2", fUML_Tests_GenerateBooleanTestData_Value_falseminus2);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus2_LiteralBoolean1700.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1700", fUML_Tests_GenerateBooleanTestData_Value_falseminus2_LiteralBoolean1700);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus2_Value_falseminus2_result.reset(new OutputPin());
				this->addToElementRepository("Value(false)-2.result", fUML_Tests_GenerateBooleanTestData_Value_falseminus2_Value_falseminus2_result);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1701.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1701", fUML_Tests_GenerateBooleanTestData_ObjectFlow1701);
				fUML_Tests_GenerateBooleanTestData_ObjectFlow1701_LiteralInteger1702.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1702", fUML_Tests_GenerateBooleanTestData_ObjectFlow1701_LiteralInteger1702);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1703.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1703", fUML_Tests_GenerateBooleanTestData_ControlFlow1703);
				fUML_Tests_GenerateBooleanTestData_ControlFlow1703_LiteralInteger1704.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1704", fUML_Tests_GenerateBooleanTestData_ControlFlow1703_LiteralInteger1704);
			fUML_Tests_GenerateBooleanTestData_Param_argumentData1.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(argumentData1)", fUML_Tests_GenerateBooleanTestData_Param_argumentData1);
		fUML_Tests_SpecializedSignal.reset(new Signal());
		this->addToElementRepository("SpecializedSignal", fUML_Tests_SpecializedSignal);
			fUML_Tests_SpecializedSignal_Generalization1705.reset(new Generalization());
			this->addToElementRepository("Generalization1705", fUML_Tests_SpecializedSignal_Generalization1705);

	// Initialize public members
	/*
	 * Model fUML_Tests
	 */
	fUML_Tests->setThisPackagePtr(fUML_Tests);
	fUML_Tests->setName("fUML_Tests");
	fUML_Tests->setVisibility(VisibilityKind::public_);
		// Signal OtherSignal
		fUML_Tests_OtherSignal->setThisSignalPtr(fUML_Tests_OtherSignal);
		fUML_Tests_OtherSignal->setName("OtherSignal");
		fUML_Tests_OtherSignal->setVisibility(VisibilityKind::public_);
	fUML_Tests->addPackagedElement(fUML_Tests_OtherSignal);
		// Class General
		fUML_Tests_General->setThisClass_Ptr(fUML_Tests_General);
		fUML_Tests_General->setName("General");
		fUML_Tests_General->setVisibility(VisibilityKind::public_);
		
			// Property y
			fUML_Tests_General_y->setThisElementPtr(fUML_Tests_General_y);
			fUML_Tests_General_y->setName("y");
			fUML_Tests_General_y->setVisibility(VisibilityKind::public_);
		fUML_Tests_General->addOwnedAttribute(fUML_Tests_General_y);
	fUML_Tests->addPackagedElement(fUML_Tests_General);
		// Activity TestClassObjectCreator
		fUML_Tests_TestClassObjectCreator->setThisActivityPtr(fUML_Tests_TestClassObjectCreator);
		fUML_Tests_TestClassObjectCreator->setName("TestClassObjectCreator");
		fUML_Tests_TestClassObjectCreator->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestClassObjectCreator->isReentrant = false;
			// Parameter result
			fUML_Tests_TestClassObjectCreator_result->setThisElementPtr(fUML_Tests_TestClassObjectCreator_result);
			fUML_Tests_TestClassObjectCreator_result->setName("result");
			fUML_Tests_TestClassObjectCreator_result->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassObjectCreator_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassObjectCreator_result->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassObjectCreator->addOwnedParameter(fUML_Tests_TestClassObjectCreator_result);
			// ActivityParameterNode Parameter(result)
			fUML_Tests_TestClassObjectCreator_Parameter_result->setThisElementPtr(fUML_Tests_TestClassObjectCreator_Parameter_result);
			fUML_Tests_TestClassObjectCreator_Parameter_result->setName("Parameter(result)");
			fUML_Tests_TestClassObjectCreator_Parameter_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassObjectCreator_Parameter_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassObjectCreator_Parameter_result->setParameter(fUML_Tests_TestClassObjectCreator_result);
		fUML_Tests_TestClassObjectCreator->addNode(fUML_Tests_TestClassObjectCreator_Parameter_result);
			// CreateObjectAction Create(TestClass)
			fUML_Tests_TestClassObjectCreator_Create_TestClass->setThisExecutableNodePtr(fUML_Tests_TestClassObjectCreator_Create_TestClass);
			fUML_Tests_TestClassObjectCreator_Create_TestClass->setName("Create(TestClass)");
			fUML_Tests_TestClassObjectCreator_Create_TestClass->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassObjectCreator_Create_TestClass->setClassifier(fUML_Tests_TestClass);
				// OutputPin Create(TestClass).result
				fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result->setThisElementPtr(fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result);
				fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result->setName("Create(TestClass).result");
				fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassObjectCreator_Create_TestClass->setResult(fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result);
		fUML_Tests_TestClassObjectCreator->addNode(fUML_Tests_TestClassObjectCreator_Create_TestClass);
			// ObjectFlow ObjectFlow0 from Create(TestClass).result to Parameter(result)
			fUML_Tests_TestClassObjectCreator_ObjectFlow0->setThisActivityEdgePtr(fUML_Tests_TestClassObjectCreator_ObjectFlow0);
			fUML_Tests_TestClassObjectCreator_ObjectFlow0->setName("ObjectFlow0");
			fUML_Tests_TestClassObjectCreator_ObjectFlow0->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassObjectCreator_ObjectFlow0->setSource(fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result);
			fUML_Tests_TestClassObjectCreator_ObjectFlow0->setTarget(fUML_Tests_TestClassObjectCreator_Parameter_result);
		fUML_Tests_TestClassObjectCreator->addEdge(fUML_Tests_TestClassObjectCreator_ObjectFlow0);
	fUML_Tests->addPackagedElement(fUML_Tests_TestClassObjectCreator);
		// Activity TestSignalReceiver
		fUML_Tests_TestSignalReceiver->setThisActivityPtr(fUML_Tests_TestSignalReceiver);
		fUML_Tests_TestSignalReceiver->setName("TestSignalReceiver");
		fUML_Tests_TestSignalReceiver->setVisibility(VisibilityKind::public_);
		
			// Property signal
			fUML_Tests_TestSignalReceiver_signal->setThisElementPtr(fUML_Tests_TestSignalReceiver_signal);
			fUML_Tests_TestSignalReceiver_signal->setName("signal");
			fUML_Tests_TestSignalReceiver_signal->setVisibility(VisibilityKind::private_);
			fUML_Tests_TestSignalReceiver_signal->setLower(0);
			fUML_Tests_TestSignalReceiver_signal->setType(fUML_Tests_TestSignal);
		fUML_Tests_TestSignalReceiver->addOwnedAttribute(fUML_Tests_TestSignalReceiver_signal);
			// Parameter testSignalOut
			fUML_Tests_TestSignalReceiver_testSignalOut->setThisElementPtr(fUML_Tests_TestSignalReceiver_testSignalOut);
			fUML_Tests_TestSignalReceiver_testSignalOut->setName("testSignalOut");
			fUML_Tests_TestSignalReceiver_testSignalOut->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSignalReceiver_testSignalOut->setLower(0);
			fUML_Tests_TestSignalReceiver_testSignalOut->setType(fUML_Tests_TestSignal);
			fUML_Tests_TestSignalReceiver_testSignalOut->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestSignalReceiver->addOwnedParameter(fUML_Tests_TestSignalReceiver_testSignalOut);
			// ReadSelfAction ReadSelf
			fUML_Tests_TestSignalReceiver_ReadSelf->setThisExecutableNodePtr(fUML_Tests_TestSignalReceiver_ReadSelf);
			fUML_Tests_TestSignalReceiver_ReadSelf->setName("ReadSelf");
			fUML_Tests_TestSignalReceiver_ReadSelf->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestSignalReceiver_ReadSelf_result->setThisElementPtr(fUML_Tests_TestSignalReceiver_ReadSelf_result);
				fUML_Tests_TestSignalReceiver_ReadSelf_result->setName("result");
				fUML_Tests_TestSignalReceiver_ReadSelf_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSignalReceiver_ReadSelf->setResult(fUML_Tests_TestSignalReceiver_ReadSelf_result);
		fUML_Tests_TestSignalReceiver->addNode(fUML_Tests_TestSignalReceiver_ReadSelf);
			// AddStructuralFeatureValueAction Write(signal)
			fUML_Tests_TestSignalReceiver_Write_signal->setThisExecutableNodePtr(fUML_Tests_TestSignalReceiver_Write_signal);
			fUML_Tests_TestSignalReceiver_Write_signal->setName("Write(signal)");
			fUML_Tests_TestSignalReceiver_Write_signal->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSignalReceiver_Write_signal->setStructuralFeature(fUML_Tests_TestSignalReceiver_signal);
				// InputPin object
				fUML_Tests_TestSignalReceiver_Write_signal_object->setThisElementPtr(fUML_Tests_TestSignalReceiver_Write_signal_object);
				fUML_Tests_TestSignalReceiver_Write_signal_object->setName("object");
				fUML_Tests_TestSignalReceiver_Write_signal_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSignalReceiver_Write_signal->setObject(fUML_Tests_TestSignalReceiver_Write_signal_object);
				// InputPin value
				fUML_Tests_TestSignalReceiver_Write_signal_value->setThisElementPtr(fUML_Tests_TestSignalReceiver_Write_signal_value);
				fUML_Tests_TestSignalReceiver_Write_signal_value->setName("value");
				fUML_Tests_TestSignalReceiver_Write_signal_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSignalReceiver_Write_signal_value->setType(fUML_Tests_TestSignal);
			fUML_Tests_TestSignalReceiver_Write_signal->setValue(fUML_Tests_TestSignalReceiver_Write_signal_value);
		fUML_Tests_TestSignalReceiver->addNode(fUML_Tests_TestSignalReceiver_Write_signal);
			// AcceptEventAction Accept(TestSignal)
			fUML_Tests_TestSignalReceiver_Accept_TestSignal->setThisExecutableNodePtr(fUML_Tests_TestSignalReceiver_Accept_TestSignal);
			fUML_Tests_TestSignalReceiver_Accept_TestSignal->setName("Accept(TestSignal)");
			fUML_Tests_TestSignalReceiver_Accept_TestSignal->setVisibility(VisibilityKind::public_);
				// OutputPin signal
				fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal->setThisElementPtr(fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal);
				fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal->setName("signal");
				fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal->setType(fUML_Tests_TestSignal);
			fUML_Tests_TestSignalReceiver_Accept_TestSignal->addResult(fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal);
				fUML_Tests_TestSignalReceiver_Accept_TestSignal_Trigger8->setName("Trigger8");
				fUML_Tests_TestSignalReceiver_Accept_TestSignal_Trigger8->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSignalReceiver_Accept_TestSignal_Trigger8->setEvent(fUML_Tests_SignalEvent1591);
			fUML_Tests_TestSignalReceiver_Accept_TestSignal->addTrigger(fUML_Tests_TestSignalReceiver_Accept_TestSignal_Trigger8);
		fUML_Tests_TestSignalReceiver->addNode(fUML_Tests_TestSignalReceiver_Accept_TestSignal);
			// ForkNode Fork(signal)
			fUML_Tests_TestSignalReceiver_Fork_signal->setThisElementPtr(fUML_Tests_TestSignalReceiver_Fork_signal);
			fUML_Tests_TestSignalReceiver_Fork_signal->setName("Fork(signal)");
			fUML_Tests_TestSignalReceiver_Fork_signal->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestSignalReceiver->addNode(fUML_Tests_TestSignalReceiver_Fork_signal);
			// InitialNode InitialNode17
			fUML_Tests_TestSignalReceiver_InitialNode17->setThisElementPtr(fUML_Tests_TestSignalReceiver_InitialNode17);
			fUML_Tests_TestSignalReceiver_InitialNode17->setName("InitialNode17");
			fUML_Tests_TestSignalReceiver_InitialNode17->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestSignalReceiver->addNode(fUML_Tests_TestSignalReceiver_InitialNode17);
			// ActivityParameterNode Output(testSignalOut)
			fUML_Tests_TestSignalReceiver_Output_testSignalOut->setThisElementPtr(fUML_Tests_TestSignalReceiver_Output_testSignalOut);
			fUML_Tests_TestSignalReceiver_Output_testSignalOut->setName("Output(testSignalOut)");
			fUML_Tests_TestSignalReceiver_Output_testSignalOut->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSignalReceiver_Output_testSignalOut->setType(fUML_Tests_TestSignal);
			fUML_Tests_TestSignalReceiver_Output_testSignalOut->setParameter(fUML_Tests_TestSignalReceiver_testSignalOut);
		fUML_Tests_TestSignalReceiver->addNode(fUML_Tests_TestSignalReceiver_Output_testSignalOut);
			// ObjectFlow ObjectFlow20 from signal to Fork(signal)
			fUML_Tests_TestSignalReceiver_ObjectFlow20->setThisActivityEdgePtr(fUML_Tests_TestSignalReceiver_ObjectFlow20);
			fUML_Tests_TestSignalReceiver_ObjectFlow20->setName("ObjectFlow20");
			fUML_Tests_TestSignalReceiver_ObjectFlow20->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSignalReceiver_ObjectFlow20->setSource(fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal);
			fUML_Tests_TestSignalReceiver_ObjectFlow20->setTarget(fUML_Tests_TestSignalReceiver_Fork_signal);
		fUML_Tests_TestSignalReceiver->addEdge(fUML_Tests_TestSignalReceiver_ObjectFlow20);
			// ControlFlow ControlFlow6 from Accept(TestSignal) to ReadSelf
			fUML_Tests_TestSignalReceiver_ControlFlow6->setThisActivityEdgePtr(fUML_Tests_TestSignalReceiver_ControlFlow6);
			fUML_Tests_TestSignalReceiver_ControlFlow6->setName("ControlFlow6");
			fUML_Tests_TestSignalReceiver_ControlFlow6->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSignalReceiver_ControlFlow6->setSource(fUML_Tests_TestSignalReceiver_Accept_TestSignal);
			fUML_Tests_TestSignalReceiver_ControlFlow6->setTarget(fUML_Tests_TestSignalReceiver_ReadSelf);
		fUML_Tests_TestSignalReceiver->addEdge(fUML_Tests_TestSignalReceiver_ControlFlow6);
			// ObjectFlow ObjectFlow24 from Fork(signal) to Output(testSignalOut)
			fUML_Tests_TestSignalReceiver_ObjectFlow24->setThisActivityEdgePtr(fUML_Tests_TestSignalReceiver_ObjectFlow24);
			fUML_Tests_TestSignalReceiver_ObjectFlow24->setName("ObjectFlow24");
			fUML_Tests_TestSignalReceiver_ObjectFlow24->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSignalReceiver_ObjectFlow24->setSource(fUML_Tests_TestSignalReceiver_Fork_signal);
			fUML_Tests_TestSignalReceiver_ObjectFlow24->setTarget(fUML_Tests_TestSignalReceiver_Output_testSignalOut);
		fUML_Tests_TestSignalReceiver->addEdge(fUML_Tests_TestSignalReceiver_ObjectFlow24);
			// ControlFlow ControlFlow11 from InitialNode17 to Accept(TestSignal)
			fUML_Tests_TestSignalReceiver_ControlFlow11->setThisActivityEdgePtr(fUML_Tests_TestSignalReceiver_ControlFlow11);
			fUML_Tests_TestSignalReceiver_ControlFlow11->setName("ControlFlow11");
			fUML_Tests_TestSignalReceiver_ControlFlow11->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSignalReceiver_ControlFlow11->setSource(fUML_Tests_TestSignalReceiver_InitialNode17);
			fUML_Tests_TestSignalReceiver_ControlFlow11->setTarget(fUML_Tests_TestSignalReceiver_Accept_TestSignal);
		fUML_Tests_TestSignalReceiver->addEdge(fUML_Tests_TestSignalReceiver_ControlFlow11);
			// ObjectFlow ObjectFlow13 from Fork(signal) to value
			fUML_Tests_TestSignalReceiver_ObjectFlow13->setThisActivityEdgePtr(fUML_Tests_TestSignalReceiver_ObjectFlow13);
			fUML_Tests_TestSignalReceiver_ObjectFlow13->setName("ObjectFlow13");
			fUML_Tests_TestSignalReceiver_ObjectFlow13->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSignalReceiver_ObjectFlow13->setSource(fUML_Tests_TestSignalReceiver_Fork_signal);
			fUML_Tests_TestSignalReceiver_ObjectFlow13->setTarget(fUML_Tests_TestSignalReceiver_Write_signal_value);
		fUML_Tests_TestSignalReceiver->addEdge(fUML_Tests_TestSignalReceiver_ObjectFlow13);
			// ObjectFlow ObjectFlow18 from result to object
			fUML_Tests_TestSignalReceiver_ObjectFlow18->setThisActivityEdgePtr(fUML_Tests_TestSignalReceiver_ObjectFlow18);
			fUML_Tests_TestSignalReceiver_ObjectFlow18->setName("ObjectFlow18");
			fUML_Tests_TestSignalReceiver_ObjectFlow18->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSignalReceiver_ObjectFlow18->setSource(fUML_Tests_TestSignalReceiver_ReadSelf_result);
			fUML_Tests_TestSignalReceiver_ObjectFlow18->setTarget(fUML_Tests_TestSignalReceiver_Write_signal_object);
		fUML_Tests_TestSignalReceiver->addEdge(fUML_Tests_TestSignalReceiver_ObjectFlow18);
	fUML_Tests->addPackagedElement(fUML_Tests_TestSignalReceiver);
		// Class TestComposite
		fUML_Tests_TestComposite->setThisClass_Ptr(fUML_Tests_TestComposite);
		fUML_Tests_TestComposite->setName("TestComposite");
		fUML_Tests_TestComposite->setVisibility(VisibilityKind::public_);
		
			// Property c1
			fUML_Tests_TestComposite_c1->setThisElementPtr(fUML_Tests_TestComposite_c1);
			fUML_Tests_TestComposite_c1->setName("c1");
			fUML_Tests_TestComposite_c1->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestComposite_c1->setType(fUML_Tests_TestClass);
			fUML_Tests_TestComposite_c1->setAggregation(AggregationKind::composite);
		fUML_Tests_TestComposite->addOwnedAttribute(fUML_Tests_TestComposite_c1);
	fUML_Tests->addPackagedElement(fUML_Tests_TestComposite);
		// Activity TestCompositeObjectDestroyer
		fUML_Tests_TestCompositeObjectDestroyer->setThisActivityPtr(fUML_Tests_TestCompositeObjectDestroyer);
		fUML_Tests_TestCompositeObjectDestroyer->setName("TestCompositeObjectDestroyer");
		fUML_Tests_TestCompositeObjectDestroyer->setVisibility(VisibilityKind::public_);
			// Parameter composite
			fUML_Tests_TestCompositeObjectDestroyer_composite->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_composite);
			fUML_Tests_TestCompositeObjectDestroyer_composite->setName("composite");
			fUML_Tests_TestCompositeObjectDestroyer_composite->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_composite->setType(fUML_Tests_TestComposite);
		fUML_Tests_TestCompositeObjectDestroyer->addOwnedParameter(fUML_Tests_TestCompositeObjectDestroyer_composite);
			// Parameter object1
			fUML_Tests_TestCompositeObjectDestroyer_object1->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_object1);
			fUML_Tests_TestCompositeObjectDestroyer_object1->setName("object1");
			fUML_Tests_TestCompositeObjectDestroyer_object1->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_object1->setType(fUML_Tests_TestClass);
		fUML_Tests_TestCompositeObjectDestroyer->addOwnedParameter(fUML_Tests_TestCompositeObjectDestroyer_object1);
			// Parameter object2
			fUML_Tests_TestCompositeObjectDestroyer_object2->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_object2);
			fUML_Tests_TestCompositeObjectDestroyer_object2->setName("object2");
			fUML_Tests_TestCompositeObjectDestroyer_object2->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_object2->setType(fUML_Tests_TestClass);
		fUML_Tests_TestCompositeObjectDestroyer->addOwnedParameter(fUML_Tests_TestCompositeObjectDestroyer_object2);
			// Parameter compositeOut
			fUML_Tests_TestCompositeObjectDestroyer_compositeOut->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_compositeOut);
			fUML_Tests_TestCompositeObjectDestroyer_compositeOut->setName("compositeOut");
			fUML_Tests_TestCompositeObjectDestroyer_compositeOut->setVisibility(VisibilityKind::public_);
			
			
			fUML_Tests_TestCompositeObjectDestroyer_compositeOut->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestCompositeObjectDestroyer->addOwnedParameter(fUML_Tests_TestCompositeObjectDestroyer_compositeOut);
			// Parameter object1Out
			fUML_Tests_TestCompositeObjectDestroyer_object1Out->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_object1Out);
			fUML_Tests_TestCompositeObjectDestroyer_object1Out->setName("object1Out");
			fUML_Tests_TestCompositeObjectDestroyer_object1Out->setVisibility(VisibilityKind::public_);
			
			
			fUML_Tests_TestCompositeObjectDestroyer_object1Out->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestCompositeObjectDestroyer->addOwnedParameter(fUML_Tests_TestCompositeObjectDestroyer_object1Out);
			// Parameter object2Out
			fUML_Tests_TestCompositeObjectDestroyer_object2Out->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_object2Out);
			fUML_Tests_TestCompositeObjectDestroyer_object2Out->setName("object2Out");
			fUML_Tests_TestCompositeObjectDestroyer_object2Out->setVisibility(VisibilityKind::public_);
			
			
			fUML_Tests_TestCompositeObjectDestroyer_object2Out->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestCompositeObjectDestroyer->addOwnedParameter(fUML_Tests_TestCompositeObjectDestroyer_object2Out);
			// Parameter assocOut
			fUML_Tests_TestCompositeObjectDestroyer_assocOut->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_assocOut);
			fUML_Tests_TestCompositeObjectDestroyer_assocOut->setName("assocOut");
			fUML_Tests_TestCompositeObjectDestroyer_assocOut->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_assocOut->setUpper(-1);
			fUML_Tests_TestCompositeObjectDestroyer_assocOut->setLower(0);
			fUML_Tests_TestCompositeObjectDestroyer_assocOut->setType(fUML_Tests_TestClass);
			fUML_Tests_TestCompositeObjectDestroyer_assocOut->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestCompositeObjectDestroyer->addOwnedParameter(fUML_Tests_TestCompositeObjectDestroyer_assocOut);
			// ForkNode ForkNode26
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode26->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_ForkNode26);
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode26->setName("ForkNode26");
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode26->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_ForkNode26);
			// ForkNode ForkNode27
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode27->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_ForkNode27);
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode27->setName("ForkNode27");
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode27->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_ForkNode27);
			// ForkNode ForkNode30
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode30->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_ForkNode30);
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode30->setName("ForkNode30");
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode30->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_ForkNode30);
			// ActivityParameterNode Parameter(object1Out)
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1Out->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1Out);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1Out->setName("Parameter(object1Out)");
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1Out->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1Out->setParameter(fUML_Tests_TestCompositeObjectDestroyer_object1Out);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1Out);
			// ActivityParameterNode Parameter(compositeOut)
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_compositeOut->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Parameter_compositeOut);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_compositeOut->setName("Parameter(compositeOut)");
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_compositeOut->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_compositeOut->setParameter(fUML_Tests_TestCompositeObjectDestroyer_compositeOut);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Parameter_compositeOut);
			// ActivityParameterNode Parameter(object1)
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1->setName("Parameter(object1)");
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1->setType(fUML_Tests_TestClass);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1->setParameter(fUML_Tests_TestCompositeObjectDestroyer_object1);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1);
			// AddStructuralFeatureValueAction Write(c1)
			fUML_Tests_TestCompositeObjectDestroyer_Write_c1->setThisExecutableNodePtr(fUML_Tests_TestCompositeObjectDestroyer_Write_c1);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c1->setName("Write(c1)");
			fUML_Tests_TestCompositeObjectDestroyer_Write_c1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c1->setStructuralFeature(fUML_Tests_TestComposite_c1);
				// InputPin Write(c1).object
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_object->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_object);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_object->setName("Write(c1).object");
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_object->setType(fUML_Tests_TestComposite);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c1->setObject(fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_object);
				// InputPin Write(c1).value
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_value->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_value);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_value->setName("Write(c1).value");
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_value->setType(fUML_Tests_TestClass);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c1->setValue(fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_value);
				// OutputPin Write(c1).result
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_result->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_result);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_result->setName("Write(c1).result");
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c1->setResult(fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_result);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Write_c1);
			// DestroyObjectAction Destroy(composite)
			fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite->setThisExecutableNodePtr(fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite);
			fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite->setName("Destroy(composite)");
			fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite->setIsDestroyLinks(true);
			fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite->setIsDestroyOwnedObjects(true);
				// InputPin Destroy(composite).target
				fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite_Destroy_composite_target->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite_Destroy_composite_target);
				fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite_Destroy_composite_target->setName("Destroy(composite).target");
				fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite_Destroy_composite_target->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite_Destroy_composite_target);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite);
			// ForkNode ForkNode63
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode63->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_ForkNode63);
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode63->setName("ForkNode63");
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode63->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_ForkNode63);
			// ActivityParameterNode Parameter(object2Out)
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2Out->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2Out);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2Out->setName("Parameter(object2Out)");
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2Out->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2Out->setParameter(fUML_Tests_TestCompositeObjectDestroyer_object2Out);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2Out);
			// AddStructuralFeatureValueAction Write(c2)
			fUML_Tests_TestCompositeObjectDestroyer_Write_c2->setThisExecutableNodePtr(fUML_Tests_TestCompositeObjectDestroyer_Write_c2);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c2->setName("Write(c2)");
			fUML_Tests_TestCompositeObjectDestroyer_Write_c2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c2->setStructuralFeature(fUML_Tests_CompositeAssociation_c2);
				// InputPin Write(c2).object
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_object->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_object);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_object->setName("Write(c2).object");
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c2->setObject(fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_object);
				// InputPin Write(c2).value
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_value->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_value);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_value->setName("Write(c2).value");
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_value->setType(fUML_Tests_TestClass);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c2->setValue(fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_value);
				// OutputPin Write(c2).result
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_result->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_result);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_result->setName("Write(c2).result");
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c2->setResult(fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_result);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Write_c2);
			// ReadLinkAction Read(composite)
			fUML_Tests_TestCompositeObjectDestroyer_Read_composite->setThisExecutableNodePtr(fUML_Tests_TestCompositeObjectDestroyer_Read_composite);
			fUML_Tests_TestCompositeObjectDestroyer_Read_composite->setName("Read(composite)");
			fUML_Tests_TestCompositeObjectDestroyer_Read_composite->setVisibility(VisibilityKind::public_);
				
			fUML_Tests_TestCompositeObjectDestroyer_Read_composite->addEndData(fUML_Tests_TestCompositeObjectDestroyer_Read_composite_LinkEndData64);
				
			fUML_Tests_TestCompositeObjectDestroyer_Read_composite->addEndData(fUML_Tests_TestCompositeObjectDestroyer_Read_composite_LinkEndData65);
				// InputPin Read(Composite).inputValue
				fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_inputValue->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_inputValue);
				fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_inputValue->setName("Read(Composite).inputValue");
				fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_inputValue->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Read_composite->addInputValue(fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_inputValue);
			fUML_Tests_TestCompositeObjectDestroyer_Read_composite->setResult(fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_iresult);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Read_composite);
			// ActivityParameterNode Parameter(assocOut)
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_assocOut->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Parameter_assocOut);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_assocOut->setName("Parameter(assocOut)");
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_assocOut->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_assocOut->setType(fUML_Tests_TestClass);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_assocOut->setParameter(fUML_Tests_TestCompositeObjectDestroyer_assocOut);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Parameter_assocOut);
			// ActivityParameterNode Parameter(object2)
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2->setName("Parameter(object2)");
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2->setType(fUML_Tests_TestClass);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2->setParameter(fUML_Tests_TestCompositeObjectDestroyer_object2);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2);
			// ActivityParameterNode Parameter(composite)
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_composite->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Parameter_composite);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_composite->setName("Parameter(composite)");
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_composite->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_composite->setType(fUML_Tests_TestComposite);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_composite->setParameter(fUML_Tests_TestCompositeObjectDestroyer_composite);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Parameter_composite);
			// ObjectFlow ObjectFlow28 from ForkNode30 to Write(c2).value
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow28->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow28);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow28->setName("ObjectFlow28");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow28->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow28->setSource(fUML_Tests_TestCompositeObjectDestroyer_ForkNode30);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow28->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_value);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow28);
			// ObjectFlow ObjectFlow55 from ForkNode26 to Write(c1).object
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow55->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow55);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow55->setName("ObjectFlow55");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow55->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow55->setSource(fUML_Tests_TestCompositeObjectDestroyer_ForkNode26);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow55->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_object);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow55);
			// ObjectFlow ObjectFlow57 from Write(c2).result to ForkNode63
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow57->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow57);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow57->setName("ObjectFlow57");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow57->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow57->setSource(fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_result);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow57->setTarget(fUML_Tests_TestCompositeObjectDestroyer_ForkNode63);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow57);
			// ObjectFlow ObjectFlow33 from Read(Composite).iresult to Parameter(assocOut)
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow33->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow33);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow33->setName("ObjectFlow33");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow33->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow33->setSource(fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_iresult);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow33->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Parameter_assocOut);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow33);
			// ObjectFlow ObjectFlow59 from ForkNode63 to Read(Composite).inputValue
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow59->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow59);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow59->setName("ObjectFlow59");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow59->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow59->setSource(fUML_Tests_TestCompositeObjectDestroyer_ForkNode63);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow59->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_inputValue);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow59);
			// ObjectFlow ObjectFlow61 from Parameter(object2) to ForkNode30
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow61->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow61);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow61->setName("ObjectFlow61");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow61->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow61->setSource(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow61->setTarget(fUML_Tests_TestCompositeObjectDestroyer_ForkNode30);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow61);
			// ObjectFlow ObjectFlow35 from ForkNode30 to Parameter(object2Out)
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow35->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow35);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow35->setName("ObjectFlow35");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow35->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow35->setSource(fUML_Tests_TestCompositeObjectDestroyer_ForkNode30);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow35->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2Out);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow35);
			// ObjectFlow ObjectFlow41 from Write(c1).result to Write(c2).object
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow41->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow41);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow41->setName("ObjectFlow41");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow41->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow41->setSource(fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_result);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow41->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_object);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow41);
			// ObjectFlow ObjectFlow43 from ForkNode26 to Parameter(compositeOut)
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow43->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow43);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow43->setName("ObjectFlow43");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow43->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow43->setSource(fUML_Tests_TestCompositeObjectDestroyer_ForkNode26);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow43->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Parameter_compositeOut);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow43);
			// ObjectFlow ObjectFlow45 from Parameter(object1) to ForkNode27
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow45->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow45);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow45->setName("ObjectFlow45");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow45->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow45->setSource(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow45->setTarget(fUML_Tests_TestCompositeObjectDestroyer_ForkNode27);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow45);
			// ObjectFlow ObjectFlow47 from ForkNode27 to Parameter(object1Out)
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow47->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow47);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow47->setName("ObjectFlow47");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow47->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow47->setSource(fUML_Tests_TestCompositeObjectDestroyer_ForkNode27);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow47->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1Out);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow47);
			// ObjectFlow ObjectFlow66 from Parameter(composite) to ForkNode26
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow66->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow66);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow66->setName("ObjectFlow66");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow66->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow66->setSource(fUML_Tests_TestCompositeObjectDestroyer_Parameter_composite);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow66->setTarget(fUML_Tests_TestCompositeObjectDestroyer_ForkNode26);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow66);
			// ObjectFlow ObjectFlow68 from ForkNode27 to Write(c1).value
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow68->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow68);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow68->setName("ObjectFlow68");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow68->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow68->setSource(fUML_Tests_TestCompositeObjectDestroyer_ForkNode27);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow68->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_value);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow68);
			// ObjectFlow ObjectFlow51 from ForkNode63 to Destroy(composite).target
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow51->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow51);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow51->setName("ObjectFlow51");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow51->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow51->setSource(fUML_Tests_TestCompositeObjectDestroyer_ForkNode63);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow51->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite_Destroy_composite_target);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow51);
	fUML_Tests->addPackagedElement(fUML_Tests_TestCompositeObjectDestroyer);
		// Activity TestStringFunctions
		fUML_Tests_TestStringFunctions->setThisActivityPtr(fUML_Tests_TestStringFunctions);
		fUML_Tests_TestStringFunctions->setName("TestStringFunctions");
		fUML_Tests_TestStringFunctions->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestStringFunctions->isReentrant = false;
			// Parameter SizeResult
			fUML_Tests_TestStringFunctions_SizeResult->setThisElementPtr(fUML_Tests_TestStringFunctions_SizeResult);
			fUML_Tests_TestStringFunctions_SizeResult->setName("SizeResult");
			fUML_Tests_TestStringFunctions_SizeResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_SizeResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_SizeResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestStringFunctions->addOwnedParameter(fUML_Tests_TestStringFunctions_SizeResult);
			// Parameter Substring1Result
			fUML_Tests_TestStringFunctions_Substring1Result->setThisElementPtr(fUML_Tests_TestStringFunctions_Substring1Result);
			fUML_Tests_TestStringFunctions_Substring1Result->setName("Substring1Result");
			fUML_Tests_TestStringFunctions_Substring1Result->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_Substring1Result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Substring1Result->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestStringFunctions->addOwnedParameter(fUML_Tests_TestStringFunctions_Substring1Result);
			// Parameter Substring2Result
			fUML_Tests_TestStringFunctions_Substring2Result->setThisElementPtr(fUML_Tests_TestStringFunctions_Substring2Result);
			fUML_Tests_TestStringFunctions_Substring2Result->setName("Substring2Result");
			fUML_Tests_TestStringFunctions_Substring2Result->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_Substring2Result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Substring2Result->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestStringFunctions->addOwnedParameter(fUML_Tests_TestStringFunctions_Substring2Result);
			// Parameter ConcatResult
			fUML_Tests_TestStringFunctions_ConcatResult->setThisElementPtr(fUML_Tests_TestStringFunctions_ConcatResult);
			fUML_Tests_TestStringFunctions_ConcatResult->setName("ConcatResult");
			fUML_Tests_TestStringFunctions_ConcatResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ConcatResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_ConcatResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestStringFunctions->addOwnedParameter(fUML_Tests_TestStringFunctions_ConcatResult);
			// ForkNode Fork(Value)
			fUML_Tests_TestStringFunctions_Fork_Value->setThisElementPtr(fUML_Tests_TestStringFunctions_Fork_Value);
			fUML_Tests_TestStringFunctions_Fork_Value->setName("Fork(Value)");
			fUML_Tests_TestStringFunctions_Fork_Value->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Fork_Value);
			// CallBehaviorAction Call(Substring)-2
			fUML_Tests_TestStringFunctions_Call_Substringminus2->setThisExecutableNodePtr(fUML_Tests_TestStringFunctions_Call_Substringminus2);
			fUML_Tests_TestStringFunctions_Call_Substringminus2->setName("Call(Substring)-2");
			fUML_Tests_TestStringFunctions_Call_Substringminus2->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestStringFunctions_Call_Substringminus2_result->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Substringminus2_result);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_result->setName("result");
				fUML_Tests_TestStringFunctions_Call_Substringminus2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_result->setLower(0);
			fUML_Tests_TestStringFunctions_Call_Substringminus2->addResult(fUML_Tests_TestStringFunctions_Call_Substringminus2_result);
			fUML_Tests_TestStringFunctions_Call_Substringminus2->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_StringFunctions_Substring);
				// InputPin x
				fUML_Tests_TestStringFunctions_Call_Substringminus2_x->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Substringminus2_x);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_x->setName("x");
				fUML_Tests_TestStringFunctions_Call_Substringminus2_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Call_Substringminus2->addArgument(fUML_Tests_TestStringFunctions_Call_Substringminus2_x);
				// InputPin lower
				fUML_Tests_TestStringFunctions_Call_Substringminus2_lower->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Substringminus2_lower);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_lower->setName("lower");
				fUML_Tests_TestStringFunctions_Call_Substringminus2_lower->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_lower->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_Call_Substringminus2->addArgument(fUML_Tests_TestStringFunctions_Call_Substringminus2_lower);
				// InputPin upper
				fUML_Tests_TestStringFunctions_Call_Substringminus2_upper->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Substringminus2_upper);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_upper->setName("upper");
				fUML_Tests_TestStringFunctions_Call_Substringminus2_upper->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_upper->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_Call_Substringminus2->addArgument(fUML_Tests_TestStringFunctions_Call_Substringminus2_upper);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Call_Substringminus2);
			// ActivityParameterNode Param(Substring2Result)
			fUML_Tests_TestStringFunctions_Param_Substring2Result->setThisElementPtr(fUML_Tests_TestStringFunctions_Param_Substring2Result);
			fUML_Tests_TestStringFunctions_Param_Substring2Result->setName("Param(Substring2Result)");
			fUML_Tests_TestStringFunctions_Param_Substring2Result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestStringFunctions_Param_Substring2Result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Param_Substring2Result->setParameter(fUML_Tests_TestStringFunctions_Substring2Result);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Param_Substring2Result);
			// ActivityParameterNode Param(SizeResult)
			fUML_Tests_TestStringFunctions_Param_SizeResult->setThisElementPtr(fUML_Tests_TestStringFunctions_Param_SizeResult);
			fUML_Tests_TestStringFunctions_Param_SizeResult->setName("Param(SizeResult)");
			fUML_Tests_TestStringFunctions_Param_SizeResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestStringFunctions_Param_SizeResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_Param_SizeResult->setParameter(fUML_Tests_TestStringFunctions_SizeResult);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Param_SizeResult);
			// ForkNode Fork(Substring-2)
			fUML_Tests_TestStringFunctions_Fork_Substringminus2->setThisElementPtr(fUML_Tests_TestStringFunctions_Fork_Substringminus2);
			fUML_Tests_TestStringFunctions_Fork_Substringminus2->setName("Fork(Substring-2)");
			fUML_Tests_TestStringFunctions_Fork_Substringminus2->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Fork_Substringminus2);
			// CallBehaviorAction Call(Substring)-1
			fUML_Tests_TestStringFunctions_Call_Substringminus1->setThisExecutableNodePtr(fUML_Tests_TestStringFunctions_Call_Substringminus1);
			fUML_Tests_TestStringFunctions_Call_Substringminus1->setName("Call(Substring)-1");
			fUML_Tests_TestStringFunctions_Call_Substringminus1->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestStringFunctions_Call_Substringminus1_result->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Substringminus1_result);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_result->setName("result");
				fUML_Tests_TestStringFunctions_Call_Substringminus1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_result->setLower(0);
			fUML_Tests_TestStringFunctions_Call_Substringminus1->addResult(fUML_Tests_TestStringFunctions_Call_Substringminus1_result);
			fUML_Tests_TestStringFunctions_Call_Substringminus1->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_StringFunctions_Substring);
				// InputPin x
				fUML_Tests_TestStringFunctions_Call_Substringminus1_x->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Substringminus1_x);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_x->setName("x");
				fUML_Tests_TestStringFunctions_Call_Substringminus1_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Call_Substringminus1->addArgument(fUML_Tests_TestStringFunctions_Call_Substringminus1_x);
				// InputPin lower
				fUML_Tests_TestStringFunctions_Call_Substringminus1_lower->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Substringminus1_lower);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_lower->setName("lower");
				fUML_Tests_TestStringFunctions_Call_Substringminus1_lower->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_lower->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_Call_Substringminus1->addArgument(fUML_Tests_TestStringFunctions_Call_Substringminus1_lower);
				// InputPin upper
				fUML_Tests_TestStringFunctions_Call_Substringminus1_upper->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Substringminus1_upper);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_upper->setName("upper");
				fUML_Tests_TestStringFunctions_Call_Substringminus1_upper->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_upper->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_Call_Substringminus1->addArgument(fUML_Tests_TestStringFunctions_Call_Substringminus1_upper);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Call_Substringminus1);
			// CallBehaviorAction Call(Size)
			fUML_Tests_TestStringFunctions_Call_Size->setThisExecutableNodePtr(fUML_Tests_TestStringFunctions_Call_Size);
			fUML_Tests_TestStringFunctions_Call_Size->setName("Call(Size)");
			fUML_Tests_TestStringFunctions_Call_Size->setVisibility(VisibilityKind::public_);
				// OutputPin Size.result
				fUML_Tests_TestStringFunctions_Call_Size_Size_result->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Size_Size_result);
				fUML_Tests_TestStringFunctions_Call_Size_Size_result->setName("Size.result");
				fUML_Tests_TestStringFunctions_Call_Size_Size_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Size_Size_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_Call_Size->addResult(fUML_Tests_TestStringFunctions_Call_Size_Size_result);
			fUML_Tests_TestStringFunctions_Call_Size->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_StringFunctions_Size);
				// InputPin Size.x
				fUML_Tests_TestStringFunctions_Call_Size_Size_x->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Size_Size_x);
				fUML_Tests_TestStringFunctions_Call_Size_Size_x->setName("Size.x");
				fUML_Tests_TestStringFunctions_Call_Size_Size_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Size_Size_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Call_Size->addArgument(fUML_Tests_TestStringFunctions_Call_Size_Size_x);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Call_Size);
			// ValueSpecificationAction Value(9)
			fUML_Tests_TestStringFunctions_Value_9->setThisExecutableNodePtr(fUML_Tests_TestStringFunctions_Value_9);
			fUML_Tests_TestStringFunctions_Value_9->setName("Value(9)");
			fUML_Tests_TestStringFunctions_Value_9->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger92
				fUML_Tests_TestStringFunctions_Value_9_LiteralInteger92->setThisElementPtr(fUML_Tests_TestStringFunctions_Value_9_LiteralInteger92);
				fUML_Tests_TestStringFunctions_Value_9_LiteralInteger92->setName("LiteralInteger92");
				fUML_Tests_TestStringFunctions_Value_9_LiteralInteger92->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Value_9_LiteralInteger92->setValue(9);
			fUML_Tests_TestStringFunctions_Value_9->setValue(fUML_Tests_TestStringFunctions_Value_9_LiteralInteger92);
				// OutputPin Value(9).result
				fUML_Tests_TestStringFunctions_Value_9_Value_9_result->setThisElementPtr(fUML_Tests_TestStringFunctions_Value_9_Value_9_result);
				fUML_Tests_TestStringFunctions_Value_9_Value_9_result->setName("Value(9).result");
				fUML_Tests_TestStringFunctions_Value_9_Value_9_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Value_9_Value_9_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_Value_9->setResult(fUML_Tests_TestStringFunctions_Value_9_Value_9_result);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Value_9);
			// ForkNode Fork(Substring-1)
			fUML_Tests_TestStringFunctions_Fork_Substringminus1->setThisElementPtr(fUML_Tests_TestStringFunctions_Fork_Substringminus1);
			fUML_Tests_TestStringFunctions_Fork_Substringminus1->setName("Fork(Substring-1)");
			fUML_Tests_TestStringFunctions_Fork_Substringminus1->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Fork_Substringminus1);
			// CallBehaviorAction Call(Concat)
			fUML_Tests_TestStringFunctions_Call_Concat->setThisExecutableNodePtr(fUML_Tests_TestStringFunctions_Call_Concat);
			fUML_Tests_TestStringFunctions_Call_Concat->setName("Call(Concat)");
			fUML_Tests_TestStringFunctions_Call_Concat->setVisibility(VisibilityKind::public_);
				// OutputPin Concat.result
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_result->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Concat_Concat_result);
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_result->setName("Concat.result");
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Call_Concat->addResult(fUML_Tests_TestStringFunctions_Call_Concat_Concat_result);
			fUML_Tests_TestStringFunctions_Call_Concat->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_StringFunctions_Concat);
				// InputPin Concat.x
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_x->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Concat_Concat_x);
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_x->setName("Concat.x");
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Call_Concat->addArgument(fUML_Tests_TestStringFunctions_Call_Concat_Concat_x);
				// InputPin Concat.y
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_y->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Concat_Concat_y);
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_y->setName("Concat.y");
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Call_Concat->addArgument(fUML_Tests_TestStringFunctions_Call_Concat_Concat_y);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Call_Concat);
			// ValueSpecificationAction Value(1)
			fUML_Tests_TestStringFunctions_Value_1->setThisExecutableNodePtr(fUML_Tests_TestStringFunctions_Value_1);
			fUML_Tests_TestStringFunctions_Value_1->setName("Value(1)");
			fUML_Tests_TestStringFunctions_Value_1->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger147
				fUML_Tests_TestStringFunctions_Value_1_LiteralInteger147->setThisElementPtr(fUML_Tests_TestStringFunctions_Value_1_LiteralInteger147);
				fUML_Tests_TestStringFunctions_Value_1_LiteralInteger147->setName("LiteralInteger147");
				fUML_Tests_TestStringFunctions_Value_1_LiteralInteger147->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Value_1_LiteralInteger147->setValue(1);
			fUML_Tests_TestStringFunctions_Value_1->setValue(fUML_Tests_TestStringFunctions_Value_1_LiteralInteger147);
				// OutputPin Value(1).result
				fUML_Tests_TestStringFunctions_Value_1_Value_1_result->setThisElementPtr(fUML_Tests_TestStringFunctions_Value_1_Value_1_result);
				fUML_Tests_TestStringFunctions_Value_1_Value_1_result->setName("Value(1).result");
				fUML_Tests_TestStringFunctions_Value_1_Value_1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Value_1_Value_1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_Value_1->setResult(fUML_Tests_TestStringFunctions_Value_1_Value_1_result);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Value_1);
			// ValueSpecificationAction Value(6)
			fUML_Tests_TestStringFunctions_Value_6->setThisExecutableNodePtr(fUML_Tests_TestStringFunctions_Value_6);
			fUML_Tests_TestStringFunctions_Value_6->setName("Value(6)");
			fUML_Tests_TestStringFunctions_Value_6->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger101
				fUML_Tests_TestStringFunctions_Value_6_LiteralInteger101->setThisElementPtr(fUML_Tests_TestStringFunctions_Value_6_LiteralInteger101);
				fUML_Tests_TestStringFunctions_Value_6_LiteralInteger101->setName("LiteralInteger101");
				fUML_Tests_TestStringFunctions_Value_6_LiteralInteger101->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Value_6_LiteralInteger101->setValue(6);
			fUML_Tests_TestStringFunctions_Value_6->setValue(fUML_Tests_TestStringFunctions_Value_6_LiteralInteger101);
				// OutputPin Value(6).result
				fUML_Tests_TestStringFunctions_Value_6_Value_6_result->setThisElementPtr(fUML_Tests_TestStringFunctions_Value_6_Value_6_result);
				fUML_Tests_TestStringFunctions_Value_6_Value_6_result->setName("Value(6).result");
				fUML_Tests_TestStringFunctions_Value_6_Value_6_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Value_6_Value_6_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_Value_6->setResult(fUML_Tests_TestStringFunctions_Value_6_Value_6_result);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Value_6);
			// ActivityParameterNode Param(Substring1Result)
			fUML_Tests_TestStringFunctions_Param_Substring1Result->setThisElementPtr(fUML_Tests_TestStringFunctions_Param_Substring1Result);
			fUML_Tests_TestStringFunctions_Param_Substring1Result->setName("Param(Substring1Result)");
			fUML_Tests_TestStringFunctions_Param_Substring1Result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestStringFunctions_Param_Substring1Result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Param_Substring1Result->setParameter(fUML_Tests_TestStringFunctions_Substring1Result);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Param_Substring1Result);
			// ValueSpecificationAction Value(\"123456789\")
			fUML_Tests_TestStringFunctions_Value_123456789->setThisExecutableNodePtr(fUML_Tests_TestStringFunctions_Value_123456789);
			fUML_Tests_TestStringFunctions_Value_123456789->setName("Value(\"123456789\")");
			fUML_Tests_TestStringFunctions_Value_123456789->setVisibility(VisibilityKind::public_);
				// LiteralString LiteralString106
				fUML_Tests_TestStringFunctions_Value_123456789_LiteralString106->setThisElementPtr(fUML_Tests_TestStringFunctions_Value_123456789_LiteralString106);
				fUML_Tests_TestStringFunctions_Value_123456789_LiteralString106->setName("LiteralString106");
				fUML_Tests_TestStringFunctions_Value_123456789_LiteralString106->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Value_123456789_LiteralString106->setValue("123456789");
			fUML_Tests_TestStringFunctions_Value_123456789->setValue(fUML_Tests_TestStringFunctions_Value_123456789_LiteralString106);
				// OutputPin Value.result
				fUML_Tests_TestStringFunctions_Value_123456789_Value_result->setThisElementPtr(fUML_Tests_TestStringFunctions_Value_123456789_Value_result);
				fUML_Tests_TestStringFunctions_Value_123456789_Value_result->setName("Value.result");
				fUML_Tests_TestStringFunctions_Value_123456789_Value_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Value_123456789_Value_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Value_123456789->setResult(fUML_Tests_TestStringFunctions_Value_123456789_Value_result);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Value_123456789);
			// ValueSpecificationAction Value(5)
			fUML_Tests_TestStringFunctions_Value_5->setThisExecutableNodePtr(fUML_Tests_TestStringFunctions_Value_5);
			fUML_Tests_TestStringFunctions_Value_5->setName("Value(5)");
			fUML_Tests_TestStringFunctions_Value_5->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger150
				fUML_Tests_TestStringFunctions_Value_5_LiteralInteger150->setThisElementPtr(fUML_Tests_TestStringFunctions_Value_5_LiteralInteger150);
				fUML_Tests_TestStringFunctions_Value_5_LiteralInteger150->setName("LiteralInteger150");
				fUML_Tests_TestStringFunctions_Value_5_LiteralInteger150->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Value_5_LiteralInteger150->setValue(5);
			fUML_Tests_TestStringFunctions_Value_5->setValue(fUML_Tests_TestStringFunctions_Value_5_LiteralInteger150);
				// OutputPin Value(5).result
				fUML_Tests_TestStringFunctions_Value_5_Value_5_result->setThisElementPtr(fUML_Tests_TestStringFunctions_Value_5_Value_5_result);
				fUML_Tests_TestStringFunctions_Value_5_Value_5_result->setName("Value(5).result");
				fUML_Tests_TestStringFunctions_Value_5_Value_5_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Value_5_Value_5_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_Value_5->setResult(fUML_Tests_TestStringFunctions_Value_5_Value_5_result);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Value_5);
			// ActivityParameterNode Param(ConcatResult)
			fUML_Tests_TestStringFunctions_Param_ConcatResult->setThisElementPtr(fUML_Tests_TestStringFunctions_Param_ConcatResult);
			fUML_Tests_TestStringFunctions_Param_ConcatResult->setName("Param(ConcatResult)");
			fUML_Tests_TestStringFunctions_Param_ConcatResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestStringFunctions_Param_ConcatResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Param_ConcatResult->setParameter(fUML_Tests_TestStringFunctions_ConcatResult);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Param_ConcatResult);
			// ObjectFlow ObjectFlow74 from Fork(Value) to x
			fUML_Tests_TestStringFunctions_ObjectFlow74->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow74);
			fUML_Tests_TestStringFunctions_ObjectFlow74->setName("ObjectFlow74");
			fUML_Tests_TestStringFunctions_ObjectFlow74->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow74->setSource(fUML_Tests_TestStringFunctions_Fork_Value);
			fUML_Tests_TestStringFunctions_ObjectFlow74->setTarget(fUML_Tests_TestStringFunctions_Call_Substringminus1_x);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow74);
			// ObjectFlow ObjectFlow76 from Value(5).result to upper
			fUML_Tests_TestStringFunctions_ObjectFlow76->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow76);
			fUML_Tests_TestStringFunctions_ObjectFlow76->setName("ObjectFlow76");
			fUML_Tests_TestStringFunctions_ObjectFlow76->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow76->setSource(fUML_Tests_TestStringFunctions_Value_5_Value_5_result);
			fUML_Tests_TestStringFunctions_ObjectFlow76->setTarget(fUML_Tests_TestStringFunctions_Call_Substringminus1_upper);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow76);
			// ObjectFlow ObjectFlow123 from result to Fork(Substring-1)
			fUML_Tests_TestStringFunctions_ObjectFlow123->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow123);
			fUML_Tests_TestStringFunctions_ObjectFlow123->setName("ObjectFlow123");
			fUML_Tests_TestStringFunctions_ObjectFlow123->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow123->setSource(fUML_Tests_TestStringFunctions_Call_Substringminus1_result);
			fUML_Tests_TestStringFunctions_ObjectFlow123->setTarget(fUML_Tests_TestStringFunctions_Fork_Substringminus1);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow123);
			// ObjectFlow ObjectFlow78 from Concat.result to Param(ConcatResult)
			fUML_Tests_TestStringFunctions_ObjectFlow78->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow78);
			fUML_Tests_TestStringFunctions_ObjectFlow78->setName("ObjectFlow78");
			fUML_Tests_TestStringFunctions_ObjectFlow78->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow78->setSource(fUML_Tests_TestStringFunctions_Call_Concat_Concat_result);
			fUML_Tests_TestStringFunctions_ObjectFlow78->setTarget(fUML_Tests_TestStringFunctions_Param_ConcatResult);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow78);
			// ObjectFlow ObjectFlow125 from Value(1).result to lower
			fUML_Tests_TestStringFunctions_ObjectFlow125->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow125);
			fUML_Tests_TestStringFunctions_ObjectFlow125->setName("ObjectFlow125");
			fUML_Tests_TestStringFunctions_ObjectFlow125->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow125->setSource(fUML_Tests_TestStringFunctions_Value_1_Value_1_result);
			fUML_Tests_TestStringFunctions_ObjectFlow125->setTarget(fUML_Tests_TestStringFunctions_Call_Substringminus1_lower);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow125);
			// ObjectFlow ObjectFlow127 from Fork(Substring-1) to Param(Substring1Result)
			fUML_Tests_TestStringFunctions_ObjectFlow127->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow127);
			fUML_Tests_TestStringFunctions_ObjectFlow127->setName("ObjectFlow127");
			fUML_Tests_TestStringFunctions_ObjectFlow127->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow127->setSource(fUML_Tests_TestStringFunctions_Fork_Substringminus1);
			fUML_Tests_TestStringFunctions_ObjectFlow127->setTarget(fUML_Tests_TestStringFunctions_Param_Substring1Result);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow127);
			// ObjectFlow ObjectFlow88 from Fork(Substring-1) to Concat.x
			fUML_Tests_TestStringFunctions_ObjectFlow88->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow88);
			fUML_Tests_TestStringFunctions_ObjectFlow88->setName("ObjectFlow88");
			fUML_Tests_TestStringFunctions_ObjectFlow88->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow88->setSource(fUML_Tests_TestStringFunctions_Fork_Substringminus1);
			fUML_Tests_TestStringFunctions_ObjectFlow88->setTarget(fUML_Tests_TestStringFunctions_Call_Concat_Concat_x);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow88);
			// ObjectFlow ObjectFlow90 from result to Fork(Substring-2)
			fUML_Tests_TestStringFunctions_ObjectFlow90->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow90);
			fUML_Tests_TestStringFunctions_ObjectFlow90->setName("ObjectFlow90");
			fUML_Tests_TestStringFunctions_ObjectFlow90->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow90->setSource(fUML_Tests_TestStringFunctions_Call_Substringminus2_result);
			fUML_Tests_TestStringFunctions_ObjectFlow90->setTarget(fUML_Tests_TestStringFunctions_Fork_Substringminus2);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow90);
			// ObjectFlow ObjectFlow95 from Fork(Value) to x
			fUML_Tests_TestStringFunctions_ObjectFlow95->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow95);
			fUML_Tests_TestStringFunctions_ObjectFlow95->setName("ObjectFlow95");
			fUML_Tests_TestStringFunctions_ObjectFlow95->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow95->setSource(fUML_Tests_TestStringFunctions_Fork_Value);
			fUML_Tests_TestStringFunctions_ObjectFlow95->setTarget(fUML_Tests_TestStringFunctions_Call_Substringminus2_x);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow95);
			// ObjectFlow ObjectFlow133 from Value(9).result to upper
			fUML_Tests_TestStringFunctions_ObjectFlow133->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow133);
			fUML_Tests_TestStringFunctions_ObjectFlow133->setName("ObjectFlow133");
			fUML_Tests_TestStringFunctions_ObjectFlow133->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow133->setSource(fUML_Tests_TestStringFunctions_Value_9_Value_9_result);
			fUML_Tests_TestStringFunctions_ObjectFlow133->setTarget(fUML_Tests_TestStringFunctions_Call_Substringminus2_upper);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow133);
			// ObjectFlow ObjectFlow97 from Fork(Substring-2) to Concat.y
			fUML_Tests_TestStringFunctions_ObjectFlow97->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow97);
			fUML_Tests_TestStringFunctions_ObjectFlow97->setName("ObjectFlow97");
			fUML_Tests_TestStringFunctions_ObjectFlow97->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow97->setSource(fUML_Tests_TestStringFunctions_Fork_Substringminus2);
			fUML_Tests_TestStringFunctions_ObjectFlow97->setTarget(fUML_Tests_TestStringFunctions_Call_Concat_Concat_y);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow97);
			// ObjectFlow ObjectFlow143 from Fork(Substring-2) to Param(Substring2Result)
			fUML_Tests_TestStringFunctions_ObjectFlow143->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow143);
			fUML_Tests_TestStringFunctions_ObjectFlow143->setName("ObjectFlow143");
			fUML_Tests_TestStringFunctions_ObjectFlow143->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow143->setSource(fUML_Tests_TestStringFunctions_Fork_Substringminus2);
			fUML_Tests_TestStringFunctions_ObjectFlow143->setTarget(fUML_Tests_TestStringFunctions_Param_Substring2Result);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow143);
			// ObjectFlow ObjectFlow102 from Value(6).result to lower
			fUML_Tests_TestStringFunctions_ObjectFlow102->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow102);
			fUML_Tests_TestStringFunctions_ObjectFlow102->setName("ObjectFlow102");
			fUML_Tests_TestStringFunctions_ObjectFlow102->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow102->setSource(fUML_Tests_TestStringFunctions_Value_6_Value_6_result);
			fUML_Tests_TestStringFunctions_ObjectFlow102->setTarget(fUML_Tests_TestStringFunctions_Call_Substringminus2_lower);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow102);
			// ObjectFlow ObjectFlow151 from Size.result to Param(SizeResult)
			fUML_Tests_TestStringFunctions_ObjectFlow151->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow151);
			fUML_Tests_TestStringFunctions_ObjectFlow151->setName("ObjectFlow151");
			fUML_Tests_TestStringFunctions_ObjectFlow151->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow151->setSource(fUML_Tests_TestStringFunctions_Call_Size_Size_result);
			fUML_Tests_TestStringFunctions_ObjectFlow151->setTarget(fUML_Tests_TestStringFunctions_Param_SizeResult);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow151);
			// ObjectFlow ObjectFlow111 from Fork(Value) to Size.x
			fUML_Tests_TestStringFunctions_ObjectFlow111->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow111);
			fUML_Tests_TestStringFunctions_ObjectFlow111->setName("ObjectFlow111");
			fUML_Tests_TestStringFunctions_ObjectFlow111->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow111->setSource(fUML_Tests_TestStringFunctions_Fork_Value);
			fUML_Tests_TestStringFunctions_ObjectFlow111->setTarget(fUML_Tests_TestStringFunctions_Call_Size_Size_x);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow111);
			// ObjectFlow ObjectFlow153 from Value.result to Fork(Value)
			fUML_Tests_TestStringFunctions_ObjectFlow153->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow153);
			fUML_Tests_TestStringFunctions_ObjectFlow153->setName("ObjectFlow153");
			fUML_Tests_TestStringFunctions_ObjectFlow153->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow153->setSource(fUML_Tests_TestStringFunctions_Value_123456789_Value_result);
			fUML_Tests_TestStringFunctions_ObjectFlow153->setTarget(fUML_Tests_TestStringFunctions_Fork_Value);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow153);
	fUML_Tests->addPackagedElement(fUML_Tests_TestStringFunctions);
		// Activity GenerateListTestData
		fUML_Tests_GenerateListTestData->setThisActivityPtr(fUML_Tests_GenerateListTestData);
		fUML_Tests_GenerateListTestData->setName("GenerateListTestData");
		fUML_Tests_GenerateListTestData->setVisibility(VisibilityKind::public_);
		fUML_Tests_GenerateListTestData->isReentrant = false;
			// Parameter list
			fUML_Tests_GenerateListTestData_list->setThisElementPtr(fUML_Tests_GenerateListTestData_list);
			fUML_Tests_GenerateListTestData_list->setName("list");
			fUML_Tests_GenerateListTestData_list->setVisibility(VisibilityKind::public_);
			fUML_Tests_GenerateListTestData_list->setUpper(-1);
			fUML_Tests_GenerateListTestData_list->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_GenerateListTestData_list->setDirection(ParameterDirectionKind::out);
		fUML_Tests_GenerateListTestData->addOwnedParameter(fUML_Tests_GenerateListTestData_list);
			// ValueSpecificationAction Value(2)
			fUML_Tests_GenerateListTestData_Value_2->setThisExecutableNodePtr(fUML_Tests_GenerateListTestData_Value_2);
			fUML_Tests_GenerateListTestData_Value_2->setName("Value(2)");
			fUML_Tests_GenerateListTestData_Value_2->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger159
				fUML_Tests_GenerateListTestData_Value_2_LiteralInteger159->setThisElementPtr(fUML_Tests_GenerateListTestData_Value_2_LiteralInteger159);
				fUML_Tests_GenerateListTestData_Value_2_LiteralInteger159->setName("LiteralInteger159");
				fUML_Tests_GenerateListTestData_Value_2_LiteralInteger159->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateListTestData_Value_2_LiteralInteger159->setValue(2);
			fUML_Tests_GenerateListTestData_Value_2->setValue(fUML_Tests_GenerateListTestData_Value_2_LiteralInteger159);
				// OutputPin Value(2).result
				fUML_Tests_GenerateListTestData_Value_2_Value_2_result->setThisElementPtr(fUML_Tests_GenerateListTestData_Value_2_Value_2_result);
				fUML_Tests_GenerateListTestData_Value_2_Value_2_result->setName("Value(2).result");
				fUML_Tests_GenerateListTestData_Value_2_Value_2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateListTestData_Value_2_Value_2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_GenerateListTestData_Value_2->setResult(fUML_Tests_GenerateListTestData_Value_2_Value_2_result);
		fUML_Tests_GenerateListTestData->addNode(fUML_Tests_GenerateListTestData_Value_2);
			// ValueSpecificationAction Value(3)
			fUML_Tests_GenerateListTestData_Value_3->setThisExecutableNodePtr(fUML_Tests_GenerateListTestData_Value_3);
			fUML_Tests_GenerateListTestData_Value_3->setName("Value(3)");
			fUML_Tests_GenerateListTestData_Value_3->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger162
				fUML_Tests_GenerateListTestData_Value_3_LiteralInteger162->setThisElementPtr(fUML_Tests_GenerateListTestData_Value_3_LiteralInteger162);
				fUML_Tests_GenerateListTestData_Value_3_LiteralInteger162->setName("LiteralInteger162");
				fUML_Tests_GenerateListTestData_Value_3_LiteralInteger162->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateListTestData_Value_3_LiteralInteger162->setValue(3);
			fUML_Tests_GenerateListTestData_Value_3->setValue(fUML_Tests_GenerateListTestData_Value_3_LiteralInteger162);
				// OutputPin Value(3).result
				fUML_Tests_GenerateListTestData_Value_3_Value_3_result->setThisElementPtr(fUML_Tests_GenerateListTestData_Value_3_Value_3_result);
				fUML_Tests_GenerateListTestData_Value_3_Value_3_result->setName("Value(3).result");
				fUML_Tests_GenerateListTestData_Value_3_Value_3_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateListTestData_Value_3_Value_3_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_GenerateListTestData_Value_3->setResult(fUML_Tests_GenerateListTestData_Value_3_Value_3_result);
		fUML_Tests_GenerateListTestData->addNode(fUML_Tests_GenerateListTestData_Value_3);
			// ActivityParameterNode Param(list)
			fUML_Tests_GenerateListTestData_Param_list->setThisElementPtr(fUML_Tests_GenerateListTestData_Param_list);
			fUML_Tests_GenerateListTestData_Param_list->setName("Param(list)");
			fUML_Tests_GenerateListTestData_Param_list->setVisibility(VisibilityKind::public_);
			fUML_Tests_GenerateListTestData_Param_list->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_GenerateListTestData_Param_list->setParameter(fUML_Tests_GenerateListTestData_list);
		fUML_Tests_GenerateListTestData->addNode(fUML_Tests_GenerateListTestData_Param_list);
			// ValueSpecificationAction Value(1)
			fUML_Tests_GenerateListTestData_Value_1->setThisExecutableNodePtr(fUML_Tests_GenerateListTestData_Value_1);
			fUML_Tests_GenerateListTestData_Value_1->setName("Value(1)");
			fUML_Tests_GenerateListTestData_Value_1->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger175
				fUML_Tests_GenerateListTestData_Value_1_LiteralInteger175->setThisElementPtr(fUML_Tests_GenerateListTestData_Value_1_LiteralInteger175);
				fUML_Tests_GenerateListTestData_Value_1_LiteralInteger175->setName("LiteralInteger175");
				fUML_Tests_GenerateListTestData_Value_1_LiteralInteger175->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateListTestData_Value_1_LiteralInteger175->setValue(1);
			fUML_Tests_GenerateListTestData_Value_1->setValue(fUML_Tests_GenerateListTestData_Value_1_LiteralInteger175);
				// OutputPin Value(1).result
				fUML_Tests_GenerateListTestData_Value_1_Value_1_result->setThisElementPtr(fUML_Tests_GenerateListTestData_Value_1_Value_1_result);
				fUML_Tests_GenerateListTestData_Value_1_Value_1_result->setName("Value(1).result");
				fUML_Tests_GenerateListTestData_Value_1_Value_1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateListTestData_Value_1_Value_1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_GenerateListTestData_Value_1->setResult(fUML_Tests_GenerateListTestData_Value_1_Value_1_result);
		fUML_Tests_GenerateListTestData->addNode(fUML_Tests_GenerateListTestData_Value_1);
			// ObjectFlow ObjectFlow155 from Value(2).result to Param(list)
			fUML_Tests_GenerateListTestData_ObjectFlow155->setThisActivityEdgePtr(fUML_Tests_GenerateListTestData_ObjectFlow155);
			fUML_Tests_GenerateListTestData_ObjectFlow155->setName("ObjectFlow155");
			fUML_Tests_GenerateListTestData_ObjectFlow155->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateListTestData_ObjectFlow155->setSource(fUML_Tests_GenerateListTestData_Value_2_Value_2_result);
			fUML_Tests_GenerateListTestData_ObjectFlow155->setTarget(fUML_Tests_GenerateListTestData_Param_list);
		fUML_Tests_GenerateListTestData->addEdge(fUML_Tests_GenerateListTestData_ObjectFlow155);
			// ObjectFlow ObjectFlow157 from Value(1).result to Param(list)
			fUML_Tests_GenerateListTestData_ObjectFlow157->setThisActivityEdgePtr(fUML_Tests_GenerateListTestData_ObjectFlow157);
			fUML_Tests_GenerateListTestData_ObjectFlow157->setName("ObjectFlow157");
			fUML_Tests_GenerateListTestData_ObjectFlow157->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateListTestData_ObjectFlow157->setSource(fUML_Tests_GenerateListTestData_Value_1_Value_1_result);
			fUML_Tests_GenerateListTestData_ObjectFlow157->setTarget(fUML_Tests_GenerateListTestData_Param_list);
		fUML_Tests_GenerateListTestData->addEdge(fUML_Tests_GenerateListTestData_ObjectFlow157);
			// ControlFlow ControlFlow167 from Value(1) to Value(2)
			fUML_Tests_GenerateListTestData_ControlFlow167->setThisActivityEdgePtr(fUML_Tests_GenerateListTestData_ControlFlow167);
			fUML_Tests_GenerateListTestData_ControlFlow167->setName("ControlFlow167");
			fUML_Tests_GenerateListTestData_ControlFlow167->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateListTestData_ControlFlow167->setSource(fUML_Tests_GenerateListTestData_Value_1);
			fUML_Tests_GenerateListTestData_ControlFlow167->setTarget(fUML_Tests_GenerateListTestData_Value_2);
		fUML_Tests_GenerateListTestData->addEdge(fUML_Tests_GenerateListTestData_ControlFlow167);
			// ControlFlow ControlFlow169 from Value(2) to Value(3)
			fUML_Tests_GenerateListTestData_ControlFlow169->setThisActivityEdgePtr(fUML_Tests_GenerateListTestData_ControlFlow169);
			fUML_Tests_GenerateListTestData_ControlFlow169->setName("ControlFlow169");
			fUML_Tests_GenerateListTestData_ControlFlow169->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateListTestData_ControlFlow169->setSource(fUML_Tests_GenerateListTestData_Value_2);
			fUML_Tests_GenerateListTestData_ControlFlow169->setTarget(fUML_Tests_GenerateListTestData_Value_3);
		fUML_Tests_GenerateListTestData->addEdge(fUML_Tests_GenerateListTestData_ControlFlow169);
			// ObjectFlow ObjectFlow171 from Value(3).result to Param(list)
			fUML_Tests_GenerateListTestData_ObjectFlow171->setThisActivityEdgePtr(fUML_Tests_GenerateListTestData_ObjectFlow171);
			fUML_Tests_GenerateListTestData_ObjectFlow171->setName("ObjectFlow171");
			fUML_Tests_GenerateListTestData_ObjectFlow171->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateListTestData_ObjectFlow171->setSource(fUML_Tests_GenerateListTestData_Value_3_Value_3_result);
			fUML_Tests_GenerateListTestData_ObjectFlow171->setTarget(fUML_Tests_GenerateListTestData_Param_list);
		fUML_Tests_GenerateListTestData->addEdge(fUML_Tests_GenerateListTestData_ObjectFlow171);
	fUML_Tests->addPackagedElement(fUML_Tests_GenerateListTestData);
		// Activity TestBooleanFunctions
		fUML_Tests_TestBooleanFunctions->setThisActivityPtr(fUML_Tests_TestBooleanFunctions);
		fUML_Tests_TestBooleanFunctions->setName("TestBooleanFunctions");
		fUML_Tests_TestBooleanFunctions->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestBooleanFunctions->isReentrant = false;
			// Parameter NotResult
			fUML_Tests_TestBooleanFunctions_NotResult->setThisElementPtr(fUML_Tests_TestBooleanFunctions_NotResult);
			fUML_Tests_TestBooleanFunctions_NotResult->setName("NotResult");
			fUML_Tests_TestBooleanFunctions_NotResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestBooleanFunctions_NotResult->setIsOrdered(true);
			fUML_Tests_TestBooleanFunctions_NotResult->setUpper(-1);
			fUML_Tests_TestBooleanFunctions_NotResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_NotResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestBooleanFunctions->addOwnedParameter(fUML_Tests_TestBooleanFunctions_NotResult);
			// Parameter AndResult
			fUML_Tests_TestBooleanFunctions_AndResult->setThisElementPtr(fUML_Tests_TestBooleanFunctions_AndResult);
			fUML_Tests_TestBooleanFunctions_AndResult->setName("AndResult");
			fUML_Tests_TestBooleanFunctions_AndResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestBooleanFunctions_AndResult->setIsOrdered(true);
			fUML_Tests_TestBooleanFunctions_AndResult->setUpper(-1);
			fUML_Tests_TestBooleanFunctions_AndResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_AndResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestBooleanFunctions->addOwnedParameter(fUML_Tests_TestBooleanFunctions_AndResult);
			// Parameter OrResult
			fUML_Tests_TestBooleanFunctions_OrResult->setThisElementPtr(fUML_Tests_TestBooleanFunctions_OrResult);
			fUML_Tests_TestBooleanFunctions_OrResult->setName("OrResult");
			fUML_Tests_TestBooleanFunctions_OrResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestBooleanFunctions_OrResult->setIsOrdered(true);
			fUML_Tests_TestBooleanFunctions_OrResult->setUpper(-1);
			fUML_Tests_TestBooleanFunctions_OrResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_OrResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestBooleanFunctions->addOwnedParameter(fUML_Tests_TestBooleanFunctions_OrResult);
			// Parameter ImpliesResult
			fUML_Tests_TestBooleanFunctions_ImpliesResult->setThisElementPtr(fUML_Tests_TestBooleanFunctions_ImpliesResult);
			fUML_Tests_TestBooleanFunctions_ImpliesResult->setName("ImpliesResult");
			fUML_Tests_TestBooleanFunctions_ImpliesResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestBooleanFunctions_ImpliesResult->setIsOrdered(true);
			fUML_Tests_TestBooleanFunctions_ImpliesResult->setUpper(-1);
			fUML_Tests_TestBooleanFunctions_ImpliesResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_ImpliesResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestBooleanFunctions->addOwnedParameter(fUML_Tests_TestBooleanFunctions_ImpliesResult);
			// Parameter XorResult
			fUML_Tests_TestBooleanFunctions_XorResult->setThisElementPtr(fUML_Tests_TestBooleanFunctions_XorResult);
			fUML_Tests_TestBooleanFunctions_XorResult->setName("XorResult");
			fUML_Tests_TestBooleanFunctions_XorResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestBooleanFunctions_XorResult->setIsOrdered(true);
			fUML_Tests_TestBooleanFunctions_XorResult->setUpper(-1);
			fUML_Tests_TestBooleanFunctions_XorResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_XorResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestBooleanFunctions->addOwnedParameter(fUML_Tests_TestBooleanFunctions_XorResult);
			// CallBehaviorAction GenData3
			fUML_Tests_TestBooleanFunctions_GenData3->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_GenData3);
			fUML_Tests_TestBooleanFunctions_GenData3->setName("GenData3");
			fUML_Tests_TestBooleanFunctions_GenData3->setVisibility(VisibilityKind::public_);
				// OutputPin GenData3.argumentData1
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1->setThisElementPtr(fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1);
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1->setName("GenData3.argumentData1");
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1->setUpper(4);
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1->setLower(4);
			fUML_Tests_TestBooleanFunctions_GenData3->addResult(fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1);
				// OutputPin GenData3.argumentData2
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2->setThisElementPtr(fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2);
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2->setName("GenData3.argumentData2");
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2->setUpper(4);
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2->setLower(4);
			fUML_Tests_TestBooleanFunctions_GenData3->addResult(fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2);
			fUML_Tests_TestBooleanFunctions_GenData3->setBehavior(fUML_Tests_GenerateBooleanTestData);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_GenData3);
			// CallBehaviorAction Call(And)
			fUML_Tests_TestBooleanFunctions_Call_And->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_Call_And);
			fUML_Tests_TestBooleanFunctions_Call_And->setName("Call(And)");
			fUML_Tests_TestBooleanFunctions_Call_And->setVisibility(VisibilityKind::public_);
				// OutputPin And.result
				fUML_Tests_TestBooleanFunctions_Call_And_And_result->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_And_And_result);
				fUML_Tests_TestBooleanFunctions_Call_And_And_result->setName("And.result");
				fUML_Tests_TestBooleanFunctions_Call_And_And_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_And_And_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_And->addResult(fUML_Tests_TestBooleanFunctions_Call_And_And_result);
			fUML_Tests_TestBooleanFunctions_Call_And->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_BooleanFunctions_And);
				// InputPin And.x
				fUML_Tests_TestBooleanFunctions_Call_And_And_x->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_And_And_x);
				fUML_Tests_TestBooleanFunctions_Call_And_And_x->setName("And.x");
				fUML_Tests_TestBooleanFunctions_Call_And_And_x->setVisibility(VisibilityKind::package);
				fUML_Tests_TestBooleanFunctions_Call_And_And_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_And->addArgument(fUML_Tests_TestBooleanFunctions_Call_And_And_x);
				// InputPin And.y
				fUML_Tests_TestBooleanFunctions_Call_And_And_y->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_And_And_y);
				fUML_Tests_TestBooleanFunctions_Call_And_And_y->setName("And.y");
				fUML_Tests_TestBooleanFunctions_Call_And_And_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_And_And_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_And->addArgument(fUML_Tests_TestBooleanFunctions_Call_And_And_y);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Call_And);
			// ActivityParameterNode Param(ImpliesResult)
			fUML_Tests_TestBooleanFunctions_Param_ImpliesResult->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Param_ImpliesResult);
			fUML_Tests_TestBooleanFunctions_Param_ImpliesResult->setName("Param(ImpliesResult)");
			fUML_Tests_TestBooleanFunctions_Param_ImpliesResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestBooleanFunctions_Param_ImpliesResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Param_ImpliesResult->setParameter(fUML_Tests_TestBooleanFunctions_ImpliesResult);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Param_ImpliesResult);
			// CallBehaviorAction GenData1
			fUML_Tests_TestBooleanFunctions_GenData1->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_GenData1);
			fUML_Tests_TestBooleanFunctions_GenData1->setName("GenData1");
			fUML_Tests_TestBooleanFunctions_GenData1->setVisibility(VisibilityKind::public_);
				// OutputPin GenData1.argumentData1
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1->setThisElementPtr(fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1);
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1->setName("GenData1.argumentData1");
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1->setUpper(4);
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1->setLower(4);
			fUML_Tests_TestBooleanFunctions_GenData1->addResult(fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1);
				// OutputPin GenData1.argumentData2
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2->setThisElementPtr(fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2);
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2->setName("GenData1.argumentData2");
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2->setUpper(4);
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2->setLower(4);
			fUML_Tests_TestBooleanFunctions_GenData1->addResult(fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2);
			fUML_Tests_TestBooleanFunctions_GenData1->setBehavior(fUML_Tests_GenerateBooleanTestData);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_GenData1);
			// ValueSpecificationAction Value(true)
			fUML_Tests_TestBooleanFunctions_Value_true->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_Value_true);
			fUML_Tests_TestBooleanFunctions_Value_true->setName("Value(true)");
			fUML_Tests_TestBooleanFunctions_Value_true->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean194
				fUML_Tests_TestBooleanFunctions_Value_true_LiteralBoolean194->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Value_true_LiteralBoolean194);
				fUML_Tests_TestBooleanFunctions_Value_true_LiteralBoolean194->setName("LiteralBoolean194");
				fUML_Tests_TestBooleanFunctions_Value_true_LiteralBoolean194->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Value_true_LiteralBoolean194->setValue(true);
			fUML_Tests_TestBooleanFunctions_Value_true->setValue(fUML_Tests_TestBooleanFunctions_Value_true_LiteralBoolean194);
				// OutputPin Value(true).result
				fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result);
				fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result->setName("Value(true).result");
				fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Value_true->setResult(fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Value_true);
			// ActivityParameterNode Param(OrResult)
			fUML_Tests_TestBooleanFunctions_Param_OrResult->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Param_OrResult);
			fUML_Tests_TestBooleanFunctions_Param_OrResult->setName("Param(OrResult)");
			fUML_Tests_TestBooleanFunctions_Param_OrResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestBooleanFunctions_Param_OrResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Param_OrResult->setParameter(fUML_Tests_TestBooleanFunctions_OrResult);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Param_OrResult);
			// CallBehaviorAction Call(Or)
			fUML_Tests_TestBooleanFunctions_Call_Or->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_Call_Or);
			fUML_Tests_TestBooleanFunctions_Call_Or->setName("Call(Or)");
			fUML_Tests_TestBooleanFunctions_Call_Or->setVisibility(VisibilityKind::public_);
				// OutputPin Or.result
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_result->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Or_Or_result);
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_result->setName("Or.result");
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Or->addResult(fUML_Tests_TestBooleanFunctions_Call_Or_Or_result);
			fUML_Tests_TestBooleanFunctions_Call_Or->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_BooleanFunctions_Or);
				// InputPin Or.x
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_x->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Or_Or_x);
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_x->setName("Or.x");
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Or->addArgument(fUML_Tests_TestBooleanFunctions_Call_Or_Or_x);
				// InputPin Or.y
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_y->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Or_Or_y);
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_y->setName("Or.y");
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Or->addArgument(fUML_Tests_TestBooleanFunctions_Call_Or_Or_y);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Call_Or);
			// CallBehaviorAction Call(Not)
			fUML_Tests_TestBooleanFunctions_Call_Not->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_Call_Not);
			fUML_Tests_TestBooleanFunctions_Call_Not->setName("Call(Not)");
			fUML_Tests_TestBooleanFunctions_Call_Not->setVisibility(VisibilityKind::public_);
				// OutputPin Not.result
				fUML_Tests_TestBooleanFunctions_Call_Not_Not_result->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Not_Not_result);
				fUML_Tests_TestBooleanFunctions_Call_Not_Not_result->setName("Not.result");
				fUML_Tests_TestBooleanFunctions_Call_Not_Not_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Not_Not_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Not->addResult(fUML_Tests_TestBooleanFunctions_Call_Not_Not_result);
			fUML_Tests_TestBooleanFunctions_Call_Not->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_BooleanFunctions_Not);
				// InputPin Not.x
				fUML_Tests_TestBooleanFunctions_Call_Not_Not_x->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Not_Not_x);
				fUML_Tests_TestBooleanFunctions_Call_Not_Not_x->setName("Not.x");
				fUML_Tests_TestBooleanFunctions_Call_Not_Not_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Not_Not_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Not->addArgument(fUML_Tests_TestBooleanFunctions_Call_Not_Not_x);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Call_Not);
			// CallBehaviorAction Call(Implies)
			fUML_Tests_TestBooleanFunctions_Call_Implies->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_Call_Implies);
			fUML_Tests_TestBooleanFunctions_Call_Implies->setName("Call(Implies)");
			fUML_Tests_TestBooleanFunctions_Call_Implies->setVisibility(VisibilityKind::public_);
				// OutputPin Implies.result
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result);
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result->setName("Implies.result");
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Implies->addResult(fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result);
			fUML_Tests_TestBooleanFunctions_Call_Implies->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_BooleanFunctions_Implies);
				// InputPin Implies.x
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x);
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x->setName("Implies.x");
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Implies->addArgument(fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x);
				// InputPin Implies.y
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y);
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y->setName("Implies.y");
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Implies->addArgument(fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Call_Implies);
			// ValueSpecificationAction Value(false)
			fUML_Tests_TestBooleanFunctions_Value_false->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_Value_false);
			fUML_Tests_TestBooleanFunctions_Value_false->setName("Value(false)");
			fUML_Tests_TestBooleanFunctions_Value_false->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean211
				fUML_Tests_TestBooleanFunctions_Value_false_LiteralBoolean211->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Value_false_LiteralBoolean211);
				fUML_Tests_TestBooleanFunctions_Value_false_LiteralBoolean211->setName("LiteralBoolean211");
				fUML_Tests_TestBooleanFunctions_Value_false_LiteralBoolean211->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Value_false_LiteralBoolean211->setValue(false);
			fUML_Tests_TestBooleanFunctions_Value_false->setValue(fUML_Tests_TestBooleanFunctions_Value_false_LiteralBoolean211);
				// OutputPin Value(false).result
				fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result);
				fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result->setName("Value(false).result");
				fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Value_false->setResult(fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Value_false);
			// ActivityParameterNode Param(NotResult)
			fUML_Tests_TestBooleanFunctions_Param_NotResult->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Param_NotResult);
			fUML_Tests_TestBooleanFunctions_Param_NotResult->setName("Param(NotResult)");
			fUML_Tests_TestBooleanFunctions_Param_NotResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestBooleanFunctions_Param_NotResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Param_NotResult->setParameter(fUML_Tests_TestBooleanFunctions_NotResult);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Param_NotResult);
			// CallBehaviorAction GenData4
			fUML_Tests_TestBooleanFunctions_GenData4->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_GenData4);
			fUML_Tests_TestBooleanFunctions_GenData4->setName("GenData4");
			fUML_Tests_TestBooleanFunctions_GenData4->setVisibility(VisibilityKind::public_);
				// OutputPin GenData4.argumentData1
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1->setThisElementPtr(fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1);
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1->setName("GenData4.argumentData1");
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1->setUpper(4);
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1->setLower(4);
			fUML_Tests_TestBooleanFunctions_GenData4->addResult(fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1);
				// OutputPin GenData4.argumentData2
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2->setThisElementPtr(fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2);
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2->setName("GenData4.argumentData2");
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2->setUpper(4);
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2->setLower(4);
			fUML_Tests_TestBooleanFunctions_GenData4->addResult(fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2);
			fUML_Tests_TestBooleanFunctions_GenData4->setBehavior(fUML_Tests_GenerateBooleanTestData);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_GenData4);
			// CallBehaviorAction GenData2
			fUML_Tests_TestBooleanFunctions_GenData2->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_GenData2);
			fUML_Tests_TestBooleanFunctions_GenData2->setName("GenData2");
			fUML_Tests_TestBooleanFunctions_GenData2->setVisibility(VisibilityKind::public_);
				// OutputPin GenData2.argumentData1
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1->setThisElementPtr(fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1);
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1->setName("GenData2.argumentData1");
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1->setUpper(4);
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1->setLower(4);
			fUML_Tests_TestBooleanFunctions_GenData2->addResult(fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1);
				// OutputPin GenData2.argumentData2
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2->setThisElementPtr(fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2);
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2->setName("GenData2.argumentData2");
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2->setUpper(4);
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2->setLower(4);
			fUML_Tests_TestBooleanFunctions_GenData2->addResult(fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2);
			fUML_Tests_TestBooleanFunctions_GenData2->setBehavior(fUML_Tests_GenerateBooleanTestData);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_GenData2);
			// ActivityParameterNode Param(XorResult)
			fUML_Tests_TestBooleanFunctions_Param_XorResult->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Param_XorResult);
			fUML_Tests_TestBooleanFunctions_Param_XorResult->setName("Param(XorResult)");
			fUML_Tests_TestBooleanFunctions_Param_XorResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestBooleanFunctions_Param_XorResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Param_XorResult->setParameter(fUML_Tests_TestBooleanFunctions_XorResult);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Param_XorResult);
			// ActivityParameterNode Param(AndResult)
			fUML_Tests_TestBooleanFunctions_Param_AndResult->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Param_AndResult);
			fUML_Tests_TestBooleanFunctions_Param_AndResult->setName("Param(AndResult)");
			fUML_Tests_TestBooleanFunctions_Param_AndResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestBooleanFunctions_Param_AndResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Param_AndResult->setParameter(fUML_Tests_TestBooleanFunctions_AndResult);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Param_AndResult);
			// CallBehaviorAction Call(Xor)
			fUML_Tests_TestBooleanFunctions_Call_Xor->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_Call_Xor);
			fUML_Tests_TestBooleanFunctions_Call_Xor->setName("Call(Xor)");
			fUML_Tests_TestBooleanFunctions_Call_Xor->setVisibility(VisibilityKind::public_);
				// OutputPin Xor.result
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result);
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result->setName("Xor.result");
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Xor->addResult(fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result);
			fUML_Tests_TestBooleanFunctions_Call_Xor->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_BooleanFunctions_Xor);
				// InputPin Xor.x
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x);
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x->setName("Xor.x");
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Xor->addArgument(fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x);
				// InputPin Xor.y
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y);
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y->setName("Xor.y");
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Xor->addArgument(fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Call_Xor);
			// ObjectFlow ObjectFlow240 from Or.result to Param(OrResult)
			fUML_Tests_TestBooleanFunctions_ObjectFlow240->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow240);
			fUML_Tests_TestBooleanFunctions_ObjectFlow240->setName("ObjectFlow240");
			fUML_Tests_TestBooleanFunctions_ObjectFlow240->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow240->setSource(fUML_Tests_TestBooleanFunctions_Call_Or_Or_result);
			fUML_Tests_TestBooleanFunctions_ObjectFlow240->setTarget(fUML_Tests_TestBooleanFunctions_Param_OrResult);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow240);
			// ObjectFlow ObjectFlow242 from GenData2.argumentData2 to Or.y
			fUML_Tests_TestBooleanFunctions_ObjectFlow242->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow242);
			fUML_Tests_TestBooleanFunctions_ObjectFlow242->setName("ObjectFlow242");
			fUML_Tests_TestBooleanFunctions_ObjectFlow242->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow242->setSource(fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2);
			fUML_Tests_TestBooleanFunctions_ObjectFlow242->setTarget(fUML_Tests_TestBooleanFunctions_Call_Or_Or_y);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow242);
			// ControlFlow ControlFlow186 from GenData3 to GenData4
			fUML_Tests_TestBooleanFunctions_ControlFlow186->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ControlFlow186);
			fUML_Tests_TestBooleanFunctions_ControlFlow186->setName("ControlFlow186");
			fUML_Tests_TestBooleanFunctions_ControlFlow186->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ControlFlow186->setSource(fUML_Tests_TestBooleanFunctions_GenData3);
			fUML_Tests_TestBooleanFunctions_ControlFlow186->setTarget(fUML_Tests_TestBooleanFunctions_GenData4);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ControlFlow186);
			// ObjectFlow ObjectFlow188 from Not.result to Param(NotResult)
			fUML_Tests_TestBooleanFunctions_ObjectFlow188->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow188);
			fUML_Tests_TestBooleanFunctions_ObjectFlow188->setName("ObjectFlow188");
			fUML_Tests_TestBooleanFunctions_ObjectFlow188->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow188->setSource(fUML_Tests_TestBooleanFunctions_Call_Not_Not_result);
			fUML_Tests_TestBooleanFunctions_ObjectFlow188->setTarget(fUML_Tests_TestBooleanFunctions_Param_NotResult);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow188);
			// ObjectFlow ObjectFlow244 from Implies.result to Param(ImpliesResult)
			fUML_Tests_TestBooleanFunctions_ObjectFlow244->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow244);
			fUML_Tests_TestBooleanFunctions_ObjectFlow244->setName("ObjectFlow244");
			fUML_Tests_TestBooleanFunctions_ObjectFlow244->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow244->setSource(fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result);
			fUML_Tests_TestBooleanFunctions_ObjectFlow244->setTarget(fUML_Tests_TestBooleanFunctions_Param_ImpliesResult);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow244);
			// ObjectFlow ObjectFlow201 from Value(false).result to Not.x
			fUML_Tests_TestBooleanFunctions_ObjectFlow201->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow201);
			fUML_Tests_TestBooleanFunctions_ObjectFlow201->setName("ObjectFlow201");
			fUML_Tests_TestBooleanFunctions_ObjectFlow201->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow201->setSource(fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result);
			fUML_Tests_TestBooleanFunctions_ObjectFlow201->setTarget(fUML_Tests_TestBooleanFunctions_Call_Not_Not_x);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow201);
			// ObjectFlow ObjectFlow256 from GenData1.argumentData1 to And.x
			fUML_Tests_TestBooleanFunctions_ObjectFlow256->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow256);
			fUML_Tests_TestBooleanFunctions_ObjectFlow256->setName("ObjectFlow256");
			fUML_Tests_TestBooleanFunctions_ObjectFlow256->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow256->setSource(fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1);
			fUML_Tests_TestBooleanFunctions_ObjectFlow256->setTarget(fUML_Tests_TestBooleanFunctions_Call_And_And_x);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow256);
			// ObjectFlow ObjectFlow258 from GenData4.argumentData2 to Xor.y
			fUML_Tests_TestBooleanFunctions_ObjectFlow258->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow258);
			fUML_Tests_TestBooleanFunctions_ObjectFlow258->setName("ObjectFlow258");
			fUML_Tests_TestBooleanFunctions_ObjectFlow258->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow258->setSource(fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2);
			fUML_Tests_TestBooleanFunctions_ObjectFlow258->setTarget(fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow258);
			// ObjectFlow ObjectFlow212 from And.result to Param(AndResult)
			fUML_Tests_TestBooleanFunctions_ObjectFlow212->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow212);
			fUML_Tests_TestBooleanFunctions_ObjectFlow212->setName("ObjectFlow212");
			fUML_Tests_TestBooleanFunctions_ObjectFlow212->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow212->setSource(fUML_Tests_TestBooleanFunctions_Call_And_And_result);
			fUML_Tests_TestBooleanFunctions_ObjectFlow212->setTarget(fUML_Tests_TestBooleanFunctions_Param_AndResult);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow212);
			// ControlFlow ControlFlow214 from Value(true) to Value(false)
			fUML_Tests_TestBooleanFunctions_ControlFlow214->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ControlFlow214);
			fUML_Tests_TestBooleanFunctions_ControlFlow214->setName("ControlFlow214");
			fUML_Tests_TestBooleanFunctions_ControlFlow214->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ControlFlow214->setSource(fUML_Tests_TestBooleanFunctions_Value_true);
			fUML_Tests_TestBooleanFunctions_ControlFlow214->setTarget(fUML_Tests_TestBooleanFunctions_Value_false);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ControlFlow214);
			// ObjectFlow ObjectFlow260 from Xor.result to Param(XorResult)
			fUML_Tests_TestBooleanFunctions_ObjectFlow260->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow260);
			fUML_Tests_TestBooleanFunctions_ObjectFlow260->setName("ObjectFlow260");
			fUML_Tests_TestBooleanFunctions_ObjectFlow260->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow260->setSource(fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result);
			fUML_Tests_TestBooleanFunctions_ObjectFlow260->setTarget(fUML_Tests_TestBooleanFunctions_Param_XorResult);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow260);
			// ObjectFlow ObjectFlow216 from Value(true).result to Not.x
			fUML_Tests_TestBooleanFunctions_ObjectFlow216->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow216);
			fUML_Tests_TestBooleanFunctions_ObjectFlow216->setName("ObjectFlow216");
			fUML_Tests_TestBooleanFunctions_ObjectFlow216->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow216->setSource(fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result);
			fUML_Tests_TestBooleanFunctions_ObjectFlow216->setTarget(fUML_Tests_TestBooleanFunctions_Call_Not_Not_x);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow216);
			// ControlFlow ControlFlow222 from GenData2 to GenData3
			fUML_Tests_TestBooleanFunctions_ControlFlow222->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ControlFlow222);
			fUML_Tests_TestBooleanFunctions_ControlFlow222->setName("ControlFlow222");
			fUML_Tests_TestBooleanFunctions_ControlFlow222->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ControlFlow222->setSource(fUML_Tests_TestBooleanFunctions_GenData2);
			fUML_Tests_TestBooleanFunctions_ControlFlow222->setTarget(fUML_Tests_TestBooleanFunctions_GenData3);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ControlFlow222);
			// ControlFlow ControlFlow224 from Value(false) to GenData1
			fUML_Tests_TestBooleanFunctions_ControlFlow224->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ControlFlow224);
			fUML_Tests_TestBooleanFunctions_ControlFlow224->setName("ControlFlow224");
			fUML_Tests_TestBooleanFunctions_ControlFlow224->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ControlFlow224->setSource(fUML_Tests_TestBooleanFunctions_Value_false);
			fUML_Tests_TestBooleanFunctions_ControlFlow224->setTarget(fUML_Tests_TestBooleanFunctions_GenData1);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ControlFlow224);
			// ObjectFlow ObjectFlow226 from GenData2.argumentData1 to Or.x
			fUML_Tests_TestBooleanFunctions_ObjectFlow226->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow226);
			fUML_Tests_TestBooleanFunctions_ObjectFlow226->setName("ObjectFlow226");
			fUML_Tests_TestBooleanFunctions_ObjectFlow226->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow226->setSource(fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1);
			fUML_Tests_TestBooleanFunctions_ObjectFlow226->setTarget(fUML_Tests_TestBooleanFunctions_Call_Or_Or_x);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow226);
			// ControlFlow ControlFlow268 from GenData1 to GenData2
			fUML_Tests_TestBooleanFunctions_ControlFlow268->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ControlFlow268);
			fUML_Tests_TestBooleanFunctions_ControlFlow268->setName("ControlFlow268");
			fUML_Tests_TestBooleanFunctions_ControlFlow268->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ControlFlow268->setSource(fUML_Tests_TestBooleanFunctions_GenData1);
			fUML_Tests_TestBooleanFunctions_ControlFlow268->setTarget(fUML_Tests_TestBooleanFunctions_GenData2);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ControlFlow268);
			// ObjectFlow ObjectFlow230 from GenData3.argumentData1 to Implies.x
			fUML_Tests_TestBooleanFunctions_ObjectFlow230->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow230);
			fUML_Tests_TestBooleanFunctions_ObjectFlow230->setName("ObjectFlow230");
			fUML_Tests_TestBooleanFunctions_ObjectFlow230->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow230->setSource(fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1);
			fUML_Tests_TestBooleanFunctions_ObjectFlow230->setTarget(fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow230);
			// ObjectFlow ObjectFlow270 from GenData4.argumentData1 to Xor.x
			fUML_Tests_TestBooleanFunctions_ObjectFlow270->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow270);
			fUML_Tests_TestBooleanFunctions_ObjectFlow270->setName("ObjectFlow270");
			fUML_Tests_TestBooleanFunctions_ObjectFlow270->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow270->setSource(fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1);
			fUML_Tests_TestBooleanFunctions_ObjectFlow270->setTarget(fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow270);
			// ObjectFlow ObjectFlow272 from GenData1.argumentData2 to And.y
			fUML_Tests_TestBooleanFunctions_ObjectFlow272->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow272);
			fUML_Tests_TestBooleanFunctions_ObjectFlow272->setName("ObjectFlow272");
			fUML_Tests_TestBooleanFunctions_ObjectFlow272->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow272->setSource(fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2);
			fUML_Tests_TestBooleanFunctions_ObjectFlow272->setTarget(fUML_Tests_TestBooleanFunctions_Call_And_And_y);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow272);
			// ObjectFlow ObjectFlow274 from GenData3.argumentData2 to Implies.y
			fUML_Tests_TestBooleanFunctions_ObjectFlow274->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow274);
			fUML_Tests_TestBooleanFunctions_ObjectFlow274->setName("ObjectFlow274");
			fUML_Tests_TestBooleanFunctions_ObjectFlow274->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow274->setSource(fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2);
			fUML_Tests_TestBooleanFunctions_ObjectFlow274->setTarget(fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow274);
	fUML_Tests->addPackagedElement(fUML_Tests_TestBooleanFunctions);
		// Activity TestNodeEnabler
		fUML_Tests_TestNodeEnabler->setThisActivityPtr(fUML_Tests_TestNodeEnabler);
		fUML_Tests_TestNodeEnabler->setName("TestNodeEnabler");
		fUML_Tests_TestNodeEnabler->setVisibility(VisibilityKind::public_);
			// Parameter output
			fUML_Tests_TestNodeEnabler_output->setThisElementPtr(fUML_Tests_TestNodeEnabler_output);
			fUML_Tests_TestNodeEnabler_output->setName("output");
			fUML_Tests_TestNodeEnabler_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestNodeEnabler_output->setLower(0);
			fUML_Tests_TestNodeEnabler_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestNodeEnabler_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestNodeEnabler->addOwnedParameter(fUML_Tests_TestNodeEnabler_output);
			// ActivityParameterNode outputNode
			fUML_Tests_TestNodeEnabler_outputNode->setThisElementPtr(fUML_Tests_TestNodeEnabler_outputNode);
			fUML_Tests_TestNodeEnabler_outputNode->setName("outputNode");
			fUML_Tests_TestNodeEnabler_outputNode->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestNodeEnabler_outputNode->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestNodeEnabler_outputNode->setParameter(fUML_Tests_TestNodeEnabler_output);
		fUML_Tests_TestNodeEnabler->addNode(fUML_Tests_TestNodeEnabler_outputNode);
			// ValueSpecificationAction Value(1)
			fUML_Tests_TestNodeEnabler_Value_1->setThisExecutableNodePtr(fUML_Tests_TestNodeEnabler_Value_1);
			fUML_Tests_TestNodeEnabler_Value_1->setName("Value(1)");
			fUML_Tests_TestNodeEnabler_Value_1->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger280
				fUML_Tests_TestNodeEnabler_Value_1_LiteralInteger280->setThisElementPtr(fUML_Tests_TestNodeEnabler_Value_1_LiteralInteger280);
				fUML_Tests_TestNodeEnabler_Value_1_LiteralInteger280->setName("LiteralInteger280");
				fUML_Tests_TestNodeEnabler_Value_1_LiteralInteger280->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestNodeEnabler_Value_1_LiteralInteger280->setValue(1);
			fUML_Tests_TestNodeEnabler_Value_1->setValue(fUML_Tests_TestNodeEnabler_Value_1_LiteralInteger280);
				// OutputPin Value(1).result
				fUML_Tests_TestNodeEnabler_Value_1_Value_1_result->setThisElementPtr(fUML_Tests_TestNodeEnabler_Value_1_Value_1_result);
				fUML_Tests_TestNodeEnabler_Value_1_Value_1_result->setName("Value(1).result");
				fUML_Tests_TestNodeEnabler_Value_1_Value_1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestNodeEnabler_Value_1_Value_1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestNodeEnabler_Value_1->setResult(fUML_Tests_TestNodeEnabler_Value_1_Value_1_result);
		fUML_Tests_TestNodeEnabler->addNode(fUML_Tests_TestNodeEnabler_Value_1);
			// CallBehaviorAction Call(NodeEnabler)
			fUML_Tests_TestNodeEnabler_Call_NodeEnabler->setThisExecutableNodePtr(fUML_Tests_TestNodeEnabler_Call_NodeEnabler);
			fUML_Tests_TestNodeEnabler_Call_NodeEnabler->setName("Call(NodeEnabler)");
			fUML_Tests_TestNodeEnabler_Call_NodeEnabler->setVisibility(VisibilityKind::public_);
				// OutputPin Call(NodeEnabler).output
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output->setThisElementPtr(fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output);
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output->setName("Call(NodeEnabler).output");
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output->setLower(0);
			fUML_Tests_TestNodeEnabler_Call_NodeEnabler->addResult(fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output);
			fUML_Tests_TestNodeEnabler_Call_NodeEnabler->setBehavior(fUML_Tests_NodeEnabler);
				// InputPin Call(NodeEnabler).input
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input->setThisElementPtr(fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input);
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input->setName("Call(NodeEnabler).input");
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input->setLower(0);
			fUML_Tests_TestNodeEnabler_Call_NodeEnabler->addArgument(fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input);
		fUML_Tests_TestNodeEnabler->addNode(fUML_Tests_TestNodeEnabler_Call_NodeEnabler);
			// ObjectFlow ObjectFlow278 from Value(1).result to Call(NodeEnabler).input
			fUML_Tests_TestNodeEnabler_ObjectFlow278->setThisActivityEdgePtr(fUML_Tests_TestNodeEnabler_ObjectFlow278);
			fUML_Tests_TestNodeEnabler_ObjectFlow278->setName("ObjectFlow278");
			fUML_Tests_TestNodeEnabler_ObjectFlow278->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestNodeEnabler_ObjectFlow278->setSource(fUML_Tests_TestNodeEnabler_Value_1_Value_1_result);
			fUML_Tests_TestNodeEnabler_ObjectFlow278->setTarget(fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input);
		fUML_Tests_TestNodeEnabler->addEdge(fUML_Tests_TestNodeEnabler_ObjectFlow278);
			// ObjectFlow ObjectFlow285 from Call(NodeEnabler).output to outputNode
			fUML_Tests_TestNodeEnabler_ObjectFlow285->setThisActivityEdgePtr(fUML_Tests_TestNodeEnabler_ObjectFlow285);
			fUML_Tests_TestNodeEnabler_ObjectFlow285->setName("ObjectFlow285");
			fUML_Tests_TestNodeEnabler_ObjectFlow285->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestNodeEnabler_ObjectFlow285->setSource(fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output);
			fUML_Tests_TestNodeEnabler_ObjectFlow285->setTarget(fUML_Tests_TestNodeEnabler_outputNode);
		fUML_Tests_TestNodeEnabler->addEdge(fUML_Tests_TestNodeEnabler_ObjectFlow285);
	fUML_Tests->addPackagedElement(fUML_Tests_TestNodeEnabler);
		// Activity TestIntegerFunctions
		fUML_Tests_TestIntegerFunctions->setThisActivityPtr(fUML_Tests_TestIntegerFunctions);
		fUML_Tests_TestIntegerFunctions->setName("TestIntegerFunctions");
		fUML_Tests_TestIntegerFunctions->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestIntegerFunctions->isReentrant = false;
			// Parameter NegResult
			fUML_Tests_TestIntegerFunctions_NegResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_NegResult);
			fUML_Tests_TestIntegerFunctions_NegResult->setName("NegResult");
			fUML_Tests_TestIntegerFunctions_NegResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_NegResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_NegResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerFunctions->addOwnedParameter(fUML_Tests_TestIntegerFunctions_NegResult);
			// Parameter PlusResult
			fUML_Tests_TestIntegerFunctions_PlusResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_PlusResult);
			fUML_Tests_TestIntegerFunctions_PlusResult->setName("PlusResult");
			fUML_Tests_TestIntegerFunctions_PlusResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_PlusResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_PlusResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerFunctions->addOwnedParameter(fUML_Tests_TestIntegerFunctions_PlusResult);
			// Parameter MinusResult
			fUML_Tests_TestIntegerFunctions_MinusResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_MinusResult);
			fUML_Tests_TestIntegerFunctions_MinusResult->setName("MinusResult");
			fUML_Tests_TestIntegerFunctions_MinusResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_MinusResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_MinusResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerFunctions->addOwnedParameter(fUML_Tests_TestIntegerFunctions_MinusResult);
			// Parameter TimesResult
			fUML_Tests_TestIntegerFunctions_TimesResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_TimesResult);
			fUML_Tests_TestIntegerFunctions_TimesResult->setName("TimesResult");
			fUML_Tests_TestIntegerFunctions_TimesResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_TimesResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_TimesResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerFunctions->addOwnedParameter(fUML_Tests_TestIntegerFunctions_TimesResult);
			// Parameter DivResult
			fUML_Tests_TestIntegerFunctions_DivResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_DivResult);
			fUML_Tests_TestIntegerFunctions_DivResult->setName("DivResult");
			fUML_Tests_TestIntegerFunctions_DivResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_DivResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_DivResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerFunctions->addOwnedParameter(fUML_Tests_TestIntegerFunctions_DivResult);
			// Parameter ModResult
			fUML_Tests_TestIntegerFunctions_ModResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_ModResult);
			fUML_Tests_TestIntegerFunctions_ModResult->setName("ModResult");
			fUML_Tests_TestIntegerFunctions_ModResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ModResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_ModResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerFunctions->addOwnedParameter(fUML_Tests_TestIntegerFunctions_ModResult);
			// Parameter MaxResult
			fUML_Tests_TestIntegerFunctions_MaxResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_MaxResult);
			fUML_Tests_TestIntegerFunctions_MaxResult->setName("MaxResult");
			fUML_Tests_TestIntegerFunctions_MaxResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_MaxResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_MaxResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerFunctions->addOwnedParameter(fUML_Tests_TestIntegerFunctions_MaxResult);
			// Parameter MinResult
			fUML_Tests_TestIntegerFunctions_MinResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_MinResult);
			fUML_Tests_TestIntegerFunctions_MinResult->setName("MinResult");
			fUML_Tests_TestIntegerFunctions_MinResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_MinResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_MinResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerFunctions->addOwnedParameter(fUML_Tests_TestIntegerFunctions_MinResult);
			// Parameter AbsResult
			fUML_Tests_TestIntegerFunctions_AbsResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_AbsResult);
			fUML_Tests_TestIntegerFunctions_AbsResult->setName("AbsResult");
			fUML_Tests_TestIntegerFunctions_AbsResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_AbsResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_AbsResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerFunctions->addOwnedParameter(fUML_Tests_TestIntegerFunctions_AbsResult);
			// ForkNode Fork(2)
			fUML_Tests_TestIntegerFunctions_Fork_2->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Fork_2);
			fUML_Tests_TestIntegerFunctions_Fork_2->setName("Fork(2)");
			fUML_Tests_TestIntegerFunctions_Fork_2->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Fork_2);
			// CallBehaviorAction Call(Abs)
			fUML_Tests_TestIntegerFunctions_Call_Abs->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Call_Abs);
			fUML_Tests_TestIntegerFunctions_Call_Abs->setName("Call(Abs)");
			fUML_Tests_TestIntegerFunctions_Call_Abs->setVisibility(VisibilityKind::public_);
				// OutputPin Abs.result
				fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result);
				fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result->setName("Abs.result");
				fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Abs->addResult(fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result);
			fUML_Tests_TestIntegerFunctions_Call_Abs->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_Abs);
				// InputPin Abs.x
				fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x);
				fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x->setName("Abs.x");
				fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Abs->addArgument(fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Call_Abs);
			// CallBehaviorAction Call(Plus)
			fUML_Tests_TestIntegerFunctions_Call_Plus->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Call_Plus);
			fUML_Tests_TestIntegerFunctions_Call_Plus->setName("Call(Plus)");
			fUML_Tests_TestIntegerFunctions_Call_Plus->setVisibility(VisibilityKind::public_);
				// OutputPin Plus.result
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result);
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result->setName("Plus.result");
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Plus->addResult(fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result);
			fUML_Tests_TestIntegerFunctions_Call_Plus->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_plus);
				// InputPin Plus.x
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x);
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x->setName("Plus.x");
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Plus->addArgument(fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x);
				// InputPin Plus.y
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y);
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y->setName("Plus.y");
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Plus->addArgument(fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Call_Plus);
			// ForkNode Fork(3)
			fUML_Tests_TestIntegerFunctions_Fork_3->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Fork_3);
			fUML_Tests_TestIntegerFunctions_Fork_3->setName("Fork(3)");
			fUML_Tests_TestIntegerFunctions_Fork_3->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Fork_3);
			// CallBehaviorAction Call(Div)
			fUML_Tests_TestIntegerFunctions_Call_Div->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Call_Div);
			fUML_Tests_TestIntegerFunctions_Call_Div->setName("Call(Div)");
			fUML_Tests_TestIntegerFunctions_Call_Div->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestIntegerFunctions_Call_Div_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Div_result);
				fUML_Tests_TestIntegerFunctions_Call_Div_result->setName("result");
				fUML_Tests_TestIntegerFunctions_Call_Div_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Div_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_TestIntegerFunctions_Call_Div_result->setLower(0);
			fUML_Tests_TestIntegerFunctions_Call_Div->addResult(fUML_Tests_TestIntegerFunctions_Call_Div_result);
			fUML_Tests_TestIntegerFunctions_Call_Div->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_Div);
				// InputPin Div.x
				fUML_Tests_TestIntegerFunctions_Call_Div_Div_x->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Div_Div_x);
				fUML_Tests_TestIntegerFunctions_Call_Div_Div_x->setName("Div.x");
				fUML_Tests_TestIntegerFunctions_Call_Div_Div_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Div_Div_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Div->addArgument(fUML_Tests_TestIntegerFunctions_Call_Div_Div_x);
				// InputPin Div.y
				fUML_Tests_TestIntegerFunctions_Call_Div_Div_y->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Div_Div_y);
				fUML_Tests_TestIntegerFunctions_Call_Div_Div_y->setName("Div.y");
				fUML_Tests_TestIntegerFunctions_Call_Div_Div_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Div_Div_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Div->addArgument(fUML_Tests_TestIntegerFunctions_Call_Div_Div_y);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Call_Div);
			// ActivityParameterNode Param(NegResult)
			fUML_Tests_TestIntegerFunctions_Param_NegResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Param_NegResult);
			fUML_Tests_TestIntegerFunctions_Param_NegResult->setName("Param(NegResult)");
			fUML_Tests_TestIntegerFunctions_Param_NegResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerFunctions_Param_NegResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Param_NegResult->setParameter(fUML_Tests_TestIntegerFunctions_NegResult);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Param_NegResult);
			// ActivityParameterNode Param(MinusResult)
			fUML_Tests_TestIntegerFunctions_Param_MinusResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Param_MinusResult);
			fUML_Tests_TestIntegerFunctions_Param_MinusResult->setName("Param(MinusResult)");
			fUML_Tests_TestIntegerFunctions_Param_MinusResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerFunctions_Param_MinusResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Param_MinusResult->setParameter(fUML_Tests_TestIntegerFunctions_MinusResult);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Param_MinusResult);
			// ValueSpecificationAction Value(3)
			fUML_Tests_TestIntegerFunctions_Value_3->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Value_3);
			fUML_Tests_TestIntegerFunctions_Value_3->setName("Value(3)");
			fUML_Tests_TestIntegerFunctions_Value_3->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger351
				fUML_Tests_TestIntegerFunctions_Value_3_LiteralInteger351->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Value_3_LiteralInteger351);
				fUML_Tests_TestIntegerFunctions_Value_3_LiteralInteger351->setName("LiteralInteger351");
				fUML_Tests_TestIntegerFunctions_Value_3_LiteralInteger351->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Value_3_LiteralInteger351->setValue(3);
			fUML_Tests_TestIntegerFunctions_Value_3->setValue(fUML_Tests_TestIntegerFunctions_Value_3_LiteralInteger351);
				// OutputPin Value(3).result
				fUML_Tests_TestIntegerFunctions_Value_3_Value_3_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Value_3_Value_3_result);
				fUML_Tests_TestIntegerFunctions_Value_3_Value_3_result->setName("Value(3).result");
				fUML_Tests_TestIntegerFunctions_Value_3_Value_3_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Value_3_Value_3_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Value_3->setResult(fUML_Tests_TestIntegerFunctions_Value_3_Value_3_result);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Value_3);
			// CallBehaviorAction Call(Min)
			fUML_Tests_TestIntegerFunctions_Call_Min->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Call_Min);
			fUML_Tests_TestIntegerFunctions_Call_Min->setName("Call(Min)");
			fUML_Tests_TestIntegerFunctions_Call_Min->setVisibility(VisibilityKind::public_);
				// OutputPin Min.result
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Min_Min_result);
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_result->setName("Min.result");
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Min->addResult(fUML_Tests_TestIntegerFunctions_Call_Min_Min_result);
			fUML_Tests_TestIntegerFunctions_Call_Min->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_Min);
				// InputPin Min.x
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_x->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Min_Min_x);
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_x->setName("Min.x");
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Min->addArgument(fUML_Tests_TestIntegerFunctions_Call_Min_Min_x);
				// InputPin Min.y
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_y->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Min_Min_y);
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_y->setName("Min.y");
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Min->addArgument(fUML_Tests_TestIntegerFunctions_Call_Min_Min_y);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Call_Min);
			// ActivityParameterNode Param(MinResult)
			fUML_Tests_TestIntegerFunctions_Param_MinResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Param_MinResult);
			fUML_Tests_TestIntegerFunctions_Param_MinResult->setName("Param(MinResult)");
			fUML_Tests_TestIntegerFunctions_Param_MinResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerFunctions_Param_MinResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Param_MinResult->setParameter(fUML_Tests_TestIntegerFunctions_MinResult);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Param_MinResult);
			// CallBehaviorAction Call(Times)
			fUML_Tests_TestIntegerFunctions_Call_Times->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Call_Times);
			fUML_Tests_TestIntegerFunctions_Call_Times->setName("Call(Times)");
			fUML_Tests_TestIntegerFunctions_Call_Times->setVisibility(VisibilityKind::public_);
				// OutputPin Times.result
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Times_Times_result);
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_result->setName("Times.result");
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Times->addResult(fUML_Tests_TestIntegerFunctions_Call_Times_Times_result);
			fUML_Tests_TestIntegerFunctions_Call_Times->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_times);
				// InputPin Times.x
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_x->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Times_Times_x);
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_x->setName("Times.x");
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Times->addArgument(fUML_Tests_TestIntegerFunctions_Call_Times_Times_x);
				// InputPin Times.y
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_y->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Times_Times_y);
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_y->setName("Times.y");
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Times->addArgument(fUML_Tests_TestIntegerFunctions_Call_Times_Times_y);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Call_Times);
			// CallBehaviorAction Call(Max)
			fUML_Tests_TestIntegerFunctions_Call_Max->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Call_Max);
			fUML_Tests_TestIntegerFunctions_Call_Max->setName("Call(Max)");
			fUML_Tests_TestIntegerFunctions_Call_Max->setVisibility(VisibilityKind::public_);
				// OutputPin Max.result
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Max_Max_result);
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_result->setName("Max.result");
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Max->addResult(fUML_Tests_TestIntegerFunctions_Call_Max_Max_result);
			fUML_Tests_TestIntegerFunctions_Call_Max->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_Max);
				// InputPin Max.x
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_x->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Max_Max_x);
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_x->setName("Max.x");
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Max->addArgument(fUML_Tests_TestIntegerFunctions_Call_Max_Max_x);
				// InputPin Max.y
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_y->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Max_Max_y);
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_y->setName("Max.y");
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Max->addArgument(fUML_Tests_TestIntegerFunctions_Call_Max_Max_y);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Call_Max);
			// ActivityParameterNode Param(MaxResult)
			fUML_Tests_TestIntegerFunctions_Param_MaxResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Param_MaxResult);
			fUML_Tests_TestIntegerFunctions_Param_MaxResult->setName("Param(MaxResult)");
			fUML_Tests_TestIntegerFunctions_Param_MaxResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerFunctions_Param_MaxResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Param_MaxResult->setParameter(fUML_Tests_TestIntegerFunctions_MaxResult);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Param_MaxResult);
			// ValueSpecificationAction Value(neg 2)
			fUML_Tests_TestIntegerFunctions_Value_neg_2->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Value_neg_2);
			fUML_Tests_TestIntegerFunctions_Value_neg_2->setName("Value(neg 2)");
			fUML_Tests_TestIntegerFunctions_Value_neg_2->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger390
				fUML_Tests_TestIntegerFunctions_Value_neg_2_LiteralInteger390->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Value_neg_2_LiteralInteger390);
				fUML_Tests_TestIntegerFunctions_Value_neg_2_LiteralInteger390->setName("LiteralInteger390");
				fUML_Tests_TestIntegerFunctions_Value_neg_2_LiteralInteger390->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Value_neg_2_LiteralInteger390->setValue(-2);
			fUML_Tests_TestIntegerFunctions_Value_neg_2->setValue(fUML_Tests_TestIntegerFunctions_Value_neg_2_LiteralInteger390);
				// OutputPin Value(-2).result
				fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result);
				fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result->setName("Value(-2).result");
				fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Value_neg_2->setResult(fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Value_neg_2);
			// ActivityParameterNode Param(ModResult)
			fUML_Tests_TestIntegerFunctions_Param_ModResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Param_ModResult);
			fUML_Tests_TestIntegerFunctions_Param_ModResult->setName("Param(ModResult)");
			fUML_Tests_TestIntegerFunctions_Param_ModResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerFunctions_Param_ModResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Param_ModResult->setParameter(fUML_Tests_TestIntegerFunctions_ModResult);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Param_ModResult);
			// ActivityParameterNode Param(AbsResult)
			fUML_Tests_TestIntegerFunctions_Param_AbsResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Param_AbsResult);
			fUML_Tests_TestIntegerFunctions_Param_AbsResult->setName("Param(AbsResult)");
			fUML_Tests_TestIntegerFunctions_Param_AbsResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerFunctions_Param_AbsResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Param_AbsResult->setParameter(fUML_Tests_TestIntegerFunctions_AbsResult);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Param_AbsResult);
			// ActivityParameterNode Param(PlusResult)
			fUML_Tests_TestIntegerFunctions_Param_PlusResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Param_PlusResult);
			fUML_Tests_TestIntegerFunctions_Param_PlusResult->setName("Param(PlusResult)");
			fUML_Tests_TestIntegerFunctions_Param_PlusResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerFunctions_Param_PlusResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Param_PlusResult->setParameter(fUML_Tests_TestIntegerFunctions_PlusResult);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Param_PlusResult);
			// ActivityParameterNode Param(DivResult)
			fUML_Tests_TestIntegerFunctions_Param_DivResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Param_DivResult);
			fUML_Tests_TestIntegerFunctions_Param_DivResult->setName("Param(DivResult)");
			fUML_Tests_TestIntegerFunctions_Param_DivResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerFunctions_Param_DivResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Param_DivResult->setParameter(fUML_Tests_TestIntegerFunctions_DivResult);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Param_DivResult);
			// ActivityParameterNode Param(TimesResult)
			fUML_Tests_TestIntegerFunctions_Param_TimesResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Param_TimesResult);
			fUML_Tests_TestIntegerFunctions_Param_TimesResult->setName("Param(TimesResult)");
			fUML_Tests_TestIntegerFunctions_Param_TimesResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerFunctions_Param_TimesResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Param_TimesResult->setParameter(fUML_Tests_TestIntegerFunctions_TimesResult);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Param_TimesResult);
			// CallBehaviorAction Call(Mod)
			fUML_Tests_TestIntegerFunctions_Call_Mod->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Call_Mod);
			fUML_Tests_TestIntegerFunctions_Call_Mod->setName("Call(Mod)");
			fUML_Tests_TestIntegerFunctions_Call_Mod->setVisibility(VisibilityKind::public_);
				// OutputPin Mod.result
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result);
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result->setName("Mod.result");
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Mod->addResult(fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result);
			fUML_Tests_TestIntegerFunctions_Call_Mod->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_Mod);
				// InputPin Mod.x
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x);
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x->setName("Mod.x");
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Mod->addArgument(fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x);
				// InputPin Mod.y
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y);
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y->setName("Mod.y");
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Mod->addArgument(fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Call_Mod);
			// CallBehaviorAction Call(Minus)
			fUML_Tests_TestIntegerFunctions_Call_Minus->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Call_Minus);
			fUML_Tests_TestIntegerFunctions_Call_Minus->setName("Call(Minus)");
			fUML_Tests_TestIntegerFunctions_Call_Minus->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestIntegerFunctions_Call_Minus_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Minus_result);
				fUML_Tests_TestIntegerFunctions_Call_Minus_result->setName("result");
				fUML_Tests_TestIntegerFunctions_Call_Minus_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Minus_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Minus->addResult(fUML_Tests_TestIntegerFunctions_Call_Minus_result);
			fUML_Tests_TestIntegerFunctions_Call_Minus->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_minus);
				// InputPin x
				fUML_Tests_TestIntegerFunctions_Call_Minus_x->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Minus_x);
				fUML_Tests_TestIntegerFunctions_Call_Minus_x->setName("x");
				fUML_Tests_TestIntegerFunctions_Call_Minus_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Minus_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Minus->addArgument(fUML_Tests_TestIntegerFunctions_Call_Minus_x);
				// InputPin y
				fUML_Tests_TestIntegerFunctions_Call_Minus_y->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Minus_y);
				fUML_Tests_TestIntegerFunctions_Call_Minus_y->setName("y");
				fUML_Tests_TestIntegerFunctions_Call_Minus_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Minus_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Minus->addArgument(fUML_Tests_TestIntegerFunctions_Call_Minus_y);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Call_Minus);
			// ValueSpecificationAction Value(2)
			fUML_Tests_TestIntegerFunctions_Value_2->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Value_2);
			fUML_Tests_TestIntegerFunctions_Value_2->setName("Value(2)");
			fUML_Tests_TestIntegerFunctions_Value_2->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger305
				fUML_Tests_TestIntegerFunctions_Value_2_LiteralInteger305->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Value_2_LiteralInteger305);
				fUML_Tests_TestIntegerFunctions_Value_2_LiteralInteger305->setName("LiteralInteger305");
				fUML_Tests_TestIntegerFunctions_Value_2_LiteralInteger305->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Value_2_LiteralInteger305->setValue(2);
			fUML_Tests_TestIntegerFunctions_Value_2->setValue(fUML_Tests_TestIntegerFunctions_Value_2_LiteralInteger305);
				// OutputPin Value(2).result
				fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result);
				fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result->setName("Value(2).result");
				fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Value_2->setResult(fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Value_2);
			// CallBehaviorAction Call(Neg)
			fUML_Tests_TestIntegerFunctions_Call_Neg->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Call_Neg);
			fUML_Tests_TestIntegerFunctions_Call_Neg->setName("Call(Neg)");
			fUML_Tests_TestIntegerFunctions_Call_Neg->setVisibility(VisibilityKind::public_);
				// OutputPin Neg.result
				fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result);
				fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result->setName("Neg.result");
				fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Neg->addResult(fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result);
			fUML_Tests_TestIntegerFunctions_Call_Neg->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_Neg);
				// InputPin Neg.x
				fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x);
				fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x->setName("Neg.x");
				fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Neg->addArgument(fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Call_Neg);
			// ObjectFlow ObjectFlow347 from Fork(3) to Mod.x
			fUML_Tests_TestIntegerFunctions_ObjectFlow347->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow347);
			fUML_Tests_TestIntegerFunctions_ObjectFlow347->setName("ObjectFlow347");
			fUML_Tests_TestIntegerFunctions_ObjectFlow347->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow347->setSource(fUML_Tests_TestIntegerFunctions_Fork_3);
			fUML_Tests_TestIntegerFunctions_ObjectFlow347->setTarget(fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow347);
			// ObjectFlow ObjectFlow349 from Fork(2) to y
			fUML_Tests_TestIntegerFunctions_ObjectFlow349->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow349);
			fUML_Tests_TestIntegerFunctions_ObjectFlow349->setName("ObjectFlow349");
			fUML_Tests_TestIntegerFunctions_ObjectFlow349->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow349->setSource(fUML_Tests_TestIntegerFunctions_Fork_2);
			fUML_Tests_TestIntegerFunctions_ObjectFlow349->setTarget(fUML_Tests_TestIntegerFunctions_Call_Minus_y);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow349);
			// ControlFlow ControlFlow352 from Call(Times) to Call(Div)
			fUML_Tests_TestIntegerFunctions_ControlFlow352->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ControlFlow352);
			fUML_Tests_TestIntegerFunctions_ControlFlow352->setName("ControlFlow352");
			fUML_Tests_TestIntegerFunctions_ControlFlow352->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ControlFlow352->setSource(fUML_Tests_TestIntegerFunctions_Call_Times);
			fUML_Tests_TestIntegerFunctions_ControlFlow352->setTarget(fUML_Tests_TestIntegerFunctions_Call_Div);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ControlFlow352);
			// ObjectFlow ObjectFlow293 from Value(3).result to Fork(3)
			fUML_Tests_TestIntegerFunctions_ObjectFlow293->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow293);
			fUML_Tests_TestIntegerFunctions_ObjectFlow293->setName("ObjectFlow293");
			fUML_Tests_TestIntegerFunctions_ObjectFlow293->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow293->setSource(fUML_Tests_TestIntegerFunctions_Value_3_Value_3_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow293->setTarget(fUML_Tests_TestIntegerFunctions_Fork_3);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow293);
			// ObjectFlow ObjectFlow354 from Fork(3) to Times.x
			fUML_Tests_TestIntegerFunctions_ObjectFlow354->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow354);
			fUML_Tests_TestIntegerFunctions_ObjectFlow354->setName("ObjectFlow354");
			fUML_Tests_TestIntegerFunctions_ObjectFlow354->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow354->setSource(fUML_Tests_TestIntegerFunctions_Fork_3);
			fUML_Tests_TestIntegerFunctions_ObjectFlow354->setTarget(fUML_Tests_TestIntegerFunctions_Call_Times_Times_x);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow354);
			// ObjectFlow ObjectFlow356 from Times.result to Param(TimesResult)
			fUML_Tests_TestIntegerFunctions_ObjectFlow356->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow356);
			fUML_Tests_TestIntegerFunctions_ObjectFlow356->setName("ObjectFlow356");
			fUML_Tests_TestIntegerFunctions_ObjectFlow356->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow356->setSource(fUML_Tests_TestIntegerFunctions_Call_Times_Times_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow356->setTarget(fUML_Tests_TestIntegerFunctions_Param_TimesResult);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow356);
			// ObjectFlow ObjectFlow295 from Fork(2) to Max.y
			fUML_Tests_TestIntegerFunctions_ObjectFlow295->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow295);
			fUML_Tests_TestIntegerFunctions_ObjectFlow295->setName("ObjectFlow295");
			fUML_Tests_TestIntegerFunctions_ObjectFlow295->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow295->setSource(fUML_Tests_TestIntegerFunctions_Fork_2);
			fUML_Tests_TestIntegerFunctions_ObjectFlow295->setTarget(fUML_Tests_TestIntegerFunctions_Call_Max_Max_y);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow295);
			// ObjectFlow ObjectFlow297 from Fork(3) to Plus.x
			fUML_Tests_TestIntegerFunctions_ObjectFlow297->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow297);
			fUML_Tests_TestIntegerFunctions_ObjectFlow297->setName("ObjectFlow297");
			fUML_Tests_TestIntegerFunctions_ObjectFlow297->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow297->setSource(fUML_Tests_TestIntegerFunctions_Fork_3);
			fUML_Tests_TestIntegerFunctions_ObjectFlow297->setTarget(fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow297);
			// ControlFlow ControlFlow299 from Call(Div) to Call(Mod)
			fUML_Tests_TestIntegerFunctions_ControlFlow299->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ControlFlow299);
			fUML_Tests_TestIntegerFunctions_ControlFlow299->setName("ControlFlow299");
			fUML_Tests_TestIntegerFunctions_ControlFlow299->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ControlFlow299->setSource(fUML_Tests_TestIntegerFunctions_Call_Div);
			fUML_Tests_TestIntegerFunctions_ControlFlow299->setTarget(fUML_Tests_TestIntegerFunctions_Call_Mod);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ControlFlow299);
			// ControlFlow ControlFlow301 from Call(Neg) to Call(Plus)
			fUML_Tests_TestIntegerFunctions_ControlFlow301->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ControlFlow301);
			fUML_Tests_TestIntegerFunctions_ControlFlow301->setName("ControlFlow301");
			fUML_Tests_TestIntegerFunctions_ControlFlow301->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ControlFlow301->setSource(fUML_Tests_TestIntegerFunctions_Call_Neg);
			fUML_Tests_TestIntegerFunctions_ControlFlow301->setTarget(fUML_Tests_TestIntegerFunctions_Call_Plus);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ControlFlow301);
			// ObjectFlow ObjectFlow358 from Fork(2) to Div.y
			fUML_Tests_TestIntegerFunctions_ObjectFlow358->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow358);
			fUML_Tests_TestIntegerFunctions_ObjectFlow358->setName("ObjectFlow358");
			fUML_Tests_TestIntegerFunctions_ObjectFlow358->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow358->setSource(fUML_Tests_TestIntegerFunctions_Fork_2);
			fUML_Tests_TestIntegerFunctions_ObjectFlow358->setTarget(fUML_Tests_TestIntegerFunctions_Call_Div_Div_y);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow358);
			// ObjectFlow ObjectFlow303 from Fork(2) to Times.y
			fUML_Tests_TestIntegerFunctions_ObjectFlow303->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow303);
			fUML_Tests_TestIntegerFunctions_ObjectFlow303->setName("ObjectFlow303");
			fUML_Tests_TestIntegerFunctions_ObjectFlow303->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow303->setSource(fUML_Tests_TestIntegerFunctions_Fork_2);
			fUML_Tests_TestIntegerFunctions_ObjectFlow303->setTarget(fUML_Tests_TestIntegerFunctions_Call_Times_Times_y);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow303);
			// ObjectFlow ObjectFlow360 from result to Param(MinusResult)
			fUML_Tests_TestIntegerFunctions_ObjectFlow360->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow360);
			fUML_Tests_TestIntegerFunctions_ObjectFlow360->setName("ObjectFlow360");
			fUML_Tests_TestIntegerFunctions_ObjectFlow360->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow360->setSource(fUML_Tests_TestIntegerFunctions_Call_Minus_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow360->setTarget(fUML_Tests_TestIntegerFunctions_Param_MinusResult);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow360);
			// ObjectFlow ObjectFlow368 from Value(-2).result to Abs.x
			fUML_Tests_TestIntegerFunctions_ObjectFlow368->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow368);
			fUML_Tests_TestIntegerFunctions_ObjectFlow368->setName("ObjectFlow368");
			fUML_Tests_TestIntegerFunctions_ObjectFlow368->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow368->setSource(fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow368->setTarget(fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow368);
			// ObjectFlow ObjectFlow317 from Fork(2) to Mod.y
			fUML_Tests_TestIntegerFunctions_ObjectFlow317->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow317);
			fUML_Tests_TestIntegerFunctions_ObjectFlow317->setName("ObjectFlow317");
			fUML_Tests_TestIntegerFunctions_ObjectFlow317->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow317->setSource(fUML_Tests_TestIntegerFunctions_Fork_2);
			fUML_Tests_TestIntegerFunctions_ObjectFlow317->setTarget(fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow317);
			// ObjectFlow ObjectFlow325 from Value(2).result to Fork(2)
			fUML_Tests_TestIntegerFunctions_ObjectFlow325->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow325);
			fUML_Tests_TestIntegerFunctions_ObjectFlow325->setName("ObjectFlow325");
			fUML_Tests_TestIntegerFunctions_ObjectFlow325->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow325->setSource(fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow325->setTarget(fUML_Tests_TestIntegerFunctions_Fork_2);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow325);
			// ObjectFlow ObjectFlow376 from Min.result to Param(MinResult)
			fUML_Tests_TestIntegerFunctions_ObjectFlow376->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow376);
			fUML_Tests_TestIntegerFunctions_ObjectFlow376->setName("ObjectFlow376");
			fUML_Tests_TestIntegerFunctions_ObjectFlow376->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow376->setSource(fUML_Tests_TestIntegerFunctions_Call_Min_Min_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow376->setTarget(fUML_Tests_TestIntegerFunctions_Param_MinResult);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow376);
			// ControlFlow ControlFlow378 from Call(Plus) to Call(Minus)
			fUML_Tests_TestIntegerFunctions_ControlFlow378->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ControlFlow378);
			fUML_Tests_TestIntegerFunctions_ControlFlow378->setName("ControlFlow378");
			fUML_Tests_TestIntegerFunctions_ControlFlow378->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ControlFlow378->setSource(fUML_Tests_TestIntegerFunctions_Call_Plus);
			fUML_Tests_TestIntegerFunctions_ControlFlow378->setTarget(fUML_Tests_TestIntegerFunctions_Call_Minus);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ControlFlow378);
			// ControlFlow ControlFlow386 from Call(Max) to Call(Min)
			fUML_Tests_TestIntegerFunctions_ControlFlow386->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ControlFlow386);
			fUML_Tests_TestIntegerFunctions_ControlFlow386->setName("ControlFlow386");
			fUML_Tests_TestIntegerFunctions_ControlFlow386->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ControlFlow386->setSource(fUML_Tests_TestIntegerFunctions_Call_Max);
			fUML_Tests_TestIntegerFunctions_ControlFlow386->setTarget(fUML_Tests_TestIntegerFunctions_Call_Min);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ControlFlow386);
			// ObjectFlow ObjectFlow388 from Fork(3) to Neg.x
			fUML_Tests_TestIntegerFunctions_ObjectFlow388->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow388);
			fUML_Tests_TestIntegerFunctions_ObjectFlow388->setName("ObjectFlow388");
			fUML_Tests_TestIntegerFunctions_ObjectFlow388->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow388->setSource(fUML_Tests_TestIntegerFunctions_Fork_3);
			fUML_Tests_TestIntegerFunctions_ObjectFlow388->setTarget(fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow388);
			// ObjectFlow ObjectFlow327 from Fork(2) to Plus.y
			fUML_Tests_TestIntegerFunctions_ObjectFlow327->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow327);
			fUML_Tests_TestIntegerFunctions_ObjectFlow327->setName("ObjectFlow327");
			fUML_Tests_TestIntegerFunctions_ObjectFlow327->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow327->setSource(fUML_Tests_TestIntegerFunctions_Fork_2);
			fUML_Tests_TestIntegerFunctions_ObjectFlow327->setTarget(fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow327);
			// ObjectFlow ObjectFlow329 from Fork(3) to Min.x
			fUML_Tests_TestIntegerFunctions_ObjectFlow329->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow329);
			fUML_Tests_TestIntegerFunctions_ObjectFlow329->setName("ObjectFlow329");
			fUML_Tests_TestIntegerFunctions_ObjectFlow329->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow329->setSource(fUML_Tests_TestIntegerFunctions_Fork_3);
			fUML_Tests_TestIntegerFunctions_ObjectFlow329->setTarget(fUML_Tests_TestIntegerFunctions_Call_Min_Min_x);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow329);
			// ObjectFlow ObjectFlow331 from Fork(2) to Min.y
			fUML_Tests_TestIntegerFunctions_ObjectFlow331->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow331);
			fUML_Tests_TestIntegerFunctions_ObjectFlow331->setName("ObjectFlow331");
			fUML_Tests_TestIntegerFunctions_ObjectFlow331->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow331->setSource(fUML_Tests_TestIntegerFunctions_Fork_2);
			fUML_Tests_TestIntegerFunctions_ObjectFlow331->setTarget(fUML_Tests_TestIntegerFunctions_Call_Min_Min_y);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow331);
			// ObjectFlow ObjectFlow333 from Max.result to Param(MaxResult)
			fUML_Tests_TestIntegerFunctions_ObjectFlow333->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow333);
			fUML_Tests_TestIntegerFunctions_ObjectFlow333->setName("ObjectFlow333");
			fUML_Tests_TestIntegerFunctions_ObjectFlow333->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow333->setSource(fUML_Tests_TestIntegerFunctions_Call_Max_Max_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow333->setTarget(fUML_Tests_TestIntegerFunctions_Param_MaxResult);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow333);
			// ObjectFlow ObjectFlow393 from Plus.result to Param(PlusResult)
			fUML_Tests_TestIntegerFunctions_ObjectFlow393->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow393);
			fUML_Tests_TestIntegerFunctions_ObjectFlow393->setName("ObjectFlow393");
			fUML_Tests_TestIntegerFunctions_ObjectFlow393->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow393->setSource(fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow393->setTarget(fUML_Tests_TestIntegerFunctions_Param_PlusResult);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow393);
			// ObjectFlow ObjectFlow395 from result to Param(DivResult)
			fUML_Tests_TestIntegerFunctions_ObjectFlow395->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow395);
			fUML_Tests_TestIntegerFunctions_ObjectFlow395->setName("ObjectFlow395");
			fUML_Tests_TestIntegerFunctions_ObjectFlow395->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow395->setSource(fUML_Tests_TestIntegerFunctions_Call_Div_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow395->setTarget(fUML_Tests_TestIntegerFunctions_Param_DivResult);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow395);
			// ControlFlow ControlFlow397 from Call(Min) to Call(Abs)
			fUML_Tests_TestIntegerFunctions_ControlFlow397->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ControlFlow397);
			fUML_Tests_TestIntegerFunctions_ControlFlow397->setName("ControlFlow397");
			fUML_Tests_TestIntegerFunctions_ControlFlow397->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ControlFlow397->setSource(fUML_Tests_TestIntegerFunctions_Call_Min);
			fUML_Tests_TestIntegerFunctions_ControlFlow397->setTarget(fUML_Tests_TestIntegerFunctions_Call_Abs);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ControlFlow397);
			// ControlFlow ControlFlow399 from Call(Minus) to Call(Times)
			fUML_Tests_TestIntegerFunctions_ControlFlow399->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ControlFlow399);
			fUML_Tests_TestIntegerFunctions_ControlFlow399->setName("ControlFlow399");
			fUML_Tests_TestIntegerFunctions_ControlFlow399->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ControlFlow399->setSource(fUML_Tests_TestIntegerFunctions_Call_Minus);
			fUML_Tests_TestIntegerFunctions_ControlFlow399->setTarget(fUML_Tests_TestIntegerFunctions_Call_Times);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ControlFlow399);
			// ObjectFlow ObjectFlow407 from Fork(3) to x
			fUML_Tests_TestIntegerFunctions_ObjectFlow407->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow407);
			fUML_Tests_TestIntegerFunctions_ObjectFlow407->setName("ObjectFlow407");
			fUML_Tests_TestIntegerFunctions_ObjectFlow407->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow407->setSource(fUML_Tests_TestIntegerFunctions_Fork_3);
			fUML_Tests_TestIntegerFunctions_ObjectFlow407->setTarget(fUML_Tests_TestIntegerFunctions_Call_Minus_x);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow407);
			// ObjectFlow ObjectFlow335 from Abs.result to Param(AbsResult)
			fUML_Tests_TestIntegerFunctions_ObjectFlow335->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow335);
			fUML_Tests_TestIntegerFunctions_ObjectFlow335->setName("ObjectFlow335");
			fUML_Tests_TestIntegerFunctions_ObjectFlow335->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow335->setSource(fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow335->setTarget(fUML_Tests_TestIntegerFunctions_Param_AbsResult);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow335);
			// ObjectFlow ObjectFlow337 from Neg.result to Param(NegResult)
			fUML_Tests_TestIntegerFunctions_ObjectFlow337->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow337);
			fUML_Tests_TestIntegerFunctions_ObjectFlow337->setName("ObjectFlow337");
			fUML_Tests_TestIntegerFunctions_ObjectFlow337->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow337->setSource(fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow337->setTarget(fUML_Tests_TestIntegerFunctions_Param_NegResult);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow337);
			// ObjectFlow ObjectFlow339 from Mod.result to Param(ModResult)
			fUML_Tests_TestIntegerFunctions_ObjectFlow339->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow339);
			fUML_Tests_TestIntegerFunctions_ObjectFlow339->setName("ObjectFlow339");
			fUML_Tests_TestIntegerFunctions_ObjectFlow339->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow339->setSource(fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow339->setTarget(fUML_Tests_TestIntegerFunctions_Param_ModResult);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow339);
			// ObjectFlow ObjectFlow409 from Fork(3) to Div.x
			fUML_Tests_TestIntegerFunctions_ObjectFlow409->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow409);
			fUML_Tests_TestIntegerFunctions_ObjectFlow409->setName("ObjectFlow409");
			fUML_Tests_TestIntegerFunctions_ObjectFlow409->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow409->setSource(fUML_Tests_TestIntegerFunctions_Fork_3);
			fUML_Tests_TestIntegerFunctions_ObjectFlow409->setTarget(fUML_Tests_TestIntegerFunctions_Call_Div_Div_x);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow409);
			// ObjectFlow ObjectFlow411 from Fork(3) to Max.x
			fUML_Tests_TestIntegerFunctions_ObjectFlow411->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow411);
			fUML_Tests_TestIntegerFunctions_ObjectFlow411->setName("ObjectFlow411");
			fUML_Tests_TestIntegerFunctions_ObjectFlow411->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow411->setSource(fUML_Tests_TestIntegerFunctions_Fork_3);
			fUML_Tests_TestIntegerFunctions_ObjectFlow411->setTarget(fUML_Tests_TestIntegerFunctions_Call_Max_Max_x);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow411);
			// ControlFlow ControlFlow341 from Call(Mod) to Call(Max)
			fUML_Tests_TestIntegerFunctions_ControlFlow341->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ControlFlow341);
			fUML_Tests_TestIntegerFunctions_ControlFlow341->setName("ControlFlow341");
			fUML_Tests_TestIntegerFunctions_ControlFlow341->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ControlFlow341->setSource(fUML_Tests_TestIntegerFunctions_Call_Mod);
			fUML_Tests_TestIntegerFunctions_ControlFlow341->setTarget(fUML_Tests_TestIntegerFunctions_Call_Max);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ControlFlow341);
	fUML_Tests->addPackagedElement(fUML_Tests_TestIntegerFunctions);
		// Activity TestUnlimitedNaturalFunctions
		fUML_Tests_TestUnlimitedNaturalFunctions->setThisActivityPtr(fUML_Tests_TestUnlimitedNaturalFunctions);
		fUML_Tests_TestUnlimitedNaturalFunctions->setName("TestUnlimitedNaturalFunctions");
		fUML_Tests_TestUnlimitedNaturalFunctions->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestUnlimitedNaturalFunctions->isReentrant = false;
			// Parameter LTResult
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_LTResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResult->setName("LTResult");
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestUnlimitedNaturalFunctions->addOwnedParameter(fUML_Tests_TestUnlimitedNaturalFunctions_LTResult);
			// Parameter LEResult
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_LEResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResult->setName("LEResult");
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestUnlimitedNaturalFunctions->addOwnedParameter(fUML_Tests_TestUnlimitedNaturalFunctions_LEResult);
			// Parameter GTResult
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_GTResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResult->setName("GTResult");
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestUnlimitedNaturalFunctions->addOwnedParameter(fUML_Tests_TestUnlimitedNaturalFunctions_GTResult);
			// Parameter GEResult
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_GEResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResult->setName("GEResult");
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestUnlimitedNaturalFunctions->addOwnedParameter(fUML_Tests_TestUnlimitedNaturalFunctions_GEResult);
			// Parameter LTResult*
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResulttimes->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_LTResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResulttimes->setName("LTResult*");
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResulttimes->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResulttimes->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResulttimes->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestUnlimitedNaturalFunctions->addOwnedParameter(fUML_Tests_TestUnlimitedNaturalFunctions_LTResulttimes);
			// Parameter LEResult*
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResulttimes->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_LEResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResulttimes->setName("LEResult*");
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResulttimes->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResulttimes->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResulttimes->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestUnlimitedNaturalFunctions->addOwnedParameter(fUML_Tests_TestUnlimitedNaturalFunctions_LEResulttimes);
			// Parameter GTResult*
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResulttimes->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_GTResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResulttimes->setName("GTResult*");
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResulttimes->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResulttimes->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResulttimes->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestUnlimitedNaturalFunctions->addOwnedParameter(fUML_Tests_TestUnlimitedNaturalFunctions_GTResulttimes);
			// Parameter GEResult*
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResulttimes->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_GEResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResulttimes->setName("GEResult*");
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResulttimes->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResulttimes->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResulttimes->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestUnlimitedNaturalFunctions->addOwnedParameter(fUML_Tests_TestUnlimitedNaturalFunctions_GEResulttimes);
			// Parameter MaxResult
			fUML_Tests_TestUnlimitedNaturalFunctions_MaxResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_MaxResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_MaxResult->setName("MaxResult");
			fUML_Tests_TestUnlimitedNaturalFunctions_MaxResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_MaxResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_MaxResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestUnlimitedNaturalFunctions->addOwnedParameter(fUML_Tests_TestUnlimitedNaturalFunctions_MaxResult);
			// Parameter MinResult
			fUML_Tests_TestUnlimitedNaturalFunctions_MinResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_MinResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_MinResult->setName("MinResult");
			fUML_Tests_TestUnlimitedNaturalFunctions_MinResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_MinResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_MinResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestUnlimitedNaturalFunctions->addOwnedParameter(fUML_Tests_TestUnlimitedNaturalFunctions_MinResult);
			// ActivityParameterNode Param(LTResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResult->setName("Param(LTResult)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResult->setParameter(fUML_Tests_TestUnlimitedNaturalFunctions_LTResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResult);
			// ActivityParameterNode Param(GTResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResult->setName("Param(GTResult)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResult->setParameter(fUML_Tests_TestUnlimitedNaturalFunctions_GTResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResult);
			// CallBehaviorAction Call(GE)_1
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1->setName("Call(GE)_1");
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1->setVisibility(VisibilityKind::public_);
				// OutputPin GE.result
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result->setName("GE.result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1->addResult(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_UnlimitedNaturalFunctions_greaterOrEqual);
				// InputPin GE.x
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x->setName("GE.x");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x);
				// InputPin GE.y
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y->setName("GE.y");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1);
			// ForkNode Fork(2)
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2->setName("Fork(2)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			// ValueSpecificationAction Value(*)
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_times->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Value_times);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_times->setName("Value(*)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_times->setVisibility(VisibilityKind::public_);
				// LiteralUnlimitedNatural LiteralUnlimitedNatural435
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_LiteralUnlimitedNatural435->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_LiteralUnlimitedNatural435);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_LiteralUnlimitedNatural435->setName("LiteralUnlimitedNatural435");
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_LiteralUnlimitedNatural435->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_LiteralUnlimitedNatural435->setValue(-1);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_times->setValue(fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_LiteralUnlimitedNatural435);
				// OutputPin Value(*).result
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result->setName("Value(*).result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_times->setResult(fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Value_times);
			// CallBehaviorAction Call(LE)_1
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1->setName("Call(LE)_1");
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1->setVisibility(VisibilityKind::public_);
				// OutputPin LE.result
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result->setName("LE.result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1->addResult(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_UnlimitedNaturalFunctions_lessOrEqual);
				// InputPin LE.x
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x->setName("LE.x");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x);
				// InputPin LE.y
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y->setName("LE.y");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1);
			// ForkNode Fork(3)
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3);
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3->setName("Fork(3)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3);
			// ActivityParameterNode Param(LTResult*)
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResulttimes->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResulttimes->setName("Param(LTResult*)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResulttimes->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResulttimes->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResulttimes->setParameter(fUML_Tests_TestUnlimitedNaturalFunctions_LTResulttimes);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResulttimes);
			// CallBehaviorAction Call(GT)_2
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2->setName("Call(GT)_2");
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2->setVisibility(VisibilityKind::public_);
				// OutputPin GT.result
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result->setName("GT.result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2->addResult(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_UnlimitedNaturalFunctions_greaterThan);
				// InputPin GT.x
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x->setName("GT.x");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x);
				// InputPin GT.y
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y->setName("GT.y");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2);
			// ActivityParameterNode Param(GEResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResult->setName("Param(GEResult)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResult->setParameter(fUML_Tests_TestUnlimitedNaturalFunctions_GEResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResult);
			// ForkNode Fork(*)
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times);
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times->setName("Fork(*)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times);
			// CallBehaviorAction Call(GE)_2
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2->setName("Call(GE)_2");
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2->setVisibility(VisibilityKind::public_);
				// OutputPin GE.result
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result->setName("GE.result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2->addResult(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_UnlimitedNaturalFunctions_greaterOrEqual);
				// InputPin GE.x
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x->setName("GE.x");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x);
				// InputPin GE.y
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y->setName("GE.y");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2);
			// ActivityParameterNode Param(LEResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResult->setName("Param(LEResult)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResult->setParameter(fUML_Tests_TestUnlimitedNaturalFunctions_LEResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResult);
			// ActivityParameterNode Param(GEResult*)
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResulttimes->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResulttimes->setName("Param(GEResult*)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResulttimes->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResulttimes->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResulttimes->setParameter(fUML_Tests_TestUnlimitedNaturalFunctions_GEResulttimes);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResulttimes);
			// ActivityParameterNode Param(LEResult*)
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResulttimes->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResulttimes->setName("Param(LEResult*)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResulttimes->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResulttimes->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResulttimes->setParameter(fUML_Tests_TestUnlimitedNaturalFunctions_LEResulttimes);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResulttimes);
			// ValueSpecificationAction Value(2)
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_2->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Value_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_2->setName("Value(2)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_2->setVisibility(VisibilityKind::public_);
				// LiteralUnlimitedNatural LiteralUnlimitedNatural536
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_LiteralUnlimitedNatural536->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_LiteralUnlimitedNatural536);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_LiteralUnlimitedNatural536->setName("LiteralUnlimitedNatural536");
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_LiteralUnlimitedNatural536->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_LiteralUnlimitedNatural536->setValue(2);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_2->setValue(fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_LiteralUnlimitedNatural536);
				// OutputPin Value(2).result
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result->setName("Value(2).result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_2->setResult(fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Value_2);
			// CallBehaviorAction Call(Max)
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max->setName("Call(Max)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max->setVisibility(VisibilityKind::public_);
				// OutputPin Max.result
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result->setName("Max.result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max->addResult(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_UnlimitedNaturalFunctions_Max);
				// InputPin Max.x
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x->setName("Max.x");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x);
				// InputPin Min.y
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y->setName("Min.y");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max);
			// ActivityParameterNode Param(MinResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MinResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Param_MinResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MinResult->setName("Param(MinResult)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MinResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MinResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MinResult->setParameter(fUML_Tests_TestUnlimitedNaturalFunctions_MinResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Param_MinResult);
			// CallBehaviorAction Call(LE)_2
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2->setName("Call(LE)_2");
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2->setVisibility(VisibilityKind::public_);
				// OutputPin LE.result
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result->setName("LE.result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2->addResult(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_UnlimitedNaturalFunctions_lessOrEqual);
				// InputPin LE.x
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x->setName("LE.x");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x);
				// InputPin LE.y
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y->setName("LE.y");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2);
			// CallBehaviorAction Call(LT)_1
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1->setName("Call(LT)_1");
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1->setVisibility(VisibilityKind::public_);
				// OutputPin LT.result
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result->setName("LT.result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1->addResult(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_UnlimitedNaturalFunctions_lessThan);
				// InputPin LT.x
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x->setName("LT.x");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x);
				// InputPin LT.y
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y->setName("LT.y");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1);
			// CallBehaviorAction Call(GT)_1
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1->setName("Call(GT)_1");
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1->setVisibility(VisibilityKind::public_);
				// OutputPin GT.result
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result->setName("GT.result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1->addResult(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_UnlimitedNaturalFunctions_greaterThan);
				// InputPin GT.x
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x->setName("GT.x");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x);
				// InputPin GT.y
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y->setName("GT.y");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1);
			// ValueSpecificationAction Value(3)
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_3->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Value_3);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_3->setName("Value(3)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_3->setVisibility(VisibilityKind::public_);
				// LiteralUnlimitedNatural LiteralUnlimitedNatural555
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_LiteralUnlimitedNatural555->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_LiteralUnlimitedNatural555);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_LiteralUnlimitedNatural555->setName("LiteralUnlimitedNatural555");
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_LiteralUnlimitedNatural555->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_LiteralUnlimitedNatural555->setValue(3);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_3->setValue(fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_LiteralUnlimitedNatural555);
				// OutputPin Value(3).result
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result->setName("Value(3).result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_3->setResult(fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Value_3);
			// ActivityParameterNode Param(GTResult*)
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResulttimes->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResulttimes->setName("Param(GTResult*)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResulttimes->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResulttimes->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResulttimes->setParameter(fUML_Tests_TestUnlimitedNaturalFunctions_GTResulttimes);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResulttimes);
			// CallBehaviorAction Call(Min)
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min->setName("Call(Min)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min->setVisibility(VisibilityKind::public_);
				// OutputPin Min.result
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result->setName("Min.result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min->addResult(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_UnlimitedNaturalFunctions_Min);
				// InputPin Min.x
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x->setName("Min.x");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x);
				// InputPin Min.y
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y->setName("Min.y");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min);
			// CallBehaviorAction Call(LT)_2
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2->setName("Call(LT)_2");
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2->setVisibility(VisibilityKind::public_);
				// OutputPin LT.result
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result->setName("LT.result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2->addResult(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_UnlimitedNaturalFunctions_lessThan);
				// InputPin LT.x
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x->setName("LT.x");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x);
				// InputPin LT.y
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y->setName("LT.y");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2);
			// ActivityParameterNode Param(MaxResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MaxResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Param_MaxResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MaxResult->setName("Param(MaxResult)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MaxResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MaxResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MaxResult->setParameter(fUML_Tests_TestUnlimitedNaturalFunctions_MaxResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Param_MaxResult);
			// ObjectFlow ObjectFlow502 from Fork(*) to Min.y
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow502->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow502);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow502->setName("ObjectFlow502");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow502->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow502->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow502->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow502);
			// ObjectFlow ObjectFlow504 from Min.result to Param(MinResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow504->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow504);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow504->setName("ObjectFlow504");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow504->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow504->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow504->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Param_MinResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow504);
			// ObjectFlow ObjectFlow506 from LE.result to Param(LEResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow506->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow506);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow506->setName("ObjectFlow506");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow506->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow506->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow506->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow506);
			// ControlFlow ControlFlow508 from Call(LE)_1 to Call(GT)_1
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow508->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow508);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow508->setName("ControlFlow508");
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow508->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow508->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow508->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow508);
			// ObjectFlow ObjectFlow510 from Fork(2) to LE.x
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow510->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow510);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow510->setName("ObjectFlow510");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow510->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow510->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow510->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow510);
			// ObjectFlow ObjectFlow512 from GT.result to Param(GTResult*)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow512->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow512);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow512->setName("ObjectFlow512");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow512->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow512->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow512->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResulttimes);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow512);
			// ObjectFlow ObjectFlow413 from LT.result to Param(LTResult*)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow413->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow413);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow413->setName("ObjectFlow413");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow413->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow413->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow413->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResulttimes);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow413);
			// ObjectFlow ObjectFlow415 from Value(2).result to Fork(2)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow415->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow415);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow415->setName("ObjectFlow415");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow415->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow415->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow415->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow415);
			// ObjectFlow ObjectFlow423 from Fork(3) to LE.x
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow423->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow423);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow423->setName("ObjectFlow423");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow423->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow423->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow423->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow423);
			// ObjectFlow ObjectFlow514 from Fork(*) to GT.y
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow514->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow514);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow514->setName("ObjectFlow514");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow514->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow514->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow514->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow514);
			// ObjectFlow ObjectFlow425 from Fork(3) to GT.x
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow425->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow425);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow425->setName("ObjectFlow425");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow425->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow425->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow425->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow425);
			// ObjectFlow ObjectFlow427 from Max.result to Param(MaxResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow427->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow427);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow427->setName("ObjectFlow427");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow427->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow427->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow427->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Param_MaxResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow427);
			// ObjectFlow ObjectFlow516 from Fork(*) to LE.y
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow516->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow516);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow516->setName("ObjectFlow516");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow516->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow516->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow516->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow516);
			// ObjectFlow ObjectFlow429 from Fork(*) to LT.y
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow429->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow429);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow429->setName("ObjectFlow429");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow429->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow429->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow429->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow429);
			// ObjectFlow ObjectFlow431 from GE.result to Param(GEResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow431->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow431);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow431->setName("ObjectFlow431");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow431->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow431->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow431->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow431);
			// ObjectFlow ObjectFlow518 from Fork(2) to Max.x
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow518->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow518);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow518->setName("ObjectFlow518");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow518->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow518->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow518->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow518);
			// ObjectFlow ObjectFlow433 from Fork(2) to Min.x
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow433->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow433);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow433->setName("ObjectFlow433");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow433->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow433->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow433->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow433);
			// ControlFlow ControlFlow438 from Call(LT)_2 to Call(LE)_2
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow438->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow438);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow438->setName("ControlFlow438");
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow438->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow438->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow438->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow438);
			// ObjectFlow ObjectFlow520 from Fork(2) to GE.y
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow520->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow520);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow520->setName("ObjectFlow520");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow520->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow520->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow520->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow520);
			// ObjectFlow ObjectFlow522 from LT.result to Param(LTResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow522->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow522);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow522->setName("ObjectFlow522");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow522->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow522->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow522->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow522);
			// ControlFlow ControlFlow524 from Call(GE)_2 to Call(Max)
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow524->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow524);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow524->setName("ControlFlow524");
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow524->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow524->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow524->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow524);
			// ControlFlow ControlFlow526 from Call(GE)_1 to Call(LT)_2
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow526->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow526);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow526->setName("ControlFlow526");
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow526->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow526->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow526->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow526);
			// ControlFlow ControlFlow528 from Call(LT)_1 to Call(LE)_1
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow528->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow528);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow528->setName("ControlFlow528");
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow528->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow528->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow528->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow528);
			// ObjectFlow ObjectFlow452 from GE.result to Param(GEResult*)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow452->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow452);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow452->setName("ObjectFlow452");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow452->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow452->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow452->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResulttimes);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow452);
			// ObjectFlow ObjectFlow530 from Value(*).result to Fork(*)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow530->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow530);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow530->setName("ObjectFlow530");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow530->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow530->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow530->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow530);
			// ObjectFlow ObjectFlow454 from Fork(2) to GT.y
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow454->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow454);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow454->setName("ObjectFlow454");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow454->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow454->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow454->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow454);
			// ObjectFlow ObjectFlow532 from Fork(2) to LT.y
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow532->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow532);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow532->setName("ObjectFlow532");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow532->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow532->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow532->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow532);
			// ObjectFlow ObjectFlow456 from LE.result to Param(LEResult*)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow456->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow456);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow456->setName("ObjectFlow456");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow456->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow456->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow456->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResulttimes);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow456);
			// ControlFlow ControlFlow458 from Call(GT)_1 to Call(GE)_1
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow458->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow458);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow458->setName("ControlFlow458");
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow458->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow458->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow458->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow458);
			// ObjectFlow ObjectFlow460 from Fork(*) to Min.y
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow460->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow460);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow460->setName("ObjectFlow460");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow460->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow460->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow460->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow460);
			// ControlFlow ControlFlow534 from Call(Max) to Call(Min)
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow534->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow534);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow534->setName("ControlFlow534");
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow534->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow534->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow534->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow534);
			// ObjectFlow ObjectFlow468 from Fork(3) to GE.x
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow468->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow468);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow468->setName("ObjectFlow468");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow468->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow468->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow468->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow468);
			// ObjectFlow ObjectFlow470 from Fork(2) to LE.y
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow470->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow470);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow470->setName("ObjectFlow470");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow470->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow470->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow470->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow470);
			// ObjectFlow ObjectFlow545 from Fork(*) to GE.y
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow545->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow545);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow545->setName("ObjectFlow545");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow545->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow545->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow545->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow545);
			// ObjectFlow ObjectFlow547 from GT.result to Param(GTResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow547->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow547);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow547->setName("ObjectFlow547");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow547->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow547->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow547->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow547);
			// ObjectFlow ObjectFlow472 from Fork(2) to GT.x
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow472->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow472);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow472->setName("ObjectFlow472");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow472->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow472->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow472->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow472);
			// ControlFlow ControlFlow549 from Call(LE)_2 to Call(GT)_2
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow549->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow549);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow549->setName("ControlFlow549");
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow549->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow549->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow549->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow549);
			// ObjectFlow ObjectFlow551 from Fork(2) to LT.x
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow551->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow551);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow551->setName("ObjectFlow551");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow551->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow551->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow551->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow551);
			// ControlFlow ControlFlow556 from Call(GT)_2 to Call(GE)_2
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow556->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow556);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow556->setName("ControlFlow556");
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow556->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow556->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow556->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow556);
			// ObjectFlow ObjectFlow492 from Fork(2) to GE.x
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow492->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow492);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow492->setName("ObjectFlow492");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow492->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow492->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow492->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow492);
			// ObjectFlow ObjectFlow494 from Fork(3) to LT.x
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow494->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow494);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow494->setName("ObjectFlow494");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow494->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow494->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow494->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow494);
			// ObjectFlow ObjectFlow558 from Value(3).result to Fork(3)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow558->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow558);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow558->setName("ObjectFlow558");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow558->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow558->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow558->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow558);
	fUML_Tests->addPackagedElement(fUML_Tests_TestUnlimitedNaturalFunctions);
		// Activity NodeEnabler
		fUML_Tests_NodeEnabler->setThisActivityPtr(fUML_Tests_NodeEnabler);
		fUML_Tests_NodeEnabler->setName("NodeEnabler");
		fUML_Tests_NodeEnabler->setVisibility(VisibilityKind::public_);
			// Parameter input
			fUML_Tests_NodeEnabler_input->setThisElementPtr(fUML_Tests_NodeEnabler_input);
			fUML_Tests_NodeEnabler_input->setName("input");
			fUML_Tests_NodeEnabler_input->setVisibility(VisibilityKind::public_);
			fUML_Tests_NodeEnabler_input->setLower(0);
			fUML_Tests_NodeEnabler_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
		fUML_Tests_NodeEnabler->addOwnedParameter(fUML_Tests_NodeEnabler_input);
			// Parameter output
			fUML_Tests_NodeEnabler_output->setThisElementPtr(fUML_Tests_NodeEnabler_output);
			fUML_Tests_NodeEnabler_output->setName("output");
			fUML_Tests_NodeEnabler_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_NodeEnabler_output->setLower(0);
			fUML_Tests_NodeEnabler_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_NodeEnabler_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_NodeEnabler->addOwnedParameter(fUML_Tests_NodeEnabler_output);
			// ActivityFinalNode FinalNode
			fUML_Tests_NodeEnabler_FinalNode->setThisElementPtr(fUML_Tests_NodeEnabler_FinalNode);
			fUML_Tests_NodeEnabler_FinalNode->setName("FinalNode");
			fUML_Tests_NodeEnabler_FinalNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_NodeEnabler->addNode(fUML_Tests_NodeEnabler_FinalNode);
			// Initialization is currently unimplemented for metaclass StructuredActivityNode
		fUML_Tests_NodeEnabler->addNode(fUML_Tests_NodeEnabler_StructuredNode);
			// ActivityParameterNode Input(input)
			fUML_Tests_NodeEnabler_Input_input->setThisElementPtr(fUML_Tests_NodeEnabler_Input_input);
			fUML_Tests_NodeEnabler_Input_input->setName("Input(input)");
			fUML_Tests_NodeEnabler_Input_input->setVisibility(VisibilityKind::public_);
			fUML_Tests_NodeEnabler_Input_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_NodeEnabler_Input_input->setParameter(fUML_Tests_NodeEnabler_input);
		fUML_Tests_NodeEnabler->addNode(fUML_Tests_NodeEnabler_Input_input);
			// ActivityParameterNode Output(output)
			fUML_Tests_NodeEnabler_Output_output->setThisElementPtr(fUML_Tests_NodeEnabler_Output_output);
			fUML_Tests_NodeEnabler_Output_output->setName("Output(output)");
			fUML_Tests_NodeEnabler_Output_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_NodeEnabler_Output_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_NodeEnabler_Output_output->setParameter(fUML_Tests_NodeEnabler_output);
		fUML_Tests_NodeEnabler->addNode(fUML_Tests_NodeEnabler_Output_output);
			// ControlFlow ControlFlow570 from StructuredNode to FinalNode
			fUML_Tests_NodeEnabler_ControlFlow570->setThisActivityEdgePtr(fUML_Tests_NodeEnabler_ControlFlow570);
			fUML_Tests_NodeEnabler_ControlFlow570->setName("ControlFlow570");
			fUML_Tests_NodeEnabler_ControlFlow570->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_NodeEnabler_ControlFlow570->setSource(fUML_Tests_NodeEnabler_StructuredNode);
			fUML_Tests_NodeEnabler_ControlFlow570->setTarget(fUML_Tests_NodeEnabler_FinalNode);
		fUML_Tests_NodeEnabler->addEdge(fUML_Tests_NodeEnabler_ControlFlow570);
			// ObjectFlow ObjectFlow576 from Input(input) to Call(Copier).input
			fUML_Tests_NodeEnabler_ObjectFlow576->setThisActivityEdgePtr(fUML_Tests_NodeEnabler_ObjectFlow576);
			fUML_Tests_NodeEnabler_ObjectFlow576->setName("ObjectFlow576");
			fUML_Tests_NodeEnabler_ObjectFlow576->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_NodeEnabler_ObjectFlow576->setSource(fUML_Tests_NodeEnabler_Input_input);
			fUML_Tests_NodeEnabler_ObjectFlow576->setTarget(fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_input);
		fUML_Tests_NodeEnabler->addEdge(fUML_Tests_NodeEnabler_ObjectFlow576);
			// ObjectFlow ObjectFlow578 from Call(Copier).output to Output(output)
			fUML_Tests_NodeEnabler_ObjectFlow578->setThisActivityEdgePtr(fUML_Tests_NodeEnabler_ObjectFlow578);
			fUML_Tests_NodeEnabler_ObjectFlow578->setName("ObjectFlow578");
			fUML_Tests_NodeEnabler_ObjectFlow578->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_NodeEnabler_ObjectFlow578->setSource(fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_output);
			fUML_Tests_NodeEnabler_ObjectFlow578->setTarget(fUML_Tests_NodeEnabler_Output_output);
		fUML_Tests_NodeEnabler->addEdge(fUML_Tests_NodeEnabler_ObjectFlow578);
			// Initialization is currently unimplemented for metaclass StructuredActivityNode
		fUML_Tests_NodeEnabler->addStructuredNode(fUML_Tests_NodeEnabler_StructuredNode);
			// Initialization is currently unimplemented for metaclass StructuredActivityNode
		fUML_Tests_NodeEnabler->addStructuredNode(fUML_Tests_NodeEnabler_StructuredNode);
	fUML_Tests->addPackagedElement(fUML_Tests_NodeEnabler);
		// Activity TestClassExtentReader
		fUML_Tests_TestClassExtentReader->setThisActivityPtr(fUML_Tests_TestClassExtentReader);
		fUML_Tests_TestClassExtentReader->setName("TestClassExtentReader");
		fUML_Tests_TestClassExtentReader->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestClassExtentReader->isReentrant = false;
			// Parameter object
			fUML_Tests_TestClassExtentReader_object->setThisElementPtr(fUML_Tests_TestClassExtentReader_object);
			fUML_Tests_TestClassExtentReader_object->setName("object");
			fUML_Tests_TestClassExtentReader_object->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassExtentReader_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassExtentReader_object->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassExtentReader->addOwnedParameter(fUML_Tests_TestClassExtentReader_object);
			// Parameter extent
			fUML_Tests_TestClassExtentReader_extent->setThisElementPtr(fUML_Tests_TestClassExtentReader_extent);
			fUML_Tests_TestClassExtentReader_extent->setName("extent");
			fUML_Tests_TestClassExtentReader_extent->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassExtentReader_extent->setUpper(-1);
			fUML_Tests_TestClassExtentReader_extent->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassExtentReader_extent->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassExtentReader->addOwnedParameter(fUML_Tests_TestClassExtentReader_extent);
			// ActivityParameterNode Param(extent)
			fUML_Tests_TestClassExtentReader_Param_extent->setThisElementPtr(fUML_Tests_TestClassExtentReader_Param_extent);
			fUML_Tests_TestClassExtentReader_Param_extent->setName("Param(extent)");
			fUML_Tests_TestClassExtentReader_Param_extent->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassExtentReader_Param_extent->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassExtentReader_Param_extent->setParameter(fUML_Tests_TestClassExtentReader_extent);
		fUML_Tests_TestClassExtentReader->addNode(fUML_Tests_TestClassExtentReader_Param_extent);
			// ReadExtentAction ReadExtent(TestClass)
			fUML_Tests_TestClassExtentReader_ReadExtent_TestClass->setThisExecutableNodePtr(fUML_Tests_TestClassExtentReader_ReadExtent_TestClass);
			fUML_Tests_TestClassExtentReader_ReadExtent_TestClass->setName("ReadExtent(TestClass)");
			fUML_Tests_TestClassExtentReader_ReadExtent_TestClass->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassExtentReader_ReadExtent_TestClass->setClassifier(fUML_Tests_TestClass);
				// OutputPin ReadExtent.result
				fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result->setThisElementPtr(fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result);
				fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result->setName("ReadExtent.result");
				fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result->setType(fUML_Tests_TestClass);
				fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result->setUpper(-1);
			fUML_Tests_TestClassExtentReader_ReadExtent_TestClass->setResult(fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result);
		fUML_Tests_TestClassExtentReader->addNode(fUML_Tests_TestClassExtentReader_ReadExtent_TestClass);
			// CreateObjectAction Create(TestClass)
			fUML_Tests_TestClassExtentReader_Create_TestClass->setThisExecutableNodePtr(fUML_Tests_TestClassExtentReader_Create_TestClass);
			fUML_Tests_TestClassExtentReader_Create_TestClass->setName("Create(TestClass)");
			fUML_Tests_TestClassExtentReader_Create_TestClass->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassExtentReader_Create_TestClass->setClassifier(fUML_Tests_TestClass);
				// OutputPin Create.result
				fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result->setThisElementPtr(fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result);
				fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result->setName("Create.result");
				fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassExtentReader_Create_TestClass->setResult(fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result);
		fUML_Tests_TestClassExtentReader->addNode(fUML_Tests_TestClassExtentReader_Create_TestClass);
			// ActivityParameterNode Param(object)
			fUML_Tests_TestClassExtentReader_Param_object->setThisElementPtr(fUML_Tests_TestClassExtentReader_Param_object);
			fUML_Tests_TestClassExtentReader_Param_object->setName("Param(object)");
			fUML_Tests_TestClassExtentReader_Param_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassExtentReader_Param_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassExtentReader_Param_object->setParameter(fUML_Tests_TestClassExtentReader_object);
		fUML_Tests_TestClassExtentReader->addNode(fUML_Tests_TestClassExtentReader_Param_object);
			// ControlFlow ControlFlow580 from Create(TestClass) to ReadExtent(TestClass)
			fUML_Tests_TestClassExtentReader_ControlFlow580->setThisActivityEdgePtr(fUML_Tests_TestClassExtentReader_ControlFlow580);
			fUML_Tests_TestClassExtentReader_ControlFlow580->setName("ControlFlow580");
			fUML_Tests_TestClassExtentReader_ControlFlow580->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassExtentReader_ControlFlow580->setSource(fUML_Tests_TestClassExtentReader_Create_TestClass);
			fUML_Tests_TestClassExtentReader_ControlFlow580->setTarget(fUML_Tests_TestClassExtentReader_ReadExtent_TestClass);
		fUML_Tests_TestClassExtentReader->addEdge(fUML_Tests_TestClassExtentReader_ControlFlow580);
			// ObjectFlow ObjectFlow584 from ReadExtent.result to Param(extent)
			fUML_Tests_TestClassExtentReader_ObjectFlow584->setThisActivityEdgePtr(fUML_Tests_TestClassExtentReader_ObjectFlow584);
			fUML_Tests_TestClassExtentReader_ObjectFlow584->setName("ObjectFlow584");
			fUML_Tests_TestClassExtentReader_ObjectFlow584->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassExtentReader_ObjectFlow584->setSource(fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result);
			fUML_Tests_TestClassExtentReader_ObjectFlow584->setTarget(fUML_Tests_TestClassExtentReader_Param_extent);
		fUML_Tests_TestClassExtentReader->addEdge(fUML_Tests_TestClassExtentReader_ObjectFlow584);
			// ObjectFlow ObjectFlow586 from Create.result to Param(object)
			fUML_Tests_TestClassExtentReader_ObjectFlow586->setThisActivityEdgePtr(fUML_Tests_TestClassExtentReader_ObjectFlow586);
			fUML_Tests_TestClassExtentReader_ObjectFlow586->setName("ObjectFlow586");
			fUML_Tests_TestClassExtentReader_ObjectFlow586->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassExtentReader_ObjectFlow586->setSource(fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result);
			fUML_Tests_TestClassExtentReader_ObjectFlow586->setTarget(fUML_Tests_TestClassExtentReader_Param_object);
		fUML_Tests_TestClassExtentReader->addEdge(fUML_Tests_TestClassExtentReader_ObjectFlow586);
	fUML_Tests->addPackagedElement(fUML_Tests_TestClassExtentReader);
		// Activity TestCentralBuffer
		fUML_Tests_TestCentralBuffer->setThisActivityPtr(fUML_Tests_TestCentralBuffer);
		fUML_Tests_TestCentralBuffer->setName("TestCentralBuffer");
		fUML_Tests_TestCentralBuffer->setVisibility(VisibilityKind::public_);
			// Parameter input1
			fUML_Tests_TestCentralBuffer_input1->setThisElementPtr(fUML_Tests_TestCentralBuffer_input1);
			fUML_Tests_TestCentralBuffer_input1->setName("input1");
			fUML_Tests_TestCentralBuffer_input1->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCentralBuffer_input1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
		fUML_Tests_TestCentralBuffer->addOwnedParameter(fUML_Tests_TestCentralBuffer_input1);
			// Parameter input2
			fUML_Tests_TestCentralBuffer_input2->setThisElementPtr(fUML_Tests_TestCentralBuffer_input2);
			fUML_Tests_TestCentralBuffer_input2->setName("input2");
			fUML_Tests_TestCentralBuffer_input2->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCentralBuffer_input2->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
		fUML_Tests_TestCentralBuffer->addOwnedParameter(fUML_Tests_TestCentralBuffer_input2);
			// Parameter output
			fUML_Tests_TestCentralBuffer_output->setThisElementPtr(fUML_Tests_TestCentralBuffer_output);
			fUML_Tests_TestCentralBuffer_output->setName("output");
			fUML_Tests_TestCentralBuffer_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCentralBuffer_output->setUpper(-1);
			fUML_Tests_TestCentralBuffer_output->setLower(0);
			fUML_Tests_TestCentralBuffer_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestCentralBuffer_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestCentralBuffer->addOwnedParameter(fUML_Tests_TestCentralBuffer_output);
			// Initialization is currently unimplemented for metaclass StructuredActivityNode
		fUML_Tests_TestCentralBuffer->addNode(fUML_Tests_TestCentralBuffer_StructuredActivityNode);
			// InitialNode InitialNode
			fUML_Tests_TestCentralBuffer_InitialNode->setThisElementPtr(fUML_Tests_TestCentralBuffer_InitialNode);
			fUML_Tests_TestCentralBuffer_InitialNode->setName("InitialNode");
			fUML_Tests_TestCentralBuffer_InitialNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestCentralBuffer->addNode(fUML_Tests_TestCentralBuffer_InitialNode);
			// ActivityParameterNode Parameter(output)
			fUML_Tests_TestCentralBuffer_Parameter_output->setThisElementPtr(fUML_Tests_TestCentralBuffer_Parameter_output);
			fUML_Tests_TestCentralBuffer_Parameter_output->setName("Parameter(output)");
			fUML_Tests_TestCentralBuffer_Parameter_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCentralBuffer_Parameter_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestCentralBuffer_Parameter_output->setParameter(fUML_Tests_TestCentralBuffer_output);
		fUML_Tests_TestCentralBuffer->addNode(fUML_Tests_TestCentralBuffer_Parameter_output);
			// ActivityParameterNode Parameter(input2)
			fUML_Tests_TestCentralBuffer_Parameter_input2->setThisElementPtr(fUML_Tests_TestCentralBuffer_Parameter_input2);
			fUML_Tests_TestCentralBuffer_Parameter_input2->setName("Parameter(input2)");
			fUML_Tests_TestCentralBuffer_Parameter_input2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCentralBuffer_Parameter_input2->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestCentralBuffer_Parameter_input2->setParameter(fUML_Tests_TestCentralBuffer_input2);
		fUML_Tests_TestCentralBuffer->addNode(fUML_Tests_TestCentralBuffer_Parameter_input2);
			// ActivityParameterNode Parameter(input1)
			fUML_Tests_TestCentralBuffer_Parameter_input1->setThisElementPtr(fUML_Tests_TestCentralBuffer_Parameter_input1);
			fUML_Tests_TestCentralBuffer_Parameter_input1->setName("Parameter(input1)");
			fUML_Tests_TestCentralBuffer_Parameter_input1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCentralBuffer_Parameter_input1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestCentralBuffer_Parameter_input1->setParameter(fUML_Tests_TestCentralBuffer_input1);
		fUML_Tests_TestCentralBuffer->addNode(fUML_Tests_TestCentralBuffer_Parameter_input1);
			// ObjectFlow ObjectFlow596 from CentralBufferNode to Parameter(output)
			fUML_Tests_TestCentralBuffer_ObjectFlow596->setThisActivityEdgePtr(fUML_Tests_TestCentralBuffer_ObjectFlow596);
			fUML_Tests_TestCentralBuffer_ObjectFlow596->setName("ObjectFlow596");
			fUML_Tests_TestCentralBuffer_ObjectFlow596->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCentralBuffer_ObjectFlow596->setSource(fUML_Tests_TestCentralBuffer_StructuredActivityNode_CentralBufferNode);
			fUML_Tests_TestCentralBuffer_ObjectFlow596->setTarget(fUML_Tests_TestCentralBuffer_Parameter_output);
		fUML_Tests_TestCentralBuffer->addEdge(fUML_Tests_TestCentralBuffer_ObjectFlow596);
			// ObjectFlow ObjectFlow598 from Parameter(input2) to CentralBufferNode
			fUML_Tests_TestCentralBuffer_ObjectFlow598->setThisActivityEdgePtr(fUML_Tests_TestCentralBuffer_ObjectFlow598);
			fUML_Tests_TestCentralBuffer_ObjectFlow598->setName("ObjectFlow598");
			fUML_Tests_TestCentralBuffer_ObjectFlow598->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCentralBuffer_ObjectFlow598->setSource(fUML_Tests_TestCentralBuffer_Parameter_input2);
			fUML_Tests_TestCentralBuffer_ObjectFlow598->setTarget(fUML_Tests_TestCentralBuffer_StructuredActivityNode_CentralBufferNode);
		fUML_Tests_TestCentralBuffer->addEdge(fUML_Tests_TestCentralBuffer_ObjectFlow598);
			// ControlFlow ControlFlow600 from InitialNode to StructuredActivityNode
			fUML_Tests_TestCentralBuffer_ControlFlow600->setThisActivityEdgePtr(fUML_Tests_TestCentralBuffer_ControlFlow600);
			fUML_Tests_TestCentralBuffer_ControlFlow600->setName("ControlFlow600");
			fUML_Tests_TestCentralBuffer_ControlFlow600->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCentralBuffer_ControlFlow600->setSource(fUML_Tests_TestCentralBuffer_InitialNode);
			fUML_Tests_TestCentralBuffer_ControlFlow600->setTarget(fUML_Tests_TestCentralBuffer_StructuredActivityNode);
		fUML_Tests_TestCentralBuffer->addEdge(fUML_Tests_TestCentralBuffer_ControlFlow600);
			// ObjectFlow ObjectFlow602 from Parameter(input1) to CentralBufferNode
			fUML_Tests_TestCentralBuffer_ObjectFlow602->setThisActivityEdgePtr(fUML_Tests_TestCentralBuffer_ObjectFlow602);
			fUML_Tests_TestCentralBuffer_ObjectFlow602->setName("ObjectFlow602");
			fUML_Tests_TestCentralBuffer_ObjectFlow602->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCentralBuffer_ObjectFlow602->setSource(fUML_Tests_TestCentralBuffer_Parameter_input1);
			fUML_Tests_TestCentralBuffer_ObjectFlow602->setTarget(fUML_Tests_TestCentralBuffer_StructuredActivityNode_CentralBufferNode);
		fUML_Tests_TestCentralBuffer->addEdge(fUML_Tests_TestCentralBuffer_ObjectFlow602);
			// Initialization is currently unimplemented for metaclass StructuredActivityNode
		fUML_Tests_TestCentralBuffer->addStructuredNode(fUML_Tests_TestCentralBuffer_StructuredActivityNode);
			// Initialization is currently unimplemented for metaclass StructuredActivityNode
		fUML_Tests_TestCentralBuffer->addStructuredNode(fUML_Tests_TestCentralBuffer_StructuredActivityNode);
	fUML_Tests->addPackagedElement(fUML_Tests_TestCentralBuffer);
		// Activity TestClassReclassifier
		fUML_Tests_TestClassReclassifier->setThisActivityPtr(fUML_Tests_TestClassReclassifier);
		fUML_Tests_TestClassReclassifier->setName("TestClassReclassifier");
		fUML_Tests_TestClassReclassifier->setVisibility(VisibilityKind::public_);
			// Parameter result
			fUML_Tests_TestClassReclassifier_result->setThisElementPtr(fUML_Tests_TestClassReclassifier_result);
			fUML_Tests_TestClassReclassifier_result->setName("result");
			fUML_Tests_TestClassReclassifier_result->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassReclassifier_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassReclassifier_result->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassReclassifier->addOwnedParameter(fUML_Tests_TestClassReclassifier_result);
			// ActivityParameterNode resultNode
			fUML_Tests_TestClassReclassifier_resultNode->setThisElementPtr(fUML_Tests_TestClassReclassifier_resultNode);
			fUML_Tests_TestClassReclassifier_resultNode->setName("resultNode");
			fUML_Tests_TestClassReclassifier_resultNode->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassReclassifier_resultNode->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassReclassifier_resultNode->setParameter(fUML_Tests_TestClassReclassifier_result);
		fUML_Tests_TestClassReclassifier->addNode(fUML_Tests_TestClassReclassifier_resultNode);
			// CreateObjectAction Create(Subclass1)
			fUML_Tests_TestClassReclassifier_Create_Subclass1->setThisExecutableNodePtr(fUML_Tests_TestClassReclassifier_Create_Subclass1);
			fUML_Tests_TestClassReclassifier_Create_Subclass1->setName("Create(Subclass1)");
			fUML_Tests_TestClassReclassifier_Create_Subclass1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassReclassifier_Create_Subclass1->setClassifier(fUML_Tests_Subclass1);
				// OutputPin result
				fUML_Tests_TestClassReclassifier_Create_Subclass1_result->setThisElementPtr(fUML_Tests_TestClassReclassifier_Create_Subclass1_result);
				fUML_Tests_TestClassReclassifier_Create_Subclass1_result->setName("result");
				fUML_Tests_TestClassReclassifier_Create_Subclass1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Create_Subclass1_result->setType(fUML_Tests_Subclass1);
			fUML_Tests_TestClassReclassifier_Create_Subclass1->setResult(fUML_Tests_TestClassReclassifier_Create_Subclass1_result);
		fUML_Tests_TestClassReclassifier->addNode(fUML_Tests_TestClassReclassifier_Create_Subclass1);
			// ForkNode ForkNode610
			fUML_Tests_TestClassReclassifier_ForkNode610->setThisElementPtr(fUML_Tests_TestClassReclassifier_ForkNode610);
			fUML_Tests_TestClassReclassifier_ForkNode610->setName("ForkNode610");
			fUML_Tests_TestClassReclassifier_ForkNode610->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestClassReclassifier->addNode(fUML_Tests_TestClassReclassifier_ForkNode610);
			// AddStructuralFeatureValueAction Write(x)
			fUML_Tests_TestClassReclassifier_Write_x->setThisExecutableNodePtr(fUML_Tests_TestClassReclassifier_Write_x);
			fUML_Tests_TestClassReclassifier_Write_x->setName("Write(x)");
			fUML_Tests_TestClassReclassifier_Write_x->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassReclassifier_Write_x->setStructuralFeature(fUML_Tests_TestClass_x);
				// InputPin object
				fUML_Tests_TestClassReclassifier_Write_x_object->setThisElementPtr(fUML_Tests_TestClassReclassifier_Write_x_object);
				fUML_Tests_TestClassReclassifier_Write_x_object->setName("object");
				fUML_Tests_TestClassReclassifier_Write_x_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Write_x_object->setType(fUML_Tests_Subclass1);
			fUML_Tests_TestClassReclassifier_Write_x->setObject(fUML_Tests_TestClassReclassifier_Write_x_object);
				// InputPin value
				fUML_Tests_TestClassReclassifier_Write_x_value->setThisElementPtr(fUML_Tests_TestClassReclassifier_Write_x_value);
				fUML_Tests_TestClassReclassifier_Write_x_value->setName("value");
				fUML_Tests_TestClassReclassifier_Write_x_value->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassReclassifier_Write_x->setValue(fUML_Tests_TestClassReclassifier_Write_x_value);
				// OutputPin result
				fUML_Tests_TestClassReclassifier_Write_x_result->setThisElementPtr(fUML_Tests_TestClassReclassifier_Write_x_result);
				fUML_Tests_TestClassReclassifier_Write_x_result->setName("result");
				fUML_Tests_TestClassReclassifier_Write_x_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Write_x_result->setType(fUML_Tests_Subclass1);
			fUML_Tests_TestClassReclassifier_Write_x->setResult(fUML_Tests_TestClassReclassifier_Write_x_result);
		fUML_Tests_TestClassReclassifier->addNode(fUML_Tests_TestClassReclassifier_Write_x);
			// ReclassifyObjectAction Reclassify(Subclass2)
			fUML_Tests_TestClassReclassifier_Reclassify_Subclass2->setThisExecutableNodePtr(fUML_Tests_TestClassReclassifier_Reclassify_Subclass2);
			fUML_Tests_TestClassReclassifier_Reclassify_Subclass2->setName("Reclassify(Subclass2)");
			fUML_Tests_TestClassReclassifier_Reclassify_Subclass2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassReclassifier_Reclassify_Subclass2->addOldClassifier(fUML_Tests_Subclass1);
			fUML_Tests_TestClassReclassifier_Reclassify_Subclass2->addNewClassifier(fUML_Tests_Subclass2);
				// InputPin object
				fUML_Tests_TestClassReclassifier_Reclassify_Subclass2_object->setThisElementPtr(fUML_Tests_TestClassReclassifier_Reclassify_Subclass2_object);
				fUML_Tests_TestClassReclassifier_Reclassify_Subclass2_object->setName("object");
				fUML_Tests_TestClassReclassifier_Reclassify_Subclass2_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Reclassify_Subclass2_object->setType(fUML_Tests_Subclass1);
			fUML_Tests_TestClassReclassifier_Reclassify_Subclass2->setObject(fUML_Tests_TestClassReclassifier_Reclassify_Subclass2_object);
		fUML_Tests_TestClassReclassifier->addNode(fUML_Tests_TestClassReclassifier_Reclassify_Subclass2);
			// ValueSpecificationAction Value(1)
			fUML_Tests_TestClassReclassifier_Value_1->setThisExecutableNodePtr(fUML_Tests_TestClassReclassifier_Value_1);
			fUML_Tests_TestClassReclassifier_Value_1->setName("Value(1)");
			fUML_Tests_TestClassReclassifier_Value_1->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger613
				fUML_Tests_TestClassReclassifier_Value_1_LiteralInteger613->setThisElementPtr(fUML_Tests_TestClassReclassifier_Value_1_LiteralInteger613);
				fUML_Tests_TestClassReclassifier_Value_1_LiteralInteger613->setName("LiteralInteger613");
				fUML_Tests_TestClassReclassifier_Value_1_LiteralInteger613->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Value_1_LiteralInteger613->setValue(1);
			fUML_Tests_TestClassReclassifier_Value_1->setValue(fUML_Tests_TestClassReclassifier_Value_1_LiteralInteger613);
				// OutputPin result
				fUML_Tests_TestClassReclassifier_Value_1_result->setThisElementPtr(fUML_Tests_TestClassReclassifier_Value_1_result);
				fUML_Tests_TestClassReclassifier_Value_1_result->setName("result");
				fUML_Tests_TestClassReclassifier_Value_1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Value_1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassReclassifier_Value_1->setResult(fUML_Tests_TestClassReclassifier_Value_1_result);
		fUML_Tests_TestClassReclassifier->addNode(fUML_Tests_TestClassReclassifier_Value_1);
			// ValueSpecificationAction Value(2)
			fUML_Tests_TestClassReclassifier_Value_2->setThisExecutableNodePtr(fUML_Tests_TestClassReclassifier_Value_2);
			fUML_Tests_TestClassReclassifier_Value_2->setName("Value(2)");
			fUML_Tests_TestClassReclassifier_Value_2->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger630
				fUML_Tests_TestClassReclassifier_Value_2_LiteralInteger630->setThisElementPtr(fUML_Tests_TestClassReclassifier_Value_2_LiteralInteger630);
				fUML_Tests_TestClassReclassifier_Value_2_LiteralInteger630->setName("LiteralInteger630");
				fUML_Tests_TestClassReclassifier_Value_2_LiteralInteger630->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Value_2_LiteralInteger630->setValue(2);
			fUML_Tests_TestClassReclassifier_Value_2->setValue(fUML_Tests_TestClassReclassifier_Value_2_LiteralInteger630);
				// OutputPin result
				fUML_Tests_TestClassReclassifier_Value_2_result->setThisElementPtr(fUML_Tests_TestClassReclassifier_Value_2_result);
				fUML_Tests_TestClassReclassifier_Value_2_result->setName("result");
				fUML_Tests_TestClassReclassifier_Value_2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Value_2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassReclassifier_Value_2->setResult(fUML_Tests_TestClassReclassifier_Value_2_result);
		fUML_Tests_TestClassReclassifier->addNode(fUML_Tests_TestClassReclassifier_Value_2);
			// AddStructuralFeatureValueAction Write(y)
			fUML_Tests_TestClassReclassifier_Write_y->setThisExecutableNodePtr(fUML_Tests_TestClassReclassifier_Write_y);
			fUML_Tests_TestClassReclassifier_Write_y->setName("Write(y)");
			fUML_Tests_TestClassReclassifier_Write_y->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassReclassifier_Write_y->setStructuralFeature(fUML_Tests_TestClass_y);
				// InputPin object
				fUML_Tests_TestClassReclassifier_Write_y_object->setThisElementPtr(fUML_Tests_TestClassReclassifier_Write_y_object);
				fUML_Tests_TestClassReclassifier_Write_y_object->setName("object");
				fUML_Tests_TestClassReclassifier_Write_y_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Write_y_object->setType(fUML_Tests_Subclass1);
			fUML_Tests_TestClassReclassifier_Write_y->setObject(fUML_Tests_TestClassReclassifier_Write_y_object);
				// InputPin value
				fUML_Tests_TestClassReclassifier_Write_y_value->setThisElementPtr(fUML_Tests_TestClassReclassifier_Write_y_value);
				fUML_Tests_TestClassReclassifier_Write_y_value->setName("value");
				fUML_Tests_TestClassReclassifier_Write_y_value->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassReclassifier_Write_y->setValue(fUML_Tests_TestClassReclassifier_Write_y_value);
				// OutputPin result
				fUML_Tests_TestClassReclassifier_Write_y_result->setThisElementPtr(fUML_Tests_TestClassReclassifier_Write_y_result);
				fUML_Tests_TestClassReclassifier_Write_y_result->setName("result");
				fUML_Tests_TestClassReclassifier_Write_y_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Write_y_result->setType(fUML_Tests_Subclass1);
			fUML_Tests_TestClassReclassifier_Write_y->setResult(fUML_Tests_TestClassReclassifier_Write_y_result);
			fUML_Tests_TestClassReclassifier_Write_y->setIsReplaceAll(true);
		fUML_Tests_TestClassReclassifier->addNode(fUML_Tests_TestClassReclassifier_Write_y);
			// AddStructuralFeatureValueAction Write(a)
			fUML_Tests_TestClassReclassifier_Write_a->setThisExecutableNodePtr(fUML_Tests_TestClassReclassifier_Write_a);
			fUML_Tests_TestClassReclassifier_Write_a->setName("Write(a)");
			fUML_Tests_TestClassReclassifier_Write_a->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassReclassifier_Write_a->setStructuralFeature(fUML_Tests_Subclass1_a);
				// InputPin object
				fUML_Tests_TestClassReclassifier_Write_a_object->setThisElementPtr(fUML_Tests_TestClassReclassifier_Write_a_object);
				fUML_Tests_TestClassReclassifier_Write_a_object->setName("object");
				fUML_Tests_TestClassReclassifier_Write_a_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Write_a_object->setType(fUML_Tests_Subclass1);
			fUML_Tests_TestClassReclassifier_Write_a->setObject(fUML_Tests_TestClassReclassifier_Write_a_object);
				// InputPin value
				fUML_Tests_TestClassReclassifier_Write_a_value->setThisElementPtr(fUML_Tests_TestClassReclassifier_Write_a_value);
				fUML_Tests_TestClassReclassifier_Write_a_value->setName("value");
				fUML_Tests_TestClassReclassifier_Write_a_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Write_a_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestClassReclassifier_Write_a->setValue(fUML_Tests_TestClassReclassifier_Write_a_value);
				// OutputPin result
				fUML_Tests_TestClassReclassifier_Write_a_result->setThisElementPtr(fUML_Tests_TestClassReclassifier_Write_a_result);
				fUML_Tests_TestClassReclassifier_Write_a_result->setName("result");
				fUML_Tests_TestClassReclassifier_Write_a_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Write_a_result->setType(fUML_Tests_Subclass1);
			fUML_Tests_TestClassReclassifier_Write_a->setResult(fUML_Tests_TestClassReclassifier_Write_a_result);
		fUML_Tests_TestClassReclassifier->addNode(fUML_Tests_TestClassReclassifier_Write_a);
			// ValueSpecificationAction Value(true)
			fUML_Tests_TestClassReclassifier_Value_true->setThisExecutableNodePtr(fUML_Tests_TestClassReclassifier_Value_true);
			fUML_Tests_TestClassReclassifier_Value_true->setName("Value(true)");
			fUML_Tests_TestClassReclassifier_Value_true->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean645
				fUML_Tests_TestClassReclassifier_Value_true_LiteralBoolean645->setThisElementPtr(fUML_Tests_TestClassReclassifier_Value_true_LiteralBoolean645);
				fUML_Tests_TestClassReclassifier_Value_true_LiteralBoolean645->setName("LiteralBoolean645");
				fUML_Tests_TestClassReclassifier_Value_true_LiteralBoolean645->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Value_true_LiteralBoolean645->setValue(true);
			fUML_Tests_TestClassReclassifier_Value_true->setValue(fUML_Tests_TestClassReclassifier_Value_true_LiteralBoolean645);
				// OutputPin result
				fUML_Tests_TestClassReclassifier_Value_true_result->setThisElementPtr(fUML_Tests_TestClassReclassifier_Value_true_result);
				fUML_Tests_TestClassReclassifier_Value_true_result->setName("result");
				fUML_Tests_TestClassReclassifier_Value_true_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Value_true_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestClassReclassifier_Value_true->setResult(fUML_Tests_TestClassReclassifier_Value_true_result);
		fUML_Tests_TestClassReclassifier->addNode(fUML_Tests_TestClassReclassifier_Value_true);
			// ObjectFlow ObjectFlow604 from result to value
			fUML_Tests_TestClassReclassifier_ObjectFlow604->setThisActivityEdgePtr(fUML_Tests_TestClassReclassifier_ObjectFlow604);
			fUML_Tests_TestClassReclassifier_ObjectFlow604->setName("ObjectFlow604");
			fUML_Tests_TestClassReclassifier_ObjectFlow604->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassReclassifier_ObjectFlow604->setSource(fUML_Tests_TestClassReclassifier_Value_2_result);
			fUML_Tests_TestClassReclassifier_ObjectFlow604->setTarget(fUML_Tests_TestClassReclassifier_Write_y_value);
		fUML_Tests_TestClassReclassifier->addEdge(fUML_Tests_TestClassReclassifier_ObjectFlow604);
			// ObjectFlow ObjectFlow606 from ForkNode610 to object
			fUML_Tests_TestClassReclassifier_ObjectFlow606->setThisActivityEdgePtr(fUML_Tests_TestClassReclassifier_ObjectFlow606);
			fUML_Tests_TestClassReclassifier_ObjectFlow606->setName("ObjectFlow606");
			fUML_Tests_TestClassReclassifier_ObjectFlow606->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassReclassifier_ObjectFlow606->setSource(fUML_Tests_TestClassReclassifier_ForkNode610);
			fUML_Tests_TestClassReclassifier_ObjectFlow606->setTarget(fUML_Tests_TestClassReclassifier_Reclassify_Subclass2_object);
		fUML_Tests_TestClassReclassifier->addEdge(fUML_Tests_TestClassReclassifier_ObjectFlow606);
			// ObjectFlow ObjectFlow611 from result to object
			fUML_Tests_TestClassReclassifier_ObjectFlow611->setThisActivityEdgePtr(fUML_Tests_TestClassReclassifier_ObjectFlow611);
			fUML_Tests_TestClassReclassifier_ObjectFlow611->setName("ObjectFlow611");
			fUML_Tests_TestClassReclassifier_ObjectFlow611->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassReclassifier_ObjectFlow611->setSource(fUML_Tests_TestClassReclassifier_Write_x_result);
			fUML_Tests_TestClassReclassifier_ObjectFlow611->setTarget(fUML_Tests_TestClassReclassifier_Write_y_object);
		fUML_Tests_TestClassReclassifier->addEdge(fUML_Tests_TestClassReclassifier_ObjectFlow611);
			// ObjectFlow ObjectFlow628 from result to value
			fUML_Tests_TestClassReclassifier_ObjectFlow628->setThisActivityEdgePtr(fUML_Tests_TestClassReclassifier_ObjectFlow628);
			fUML_Tests_TestClassReclassifier_ObjectFlow628->setName("ObjectFlow628");
			fUML_Tests_TestClassReclassifier_ObjectFlow628->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassReclassifier_ObjectFlow628->setSource(fUML_Tests_TestClassReclassifier_Value_1_result);
			fUML_Tests_TestClassReclassifier_ObjectFlow628->setTarget(fUML_Tests_TestClassReclassifier_Write_x_value);
		fUML_Tests_TestClassReclassifier->addEdge(fUML_Tests_TestClassReclassifier_ObjectFlow628);
			// ObjectFlow ObjectFlow618 from result to object
			fUML_Tests_TestClassReclassifier_ObjectFlow618->setThisActivityEdgePtr(fUML_Tests_TestClassReclassifier_ObjectFlow618);
			fUML_Tests_TestClassReclassifier_ObjectFlow618->setName("ObjectFlow618");
			fUML_Tests_TestClassReclassifier_ObjectFlow618->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassReclassifier_ObjectFlow618->setSource(fUML_Tests_TestClassReclassifier_Create_Subclass1_result);
			fUML_Tests_TestClassReclassifier_ObjectFlow618->setTarget(fUML_Tests_TestClassReclassifier_Write_x_object);
		fUML_Tests_TestClassReclassifier->addEdge(fUML_Tests_TestClassReclassifier_ObjectFlow618);
			// ObjectFlow ObjectFlow646 from result to object
			fUML_Tests_TestClassReclassifier_ObjectFlow646->setThisActivityEdgePtr(fUML_Tests_TestClassReclassifier_ObjectFlow646);
			fUML_Tests_TestClassReclassifier_ObjectFlow646->setName("ObjectFlow646");
			fUML_Tests_TestClassReclassifier_ObjectFlow646->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassReclassifier_ObjectFlow646->setSource(fUML_Tests_TestClassReclassifier_Write_y_result);
			fUML_Tests_TestClassReclassifier_ObjectFlow646->setTarget(fUML_Tests_TestClassReclassifier_Write_a_object);
		fUML_Tests_TestClassReclassifier->addEdge(fUML_Tests_TestClassReclassifier_ObjectFlow646);
			// ObjectFlow ObjectFlow648 from result to ForkNode610
			fUML_Tests_TestClassReclassifier_ObjectFlow648->setThisActivityEdgePtr(fUML_Tests_TestClassReclassifier_ObjectFlow648);
			fUML_Tests_TestClassReclassifier_ObjectFlow648->setName("ObjectFlow648");
			fUML_Tests_TestClassReclassifier_ObjectFlow648->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassReclassifier_ObjectFlow648->setSource(fUML_Tests_TestClassReclassifier_Write_a_result);
			fUML_Tests_TestClassReclassifier_ObjectFlow648->setTarget(fUML_Tests_TestClassReclassifier_ForkNode610);
		fUML_Tests_TestClassReclassifier->addEdge(fUML_Tests_TestClassReclassifier_ObjectFlow648);
			// ObjectFlow ObjectFlow620 from result to value
			fUML_Tests_TestClassReclassifier_ObjectFlow620->setThisActivityEdgePtr(fUML_Tests_TestClassReclassifier_ObjectFlow620);
			fUML_Tests_TestClassReclassifier_ObjectFlow620->setName("ObjectFlow620");
			fUML_Tests_TestClassReclassifier_ObjectFlow620->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassReclassifier_ObjectFlow620->setSource(fUML_Tests_TestClassReclassifier_Value_true_result);
			fUML_Tests_TestClassReclassifier_ObjectFlow620->setTarget(fUML_Tests_TestClassReclassifier_Write_a_value);
		fUML_Tests_TestClassReclassifier->addEdge(fUML_Tests_TestClassReclassifier_ObjectFlow620);
			// ObjectFlow ObjectFlow650 from ForkNode610 to resultNode
			fUML_Tests_TestClassReclassifier_ObjectFlow650->setThisActivityEdgePtr(fUML_Tests_TestClassReclassifier_ObjectFlow650);
			fUML_Tests_TestClassReclassifier_ObjectFlow650->setName("ObjectFlow650");
			fUML_Tests_TestClassReclassifier_ObjectFlow650->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassReclassifier_ObjectFlow650->setSource(fUML_Tests_TestClassReclassifier_ForkNode610);
			fUML_Tests_TestClassReclassifier_ObjectFlow650->setTarget(fUML_Tests_TestClassReclassifier_resultNode);
		fUML_Tests_TestClassReclassifier->addEdge(fUML_Tests_TestClassReclassifier_ObjectFlow650);
	fUML_Tests->addPackagedElement(fUML_Tests_TestClassReclassifier);
		// Association CompositeAssociation
		fUML_Tests_CompositeAssociation->setThisAssociationPtr(fUML_Tests_CompositeAssociation);
		fUML_Tests_CompositeAssociation->setName("CompositeAssociation");
		fUML_Tests_CompositeAssociation->setVisibility(VisibilityKind::public_);
		fUML_Tests_CompositeAssociation->addOwnedEnd(fUML_Tests_CompositeAssociation_c2);
		fUML_Tests_CompositeAssociation->addOwnedEnd(fUML_Tests_CompositeAssociation_composite);
		fUML_Tests_CompositeAssociation->addNavigableOwnedEnd(fUML_Tests_CompositeAssociation_c2);
	fUML_Tests->addPackagedElement(fUML_Tests_CompositeAssociation);
		// Activity SimpleDecision
		fUML_Tests_SimpleDecision->setThisActivityPtr(fUML_Tests_SimpleDecision);
		fUML_Tests_SimpleDecision->setName("SimpleDecision");
		fUML_Tests_SimpleDecision->setVisibility(VisibilityKind::public_);
		fUML_Tests_SimpleDecision->isReentrant = false;
			// Parameter testValue
			fUML_Tests_SimpleDecision_testValue->setThisElementPtr(fUML_Tests_SimpleDecision_testValue);
			fUML_Tests_SimpleDecision_testValue->setName("testValue");
			fUML_Tests_SimpleDecision_testValue->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_SimpleDecision_testValue->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
		fUML_Tests_SimpleDecision->addOwnedParameter(fUML_Tests_SimpleDecision_testValue);
			// Parameter output_0
			fUML_Tests_SimpleDecision_output_0->setThisElementPtr(fUML_Tests_SimpleDecision_output_0);
			fUML_Tests_SimpleDecision_output_0->setName("output_0");
			fUML_Tests_SimpleDecision_output_0->setVisibility(VisibilityKind::public_);
			fUML_Tests_SimpleDecision_output_0->setLower(0);
			fUML_Tests_SimpleDecision_output_0->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_SimpleDecision_output_0->setDirection(ParameterDirectionKind::out);
		fUML_Tests_SimpleDecision->addOwnedParameter(fUML_Tests_SimpleDecision_output_0);
			// Parameter output_1
			fUML_Tests_SimpleDecision_output_1->setThisElementPtr(fUML_Tests_SimpleDecision_output_1);
			fUML_Tests_SimpleDecision_output_1->setName("output_1");
			fUML_Tests_SimpleDecision_output_1->setVisibility(VisibilityKind::public_);
			fUML_Tests_SimpleDecision_output_1->setLower(0);
			fUML_Tests_SimpleDecision_output_1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_SimpleDecision_output_1->setDirection(ParameterDirectionKind::out);
		fUML_Tests_SimpleDecision->addOwnedParameter(fUML_Tests_SimpleDecision_output_1);
			// ActivityParameterNode Parameter(testValue)
			fUML_Tests_SimpleDecision_Parameter_testValue->setThisElementPtr(fUML_Tests_SimpleDecision_Parameter_testValue);
			fUML_Tests_SimpleDecision_Parameter_testValue->setName("Parameter(testValue)");
			fUML_Tests_SimpleDecision_Parameter_testValue->setVisibility(VisibilityKind::public_);
			fUML_Tests_SimpleDecision_Parameter_testValue->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_SimpleDecision_Parameter_testValue->setParameter(fUML_Tests_SimpleDecision_testValue);
		fUML_Tests_SimpleDecision->addNode(fUML_Tests_SimpleDecision_Parameter_testValue);
			// DecisionNode DecisionNode
			fUML_Tests_SimpleDecision_DecisionNode->setThisElementPtr(fUML_Tests_SimpleDecision_DecisionNode);
			fUML_Tests_SimpleDecision_DecisionNode->setName("DecisionNode");
			fUML_Tests_SimpleDecision_DecisionNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_SimpleDecision->addNode(fUML_Tests_SimpleDecision_DecisionNode);
			// ActivityParameterNode Parameter(output_1)
			fUML_Tests_SimpleDecision_Parameter_output_1->setThisElementPtr(fUML_Tests_SimpleDecision_Parameter_output_1);
			fUML_Tests_SimpleDecision_Parameter_output_1->setName("Parameter(output_1)");
			fUML_Tests_SimpleDecision_Parameter_output_1->setVisibility(VisibilityKind::public_);
			fUML_Tests_SimpleDecision_Parameter_output_1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_SimpleDecision_Parameter_output_1->setParameter(fUML_Tests_SimpleDecision_output_1);
		fUML_Tests_SimpleDecision->addNode(fUML_Tests_SimpleDecision_Parameter_output_1);
			// ActivityParameterNode Parameter(output_0)
			fUML_Tests_SimpleDecision_Parameter_output_0->setThisElementPtr(fUML_Tests_SimpleDecision_Parameter_output_0);
			fUML_Tests_SimpleDecision_Parameter_output_0->setName("Parameter(output_0)");
			fUML_Tests_SimpleDecision_Parameter_output_0->setVisibility(VisibilityKind::public_);
			fUML_Tests_SimpleDecision_Parameter_output_0->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_SimpleDecision_Parameter_output_0->setParameter(fUML_Tests_SimpleDecision_output_0);
		fUML_Tests_SimpleDecision->addNode(fUML_Tests_SimpleDecision_Parameter_output_0);
			// ObjectFlow ObjectFlow656 from DecisionNode to Parameter(output_0)
			fUML_Tests_SimpleDecision_ObjectFlow656->setThisActivityEdgePtr(fUML_Tests_SimpleDecision_ObjectFlow656);
			fUML_Tests_SimpleDecision_ObjectFlow656->setName("ObjectFlow656");
			fUML_Tests_SimpleDecision_ObjectFlow656->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_SimpleDecision_ObjectFlow656->setSource(fUML_Tests_SimpleDecision_DecisionNode);
			fUML_Tests_SimpleDecision_ObjectFlow656->setTarget(fUML_Tests_SimpleDecision_Parameter_output_0);
				// LiteralInteger LiteralInteger658
				fUML_Tests_SimpleDecision_ObjectFlow656_LiteralInteger658->setThisElementPtr(fUML_Tests_SimpleDecision_ObjectFlow656_LiteralInteger658);
				fUML_Tests_SimpleDecision_ObjectFlow656_LiteralInteger658->setName("LiteralInteger658");
				fUML_Tests_SimpleDecision_ObjectFlow656_LiteralInteger658->setVisibility(VisibilityKind::public_);
				fUML_Tests_SimpleDecision_ObjectFlow656_LiteralInteger658->setValue(0);
			fUML_Tests_SimpleDecision_ObjectFlow656->setGuard(fUML_Tests_SimpleDecision_ObjectFlow656_LiteralInteger658);
		fUML_Tests_SimpleDecision->addEdge(fUML_Tests_SimpleDecision_ObjectFlow656);
			// ObjectFlow ObjectFlow661 from DecisionNode to Parameter(output_1)
			fUML_Tests_SimpleDecision_ObjectFlow661->setThisActivityEdgePtr(fUML_Tests_SimpleDecision_ObjectFlow661);
			fUML_Tests_SimpleDecision_ObjectFlow661->setName("ObjectFlow661");
			fUML_Tests_SimpleDecision_ObjectFlow661->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_SimpleDecision_ObjectFlow661->setSource(fUML_Tests_SimpleDecision_DecisionNode);
			fUML_Tests_SimpleDecision_ObjectFlow661->setTarget(fUML_Tests_SimpleDecision_Parameter_output_1);
				// LiteralInteger LiteralInteger662
				fUML_Tests_SimpleDecision_ObjectFlow661_LiteralInteger662->setThisElementPtr(fUML_Tests_SimpleDecision_ObjectFlow661_LiteralInteger662);
				fUML_Tests_SimpleDecision_ObjectFlow661_LiteralInteger662->setName("LiteralInteger662");
				fUML_Tests_SimpleDecision_ObjectFlow661_LiteralInteger662->setVisibility(VisibilityKind::public_);
				fUML_Tests_SimpleDecision_ObjectFlow661_LiteralInteger662->setValue(1);
			fUML_Tests_SimpleDecision_ObjectFlow661->setGuard(fUML_Tests_SimpleDecision_ObjectFlow661_LiteralInteger662);
		fUML_Tests_SimpleDecision->addEdge(fUML_Tests_SimpleDecision_ObjectFlow661);
			// ObjectFlow ObjectFlow664 from Parameter(testValue) to DecisionNode
			fUML_Tests_SimpleDecision_ObjectFlow664->setThisActivityEdgePtr(fUML_Tests_SimpleDecision_ObjectFlow664);
			fUML_Tests_SimpleDecision_ObjectFlow664->setName("ObjectFlow664");
			fUML_Tests_SimpleDecision_ObjectFlow664->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_SimpleDecision_ObjectFlow664->setSource(fUML_Tests_SimpleDecision_Parameter_testValue);
			fUML_Tests_SimpleDecision_ObjectFlow664->setTarget(fUML_Tests_SimpleDecision_DecisionNode);
		fUML_Tests_SimpleDecision->addEdge(fUML_Tests_SimpleDecision_ObjectFlow664);
	fUML_Tests->addPackagedElement(fUML_Tests_SimpleDecision);
		// Activity TestSpecializedSignalSend
		fUML_Tests_TestSpecializedSignalSend->setThisActivityPtr(fUML_Tests_TestSpecializedSignalSend);
		fUML_Tests_TestSpecializedSignalSend->setName("TestSpecializedSignalSend");
		fUML_Tests_TestSpecializedSignalSend->setVisibility(VisibilityKind::public_);
			// SendSignalAction Send(SpecializedSignal)
			fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal->setThisExecutableNodePtr(fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal);
			fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal->setName("Send(SpecializedSignal)");
			fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal->setSignal(fUML_Tests_SpecializedSignal);
				// InputPin target
				fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target->setThisElementPtr(fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target);
				fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target->setName("target");
				fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target->setType(fUML_Tests_TestSignalReceiver);
			fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal->setTarget(fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target);
		fUML_Tests_TestSpecializedSignalSend->addNode(fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal);
			// CreateObjectAction Create(TestSignalReceiver)
			fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver->setThisExecutableNodePtr(fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver);
			fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver->setName("Create(TestSignalReceiver)");
			fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver->setClassifier(fUML_Tests_TestSignalReceiver);
				// OutputPin result
				fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result->setThisElementPtr(fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result);
				fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result->setName("result");
				fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result->setType(fUML_Tests_TestSignalReceiver);
			fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver->setResult(fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result);
		fUML_Tests_TestSpecializedSignalSend->addNode(fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver);
			// StartObjectBehaviorAction Start(TestSignalReceiver)
			fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver->setThisExecutableNodePtr(fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver);
			fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver->setName("Start(TestSignalReceiver)");
			fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver->setVisibility(VisibilityKind::public_);
				// InputPin object
				fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object->setThisElementPtr(fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object);
				fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object->setName("object");
				fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object->setType(fUML_Tests_TestSignalReceiver);
			fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver->setObject(fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object);
		fUML_Tests_TestSpecializedSignalSend->addNode(fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver);
			// ForkNode ForkNode678
			fUML_Tests_TestSpecializedSignalSend_ForkNode678->setThisElementPtr(fUML_Tests_TestSpecializedSignalSend_ForkNode678);
			fUML_Tests_TestSpecializedSignalSend_ForkNode678->setName("ForkNode678");
			fUML_Tests_TestSpecializedSignalSend_ForkNode678->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestSpecializedSignalSend->addNode(fUML_Tests_TestSpecializedSignalSend_ForkNode678);
			// InitialNode InitialNode685
			fUML_Tests_TestSpecializedSignalSend_InitialNode685->setThisElementPtr(fUML_Tests_TestSpecializedSignalSend_InitialNode685);
			fUML_Tests_TestSpecializedSignalSend_InitialNode685->setName("InitialNode685");
			fUML_Tests_TestSpecializedSignalSend_InitialNode685->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestSpecializedSignalSend->addNode(fUML_Tests_TestSpecializedSignalSend_InitialNode685);
			// ActivityFinalNode ActivityFinalNode686
			fUML_Tests_TestSpecializedSignalSend_ActivityFinalNode686->setThisElementPtr(fUML_Tests_TestSpecializedSignalSend_ActivityFinalNode686);
			fUML_Tests_TestSpecializedSignalSend_ActivityFinalNode686->setName("ActivityFinalNode686");
			fUML_Tests_TestSpecializedSignalSend_ActivityFinalNode686->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestSpecializedSignalSend->addNode(fUML_Tests_TestSpecializedSignalSend_ActivityFinalNode686);
			// ObjectFlow ObjectFlow666 from ForkNode678 to object
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow666->setThisActivityEdgePtr(fUML_Tests_TestSpecializedSignalSend_ObjectFlow666);
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow666->setName("ObjectFlow666");
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow666->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow666->setSource(fUML_Tests_TestSpecializedSignalSend_ForkNode678);
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow666->setTarget(fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object);
		fUML_Tests_TestSpecializedSignalSend->addEdge(fUML_Tests_TestSpecializedSignalSend_ObjectFlow666);
			// ControlFlow ControlFlow668 from InitialNode685 to Create(TestSignalReceiver)
			fUML_Tests_TestSpecializedSignalSend_ControlFlow668->setThisActivityEdgePtr(fUML_Tests_TestSpecializedSignalSend_ControlFlow668);
			fUML_Tests_TestSpecializedSignalSend_ControlFlow668->setName("ControlFlow668");
			fUML_Tests_TestSpecializedSignalSend_ControlFlow668->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSpecializedSignalSend_ControlFlow668->setSource(fUML_Tests_TestSpecializedSignalSend_InitialNode685);
			fUML_Tests_TestSpecializedSignalSend_ControlFlow668->setTarget(fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver);
		fUML_Tests_TestSpecializedSignalSend->addEdge(fUML_Tests_TestSpecializedSignalSend_ControlFlow668);
			// ObjectFlow ObjectFlow679 from result to ForkNode678
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow679->setThisActivityEdgePtr(fUML_Tests_TestSpecializedSignalSend_ObjectFlow679);
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow679->setName("ObjectFlow679");
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow679->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow679->setSource(fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result);
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow679->setTarget(fUML_Tests_TestSpecializedSignalSend_ForkNode678);
		fUML_Tests_TestSpecializedSignalSend->addEdge(fUML_Tests_TestSpecializedSignalSend_ObjectFlow679);
			// ObjectFlow ObjectFlow676 from ForkNode678 to target
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow676->setThisActivityEdgePtr(fUML_Tests_TestSpecializedSignalSend_ObjectFlow676);
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow676->setName("ObjectFlow676");
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow676->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow676->setSource(fUML_Tests_TestSpecializedSignalSend_ForkNode678);
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow676->setTarget(fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target);
		fUML_Tests_TestSpecializedSignalSend->addEdge(fUML_Tests_TestSpecializedSignalSend_ObjectFlow676);
			// ControlFlow ControlFlow681 from Send(SpecializedSignal) to ActivityFinalNode686
			fUML_Tests_TestSpecializedSignalSend_ControlFlow681->setThisActivityEdgePtr(fUML_Tests_TestSpecializedSignalSend_ControlFlow681);
			fUML_Tests_TestSpecializedSignalSend_ControlFlow681->setName("ControlFlow681");
			fUML_Tests_TestSpecializedSignalSend_ControlFlow681->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSpecializedSignalSend_ControlFlow681->setSource(fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal);
			fUML_Tests_TestSpecializedSignalSend_ControlFlow681->setTarget(fUML_Tests_TestSpecializedSignalSend_ActivityFinalNode686);
		fUML_Tests_TestSpecializedSignalSend->addEdge(fUML_Tests_TestSpecializedSignalSend_ControlFlow681);
			// ControlFlow ControlFlow683 from Start(TestSignalReceiver) to Send(SpecializedSignal)
			fUML_Tests_TestSpecializedSignalSend_ControlFlow683->setThisActivityEdgePtr(fUML_Tests_TestSpecializedSignalSend_ControlFlow683);
			fUML_Tests_TestSpecializedSignalSend_ControlFlow683->setName("ControlFlow683");
			fUML_Tests_TestSpecializedSignalSend_ControlFlow683->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSpecializedSignalSend_ControlFlow683->setSource(fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver);
			fUML_Tests_TestSpecializedSignalSend_ControlFlow683->setTarget(fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal);
		fUML_Tests_TestSpecializedSignalSend->addEdge(fUML_Tests_TestSpecializedSignalSend_ControlFlow683);
	fUML_Tests->addPackagedElement(fUML_Tests_TestSpecializedSignalSend);
		// Activity TestCallAccepter
		fUML_Tests_TestCallAccepter->setThisActivityPtr(fUML_Tests_TestCallAccepter);
		fUML_Tests_TestCallAccepter->setName("TestCallAccepter");
		fUML_Tests_TestCallAccepter->setVisibility(VisibilityKind::public_);
			// Operation test
			fUML_Tests_TestCallAccepter_test->setThisOperationPtr(fUML_Tests_TestCallAccepter_test);
			fUML_Tests_TestCallAccepter_test->setName("test");
			fUML_Tests_TestCallAccepter_test->setVisibility(VisibilityKind::public_);
				// Parameter input
				fUML_Tests_TestCallAccepter_test_input->setThisElementPtr(fUML_Tests_TestCallAccepter_test_input);
				fUML_Tests_TestCallAccepter_test_input->setName("input");
				fUML_Tests_TestCallAccepter_test_input->setVisibility(VisibilityKind::public_);
				
				fUML_Tests_TestCallAccepter_test_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestCallAccepter_test->addOwnedParameter(fUML_Tests_TestCallAccepter_test_input);
				// Parameter output
				fUML_Tests_TestCallAccepter_test_output->setThisElementPtr(fUML_Tests_TestCallAccepter_test_output);
				fUML_Tests_TestCallAccepter_test_output->setName("output");
				fUML_Tests_TestCallAccepter_test_output->setVisibility(VisibilityKind::public_);
				
				fUML_Tests_TestCallAccepter_test_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_TestCallAccepter_test_output->setDirection(ParameterDirectionKind::out);
			fUML_Tests_TestCallAccepter_test->addOwnedParameter(fUML_Tests_TestCallAccepter_test_output);
		fUML_Tests_TestCallAccepter->addOwnedOperation(fUML_Tests_TestCallAccepter_test);
			// ReplyAction Reply(test)
			fUML_Tests_TestCallAccepter_Reply_test->setThisExecutableNodePtr(fUML_Tests_TestCallAccepter_Reply_test);
			fUML_Tests_TestCallAccepter_Reply_test->setName("Reply(test)");
			fUML_Tests_TestCallAccepter_Reply_test->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallAccepter_Reply_test->setReplyToCall(fUML_Tests_TestCallAccepter_Accept_test_Trigger694);
				// InputPin Reply(test).returnInfo
				fUML_Tests_TestCallAccepter_Reply_test_Reply_test_returnInfo->setThisElementPtr(fUML_Tests_TestCallAccepter_Reply_test_Reply_test_returnInfo);
				fUML_Tests_TestCallAccepter_Reply_test_Reply_test_returnInfo->setName("Reply(test).returnInfo");
				fUML_Tests_TestCallAccepter_Reply_test_Reply_test_returnInfo->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallAccepter_Reply_test->setReturnInformation(fUML_Tests_TestCallAccepter_Reply_test_Reply_test_returnInfo);
				// InputPin Reply(test).replyValue
				fUML_Tests_TestCallAccepter_Reply_test_Reply_test_replyValue->setThisElementPtr(fUML_Tests_TestCallAccepter_Reply_test_Reply_test_replyValue);
				fUML_Tests_TestCallAccepter_Reply_test_Reply_test_replyValue->setName("Reply(test).replyValue");
				fUML_Tests_TestCallAccepter_Reply_test_Reply_test_replyValue->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallAccepter_Reply_test->addReplyValue(fUML_Tests_TestCallAccepter_Reply_test_Reply_test_replyValue);
		fUML_Tests_TestCallAccepter->addNode(fUML_Tests_TestCallAccepter_Reply_test);
			// InitialNode InitialNode693
			fUML_Tests_TestCallAccepter_InitialNode693->setThisElementPtr(fUML_Tests_TestCallAccepter_InitialNode693);
			fUML_Tests_TestCallAccepter_InitialNode693->setName("InitialNode693");
			fUML_Tests_TestCallAccepter_InitialNode693->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestCallAccepter->addNode(fUML_Tests_TestCallAccepter_InitialNode693);
			// AcceptCallAction Accept(test)
			fUML_Tests_TestCallAccepter_Accept_test->setThisExecutableNodePtr(fUML_Tests_TestCallAccepter_Accept_test);
			fUML_Tests_TestCallAccepter_Accept_test->setName("Accept(test)");
			fUML_Tests_TestCallAccepter_Accept_test->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallAccepter_Accept_test->setIsUnmarshall(true);
				// OutputPin Accept(test).result
				fUML_Tests_TestCallAccepter_Accept_test_Accept_test_result->setThisElementPtr(fUML_Tests_TestCallAccepter_Accept_test_Accept_test_result);
				fUML_Tests_TestCallAccepter_Accept_test_Accept_test_result->setName("Accept(test).result");
				fUML_Tests_TestCallAccepter_Accept_test_Accept_test_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallAccepter_Accept_test->addResult(fUML_Tests_TestCallAccepter_Accept_test_Accept_test_result);
				fUML_Tests_TestCallAccepter_Accept_test_Trigger694->setName("Trigger694");
				fUML_Tests_TestCallAccepter_Accept_test_Trigger694->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCallAccepter_Accept_test_Trigger694->setEvent(fUML_Tests_CallEvent1131);
			fUML_Tests_TestCallAccepter_Accept_test->addTrigger(fUML_Tests_TestCallAccepter_Accept_test_Trigger694);
				// OutputPin Accept(test).returnInfo
				fUML_Tests_TestCallAccepter_Accept_test_Accept_test_returnInfo->setThisElementPtr(fUML_Tests_TestCallAccepter_Accept_test_Accept_test_returnInfo);
				fUML_Tests_TestCallAccepter_Accept_test_Accept_test_returnInfo->setName("Accept(test).returnInfo");
				fUML_Tests_TestCallAccepter_Accept_test_Accept_test_returnInfo->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallAccepter_Accept_test->setReturnInformation(fUML_Tests_TestCallAccepter_Accept_test_Accept_test_returnInfo);
		fUML_Tests_TestCallAccepter->addNode(fUML_Tests_TestCallAccepter_Accept_test);
			// ObjectFlow ObjectFlow687 from Accept(test).result to Reply(test).replyValue
			fUML_Tests_TestCallAccepter_ObjectFlow687->setThisActivityEdgePtr(fUML_Tests_TestCallAccepter_ObjectFlow687);
			fUML_Tests_TestCallAccepter_ObjectFlow687->setName("ObjectFlow687");
			fUML_Tests_TestCallAccepter_ObjectFlow687->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallAccepter_ObjectFlow687->setSource(fUML_Tests_TestCallAccepter_Accept_test_Accept_test_result);
			fUML_Tests_TestCallAccepter_ObjectFlow687->setTarget(fUML_Tests_TestCallAccepter_Reply_test_Reply_test_replyValue);
		fUML_Tests_TestCallAccepter->addEdge(fUML_Tests_TestCallAccepter_ObjectFlow687);
			// ObjectFlow ObjectFlow689 from Accept(test).returnInfo to Reply(test).returnInfo
			fUML_Tests_TestCallAccepter_ObjectFlow689->setThisActivityEdgePtr(fUML_Tests_TestCallAccepter_ObjectFlow689);
			fUML_Tests_TestCallAccepter_ObjectFlow689->setName("ObjectFlow689");
			fUML_Tests_TestCallAccepter_ObjectFlow689->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallAccepter_ObjectFlow689->setSource(fUML_Tests_TestCallAccepter_Accept_test_Accept_test_returnInfo);
			fUML_Tests_TestCallAccepter_ObjectFlow689->setTarget(fUML_Tests_TestCallAccepter_Reply_test_Reply_test_returnInfo);
		fUML_Tests_TestCallAccepter->addEdge(fUML_Tests_TestCallAccepter_ObjectFlow689);
			// ControlFlow ControlFlow691 from InitialNode693 to Accept(test)
			fUML_Tests_TestCallAccepter_ControlFlow691->setThisActivityEdgePtr(fUML_Tests_TestCallAccepter_ControlFlow691);
			fUML_Tests_TestCallAccepter_ControlFlow691->setName("ControlFlow691");
			fUML_Tests_TestCallAccepter_ControlFlow691->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallAccepter_ControlFlow691->setSource(fUML_Tests_TestCallAccepter_InitialNode693);
			fUML_Tests_TestCallAccepter_ControlFlow691->setTarget(fUML_Tests_TestCallAccepter_Accept_test);
		fUML_Tests_TestCallAccepter->addEdge(fUML_Tests_TestCallAccepter_ControlFlow691);
	fUML_Tests->addPackagedElement(fUML_Tests_TestCallAccepter);
		// Activity TestGeneralizationAssembly
		fUML_Tests_TestGeneralizationAssembly->setThisActivityPtr(fUML_Tests_TestGeneralizationAssembly);
		fUML_Tests_TestGeneralizationAssembly->setName("TestGeneralizationAssembly");
		fUML_Tests_TestGeneralizationAssembly->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestGeneralizationAssembly->isReentrant = false;
			// Parameter result
			fUML_Tests_TestGeneralizationAssembly_result->setThisElementPtr(fUML_Tests_TestGeneralizationAssembly_result);
			fUML_Tests_TestGeneralizationAssembly_result->setName("result");
			fUML_Tests_TestGeneralizationAssembly_result->setVisibility(VisibilityKind::public_);
			
			
			fUML_Tests_TestGeneralizationAssembly_result->setDirection(ParameterDirectionKind::inout);
		fUML_Tests_TestGeneralizationAssembly->addOwnedParameter(fUML_Tests_TestGeneralizationAssembly_result);
			// CreateObjectAction Create(Specific)
			fUML_Tests_TestGeneralizationAssembly_Create_Specific->setThisExecutableNodePtr(fUML_Tests_TestGeneralizationAssembly_Create_Specific);
			fUML_Tests_TestGeneralizationAssembly_Create_Specific->setName("Create(Specific)");
			fUML_Tests_TestGeneralizationAssembly_Create_Specific->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestGeneralizationAssembly_Create_Specific->setClassifier(fUML_Tests_Specific);
				// OutputPin CreateObjectAction.result
				fUML_Tests_TestGeneralizationAssembly_Create_Specific_CreateObjectAction_result->setThisElementPtr(fUML_Tests_TestGeneralizationAssembly_Create_Specific_CreateObjectAction_result);
				fUML_Tests_TestGeneralizationAssembly_Create_Specific_CreateObjectAction_result->setName("CreateObjectAction.result");
				fUML_Tests_TestGeneralizationAssembly_Create_Specific_CreateObjectAction_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestGeneralizationAssembly_Create_Specific->setResult(fUML_Tests_TestGeneralizationAssembly_Create_Specific_CreateObjectAction_result);
		fUML_Tests_TestGeneralizationAssembly->addNode(fUML_Tests_TestGeneralizationAssembly_Create_Specific);
			// ActivityParameterNode ActivityParameterNode
			fUML_Tests_TestGeneralizationAssembly_ActivityParameterNode->setThisElementPtr(fUML_Tests_TestGeneralizationAssembly_ActivityParameterNode);
			fUML_Tests_TestGeneralizationAssembly_ActivityParameterNode->setName("ActivityParameterNode");
			fUML_Tests_TestGeneralizationAssembly_ActivityParameterNode->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestGeneralizationAssembly_ActivityParameterNode->setParameter(fUML_Tests_TestGeneralizationAssembly_result);
		fUML_Tests_TestGeneralizationAssembly->addNode(fUML_Tests_TestGeneralizationAssembly_ActivityParameterNode);
			// ObjectFlow ObjectFlow695 from CreateObjectAction.result to ActivityParameterNode
			fUML_Tests_TestGeneralizationAssembly_ObjectFlow695->setThisActivityEdgePtr(fUML_Tests_TestGeneralizationAssembly_ObjectFlow695);
			fUML_Tests_TestGeneralizationAssembly_ObjectFlow695->setName("ObjectFlow695");
			fUML_Tests_TestGeneralizationAssembly_ObjectFlow695->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestGeneralizationAssembly_ObjectFlow695->setSource(fUML_Tests_TestGeneralizationAssembly_Create_Specific_CreateObjectAction_result);
			fUML_Tests_TestGeneralizationAssembly_ObjectFlow695->setTarget(fUML_Tests_TestGeneralizationAssembly_ActivityParameterNode);
		fUML_Tests_TestGeneralizationAssembly->addEdge(fUML_Tests_TestGeneralizationAssembly_ObjectFlow695);
	fUML_Tests->addPackagedElement(fUML_Tests_TestGeneralizationAssembly);
		// Class ActiveClass
		fUML_Tests_ActiveClass->setThisClass_Ptr(fUML_Tests_ActiveClass);
		fUML_Tests_ActiveClass->setName("ActiveClass");
		fUML_Tests_ActiveClass->setVisibility(VisibilityKind::public_);
		
			// Property signal1
			fUML_Tests_ActiveClass_signal1->setThisElementPtr(fUML_Tests_ActiveClass_signal1);
			fUML_Tests_ActiveClass_signal1->setName("signal1");
			fUML_Tests_ActiveClass_signal1->setVisibility(VisibilityKind::private_);
			
			fUML_Tests_ActiveClass_signal1->setType(fUML_Tests_TestSignal);
		fUML_Tests_ActiveClass->addOwnedAttribute(fUML_Tests_ActiveClass_signal1);
			// Property signal2
			fUML_Tests_ActiveClass_signal2->setThisElementPtr(fUML_Tests_ActiveClass_signal2);
			fUML_Tests_ActiveClass_signal2->setName("signal2");
			fUML_Tests_ActiveClass_signal2->setVisibility(VisibilityKind::private_);
			
			fUML_Tests_ActiveClass_signal2->setType(fUML_Tests_OtherSignal);
		fUML_Tests_ActiveClass->addOwnedAttribute(fUML_Tests_ActiveClass_signal2);
		fUML_Tests_ActiveClass->setClassifierBehavior(fUML_Tests_ActiveClass_ActiveClassBehavior);
			// Activity ActiveClassBehavior
			fUML_Tests_ActiveClass_ActiveClassBehavior->setThisActivityPtr(fUML_Tests_ActiveClass_ActiveClassBehavior);
			fUML_Tests_ActiveClass_ActiveClassBehavior->setName("ActiveClassBehavior");
			fUML_Tests_ActiveClass_ActiveClassBehavior->setVisibility(VisibilityKind::public_);
				// ForkNode Fork(self)
				fUML_Tests_ActiveClass_ActiveClassBehavior_Fork_self->setThisElementPtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Fork_self);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Fork_self->setName("Fork(self)");
				fUML_Tests_ActiveClass_ActiveClassBehavior_Fork_self->setVisibility(VisibilityKind::public_);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addNode(fUML_Tests_ActiveClass_ActiveClassBehavior_Fork_self);
				// ReadSelfAction ReadSelf
				fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf->setThisExecutableNodePtr(fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf->setName("ReadSelf");
				fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf->setVisibility(VisibilityKind::public_);
					// OutputPin self
					fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf_self->setThisElementPtr(fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf_self);
					fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf_self->setName("self");
					fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf_self->setVisibility(VisibilityKind::public_);
					fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf_self->setType(fUML_Tests_ActiveClass);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf->setResult(fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf_self);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addNode(fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf);
				// AcceptEventAction Accept(OtherSignal)
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal->setThisExecutableNodePtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal->setName("Accept(OtherSignal)");
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal->setVisibility(VisibilityKind::public_);
					// OutputPin Accept(OtherSignal).result
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Accept_OtherSignal_result->setThisElementPtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Accept_OtherSignal_result);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Accept_OtherSignal_result->setName("Accept(OtherSignal).result");
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Accept_OtherSignal_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal->addResult(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Accept_OtherSignal_result);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Trigger702->setName("Trigger702");
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Trigger702->setVisibility(VisibilityKind::public_);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Trigger702->setEvent(fUML_Tests_SignalEvent1119);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal->addTrigger(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Trigger702);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addNode(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal);
				// AcceptEventAction Accept(TestSignal)
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal->setThisExecutableNodePtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal->setName("Accept(TestSignal)");
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal->setVisibility(VisibilityKind::public_);
					// OutputPin Accept(TestSignal).result
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Accept_TestSignal_result->setThisElementPtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Accept_TestSignal_result);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Accept_TestSignal_result->setName("Accept(TestSignal).result");
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Accept_TestSignal_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal->addResult(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Accept_TestSignal_result);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Trigger703->setName("Trigger703");
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Trigger703->setVisibility(VisibilityKind::public_);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Trigger703->setEvent(fUML_Tests_SignalEvent1579);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal->addTrigger(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Trigger703);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addNode(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal);
				// AddStructuralFeatureValueAction Write(signal1)
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1->setThisExecutableNodePtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1->setName("Write(signal1)");
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1->setVisibility(VisibilityKind::public_);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1->setStructuralFeature(fUML_Tests_ActiveClass_signal1);
					// InputPin Write(signal1).object
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_object->setThisElementPtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_object);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_object->setName("Write(signal1).object");
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_object->setVisibility(VisibilityKind::public_);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_object->setType(fUML_Tests_ActiveClass);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1->setObject(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_object);
					// InputPin Write(signal1).value
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_value->setThisElementPtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_value);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_value->setName("Write(signal1).value");
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1->setValue(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_value);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addNode(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1);
				// AddStructuralFeatureValueAction Write(signal2)
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2->setThisExecutableNodePtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2->setName("Write(signal2)");
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2->setVisibility(VisibilityKind::public_);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2->setStructuralFeature(fUML_Tests_ActiveClass_signal2);
					// InputPin Write(signal2).object
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_object->setThisElementPtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_object);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_object->setName("Write(signal2).object");
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_object->setVisibility(VisibilityKind::public_);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_object->setType(fUML_Tests_ActiveClass);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2->setObject(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_object);
					// InputPin Write(signal2).value
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_value->setThisElementPtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_value);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_value->setName("Write(signal2).value");
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2->setValue(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_value);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addNode(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2);
				// ObjectFlow ObjectFlow696 from Fork(self) to Write(signal2).object
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow696->setThisActivityEdgePtr(fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow696);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow696->setName("ObjectFlow696");
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow696->setVisibility(VisibilityKind::public_);
				
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow696->setSource(fUML_Tests_ActiveClass_ActiveClassBehavior_Fork_self);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow696->setTarget(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_object);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addEdge(fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow696);
				// ObjectFlow ObjectFlow698 from Fork(self) to Write(signal1).object
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow698->setThisActivityEdgePtr(fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow698);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow698->setName("ObjectFlow698");
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow698->setVisibility(VisibilityKind::public_);
				
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow698->setSource(fUML_Tests_ActiveClass_ActiveClassBehavior_Fork_self);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow698->setTarget(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_object);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addEdge(fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow698);
				// ObjectFlow ObjectFlow700 from self to Fork(self)
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow700->setThisActivityEdgePtr(fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow700);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow700->setName("ObjectFlow700");
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow700->setVisibility(VisibilityKind::public_);
				
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow700->setSource(fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf_self);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow700->setTarget(fUML_Tests_ActiveClass_ActiveClassBehavior_Fork_self);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addEdge(fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow700);
				// ObjectFlow ObjectFlow704 from Accept(OtherSignal).result to Write(signal2).value
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow704->setThisActivityEdgePtr(fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow704);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow704->setName("ObjectFlow704");
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow704->setVisibility(VisibilityKind::public_);
				
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow704->setSource(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Accept_OtherSignal_result);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow704->setTarget(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_value);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addEdge(fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow704);
				// ObjectFlow ObjectFlow706 from Accept(TestSignal).result to Write(signal1).value
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow706->setThisActivityEdgePtr(fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow706);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow706->setName("ObjectFlow706");
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow706->setVisibility(VisibilityKind::public_);
				
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow706->setSource(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Accept_TestSignal_result);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow706->setTarget(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_value);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addEdge(fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow706);
		fUML_Tests_ActiveClass->addOwnedBehavior(fUML_Tests_ActiveClass_ActiveClassBehavior);
		fUML_Tests_ActiveClass->setIsActive(true);
	fUML_Tests->addPackagedElement(fUML_Tests_ActiveClass);
		// Class Subclass2
		fUML_Tests_Subclass2->setThisClass_Ptr(fUML_Tests_Subclass2);
		fUML_Tests_Subclass2->setName("Subclass2");
		fUML_Tests_Subclass2->setVisibility(VisibilityKind::public_);
		
			// Generalization to TestClass
			fUML_Tests_Subclass2_Generalization708->setThisElementPtr(fUML_Tests_Subclass2_Generalization708);
			fUML_Tests_Subclass2_Generalization708->setGeneral(fUML_Tests_TestClass);
		fUML_Tests_Subclass2->addGeneralization(fUML_Tests_Subclass2_Generalization708);
			// Property b
			fUML_Tests_Subclass2_b->setThisElementPtr(fUML_Tests_Subclass2_b);
			fUML_Tests_Subclass2_b->setName("b");
			fUML_Tests_Subclass2_b->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_Subclass2_b->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
		fUML_Tests_Subclass2->addOwnedAttribute(fUML_Tests_Subclass2_b);
	fUML_Tests->addPackagedElement(fUML_Tests_Subclass2);
		// Activity TestClassIdentityTester
		fUML_Tests_TestClassIdentityTester->setThisActivityPtr(fUML_Tests_TestClassIdentityTester);
		fUML_Tests_TestClassIdentityTester->setName("TestClassIdentityTester");
		fUML_Tests_TestClassIdentityTester->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestClassIdentityTester->isReentrant = false;
			// Parameter value1
			fUML_Tests_TestClassIdentityTester_value1->setThisElementPtr(fUML_Tests_TestClassIdentityTester_value1);
			fUML_Tests_TestClassIdentityTester_value1->setName("value1");
			fUML_Tests_TestClassIdentityTester_value1->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassIdentityTester_value1->setType(fUML_Tests_TestClass);
		fUML_Tests_TestClassIdentityTester->addOwnedParameter(fUML_Tests_TestClassIdentityTester_value1);
			// Parameter value2
			fUML_Tests_TestClassIdentityTester_value2->setThisElementPtr(fUML_Tests_TestClassIdentityTester_value2);
			fUML_Tests_TestClassIdentityTester_value2->setName("value2");
			fUML_Tests_TestClassIdentityTester_value2->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassIdentityTester_value2->setType(fUML_Tests_TestClass);
		fUML_Tests_TestClassIdentityTester->addOwnedParameter(fUML_Tests_TestClassIdentityTester_value2);
			// Parameter result
			fUML_Tests_TestClassIdentityTester_result->setThisElementPtr(fUML_Tests_TestClassIdentityTester_result);
			fUML_Tests_TestClassIdentityTester_result->setName("result");
			fUML_Tests_TestClassIdentityTester_result->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassIdentityTester_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestClassIdentityTester_result->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassIdentityTester->addOwnedParameter(fUML_Tests_TestClassIdentityTester_result);
			// ActivityParameterNode Parameter(value2)
			fUML_Tests_TestClassIdentityTester_Parameter_value2->setThisElementPtr(fUML_Tests_TestClassIdentityTester_Parameter_value2);
			fUML_Tests_TestClassIdentityTester_Parameter_value2->setName("Parameter(value2)");
			fUML_Tests_TestClassIdentityTester_Parameter_value2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassIdentityTester_Parameter_value2->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassIdentityTester_Parameter_value2->setParameter(fUML_Tests_TestClassIdentityTester_value2);
		fUML_Tests_TestClassIdentityTester->addNode(fUML_Tests_TestClassIdentityTester_Parameter_value2);
			// ActivityParameterNode Parameter(result)
			fUML_Tests_TestClassIdentityTester_Parameter_result->setThisElementPtr(fUML_Tests_TestClassIdentityTester_Parameter_result);
			fUML_Tests_TestClassIdentityTester_Parameter_result->setName("Parameter(result)");
			fUML_Tests_TestClassIdentityTester_Parameter_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassIdentityTester_Parameter_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestClassIdentityTester_Parameter_result->setParameter(fUML_Tests_TestClassIdentityTester_result);
		fUML_Tests_TestClassIdentityTester->addNode(fUML_Tests_TestClassIdentityTester_Parameter_result);
			// ActivityParameterNode Parameter(value1)
			fUML_Tests_TestClassIdentityTester_Parameter_value1->setThisElementPtr(fUML_Tests_TestClassIdentityTester_Parameter_value1);
			fUML_Tests_TestClassIdentityTester_Parameter_value1->setName("Parameter(value1)");
			fUML_Tests_TestClassIdentityTester_Parameter_value1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassIdentityTester_Parameter_value1->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassIdentityTester_Parameter_value1->setParameter(fUML_Tests_TestClassIdentityTester_value1);
		fUML_Tests_TestClassIdentityTester->addNode(fUML_Tests_TestClassIdentityTester_Parameter_value1);
			// TestIdentityAction TestIdentity
			fUML_Tests_TestClassIdentityTester_TestIdentity->setThisExecutableNodePtr(fUML_Tests_TestClassIdentityTester_TestIdentity);
			fUML_Tests_TestClassIdentityTester_TestIdentity->setName("TestIdentity");
			fUML_Tests_TestClassIdentityTester_TestIdentity->setVisibility(VisibilityKind::public_);
				// InputPin TestIdentity.first
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_first->setThisElementPtr(fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_first);
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_first->setName("TestIdentity.first");
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_first->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassIdentityTester_TestIdentity->setFirst(fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_first);
				// InputPin TestIdentity.second
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_second->setThisElementPtr(fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_second);
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_second->setName("TestIdentity.second");
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_second->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassIdentityTester_TestIdentity->setSecond(fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_second);
				// OutputPin TestIdentity.result
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_result->setThisElementPtr(fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_result);
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_result->setName("TestIdentity.result");
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestClassIdentityTester_TestIdentity->setResult(fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_result);
		fUML_Tests_TestClassIdentityTester->addNode(fUML_Tests_TestClassIdentityTester_TestIdentity);
			// ObjectFlow ObjectFlow713 from Parameter(value2) to TestIdentity.second
			fUML_Tests_TestClassIdentityTester_ObjectFlow713->setThisActivityEdgePtr(fUML_Tests_TestClassIdentityTester_ObjectFlow713);
			fUML_Tests_TestClassIdentityTester_ObjectFlow713->setName("ObjectFlow713");
			fUML_Tests_TestClassIdentityTester_ObjectFlow713->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassIdentityTester_ObjectFlow713->setSource(fUML_Tests_TestClassIdentityTester_Parameter_value2);
			fUML_Tests_TestClassIdentityTester_ObjectFlow713->setTarget(fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_second);
		fUML_Tests_TestClassIdentityTester->addEdge(fUML_Tests_TestClassIdentityTester_ObjectFlow713);
			// ObjectFlow ObjectFlow715 from TestIdentity.result to Parameter(result)
			fUML_Tests_TestClassIdentityTester_ObjectFlow715->setThisActivityEdgePtr(fUML_Tests_TestClassIdentityTester_ObjectFlow715);
			fUML_Tests_TestClassIdentityTester_ObjectFlow715->setName("ObjectFlow715");
			fUML_Tests_TestClassIdentityTester_ObjectFlow715->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassIdentityTester_ObjectFlow715->setSource(fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_result);
			fUML_Tests_TestClassIdentityTester_ObjectFlow715->setTarget(fUML_Tests_TestClassIdentityTester_Parameter_result);
		fUML_Tests_TestClassIdentityTester->addEdge(fUML_Tests_TestClassIdentityTester_ObjectFlow715);
			// ObjectFlow ObjectFlow717 from Parameter(value1) to TestIdentity.first
			fUML_Tests_TestClassIdentityTester_ObjectFlow717->setThisActivityEdgePtr(fUML_Tests_TestClassIdentityTester_ObjectFlow717);
			fUML_Tests_TestClassIdentityTester_ObjectFlow717->setName("ObjectFlow717");
			fUML_Tests_TestClassIdentityTester_ObjectFlow717->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassIdentityTester_ObjectFlow717->setSource(fUML_Tests_TestClassIdentityTester_Parameter_value1);
			fUML_Tests_TestClassIdentityTester_ObjectFlow717->setTarget(fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_first);
		fUML_Tests_TestClassIdentityTester->addEdge(fUML_Tests_TestClassIdentityTester_ObjectFlow717);
	fUML_Tests->addPackagedElement(fUML_Tests_TestClassIdentityTester);
		// Activity SelfReader
		fUML_Tests_SelfReader->setThisActivityPtr(fUML_Tests_SelfReader);
		fUML_Tests_SelfReader->setName("SelfReader");
		fUML_Tests_SelfReader->setVisibility(VisibilityKind::public_);
		fUML_Tests_SelfReader->isReentrant = false;
			// Parameter self
			fUML_Tests_SelfReader_self->setThisElementPtr(fUML_Tests_SelfReader_self);
			fUML_Tests_SelfReader_self->setName("self");
			fUML_Tests_SelfReader_self->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_SelfReader_self->setType(fUML_Tests_SelfReader);
			fUML_Tests_SelfReader_self->setDirection(ParameterDirectionKind::out);
		fUML_Tests_SelfReader->addOwnedParameter(fUML_Tests_SelfReader_self);
			// Parameter isSelfReader
			fUML_Tests_SelfReader_isSelfReader->setThisElementPtr(fUML_Tests_SelfReader_isSelfReader);
			fUML_Tests_SelfReader_isSelfReader->setName("isSelfReader");
			fUML_Tests_SelfReader_isSelfReader->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_SelfReader_isSelfReader->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_SelfReader_isSelfReader->setDirection(ParameterDirectionKind::out);
		fUML_Tests_SelfReader->addOwnedParameter(fUML_Tests_SelfReader_isSelfReader);
			// ActivityParameterNode Parameter(self)
			fUML_Tests_SelfReader_Parameter_self->setThisElementPtr(fUML_Tests_SelfReader_Parameter_self);
			fUML_Tests_SelfReader_Parameter_self->setName("Parameter(self)");
			fUML_Tests_SelfReader_Parameter_self->setVisibility(VisibilityKind::public_);
			fUML_Tests_SelfReader_Parameter_self->setType(fUML_Tests_SelfReader);
			fUML_Tests_SelfReader_Parameter_self->setParameter(fUML_Tests_SelfReader_self);
		fUML_Tests_SelfReader->addNode(fUML_Tests_SelfReader_Parameter_self);
			// ActivityParameterNode Parameter(isSelfReader)
			fUML_Tests_SelfReader_Parameter_isSelfReader->setThisElementPtr(fUML_Tests_SelfReader_Parameter_isSelfReader);
			fUML_Tests_SelfReader_Parameter_isSelfReader->setName("Parameter(isSelfReader)");
			fUML_Tests_SelfReader_Parameter_isSelfReader->setVisibility(VisibilityKind::public_);
			fUML_Tests_SelfReader_Parameter_isSelfReader->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_SelfReader_Parameter_isSelfReader->setParameter(fUML_Tests_SelfReader_isSelfReader);
		fUML_Tests_SelfReader->addNode(fUML_Tests_SelfReader_Parameter_isSelfReader);
			// ReadSelfAction ReadSelf
			fUML_Tests_SelfReader_ReadSelf->setThisExecutableNodePtr(fUML_Tests_SelfReader_ReadSelf);
			fUML_Tests_SelfReader_ReadSelf->setName("ReadSelf");
			fUML_Tests_SelfReader_ReadSelf->setVisibility(VisibilityKind::public_);
				// OutputPin ReadSelf.result
				fUML_Tests_SelfReader_ReadSelf_ReadSelf_result->setThisElementPtr(fUML_Tests_SelfReader_ReadSelf_ReadSelf_result);
				fUML_Tests_SelfReader_ReadSelf_ReadSelf_result->setName("ReadSelf.result");
				fUML_Tests_SelfReader_ReadSelf_ReadSelf_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_SelfReader_ReadSelf->setResult(fUML_Tests_SelfReader_ReadSelf_ReadSelf_result);
		fUML_Tests_SelfReader->addNode(fUML_Tests_SelfReader_ReadSelf);
			// ReadIsClassifiedObjectAction IsClassified(SelfReader)
			fUML_Tests_SelfReader_IsClassified_SelfReader->setThisExecutableNodePtr(fUML_Tests_SelfReader_IsClassified_SelfReader);
			fUML_Tests_SelfReader_IsClassified_SelfReader->setName("IsClassified(SelfReader)");
			fUML_Tests_SelfReader_IsClassified_SelfReader->setVisibility(VisibilityKind::public_);
			fUML_Tests_SelfReader_IsClassified_SelfReader->setClassifier(fUML_Tests_SelfReader);
				// InputPin object
				fUML_Tests_SelfReader_IsClassified_SelfReader_object->setThisElementPtr(fUML_Tests_SelfReader_IsClassified_SelfReader_object);
				fUML_Tests_SelfReader_IsClassified_SelfReader_object->setName("object");
				fUML_Tests_SelfReader_IsClassified_SelfReader_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_SelfReader_IsClassified_SelfReader->setObject(fUML_Tests_SelfReader_IsClassified_SelfReader_object);
				// OutputPin result
				fUML_Tests_SelfReader_IsClassified_SelfReader_result->setThisElementPtr(fUML_Tests_SelfReader_IsClassified_SelfReader_result);
				fUML_Tests_SelfReader_IsClassified_SelfReader_result->setName("result");
				fUML_Tests_SelfReader_IsClassified_SelfReader_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_SelfReader_IsClassified_SelfReader->setResult(fUML_Tests_SelfReader_IsClassified_SelfReader_result);
		fUML_Tests_SelfReader->addNode(fUML_Tests_SelfReader_IsClassified_SelfReader);
			// ForkNode ForkNode731
			fUML_Tests_SelfReader_ForkNode731->setThisElementPtr(fUML_Tests_SelfReader_ForkNode731);
			fUML_Tests_SelfReader_ForkNode731->setName("ForkNode731");
			fUML_Tests_SelfReader_ForkNode731->setVisibility(VisibilityKind::public_);
		fUML_Tests_SelfReader->addNode(fUML_Tests_SelfReader_ForkNode731);
			// ObjectFlow ObjectFlow723 from ForkNode731 to Parameter(self)
			fUML_Tests_SelfReader_ObjectFlow723->setThisActivityEdgePtr(fUML_Tests_SelfReader_ObjectFlow723);
			fUML_Tests_SelfReader_ObjectFlow723->setName("ObjectFlow723");
			fUML_Tests_SelfReader_ObjectFlow723->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_SelfReader_ObjectFlow723->setSource(fUML_Tests_SelfReader_ForkNode731);
			fUML_Tests_SelfReader_ObjectFlow723->setTarget(fUML_Tests_SelfReader_Parameter_self);
		fUML_Tests_SelfReader->addEdge(fUML_Tests_SelfReader_ObjectFlow723);
			// ObjectFlow ObjectFlow725 from result to Parameter(isSelfReader)
			fUML_Tests_SelfReader_ObjectFlow725->setThisActivityEdgePtr(fUML_Tests_SelfReader_ObjectFlow725);
			fUML_Tests_SelfReader_ObjectFlow725->setName("ObjectFlow725");
			fUML_Tests_SelfReader_ObjectFlow725->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_SelfReader_ObjectFlow725->setSource(fUML_Tests_SelfReader_IsClassified_SelfReader_result);
			fUML_Tests_SelfReader_ObjectFlow725->setTarget(fUML_Tests_SelfReader_Parameter_isSelfReader);
		fUML_Tests_SelfReader->addEdge(fUML_Tests_SelfReader_ObjectFlow725);
			// ObjectFlow ObjectFlow727 from ReadSelf.result to ForkNode731
			fUML_Tests_SelfReader_ObjectFlow727->setThisActivityEdgePtr(fUML_Tests_SelfReader_ObjectFlow727);
			fUML_Tests_SelfReader_ObjectFlow727->setName("ObjectFlow727");
			fUML_Tests_SelfReader_ObjectFlow727->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_SelfReader_ObjectFlow727->setSource(fUML_Tests_SelfReader_ReadSelf_ReadSelf_result);
			fUML_Tests_SelfReader_ObjectFlow727->setTarget(fUML_Tests_SelfReader_ForkNode731);
		fUML_Tests_SelfReader->addEdge(fUML_Tests_SelfReader_ObjectFlow727);
			// ObjectFlow ObjectFlow729 from ForkNode731 to object
			fUML_Tests_SelfReader_ObjectFlow729->setThisActivityEdgePtr(fUML_Tests_SelfReader_ObjectFlow729);
			fUML_Tests_SelfReader_ObjectFlow729->setName("ObjectFlow729");
			fUML_Tests_SelfReader_ObjectFlow729->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_SelfReader_ObjectFlow729->setSource(fUML_Tests_SelfReader_ForkNode731);
			fUML_Tests_SelfReader_ObjectFlow729->setTarget(fUML_Tests_SelfReader_IsClassified_SelfReader_object);
		fUML_Tests_SelfReader->addEdge(fUML_Tests_SelfReader_ObjectFlow729);
	fUML_Tests->addPackagedElement(fUML_Tests_SelfReader);
		// Activity TestCallSend
		fUML_Tests_TestCallSend->setThisActivityPtr(fUML_Tests_TestCallSend);
		fUML_Tests_TestCallSend->setName("TestCallSend");
		fUML_Tests_TestCallSend->setVisibility(VisibilityKind::public_);
			// CreateObjectAction Create(TestCallSender)
			fUML_Tests_TestCallSend_Create_TestCallSender->setThisExecutableNodePtr(fUML_Tests_TestCallSend_Create_TestCallSender);
			fUML_Tests_TestCallSend_Create_TestCallSender->setName("Create(TestCallSender)");
			fUML_Tests_TestCallSend_Create_TestCallSender->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSend_Create_TestCallSender->setClassifier(fUML_Tests_TestCallSender);
				// OutputPin Create(TestCallSender).result
				fUML_Tests_TestCallSend_Create_TestCallSender_Create_TestCallSender_result->setThisElementPtr(fUML_Tests_TestCallSend_Create_TestCallSender_Create_TestCallSender_result);
				fUML_Tests_TestCallSend_Create_TestCallSender_Create_TestCallSender_result->setName("Create(TestCallSender).result");
				fUML_Tests_TestCallSend_Create_TestCallSender_Create_TestCallSender_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSend_Create_TestCallSender->setResult(fUML_Tests_TestCallSend_Create_TestCallSender_Create_TestCallSender_result);
		fUML_Tests_TestCallSend->addNode(fUML_Tests_TestCallSend_Create_TestCallSender);
			// ForkNode ForkNode
			fUML_Tests_TestCallSend_ForkNode->setThisElementPtr(fUML_Tests_TestCallSend_ForkNode);
			fUML_Tests_TestCallSend_ForkNode->setName("ForkNode");
			fUML_Tests_TestCallSend_ForkNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestCallSend->addNode(fUML_Tests_TestCallSend_ForkNode);
			// SendSignalAction Send(TestSignal)
			fUML_Tests_TestCallSend_Send_TestSignal->setThisExecutableNodePtr(fUML_Tests_TestCallSend_Send_TestSignal);
			fUML_Tests_TestCallSend_Send_TestSignal->setName("Send(TestSignal)");
			fUML_Tests_TestCallSend_Send_TestSignal->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSend_Send_TestSignal->setSignal(fUML_Tests_TestSignal);
				// InputPin Send(TestSignal).target
				fUML_Tests_TestCallSend_Send_TestSignal_Send_TestSignal_target->setThisElementPtr(fUML_Tests_TestCallSend_Send_TestSignal_Send_TestSignal_target);
				fUML_Tests_TestCallSend_Send_TestSignal_Send_TestSignal_target->setName("Send(TestSignal).target");
				fUML_Tests_TestCallSend_Send_TestSignal_Send_TestSignal_target->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSend_Send_TestSignal->setTarget(fUML_Tests_TestCallSend_Send_TestSignal_Send_TestSignal_target);
		fUML_Tests_TestCallSend->addNode(fUML_Tests_TestCallSend_Send_TestSignal);
			// StartObjectBehaviorAction Start(TestCallSender)
			fUML_Tests_TestCallSend_Start_TestCallSender->setThisExecutableNodePtr(fUML_Tests_TestCallSend_Start_TestCallSender);
			fUML_Tests_TestCallSend_Start_TestCallSender->setName("Start(TestCallSender)");
			fUML_Tests_TestCallSend_Start_TestCallSender->setVisibility(VisibilityKind::public_);
				// InputPin Start(TestCallSender).object
				fUML_Tests_TestCallSend_Start_TestCallSender_Start_TestCallSender_object->setThisElementPtr(fUML_Tests_TestCallSend_Start_TestCallSender_Start_TestCallSender_object);
				fUML_Tests_TestCallSend_Start_TestCallSender_Start_TestCallSender_object->setName("Start(TestCallSender).object");
				fUML_Tests_TestCallSend_Start_TestCallSender_Start_TestCallSender_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSend_Start_TestCallSender->setObject(fUML_Tests_TestCallSend_Start_TestCallSender_Start_TestCallSender_object);
		fUML_Tests_TestCallSend->addNode(fUML_Tests_TestCallSend_Start_TestCallSender);
			// ControlFlow ControlFlow732 from Start(TestCallSender) to Send(TestSignal)
			fUML_Tests_TestCallSend_ControlFlow732->setThisActivityEdgePtr(fUML_Tests_TestCallSend_ControlFlow732);
			fUML_Tests_TestCallSend_ControlFlow732->setName("ControlFlow732");
			fUML_Tests_TestCallSend_ControlFlow732->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSend_ControlFlow732->setSource(fUML_Tests_TestCallSend_Start_TestCallSender);
			fUML_Tests_TestCallSend_ControlFlow732->setTarget(fUML_Tests_TestCallSend_Send_TestSignal);
		fUML_Tests_TestCallSend->addEdge(fUML_Tests_TestCallSend_ControlFlow732);
			// ObjectFlow ObjectFlow734 from Create(TestCallSender).result to ForkNode
			fUML_Tests_TestCallSend_ObjectFlow734->setThisActivityEdgePtr(fUML_Tests_TestCallSend_ObjectFlow734);
			fUML_Tests_TestCallSend_ObjectFlow734->setName("ObjectFlow734");
			fUML_Tests_TestCallSend_ObjectFlow734->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSend_ObjectFlow734->setSource(fUML_Tests_TestCallSend_Create_TestCallSender_Create_TestCallSender_result);
			fUML_Tests_TestCallSend_ObjectFlow734->setTarget(fUML_Tests_TestCallSend_ForkNode);
		fUML_Tests_TestCallSend->addEdge(fUML_Tests_TestCallSend_ObjectFlow734);
			// ObjectFlow ObjectFlow736 from ForkNode to Start(TestCallSender).object
			fUML_Tests_TestCallSend_ObjectFlow736->setThisActivityEdgePtr(fUML_Tests_TestCallSend_ObjectFlow736);
			fUML_Tests_TestCallSend_ObjectFlow736->setName("ObjectFlow736");
			fUML_Tests_TestCallSend_ObjectFlow736->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSend_ObjectFlow736->setSource(fUML_Tests_TestCallSend_ForkNode);
			fUML_Tests_TestCallSend_ObjectFlow736->setTarget(fUML_Tests_TestCallSend_Start_TestCallSender_Start_TestCallSender_object);
		fUML_Tests_TestCallSend->addEdge(fUML_Tests_TestCallSend_ObjectFlow736);
			// ObjectFlow ObjectFlow738 from ForkNode to Send(TestSignal).target
			fUML_Tests_TestCallSend_ObjectFlow738->setThisActivityEdgePtr(fUML_Tests_TestCallSend_ObjectFlow738);
			fUML_Tests_TestCallSend_ObjectFlow738->setName("ObjectFlow738");
			fUML_Tests_TestCallSend_ObjectFlow738->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSend_ObjectFlow738->setSource(fUML_Tests_TestCallSend_ForkNode);
			fUML_Tests_TestCallSend_ObjectFlow738->setTarget(fUML_Tests_TestCallSend_Send_TestSignal_Send_TestSignal_target);
		fUML_Tests_TestCallSend->addEdge(fUML_Tests_TestCallSend_ObjectFlow738);
	fUML_Tests->addPackagedElement(fUML_Tests_TestCallSend);
		// Activity TestRealFunctions
		fUML_Tests_TestRealFunctions->setThisActivityPtr(fUML_Tests_TestRealFunctions);
		fUML_Tests_TestRealFunctions->setName("TestRealFunctions");
		fUML_Tests_TestRealFunctions->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestRealFunctions->isReentrant = false;
			// Parameter NegResult
			fUML_Tests_TestRealFunctions_NegResult->setThisElementPtr(fUML_Tests_TestRealFunctions_NegResult);
			fUML_Tests_TestRealFunctions_NegResult->setName("NegResult");
			fUML_Tests_TestRealFunctions_NegResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_NegResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_NegResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_NegResult);
			// Parameter PlusResult
			fUML_Tests_TestRealFunctions_PlusResult->setThisElementPtr(fUML_Tests_TestRealFunctions_PlusResult);
			fUML_Tests_TestRealFunctions_PlusResult->setName("PlusResult");
			fUML_Tests_TestRealFunctions_PlusResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_PlusResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_PlusResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_PlusResult);
			// Parameter MinusResult
			fUML_Tests_TestRealFunctions_MinusResult->setThisElementPtr(fUML_Tests_TestRealFunctions_MinusResult);
			fUML_Tests_TestRealFunctions_MinusResult->setName("MinusResult");
			fUML_Tests_TestRealFunctions_MinusResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_MinusResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_MinusResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_MinusResult);
			// Parameter InvResult
			fUML_Tests_TestRealFunctions_InvResult->setThisElementPtr(fUML_Tests_TestRealFunctions_InvResult);
			fUML_Tests_TestRealFunctions_InvResult->setName("InvResult");
			fUML_Tests_TestRealFunctions_InvResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_InvResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_InvResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_InvResult);
			// Parameter TimesResult
			fUML_Tests_TestRealFunctions_TimesResult->setThisElementPtr(fUML_Tests_TestRealFunctions_TimesResult);
			fUML_Tests_TestRealFunctions_TimesResult->setName("TimesResult");
			fUML_Tests_TestRealFunctions_TimesResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_TimesResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_TimesResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_TimesResult);
			// Parameter DivideResult
			fUML_Tests_TestRealFunctions_DivideResult->setThisElementPtr(fUML_Tests_TestRealFunctions_DivideResult);
			fUML_Tests_TestRealFunctions_DivideResult->setName("DivideResult");
			fUML_Tests_TestRealFunctions_DivideResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_DivideResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_DivideResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_DivideResult);
			// Parameter MaxResult
			fUML_Tests_TestRealFunctions_MaxResult->setThisElementPtr(fUML_Tests_TestRealFunctions_MaxResult);
			fUML_Tests_TestRealFunctions_MaxResult->setName("MaxResult");
			fUML_Tests_TestRealFunctions_MaxResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_MaxResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_MaxResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_MaxResult);
			// Parameter MinResult
			fUML_Tests_TestRealFunctions_MinResult->setThisElementPtr(fUML_Tests_TestRealFunctions_MinResult);
			fUML_Tests_TestRealFunctions_MinResult->setName("MinResult");
			fUML_Tests_TestRealFunctions_MinResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_MinResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_MinResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_MinResult);
			// Parameter AbsResult
			fUML_Tests_TestRealFunctions_AbsResult->setThisElementPtr(fUML_Tests_TestRealFunctions_AbsResult);
			fUML_Tests_TestRealFunctions_AbsResult->setName("AbsResult");
			fUML_Tests_TestRealFunctions_AbsResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_AbsResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_AbsResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_AbsResult);
			// Parameter RoundResult
			fUML_Tests_TestRealFunctions_RoundResult->setThisElementPtr(fUML_Tests_TestRealFunctions_RoundResult);
			fUML_Tests_TestRealFunctions_RoundResult->setName("RoundResult");
			fUML_Tests_TestRealFunctions_RoundResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_RoundResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestRealFunctions_RoundResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_RoundResult);
			// Parameter FloorResult
			fUML_Tests_TestRealFunctions_FloorResult->setThisElementPtr(fUML_Tests_TestRealFunctions_FloorResult);
			fUML_Tests_TestRealFunctions_FloorResult->setName("FloorResult");
			fUML_Tests_TestRealFunctions_FloorResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_FloorResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestRealFunctions_FloorResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_FloorResult);
			// Parameter ToIntegerResult
			fUML_Tests_TestRealFunctions_ToIntegerResult->setThisElementPtr(fUML_Tests_TestRealFunctions_ToIntegerResult);
			fUML_Tests_TestRealFunctions_ToIntegerResult->setName("ToIntegerResult");
			fUML_Tests_TestRealFunctions_ToIntegerResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ToIntegerResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestRealFunctions_ToIntegerResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_ToIntegerResult);
			// CallBehaviorAction Call(Inv)
			fUML_Tests_TestRealFunctions_Call_Inv->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Inv);
			fUML_Tests_TestRealFunctions_Call_Inv->setName("Call(Inv)");
			fUML_Tests_TestRealFunctions_Call_Inv->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestRealFunctions_Call_Inv_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Inv_result);
				fUML_Tests_TestRealFunctions_Call_Inv_result->setName("result");
				fUML_Tests_TestRealFunctions_Call_Inv_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Inv_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Inv->addResult(fUML_Tests_TestRealFunctions_Call_Inv_result);
			fUML_Tests_TestRealFunctions_Call_Inv->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_Inv);
				// InputPin x
				fUML_Tests_TestRealFunctions_Call_Inv_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Inv_x);
				fUML_Tests_TestRealFunctions_Call_Inv_x->setName("x");
				fUML_Tests_TestRealFunctions_Call_Inv_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Inv_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Inv->addArgument(fUML_Tests_TestRealFunctions_Call_Inv_x);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Inv);
			// CallBehaviorAction Call(Round)
			fUML_Tests_TestRealFunctions_Call_Round->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Round);
			fUML_Tests_TestRealFunctions_Call_Round->setName("Call(Round)");
			fUML_Tests_TestRealFunctions_Call_Round->setVisibility(VisibilityKind::public_);
				// OutputPin Round.result
				fUML_Tests_TestRealFunctions_Call_Round_Round_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Round_Round_result);
				fUML_Tests_TestRealFunctions_Call_Round_Round_result->setName("Round.result");
				fUML_Tests_TestRealFunctions_Call_Round_Round_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Round_Round_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestRealFunctions_Call_Round->addResult(fUML_Tests_TestRealFunctions_Call_Round_Round_result);
			fUML_Tests_TestRealFunctions_Call_Round->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_Round);
				// InputPin Round.x
				fUML_Tests_TestRealFunctions_Call_Round_Round_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Round_Round_x);
				fUML_Tests_TestRealFunctions_Call_Round_Round_x->setName("Round.x");
				fUML_Tests_TestRealFunctions_Call_Round_Round_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Round_Round_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Round->addArgument(fUML_Tests_TestRealFunctions_Call_Round_Round_x);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Round);
			// ForkNode Fork(3.1)
			fUML_Tests_TestRealFunctions_Fork_3_1->setThisElementPtr(fUML_Tests_TestRealFunctions_Fork_3_1);
			fUML_Tests_TestRealFunctions_Fork_3_1->setName("Fork(3.1)");
			fUML_Tests_TestRealFunctions_Fork_3_1->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Fork_3_1);
			// ActivityParameterNode Param(PlusResult)
			fUML_Tests_TestRealFunctions_Param_PlusResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_PlusResult);
			fUML_Tests_TestRealFunctions_Param_PlusResult->setName("Param(PlusResult)");
			fUML_Tests_TestRealFunctions_Param_PlusResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_PlusResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Param_PlusResult->setParameter(fUML_Tests_TestRealFunctions_PlusResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_PlusResult);
			// ActivityParameterNode Param(InvResult)
			fUML_Tests_TestRealFunctions_Param_InvResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_InvResult);
			fUML_Tests_TestRealFunctions_Param_InvResult->setName("Param(InvResult)");
			fUML_Tests_TestRealFunctions_Param_InvResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_InvResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Param_InvResult->setParameter(fUML_Tests_TestRealFunctions_InvResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_InvResult);
			// CallBehaviorAction Call(Times)
			fUML_Tests_TestRealFunctions_Call_Times->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Times);
			fUML_Tests_TestRealFunctions_Call_Times->setName("Call(Times)");
			fUML_Tests_TestRealFunctions_Call_Times->setVisibility(VisibilityKind::public_);
				// OutputPin Times.result
				fUML_Tests_TestRealFunctions_Call_Times_Times_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Times_Times_result);
				fUML_Tests_TestRealFunctions_Call_Times_Times_result->setName("Times.result");
				fUML_Tests_TestRealFunctions_Call_Times_Times_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Times_Times_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Times->addResult(fUML_Tests_TestRealFunctions_Call_Times_Times_result);
			fUML_Tests_TestRealFunctions_Call_Times->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_times);
				// InputPin Times.x
				fUML_Tests_TestRealFunctions_Call_Times_Times_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Times_Times_x);
				fUML_Tests_TestRealFunctions_Call_Times_Times_x->setName("Times.x");
				fUML_Tests_TestRealFunctions_Call_Times_Times_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Times_Times_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Times->addArgument(fUML_Tests_TestRealFunctions_Call_Times_Times_x);
				// InputPin Times.y
				fUML_Tests_TestRealFunctions_Call_Times_Times_y->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Times_Times_y);
				fUML_Tests_TestRealFunctions_Call_Times_Times_y->setName("Times.y");
				fUML_Tests_TestRealFunctions_Call_Times_Times_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Times_Times_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Times->addArgument(fUML_Tests_TestRealFunctions_Call_Times_Times_y);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Times);
			// ActivityParameterNode Call(AbsResult)
			fUML_Tests_TestRealFunctions_Call_AbsResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_AbsResult);
			fUML_Tests_TestRealFunctions_Call_AbsResult->setName("Call(AbsResult)");
			fUML_Tests_TestRealFunctions_Call_AbsResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Call_AbsResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_AbsResult->setParameter(fUML_Tests_TestRealFunctions_AbsResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_AbsResult);
			// CallBehaviorAction Call(Plus)
			fUML_Tests_TestRealFunctions_Call_Plus->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Plus);
			fUML_Tests_TestRealFunctions_Call_Plus->setName("Call(Plus)");
			fUML_Tests_TestRealFunctions_Call_Plus->setVisibility(VisibilityKind::public_);
				// OutputPin Plus.result
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Plus_Plus_result);
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_result->setName("Plus.result");
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Plus->addResult(fUML_Tests_TestRealFunctions_Call_Plus_Plus_result);
			fUML_Tests_TestRealFunctions_Call_Plus->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_plus);
				// InputPin Plus.x
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Plus_Plus_x);
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_x->setName("Plus.x");
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Plus->addArgument(fUML_Tests_TestRealFunctions_Call_Plus_Plus_x);
				// InputPin Plus.y
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_y->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Plus_Plus_y);
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_y->setName("Plus.y");
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Plus->addArgument(fUML_Tests_TestRealFunctions_Call_Plus_Plus_y);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Plus);
			// ActivityParameterNode Param(MinResult)
			fUML_Tests_TestRealFunctions_Param_MinResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_MinResult);
			fUML_Tests_TestRealFunctions_Param_MinResult->setName("Param(MinResult)");
			fUML_Tests_TestRealFunctions_Param_MinResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_MinResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Param_MinResult->setParameter(fUML_Tests_TestRealFunctions_MinResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_MinResult);
			// ForkNode Fork(-2.3)
			fUML_Tests_TestRealFunctions_Fork_minus2_3->setThisElementPtr(fUML_Tests_TestRealFunctions_Fork_minus2_3);
			fUML_Tests_TestRealFunctions_Fork_minus2_3->setName("Fork(-2.3)");
			fUML_Tests_TestRealFunctions_Fork_minus2_3->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Fork_minus2_3);
			// ActivityParameterNode Param(NegResult)
			fUML_Tests_TestRealFunctions_Param_NegResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_NegResult);
			fUML_Tests_TestRealFunctions_Param_NegResult->setName("Param(NegResult)");
			fUML_Tests_TestRealFunctions_Param_NegResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_NegResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Param_NegResult->setParameter(fUML_Tests_TestRealFunctions_NegResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_NegResult);
			// CallBehaviorAction Call(Neg)
			fUML_Tests_TestRealFunctions_Call_Neg->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Neg);
			fUML_Tests_TestRealFunctions_Call_Neg->setName("Call(Neg)");
			fUML_Tests_TestRealFunctions_Call_Neg->setVisibility(VisibilityKind::public_);
				// OutputPin Neg.result
				fUML_Tests_TestRealFunctions_Call_Neg_Neg_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Neg_Neg_result);
				fUML_Tests_TestRealFunctions_Call_Neg_Neg_result->setName("Neg.result");
				fUML_Tests_TestRealFunctions_Call_Neg_Neg_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Neg_Neg_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Neg->addResult(fUML_Tests_TestRealFunctions_Call_Neg_Neg_result);
			fUML_Tests_TestRealFunctions_Call_Neg->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_Neg);
				// InputPin Neg.x
				fUML_Tests_TestRealFunctions_Call_Neg_Neg_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Neg_Neg_x);
				fUML_Tests_TestRealFunctions_Call_Neg_Neg_x->setName("Neg.x");
				fUML_Tests_TestRealFunctions_Call_Neg_Neg_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Neg_Neg_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Neg->addArgument(fUML_Tests_TestRealFunctions_Call_Neg_Neg_x);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Neg);
			// ActivityParameterNode Param(TimesResult)
			fUML_Tests_TestRealFunctions_Param_TimesResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_TimesResult);
			fUML_Tests_TestRealFunctions_Param_TimesResult->setName("Param(TimesResult)");
			fUML_Tests_TestRealFunctions_Param_TimesResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_TimesResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Param_TimesResult->setParameter(fUML_Tests_TestRealFunctions_TimesResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_TimesResult);
			// ActivityParameterNode Param(DivideResult)
			fUML_Tests_TestRealFunctions_Param_DivideResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_DivideResult);
			fUML_Tests_TestRealFunctions_Param_DivideResult->setName("Param(DivideResult)");
			fUML_Tests_TestRealFunctions_Param_DivideResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_DivideResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Param_DivideResult->setParameter(fUML_Tests_TestRealFunctions_DivideResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_DivideResult);
			// CallBehaviorAction Call(Divide)
			fUML_Tests_TestRealFunctions_Call_Divide->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Divide);
			fUML_Tests_TestRealFunctions_Call_Divide->setName("Call(Divide)");
			fUML_Tests_TestRealFunctions_Call_Divide->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestRealFunctions_Call_Divide_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Divide_result);
				fUML_Tests_TestRealFunctions_Call_Divide_result->setName("result");
				fUML_Tests_TestRealFunctions_Call_Divide_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Divide_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
				fUML_Tests_TestRealFunctions_Call_Divide_result->setLower(0);
			fUML_Tests_TestRealFunctions_Call_Divide->addResult(fUML_Tests_TestRealFunctions_Call_Divide_result);
			fUML_Tests_TestRealFunctions_Call_Divide->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_divide);
				// InputPin x
				fUML_Tests_TestRealFunctions_Call_Divide_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Divide_x);
				fUML_Tests_TestRealFunctions_Call_Divide_x->setName("x");
				fUML_Tests_TestRealFunctions_Call_Divide_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Divide_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Divide->addArgument(fUML_Tests_TestRealFunctions_Call_Divide_x);
				// InputPin y
				fUML_Tests_TestRealFunctions_Call_Divide_y->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Divide_y);
				fUML_Tests_TestRealFunctions_Call_Divide_y->setName("y");
				fUML_Tests_TestRealFunctions_Call_Divide_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Divide_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Divide->addArgument(fUML_Tests_TestRealFunctions_Call_Divide_y);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Divide);
			// ActivityParameterNode Param(FloorResult)
			fUML_Tests_TestRealFunctions_Param_FloorResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_FloorResult);
			fUML_Tests_TestRealFunctions_Param_FloorResult->setName("Param(FloorResult)");
			fUML_Tests_TestRealFunctions_Param_FloorResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_FloorResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestRealFunctions_Param_FloorResult->setParameter(fUML_Tests_TestRealFunctions_FloorResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_FloorResult);
			// ActivityParameterNode Param(ToIntegerResult)
			fUML_Tests_TestRealFunctions_Param_ToIntegerResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_ToIntegerResult);
			fUML_Tests_TestRealFunctions_Param_ToIntegerResult->setName("Param(ToIntegerResult)");
			fUML_Tests_TestRealFunctions_Param_ToIntegerResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_ToIntegerResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestRealFunctions_Param_ToIntegerResult->setParameter(fUML_Tests_TestRealFunctions_ToIntegerResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_ToIntegerResult);
			// CallBehaviorAction Call(Max)
			fUML_Tests_TestRealFunctions_Call_Max->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Max);
			fUML_Tests_TestRealFunctions_Call_Max->setName("Call(Max)");
			fUML_Tests_TestRealFunctions_Call_Max->setVisibility(VisibilityKind::public_);
				// OutputPin Max.result
				fUML_Tests_TestRealFunctions_Call_Max_Max_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Max_Max_result);
				fUML_Tests_TestRealFunctions_Call_Max_Max_result->setName("Max.result");
				fUML_Tests_TestRealFunctions_Call_Max_Max_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Max_Max_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Max->addResult(fUML_Tests_TestRealFunctions_Call_Max_Max_result);
			fUML_Tests_TestRealFunctions_Call_Max->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_Max);
				// InputPin Max.x
				fUML_Tests_TestRealFunctions_Call_Max_Max_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Max_Max_x);
				fUML_Tests_TestRealFunctions_Call_Max_Max_x->setName("Max.x");
				fUML_Tests_TestRealFunctions_Call_Max_Max_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Max_Max_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Max->addArgument(fUML_Tests_TestRealFunctions_Call_Max_Max_x);
				// InputPin Max.y
				fUML_Tests_TestRealFunctions_Call_Max_Max_y->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Max_Max_y);
				fUML_Tests_TestRealFunctions_Call_Max_Max_y->setName("Max.y");
				fUML_Tests_TestRealFunctions_Call_Max_Max_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Max_Max_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Max->addArgument(fUML_Tests_TestRealFunctions_Call_Max_Max_y);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Max);
			// CallBehaviorAction Call(Minus)
			fUML_Tests_TestRealFunctions_Call_Minus->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Minus);
			fUML_Tests_TestRealFunctions_Call_Minus->setName("Call(Minus)");
			fUML_Tests_TestRealFunctions_Call_Minus->setVisibility(VisibilityKind::public_);
				// OutputPin Minus.result
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Minus_Minus_result);
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_result->setName("Minus.result");
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Minus->addResult(fUML_Tests_TestRealFunctions_Call_Minus_Minus_result);
			fUML_Tests_TestRealFunctions_Call_Minus->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_minus);
				// InputPin Minus.x
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Minus_Minus_x);
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_x->setName("Minus.x");
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Minus->addArgument(fUML_Tests_TestRealFunctions_Call_Minus_Minus_x);
				// InputPin Minus.y
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_y->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Minus_Minus_y);
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_y->setName("Minus.y");
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Minus->addArgument(fUML_Tests_TestRealFunctions_Call_Minus_Minus_y);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Minus);
			// ValueSpecificationAction Value(3.1)
			fUML_Tests_TestRealFunctions_Value_3_1->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Value_3_1);
			fUML_Tests_TestRealFunctions_Value_3_1->setName("Value(3.1)");
			fUML_Tests_TestRealFunctions_Value_3_1->setVisibility(VisibilityKind::public_);
				// LiteralReal LiteralReal852
				fUML_Tests_TestRealFunctions_Value_3_1_LiteralReal852->setThisElementPtr(fUML_Tests_TestRealFunctions_Value_3_1_LiteralReal852);
				fUML_Tests_TestRealFunctions_Value_3_1_LiteralReal852->setName("LiteralReal852");
				fUML_Tests_TestRealFunctions_Value_3_1_LiteralReal852->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Value_3_1_LiteralReal852->setValue(3.1f);
			fUML_Tests_TestRealFunctions_Value_3_1->setValue(fUML_Tests_TestRealFunctions_Value_3_1_LiteralReal852);
				// OutputPin Value(3.1).result
				fUML_Tests_TestRealFunctions_Value_3_1_Value_3_1_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Value_3_1_Value_3_1_result);
				fUML_Tests_TestRealFunctions_Value_3_1_Value_3_1_result->setName("Value(3.1).result");
				fUML_Tests_TestRealFunctions_Value_3_1_Value_3_1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Value_3_1_Value_3_1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Value_3_1->setResult(fUML_Tests_TestRealFunctions_Value_3_1_Value_3_1_result);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Value_3_1);
			// CallBehaviorAction Call(Abs)
			fUML_Tests_TestRealFunctions_Call_Abs->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Abs);
			fUML_Tests_TestRealFunctions_Call_Abs->setName("Call(Abs)");
			fUML_Tests_TestRealFunctions_Call_Abs->setVisibility(VisibilityKind::public_);
				// OutputPin Abs.result
				fUML_Tests_TestRealFunctions_Call_Abs_Abs_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Abs_Abs_result);
				fUML_Tests_TestRealFunctions_Call_Abs_Abs_result->setName("Abs.result");
				fUML_Tests_TestRealFunctions_Call_Abs_Abs_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Abs_Abs_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Abs->addResult(fUML_Tests_TestRealFunctions_Call_Abs_Abs_result);
			fUML_Tests_TestRealFunctions_Call_Abs->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_Abs);
				// InputPin Abs.x
				fUML_Tests_TestRealFunctions_Call_Abs_Abs_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Abs_Abs_x);
				fUML_Tests_TestRealFunctions_Call_Abs_Abs_x->setName("Abs.x");
				fUML_Tests_TestRealFunctions_Call_Abs_Abs_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Abs_Abs_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Abs->addArgument(fUML_Tests_TestRealFunctions_Call_Abs_Abs_x);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Abs);
			// CallBehaviorAction Call(ToInteger)
			fUML_Tests_TestRealFunctions_Call_ToInteger->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_ToInteger);
			fUML_Tests_TestRealFunctions_Call_ToInteger->setName("Call(ToInteger)");
			fUML_Tests_TestRealFunctions_Call_ToInteger->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestRealFunctions_Call_ToInteger_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_ToInteger_result);
				fUML_Tests_TestRealFunctions_Call_ToInteger_result->setName("result");
				fUML_Tests_TestRealFunctions_Call_ToInteger_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_ToInteger_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestRealFunctions_Call_ToInteger->addResult(fUML_Tests_TestRealFunctions_Call_ToInteger_result);
			fUML_Tests_TestRealFunctions_Call_ToInteger->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_ToInteger);
				// InputPin x
				fUML_Tests_TestRealFunctions_Call_ToInteger_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_ToInteger_x);
				fUML_Tests_TestRealFunctions_Call_ToInteger_x->setName("x");
				fUML_Tests_TestRealFunctions_Call_ToInteger_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_ToInteger_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_ToInteger->addArgument(fUML_Tests_TestRealFunctions_Call_ToInteger_x);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_ToInteger);
			// ValueSpecificationAction Value(0.5)
			fUML_Tests_TestRealFunctions_Value_0_5->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Value_0_5);
			fUML_Tests_TestRealFunctions_Value_0_5->setName("Value(0.5)");
			fUML_Tests_TestRealFunctions_Value_0_5->setVisibility(VisibilityKind::public_);
				// LiteralReal LiteralReal863
				fUML_Tests_TestRealFunctions_Value_0_5_LiteralReal863->setThisElementPtr(fUML_Tests_TestRealFunctions_Value_0_5_LiteralReal863);
				fUML_Tests_TestRealFunctions_Value_0_5_LiteralReal863->setName("LiteralReal863");
				fUML_Tests_TestRealFunctions_Value_0_5_LiteralReal863->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Value_0_5_LiteralReal863->setValue(0.5f);
			fUML_Tests_TestRealFunctions_Value_0_5->setValue(fUML_Tests_TestRealFunctions_Value_0_5_LiteralReal863);
				// OutputPin Value(0.5).result
				fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result);
				fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result->setName("Value(0.5).result");
				fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Value_0_5->setResult(fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Value_0_5);
			// ActivityParameterNode Param(MaxResult)
			fUML_Tests_TestRealFunctions_Param_MaxResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_MaxResult);
			fUML_Tests_TestRealFunctions_Param_MaxResult->setName("Param(MaxResult)");
			fUML_Tests_TestRealFunctions_Param_MaxResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_MaxResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Param_MaxResult->setParameter(fUML_Tests_TestRealFunctions_MaxResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_MaxResult);
			// ForkNode Fork(0.5)
			fUML_Tests_TestRealFunctions_Fork_0_5->setThisElementPtr(fUML_Tests_TestRealFunctions_Fork_0_5);
			fUML_Tests_TestRealFunctions_Fork_0_5->setName("Fork(0.5)");
			fUML_Tests_TestRealFunctions_Fork_0_5->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Fork_0_5);
			// CallBehaviorAction Call(Min)
			fUML_Tests_TestRealFunctions_Call_Min->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Min);
			fUML_Tests_TestRealFunctions_Call_Min->setName("Call(Min)");
			fUML_Tests_TestRealFunctions_Call_Min->setVisibility(VisibilityKind::public_);
				// OutputPin Min.result
				fUML_Tests_TestRealFunctions_Call_Min_Min_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Min_Min_result);
				fUML_Tests_TestRealFunctions_Call_Min_Min_result->setName("Min.result");
				fUML_Tests_TestRealFunctions_Call_Min_Min_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Min_Min_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Min->addResult(fUML_Tests_TestRealFunctions_Call_Min_Min_result);
			fUML_Tests_TestRealFunctions_Call_Min->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_Min);
				// InputPin Min.x
				fUML_Tests_TestRealFunctions_Call_Min_Min_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Min_Min_x);
				fUML_Tests_TestRealFunctions_Call_Min_Min_x->setName("Min.x");
				fUML_Tests_TestRealFunctions_Call_Min_Min_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Min_Min_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Min->addArgument(fUML_Tests_TestRealFunctions_Call_Min_Min_x);
				// InputPin Min.y
				fUML_Tests_TestRealFunctions_Call_Min_Min_y->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Min_Min_y);
				fUML_Tests_TestRealFunctions_Call_Min_Min_y->setName("Min.y");
				fUML_Tests_TestRealFunctions_Call_Min_Min_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Min_Min_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Min->addArgument(fUML_Tests_TestRealFunctions_Call_Min_Min_y);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Min);
			// ActivityParameterNode Param(MinusResult)
			fUML_Tests_TestRealFunctions_Param_MinusResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_MinusResult);
			fUML_Tests_TestRealFunctions_Param_MinusResult->setName("Param(MinusResult)");
			fUML_Tests_TestRealFunctions_Param_MinusResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_MinusResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Param_MinusResult->setParameter(fUML_Tests_TestRealFunctions_MinusResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_MinusResult);
			// ActivityParameterNode Param(RoundResult)
			fUML_Tests_TestRealFunctions_Param_RoundResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_RoundResult);
			fUML_Tests_TestRealFunctions_Param_RoundResult->setName("Param(RoundResult)");
			fUML_Tests_TestRealFunctions_Param_RoundResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_RoundResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestRealFunctions_Param_RoundResult->setParameter(fUML_Tests_TestRealFunctions_RoundResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_RoundResult);
			// CallBehaviorAction Call(Floor)
			fUML_Tests_TestRealFunctions_Call_Floor->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Floor);
			fUML_Tests_TestRealFunctions_Call_Floor->setName("Call(Floor)");
			fUML_Tests_TestRealFunctions_Call_Floor->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestRealFunctions_Call_Floor_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Floor_result);
				fUML_Tests_TestRealFunctions_Call_Floor_result->setName("result");
				fUML_Tests_TestRealFunctions_Call_Floor_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Floor_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestRealFunctions_Call_Floor->addResult(fUML_Tests_TestRealFunctions_Call_Floor_result);
			fUML_Tests_TestRealFunctions_Call_Floor->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_Floor);
				// InputPin x
				fUML_Tests_TestRealFunctions_Call_Floor_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Floor_x);
				fUML_Tests_TestRealFunctions_Call_Floor_x->setName("x");
				fUML_Tests_TestRealFunctions_Call_Floor_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Floor_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Floor->addArgument(fUML_Tests_TestRealFunctions_Call_Floor_x);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Floor);
			// ValueSpecificationAction Value(-2.3)
			fUML_Tests_TestRealFunctions_Value_minus2_3->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Value_minus2_3);
			fUML_Tests_TestRealFunctions_Value_minus2_3->setName("Value(-2.3)");
			fUML_Tests_TestRealFunctions_Value_minus2_3->setVisibility(VisibilityKind::public_);
				// LiteralReal LiteralReal892
				fUML_Tests_TestRealFunctions_Value_minus2_3_LiteralReal892->setThisElementPtr(fUML_Tests_TestRealFunctions_Value_minus2_3_LiteralReal892);
				fUML_Tests_TestRealFunctions_Value_minus2_3_LiteralReal892->setName("LiteralReal892");
				fUML_Tests_TestRealFunctions_Value_minus2_3_LiteralReal892->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Value_minus2_3_LiteralReal892->setValue(-2.3f);
			fUML_Tests_TestRealFunctions_Value_minus2_3->setValue(fUML_Tests_TestRealFunctions_Value_minus2_3_LiteralReal892);
				// OutputPin Value(-2.3).result
				fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result);
				fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result->setName("Value(-2.3).result");
				fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Value_minus2_3->setResult(fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Value_minus2_3);
			// ObjectFlow ObjectFlow822 from Fork(0.5) to Plus.y
			fUML_Tests_TestRealFunctions_ObjectFlow822->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow822);
			fUML_Tests_TestRealFunctions_ObjectFlow822->setName("ObjectFlow822");
			fUML_Tests_TestRealFunctions_ObjectFlow822->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow822->setSource(fUML_Tests_TestRealFunctions_Fork_0_5);
			fUML_Tests_TestRealFunctions_ObjectFlow822->setTarget(fUML_Tests_TestRealFunctions_Call_Plus_Plus_y);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow822);
			// ControlFlow ControlFlow740 from Call(Plus) to Call(Minus)
			fUML_Tests_TestRealFunctions_ControlFlow740->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow740);
			fUML_Tests_TestRealFunctions_ControlFlow740->setName("ControlFlow740");
			fUML_Tests_TestRealFunctions_ControlFlow740->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow740->setSource(fUML_Tests_TestRealFunctions_Call_Plus);
			fUML_Tests_TestRealFunctions_ControlFlow740->setTarget(fUML_Tests_TestRealFunctions_Call_Minus);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow740);
			// ObjectFlow ObjectFlow824 from Fork(3.1) to Times.x
			fUML_Tests_TestRealFunctions_ObjectFlow824->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow824);
			fUML_Tests_TestRealFunctions_ObjectFlow824->setName("ObjectFlow824");
			fUML_Tests_TestRealFunctions_ObjectFlow824->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow824->setSource(fUML_Tests_TestRealFunctions_Fork_3_1);
			fUML_Tests_TestRealFunctions_ObjectFlow824->setTarget(fUML_Tests_TestRealFunctions_Call_Times_Times_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow824);
			// ObjectFlow ObjectFlow742 from Fork(0.5) to Max.y
			fUML_Tests_TestRealFunctions_ObjectFlow742->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow742);
			fUML_Tests_TestRealFunctions_ObjectFlow742->setName("ObjectFlow742");
			fUML_Tests_TestRealFunctions_ObjectFlow742->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow742->setSource(fUML_Tests_TestRealFunctions_Fork_0_5);
			fUML_Tests_TestRealFunctions_ObjectFlow742->setTarget(fUML_Tests_TestRealFunctions_Call_Max_Max_y);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow742);
			// ObjectFlow ObjectFlow826 from result to Param(InvResult)
			fUML_Tests_TestRealFunctions_ObjectFlow826->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow826);
			fUML_Tests_TestRealFunctions_ObjectFlow826->setName("ObjectFlow826");
			fUML_Tests_TestRealFunctions_ObjectFlow826->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow826->setSource(fUML_Tests_TestRealFunctions_Call_Inv_result);
			fUML_Tests_TestRealFunctions_ObjectFlow826->setTarget(fUML_Tests_TestRealFunctions_Param_InvResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow826);
			// ObjectFlow ObjectFlow744 from Fork(-2.3) to Abs.x
			fUML_Tests_TestRealFunctions_ObjectFlow744->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow744);
			fUML_Tests_TestRealFunctions_ObjectFlow744->setName("ObjectFlow744");
			fUML_Tests_TestRealFunctions_ObjectFlow744->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow744->setSource(fUML_Tests_TestRealFunctions_Fork_minus2_3);
			fUML_Tests_TestRealFunctions_ObjectFlow744->setTarget(fUML_Tests_TestRealFunctions_Call_Abs_Abs_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow744);
			// ObjectFlow ObjectFlow746 from Fork(-2.3) to Round.x
			fUML_Tests_TestRealFunctions_ObjectFlow746->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow746);
			fUML_Tests_TestRealFunctions_ObjectFlow746->setName("ObjectFlow746");
			fUML_Tests_TestRealFunctions_ObjectFlow746->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow746->setSource(fUML_Tests_TestRealFunctions_Fork_minus2_3);
			fUML_Tests_TestRealFunctions_ObjectFlow746->setTarget(fUML_Tests_TestRealFunctions_Call_Round_Round_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow746);
			// ObjectFlow ObjectFlow828 from Fork(0.5) to Minus.y
			fUML_Tests_TestRealFunctions_ObjectFlow828->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow828);
			fUML_Tests_TestRealFunctions_ObjectFlow828->setName("ObjectFlow828");
			fUML_Tests_TestRealFunctions_ObjectFlow828->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow828->setSource(fUML_Tests_TestRealFunctions_Fork_0_5);
			fUML_Tests_TestRealFunctions_ObjectFlow828->setTarget(fUML_Tests_TestRealFunctions_Call_Minus_Minus_y);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow828);
			// ObjectFlow ObjectFlow748 from Fork(0.5) to Min.y
			fUML_Tests_TestRealFunctions_ObjectFlow748->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow748);
			fUML_Tests_TestRealFunctions_ObjectFlow748->setName("ObjectFlow748");
			fUML_Tests_TestRealFunctions_ObjectFlow748->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow748->setSource(fUML_Tests_TestRealFunctions_Fork_0_5);
			fUML_Tests_TestRealFunctions_ObjectFlow748->setTarget(fUML_Tests_TestRealFunctions_Call_Min_Min_y);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow748);
			// ControlFlow ControlFlow750 from Call(Min) to Call(Abs)
			fUML_Tests_TestRealFunctions_ControlFlow750->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow750);
			fUML_Tests_TestRealFunctions_ControlFlow750->setName("ControlFlow750");
			fUML_Tests_TestRealFunctions_ControlFlow750->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow750->setSource(fUML_Tests_TestRealFunctions_Call_Min);
			fUML_Tests_TestRealFunctions_ControlFlow750->setTarget(fUML_Tests_TestRealFunctions_Call_Abs);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow750);
			// ObjectFlow ObjectFlow754 from Fork(3.1) to Neg.x
			fUML_Tests_TestRealFunctions_ObjectFlow754->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow754);
			fUML_Tests_TestRealFunctions_ObjectFlow754->setName("ObjectFlow754");
			fUML_Tests_TestRealFunctions_ObjectFlow754->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow754->setSource(fUML_Tests_TestRealFunctions_Fork_3_1);
			fUML_Tests_TestRealFunctions_ObjectFlow754->setTarget(fUML_Tests_TestRealFunctions_Call_Neg_Neg_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow754);
			// ObjectFlow ObjectFlow756 from Fork(3.1) to Plus.x
			fUML_Tests_TestRealFunctions_ObjectFlow756->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow756);
			fUML_Tests_TestRealFunctions_ObjectFlow756->setName("ObjectFlow756");
			fUML_Tests_TestRealFunctions_ObjectFlow756->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow756->setSource(fUML_Tests_TestRealFunctions_Fork_3_1);
			fUML_Tests_TestRealFunctions_ObjectFlow756->setTarget(fUML_Tests_TestRealFunctions_Call_Plus_Plus_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow756);
			// ObjectFlow ObjectFlow840 from Minus.result to Param(MinusResult)
			fUML_Tests_TestRealFunctions_ObjectFlow840->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow840);
			fUML_Tests_TestRealFunctions_ObjectFlow840->setName("ObjectFlow840");
			fUML_Tests_TestRealFunctions_ObjectFlow840->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow840->setSource(fUML_Tests_TestRealFunctions_Call_Minus_Minus_result);
			fUML_Tests_TestRealFunctions_ObjectFlow840->setTarget(fUML_Tests_TestRealFunctions_Param_MinusResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow840);
			// ObjectFlow ObjectFlow764 from Max.result to Param(MaxResult)
			fUML_Tests_TestRealFunctions_ObjectFlow764->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow764);
			fUML_Tests_TestRealFunctions_ObjectFlow764->setName("ObjectFlow764");
			fUML_Tests_TestRealFunctions_ObjectFlow764->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow764->setSource(fUML_Tests_TestRealFunctions_Call_Max_Max_result);
			fUML_Tests_TestRealFunctions_ObjectFlow764->setTarget(fUML_Tests_TestRealFunctions_Param_MaxResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow764);
			// ControlFlow ControlFlow766 from Call(Minus) to Call(Inv)
			fUML_Tests_TestRealFunctions_ControlFlow766->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow766);
			fUML_Tests_TestRealFunctions_ControlFlow766->setName("ControlFlow766");
			fUML_Tests_TestRealFunctions_ControlFlow766->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow766->setSource(fUML_Tests_TestRealFunctions_Call_Minus);
			fUML_Tests_TestRealFunctions_ControlFlow766->setTarget(fUML_Tests_TestRealFunctions_Call_Inv);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow766);
			// ControlFlow ControlFlow768 from Call(Floor) to Call(Round)
			fUML_Tests_TestRealFunctions_ControlFlow768->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow768);
			fUML_Tests_TestRealFunctions_ControlFlow768->setName("ControlFlow768");
			fUML_Tests_TestRealFunctions_ControlFlow768->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow768->setSource(fUML_Tests_TestRealFunctions_Call_Floor);
			fUML_Tests_TestRealFunctions_ControlFlow768->setTarget(fUML_Tests_TestRealFunctions_Call_Round);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow768);
			// ObjectFlow ObjectFlow842 from result to Param(FloorResult)
			fUML_Tests_TestRealFunctions_ObjectFlow842->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow842);
			fUML_Tests_TestRealFunctions_ObjectFlow842->setName("ObjectFlow842");
			fUML_Tests_TestRealFunctions_ObjectFlow842->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow842->setSource(fUML_Tests_TestRealFunctions_Call_Floor_result);
			fUML_Tests_TestRealFunctions_ObjectFlow842->setTarget(fUML_Tests_TestRealFunctions_Param_FloorResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow842);
			// ObjectFlow ObjectFlow844 from Fork(3.1) to Min.x
			fUML_Tests_TestRealFunctions_ObjectFlow844->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow844);
			fUML_Tests_TestRealFunctions_ObjectFlow844->setName("ObjectFlow844");
			fUML_Tests_TestRealFunctions_ObjectFlow844->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow844->setSource(fUML_Tests_TestRealFunctions_Fork_3_1);
			fUML_Tests_TestRealFunctions_ObjectFlow844->setTarget(fUML_Tests_TestRealFunctions_Call_Min_Min_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow844);
			// ObjectFlow ObjectFlow770 from Fork(3.1) to Minus.x
			fUML_Tests_TestRealFunctions_ObjectFlow770->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow770);
			fUML_Tests_TestRealFunctions_ObjectFlow770->setName("ObjectFlow770");
			fUML_Tests_TestRealFunctions_ObjectFlow770->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow770->setSource(fUML_Tests_TestRealFunctions_Fork_3_1);
			fUML_Tests_TestRealFunctions_ObjectFlow770->setTarget(fUML_Tests_TestRealFunctions_Call_Minus_Minus_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow770);
			// ObjectFlow ObjectFlow778 from Plus.result to Param(PlusResult)
			fUML_Tests_TestRealFunctions_ObjectFlow778->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow778);
			fUML_Tests_TestRealFunctions_ObjectFlow778->setName("ObjectFlow778");
			fUML_Tests_TestRealFunctions_ObjectFlow778->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow778->setSource(fUML_Tests_TestRealFunctions_Call_Plus_Plus_result);
			fUML_Tests_TestRealFunctions_ObjectFlow778->setTarget(fUML_Tests_TestRealFunctions_Param_PlusResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow778);
			// ControlFlow ControlFlow786 from Call(Neg) to Call(Plus)
			fUML_Tests_TestRealFunctions_ControlFlow786->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow786);
			fUML_Tests_TestRealFunctions_ControlFlow786->setName("ControlFlow786");
			fUML_Tests_TestRealFunctions_ControlFlow786->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow786->setSource(fUML_Tests_TestRealFunctions_Call_Neg);
			fUML_Tests_TestRealFunctions_ControlFlow786->setTarget(fUML_Tests_TestRealFunctions_Call_Plus);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow786);
			// ObjectFlow ObjectFlow788 from Fork(3.1) to x
			fUML_Tests_TestRealFunctions_ObjectFlow788->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow788);
			fUML_Tests_TestRealFunctions_ObjectFlow788->setName("ObjectFlow788");
			fUML_Tests_TestRealFunctions_ObjectFlow788->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow788->setSource(fUML_Tests_TestRealFunctions_Fork_3_1);
			fUML_Tests_TestRealFunctions_ObjectFlow788->setTarget(fUML_Tests_TestRealFunctions_Call_Divide_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow788);
			// ObjectFlow ObjectFlow790 from Fork(-2.3) to x
			fUML_Tests_TestRealFunctions_ObjectFlow790->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow790);
			fUML_Tests_TestRealFunctions_ObjectFlow790->setName("ObjectFlow790");
			fUML_Tests_TestRealFunctions_ObjectFlow790->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow790->setSource(fUML_Tests_TestRealFunctions_Fork_minus2_3);
			fUML_Tests_TestRealFunctions_ObjectFlow790->setTarget(fUML_Tests_TestRealFunctions_Call_ToInteger_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow790);
			// ObjectFlow ObjectFlow846 from Fork(0.5) to Times.y
			fUML_Tests_TestRealFunctions_ObjectFlow846->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow846);
			fUML_Tests_TestRealFunctions_ObjectFlow846->setName("ObjectFlow846");
			fUML_Tests_TestRealFunctions_ObjectFlow846->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow846->setSource(fUML_Tests_TestRealFunctions_Fork_0_5);
			fUML_Tests_TestRealFunctions_ObjectFlow846->setTarget(fUML_Tests_TestRealFunctions_Call_Times_Times_y);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow846);
			// ControlFlow ControlFlow792 from Call(Round) to Call(ToInteger)
			fUML_Tests_TestRealFunctions_ControlFlow792->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow792);
			fUML_Tests_TestRealFunctions_ControlFlow792->setName("ControlFlow792");
			fUML_Tests_TestRealFunctions_ControlFlow792->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow792->setSource(fUML_Tests_TestRealFunctions_Call_Round);
			fUML_Tests_TestRealFunctions_ControlFlow792->setTarget(fUML_Tests_TestRealFunctions_Call_ToInteger);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow792);
			// ObjectFlow ObjectFlow848 from Value(3.1).result to Fork(3.1)
			fUML_Tests_TestRealFunctions_ObjectFlow848->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow848);
			fUML_Tests_TestRealFunctions_ObjectFlow848->setName("ObjectFlow848");
			fUML_Tests_TestRealFunctions_ObjectFlow848->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow848->setSource(fUML_Tests_TestRealFunctions_Value_3_1_Value_3_1_result);
			fUML_Tests_TestRealFunctions_ObjectFlow848->setTarget(fUML_Tests_TestRealFunctions_Fork_3_1);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow848);
			// ControlFlow ControlFlow800 from Call(Max) to Call(Min)
			fUML_Tests_TestRealFunctions_ControlFlow800->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow800);
			fUML_Tests_TestRealFunctions_ControlFlow800->setName("ControlFlow800");
			fUML_Tests_TestRealFunctions_ControlFlow800->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow800->setSource(fUML_Tests_TestRealFunctions_Call_Max);
			fUML_Tests_TestRealFunctions_ControlFlow800->setTarget(fUML_Tests_TestRealFunctions_Call_Min);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow800);
			// ControlFlow ControlFlow802 from Call(Abs) to Call(Floor)
			fUML_Tests_TestRealFunctions_ControlFlow802->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow802);
			fUML_Tests_TestRealFunctions_ControlFlow802->setName("ControlFlow802");
			fUML_Tests_TestRealFunctions_ControlFlow802->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow802->setSource(fUML_Tests_TestRealFunctions_Call_Abs);
			fUML_Tests_TestRealFunctions_ControlFlow802->setTarget(fUML_Tests_TestRealFunctions_Call_Floor);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow802);
			// ObjectFlow ObjectFlow850 from Abs.result to Call(AbsResult)
			fUML_Tests_TestRealFunctions_ObjectFlow850->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow850);
			fUML_Tests_TestRealFunctions_ObjectFlow850->setName("ObjectFlow850");
			fUML_Tests_TestRealFunctions_ObjectFlow850->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow850->setSource(fUML_Tests_TestRealFunctions_Call_Abs_Abs_result);
			fUML_Tests_TestRealFunctions_ObjectFlow850->setTarget(fUML_Tests_TestRealFunctions_Call_AbsResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow850);
			// ControlFlow ControlFlow804 from Call(Divide) to Call(Max)
			fUML_Tests_TestRealFunctions_ControlFlow804->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow804);
			fUML_Tests_TestRealFunctions_ControlFlow804->setName("ControlFlow804");
			fUML_Tests_TestRealFunctions_ControlFlow804->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow804->setSource(fUML_Tests_TestRealFunctions_Call_Divide);
			fUML_Tests_TestRealFunctions_ControlFlow804->setTarget(fUML_Tests_TestRealFunctions_Call_Max);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow804);
			// ObjectFlow ObjectFlow864 from Fork(-2.3) to x
			fUML_Tests_TestRealFunctions_ObjectFlow864->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow864);
			fUML_Tests_TestRealFunctions_ObjectFlow864->setName("ObjectFlow864");
			fUML_Tests_TestRealFunctions_ObjectFlow864->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow864->setSource(fUML_Tests_TestRealFunctions_Fork_minus2_3);
			fUML_Tests_TestRealFunctions_ObjectFlow864->setTarget(fUML_Tests_TestRealFunctions_Call_Floor_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow864);
			// ObjectFlow ObjectFlow808 from Min.result to Param(MinResult)
			fUML_Tests_TestRealFunctions_ObjectFlow808->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow808);
			fUML_Tests_TestRealFunctions_ObjectFlow808->setName("ObjectFlow808");
			fUML_Tests_TestRealFunctions_ObjectFlow808->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow808->setSource(fUML_Tests_TestRealFunctions_Call_Min_Min_result);
			fUML_Tests_TestRealFunctions_ObjectFlow808->setTarget(fUML_Tests_TestRealFunctions_Param_MinResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow808);
			// ControlFlow ControlFlow866 from Call(Inv) to Call(Times)
			fUML_Tests_TestRealFunctions_ControlFlow866->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow866);
			fUML_Tests_TestRealFunctions_ControlFlow866->setName("ControlFlow866");
			fUML_Tests_TestRealFunctions_ControlFlow866->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow866->setSource(fUML_Tests_TestRealFunctions_Call_Inv);
			fUML_Tests_TestRealFunctions_ControlFlow866->setTarget(fUML_Tests_TestRealFunctions_Call_Times);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow866);
			// ObjectFlow ObjectFlow810 from Fork(0.5) to x
			fUML_Tests_TestRealFunctions_ObjectFlow810->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow810);
			fUML_Tests_TestRealFunctions_ObjectFlow810->setName("ObjectFlow810");
			fUML_Tests_TestRealFunctions_ObjectFlow810->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow810->setSource(fUML_Tests_TestRealFunctions_Fork_0_5);
			fUML_Tests_TestRealFunctions_ObjectFlow810->setTarget(fUML_Tests_TestRealFunctions_Call_Inv_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow810);
			// ObjectFlow ObjectFlow812 from Neg.result to Param(NegResult)
			fUML_Tests_TestRealFunctions_ObjectFlow812->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow812);
			fUML_Tests_TestRealFunctions_ObjectFlow812->setName("ObjectFlow812");
			fUML_Tests_TestRealFunctions_ObjectFlow812->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow812->setSource(fUML_Tests_TestRealFunctions_Call_Neg_Neg_result);
			fUML_Tests_TestRealFunctions_ObjectFlow812->setTarget(fUML_Tests_TestRealFunctions_Param_NegResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow812);
			// ObjectFlow ObjectFlow868 from Round.result to Param(RoundResult)
			fUML_Tests_TestRealFunctions_ObjectFlow868->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow868);
			fUML_Tests_TestRealFunctions_ObjectFlow868->setName("ObjectFlow868");
			fUML_Tests_TestRealFunctions_ObjectFlow868->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow868->setSource(fUML_Tests_TestRealFunctions_Call_Round_Round_result);
			fUML_Tests_TestRealFunctions_ObjectFlow868->setTarget(fUML_Tests_TestRealFunctions_Param_RoundResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow868);
			// ObjectFlow ObjectFlow870 from Fork(0.5) to y
			fUML_Tests_TestRealFunctions_ObjectFlow870->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow870);
			fUML_Tests_TestRealFunctions_ObjectFlow870->setName("ObjectFlow870");
			fUML_Tests_TestRealFunctions_ObjectFlow870->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow870->setSource(fUML_Tests_TestRealFunctions_Fork_0_5);
			fUML_Tests_TestRealFunctions_ObjectFlow870->setTarget(fUML_Tests_TestRealFunctions_Call_Divide_y);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow870);
			// ObjectFlow ObjectFlow872 from result to Param(DivideResult)
			fUML_Tests_TestRealFunctions_ObjectFlow872->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow872);
			fUML_Tests_TestRealFunctions_ObjectFlow872->setName("ObjectFlow872");
			fUML_Tests_TestRealFunctions_ObjectFlow872->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow872->setSource(fUML_Tests_TestRealFunctions_Call_Divide_result);
			fUML_Tests_TestRealFunctions_ObjectFlow872->setTarget(fUML_Tests_TestRealFunctions_Param_DivideResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow872);
			// ObjectFlow ObjectFlow874 from Fork(3.1) to Max.x
			fUML_Tests_TestRealFunctions_ObjectFlow874->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow874);
			fUML_Tests_TestRealFunctions_ObjectFlow874->setName("ObjectFlow874");
			fUML_Tests_TestRealFunctions_ObjectFlow874->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow874->setSource(fUML_Tests_TestRealFunctions_Fork_3_1);
			fUML_Tests_TestRealFunctions_ObjectFlow874->setTarget(fUML_Tests_TestRealFunctions_Call_Max_Max_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow874);
			// ObjectFlow ObjectFlow882 from Value(-2.3).result to Fork(-2.3)
			fUML_Tests_TestRealFunctions_ObjectFlow882->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow882);
			fUML_Tests_TestRealFunctions_ObjectFlow882->setName("ObjectFlow882");
			fUML_Tests_TestRealFunctions_ObjectFlow882->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow882->setSource(fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result);
			fUML_Tests_TestRealFunctions_ObjectFlow882->setTarget(fUML_Tests_TestRealFunctions_Fork_minus2_3);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow882);
			// ObjectFlow ObjectFlow884 from result to Param(ToIntegerResult)
			fUML_Tests_TestRealFunctions_ObjectFlow884->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow884);
			fUML_Tests_TestRealFunctions_ObjectFlow884->setName("ObjectFlow884");
			fUML_Tests_TestRealFunctions_ObjectFlow884->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow884->setSource(fUML_Tests_TestRealFunctions_Call_ToInteger_result);
			fUML_Tests_TestRealFunctions_ObjectFlow884->setTarget(fUML_Tests_TestRealFunctions_Param_ToIntegerResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow884);
			// ObjectFlow ObjectFlow816 from Value(0.5).result to Fork(0.5)
			fUML_Tests_TestRealFunctions_ObjectFlow816->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow816);
			fUML_Tests_TestRealFunctions_ObjectFlow816->setName("ObjectFlow816");
			fUML_Tests_TestRealFunctions_ObjectFlow816->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow816->setSource(fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result);
			fUML_Tests_TestRealFunctions_ObjectFlow816->setTarget(fUML_Tests_TestRealFunctions_Fork_0_5);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow816);
			// ObjectFlow ObjectFlow818 from Times.result to Param(TimesResult)
			fUML_Tests_TestRealFunctions_ObjectFlow818->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow818);
			fUML_Tests_TestRealFunctions_ObjectFlow818->setName("ObjectFlow818");
			fUML_Tests_TestRealFunctions_ObjectFlow818->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow818->setSource(fUML_Tests_TestRealFunctions_Call_Times_Times_result);
			fUML_Tests_TestRealFunctions_ObjectFlow818->setTarget(fUML_Tests_TestRealFunctions_Param_TimesResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow818);
			// ControlFlow ControlFlow820 from Call(Times) to Call(Divide)
			fUML_Tests_TestRealFunctions_ControlFlow820->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow820);
			fUML_Tests_TestRealFunctions_ControlFlow820->setName("ControlFlow820");
			fUML_Tests_TestRealFunctions_ControlFlow820->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow820->setSource(fUML_Tests_TestRealFunctions_Call_Times);
			fUML_Tests_TestRealFunctions_ControlFlow820->setTarget(fUML_Tests_TestRealFunctions_Call_Divide);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow820);
	fUML_Tests->addPackagedElement(fUML_Tests_TestRealFunctions);
		// Activity ActiveClassBehaviorSender
		fUML_Tests_ActiveClassBehaviorSender->setThisActivityPtr(fUML_Tests_ActiveClassBehaviorSender);
		fUML_Tests_ActiveClassBehaviorSender->setName("ActiveClassBehaviorSender");
		fUML_Tests_ActiveClassBehaviorSender->setVisibility(VisibilityKind::public_);
			// CreateObjectAction Create(ActiveClass)
			fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass->setThisExecutableNodePtr(fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass);
			fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass->setName("Create(ActiveClass)");
			fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass->setVisibility(VisibilityKind::public_);
			fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass->setClassifier(fUML_Tests_ActiveClass);
				// OutputPin result
				fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result->setThisElementPtr(fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result);
				fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result->setName("result");
				fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result->setType(fUML_Tests_ActiveClass);
			fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass->setResult(fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result);
		fUML_Tests_ActiveClassBehaviorSender->addNode(fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass);
			// SendSignalAction Send(OtherSignal)
			fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal->setThisExecutableNodePtr(fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal);
			fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal->setName("Send(OtherSignal)");
			fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal->setVisibility(VisibilityKind::public_);
			fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal->setSignal(fUML_Tests_OtherSignal);
				// InputPin target
				fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target->setThisElementPtr(fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target);
				fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target->setName("target");
				fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target->setVisibility(VisibilityKind::public_);
				fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target->setType(fUML_Tests_ActiveClass);
			fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal->setTarget(fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target);
		fUML_Tests_ActiveClassBehaviorSender->addNode(fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal);
			// InitialNode InitialNode911
			fUML_Tests_ActiveClassBehaviorSender_InitialNode911->setThisElementPtr(fUML_Tests_ActiveClassBehaviorSender_InitialNode911);
			fUML_Tests_ActiveClassBehaviorSender_InitialNode911->setName("InitialNode911");
			fUML_Tests_ActiveClassBehaviorSender_InitialNode911->setVisibility(VisibilityKind::public_);
		fUML_Tests_ActiveClassBehaviorSender->addNode(fUML_Tests_ActiveClassBehaviorSender_InitialNode911);
			// SendSignalAction Send(TestSignal)
			fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal->setThisExecutableNodePtr(fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal);
			fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal->setName("Send(TestSignal)");
			fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal->setVisibility(VisibilityKind::public_);
			fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal->setSignal(fUML_Tests_TestSignal);
				// InputPin target
				fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target->setThisElementPtr(fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target);
				fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target->setName("target");
				fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target->setVisibility(VisibilityKind::public_);
				fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target->setType(fUML_Tests_ActiveClass);
			fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal->setTarget(fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target);
		fUML_Tests_ActiveClassBehaviorSender->addNode(fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal);
			// ForkNode ForkNode914
			fUML_Tests_ActiveClassBehaviorSender_ForkNode914->setThisElementPtr(fUML_Tests_ActiveClassBehaviorSender_ForkNode914);
			fUML_Tests_ActiveClassBehaviorSender_ForkNode914->setName("ForkNode914");
			fUML_Tests_ActiveClassBehaviorSender_ForkNode914->setVisibility(VisibilityKind::public_);
		fUML_Tests_ActiveClassBehaviorSender->addNode(fUML_Tests_ActiveClassBehaviorSender_ForkNode914);
			// StartObjectBehaviorAction Start(ActiveClass)
			fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass->setThisExecutableNodePtr(fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass);
			fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass->setName("Start(ActiveClass)");
			fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass->setVisibility(VisibilityKind::public_);
				// InputPin object
				fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object->setThisElementPtr(fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object);
				fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object->setName("object");
				fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object->setType(fUML_Tests_ActiveClass);
			fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass->setObject(fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object);
		fUML_Tests_ActiveClassBehaviorSender->addNode(fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass);
			// ControlFlow ControlFlow893 from InitialNode911 to Create(ActiveClass)
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow893->setThisActivityEdgePtr(fUML_Tests_ActiveClassBehaviorSender_ControlFlow893);
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow893->setName("ControlFlow893");
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow893->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow893->setSource(fUML_Tests_ActiveClassBehaviorSender_InitialNode911);
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow893->setTarget(fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass);
		fUML_Tests_ActiveClassBehaviorSender->addEdge(fUML_Tests_ActiveClassBehaviorSender_ControlFlow893);
			// ObjectFlow ObjectFlow903 from ForkNode914 to object
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow903->setThisActivityEdgePtr(fUML_Tests_ActiveClassBehaviorSender_ObjectFlow903);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow903->setName("ObjectFlow903");
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow903->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow903->setSource(fUML_Tests_ActiveClassBehaviorSender_ForkNode914);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow903->setTarget(fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object);
		fUML_Tests_ActiveClassBehaviorSender->addEdge(fUML_Tests_ActiveClassBehaviorSender_ObjectFlow903);
			// ObjectFlow ObjectFlow907 from result to ForkNode914
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow907->setThisActivityEdgePtr(fUML_Tests_ActiveClassBehaviorSender_ObjectFlow907);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow907->setName("ObjectFlow907");
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow907->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow907->setSource(fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow907->setTarget(fUML_Tests_ActiveClassBehaviorSender_ForkNode914);
		fUML_Tests_ActiveClassBehaviorSender->addEdge(fUML_Tests_ActiveClassBehaviorSender_ObjectFlow907);
			// ControlFlow ControlFlow909 from Start(ActiveClass) to Send(TestSignal)
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow909->setThisActivityEdgePtr(fUML_Tests_ActiveClassBehaviorSender_ControlFlow909);
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow909->setName("ControlFlow909");
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow909->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow909->setSource(fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass);
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow909->setTarget(fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal);
		fUML_Tests_ActiveClassBehaviorSender->addEdge(fUML_Tests_ActiveClassBehaviorSender_ControlFlow909);
			// ObjectFlow ObjectFlow912 from ForkNode914 to target
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow912->setThisActivityEdgePtr(fUML_Tests_ActiveClassBehaviorSender_ObjectFlow912);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow912->setName("ObjectFlow912");
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow912->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow912->setSource(fUML_Tests_ActiveClassBehaviorSender_ForkNode914);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow912->setTarget(fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target);
		fUML_Tests_ActiveClassBehaviorSender->addEdge(fUML_Tests_ActiveClassBehaviorSender_ObjectFlow912);
			// ObjectFlow ObjectFlow899 from ForkNode914 to target
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow899->setThisActivityEdgePtr(fUML_Tests_ActiveClassBehaviorSender_ObjectFlow899);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow899->setName("ObjectFlow899");
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow899->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow899->setSource(fUML_Tests_ActiveClassBehaviorSender_ForkNode914);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow899->setTarget(fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target);
		fUML_Tests_ActiveClassBehaviorSender->addEdge(fUML_Tests_ActiveClassBehaviorSender_ObjectFlow899);
			// ControlFlow ControlFlow901 from Send(TestSignal) to Send(OtherSignal)
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow901->setThisActivityEdgePtr(fUML_Tests_ActiveClassBehaviorSender_ControlFlow901);
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow901->setName("ControlFlow901");
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow901->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow901->setSource(fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal);
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow901->setTarget(fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal);
		fUML_Tests_ActiveClassBehaviorSender->addEdge(fUML_Tests_ActiveClassBehaviorSender_ControlFlow901);
	fUML_Tests->addPackagedElement(fUML_Tests_ActiveClassBehaviorSender);
		// Activity TestSimpleActivities
		fUML_Tests_TestSimpleActivities->setThisActivityPtr(fUML_Tests_TestSimpleActivities);
		fUML_Tests_TestSimpleActivities->setName("TestSimpleActivities");
		fUML_Tests_TestSimpleActivities->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestSimpleActivities->isReentrant = false;
			// Parameter Copier.output
			fUML_Tests_TestSimpleActivities_Copier_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_Copier_output);
			fUML_Tests_TestSimpleActivities_Copier_output->setName("Copier.output");
			fUML_Tests_TestSimpleActivities_Copier_output->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_Copier_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Copier_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestSimpleActivities->addOwnedParameter(fUML_Tests_TestSimpleActivities_Copier_output);
			// Parameter CopierCaller.output
			fUML_Tests_TestSimpleActivities_CopierCaller_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_CopierCaller_output);
			fUML_Tests_TestSimpleActivities_CopierCaller_output->setName("CopierCaller.output");
			fUML_Tests_TestSimpleActivities_CopierCaller_output->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_CopierCaller_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_CopierCaller_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestSimpleActivities->addOwnedParameter(fUML_Tests_TestSimpleActivities_CopierCaller_output);
			// Parameter SimpleDecision_0.output_0
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0->setThisElementPtr(fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0);
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0->setName("SimpleDecision_0.output_0");
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0->setLower(0);
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestSimpleActivities->addOwnedParameter(fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0);
			// Parameter SimpleDecision_0.output_1
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1->setThisElementPtr(fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1);
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1->setName("SimpleDecision_0.output_1");
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1->setLower(0);
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestSimpleActivities->addOwnedParameter(fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1);
			// Parameter SimpleDecision_1.output_0
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0->setThisElementPtr(fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0->setName("SimpleDecision_1.output_0");
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0->setLower(0);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestSimpleActivities->addOwnedParameter(fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0);
			// Parameter SimpleDecision_1.output_1
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1->setThisElementPtr(fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1->setName("SimpleDecision_1.output_1");
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1->setLower(0);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestSimpleActivities->addOwnedParameter(fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1);
			// Parameter DecisionJoin.output
			fUML_Tests_TestSimpleActivities_DecisionJoin_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_DecisionJoin_output);
			fUML_Tests_TestSimpleActivities_DecisionJoin_output->setName("DecisionJoin.output");
			fUML_Tests_TestSimpleActivities_DecisionJoin_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_DecisionJoin_output->setIsOrdered(true);
			fUML_Tests_TestSimpleActivities_DecisionJoin_output->setUpper(-1);
			fUML_Tests_TestSimpleActivities_DecisionJoin_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_DecisionJoin_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestSimpleActivities->addOwnedParameter(fUML_Tests_TestSimpleActivities_DecisionJoin_output);
			// Parameter ForkMerge
			fUML_Tests_TestSimpleActivities_ForkMerge->setThisElementPtr(fUML_Tests_TestSimpleActivities_ForkMerge);
			fUML_Tests_TestSimpleActivities_ForkMerge->setName("ForkMerge");
			fUML_Tests_TestSimpleActivities_ForkMerge->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_ForkMerge->setUpper(-1);
			fUML_Tests_TestSimpleActivities_ForkMerge->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_ForkMerge->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestSimpleActivities->addOwnedParameter(fUML_Tests_TestSimpleActivities_ForkMerge);
			// Parameter ForkMergeData.output
			fUML_Tests_TestSimpleActivities_ForkMergeData_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_ForkMergeData_output);
			fUML_Tests_TestSimpleActivities_ForkMergeData_output->setName("ForkMergeData.output");
			fUML_Tests_TestSimpleActivities_ForkMergeData_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_ForkMergeData_output->setUpper(-1);
			fUML_Tests_TestSimpleActivities_ForkMergeData_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_ForkMergeData_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestSimpleActivities->addOwnedParameter(fUML_Tests_TestSimpleActivities_ForkMergeData_output);
			// ActivityParameterNode SimpleDecision_1.output_1Node
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1Node->setThisElementPtr(fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1Node);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1Node->setName("SimpleDecision_1.output_1Node");
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1Node->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1Node->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1Node->setParameter(fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1Node);
			// ActivityParameterNode Parameter(SimpleDecision_0.output_1)
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_1->setThisElementPtr(fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_1);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_1->setName("Parameter(SimpleDecision_0.output_1)");
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_1->setParameter(fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_1);
			// ActivityParameterNode Parameter(ForkMergeData.output)
			fUML_Tests_TestSimpleActivities_Parameter_ForkMergeData_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_Parameter_ForkMergeData_output);
			fUML_Tests_TestSimpleActivities_Parameter_ForkMergeData_output->setName("Parameter(ForkMergeData.output)");
			fUML_Tests_TestSimpleActivities_Parameter_ForkMergeData_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_Parameter_ForkMergeData_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Parameter_ForkMergeData_output->setParameter(fUML_Tests_TestSimpleActivities_ForkMergeData_output);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Parameter_ForkMergeData_output);
			// ValueSpecificationAction Value(1)
			fUML_Tests_TestSimpleActivities_Value_1->setThisExecutableNodePtr(fUML_Tests_TestSimpleActivities_Value_1);
			fUML_Tests_TestSimpleActivities_Value_1->setName("Value(1)");
			fUML_Tests_TestSimpleActivities_Value_1->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger945
				fUML_Tests_TestSimpleActivities_Value_1_LiteralInteger945->setThisElementPtr(fUML_Tests_TestSimpleActivities_Value_1_LiteralInteger945);
				fUML_Tests_TestSimpleActivities_Value_1_LiteralInteger945->setName("LiteralInteger945");
				fUML_Tests_TestSimpleActivities_Value_1_LiteralInteger945->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Value_1_LiteralInteger945->setValue(1);
			fUML_Tests_TestSimpleActivities_Value_1->setValue(fUML_Tests_TestSimpleActivities_Value_1_LiteralInteger945);
				// OutputPin Value(1).result
				fUML_Tests_TestSimpleActivities_Value_1_Value_1_result->setThisElementPtr(fUML_Tests_TestSimpleActivities_Value_1_Value_1_result);
				fUML_Tests_TestSimpleActivities_Value_1_Value_1_result->setName("Value(1).result");
				fUML_Tests_TestSimpleActivities_Value_1_Value_1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Value_1_Value_1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Value_1->setResult(fUML_Tests_TestSimpleActivities_Value_1_Value_1_result);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Value_1);
			// CallBehaviorAction Call(DecisionJoin)
			fUML_Tests_TestSimpleActivities_Call_DecisionJoin->setThisExecutableNodePtr(fUML_Tests_TestSimpleActivities_Call_DecisionJoin);
			fUML_Tests_TestSimpleActivities_Call_DecisionJoin->setName("Call(DecisionJoin)");
			fUML_Tests_TestSimpleActivities_Call_DecisionJoin->setVisibility(VisibilityKind::public_);
				// OutputPin DecisionJoin.output
				fUML_Tests_TestSimpleActivities_Call_DecisionJoin_DecisionJoin_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_DecisionJoin_DecisionJoin_output);
				fUML_Tests_TestSimpleActivities_Call_DecisionJoin_DecisionJoin_output->setName("DecisionJoin.output");
				fUML_Tests_TestSimpleActivities_Call_DecisionJoin_DecisionJoin_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_DecisionJoin_DecisionJoin_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_DecisionJoin->addResult(fUML_Tests_TestSimpleActivities_Call_DecisionJoin_DecisionJoin_output);
			fUML_Tests_TestSimpleActivities_Call_DecisionJoin->setBehavior(fUML_Tests_DecisionJoin);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Call_DecisionJoin);
			// ActivityParameterNode Parameter(Copier.output)
			fUML_Tests_TestSimpleActivities_Parameter_Copier_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_Parameter_Copier_output);
			fUML_Tests_TestSimpleActivities_Parameter_Copier_output->setName("Parameter(Copier.output)");
			fUML_Tests_TestSimpleActivities_Parameter_Copier_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_Parameter_Copier_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Parameter_Copier_output->setParameter(fUML_Tests_TestSimpleActivities_Copier_output);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Parameter_Copier_output);
			// ActivityParameterNode Parameter(DecisionJoin.output)
			fUML_Tests_TestSimpleActivities_Parameter_DecisionJoin_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_Parameter_DecisionJoin_output);
			fUML_Tests_TestSimpleActivities_Parameter_DecisionJoin_output->setName("Parameter(DecisionJoin.output)");
			fUML_Tests_TestSimpleActivities_Parameter_DecisionJoin_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_Parameter_DecisionJoin_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Parameter_DecisionJoin_output->setParameter(fUML_Tests_TestSimpleActivities_DecisionJoin_output);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Parameter_DecisionJoin_output);
			// CallBehaviorAction Call(SimpleDecision_0)
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0->setThisExecutableNodePtr(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0->setName("Call(SimpleDecision_0)");
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0->setVisibility(VisibilityKind::public_);
				// OutputPin SimpleDecision_0.output_0
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_output_0->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_output_0);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_output_0->setName("SimpleDecision_0.output_0");
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_output_0->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_output_0->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0->addResult(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_output_0);
				// OutputPin SimpleDcision_0.output_1
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDcision_0_output_1->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDcision_0_output_1);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDcision_0_output_1->setName("SimpleDcision_0.output_1");
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDcision_0_output_1->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDcision_0_output_1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0->addResult(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDcision_0_output_1);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0->setBehavior(fUML_Tests_SimpleDecision);
				// InputPin SimpleDecision_0.testValue
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_testValue->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_testValue);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_testValue->setName("SimpleDecision_0.testValue");
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_testValue->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_testValue->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0->addArgument(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_testValue);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0);
			// ValueSpecificationAction Value(0)
			fUML_Tests_TestSimpleActivities_Value_0->setThisExecutableNodePtr(fUML_Tests_TestSimpleActivities_Value_0);
			fUML_Tests_TestSimpleActivities_Value_0->setName("Value(0)");
			fUML_Tests_TestSimpleActivities_Value_0->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger946
				fUML_Tests_TestSimpleActivities_Value_0_LiteralInteger946->setThisElementPtr(fUML_Tests_TestSimpleActivities_Value_0_LiteralInteger946);
				fUML_Tests_TestSimpleActivities_Value_0_LiteralInteger946->setName("LiteralInteger946");
				fUML_Tests_TestSimpleActivities_Value_0_LiteralInteger946->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Value_0_LiteralInteger946->setValue(0);
			fUML_Tests_TestSimpleActivities_Value_0->setValue(fUML_Tests_TestSimpleActivities_Value_0_LiteralInteger946);
				// OutputPin Value(0).result
				fUML_Tests_TestSimpleActivities_Value_0_Value_0_result->setThisElementPtr(fUML_Tests_TestSimpleActivities_Value_0_Value_0_result);
				fUML_Tests_TestSimpleActivities_Value_0_Value_0_result->setName("Value(0).result");
				fUML_Tests_TestSimpleActivities_Value_0_Value_0_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Value_0_Value_0_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Value_0->setResult(fUML_Tests_TestSimpleActivities_Value_0_Value_0_result);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Value_0);
			// CallBehaviorAction Call(ForkJoin)
			fUML_Tests_TestSimpleActivities_Call_ForkJoin->setThisExecutableNodePtr(fUML_Tests_TestSimpleActivities_Call_ForkJoin);
			fUML_Tests_TestSimpleActivities_Call_ForkJoin->setName("Call(ForkJoin)");
			fUML_Tests_TestSimpleActivities_Call_ForkJoin->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_Call_ForkJoin->setBehavior(fUML_Tests_ForkJoin);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Call_ForkJoin);
			// CallBehaviorAction Call(ForkMergeData)
			fUML_Tests_TestSimpleActivities_Call_ForkMergeData->setThisExecutableNodePtr(fUML_Tests_TestSimpleActivities_Call_ForkMergeData);
			fUML_Tests_TestSimpleActivities_Call_ForkMergeData->setName("Call(ForkMergeData)");
			fUML_Tests_TestSimpleActivities_Call_ForkMergeData->setVisibility(VisibilityKind::public_);
				// OutputPin ForkMergeData.output
				fUML_Tests_TestSimpleActivities_Call_ForkMergeData_ForkMergeData_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_ForkMergeData_ForkMergeData_output);
				fUML_Tests_TestSimpleActivities_Call_ForkMergeData_ForkMergeData_output->setName("ForkMergeData.output");
				fUML_Tests_TestSimpleActivities_Call_ForkMergeData_ForkMergeData_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_ForkMergeData_ForkMergeData_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_ForkMergeData->addResult(fUML_Tests_TestSimpleActivities_Call_ForkMergeData_ForkMergeData_output);
			fUML_Tests_TestSimpleActivities_Call_ForkMergeData->setBehavior(fUML_Tests_ForkMergeData);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Call_ForkMergeData);
			// ActivityParameterNode Parameter(CopierCaller.output)
			fUML_Tests_TestSimpleActivities_Parameter_CopierCaller_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_Parameter_CopierCaller_output);
			fUML_Tests_TestSimpleActivities_Parameter_CopierCaller_output->setName("Parameter(CopierCaller.output)");
			fUML_Tests_TestSimpleActivities_Parameter_CopierCaller_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_Parameter_CopierCaller_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Parameter_CopierCaller_output->setParameter(fUML_Tests_TestSimpleActivities_CopierCaller_output);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Parameter_CopierCaller_output);
			// CallBehaviorAction Call(CopierCaller)
			fUML_Tests_TestSimpleActivities_Call_CopierCaller->setThisExecutableNodePtr(fUML_Tests_TestSimpleActivities_Call_CopierCaller);
			fUML_Tests_TestSimpleActivities_Call_CopierCaller->setName("Call(CopierCaller)");
			fUML_Tests_TestSimpleActivities_Call_CopierCaller->setVisibility(VisibilityKind::public_);
				// OutputPin CopierCaller.output
				fUML_Tests_TestSimpleActivities_Call_CopierCaller_CopierCaller_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_CopierCaller_CopierCaller_output);
				fUML_Tests_TestSimpleActivities_Call_CopierCaller_CopierCaller_output->setName("CopierCaller.output");
				fUML_Tests_TestSimpleActivities_Call_CopierCaller_CopierCaller_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_CopierCaller_CopierCaller_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_CopierCaller->addResult(fUML_Tests_TestSimpleActivities_Call_CopierCaller_CopierCaller_output);
			fUML_Tests_TestSimpleActivities_Call_CopierCaller->setBehavior(fUML_Tests_CopierCaller);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Call_CopierCaller);
			// ActivityParameterNode Parameter(SimpleDecision_1.output_0)
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_1_output_0->setThisElementPtr(fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_1_output_0);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_1_output_0->setName("Parameter(SimpleDecision_1.output_0)");
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_1_output_0->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_1_output_0->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_1_output_0->setParameter(fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_1_output_0);
			// ForkNode Fork_0
			fUML_Tests_TestSimpleActivities_Fork_0->setThisElementPtr(fUML_Tests_TestSimpleActivities_Fork_0);
			fUML_Tests_TestSimpleActivities_Fork_0->setName("Fork_0");
			fUML_Tests_TestSimpleActivities_Fork_0->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Fork_0);
			// CallBehaviorAction Call(SimpleDecision_1)
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1->setThisExecutableNodePtr(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1->setName("Call(SimpleDecision_1)");
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1->setVisibility(VisibilityKind::public_);
				// OutputPin SimpleDecision_1.output_0
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_0->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_0);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_0->setName("SimpleDecision_1.output_0");
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_0->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_0->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1->addResult(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_0);
				// OutputPin SimpleDecision_1.output_1
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_1->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_1);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_1->setName("SimpleDecision_1.output_1");
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_1->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1->addResult(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_1);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1->setBehavior(fUML_Tests_SimpleDecision);
				// InputPin SimpleDecision_1.testValue
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_testValue->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_testValue);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_testValue->setName("SimpleDecision_1.testValue");
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_testValue->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_testValue->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1->addArgument(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_testValue);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1);
			// ActivityParameterNode Parameter(SimpleDecision_0.output_0)
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_0->setThisElementPtr(fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_0);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_0->setName("Parameter(SimpleDecision_0.output_0)");
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_0->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_0->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_0->setParameter(fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_0);
			// CallBehaviorAction Call(Copier)
			fUML_Tests_TestSimpleActivities_Call_Copier->setThisExecutableNodePtr(fUML_Tests_TestSimpleActivities_Call_Copier);
			fUML_Tests_TestSimpleActivities_Call_Copier->setName("Call(Copier)");
			fUML_Tests_TestSimpleActivities_Call_Copier->setVisibility(VisibilityKind::public_);
				// OutputPin Copier.output
				fUML_Tests_TestSimpleActivities_Call_Copier_Copier_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_Copier_Copier_output);
				fUML_Tests_TestSimpleActivities_Call_Copier_Copier_output->setName("Copier.output");
				fUML_Tests_TestSimpleActivities_Call_Copier_Copier_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_Copier_Copier_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_Copier->addResult(fUML_Tests_TestSimpleActivities_Call_Copier_Copier_output);
			fUML_Tests_TestSimpleActivities_Call_Copier->setBehavior(fUML_Tests_Copier);
				// InputPin Copier.input
				fUML_Tests_TestSimpleActivities_Call_Copier_Copier_input->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_Copier_Copier_input);
				fUML_Tests_TestSimpleActivities_Call_Copier_Copier_input->setName("Copier.input");
				fUML_Tests_TestSimpleActivities_Call_Copier_Copier_input->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_Copier_Copier_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_Copier->addArgument(fUML_Tests_TestSimpleActivities_Call_Copier_Copier_input);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Call_Copier);
			// CallBehaviorAction Call(ForkMerge)
			fUML_Tests_TestSimpleActivities_Call_ForkMerge->setThisExecutableNodePtr(fUML_Tests_TestSimpleActivities_Call_ForkMerge);
			fUML_Tests_TestSimpleActivities_Call_ForkMerge->setName("Call(ForkMerge)");
			fUML_Tests_TestSimpleActivities_Call_ForkMerge->setVisibility(VisibilityKind::public_);
				// OutputPin ForkMerge.output
				fUML_Tests_TestSimpleActivities_Call_ForkMerge_ForkMerge_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_ForkMerge_ForkMerge_output);
				fUML_Tests_TestSimpleActivities_Call_ForkMerge_ForkMerge_output->setName("ForkMerge.output");
				fUML_Tests_TestSimpleActivities_Call_ForkMerge_ForkMerge_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_ForkMerge_ForkMerge_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_ForkMerge->addResult(fUML_Tests_TestSimpleActivities_Call_ForkMerge_ForkMerge_output);
			fUML_Tests_TestSimpleActivities_Call_ForkMerge->setBehavior(fUML_Tests_ForkMerge);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Call_ForkMerge);
			// ActivityParameterNode Parameter(ForkMerge)
			fUML_Tests_TestSimpleActivities_Parameter_ForkMerge->setThisElementPtr(fUML_Tests_TestSimpleActivities_Parameter_ForkMerge);
			fUML_Tests_TestSimpleActivities_Parameter_ForkMerge->setName("Parameter(ForkMerge)");
			fUML_Tests_TestSimpleActivities_Parameter_ForkMerge->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_Parameter_ForkMerge->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Parameter_ForkMerge->setParameter(fUML_Tests_TestSimpleActivities_ForkMerge);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Parameter_ForkMerge);
			// ControlFlow ControlFlow919 from Call(SimpleDecision_0) to Call(SimpleDecision_1)
			fUML_Tests_TestSimpleActivities_ControlFlow919->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ControlFlow919);
			fUML_Tests_TestSimpleActivities_ControlFlow919->setName("ControlFlow919");
			fUML_Tests_TestSimpleActivities_ControlFlow919->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ControlFlow919->setSource(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0);
			fUML_Tests_TestSimpleActivities_ControlFlow919->setTarget(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ControlFlow919);
			// ObjectFlow ObjectFlow921 from Fork_0 to SimpleDecision_0.testValue
			fUML_Tests_TestSimpleActivities_ObjectFlow921->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow921);
			fUML_Tests_TestSimpleActivities_ObjectFlow921->setName("ObjectFlow921");
			fUML_Tests_TestSimpleActivities_ObjectFlow921->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow921->setSource(fUML_Tests_TestSimpleActivities_Fork_0);
			fUML_Tests_TestSimpleActivities_ObjectFlow921->setTarget(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_testValue);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow921);
			// ObjectFlow ObjectFlow929 from SimpleDecision_1.output_1 to SimpleDecision_1.output_1Node
			fUML_Tests_TestSimpleActivities_ObjectFlow929->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow929);
			fUML_Tests_TestSimpleActivities_ObjectFlow929->setName("ObjectFlow929");
			fUML_Tests_TestSimpleActivities_ObjectFlow929->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow929->setSource(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_1);
			fUML_Tests_TestSimpleActivities_ObjectFlow929->setTarget(fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1Node);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow929);
			// ObjectFlow ObjectFlow949 from SimpleDecision_1.output_0 to Parameter(SimpleDecision_1.output_0)
			fUML_Tests_TestSimpleActivities_ObjectFlow949->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow949);
			fUML_Tests_TestSimpleActivities_ObjectFlow949->setName("ObjectFlow949");
			fUML_Tests_TestSimpleActivities_ObjectFlow949->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow949->setSource(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_0);
			fUML_Tests_TestSimpleActivities_ObjectFlow949->setTarget(fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_1_output_0);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow949);
			// ObjectFlow ObjectFlow931 from SimpleDcision_0.output_1 to Parameter(SimpleDecision_0.output_1)
			fUML_Tests_TestSimpleActivities_ObjectFlow931->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow931);
			fUML_Tests_TestSimpleActivities_ObjectFlow931->setName("ObjectFlow931");
			fUML_Tests_TestSimpleActivities_ObjectFlow931->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow931->setSource(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDcision_0_output_1);
			fUML_Tests_TestSimpleActivities_ObjectFlow931->setTarget(fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_1);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow931);
			// ControlFlow ControlFlow933 from Call(ForkMerge) to Call(ForkMergeData)
			fUML_Tests_TestSimpleActivities_ControlFlow933->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ControlFlow933);
			fUML_Tests_TestSimpleActivities_ControlFlow933->setName("ControlFlow933");
			fUML_Tests_TestSimpleActivities_ControlFlow933->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ControlFlow933->setSource(fUML_Tests_TestSimpleActivities_Call_ForkMerge);
			fUML_Tests_TestSimpleActivities_ControlFlow933->setTarget(fUML_Tests_TestSimpleActivities_Call_ForkMergeData);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ControlFlow933);
			// ObjectFlow ObjectFlow953 from Value(1).result to SimpleDecision_1.testValue
			fUML_Tests_TestSimpleActivities_ObjectFlow953->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow953);
			fUML_Tests_TestSimpleActivities_ObjectFlow953->setName("ObjectFlow953");
			fUML_Tests_TestSimpleActivities_ObjectFlow953->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow953->setSource(fUML_Tests_TestSimpleActivities_Value_1_Value_1_result);
			fUML_Tests_TestSimpleActivities_ObjectFlow953->setTarget(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_testValue);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow953);
			// ObjectFlow ObjectFlow935 from Fork_0 to Copier.input
			fUML_Tests_TestSimpleActivities_ObjectFlow935->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow935);
			fUML_Tests_TestSimpleActivities_ObjectFlow935->setName("ObjectFlow935");
			fUML_Tests_TestSimpleActivities_ObjectFlow935->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow935->setSource(fUML_Tests_TestSimpleActivities_Fork_0);
			fUML_Tests_TestSimpleActivities_ObjectFlow935->setTarget(fUML_Tests_TestSimpleActivities_Call_Copier_Copier_input);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow935);
			// ControlFlow ControlFlow937 from Call(SimpleDecision_1) to Call(ForkJoin)
			fUML_Tests_TestSimpleActivities_ControlFlow937->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ControlFlow937);
			fUML_Tests_TestSimpleActivities_ControlFlow937->setName("ControlFlow937");
			fUML_Tests_TestSimpleActivities_ControlFlow937->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ControlFlow937->setSource(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1);
			fUML_Tests_TestSimpleActivities_ControlFlow937->setTarget(fUML_Tests_TestSimpleActivities_Call_ForkJoin);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ControlFlow937);
			// ControlFlow ControlFlow965 from Call(CopierCaller) to Call(SimpleDecision_0)
			fUML_Tests_TestSimpleActivities_ControlFlow965->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ControlFlow965);
			fUML_Tests_TestSimpleActivities_ControlFlow965->setName("ControlFlow965");
			fUML_Tests_TestSimpleActivities_ControlFlow965->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ControlFlow965->setSource(fUML_Tests_TestSimpleActivities_Call_CopierCaller);
			fUML_Tests_TestSimpleActivities_ControlFlow965->setTarget(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ControlFlow965);
			// ControlFlow ControlFlow967 from Call(DecisionJoin) to Call(ForkMerge)
			fUML_Tests_TestSimpleActivities_ControlFlow967->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ControlFlow967);
			fUML_Tests_TestSimpleActivities_ControlFlow967->setName("ControlFlow967");
			fUML_Tests_TestSimpleActivities_ControlFlow967->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ControlFlow967->setSource(fUML_Tests_TestSimpleActivities_Call_DecisionJoin);
			fUML_Tests_TestSimpleActivities_ControlFlow967->setTarget(fUML_Tests_TestSimpleActivities_Call_ForkMerge);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ControlFlow967);
			// ObjectFlow ObjectFlow969 from Copier.output to Parameter(Copier.output)
			fUML_Tests_TestSimpleActivities_ObjectFlow969->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow969);
			fUML_Tests_TestSimpleActivities_ObjectFlow969->setName("ObjectFlow969");
			fUML_Tests_TestSimpleActivities_ObjectFlow969->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow969->setSource(fUML_Tests_TestSimpleActivities_Call_Copier_Copier_output);
			fUML_Tests_TestSimpleActivities_ObjectFlow969->setTarget(fUML_Tests_TestSimpleActivities_Parameter_Copier_output);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow969);
			// ObjectFlow ObjectFlow927 from ForkMergeData.output to Parameter(ForkMergeData.output)
			fUML_Tests_TestSimpleActivities_ObjectFlow927->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow927);
			fUML_Tests_TestSimpleActivities_ObjectFlow927->setName("ObjectFlow927");
			fUML_Tests_TestSimpleActivities_ObjectFlow927->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow927->setSource(fUML_Tests_TestSimpleActivities_Call_ForkMergeData_ForkMergeData_output);
			fUML_Tests_TestSimpleActivities_ObjectFlow927->setTarget(fUML_Tests_TestSimpleActivities_Parameter_ForkMergeData_output);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow927);
			// ObjectFlow ObjectFlow971 from DecisionJoin.output to Parameter(DecisionJoin.output)
			fUML_Tests_TestSimpleActivities_ObjectFlow971->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow971);
			fUML_Tests_TestSimpleActivities_ObjectFlow971->setName("ObjectFlow971");
			fUML_Tests_TestSimpleActivities_ObjectFlow971->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow971->setSource(fUML_Tests_TestSimpleActivities_Call_DecisionJoin_DecisionJoin_output);
			fUML_Tests_TestSimpleActivities_ObjectFlow971->setTarget(fUML_Tests_TestSimpleActivities_Parameter_DecisionJoin_output);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow971);
			// ObjectFlow ObjectFlow973 from Value(0).result to Fork_0
			fUML_Tests_TestSimpleActivities_ObjectFlow973->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow973);
			fUML_Tests_TestSimpleActivities_ObjectFlow973->setName("ObjectFlow973");
			fUML_Tests_TestSimpleActivities_ObjectFlow973->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow973->setSource(fUML_Tests_TestSimpleActivities_Value_0_Value_0_result);
			fUML_Tests_TestSimpleActivities_ObjectFlow973->setTarget(fUML_Tests_TestSimpleActivities_Fork_0);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow973);
			// ObjectFlow ObjectFlow955 from CopierCaller.output to Parameter(CopierCaller.output)
			fUML_Tests_TestSimpleActivities_ObjectFlow955->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow955);
			fUML_Tests_TestSimpleActivities_ObjectFlow955->setName("ObjectFlow955");
			fUML_Tests_TestSimpleActivities_ObjectFlow955->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow955->setSource(fUML_Tests_TestSimpleActivities_Call_CopierCaller_CopierCaller_output);
			fUML_Tests_TestSimpleActivities_ObjectFlow955->setTarget(fUML_Tests_TestSimpleActivities_Parameter_CopierCaller_output);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow955);
			// ControlFlow ControlFlow957 from Call(Copier) to Call(CopierCaller)
			fUML_Tests_TestSimpleActivities_ControlFlow957->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ControlFlow957);
			fUML_Tests_TestSimpleActivities_ControlFlow957->setName("ControlFlow957");
			fUML_Tests_TestSimpleActivities_ControlFlow957->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ControlFlow957->setSource(fUML_Tests_TestSimpleActivities_Call_Copier);
			fUML_Tests_TestSimpleActivities_ControlFlow957->setTarget(fUML_Tests_TestSimpleActivities_Call_CopierCaller);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ControlFlow957);
			// ControlFlow ControlFlow977 from Call(ForkJoin) to Call(DecisionJoin)
			fUML_Tests_TestSimpleActivities_ControlFlow977->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ControlFlow977);
			fUML_Tests_TestSimpleActivities_ControlFlow977->setName("ControlFlow977");
			fUML_Tests_TestSimpleActivities_ControlFlow977->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ControlFlow977->setSource(fUML_Tests_TestSimpleActivities_Call_ForkJoin);
			fUML_Tests_TestSimpleActivities_ControlFlow977->setTarget(fUML_Tests_TestSimpleActivities_Call_DecisionJoin);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ControlFlow977);
			// ObjectFlow ObjectFlow959 from SimpleDecision_0.output_0 to Parameter(SimpleDecision_0.output_0)
			fUML_Tests_TestSimpleActivities_ObjectFlow959->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow959);
			fUML_Tests_TestSimpleActivities_ObjectFlow959->setName("ObjectFlow959");
			fUML_Tests_TestSimpleActivities_ObjectFlow959->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow959->setSource(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_output_0);
			fUML_Tests_TestSimpleActivities_ObjectFlow959->setTarget(fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_0);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow959);
			// ObjectFlow ObjectFlow979 from ForkMerge.output to Parameter(ForkMerge)
			fUML_Tests_TestSimpleActivities_ObjectFlow979->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow979);
			fUML_Tests_TestSimpleActivities_ObjectFlow979->setName("ObjectFlow979");
			fUML_Tests_TestSimpleActivities_ObjectFlow979->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow979->setSource(fUML_Tests_TestSimpleActivities_Call_ForkMerge_ForkMerge_output);
			fUML_Tests_TestSimpleActivities_ObjectFlow979->setTarget(fUML_Tests_TestSimpleActivities_Parameter_ForkMerge);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow979);
	fUML_Tests->addPackagedElement(fUML_Tests_TestSimpleActivities);
		// Activity TestClassWriterReader
		fUML_Tests_TestClassWriterReader->setThisActivityPtr(fUML_Tests_TestClassWriterReader);
		fUML_Tests_TestClassWriterReader->setName("TestClassWriterReader");
		fUML_Tests_TestClassWriterReader->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestClassWriterReader->isReentrant = false;
			// Parameter x
			fUML_Tests_TestClassWriterReader_x->setThisElementPtr(fUML_Tests_TestClassWriterReader_x);
			fUML_Tests_TestClassWriterReader_x->setName("x");
			fUML_Tests_TestClassWriterReader_x->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassWriterReader_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassWriterReader_x->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassWriterReader->addOwnedParameter(fUML_Tests_TestClassWriterReader_x);
			// AddStructuralFeatureValueAction Write(x)
			fUML_Tests_TestClassWriterReader_Write_x->setThisExecutableNodePtr(fUML_Tests_TestClassWriterReader_Write_x);
			fUML_Tests_TestClassWriterReader_Write_x->setName("Write(x)");
			fUML_Tests_TestClassWriterReader_Write_x->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassWriterReader_Write_x->setStructuralFeature(fUML_Tests_TestClass_x);
				// InputPin Write(x).object
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_object->setThisElementPtr(fUML_Tests_TestClassWriterReader_Write_x_Write_x_object);
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_object->setName("Write(x).object");
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassWriterReader_Write_x->setObject(fUML_Tests_TestClassWriterReader_Write_x_Write_x_object);
				// InputPin Write(x).value
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_value->setThisElementPtr(fUML_Tests_TestClassWriterReader_Write_x_Write_x_value);
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_value->setName("Write(x).value");
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassWriterReader_Write_x->setValue(fUML_Tests_TestClassWriterReader_Write_x_Write_x_value);
				// OutputPin Write(x).result
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_result->setThisElementPtr(fUML_Tests_TestClassWriterReader_Write_x_Write_x_result);
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_result->setName("Write(x).result");
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassWriterReader_Write_x->setResult(fUML_Tests_TestClassWriterReader_Write_x_Write_x_result);
			fUML_Tests_TestClassWriterReader_Write_x->setIsReplaceAll(true);
		fUML_Tests_TestClassWriterReader->addNode(fUML_Tests_TestClassWriterReader_Write_x);
			// CreateObjectAction Create(TestClass)
			fUML_Tests_TestClassWriterReader_Create_TestClass->setThisExecutableNodePtr(fUML_Tests_TestClassWriterReader_Create_TestClass);
			fUML_Tests_TestClassWriterReader_Create_TestClass->setName("Create(TestClass)");
			fUML_Tests_TestClassWriterReader_Create_TestClass->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassWriterReader_Create_TestClass->setClassifier(fUML_Tests_TestClass);
				// OutputPin Create(TestClass).result
				fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result->setThisElementPtr(fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result);
				fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result->setName("Create(TestClass).result");
				fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassWriterReader_Create_TestClass->setResult(fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result);
		fUML_Tests_TestClassWriterReader->addNode(fUML_Tests_TestClassWriterReader_Create_TestClass);
			// ValueSpecificationAction Value(999)
			fUML_Tests_TestClassWriterReader_Value_999->setThisExecutableNodePtr(fUML_Tests_TestClassWriterReader_Value_999);
			fUML_Tests_TestClassWriterReader_Value_999->setName("Value(999)");
			fUML_Tests_TestClassWriterReader_Value_999->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1001
				fUML_Tests_TestClassWriterReader_Value_999_LiteralInteger1001->setThisElementPtr(fUML_Tests_TestClassWriterReader_Value_999_LiteralInteger1001);
				fUML_Tests_TestClassWriterReader_Value_999_LiteralInteger1001->setName("LiteralInteger1001");
				fUML_Tests_TestClassWriterReader_Value_999_LiteralInteger1001->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassWriterReader_Value_999_LiteralInteger1001->setValue(999);
			fUML_Tests_TestClassWriterReader_Value_999->setValue(fUML_Tests_TestClassWriterReader_Value_999_LiteralInteger1001);
				// OutputPin Value(999).result
				fUML_Tests_TestClassWriterReader_Value_999_Value_999_result->setThisElementPtr(fUML_Tests_TestClassWriterReader_Value_999_Value_999_result);
				fUML_Tests_TestClassWriterReader_Value_999_Value_999_result->setName("Value(999).result");
				fUML_Tests_TestClassWriterReader_Value_999_Value_999_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassWriterReader_Value_999_Value_999_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassWriterReader_Value_999->setResult(fUML_Tests_TestClassWriterReader_Value_999_Value_999_result);
		fUML_Tests_TestClassWriterReader->addNode(fUML_Tests_TestClassWriterReader_Value_999);
			// ActivityParameterNode Parameter(x)
			fUML_Tests_TestClassWriterReader_Parameter_x->setThisElementPtr(fUML_Tests_TestClassWriterReader_Parameter_x);
			fUML_Tests_TestClassWriterReader_Parameter_x->setName("Parameter(x)");
			fUML_Tests_TestClassWriterReader_Parameter_x->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassWriterReader_Parameter_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassWriterReader_Parameter_x->setParameter(fUML_Tests_TestClassWriterReader_x);
		fUML_Tests_TestClassWriterReader->addNode(fUML_Tests_TestClassWriterReader_Parameter_x);
			// ReadStructuralFeatureAction Read(x)
			fUML_Tests_TestClassWriterReader_Read_x->setThisExecutableNodePtr(fUML_Tests_TestClassWriterReader_Read_x);
			fUML_Tests_TestClassWriterReader_Read_x->setName("Read(x)");
			fUML_Tests_TestClassWriterReader_Read_x->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassWriterReader_Read_x->setStructuralFeature(fUML_Tests_TestClass_x);
				// InputPin Read(x).object
				fUML_Tests_TestClassWriterReader_Read_x_Read_x_object->setThisElementPtr(fUML_Tests_TestClassWriterReader_Read_x_Read_x_object);
				fUML_Tests_TestClassWriterReader_Read_x_Read_x_object->setName("Read(x).object");
				fUML_Tests_TestClassWriterReader_Read_x_Read_x_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassWriterReader_Read_x_Read_x_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassWriterReader_Read_x->setObject(fUML_Tests_TestClassWriterReader_Read_x_Read_x_object);
				// OutputPin Read(x).result
				fUML_Tests_TestClassWriterReader_Read_x_Read_x_result->setThisElementPtr(fUML_Tests_TestClassWriterReader_Read_x_Read_x_result);
				fUML_Tests_TestClassWriterReader_Read_x_Read_x_result->setName("Read(x).result");
				fUML_Tests_TestClassWriterReader_Read_x_Read_x_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassWriterReader_Read_x_Read_x_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassWriterReader_Read_x->setResult(fUML_Tests_TestClassWriterReader_Read_x_Read_x_result);
		fUML_Tests_TestClassWriterReader->addNode(fUML_Tests_TestClassWriterReader_Read_x);
			// ObjectFlow ObjectFlow981 from Value(999).result to Write(x).value
			fUML_Tests_TestClassWriterReader_ObjectFlow981->setThisActivityEdgePtr(fUML_Tests_TestClassWriterReader_ObjectFlow981);
			fUML_Tests_TestClassWriterReader_ObjectFlow981->setName("ObjectFlow981");
			fUML_Tests_TestClassWriterReader_ObjectFlow981->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassWriterReader_ObjectFlow981->setSource(fUML_Tests_TestClassWriterReader_Value_999_Value_999_result);
			fUML_Tests_TestClassWriterReader_ObjectFlow981->setTarget(fUML_Tests_TestClassWriterReader_Write_x_Write_x_value);
		fUML_Tests_TestClassWriterReader->addEdge(fUML_Tests_TestClassWriterReader_ObjectFlow981);
			// ObjectFlow ObjectFlow989 from Read(x).result to Parameter(x)
			fUML_Tests_TestClassWriterReader_ObjectFlow989->setThisActivityEdgePtr(fUML_Tests_TestClassWriterReader_ObjectFlow989);
			fUML_Tests_TestClassWriterReader_ObjectFlow989->setName("ObjectFlow989");
			fUML_Tests_TestClassWriterReader_ObjectFlow989->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassWriterReader_ObjectFlow989->setSource(fUML_Tests_TestClassWriterReader_Read_x_Read_x_result);
			fUML_Tests_TestClassWriterReader_ObjectFlow989->setTarget(fUML_Tests_TestClassWriterReader_Parameter_x);
		fUML_Tests_TestClassWriterReader->addEdge(fUML_Tests_TestClassWriterReader_ObjectFlow989);
			// ObjectFlow ObjectFlow991 from Write(x).result to Read(x).object
			fUML_Tests_TestClassWriterReader_ObjectFlow991->setThisActivityEdgePtr(fUML_Tests_TestClassWriterReader_ObjectFlow991);
			fUML_Tests_TestClassWriterReader_ObjectFlow991->setName("ObjectFlow991");
			fUML_Tests_TestClassWriterReader_ObjectFlow991->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassWriterReader_ObjectFlow991->setSource(fUML_Tests_TestClassWriterReader_Write_x_Write_x_result);
			fUML_Tests_TestClassWriterReader_ObjectFlow991->setTarget(fUML_Tests_TestClassWriterReader_Read_x_Read_x_object);
		fUML_Tests_TestClassWriterReader->addEdge(fUML_Tests_TestClassWriterReader_ObjectFlow991);
			// ObjectFlow ObjectFlow993 from Create(TestClass).result to Write(x).object
			fUML_Tests_TestClassWriterReader_ObjectFlow993->setThisActivityEdgePtr(fUML_Tests_TestClassWriterReader_ObjectFlow993);
			fUML_Tests_TestClassWriterReader_ObjectFlow993->setName("ObjectFlow993");
			fUML_Tests_TestClassWriterReader_ObjectFlow993->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassWriterReader_ObjectFlow993->setSource(fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result);
			fUML_Tests_TestClassWriterReader_ObjectFlow993->setTarget(fUML_Tests_TestClassWriterReader_Write_x_Write_x_object);
		fUML_Tests_TestClassWriterReader->addEdge(fUML_Tests_TestClassWriterReader_ObjectFlow993);
	fUML_Tests->addPackagedElement(fUML_Tests_TestClassWriterReader);
		// Activity TestIntegerComparisonFunctions
		fUML_Tests_TestIntegerComparisonFunctions->setThisActivityPtr(fUML_Tests_TestIntegerComparisonFunctions);
		fUML_Tests_TestIntegerComparisonFunctions->setName("TestIntegerComparisonFunctions");
		fUML_Tests_TestIntegerComparisonFunctions->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestIntegerComparisonFunctions->isReentrant = false;
			// Parameter LTResult
			fUML_Tests_TestIntegerComparisonFunctions_LTResult->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_LTResult);
			fUML_Tests_TestIntegerComparisonFunctions_LTResult->setName("LTResult");
			fUML_Tests_TestIntegerComparisonFunctions_LTResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_LTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_LTResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerComparisonFunctions->addOwnedParameter(fUML_Tests_TestIntegerComparisonFunctions_LTResult);
			// Parameter LEResult
			fUML_Tests_TestIntegerComparisonFunctions_LEResult->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_LEResult);
			fUML_Tests_TestIntegerComparisonFunctions_LEResult->setName("LEResult");
			fUML_Tests_TestIntegerComparisonFunctions_LEResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_LEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_LEResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerComparisonFunctions->addOwnedParameter(fUML_Tests_TestIntegerComparisonFunctions_LEResult);
			// Parameter GTResult
			fUML_Tests_TestIntegerComparisonFunctions_GTResult->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_GTResult);
			fUML_Tests_TestIntegerComparisonFunctions_GTResult->setName("GTResult");
			fUML_Tests_TestIntegerComparisonFunctions_GTResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_GTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_GTResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerComparisonFunctions->addOwnedParameter(fUML_Tests_TestIntegerComparisonFunctions_GTResult);
			// Parameter GEResult
			fUML_Tests_TestIntegerComparisonFunctions_GEResult->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_GEResult);
			fUML_Tests_TestIntegerComparisonFunctions_GEResult->setName("GEResult");
			fUML_Tests_TestIntegerComparisonFunctions_GEResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_GEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_GEResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerComparisonFunctions->addOwnedParameter(fUML_Tests_TestIntegerComparisonFunctions_GEResult);
			// ValueSpecificationAction Value(3)
			fUML_Tests_TestIntegerComparisonFunctions_Value_3->setThisExecutableNodePtr(fUML_Tests_TestIntegerComparisonFunctions_Value_3);
			fUML_Tests_TestIntegerComparisonFunctions_Value_3->setName("Value(3)");
			fUML_Tests_TestIntegerComparisonFunctions_Value_3->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1006
				fUML_Tests_TestIntegerComparisonFunctions_Value_3_LiteralInteger1006->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Value_3_LiteralInteger1006);
				fUML_Tests_TestIntegerComparisonFunctions_Value_3_LiteralInteger1006->setName("LiteralInteger1006");
				fUML_Tests_TestIntegerComparisonFunctions_Value_3_LiteralInteger1006->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Value_3_LiteralInteger1006->setValue(3);
			fUML_Tests_TestIntegerComparisonFunctions_Value_3->setValue(fUML_Tests_TestIntegerComparisonFunctions_Value_3_LiteralInteger1006);
				// OutputPin Value(3).result
				fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result);
				fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result->setName("Value(3).result");
				fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerComparisonFunctions_Value_3->setResult(fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Value_3);
			// CallBehaviorAction Call(GE)
			fUML_Tests_TestIntegerComparisonFunctions_Call_GE->setThisExecutableNodePtr(fUML_Tests_TestIntegerComparisonFunctions_Call_GE);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GE->setName("Call(GE)");
			fUML_Tests_TestIntegerComparisonFunctions_Call_GE->setVisibility(VisibilityKind::public_);
				// OutputPin GE.result
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result->setName("GE.result");
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GE->addResult(fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GE->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_greaterOrEqual);
				// InputPin GE.x
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x->setName("GE.x");
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GE->addArgument(fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x);
				// InputPin GE.y
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y->setName("GE.y");
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GE->addArgument(fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Call_GE);
			// ActivityParameterNode Param(LEResult)
			fUML_Tests_TestIntegerComparisonFunctions_Param_LEResult->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Param_LEResult);
			fUML_Tests_TestIntegerComparisonFunctions_Param_LEResult->setName("Param(LEResult)");
			fUML_Tests_TestIntegerComparisonFunctions_Param_LEResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerComparisonFunctions_Param_LEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_Param_LEResult->setParameter(fUML_Tests_TestIntegerComparisonFunctions_LEResult);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Param_LEResult);
			// ForkNode Fork(3)
			fUML_Tests_TestIntegerComparisonFunctions_Fork_3->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Fork_3);
			fUML_Tests_TestIntegerComparisonFunctions_Fork_3->setName("Fork(3)");
			fUML_Tests_TestIntegerComparisonFunctions_Fork_3->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Fork_3);
			// CallBehaviorAction Call(LT)
			fUML_Tests_TestIntegerComparisonFunctions_Call_LT->setThisExecutableNodePtr(fUML_Tests_TestIntegerComparisonFunctions_Call_LT);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LT->setName("Call(LT)");
			fUML_Tests_TestIntegerComparisonFunctions_Call_LT->setVisibility(VisibilityKind::public_);
				// OutputPin LT.result
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result->setName("LT.result");
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LT->addResult(fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LT->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_lessThan);
				// InputPin LT.x
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x->setName("LT.x");
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LT->addArgument(fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x);
				// InputPin LT.y
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y->setName("LT.y");
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LT->addArgument(fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Call_LT);
			// ValueSpecificationAction Value(2)
			fUML_Tests_TestIntegerComparisonFunctions_Value_2->setThisExecutableNodePtr(fUML_Tests_TestIntegerComparisonFunctions_Value_2);
			fUML_Tests_TestIntegerComparisonFunctions_Value_2->setName("Value(2)");
			fUML_Tests_TestIntegerComparisonFunctions_Value_2->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1025
				fUML_Tests_TestIntegerComparisonFunctions_Value_2_LiteralInteger1025->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Value_2_LiteralInteger1025);
				fUML_Tests_TestIntegerComparisonFunctions_Value_2_LiteralInteger1025->setName("LiteralInteger1025");
				fUML_Tests_TestIntegerComparisonFunctions_Value_2_LiteralInteger1025->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Value_2_LiteralInteger1025->setValue(2);
			fUML_Tests_TestIntegerComparisonFunctions_Value_2->setValue(fUML_Tests_TestIntegerComparisonFunctions_Value_2_LiteralInteger1025);
				// OutputPin Value(2).result
				fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result);
				fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result->setName("Value(2).result");
				fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerComparisonFunctions_Value_2->setResult(fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Value_2);
			// CallBehaviorAction Call(LE)
			fUML_Tests_TestIntegerComparisonFunctions_Call_LE->setThisExecutableNodePtr(fUML_Tests_TestIntegerComparisonFunctions_Call_LE);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LE->setName("Call(LE)");
			fUML_Tests_TestIntegerComparisonFunctions_Call_LE->setVisibility(VisibilityKind::public_);
				// OutputPin LE.result
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result->setName("LE.result");
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LE->addResult(fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LE->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_lessOrEqual);
				// InputPin LE.x
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x->setName("LE.x");
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LE->addArgument(fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x);
				// InputPin LE.y
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y->setName("LE.y");
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LE->addArgument(fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Call_LE);
			// CallBehaviorAction Call(GT)
			fUML_Tests_TestIntegerComparisonFunctions_Call_GT->setThisExecutableNodePtr(fUML_Tests_TestIntegerComparisonFunctions_Call_GT);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GT->setName("Call(GT)");
			fUML_Tests_TestIntegerComparisonFunctions_Call_GT->setVisibility(VisibilityKind::public_);
				// OutputPin GT.result
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result->setName("GT.result");
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GT->addResult(fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GT->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_greaterThan);
				// InputPin GT.x
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x->setName("GT.x");
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GT->addArgument(fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x);
				// InputPin GT.y
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y->setName("GT.y");
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GT->addArgument(fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Call_GT);
			// ActivityParameterNode Param(GEResult)
			fUML_Tests_TestIntegerComparisonFunctions_Param_GEResult->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Param_GEResult);
			fUML_Tests_TestIntegerComparisonFunctions_Param_GEResult->setName("Param(GEResult)");
			fUML_Tests_TestIntegerComparisonFunctions_Param_GEResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerComparisonFunctions_Param_GEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_Param_GEResult->setParameter(fUML_Tests_TestIntegerComparisonFunctions_GEResult);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Param_GEResult);
			// ForkNode Fork(2)
			fUML_Tests_TestIntegerComparisonFunctions_Fork_2->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Fork_2);
			fUML_Tests_TestIntegerComparisonFunctions_Fork_2->setName("Fork(2)");
			fUML_Tests_TestIntegerComparisonFunctions_Fork_2->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Fork_2);
			// ActivityParameterNode Param(LTResult)
			fUML_Tests_TestIntegerComparisonFunctions_Param_LTResult->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Param_LTResult);
			fUML_Tests_TestIntegerComparisonFunctions_Param_LTResult->setName("Param(LTResult)");
			fUML_Tests_TestIntegerComparisonFunctions_Param_LTResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerComparisonFunctions_Param_LTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_Param_LTResult->setParameter(fUML_Tests_TestIntegerComparisonFunctions_LTResult);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Param_LTResult);
			// ActivityParameterNode Param(GTResult)
			fUML_Tests_TestIntegerComparisonFunctions_Param_GTResult->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Param_GTResult);
			fUML_Tests_TestIntegerComparisonFunctions_Param_GTResult->setName("Param(GTResult)");
			fUML_Tests_TestIntegerComparisonFunctions_Param_GTResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerComparisonFunctions_Param_GTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_Param_GTResult->setParameter(fUML_Tests_TestIntegerComparisonFunctions_GTResult);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Param_GTResult);
			// ControlFlow ControlFlow1015 from Call(LE) to Call(GT)
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1015->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1015);
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1015->setName("ControlFlow1015");
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1015->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1015->setSource(fUML_Tests_TestIntegerComparisonFunctions_Call_LE);
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1015->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_GT);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1015);
			// ObjectFlow ObjectFlow1060 from GT.result to Param(GTResult)
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1060->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1060);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1060->setName("ObjectFlow1060");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1060->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1060->setSource(fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1060->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Param_GTResult);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1060);
			// ObjectFlow ObjectFlow1026 from Fork(3) to LT.x
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1026->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1026);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1026->setName("ObjectFlow1026");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1026->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1026->setSource(fUML_Tests_TestIntegerComparisonFunctions_Fork_3);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1026->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1026);
			// ObjectFlow ObjectFlow1062 from Fork(2) to GE.y
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1062->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1062);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1062->setName("ObjectFlow1062");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1062->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1062->setSource(fUML_Tests_TestIntegerComparisonFunctions_Fork_2);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1062->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1062);
			// ControlFlow ControlFlow1034 from Call(LT) to Call(LE)
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1034->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1034);
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1034->setName("ControlFlow1034");
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1034->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1034->setSource(fUML_Tests_TestIntegerComparisonFunctions_Call_LT);
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1034->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_LE);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1034);
			// ObjectFlow ObjectFlow1064 from LE.result to Param(LEResult)
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1064->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1064);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1064->setName("ObjectFlow1064");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1064->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1064->setSource(fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1064->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Param_LEResult);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1064);
			// ObjectFlow ObjectFlow1036 from Fork(2) to LE.y
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1036->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1036);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1036->setName("ObjectFlow1036");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1036->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1036->setSource(fUML_Tests_TestIntegerComparisonFunctions_Fork_2);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1036->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1036);
			// ObjectFlow ObjectFlow1038 from Fork(3) to GT.x
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1038->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1038);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1038->setName("ObjectFlow1038");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1038->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1038->setSource(fUML_Tests_TestIntegerComparisonFunctions_Fork_3);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1038->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1038);
			// ObjectFlow ObjectFlow1040 from Value(3).result to Fork(3)
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1040->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1040);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1040->setName("ObjectFlow1040");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1040->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1040->setSource(fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1040->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Fork_3);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1040);
			// ObjectFlow ObjectFlow1066 from Fork(2) to LT.y
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1066->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1066);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1066->setName("ObjectFlow1066");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1066->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1066->setSource(fUML_Tests_TestIntegerComparisonFunctions_Fork_2);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1066->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1066);
			// ObjectFlow ObjectFlow1048 from Value(2).result to Fork(2)
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1048->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1048);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1048->setName("ObjectFlow1048");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1048->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1048->setSource(fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1048->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Fork_2);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1048);
			// ObjectFlow ObjectFlow1050 from GE.result to Param(GEResult)
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1050->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1050);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1050->setName("ObjectFlow1050");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1050->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1050->setSource(fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1050->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Param_GEResult);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1050);
			// ObjectFlow ObjectFlow1052 from Fork(2) to GT.y
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1052->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1052);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1052->setName("ObjectFlow1052");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1052->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1052->setSource(fUML_Tests_TestIntegerComparisonFunctions_Fork_2);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1052->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1052);
			// ObjectFlow ObjectFlow1068 from Fork(3) to GE.x
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1068->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1068);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1068->setName("ObjectFlow1068");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1068->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1068->setSource(fUML_Tests_TestIntegerComparisonFunctions_Fork_3);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1068->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1068);
			// ObjectFlow ObjectFlow1054 from LT.result to Param(LTResult)
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1054->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1054);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1054->setName("ObjectFlow1054");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1054->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1054->setSource(fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1054->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Param_LTResult);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1054);
			// ObjectFlow ObjectFlow1056 from Fork(3) to LE.x
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1056->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1056);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1056->setName("ObjectFlow1056");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1056->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1056->setSource(fUML_Tests_TestIntegerComparisonFunctions_Fork_3);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1056->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1056);
			// ControlFlow ControlFlow1058 from Call(GT) to Call(GE)
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1058->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1058);
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1058->setName("ControlFlow1058");
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1058->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1058->setSource(fUML_Tests_TestIntegerComparisonFunctions_Call_GT);
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1058->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_GE);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1058);
	fUML_Tests->addPackagedElement(fUML_Tests_TestIntegerComparisonFunctions);
		// Activity TestListFunctions
		fUML_Tests_TestListFunctions->setThisActivityPtr(fUML_Tests_TestListFunctions);
		fUML_Tests_TestListFunctions->setName("TestListFunctions");
		fUML_Tests_TestListFunctions->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestListFunctions->isReentrant = false;
			// Parameter size
			fUML_Tests_TestListFunctions_size->setThisElementPtr(fUML_Tests_TestListFunctions_size);
			fUML_Tests_TestListFunctions_size->setName("size");
			fUML_Tests_TestListFunctions_size->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_size->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestListFunctions_size->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestListFunctions->addOwnedParameter(fUML_Tests_TestListFunctions_size);
			// Parameter element
			fUML_Tests_TestListFunctions_element->setThisElementPtr(fUML_Tests_TestListFunctions_element);
			fUML_Tests_TestListFunctions_element->setName("element");
			fUML_Tests_TestListFunctions_element->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_element->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestListFunctions_element->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestListFunctions->addOwnedParameter(fUML_Tests_TestListFunctions_element);
			// Parameter concat
			fUML_Tests_TestListFunctions_concat->setThisElementPtr(fUML_Tests_TestListFunctions_concat);
			fUML_Tests_TestListFunctions_concat->setName("concat");
			fUML_Tests_TestListFunctions_concat->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestListFunctions_concat->setIsOrdered(true);
			fUML_Tests_TestListFunctions_concat->setIsUnique(false);
			fUML_Tests_TestListFunctions_concat->setUpper(-1);
			fUML_Tests_TestListFunctions_concat->setLower(0);
			fUML_Tests_TestListFunctions_concat->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestListFunctions_concat->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestListFunctions->addOwnedParameter(fUML_Tests_TestListFunctions_concat);
			// CallBehaviorAction Call(ListSize)
			fUML_Tests_TestListFunctions_Call_ListSize->setThisExecutableNodePtr(fUML_Tests_TestListFunctions_Call_ListSize);
			fUML_Tests_TestListFunctions_Call_ListSize->setName("Call(ListSize)");
			fUML_Tests_TestListFunctions_Call_ListSize->setVisibility(VisibilityKind::public_);
				// OutputPin ListSize.result
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result->setThisElementPtr(fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result);
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result->setName("ListSize.result");
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestListFunctions_Call_ListSize->addResult(fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result);
			fUML_Tests_TestListFunctions_Call_ListSize->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_ListFunctions_ListSize);
				// InputPin ListSize.list
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list->setThisElementPtr(fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list);
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list->setName("ListSize.list");
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list->setVisibility(VisibilityKind::public_);
				
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list->setUpper(-1);
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list->setLower(0);
			fUML_Tests_TestListFunctions_Call_ListSize->addArgument(fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list);
		fUML_Tests_TestListFunctions->addNode(fUML_Tests_TestListFunctions_Call_ListSize);
			// ActivityParameterNode concatNode
			fUML_Tests_TestListFunctions_concatNode->setThisElementPtr(fUML_Tests_TestListFunctions_concatNode);
			fUML_Tests_TestListFunctions_concatNode->setName("concatNode");
			fUML_Tests_TestListFunctions_concatNode->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestListFunctions_concatNode->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestListFunctions_concatNode->setParameter(fUML_Tests_TestListFunctions_concat);
		fUML_Tests_TestListFunctions->addNode(fUML_Tests_TestListFunctions_concatNode);
			// ActivityParameterNode Param(element)
			fUML_Tests_TestListFunctions_Param_element->setThisElementPtr(fUML_Tests_TestListFunctions_Param_element);
			fUML_Tests_TestListFunctions_Param_element->setName("Param(element)");
			fUML_Tests_TestListFunctions_Param_element->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestListFunctions_Param_element->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestListFunctions_Param_element->setParameter(fUML_Tests_TestListFunctions_element);
		fUML_Tests_TestListFunctions->addNode(fUML_Tests_TestListFunctions_Param_element);
			// ActivityParameterNode Param(size)
			fUML_Tests_TestListFunctions_Param_size->setThisElementPtr(fUML_Tests_TestListFunctions_Param_size);
			fUML_Tests_TestListFunctions_Param_size->setName("Param(size)");
			fUML_Tests_TestListFunctions_Param_size->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestListFunctions_Param_size->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestListFunctions_Param_size->setParameter(fUML_Tests_TestListFunctions_size);
		fUML_Tests_TestListFunctions->addNode(fUML_Tests_TestListFunctions_Param_size);
			// CallBehaviorAction Call(ListGet)
			fUML_Tests_TestListFunctions_Call_ListGet->setThisExecutableNodePtr(fUML_Tests_TestListFunctions_Call_ListGet);
			fUML_Tests_TestListFunctions_Call_ListGet->setName("Call(ListGet)");
			fUML_Tests_TestListFunctions_Call_ListGet->setVisibility(VisibilityKind::public_);
				// OutputPin ListGet.result
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result->setThisElementPtr(fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result);
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result->setName("ListGet.result");
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestListFunctions_Call_ListGet->addResult(fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result);
			fUML_Tests_TestListFunctions_Call_ListGet->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_ListFunctions_ListGet);
				// InputPin ListGet.list
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list->setThisElementPtr(fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list);
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list->setName("ListGet.list");
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list->setVisibility(VisibilityKind::public_);
				
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list->setUpper(-1);
			fUML_Tests_TestListFunctions_Call_ListGet->addArgument(fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list);
				// InputPin ListGet.index
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index->setThisElementPtr(fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index);
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index->setName("ListGet.index");
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestListFunctions_Call_ListGet->addArgument(fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index);
		fUML_Tests_TestListFunctions->addNode(fUML_Tests_TestListFunctions_Call_ListGet);
			// CallBehaviorAction Call(ListConcat)
			fUML_Tests_TestListFunctions_Call_ListConcat->setThisExecutableNodePtr(fUML_Tests_TestListFunctions_Call_ListConcat);
			fUML_Tests_TestListFunctions_Call_ListConcat->setName("Call(ListConcat)");
			fUML_Tests_TestListFunctions_Call_ListConcat->setVisibility(VisibilityKind::public_);
				// OutputPin ListConcat.result
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result->setThisElementPtr(fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result->setName("ListConcat.result");
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result->setUpper(-1);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result->setLower(0);
			fUML_Tests_TestListFunctions_Call_ListConcat->addResult(fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result);
			fUML_Tests_TestListFunctions_Call_ListConcat->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_ListFunctions_ListConcat);
				// InputPin ListConcat.list1
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1->setThisElementPtr(fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1->setName("ListConcat.list1");
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1->setUpper(-1);
			fUML_Tests_TestListFunctions_Call_ListConcat->addArgument(fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1);
				// InputPin ListConcat.list2
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2->setThisElementPtr(fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2->setName("ListConcat.list2");
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2->setUpper(-1);
			fUML_Tests_TestListFunctions_Call_ListConcat->addArgument(fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2);
		fUML_Tests_TestListFunctions->addNode(fUML_Tests_TestListFunctions_Call_ListConcat);
			// ValueSpecificationAction Value(index)
			fUML_Tests_TestListFunctions_Value_index->setThisExecutableNodePtr(fUML_Tests_TestListFunctions_Value_index);
			fUML_Tests_TestListFunctions_Value_index->setName("Value(index)");
			fUML_Tests_TestListFunctions_Value_index->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1108
				fUML_Tests_TestListFunctions_Value_index_LiteralInteger1108->setThisElementPtr(fUML_Tests_TestListFunctions_Value_index_LiteralInteger1108);
				fUML_Tests_TestListFunctions_Value_index_LiteralInteger1108->setName("LiteralInteger1108");
				fUML_Tests_TestListFunctions_Value_index_LiteralInteger1108->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestListFunctions_Value_index_LiteralInteger1108->setValue(2);
			fUML_Tests_TestListFunctions_Value_index->setValue(fUML_Tests_TestListFunctions_Value_index_LiteralInteger1108);
				// OutputPin Value(index).result
				fUML_Tests_TestListFunctions_Value_index_Value_index_result->setThisElementPtr(fUML_Tests_TestListFunctions_Value_index_Value_index_result);
				fUML_Tests_TestListFunctions_Value_index_Value_index_result->setName("Value(index).result");
				fUML_Tests_TestListFunctions_Value_index_Value_index_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestListFunctions_Value_index_Value_index_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestListFunctions_Value_index->setResult(fUML_Tests_TestListFunctions_Value_index_Value_index_result);
		fUML_Tests_TestListFunctions->addNode(fUML_Tests_TestListFunctions_Value_index);
			// ForkNode Fork
			fUML_Tests_TestListFunctions_Fork->setThisElementPtr(fUML_Tests_TestListFunctions_Fork);
			fUML_Tests_TestListFunctions_Fork->setName("Fork");
			fUML_Tests_TestListFunctions_Fork->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestListFunctions->addNode(fUML_Tests_TestListFunctions_Fork);
			// CallBehaviorAction Call(GenerateListTestData)
			fUML_Tests_TestListFunctions_Call_GenerateListTestData->setThisExecutableNodePtr(fUML_Tests_TestListFunctions_Call_GenerateListTestData);
			fUML_Tests_TestListFunctions_Call_GenerateListTestData->setName("Call(GenerateListTestData)");
			fUML_Tests_TestListFunctions_Call_GenerateListTestData->setVisibility(VisibilityKind::public_);
				// OutputPin GenData.list
				fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list->setThisElementPtr(fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list);
				fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list->setName("GenData.list");
				fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list->setUpper(-1);
			fUML_Tests_TestListFunctions_Call_GenerateListTestData->addResult(fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list);
			fUML_Tests_TestListFunctions_Call_GenerateListTestData->setBehavior(fUML_Tests_GenerateListTestData);
		fUML_Tests_TestListFunctions->addNode(fUML_Tests_TestListFunctions_Call_GenerateListTestData);
			// ObjectFlow ObjectFlow1070 from Value(index).result to ListGet.index
			fUML_Tests_TestListFunctions_ObjectFlow1070->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ObjectFlow1070);
			fUML_Tests_TestListFunctions_ObjectFlow1070->setName("ObjectFlow1070");
			fUML_Tests_TestListFunctions_ObjectFlow1070->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ObjectFlow1070->setSource(fUML_Tests_TestListFunctions_Value_index_Value_index_result);
			fUML_Tests_TestListFunctions_ObjectFlow1070->setTarget(fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ObjectFlow1070);
			// ControlFlow ControlFlow1072 from Call(ListSize) to Call(ListGet)
			fUML_Tests_TestListFunctions_ControlFlow1072->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ControlFlow1072);
			fUML_Tests_TestListFunctions_ControlFlow1072->setName("ControlFlow1072");
			fUML_Tests_TestListFunctions_ControlFlow1072->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ControlFlow1072->setSource(fUML_Tests_TestListFunctions_Call_ListSize);
			fUML_Tests_TestListFunctions_ControlFlow1072->setTarget(fUML_Tests_TestListFunctions_Call_ListGet);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ControlFlow1072);
			// ObjectFlow ObjectFlow1094 from Fork to ListConcat.list1
			fUML_Tests_TestListFunctions_ObjectFlow1094->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ObjectFlow1094);
			fUML_Tests_TestListFunctions_ObjectFlow1094->setName("ObjectFlow1094");
			fUML_Tests_TestListFunctions_ObjectFlow1094->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ObjectFlow1094->setSource(fUML_Tests_TestListFunctions_Fork);
			fUML_Tests_TestListFunctions_ObjectFlow1094->setTarget(fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ObjectFlow1094);
			// ObjectFlow ObjectFlow1096 from ListConcat.result to concatNode
			fUML_Tests_TestListFunctions_ObjectFlow1096->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ObjectFlow1096);
			fUML_Tests_TestListFunctions_ObjectFlow1096->setName("ObjectFlow1096");
			fUML_Tests_TestListFunctions_ObjectFlow1096->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ObjectFlow1096->setSource(fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result);
			fUML_Tests_TestListFunctions_ObjectFlow1096->setTarget(fUML_Tests_TestListFunctions_concatNode);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ObjectFlow1096);
			// ObjectFlow ObjectFlow1074 from Fork to ListGet.list
			fUML_Tests_TestListFunctions_ObjectFlow1074->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ObjectFlow1074);
			fUML_Tests_TestListFunctions_ObjectFlow1074->setName("ObjectFlow1074");
			fUML_Tests_TestListFunctions_ObjectFlow1074->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ObjectFlow1074->setSource(fUML_Tests_TestListFunctions_Fork);
			fUML_Tests_TestListFunctions_ObjectFlow1074->setTarget(fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ObjectFlow1074);
			// ObjectFlow ObjectFlow1098 from GenData.list to Fork
			fUML_Tests_TestListFunctions_ObjectFlow1098->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ObjectFlow1098);
			fUML_Tests_TestListFunctions_ObjectFlow1098->setName("ObjectFlow1098");
			fUML_Tests_TestListFunctions_ObjectFlow1098->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ObjectFlow1098->setSource(fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list);
			fUML_Tests_TestListFunctions_ObjectFlow1098->setTarget(fUML_Tests_TestListFunctions_Fork);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ObjectFlow1098);
			// ControlFlow ControlFlow1100 from Call(ListGet) to Call(ListConcat)
			fUML_Tests_TestListFunctions_ControlFlow1100->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ControlFlow1100);
			fUML_Tests_TestListFunctions_ControlFlow1100->setName("ControlFlow1100");
			fUML_Tests_TestListFunctions_ControlFlow1100->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ControlFlow1100->setSource(fUML_Tests_TestListFunctions_Call_ListGet);
			fUML_Tests_TestListFunctions_ControlFlow1100->setTarget(fUML_Tests_TestListFunctions_Call_ListConcat);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ControlFlow1100);
			// ObjectFlow ObjectFlow1102 from ListGet.result to Param(element)
			fUML_Tests_TestListFunctions_ObjectFlow1102->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ObjectFlow1102);
			fUML_Tests_TestListFunctions_ObjectFlow1102->setName("ObjectFlow1102");
			fUML_Tests_TestListFunctions_ObjectFlow1102->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ObjectFlow1102->setSource(fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result);
			fUML_Tests_TestListFunctions_ObjectFlow1102->setTarget(fUML_Tests_TestListFunctions_Param_element);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ObjectFlow1102);
			// ObjectFlow ObjectFlow1076 from ListSize.result to Param(size)
			fUML_Tests_TestListFunctions_ObjectFlow1076->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ObjectFlow1076);
			fUML_Tests_TestListFunctions_ObjectFlow1076->setName("ObjectFlow1076");
			fUML_Tests_TestListFunctions_ObjectFlow1076->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ObjectFlow1076->setSource(fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result);
			fUML_Tests_TestListFunctions_ObjectFlow1076->setTarget(fUML_Tests_TestListFunctions_Param_size);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ObjectFlow1076);
			// ObjectFlow ObjectFlow1104 from Fork to ListSize.list
			fUML_Tests_TestListFunctions_ObjectFlow1104->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ObjectFlow1104);
			fUML_Tests_TestListFunctions_ObjectFlow1104->setName("ObjectFlow1104");
			fUML_Tests_TestListFunctions_ObjectFlow1104->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ObjectFlow1104->setSource(fUML_Tests_TestListFunctions_Fork);
			fUML_Tests_TestListFunctions_ObjectFlow1104->setTarget(fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ObjectFlow1104);
			// ObjectFlow ObjectFlow1115 from Fork to ListConcat.list2
			fUML_Tests_TestListFunctions_ObjectFlow1115->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ObjectFlow1115);
			fUML_Tests_TestListFunctions_ObjectFlow1115->setName("ObjectFlow1115");
			fUML_Tests_TestListFunctions_ObjectFlow1115->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ObjectFlow1115->setSource(fUML_Tests_TestListFunctions_Fork);
			fUML_Tests_TestListFunctions_ObjectFlow1115->setTarget(fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ObjectFlow1115);
	fUML_Tests->addPackagedElement(fUML_Tests_TestListFunctions);
		// SignalEvent SignalEvent1119
		fUML_Tests_SignalEvent1119->setThisElementPtr(fUML_Tests_SignalEvent1119);
		fUML_Tests_SignalEvent1119->setName("SignalEvent1119");
		fUML_Tests_SignalEvent1119->setVisibility(VisibilityKind::public_);
		fUML_Tests_SignalEvent1119->setSignal(fUML_Tests_OtherSignal);
	fUML_Tests->addPackagedElement(fUML_Tests_SignalEvent1119);
		// Activity TestClassObjectDestroyer
		fUML_Tests_TestClassObjectDestroyer->setThisActivityPtr(fUML_Tests_TestClassObjectDestroyer);
		fUML_Tests_TestClassObjectDestroyer->setName("TestClassObjectDestroyer");
		fUML_Tests_TestClassObjectDestroyer->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestClassObjectDestroyer->isReentrant = false;
			// Parameter objectIn
			fUML_Tests_TestClassObjectDestroyer_objectIn->setThisElementPtr(fUML_Tests_TestClassObjectDestroyer_objectIn);
			fUML_Tests_TestClassObjectDestroyer_objectIn->setName("objectIn");
			fUML_Tests_TestClassObjectDestroyer_objectIn->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassObjectDestroyer_objectIn->setType(fUML_Tests_TestClass);
		fUML_Tests_TestClassObjectDestroyer->addOwnedParameter(fUML_Tests_TestClassObjectDestroyer_objectIn);
			// Parameter objectOut
			fUML_Tests_TestClassObjectDestroyer_objectOut->setThisElementPtr(fUML_Tests_TestClassObjectDestroyer_objectOut);
			fUML_Tests_TestClassObjectDestroyer_objectOut->setName("objectOut");
			fUML_Tests_TestClassObjectDestroyer_objectOut->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassObjectDestroyer_objectOut->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassObjectDestroyer_objectOut->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassObjectDestroyer->addOwnedParameter(fUML_Tests_TestClassObjectDestroyer_objectOut);
			// ActivityParameterNode Parameter(objectIn)
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectIn->setThisElementPtr(fUML_Tests_TestClassObjectDestroyer_Parameter_objectIn);
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectIn->setName("Parameter(objectIn)");
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectIn->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectIn->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectIn->setParameter(fUML_Tests_TestClassObjectDestroyer_objectIn);
		fUML_Tests_TestClassObjectDestroyer->addNode(fUML_Tests_TestClassObjectDestroyer_Parameter_objectIn);
			// DestroyObjectAction DestroyObject
			fUML_Tests_TestClassObjectDestroyer_DestroyObject->setThisExecutableNodePtr(fUML_Tests_TestClassObjectDestroyer_DestroyObject);
			fUML_Tests_TestClassObjectDestroyer_DestroyObject->setName("DestroyObject");
			fUML_Tests_TestClassObjectDestroyer_DestroyObject->setVisibility(VisibilityKind::public_);
				// InputPin DestroyObject.target
				fUML_Tests_TestClassObjectDestroyer_DestroyObject_DestroyObject_target->setThisElementPtr(fUML_Tests_TestClassObjectDestroyer_DestroyObject_DestroyObject_target);
				fUML_Tests_TestClassObjectDestroyer_DestroyObject_DestroyObject_target->setName("DestroyObject.target");
				fUML_Tests_TestClassObjectDestroyer_DestroyObject_DestroyObject_target->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassObjectDestroyer_DestroyObject->setTarget(fUML_Tests_TestClassObjectDestroyer_DestroyObject_DestroyObject_target);
		fUML_Tests_TestClassObjectDestroyer->addNode(fUML_Tests_TestClassObjectDestroyer_DestroyObject);
			// ForkNode Fork
			fUML_Tests_TestClassObjectDestroyer_Fork->setThisElementPtr(fUML_Tests_TestClassObjectDestroyer_Fork);
			fUML_Tests_TestClassObjectDestroyer_Fork->setName("Fork");
			fUML_Tests_TestClassObjectDestroyer_Fork->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestClassObjectDestroyer->addNode(fUML_Tests_TestClassObjectDestroyer_Fork);
			// ActivityParameterNode Parameter(objectOut)
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectOut->setThisElementPtr(fUML_Tests_TestClassObjectDestroyer_Parameter_objectOut);
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectOut->setName("Parameter(objectOut)");
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectOut->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectOut->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectOut->setParameter(fUML_Tests_TestClassObjectDestroyer_objectOut);
		fUML_Tests_TestClassObjectDestroyer->addNode(fUML_Tests_TestClassObjectDestroyer_Parameter_objectOut);
			// ObjectFlow ObjectFlow1122 from Fork to DestroyObject.target
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1122->setThisActivityEdgePtr(fUML_Tests_TestClassObjectDestroyer_ObjectFlow1122);
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1122->setName("ObjectFlow1122");
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1122->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1122->setSource(fUML_Tests_TestClassObjectDestroyer_Fork);
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1122->setTarget(fUML_Tests_TestClassObjectDestroyer_DestroyObject_DestroyObject_target);
		fUML_Tests_TestClassObjectDestroyer->addEdge(fUML_Tests_TestClassObjectDestroyer_ObjectFlow1122);
			// ObjectFlow ObjectFlow1124 from Fork to Parameter(objectOut)
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1124->setThisActivityEdgePtr(fUML_Tests_TestClassObjectDestroyer_ObjectFlow1124);
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1124->setName("ObjectFlow1124");
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1124->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1124->setSource(fUML_Tests_TestClassObjectDestroyer_Fork);
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1124->setTarget(fUML_Tests_TestClassObjectDestroyer_Parameter_objectOut);
		fUML_Tests_TestClassObjectDestroyer->addEdge(fUML_Tests_TestClassObjectDestroyer_ObjectFlow1124);
			// ObjectFlow ObjectFlow1128 from Parameter(objectIn) to Fork
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1128->setThisActivityEdgePtr(fUML_Tests_TestClassObjectDestroyer_ObjectFlow1128);
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1128->setName("ObjectFlow1128");
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1128->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1128->setSource(fUML_Tests_TestClassObjectDestroyer_Parameter_objectIn);
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow1128->setTarget(fUML_Tests_TestClassObjectDestroyer_Fork);
		fUML_Tests_TestClassObjectDestroyer->addEdge(fUML_Tests_TestClassObjectDestroyer_ObjectFlow1128);
	fUML_Tests->addPackagedElement(fUML_Tests_TestClassObjectDestroyer);
		// Class Subclass1
		fUML_Tests_Subclass1->setThisClass_Ptr(fUML_Tests_Subclass1);
		fUML_Tests_Subclass1->setName("Subclass1");
		fUML_Tests_Subclass1->setVisibility(VisibilityKind::public_);
		
			// Generalization to TestClass
			fUML_Tests_Subclass1_Generalization1130->setThisElementPtr(fUML_Tests_Subclass1_Generalization1130);
			fUML_Tests_Subclass1_Generalization1130->setGeneral(fUML_Tests_TestClass);
		fUML_Tests_Subclass1->addGeneralization(fUML_Tests_Subclass1_Generalization1130);
			// Property a
			fUML_Tests_Subclass1_a->setThisElementPtr(fUML_Tests_Subclass1_a);
			fUML_Tests_Subclass1_a->setName("a");
			fUML_Tests_Subclass1_a->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_Subclass1_a->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
		fUML_Tests_Subclass1->addOwnedAttribute(fUML_Tests_Subclass1_a);
	fUML_Tests->addPackagedElement(fUML_Tests_Subclass1);
		// CallEvent CallEvent1131
		fUML_Tests_CallEvent1131->setThisElementPtr(fUML_Tests_CallEvent1131);
		fUML_Tests_CallEvent1131->setName("CallEvent1131");
		fUML_Tests_CallEvent1131->setVisibility(VisibilityKind::public_);
		fUML_Tests_CallEvent1131->setOperation(fUML_Tests_TestCallAccepter_test);
	fUML_Tests->addPackagedElement(fUML_Tests_CallEvent1131);
		// Class TestClass
		fUML_Tests_TestClass->setThisClass_Ptr(fUML_Tests_TestClass);
		fUML_Tests_TestClass->setName("TestClass");
		fUML_Tests_TestClass->setVisibility(VisibilityKind::public_);
		
			// Property x
			fUML_Tests_TestClass_x->setThisElementPtr(fUML_Tests_TestClass_x);
			fUML_Tests_TestClass_x->setName("x");
			fUML_Tests_TestClass_x->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClass_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
		fUML_Tests_TestClass->addOwnedAttribute(fUML_Tests_TestClass_x);
			// Property y
			fUML_Tests_TestClass_y->setThisElementPtr(fUML_Tests_TestClass_y);
			fUML_Tests_TestClass_y->setName("y");
			fUML_Tests_TestClass_y->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClass_y->setIsOrdered(true);
			fUML_Tests_TestClass_y->setIsUnique(false);
			fUML_Tests_TestClass_y->setUpper(-1);
			fUML_Tests_TestClass_y->setLower(0);
			fUML_Tests_TestClass_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
		fUML_Tests_TestClass->addOwnedAttribute(fUML_Tests_TestClass_y);
	fUML_Tests->addPackagedElement(fUML_Tests_TestClass);
		// Activity Copier
		fUML_Tests_Copier->setThisActivityPtr(fUML_Tests_Copier);
		fUML_Tests_Copier->setName("Copier");
		fUML_Tests_Copier->setVisibility(VisibilityKind::public_);
		fUML_Tests_Copier->isReentrant = false;
			// Parameter input
			fUML_Tests_Copier_input->setThisElementPtr(fUML_Tests_Copier_input);
			fUML_Tests_Copier_input->setName("input");
			fUML_Tests_Copier_input->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_Copier_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
		fUML_Tests_Copier->addOwnedParameter(fUML_Tests_Copier_input);
			// Parameter output
			fUML_Tests_Copier_output->setThisElementPtr(fUML_Tests_Copier_output);
			fUML_Tests_Copier_output->setName("output");
			fUML_Tests_Copier_output->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_Copier_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_Copier_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_Copier->addOwnedParameter(fUML_Tests_Copier_output);
			// ActivityParameterNode Parameter(output)
			fUML_Tests_Copier_Parameter_output->setThisElementPtr(fUML_Tests_Copier_Parameter_output);
			fUML_Tests_Copier_Parameter_output->setName("Parameter(output)");
			fUML_Tests_Copier_Parameter_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_Copier_Parameter_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_Copier_Parameter_output->setParameter(fUML_Tests_Copier_output);
		fUML_Tests_Copier->addNode(fUML_Tests_Copier_Parameter_output);
			// ActivityParameterNode Parameter(input)
			fUML_Tests_Copier_Parameter_input->setThisElementPtr(fUML_Tests_Copier_Parameter_input);
			fUML_Tests_Copier_Parameter_input->setName("Parameter(input)");
			fUML_Tests_Copier_Parameter_input->setVisibility(VisibilityKind::public_);
			fUML_Tests_Copier_Parameter_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_Copier_Parameter_input->setParameter(fUML_Tests_Copier_input);
		fUML_Tests_Copier->addNode(fUML_Tests_Copier_Parameter_input);
			// ObjectFlow ObjectFlow1140 from Parameter(input) to Parameter(output)
			fUML_Tests_Copier_ObjectFlow1140->setThisActivityEdgePtr(fUML_Tests_Copier_ObjectFlow1140);
			fUML_Tests_Copier_ObjectFlow1140->setName("ObjectFlow1140");
			fUML_Tests_Copier_ObjectFlow1140->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_Copier_ObjectFlow1140->setSource(fUML_Tests_Copier_Parameter_input);
			fUML_Tests_Copier_ObjectFlow1140->setTarget(fUML_Tests_Copier_Parameter_output);
		fUML_Tests_Copier->addEdge(fUML_Tests_Copier_ObjectFlow1140);
	fUML_Tests->addPackagedElement(fUML_Tests_Copier);
		// Activity ForkJoin
		fUML_Tests_ForkJoin->setThisActivityPtr(fUML_Tests_ForkJoin);
		fUML_Tests_ForkJoin->setName("ForkJoin");
		fUML_Tests_ForkJoin->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkJoin->isReentrant = false;
			// JoinNode JoinNode
			fUML_Tests_ForkJoin_JoinNode->setThisElementPtr(fUML_Tests_ForkJoin_JoinNode);
			fUML_Tests_ForkJoin_JoinNode->setName("JoinNode");
			fUML_Tests_ForkJoin_JoinNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkJoin->addNode(fUML_Tests_ForkJoin_JoinNode);
			// ActivityFinalNode FinalNode
			fUML_Tests_ForkJoin_FinalNode->setThisElementPtr(fUML_Tests_ForkJoin_FinalNode);
			fUML_Tests_ForkJoin_FinalNode->setName("FinalNode");
			fUML_Tests_ForkJoin_FinalNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkJoin->addNode(fUML_Tests_ForkJoin_FinalNode);
			// ForkNode ForkNode
			fUML_Tests_ForkJoin_ForkNode->setThisElementPtr(fUML_Tests_ForkJoin_ForkNode);
			fUML_Tests_ForkJoin_ForkNode->setName("ForkNode");
			fUML_Tests_ForkJoin_ForkNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkJoin->addNode(fUML_Tests_ForkJoin_ForkNode);
			// InitialNode InitialNode
			fUML_Tests_ForkJoin_InitialNode->setThisElementPtr(fUML_Tests_ForkJoin_InitialNode);
			fUML_Tests_ForkJoin_InitialNode->setName("InitialNode");
			fUML_Tests_ForkJoin_InitialNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkJoin->addNode(fUML_Tests_ForkJoin_InitialNode);
			// ControlFlow ControlFlow1142 from JoinNode to FinalNode
			fUML_Tests_ForkJoin_ControlFlow1142->setThisActivityEdgePtr(fUML_Tests_ForkJoin_ControlFlow1142);
			fUML_Tests_ForkJoin_ControlFlow1142->setName("ControlFlow1142");
			fUML_Tests_ForkJoin_ControlFlow1142->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkJoin_ControlFlow1142->setSource(fUML_Tests_ForkJoin_JoinNode);
			fUML_Tests_ForkJoin_ControlFlow1142->setTarget(fUML_Tests_ForkJoin_FinalNode);
		fUML_Tests_ForkJoin->addEdge(fUML_Tests_ForkJoin_ControlFlow1142);
			// ControlFlow ControlFlow1144 from InitialNode to ForkNode
			fUML_Tests_ForkJoin_ControlFlow1144->setThisActivityEdgePtr(fUML_Tests_ForkJoin_ControlFlow1144);
			fUML_Tests_ForkJoin_ControlFlow1144->setName("ControlFlow1144");
			fUML_Tests_ForkJoin_ControlFlow1144->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkJoin_ControlFlow1144->setSource(fUML_Tests_ForkJoin_InitialNode);
			fUML_Tests_ForkJoin_ControlFlow1144->setTarget(fUML_Tests_ForkJoin_ForkNode);
		fUML_Tests_ForkJoin->addEdge(fUML_Tests_ForkJoin_ControlFlow1144);
			// ControlFlow ControlFlow1146 from ForkNode to JoinNode
			fUML_Tests_ForkJoin_ControlFlow1146->setThisActivityEdgePtr(fUML_Tests_ForkJoin_ControlFlow1146);
			fUML_Tests_ForkJoin_ControlFlow1146->setName("ControlFlow1146");
			fUML_Tests_ForkJoin_ControlFlow1146->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkJoin_ControlFlow1146->setSource(fUML_Tests_ForkJoin_ForkNode);
			fUML_Tests_ForkJoin_ControlFlow1146->setTarget(fUML_Tests_ForkJoin_JoinNode);
		fUML_Tests_ForkJoin->addEdge(fUML_Tests_ForkJoin_ControlFlow1146);
			// ControlFlow ControlFlow1148 from ForkNode to JoinNode
			fUML_Tests_ForkJoin_ControlFlow1148->setThisActivityEdgePtr(fUML_Tests_ForkJoin_ControlFlow1148);
			fUML_Tests_ForkJoin_ControlFlow1148->setName("ControlFlow1148");
			fUML_Tests_ForkJoin_ControlFlow1148->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkJoin_ControlFlow1148->setSource(fUML_Tests_ForkJoin_ForkNode);
			fUML_Tests_ForkJoin_ControlFlow1148->setTarget(fUML_Tests_ForkJoin_JoinNode);
		fUML_Tests_ForkJoin->addEdge(fUML_Tests_ForkJoin_ControlFlow1148);
	fUML_Tests->addPackagedElement(fUML_Tests_ForkJoin);
		// Activity TestDataStore
		fUML_Tests_TestDataStore->setThisActivityPtr(fUML_Tests_TestDataStore);
		fUML_Tests_TestDataStore->setName("TestDataStore");
		fUML_Tests_TestDataStore->setVisibility(VisibilityKind::public_);
			// Parameter output
			fUML_Tests_TestDataStore_output->setThisElementPtr(fUML_Tests_TestDataStore_output);
			fUML_Tests_TestDataStore_output->setName("output");
			fUML_Tests_TestDataStore_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestDataStore_output->setUpper(-1);
			fUML_Tests_TestDataStore_output->setLower(0);
			fUML_Tests_TestDataStore_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestDataStore_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestDataStore->addOwnedParameter(fUML_Tests_TestDataStore_output);
			// ValueSpecificationAction Value(1)-Init-2
			fUML_Tests_TestDataStore_Value_1minusInitminus2->setThisExecutableNodePtr(fUML_Tests_TestDataStore_Value_1minusInitminus2);
			fUML_Tests_TestDataStore_Value_1minusInitminus2->setName("Value(1)-Init-2");
			fUML_Tests_TestDataStore_Value_1minusInitminus2->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1150
				fUML_Tests_TestDataStore_Value_1minusInitminus2_LiteralInteger1150->setThisElementPtr(fUML_Tests_TestDataStore_Value_1minusInitminus2_LiteralInteger1150);
				fUML_Tests_TestDataStore_Value_1minusInitminus2_LiteralInteger1150->setName("LiteralInteger1150");
				fUML_Tests_TestDataStore_Value_1minusInitminus2_LiteralInteger1150->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_Value_1minusInitminus2_LiteralInteger1150->setValue(1);
			fUML_Tests_TestDataStore_Value_1minusInitminus2->setValue(fUML_Tests_TestDataStore_Value_1minusInitminus2_LiteralInteger1150);
				// OutputPin Value(1)-Init-2.result
				fUML_Tests_TestDataStore_Value_1minusInitminus2_Value_1minusInitminus2_result->setThisElementPtr(fUML_Tests_TestDataStore_Value_1minusInitminus2_Value_1minusInitminus2_result);
				fUML_Tests_TestDataStore_Value_1minusInitminus2_Value_1minusInitminus2_result->setName("Value(1)-Init-2.result");
				fUML_Tests_TestDataStore_Value_1minusInitminus2_Value_1minusInitminus2_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestDataStore_Value_1minusInitminus2->setResult(fUML_Tests_TestDataStore_Value_1minusInitminus2_Value_1minusInitminus2_result);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Value_1minusInitminus2);
			// MergeNode Merge3
			fUML_Tests_TestDataStore_Merge3->setThisElementPtr(fUML_Tests_TestDataStore_Merge3);
			fUML_Tests_TestDataStore_Merge3->setName("Merge3");
			fUML_Tests_TestDataStore_Merge3->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Merge3);
			// CallBehaviorAction Call(Copier)-2
			fUML_Tests_TestDataStore_Call_Copierminus2->setThisExecutableNodePtr(fUML_Tests_TestDataStore_Call_Copierminus2);
			fUML_Tests_TestDataStore_Call_Copierminus2->setName("Call(Copier)-2");
			fUML_Tests_TestDataStore_Call_Copierminus2->setVisibility(VisibilityKind::public_);
				// OutputPin Call(Copier)-2.output
				fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output->setThisElementPtr(fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output);
				fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output->setName("Call(Copier)-2.output");
				fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestDataStore_Call_Copierminus2->addResult(fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output);
			fUML_Tests_TestDataStore_Call_Copierminus2->setBehavior(fUML_Tests_Copier);
				// InputPin Call(Copier)-2.input
				fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input->setThisElementPtr(fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input);
				fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input->setName("Call(Copier)-2.input");
				fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestDataStore_Call_Copierminus2->addArgument(fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Call_Copierminus2);
			// DecisionNode DecisionNode
			fUML_Tests_TestDataStore_DecisionNode->setThisElementPtr(fUML_Tests_TestDataStore_DecisionNode);
			fUML_Tests_TestDataStore_DecisionNode->setName("DecisionNode");
			fUML_Tests_TestDataStore_DecisionNode->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestDataStore_DecisionNode->setDecisionInputFlow(fUML_Tests_TestDataStore_decisionInputFlow);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_DecisionNode);
			// MergeNode Merge2
			fUML_Tests_TestDataStore_Merge2->setThisElementPtr(fUML_Tests_TestDataStore_Merge2);
			fUML_Tests_TestDataStore_Merge2->setName("Merge2");
			fUML_Tests_TestDataStore_Merge2->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Merge2);
			// CallBehaviorAction Call(Copier)-1
			fUML_Tests_TestDataStore_Call_Copierminus1->setThisExecutableNodePtr(fUML_Tests_TestDataStore_Call_Copierminus1);
			fUML_Tests_TestDataStore_Call_Copierminus1->setName("Call(Copier)-1");
			fUML_Tests_TestDataStore_Call_Copierminus1->setVisibility(VisibilityKind::public_);
				// OutputPin Call(Copier)-1.output
				fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output->setThisElementPtr(fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output);
				fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output->setName("Call(Copier)-1.output");
				fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestDataStore_Call_Copierminus1->addResult(fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output);
			fUML_Tests_TestDataStore_Call_Copierminus1->setBehavior(fUML_Tests_Copier);
				// InputPin Call(Copier)-1.input
				fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input->setThisElementPtr(fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input);
				fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input->setName("Call(Copier)-1.input");
				fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestDataStore_Call_Copierminus1->addArgument(fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Call_Copierminus1);
			// InitialNode InitialNode1170
			fUML_Tests_TestDataStore_InitialNode1170->setThisElementPtr(fUML_Tests_TestDataStore_InitialNode1170);
			fUML_Tests_TestDataStore_InitialNode1170->setName("InitialNode1170");
			fUML_Tests_TestDataStore_InitialNode1170->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_InitialNode1170);
			// ValueSpecificationAction Value(2)-Init-3
			fUML_Tests_TestDataStore_Value_2minusInitminus3->setThisExecutableNodePtr(fUML_Tests_TestDataStore_Value_2minusInitminus3);
			fUML_Tests_TestDataStore_Value_2minusInitminus3->setName("Value(2)-Init-3");
			fUML_Tests_TestDataStore_Value_2minusInitminus3->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1171
				fUML_Tests_TestDataStore_Value_2minusInitminus3_LiteralInteger1171->setThisElementPtr(fUML_Tests_TestDataStore_Value_2minusInitminus3_LiteralInteger1171);
				fUML_Tests_TestDataStore_Value_2minusInitminus3_LiteralInteger1171->setName("LiteralInteger1171");
				fUML_Tests_TestDataStore_Value_2minusInitminus3_LiteralInteger1171->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_Value_2minusInitminus3_LiteralInteger1171->setValue(2);
			fUML_Tests_TestDataStore_Value_2minusInitminus3->setValue(fUML_Tests_TestDataStore_Value_2minusInitminus3_LiteralInteger1171);
				// OutputPin Value(2)-Init-1.result
				fUML_Tests_TestDataStore_Value_2minusInitminus3_Value_2minusInitminus1_result->setThisElementPtr(fUML_Tests_TestDataStore_Value_2minusInitminus3_Value_2minusInitminus1_result);
				fUML_Tests_TestDataStore_Value_2minusInitminus3_Value_2minusInitminus1_result->setName("Value(2)-Init-1.result");
				fUML_Tests_TestDataStore_Value_2minusInitminus3_Value_2minusInitminus1_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestDataStore_Value_2minusInitminus3->setResult(fUML_Tests_TestDataStore_Value_2minusInitminus3_Value_2minusInitminus1_result);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Value_2minusInitminus3);
			// ValueSpecificationAction Value(2)
			fUML_Tests_TestDataStore_Value_2->setThisExecutableNodePtr(fUML_Tests_TestDataStore_Value_2);
			fUML_Tests_TestDataStore_Value_2->setName("Value(2)");
			fUML_Tests_TestDataStore_Value_2->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1172
				fUML_Tests_TestDataStore_Value_2_LiteralInteger1172->setThisElementPtr(fUML_Tests_TestDataStore_Value_2_LiteralInteger1172);
				fUML_Tests_TestDataStore_Value_2_LiteralInteger1172->setName("LiteralInteger1172");
				fUML_Tests_TestDataStore_Value_2_LiteralInteger1172->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_Value_2_LiteralInteger1172->setValue(2);
			fUML_Tests_TestDataStore_Value_2->setValue(fUML_Tests_TestDataStore_Value_2_LiteralInteger1172);
				// OutputPin Value(2).result
				fUML_Tests_TestDataStore_Value_2_Value_2_result->setThisElementPtr(fUML_Tests_TestDataStore_Value_2_Value_2_result);
				fUML_Tests_TestDataStore_Value_2_Value_2_result->setName("Value(2).result");
				fUML_Tests_TestDataStore_Value_2_Value_2_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestDataStore_Value_2->setResult(fUML_Tests_TestDataStore_Value_2_Value_2_result);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Value_2);
			// ActivityFinalNode FinalNode
			fUML_Tests_TestDataStore_FinalNode->setThisElementPtr(fUML_Tests_TestDataStore_FinalNode);
			fUML_Tests_TestDataStore_FinalNode->setName("FinalNode");
			fUML_Tests_TestDataStore_FinalNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_FinalNode);
			// DataStoreNode DataStoreNode
			fUML_Tests_TestDataStore_DataStoreNode->setThisElementPtr(fUML_Tests_TestDataStore_DataStoreNode);
			fUML_Tests_TestDataStore_DataStoreNode->setName("DataStoreNode");
			fUML_Tests_TestDataStore_DataStoreNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_DataStoreNode);
			// ValueSpecificationAction Value(3)
			fUML_Tests_TestDataStore_Value_3->setThisExecutableNodePtr(fUML_Tests_TestDataStore_Value_3);
			fUML_Tests_TestDataStore_Value_3->setName("Value(3)");
			fUML_Tests_TestDataStore_Value_3->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1178
				fUML_Tests_TestDataStore_Value_3_LiteralInteger1178->setThisElementPtr(fUML_Tests_TestDataStore_Value_3_LiteralInteger1178);
				fUML_Tests_TestDataStore_Value_3_LiteralInteger1178->setName("LiteralInteger1178");
				fUML_Tests_TestDataStore_Value_3_LiteralInteger1178->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_Value_3_LiteralInteger1178->setValue(3);
			fUML_Tests_TestDataStore_Value_3->setValue(fUML_Tests_TestDataStore_Value_3_LiteralInteger1178);
				// OutputPin Value(3).result
				fUML_Tests_TestDataStore_Value_3_Value_3_result->setThisElementPtr(fUML_Tests_TestDataStore_Value_3_Value_3_result);
				fUML_Tests_TestDataStore_Value_3_Value_3_result->setName("Value(3).result");
				fUML_Tests_TestDataStore_Value_3_Value_3_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestDataStore_Value_3->setResult(fUML_Tests_TestDataStore_Value_3_Value_3_result);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Value_3);
			// ValueSpecificationAction Value(1)
			fUML_Tests_TestDataStore_Value_1->setThisExecutableNodePtr(fUML_Tests_TestDataStore_Value_1);
			fUML_Tests_TestDataStore_Value_1->setName("Value(1)");
			fUML_Tests_TestDataStore_Value_1->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1179
				fUML_Tests_TestDataStore_Value_1_LiteralInteger1179->setThisElementPtr(fUML_Tests_TestDataStore_Value_1_LiteralInteger1179);
				fUML_Tests_TestDataStore_Value_1_LiteralInteger1179->setName("LiteralInteger1179");
				fUML_Tests_TestDataStore_Value_1_LiteralInteger1179->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_Value_1_LiteralInteger1179->setValue(1);
			fUML_Tests_TestDataStore_Value_1->setValue(fUML_Tests_TestDataStore_Value_1_LiteralInteger1179);
				// OutputPin Value(1).result
				fUML_Tests_TestDataStore_Value_1_Value_1_result->setThisElementPtr(fUML_Tests_TestDataStore_Value_1_Value_1_result);
				fUML_Tests_TestDataStore_Value_1_Value_1_result->setName("Value(1).result");
				fUML_Tests_TestDataStore_Value_1_Value_1_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestDataStore_Value_1->setResult(fUML_Tests_TestDataStore_Value_1_Value_1_result);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Value_1);
			// ActivityParameterNode Parameter(output)
			fUML_Tests_TestDataStore_Parameter_output->setThisElementPtr(fUML_Tests_TestDataStore_Parameter_output);
			fUML_Tests_TestDataStore_Parameter_output->setName("Parameter(output)");
			fUML_Tests_TestDataStore_Parameter_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestDataStore_Parameter_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestDataStore_Parameter_output->setParameter(fUML_Tests_TestDataStore_output);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Parameter_output);
			// ValueSpecificationAction Value(1)-Init-1
			fUML_Tests_TestDataStore_Value_1minusInitminus1->setThisExecutableNodePtr(fUML_Tests_TestDataStore_Value_1minusInitminus1);
			fUML_Tests_TestDataStore_Value_1minusInitminus1->setName("Value(1)-Init-1");
			fUML_Tests_TestDataStore_Value_1minusInitminus1->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1210
				fUML_Tests_TestDataStore_Value_1minusInitminus1_LiteralInteger1210->setThisElementPtr(fUML_Tests_TestDataStore_Value_1minusInitminus1_LiteralInteger1210);
				fUML_Tests_TestDataStore_Value_1minusInitminus1_LiteralInteger1210->setName("LiteralInteger1210");
				fUML_Tests_TestDataStore_Value_1minusInitminus1_LiteralInteger1210->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_Value_1minusInitminus1_LiteralInteger1210->setValue(1);
			fUML_Tests_TestDataStore_Value_1minusInitminus1->setValue(fUML_Tests_TestDataStore_Value_1minusInitminus1_LiteralInteger1210);
				// OutputPin Value(1)-Init-1.result
				fUML_Tests_TestDataStore_Value_1minusInitminus1_Value_1minusInitminus1_result->setThisElementPtr(fUML_Tests_TestDataStore_Value_1minusInitminus1_Value_1minusInitminus1_result);
				fUML_Tests_TestDataStore_Value_1minusInitminus1_Value_1minusInitminus1_result->setName("Value(1)-Init-1.result");
				fUML_Tests_TestDataStore_Value_1minusInitminus1_Value_1minusInitminus1_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestDataStore_Value_1minusInitminus1->setResult(fUML_Tests_TestDataStore_Value_1minusInitminus1_Value_1minusInitminus1_result);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Value_1minusInitminus1);
			// MergeNode Merge1
			fUML_Tests_TestDataStore_Merge1->setThisElementPtr(fUML_Tests_TestDataStore_Merge1);
			fUML_Tests_TestDataStore_Merge1->setName("Merge1");
			fUML_Tests_TestDataStore_Merge1->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Merge1);
			// ObjectFlow ObjectFlow1151 from DataStoreNode to Call(Copier)-1.input
			fUML_Tests_TestDataStore_ObjectFlow1151->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ObjectFlow1151);
			fUML_Tests_TestDataStore_ObjectFlow1151->setName("ObjectFlow1151");
			fUML_Tests_TestDataStore_ObjectFlow1151->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ObjectFlow1151->setSource(fUML_Tests_TestDataStore_DataStoreNode);
			fUML_Tests_TestDataStore_ObjectFlow1151->setTarget(fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ObjectFlow1151);
			// ObjectFlow ObjectFlow1153 from Value(1)-Init-2.result to DataStoreNode
			fUML_Tests_TestDataStore_ObjectFlow1153->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ObjectFlow1153);
			fUML_Tests_TestDataStore_ObjectFlow1153->setName("ObjectFlow1153");
			fUML_Tests_TestDataStore_ObjectFlow1153->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ObjectFlow1153->setSource(fUML_Tests_TestDataStore_Value_1minusInitminus2_Value_1minusInitminus2_result);
			fUML_Tests_TestDataStore_ObjectFlow1153->setTarget(fUML_Tests_TestDataStore_DataStoreNode);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ObjectFlow1153);
			// ControlFlow ControlFlow1155 from Value(1)-Init-1 to Value(1)-Init-2
			fUML_Tests_TestDataStore_ControlFlow1155->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow1155);
			fUML_Tests_TestDataStore_ControlFlow1155->setName("ControlFlow1155");
			fUML_Tests_TestDataStore_ControlFlow1155->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow1155->setSource(fUML_Tests_TestDataStore_Value_1minusInitminus1);
			fUML_Tests_TestDataStore_ControlFlow1155->setTarget(fUML_Tests_TestDataStore_Value_1minusInitminus2);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow1155);
			// ControlFlow ControlFlow1161 from DecisionNode to Call(Copier)-2
			fUML_Tests_TestDataStore_ControlFlow1161->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow1161);
			fUML_Tests_TestDataStore_ControlFlow1161->setName("ControlFlow1161");
			fUML_Tests_TestDataStore_ControlFlow1161->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow1161->setSource(fUML_Tests_TestDataStore_DecisionNode);
			fUML_Tests_TestDataStore_ControlFlow1161->setTarget(fUML_Tests_TestDataStore_Call_Copierminus2);
				// LiteralInteger LiteralInteger1163
				fUML_Tests_TestDataStore_ControlFlow1161_LiteralInteger1163->setThisElementPtr(fUML_Tests_TestDataStore_ControlFlow1161_LiteralInteger1163);
				fUML_Tests_TestDataStore_ControlFlow1161_LiteralInteger1163->setName("LiteralInteger1163");
				fUML_Tests_TestDataStore_ControlFlow1161_LiteralInteger1163->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_ControlFlow1161_LiteralInteger1163->setValue(2);
			fUML_Tests_TestDataStore_ControlFlow1161->setGuard(fUML_Tests_TestDataStore_ControlFlow1161_LiteralInteger1163);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow1161);
			// ControlFlow ControlFlow1164 from Merge3 to Merge1
			fUML_Tests_TestDataStore_ControlFlow1164->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow1164);
			fUML_Tests_TestDataStore_ControlFlow1164->setName("ControlFlow1164");
			fUML_Tests_TestDataStore_ControlFlow1164->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow1164->setSource(fUML_Tests_TestDataStore_Merge3);
			fUML_Tests_TestDataStore_ControlFlow1164->setTarget(fUML_Tests_TestDataStore_Merge1);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow1164);
			// ObjectFlow ObjectFlow1168 from Value(3).result to Merge2
			fUML_Tests_TestDataStore_ObjectFlow1168->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ObjectFlow1168);
			fUML_Tests_TestDataStore_ObjectFlow1168->setName("ObjectFlow1168");
			fUML_Tests_TestDataStore_ObjectFlow1168->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ObjectFlow1168->setSource(fUML_Tests_TestDataStore_Value_3_Value_3_result);
			fUML_Tests_TestDataStore_ObjectFlow1168->setTarget(fUML_Tests_TestDataStore_Merge2);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ObjectFlow1168);
			// ControlFlow ControlFlow1173 from Value(3) to Merge3
			fUML_Tests_TestDataStore_ControlFlow1173->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow1173);
			fUML_Tests_TestDataStore_ControlFlow1173->setName("ControlFlow1173");
			fUML_Tests_TestDataStore_ControlFlow1173->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow1173->setSource(fUML_Tests_TestDataStore_Value_3);
			fUML_Tests_TestDataStore_ControlFlow1173->setTarget(fUML_Tests_TestDataStore_Merge3);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow1173);
			// ObjectFlow ObjectFlow1175 from Value(1)-Init-1.result to DataStoreNode
			fUML_Tests_TestDataStore_ObjectFlow1175->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ObjectFlow1175);
			fUML_Tests_TestDataStore_ObjectFlow1175->setName("ObjectFlow1175");
			fUML_Tests_TestDataStore_ObjectFlow1175->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ObjectFlow1175->setSource(fUML_Tests_TestDataStore_Value_1minusInitminus1_Value_1minusInitminus1_result);
			fUML_Tests_TestDataStore_ObjectFlow1175->setTarget(fUML_Tests_TestDataStore_DataStoreNode);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ObjectFlow1175);
			// ObjectFlow decisionInputFlow from Merge2 to DecisionNode
			fUML_Tests_TestDataStore_decisionInputFlow->setThisActivityEdgePtr(fUML_Tests_TestDataStore_decisionInputFlow);
			fUML_Tests_TestDataStore_decisionInputFlow->setName("decisionInputFlow");
			fUML_Tests_TestDataStore_decisionInputFlow->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_decisionInputFlow->setSource(fUML_Tests_TestDataStore_Merge2);
			fUML_Tests_TestDataStore_decisionInputFlow->setTarget(fUML_Tests_TestDataStore_DecisionNode);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_decisionInputFlow);
			// ControlFlow ControlFlow1180 from Call(Copier)-1 to Value(2)
			fUML_Tests_TestDataStore_ControlFlow1180->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow1180);
			fUML_Tests_TestDataStore_ControlFlow1180->setName("ControlFlow1180");
			fUML_Tests_TestDataStore_ControlFlow1180->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow1180->setSource(fUML_Tests_TestDataStore_Call_Copierminus1);
			fUML_Tests_TestDataStore_ControlFlow1180->setTarget(fUML_Tests_TestDataStore_Value_2);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow1180);
			// ControlFlow ControlFlow1182 from Call(Copier)-2 to Value(3)
			fUML_Tests_TestDataStore_ControlFlow1182->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow1182);
			fUML_Tests_TestDataStore_ControlFlow1182->setName("ControlFlow1182");
			fUML_Tests_TestDataStore_ControlFlow1182->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow1182->setSource(fUML_Tests_TestDataStore_Call_Copierminus2);
			fUML_Tests_TestDataStore_ControlFlow1182->setTarget(fUML_Tests_TestDataStore_Value_3);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow1182);
			// ControlFlow ControlFlow1184 from DecisionNode to FinalNode
			fUML_Tests_TestDataStore_ControlFlow1184->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow1184);
			fUML_Tests_TestDataStore_ControlFlow1184->setName("ControlFlow1184");
			fUML_Tests_TestDataStore_ControlFlow1184->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow1184->setSource(fUML_Tests_TestDataStore_DecisionNode);
			fUML_Tests_TestDataStore_ControlFlow1184->setTarget(fUML_Tests_TestDataStore_FinalNode);
				// LiteralInteger LiteralInteger1185
				fUML_Tests_TestDataStore_ControlFlow1184_LiteralInteger1185->setThisElementPtr(fUML_Tests_TestDataStore_ControlFlow1184_LiteralInteger1185);
				fUML_Tests_TestDataStore_ControlFlow1184_LiteralInteger1185->setName("LiteralInteger1185");
				fUML_Tests_TestDataStore_ControlFlow1184_LiteralInteger1185->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_ControlFlow1184_LiteralInteger1185->setValue(3);
			fUML_Tests_TestDataStore_ControlFlow1184->setGuard(fUML_Tests_TestDataStore_ControlFlow1184_LiteralInteger1185);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow1184);
			// ControlFlow ControlFlow1187 from Value(2)-Init-3 to Merge1
			fUML_Tests_TestDataStore_ControlFlow1187->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow1187);
			fUML_Tests_TestDataStore_ControlFlow1187->setName("ControlFlow1187");
			fUML_Tests_TestDataStore_ControlFlow1187->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow1187->setSource(fUML_Tests_TestDataStore_Value_2minusInitminus3);
			fUML_Tests_TestDataStore_ControlFlow1187->setTarget(fUML_Tests_TestDataStore_Merge1);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow1187);
			// ControlFlow ControlFlow1189 from Merge1 to DecisionNode
			fUML_Tests_TestDataStore_ControlFlow1189->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow1189);
			fUML_Tests_TestDataStore_ControlFlow1189->setName("ControlFlow1189");
			fUML_Tests_TestDataStore_ControlFlow1189->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow1189->setSource(fUML_Tests_TestDataStore_Merge1);
			fUML_Tests_TestDataStore_ControlFlow1189->setTarget(fUML_Tests_TestDataStore_DecisionNode);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow1189);
			// ObjectFlow ObjectFlow1191 from Value(2).result to Merge2
			fUML_Tests_TestDataStore_ObjectFlow1191->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ObjectFlow1191);
			fUML_Tests_TestDataStore_ObjectFlow1191->setName("ObjectFlow1191");
			fUML_Tests_TestDataStore_ObjectFlow1191->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ObjectFlow1191->setSource(fUML_Tests_TestDataStore_Value_2_Value_2_result);
			fUML_Tests_TestDataStore_ObjectFlow1191->setTarget(fUML_Tests_TestDataStore_Merge2);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ObjectFlow1191);
			// ObjectFlow ObjectFlow1193 from Call(Copier)-1.output to Parameter(output)
			fUML_Tests_TestDataStore_ObjectFlow1193->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ObjectFlow1193);
			fUML_Tests_TestDataStore_ObjectFlow1193->setName("ObjectFlow1193");
			fUML_Tests_TestDataStore_ObjectFlow1193->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ObjectFlow1193->setSource(fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output);
			fUML_Tests_TestDataStore_ObjectFlow1193->setTarget(fUML_Tests_TestDataStore_Parameter_output);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ObjectFlow1193);
			// ControlFlow ControlFlow1199 from InitialNode1170 to Value(1)-Init-1
			fUML_Tests_TestDataStore_ControlFlow1199->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow1199);
			fUML_Tests_TestDataStore_ControlFlow1199->setName("ControlFlow1199");
			fUML_Tests_TestDataStore_ControlFlow1199->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow1199->setSource(fUML_Tests_TestDataStore_InitialNode1170);
			fUML_Tests_TestDataStore_ControlFlow1199->setTarget(fUML_Tests_TestDataStore_Value_1minusInitminus1);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow1199);
			// ControlFlow ControlFlow1201 from Value(1)-Init-2 to Value(2)-Init-3
			fUML_Tests_TestDataStore_ControlFlow1201->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow1201);
			fUML_Tests_TestDataStore_ControlFlow1201->setName("ControlFlow1201");
			fUML_Tests_TestDataStore_ControlFlow1201->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow1201->setSource(fUML_Tests_TestDataStore_Value_1minusInitminus2);
			fUML_Tests_TestDataStore_ControlFlow1201->setTarget(fUML_Tests_TestDataStore_Value_2minusInitminus3);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow1201);
			// ObjectFlow ObjectFlow1203 from Value(2)-Init-1.result to DataStoreNode
			fUML_Tests_TestDataStore_ObjectFlow1203->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ObjectFlow1203);
			fUML_Tests_TestDataStore_ObjectFlow1203->setName("ObjectFlow1203");
			fUML_Tests_TestDataStore_ObjectFlow1203->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ObjectFlow1203->setSource(fUML_Tests_TestDataStore_Value_2minusInitminus3_Value_2minusInitminus1_result);
			fUML_Tests_TestDataStore_ObjectFlow1203->setTarget(fUML_Tests_TestDataStore_DataStoreNode);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ObjectFlow1203);
			// ControlFlow ControlFlow1205 from Value(2) to Merge3
			fUML_Tests_TestDataStore_ControlFlow1205->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow1205);
			fUML_Tests_TestDataStore_ControlFlow1205->setName("ControlFlow1205");
			fUML_Tests_TestDataStore_ControlFlow1205->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow1205->setSource(fUML_Tests_TestDataStore_Value_2);
			fUML_Tests_TestDataStore_ControlFlow1205->setTarget(fUML_Tests_TestDataStore_Merge3);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow1205);
			// ControlFlow ControlFlow1207 from DecisionNode to Call(Copier)-1
			fUML_Tests_TestDataStore_ControlFlow1207->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow1207);
			fUML_Tests_TestDataStore_ControlFlow1207->setName("ControlFlow1207");
			fUML_Tests_TestDataStore_ControlFlow1207->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow1207->setSource(fUML_Tests_TestDataStore_DecisionNode);
			fUML_Tests_TestDataStore_ControlFlow1207->setTarget(fUML_Tests_TestDataStore_Call_Copierminus1);
				// LiteralInteger LiteralInteger1209
				fUML_Tests_TestDataStore_ControlFlow1207_LiteralInteger1209->setThisElementPtr(fUML_Tests_TestDataStore_ControlFlow1207_LiteralInteger1209);
				fUML_Tests_TestDataStore_ControlFlow1207_LiteralInteger1209->setName("LiteralInteger1209");
				fUML_Tests_TestDataStore_ControlFlow1207_LiteralInteger1209->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_ControlFlow1207_LiteralInteger1209->setValue(1);
			fUML_Tests_TestDataStore_ControlFlow1207->setGuard(fUML_Tests_TestDataStore_ControlFlow1207_LiteralInteger1209);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow1207);
			// ObjectFlow ObjectFlow1211 from Value(1).result to Merge2
			fUML_Tests_TestDataStore_ObjectFlow1211->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ObjectFlow1211);
			fUML_Tests_TestDataStore_ObjectFlow1211->setName("ObjectFlow1211");
			fUML_Tests_TestDataStore_ObjectFlow1211->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ObjectFlow1211->setSource(fUML_Tests_TestDataStore_Value_1_Value_1_result);
			fUML_Tests_TestDataStore_ObjectFlow1211->setTarget(fUML_Tests_TestDataStore_Merge2);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ObjectFlow1211);
			// ObjectFlow ObjectFlow1213 from Call(Copier)-2.output to Parameter(output)
			fUML_Tests_TestDataStore_ObjectFlow1213->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ObjectFlow1213);
			fUML_Tests_TestDataStore_ObjectFlow1213->setName("ObjectFlow1213");
			fUML_Tests_TestDataStore_ObjectFlow1213->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ObjectFlow1213->setSource(fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output);
			fUML_Tests_TestDataStore_ObjectFlow1213->setTarget(fUML_Tests_TestDataStore_Parameter_output);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ObjectFlow1213);
			// ObjectFlow ObjectFlow1215 from DataStoreNode to Call(Copier)-2.input
			fUML_Tests_TestDataStore_ObjectFlow1215->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ObjectFlow1215);
			fUML_Tests_TestDataStore_ObjectFlow1215->setName("ObjectFlow1215");
			fUML_Tests_TestDataStore_ObjectFlow1215->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ObjectFlow1215->setSource(fUML_Tests_TestDataStore_DataStoreNode);
			fUML_Tests_TestDataStore_ObjectFlow1215->setTarget(fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ObjectFlow1215);
	fUML_Tests->addPackagedElement(fUML_Tests_TestDataStore);
		// Activity ForkMergeData
		fUML_Tests_ForkMergeData->setThisActivityPtr(fUML_Tests_ForkMergeData);
		fUML_Tests_ForkMergeData->setName("ForkMergeData");
		fUML_Tests_ForkMergeData->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkMergeData->isReentrant = false;
			// Parameter output
			fUML_Tests_ForkMergeData_output->setThisElementPtr(fUML_Tests_ForkMergeData_output);
			fUML_Tests_ForkMergeData_output->setName("output");
			fUML_Tests_ForkMergeData_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_ForkMergeData_output->setUpper(-1);
			fUML_Tests_ForkMergeData_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_ForkMergeData_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_ForkMergeData->addOwnedParameter(fUML_Tests_ForkMergeData_output);
			// CallBehaviorAction Action_B
			fUML_Tests_ForkMergeData_Action_B->setThisExecutableNodePtr(fUML_Tests_ForkMergeData_Action_B);
			fUML_Tests_ForkMergeData_Action_B->setName("Action_B");
			fUML_Tests_ForkMergeData_Action_B->setVisibility(VisibilityKind::public_);
				// OutputPin Action_B.output
				fUML_Tests_ForkMergeData_Action_B_Action_B_output->setThisElementPtr(fUML_Tests_ForkMergeData_Action_B_Action_B_output);
				fUML_Tests_ForkMergeData_Action_B_Action_B_output->setName("Action_B.output");
				fUML_Tests_ForkMergeData_Action_B_Action_B_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_ForkMergeData_Action_B_Action_B_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_ForkMergeData_Action_B->addResult(fUML_Tests_ForkMergeData_Action_B_Action_B_output);
			fUML_Tests_ForkMergeData_Action_B->setBehavior(fUML_Tests_Copier);
				// InputPin Action_B.input
				fUML_Tests_ForkMergeData_Action_B_Action_B_input->setThisElementPtr(fUML_Tests_ForkMergeData_Action_B_Action_B_input);
				fUML_Tests_ForkMergeData_Action_B_Action_B_input->setName("Action_B.input");
				fUML_Tests_ForkMergeData_Action_B_Action_B_input->setVisibility(VisibilityKind::public_);
				fUML_Tests_ForkMergeData_Action_B_Action_B_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_ForkMergeData_Action_B->addArgument(fUML_Tests_ForkMergeData_Action_B_Action_B_input);
		fUML_Tests_ForkMergeData->addNode(fUML_Tests_ForkMergeData_Action_B);
			// ValueSpecificationAction Action_A
			fUML_Tests_ForkMergeData_Action_A->setThisExecutableNodePtr(fUML_Tests_ForkMergeData_Action_A);
			fUML_Tests_ForkMergeData_Action_A->setName("Action_A");
			fUML_Tests_ForkMergeData_Action_A->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1225
				fUML_Tests_ForkMergeData_Action_A_LiteralInteger1225->setThisElementPtr(fUML_Tests_ForkMergeData_Action_A_LiteralInteger1225);
				fUML_Tests_ForkMergeData_Action_A_LiteralInteger1225->setName("LiteralInteger1225");
				fUML_Tests_ForkMergeData_Action_A_LiteralInteger1225->setVisibility(VisibilityKind::public_);
				fUML_Tests_ForkMergeData_Action_A_LiteralInteger1225->setValue(0);
			fUML_Tests_ForkMergeData_Action_A->setValue(fUML_Tests_ForkMergeData_Action_A_LiteralInteger1225);
				// OutputPin Action_A.result
				fUML_Tests_ForkMergeData_Action_A_Action_A_result->setThisElementPtr(fUML_Tests_ForkMergeData_Action_A_Action_A_result);
				fUML_Tests_ForkMergeData_Action_A_Action_A_result->setName("Action_A.result");
				fUML_Tests_ForkMergeData_Action_A_Action_A_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_ForkMergeData_Action_A_Action_A_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_ForkMergeData_Action_A->setResult(fUML_Tests_ForkMergeData_Action_A_Action_A_result);
		fUML_Tests_ForkMergeData->addNode(fUML_Tests_ForkMergeData_Action_A);
			// MergeNode MergeNode
			fUML_Tests_ForkMergeData_MergeNode->setThisElementPtr(fUML_Tests_ForkMergeData_MergeNode);
			fUML_Tests_ForkMergeData_MergeNode->setName("MergeNode");
			fUML_Tests_ForkMergeData_MergeNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkMergeData->addNode(fUML_Tests_ForkMergeData_MergeNode);
			// InitialNode InitialNode
			fUML_Tests_ForkMergeData_InitialNode->setThisElementPtr(fUML_Tests_ForkMergeData_InitialNode);
			fUML_Tests_ForkMergeData_InitialNode->setName("InitialNode");
			fUML_Tests_ForkMergeData_InitialNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkMergeData->addNode(fUML_Tests_ForkMergeData_InitialNode);
			// ActivityParameterNode Parameter(output)
			fUML_Tests_ForkMergeData_Parameter_output->setThisElementPtr(fUML_Tests_ForkMergeData_Parameter_output);
			fUML_Tests_ForkMergeData_Parameter_output->setName("Parameter(output)");
			fUML_Tests_ForkMergeData_Parameter_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_ForkMergeData_Parameter_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_ForkMergeData_Parameter_output->setParameter(fUML_Tests_ForkMergeData_output);
		fUML_Tests_ForkMergeData->addNode(fUML_Tests_ForkMergeData_Parameter_output);
			// ForkNode ForkNode
			fUML_Tests_ForkMergeData_ForkNode->setThisElementPtr(fUML_Tests_ForkMergeData_ForkNode);
			fUML_Tests_ForkMergeData_ForkNode->setName("ForkNode");
			fUML_Tests_ForkMergeData_ForkNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkMergeData->addNode(fUML_Tests_ForkMergeData_ForkNode);
			// ObjectFlow ObjectFlow1230 from MergeNode to Action_B.input
			fUML_Tests_ForkMergeData_ObjectFlow1230->setThisActivityEdgePtr(fUML_Tests_ForkMergeData_ObjectFlow1230);
			fUML_Tests_ForkMergeData_ObjectFlow1230->setName("ObjectFlow1230");
			fUML_Tests_ForkMergeData_ObjectFlow1230->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMergeData_ObjectFlow1230->setSource(fUML_Tests_ForkMergeData_MergeNode);
			fUML_Tests_ForkMergeData_ObjectFlow1230->setTarget(fUML_Tests_ForkMergeData_Action_B_Action_B_input);
		fUML_Tests_ForkMergeData->addEdge(fUML_Tests_ForkMergeData_ObjectFlow1230);
			// ObjectFlow ObjectFlow1217 from Action_A.result to ForkNode
			fUML_Tests_ForkMergeData_ObjectFlow1217->setThisActivityEdgePtr(fUML_Tests_ForkMergeData_ObjectFlow1217);
			fUML_Tests_ForkMergeData_ObjectFlow1217->setName("ObjectFlow1217");
			fUML_Tests_ForkMergeData_ObjectFlow1217->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMergeData_ObjectFlow1217->setSource(fUML_Tests_ForkMergeData_Action_A_Action_A_result);
			fUML_Tests_ForkMergeData_ObjectFlow1217->setTarget(fUML_Tests_ForkMergeData_ForkNode);
		fUML_Tests_ForkMergeData->addEdge(fUML_Tests_ForkMergeData_ObjectFlow1217);
			// ControlFlow ControlFlow1232 from InitialNode to Action_A
			fUML_Tests_ForkMergeData_ControlFlow1232->setThisActivityEdgePtr(fUML_Tests_ForkMergeData_ControlFlow1232);
			fUML_Tests_ForkMergeData_ControlFlow1232->setName("ControlFlow1232");
			fUML_Tests_ForkMergeData_ControlFlow1232->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMergeData_ControlFlow1232->setSource(fUML_Tests_ForkMergeData_InitialNode);
			fUML_Tests_ForkMergeData_ControlFlow1232->setTarget(fUML_Tests_ForkMergeData_Action_A);
		fUML_Tests_ForkMergeData->addEdge(fUML_Tests_ForkMergeData_ControlFlow1232);
			// ObjectFlow ObjectFlow1226 from ForkNode to MergeNode
			fUML_Tests_ForkMergeData_ObjectFlow1226->setThisActivityEdgePtr(fUML_Tests_ForkMergeData_ObjectFlow1226);
			fUML_Tests_ForkMergeData_ObjectFlow1226->setName("ObjectFlow1226");
			fUML_Tests_ForkMergeData_ObjectFlow1226->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMergeData_ObjectFlow1226->setSource(fUML_Tests_ForkMergeData_ForkNode);
			fUML_Tests_ForkMergeData_ObjectFlow1226->setTarget(fUML_Tests_ForkMergeData_MergeNode);
		fUML_Tests_ForkMergeData->addEdge(fUML_Tests_ForkMergeData_ObjectFlow1226);
			// ObjectFlow ObjectFlow1234 from Action_B.output to Parameter(output)
			fUML_Tests_ForkMergeData_ObjectFlow1234->setThisActivityEdgePtr(fUML_Tests_ForkMergeData_ObjectFlow1234);
			fUML_Tests_ForkMergeData_ObjectFlow1234->setName("ObjectFlow1234");
			fUML_Tests_ForkMergeData_ObjectFlow1234->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMergeData_ObjectFlow1234->setSource(fUML_Tests_ForkMergeData_Action_B_Action_B_output);
			fUML_Tests_ForkMergeData_ObjectFlow1234->setTarget(fUML_Tests_ForkMergeData_Parameter_output);
		fUML_Tests_ForkMergeData->addEdge(fUML_Tests_ForkMergeData_ObjectFlow1234);
			// ObjectFlow ObjectFlow1236 from ForkNode to MergeNode
			fUML_Tests_ForkMergeData_ObjectFlow1236->setThisActivityEdgePtr(fUML_Tests_ForkMergeData_ObjectFlow1236);
			fUML_Tests_ForkMergeData_ObjectFlow1236->setName("ObjectFlow1236");
			fUML_Tests_ForkMergeData_ObjectFlow1236->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMergeData_ObjectFlow1236->setSource(fUML_Tests_ForkMergeData_ForkNode);
			fUML_Tests_ForkMergeData_ObjectFlow1236->setTarget(fUML_Tests_ForkMergeData_MergeNode);
		fUML_Tests_ForkMergeData->addEdge(fUML_Tests_ForkMergeData_ObjectFlow1236);
	fUML_Tests->addPackagedElement(fUML_Tests_ForkMergeData);
		// Association TestAssociation
		fUML_Tests_TestAssociation->setThisAssociationPtr(fUML_Tests_TestAssociation);
		fUML_Tests_TestAssociation->setName("TestAssociation");
		fUML_Tests_TestAssociation->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestAssociation->addOwnedEnd(fUML_Tests_TestAssociation_end1);
		fUML_Tests_TestAssociation->addOwnedEnd(fUML_Tests_TestAssociation_end2);
		fUML_Tests_TestAssociation->addNavigableOwnedEnd(fUML_Tests_TestAssociation_end2);
		fUML_Tests_TestAssociation->addNavigableOwnedEnd(fUML_Tests_TestAssociation_end1);
	fUML_Tests->addPackagedElement(fUML_Tests_TestAssociation);
		// Activity TestCallSender
		fUML_Tests_TestCallSender->setThisActivityPtr(fUML_Tests_TestCallSender);
		fUML_Tests_TestCallSender->setName("TestCallSender");
		fUML_Tests_TestCallSender->setVisibility(VisibilityKind::public_);
		
			// Property value
			fUML_Tests_TestCallSender_value->setThisElementPtr(fUML_Tests_TestCallSender_value);
			fUML_Tests_TestCallSender_value->setName("value");
			fUML_Tests_TestCallSender_value->setVisibility(VisibilityKind::private_);
		fUML_Tests_TestCallSender->addOwnedAttribute(fUML_Tests_TestCallSender_value);
		fUML_Tests_TestCallSender->setIsActive(true);
			// AddStructuralFeatureValueAction Write(value)
			fUML_Tests_TestCallSender_Write_value->setThisExecutableNodePtr(fUML_Tests_TestCallSender_Write_value);
			fUML_Tests_TestCallSender_Write_value->setName("Write(value)");
			fUML_Tests_TestCallSender_Write_value->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSender_Write_value->setStructuralFeature(fUML_Tests_TestCallSender_value);
				// InputPin Write(value).object
				fUML_Tests_TestCallSender_Write_value_Write_value_object->setThisElementPtr(fUML_Tests_TestCallSender_Write_value_Write_value_object);
				fUML_Tests_TestCallSender_Write_value_Write_value_object->setName("Write(value).object");
				fUML_Tests_TestCallSender_Write_value_Write_value_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSender_Write_value->setObject(fUML_Tests_TestCallSender_Write_value_Write_value_object);
				// InputPin Write(value).value
				fUML_Tests_TestCallSender_Write_value_Write_value_value->setThisElementPtr(fUML_Tests_TestCallSender_Write_value_Write_value_value);
				fUML_Tests_TestCallSender_Write_value_Write_value_value->setName("Write(value).value");
				fUML_Tests_TestCallSender_Write_value_Write_value_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCallSender_Write_value_Write_value_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestCallSender_Write_value->setValue(fUML_Tests_TestCallSender_Write_value_Write_value_value);
		fUML_Tests_TestCallSender->addNode(fUML_Tests_TestCallSender_Write_value);
			// ValueSpecificationAction Value(0)
			fUML_Tests_TestCallSender_Value_0->setThisExecutableNodePtr(fUML_Tests_TestCallSender_Value_0);
			fUML_Tests_TestCallSender_Value_0->setName("Value(0)");
			fUML_Tests_TestCallSender_Value_0->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1244
				fUML_Tests_TestCallSender_Value_0_LiteralInteger1244->setThisElementPtr(fUML_Tests_TestCallSender_Value_0_LiteralInteger1244);
				fUML_Tests_TestCallSender_Value_0_LiteralInteger1244->setName("LiteralInteger1244");
				fUML_Tests_TestCallSender_Value_0_LiteralInteger1244->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCallSender_Value_0_LiteralInteger1244->setValue(0);
			fUML_Tests_TestCallSender_Value_0->setValue(fUML_Tests_TestCallSender_Value_0_LiteralInteger1244);
				// OutputPin Value(0).result
				fUML_Tests_TestCallSender_Value_0_Value_0_result->setThisElementPtr(fUML_Tests_TestCallSender_Value_0_Value_0_result);
				fUML_Tests_TestCallSender_Value_0_Value_0_result->setName("Value(0).result");
				fUML_Tests_TestCallSender_Value_0_Value_0_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCallSender_Value_0_Value_0_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestCallSender_Value_0->setResult(fUML_Tests_TestCallSender_Value_0_Value_0_result);
		fUML_Tests_TestCallSender->addNode(fUML_Tests_TestCallSender_Value_0);
			// CreateObjectAction Create(TestCallAccepter)
			fUML_Tests_TestCallSender_Create_TestCallAccepter->setThisExecutableNodePtr(fUML_Tests_TestCallSender_Create_TestCallAccepter);
			fUML_Tests_TestCallSender_Create_TestCallAccepter->setName("Create(TestCallAccepter)");
			fUML_Tests_TestCallSender_Create_TestCallAccepter->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSender_Create_TestCallAccepter->setClassifier(fUML_Tests_TestCallAccepter);
				// OutputPin Create(TestCallAccepter).result
				fUML_Tests_TestCallSender_Create_TestCallAccepter_Create_TestCallAccepter_result->setThisElementPtr(fUML_Tests_TestCallSender_Create_TestCallAccepter_Create_TestCallAccepter_result);
				fUML_Tests_TestCallSender_Create_TestCallAccepter_Create_TestCallAccepter_result->setName("Create(TestCallAccepter).result");
				fUML_Tests_TestCallSender_Create_TestCallAccepter_Create_TestCallAccepter_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSender_Create_TestCallAccepter->setResult(fUML_Tests_TestCallSender_Create_TestCallAccepter_Create_TestCallAccepter_result);
		fUML_Tests_TestCallSender->addNode(fUML_Tests_TestCallSender_Create_TestCallAccepter);
			// ForkNode ForkNode
			fUML_Tests_TestCallSender_ForkNode->setThisElementPtr(fUML_Tests_TestCallSender_ForkNode);
			fUML_Tests_TestCallSender_ForkNode->setName("ForkNode");
			fUML_Tests_TestCallSender_ForkNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestCallSender->addNode(fUML_Tests_TestCallSender_ForkNode);
			// ReadSelfAction ReadSelf
			fUML_Tests_TestCallSender_ReadSelf->setThisExecutableNodePtr(fUML_Tests_TestCallSender_ReadSelf);
			fUML_Tests_TestCallSender_ReadSelf->setName("ReadSelf");
			fUML_Tests_TestCallSender_ReadSelf->setVisibility(VisibilityKind::public_);
				// OutputPin ReadSelf.result
				fUML_Tests_TestCallSender_ReadSelf_ReadSelf_result->setThisElementPtr(fUML_Tests_TestCallSender_ReadSelf_ReadSelf_result);
				fUML_Tests_TestCallSender_ReadSelf_ReadSelf_result->setName("ReadSelf.result");
				fUML_Tests_TestCallSender_ReadSelf_ReadSelf_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSender_ReadSelf->setResult(fUML_Tests_TestCallSender_ReadSelf_ReadSelf_result);
		fUML_Tests_TestCallSender->addNode(fUML_Tests_TestCallSender_ReadSelf);
			// AcceptEventAction Accept(TestSignal)
			fUML_Tests_TestCallSender_Accept_TestSignal->setThisExecutableNodePtr(fUML_Tests_TestCallSender_Accept_TestSignal);
			fUML_Tests_TestCallSender_Accept_TestSignal->setName("Accept(TestSignal)");
			fUML_Tests_TestCallSender_Accept_TestSignal->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCallSender_Accept_TestSignal_Trigger1256->setName("Trigger1256");
				fUML_Tests_TestCallSender_Accept_TestSignal_Trigger1256->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCallSender_Accept_TestSignal_Trigger1256->setEvent(fUML_Tests_SignalEvent1591);
			fUML_Tests_TestCallSender_Accept_TestSignal->addTrigger(fUML_Tests_TestCallSender_Accept_TestSignal_Trigger1256);
		fUML_Tests_TestCallSender->addNode(fUML_Tests_TestCallSender_Accept_TestSignal);
			// StartObjectBehaviorAction Start(TestCallAccepter)
			fUML_Tests_TestCallSender_Start_TestCallAccepter->setThisExecutableNodePtr(fUML_Tests_TestCallSender_Start_TestCallAccepter);
			fUML_Tests_TestCallSender_Start_TestCallAccepter->setName("Start(TestCallAccepter)");
			fUML_Tests_TestCallSender_Start_TestCallAccepter->setVisibility(VisibilityKind::public_);
				// InputPin Start(TestCallAccepter).object
				fUML_Tests_TestCallSender_Start_TestCallAccepter_Start_TestCallAccepter_object->setThisElementPtr(fUML_Tests_TestCallSender_Start_TestCallAccepter_Start_TestCallAccepter_object);
				fUML_Tests_TestCallSender_Start_TestCallAccepter_Start_TestCallAccepter_object->setName("Start(TestCallAccepter).object");
				fUML_Tests_TestCallSender_Start_TestCallAccepter_Start_TestCallAccepter_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSender_Start_TestCallAccepter->setObject(fUML_Tests_TestCallSender_Start_TestCallAccepter_Start_TestCallAccepter_object);
		fUML_Tests_TestCallSender->addNode(fUML_Tests_TestCallSender_Start_TestCallAccepter);
			// CallOperationAction Call(test)
			fUML_Tests_TestCallSender_Call_test->setThisExecutableNodePtr(fUML_Tests_TestCallSender_Call_test);
			fUML_Tests_TestCallSender_Call_test->setName("Call(test)");
			fUML_Tests_TestCallSender_Call_test->setVisibility(VisibilityKind::public_);
				// OutputPin Call(test).output
				fUML_Tests_TestCallSender_Call_test_Call_test_output->setThisElementPtr(fUML_Tests_TestCallSender_Call_test_Call_test_output);
				fUML_Tests_TestCallSender_Call_test_Call_test_output->setName("Call(test).output");
				fUML_Tests_TestCallSender_Call_test_Call_test_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCallSender_Call_test_Call_test_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestCallSender_Call_test->addResult(fUML_Tests_TestCallSender_Call_test_Call_test_output);
			fUML_Tests_TestCallSender_Call_test->setOperation(fUML_Tests_TestCallAccepter_test);
				// InputPin Call(test).target
				fUML_Tests_TestCallSender_Call_test_Call_test_target->setThisElementPtr(fUML_Tests_TestCallSender_Call_test_Call_test_target);
				fUML_Tests_TestCallSender_Call_test_Call_test_target->setName("Call(test).target");
				fUML_Tests_TestCallSender_Call_test_Call_test_target->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCallSender_Call_test_Call_test_target->setType(fUML_Tests_TestCallAccepter);
			fUML_Tests_TestCallSender_Call_test->setTarget(fUML_Tests_TestCallSender_Call_test_Call_test_target);
				// InputPin Call(test).input
				fUML_Tests_TestCallSender_Call_test_Call_test_input->setThisElementPtr(fUML_Tests_TestCallSender_Call_test_Call_test_input);
				fUML_Tests_TestCallSender_Call_test_Call_test_input->setName("Call(test).input");
				fUML_Tests_TestCallSender_Call_test_Call_test_input->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCallSender_Call_test_Call_test_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestCallSender_Call_test->addArgument(fUML_Tests_TestCallSender_Call_test_Call_test_input);
		fUML_Tests_TestCallSender->addNode(fUML_Tests_TestCallSender_Call_test);
			// ActivityFinalNode ActivityFinalNode1251
			fUML_Tests_TestCallSender_ActivityFinalNode1251->setThisElementPtr(fUML_Tests_TestCallSender_ActivityFinalNode1251);
			fUML_Tests_TestCallSender_ActivityFinalNode1251->setName("ActivityFinalNode1251");
			fUML_Tests_TestCallSender_ActivityFinalNode1251->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestCallSender->addNode(fUML_Tests_TestCallSender_ActivityFinalNode1251);
			// ObjectFlow ObjectFlow1242 from ForkNode to Call(test).target
			fUML_Tests_TestCallSender_ObjectFlow1242->setThisActivityEdgePtr(fUML_Tests_TestCallSender_ObjectFlow1242);
			fUML_Tests_TestCallSender_ObjectFlow1242->setName("ObjectFlow1242");
			fUML_Tests_TestCallSender_ObjectFlow1242->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSender_ObjectFlow1242->setSource(fUML_Tests_TestCallSender_ForkNode);
			fUML_Tests_TestCallSender_ObjectFlow1242->setTarget(fUML_Tests_TestCallSender_Call_test_Call_test_target);
		fUML_Tests_TestCallSender->addEdge(fUML_Tests_TestCallSender_ObjectFlow1242);
			// ControlFlow ControlFlow1252 from Accept(TestSignal) to ActivityFinalNode1251
			fUML_Tests_TestCallSender_ControlFlow1252->setThisActivityEdgePtr(fUML_Tests_TestCallSender_ControlFlow1252);
			fUML_Tests_TestCallSender_ControlFlow1252->setName("ControlFlow1252");
			fUML_Tests_TestCallSender_ControlFlow1252->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSender_ControlFlow1252->setSource(fUML_Tests_TestCallSender_Accept_TestSignal);
			fUML_Tests_TestCallSender_ControlFlow1252->setTarget(fUML_Tests_TestCallSender_ActivityFinalNode1251);
		fUML_Tests_TestCallSender->addEdge(fUML_Tests_TestCallSender_ControlFlow1252);
			// ObjectFlow ObjectFlow1245 from Call(test).output to Write(value).value
			fUML_Tests_TestCallSender_ObjectFlow1245->setThisActivityEdgePtr(fUML_Tests_TestCallSender_ObjectFlow1245);
			fUML_Tests_TestCallSender_ObjectFlow1245->setName("ObjectFlow1245");
			fUML_Tests_TestCallSender_ObjectFlow1245->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSender_ObjectFlow1245->setSource(fUML_Tests_TestCallSender_Call_test_Call_test_output);
			fUML_Tests_TestCallSender_ObjectFlow1245->setTarget(fUML_Tests_TestCallSender_Write_value_Write_value_value);
		fUML_Tests_TestCallSender->addEdge(fUML_Tests_TestCallSender_ObjectFlow1245);
			// ObjectFlow ObjectFlow1247 from Value(0).result to Call(test).input
			fUML_Tests_TestCallSender_ObjectFlow1247->setThisActivityEdgePtr(fUML_Tests_TestCallSender_ObjectFlow1247);
			fUML_Tests_TestCallSender_ObjectFlow1247->setName("ObjectFlow1247");
			fUML_Tests_TestCallSender_ObjectFlow1247->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSender_ObjectFlow1247->setSource(fUML_Tests_TestCallSender_Value_0_Value_0_result);
			fUML_Tests_TestCallSender_ObjectFlow1247->setTarget(fUML_Tests_TestCallSender_Call_test_Call_test_input);
		fUML_Tests_TestCallSender->addEdge(fUML_Tests_TestCallSender_ObjectFlow1247);
			// ControlFlow ControlFlow1254 from Start(TestCallAccepter) to Call(test)
			fUML_Tests_TestCallSender_ControlFlow1254->setThisActivityEdgePtr(fUML_Tests_TestCallSender_ControlFlow1254);
			fUML_Tests_TestCallSender_ControlFlow1254->setName("ControlFlow1254");
			fUML_Tests_TestCallSender_ControlFlow1254->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSender_ControlFlow1254->setSource(fUML_Tests_TestCallSender_Start_TestCallAccepter);
			fUML_Tests_TestCallSender_ControlFlow1254->setTarget(fUML_Tests_TestCallSender_Call_test);
		fUML_Tests_TestCallSender->addEdge(fUML_Tests_TestCallSender_ControlFlow1254);
			// ObjectFlow ObjectFlow1257 from Create(TestCallAccepter).result to ForkNode
			fUML_Tests_TestCallSender_ObjectFlow1257->setThisActivityEdgePtr(fUML_Tests_TestCallSender_ObjectFlow1257);
			fUML_Tests_TestCallSender_ObjectFlow1257->setName("ObjectFlow1257");
			fUML_Tests_TestCallSender_ObjectFlow1257->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSender_ObjectFlow1257->setSource(fUML_Tests_TestCallSender_Create_TestCallAccepter_Create_TestCallAccepter_result);
			fUML_Tests_TestCallSender_ObjectFlow1257->setTarget(fUML_Tests_TestCallSender_ForkNode);
		fUML_Tests_TestCallSender->addEdge(fUML_Tests_TestCallSender_ObjectFlow1257);
			// ObjectFlow ObjectFlow1249 from ForkNode to Start(TestCallAccepter).object
			fUML_Tests_TestCallSender_ObjectFlow1249->setThisActivityEdgePtr(fUML_Tests_TestCallSender_ObjectFlow1249);
			fUML_Tests_TestCallSender_ObjectFlow1249->setName("ObjectFlow1249");
			fUML_Tests_TestCallSender_ObjectFlow1249->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSender_ObjectFlow1249->setSource(fUML_Tests_TestCallSender_ForkNode);
			fUML_Tests_TestCallSender_ObjectFlow1249->setTarget(fUML_Tests_TestCallSender_Start_TestCallAccepter_Start_TestCallAccepter_object);
		fUML_Tests_TestCallSender->addEdge(fUML_Tests_TestCallSender_ObjectFlow1249);
			// ObjectFlow ObjectFlow1259 from ReadSelf.result to Write(value).object
			fUML_Tests_TestCallSender_ObjectFlow1259->setThisActivityEdgePtr(fUML_Tests_TestCallSender_ObjectFlow1259);
			fUML_Tests_TestCallSender_ObjectFlow1259->setName("ObjectFlow1259");
			fUML_Tests_TestCallSender_ObjectFlow1259->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSender_ObjectFlow1259->setSource(fUML_Tests_TestCallSender_ReadSelf_ReadSelf_result);
			fUML_Tests_TestCallSender_ObjectFlow1259->setTarget(fUML_Tests_TestCallSender_Write_value_Write_value_object);
		fUML_Tests_TestCallSender->addEdge(fUML_Tests_TestCallSender_ObjectFlow1259);
	fUML_Tests->addPackagedElement(fUML_Tests_TestCallSender);
		// Activity TestAssociationEndWriterReader
		fUML_Tests_TestAssociationEndWriterReader->setThisActivityPtr(fUML_Tests_TestAssociationEndWriterReader);
		fUML_Tests_TestAssociationEndWriterReader->setName("TestAssociationEndWriterReader");
		fUML_Tests_TestAssociationEndWriterReader->setVisibility(VisibilityKind::public_);
			// Parameter object1
			fUML_Tests_TestAssociationEndWriterReader_object1->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_object1);
			fUML_Tests_TestAssociationEndWriterReader_object1->setName("object1");
			fUML_Tests_TestAssociationEndWriterReader_object1->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_object1->setType(fUML_Tests_TestClass);
		fUML_Tests_TestAssociationEndWriterReader->addOwnedParameter(fUML_Tests_TestAssociationEndWriterReader_object1);
			// Parameter object2
			fUML_Tests_TestAssociationEndWriterReader_object2->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_object2);
			fUML_Tests_TestAssociationEndWriterReader_object2->setName("object2");
			fUML_Tests_TestAssociationEndWriterReader_object2->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_object2->setType(fUML_Tests_TestClass);
		fUML_Tests_TestAssociationEndWriterReader->addOwnedParameter(fUML_Tests_TestAssociationEndWriterReader_object2);
			// Parameter object3
			fUML_Tests_TestAssociationEndWriterReader_object3->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_object3);
			fUML_Tests_TestAssociationEndWriterReader_object3->setName("object3");
			fUML_Tests_TestAssociationEndWriterReader_object3->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_object3->setType(fUML_Tests_TestClass);
		fUML_Tests_TestAssociationEndWriterReader->addOwnedParameter(fUML_Tests_TestAssociationEndWriterReader_object3);
			// Parameter output1
			fUML_Tests_TestAssociationEndWriterReader_output1->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_output1);
			fUML_Tests_TestAssociationEndWriterReader_output1->setName("output1");
			fUML_Tests_TestAssociationEndWriterReader_output1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_output1->setUpper(-1);
			fUML_Tests_TestAssociationEndWriterReader_output1->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_output1->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestAssociationEndWriterReader->addOwnedParameter(fUML_Tests_TestAssociationEndWriterReader_output1);
			// Parameter output2
			fUML_Tests_TestAssociationEndWriterReader_output2->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_output2);
			fUML_Tests_TestAssociationEndWriterReader_output2->setName("output2");
			fUML_Tests_TestAssociationEndWriterReader_output2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_output2->setUpper(-1);
			fUML_Tests_TestAssociationEndWriterReader_output2->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_output2->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestAssociationEndWriterReader->addOwnedParameter(fUML_Tests_TestAssociationEndWriterReader_output2);
			// Parameter expected
			fUML_Tests_TestAssociationEndWriterReader_expected->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_expected);
			fUML_Tests_TestAssociationEndWriterReader_expected->setName("expected");
			fUML_Tests_TestAssociationEndWriterReader_expected->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_expected->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_expected->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestAssociationEndWriterReader->addOwnedParameter(fUML_Tests_TestAssociationEndWriterReader_expected);
			// AddStructuralFeatureValueAction Add(end2)-1
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1->setThisExecutableNodePtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1->setName("Add(end2)-1");
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1->setStructuralFeature(fUML_Tests_TestAssociation_end2);
				// InputPin object
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object->setName("object");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1->setObject(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object);
				// InputPin value
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value->setName("value");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1->setValue(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value);
				// OutputPin result
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result->setName("result");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1->setResult(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result);
				// InputPin insertAt
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt->setName("insertAt");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1->setInsertAt(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1);
			// AddStructuralFeatureValueAction Add(end2)-2
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2->setThisExecutableNodePtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2->setName("Add(end2)-2");
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2->setStructuralFeature(fUML_Tests_TestAssociation_end2);
				// InputPin object
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object->setName("object");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2->setObject(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object);
				// InputPin value
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value->setName("value");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2->setValue(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value);
				// OutputPin result
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result->setName("result");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2->setResult(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result);
				// InputPin insertAt
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt->setName("insertAt");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2->setInsertAt(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2);
			// RemoveStructuralFeatureValueAction RemoveAt(end2)
			fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2->setThisExecutableNodePtr(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2->setName("RemoveAt(end2)");
			fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2->setStructuralFeature(fUML_Tests_TestAssociation_end2);
				// InputPin object
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object->setName("object");
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2->setObject(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object);
				// OutputPin result
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result->setName("result");
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2->setResult(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result);
				// InputPin removeAt
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt->setName("removeAt");
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2->setRemoveAt(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2);
			// ValueSpecificationAction Value(2)
			fUML_Tests_TestAssociationEndWriterReader_Value_2->setThisExecutableNodePtr(fUML_Tests_TestAssociationEndWriterReader_Value_2);
			fUML_Tests_TestAssociationEndWriterReader_Value_2->setName("Value(2)");
			fUML_Tests_TestAssociationEndWriterReader_Value_2->setVisibility(VisibilityKind::public_);
				// LiteralUnlimitedNatural LiteralUnlimitedNatural1275
				fUML_Tests_TestAssociationEndWriterReader_Value_2_LiteralUnlimitedNatural1275->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Value_2_LiteralUnlimitedNatural1275);
				fUML_Tests_TestAssociationEndWriterReader_Value_2_LiteralUnlimitedNatural1275->setName("LiteralUnlimitedNatural1275");
				fUML_Tests_TestAssociationEndWriterReader_Value_2_LiteralUnlimitedNatural1275->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Value_2_LiteralUnlimitedNatural1275->setValue(2);
			fUML_Tests_TestAssociationEndWriterReader_Value_2->setValue(fUML_Tests_TestAssociationEndWriterReader_Value_2_LiteralUnlimitedNatural1275);
				// OutputPin result
				fUML_Tests_TestAssociationEndWriterReader_Value_2_result->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Value_2_result);
				fUML_Tests_TestAssociationEndWriterReader_Value_2_result->setName("result");
				fUML_Tests_TestAssociationEndWriterReader_Value_2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Value_2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestAssociationEndWriterReader_Value_2->setResult(fUML_Tests_TestAssociationEndWriterReader_Value_2_result);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_Value_2);
			// ActivityParameterNode output2Node
			fUML_Tests_TestAssociationEndWriterReader_output2Node->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_output2Node);
			fUML_Tests_TestAssociationEndWriterReader_output2Node->setName("output2Node");
			fUML_Tests_TestAssociationEndWriterReader_output2Node->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_output2Node->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_output2Node->setParameter(fUML_Tests_TestAssociationEndWriterReader_output2);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_output2Node);
			// ForkNode ForkNode1323
			fUML_Tests_TestAssociationEndWriterReader_ForkNode1323->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_ForkNode1323);
			fUML_Tests_TestAssociationEndWriterReader_ForkNode1323->setName("ForkNode1323");
			fUML_Tests_TestAssociationEndWriterReader_ForkNode1323->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_ForkNode1323);
			// ActivityParameterNode object3Node
			fUML_Tests_TestAssociationEndWriterReader_object3Node->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_object3Node);
			fUML_Tests_TestAssociationEndWriterReader_object3Node->setName("object3Node");
			fUML_Tests_TestAssociationEndWriterReader_object3Node->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_object3Node->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_object3Node->setParameter(fUML_Tests_TestAssociationEndWriterReader_object3);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_object3Node);
			// ForkNode ForkNode1324
			fUML_Tests_TestAssociationEndWriterReader_ForkNode1324->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_ForkNode1324);
			fUML_Tests_TestAssociationEndWriterReader_ForkNode1324->setName("ForkNode1324");
			fUML_Tests_TestAssociationEndWriterReader_ForkNode1324->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_ForkNode1324);
			// ActivityParameterNode expectedNode
			fUML_Tests_TestAssociationEndWriterReader_expectedNode->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_expectedNode);
			fUML_Tests_TestAssociationEndWriterReader_expectedNode->setName("expectedNode");
			fUML_Tests_TestAssociationEndWriterReader_expectedNode->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_expectedNode->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_expectedNode->setParameter(fUML_Tests_TestAssociationEndWriterReader_expected);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_expectedNode);
			// ActivityParameterNode output1Node
			fUML_Tests_TestAssociationEndWriterReader_output1Node->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_output1Node);
			fUML_Tests_TestAssociationEndWriterReader_output1Node->setName("output1Node");
			fUML_Tests_TestAssociationEndWriterReader_output1Node->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_output1Node->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_output1Node->setParameter(fUML_Tests_TestAssociationEndWriterReader_output1);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_output1Node);
			// AddStructuralFeatureValueAction Add(end2)-3
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3->setThisExecutableNodePtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3->setName("Add(end2)-3");
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3->setStructuralFeature(fUML_Tests_TestAssociation_end2);
				// InputPin object
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object->setName("object");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3->setObject(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object);
				// InputPin value
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value->setName("value");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3->setValue(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value);
				// OutputPin result
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result->setName("result");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3->setResult(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result);
				// InputPin insertAt
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt->setName("insertAt");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3->setInsertAt(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3);
			// ForkNode ForkNode1290
			fUML_Tests_TestAssociationEndWriterReader_ForkNode1290->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_ForkNode1290);
			fUML_Tests_TestAssociationEndWriterReader_ForkNode1290->setName("ForkNode1290");
			fUML_Tests_TestAssociationEndWriterReader_ForkNode1290->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_ForkNode1290);
			// ForkNode ForkNode1291
			fUML_Tests_TestAssociationEndWriterReader_ForkNode1291->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_ForkNode1291);
			fUML_Tests_TestAssociationEndWriterReader_ForkNode1291->setName("ForkNode1291");
			fUML_Tests_TestAssociationEndWriterReader_ForkNode1291->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_ForkNode1291);
			// RemoveStructuralFeatureValueAction RemoveAll(end2)
			fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2->setThisExecutableNodePtr(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2->setName("RemoveAll(end2)");
			fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2->setStructuralFeature(fUML_Tests_TestAssociation_end2);
				// InputPin object
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object->setName("object");
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2->setObject(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object);
				// InputPin value
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value->setName("value");
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2->setValue(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value);
				// OutputPin result
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result->setName("result");
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2->setResult(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2->setIsRemoveDuplicates(true);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2);
			// ActivityParameterNode object1Node
			fUML_Tests_TestAssociationEndWriterReader_object1Node->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_object1Node);
			fUML_Tests_TestAssociationEndWriterReader_object1Node->setName("object1Node");
			fUML_Tests_TestAssociationEndWriterReader_object1Node->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_object1Node->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_object1Node->setParameter(fUML_Tests_TestAssociationEndWriterReader_object1);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_object1Node);
			// ActivityParameterNode object2Node
			fUML_Tests_TestAssociationEndWriterReader_object2Node->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_object2Node);
			fUML_Tests_TestAssociationEndWriterReader_object2Node->setName("object2Node");
			fUML_Tests_TestAssociationEndWriterReader_object2Node->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_object2Node->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_object2Node->setParameter(fUML_Tests_TestAssociationEndWriterReader_object2);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_object2Node);
			// ValueSpecificationAction Value(*)
			fUML_Tests_TestAssociationEndWriterReader_Value_times->setThisExecutableNodePtr(fUML_Tests_TestAssociationEndWriterReader_Value_times);
			fUML_Tests_TestAssociationEndWriterReader_Value_times->setName("Value(*)");
			fUML_Tests_TestAssociationEndWriterReader_Value_times->setVisibility(VisibilityKind::public_);
				// LiteralUnlimitedNatural LiteralUnlimitedNatural1298
				fUML_Tests_TestAssociationEndWriterReader_Value_times_LiteralUnlimitedNatural1298->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Value_times_LiteralUnlimitedNatural1298);
				fUML_Tests_TestAssociationEndWriterReader_Value_times_LiteralUnlimitedNatural1298->setName("LiteralUnlimitedNatural1298");
				fUML_Tests_TestAssociationEndWriterReader_Value_times_LiteralUnlimitedNatural1298->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Value_times_LiteralUnlimitedNatural1298->setValue(-1);
			fUML_Tests_TestAssociationEndWriterReader_Value_times->setValue(fUML_Tests_TestAssociationEndWriterReader_Value_times_LiteralUnlimitedNatural1298);
				// OutputPin result
				fUML_Tests_TestAssociationEndWriterReader_Value_times_result->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Value_times_result);
				fUML_Tests_TestAssociationEndWriterReader_Value_times_result->setName("result");
				fUML_Tests_TestAssociationEndWriterReader_Value_times_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Value_times->setResult(fUML_Tests_TestAssociationEndWriterReader_Value_times_result);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_Value_times);
			// ReadStructuralFeatureAction Read(end2)-1
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1->setThisExecutableNodePtr(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1);
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1->setName("Read(end2)-1");
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1->setStructuralFeature(fUML_Tests_TestAssociation_end2);
				// InputPin object
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object->setName("object");
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1->setObject(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object);
				// OutputPin result
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result->setName("result");
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result->setType(fUML_Tests_TestClass);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result->setUpper(-1);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result->setLower(0);
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1->setResult(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1);
			// ReadStructuralFeatureAction Read(end2)-2
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2->setThisExecutableNodePtr(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2);
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2->setName("Read(end2)-2");
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2->setStructuralFeature(fUML_Tests_TestAssociation_end2);
				// InputPin object
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object->setName("object");
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2->setObject(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object);
				// OutputPin result
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result->setName("result");
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result->setType(fUML_Tests_TestClass);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result->setUpper(-1);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result->setLower(0);
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2->setResult(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2);
			// ObjectFlow ObjectFlow1269 from object1Node to object
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1269->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1269);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1269->setName("ObjectFlow1269");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1269->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1269->setSource(fUML_Tests_TestAssociationEndWriterReader_object1Node);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1269->setTarget(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1269);
			// ObjectFlow ObjectFlow1271 from object2Node to ForkNode1324
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1271->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1271);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1271->setName("ObjectFlow1271");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1271->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1271->setSource(fUML_Tests_TestAssociationEndWriterReader_object2Node);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1271->setTarget(fUML_Tests_TestAssociationEndWriterReader_ForkNode1324);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1271);
			// ObjectFlow ObjectFlow1276 from result to object
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1276->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1276);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1276->setName("ObjectFlow1276");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1276->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1276->setSource(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1276->setTarget(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1276);
			// ObjectFlow ObjectFlow1278 from result to object
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1278->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1278);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1278->setName("ObjectFlow1278");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1278->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1278->setSource(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1278->setTarget(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1278);
			// ObjectFlow ObjectFlow1282 from ForkNode1324 to value
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1282->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1282);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1282->setName("ObjectFlow1282");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1282->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1282->setSource(fUML_Tests_TestAssociationEndWriterReader_ForkNode1324);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1282->setTarget(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1282);
			// ControlFlow ControlFlow1325 from Read(end2)-1 to RemoveAt(end2)
			fUML_Tests_TestAssociationEndWriterReader_ControlFlow1325->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ControlFlow1325);
			fUML_Tests_TestAssociationEndWriterReader_ControlFlow1325->setName("ControlFlow1325");
			fUML_Tests_TestAssociationEndWriterReader_ControlFlow1325->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ControlFlow1325->setSource(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1);
			fUML_Tests_TestAssociationEndWriterReader_ControlFlow1325->setTarget(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ControlFlow1325);
			// ObjectFlow ObjectFlow1284 from ForkNode1324 to value
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1284->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1284);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1284->setName("ObjectFlow1284");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1284->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1284->setSource(fUML_Tests_TestAssociationEndWriterReader_ForkNode1324);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1284->setTarget(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1284);
			// ObjectFlow ObjectFlow1286 from result to output2Node
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1286->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1286);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1286->setName("ObjectFlow1286");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1286->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1286->setSource(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1286->setTarget(fUML_Tests_TestAssociationEndWriterReader_output2Node);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1286);
			// ObjectFlow ObjectFlow1288 from object3Node to ForkNode1290
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1288->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1288);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1288->setName("ObjectFlow1288");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1288->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1288->setSource(fUML_Tests_TestAssociationEndWriterReader_object3Node);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1288->setTarget(fUML_Tests_TestAssociationEndWriterReader_ForkNode1290);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1288);
			// ObjectFlow ObjectFlow1329 from ForkNode1323 to insertAt
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1329->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1329);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1329->setName("ObjectFlow1329");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1329->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1329->setSource(fUML_Tests_TestAssociationEndWriterReader_ForkNode1323);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1329->setTarget(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1329);
			// ObjectFlow ObjectFlow1339 from result to ForkNode1291
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1339->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1339);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1339->setName("ObjectFlow1339");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1339->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1339->setSource(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1339->setTarget(fUML_Tests_TestAssociationEndWriterReader_ForkNode1291);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1339);
			// ObjectFlow ObjectFlow1292 from result to removeAt
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1292->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1292);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1292->setName("ObjectFlow1292");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1292->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1292->setSource(fUML_Tests_TestAssociationEndWriterReader_Value_2_result);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1292->setTarget(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1292);
			// ObjectFlow ObjectFlow1349 from result to output1Node
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1349->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1349);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1349->setName("ObjectFlow1349");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1349->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1349->setSource(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1349->setTarget(fUML_Tests_TestAssociationEndWriterReader_output1Node);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1349);
			// ObjectFlow ObjectFlow1294 from ForkNode1291 to object
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1294->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1294);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1294->setName("ObjectFlow1294");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1294->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1294->setSource(fUML_Tests_TestAssociationEndWriterReader_ForkNode1291);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1294->setTarget(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1294);
			// ObjectFlow ObjectFlow1296 from ForkNode1323 to insertAt
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1296->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1296);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1296->setName("ObjectFlow1296");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1296->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1296->setSource(fUML_Tests_TestAssociationEndWriterReader_ForkNode1323);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1296->setTarget(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1296);
			// ObjectFlow ObjectFlow1351 from ForkNode1291 to object
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1351->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1351);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1351->setName("ObjectFlow1351");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1351->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1351->setSource(fUML_Tests_TestAssociationEndWriterReader_ForkNode1291);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1351->setTarget(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1351);
			// ObjectFlow ObjectFlow1299 from ForkNode1323 to insertAt
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1299->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1299);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1299->setName("ObjectFlow1299");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1299->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1299->setSource(fUML_Tests_TestAssociationEndWriterReader_ForkNode1323);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1299->setTarget(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1299);
			// ObjectFlow ObjectFlow1353 from result to ForkNode1323
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1353->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1353);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1353->setName("ObjectFlow1353");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1353->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1353->setSource(fUML_Tests_TestAssociationEndWriterReader_Value_times_result);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1353->setTarget(fUML_Tests_TestAssociationEndWriterReader_ForkNode1323);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1353);
			// ObjectFlow ObjectFlow1355 from ForkNode1290 to value
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1355->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1355);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1355->setName("ObjectFlow1355");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1355->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1355->setSource(fUML_Tests_TestAssociationEndWriterReader_ForkNode1290);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1355->setTarget(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1355);
			// ObjectFlow ObjectFlow1305 from result to object
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1305->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1305);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1305->setName("ObjectFlow1305");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1305->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1305->setSource(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1305->setTarget(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1305);
			// ObjectFlow ObjectFlow1357 from ForkNode1324 to expectedNode
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1357->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1357);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1357->setName("ObjectFlow1357");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1357->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1357->setSource(fUML_Tests_TestAssociationEndWriterReader_ForkNode1324);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1357->setTarget(fUML_Tests_TestAssociationEndWriterReader_expectedNode);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1357);
			// ObjectFlow ObjectFlow1307 from ForkNode1290 to value
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1307->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1307);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1307->setName("ObjectFlow1307");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1307->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1307->setSource(fUML_Tests_TestAssociationEndWriterReader_ForkNode1290);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1307->setTarget(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1307);
			// ObjectFlow ObjectFlow1363 from result to object
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1363->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1363);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1363->setName("ObjectFlow1363");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1363->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1363->setSource(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1363->setTarget(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow1363);
	fUML_Tests->addPackagedElement(fUML_Tests_TestAssociationEndWriterReader);
		// Activity ForkMerge
		fUML_Tests_ForkMerge->setThisActivityPtr(fUML_Tests_ForkMerge);
		fUML_Tests_ForkMerge->setName("ForkMerge");
		fUML_Tests_ForkMerge->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkMerge->isReentrant = false;
			// Parameter output
			fUML_Tests_ForkMerge_output->setThisElementPtr(fUML_Tests_ForkMerge_output);
			fUML_Tests_ForkMerge_output->setName("output");
			fUML_Tests_ForkMerge_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_ForkMerge_output->setUpper(-1);
			fUML_Tests_ForkMerge_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_ForkMerge_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_ForkMerge->addOwnedParameter(fUML_Tests_ForkMerge_output);
			// ValueSpecificationAction Value(0)
			fUML_Tests_ForkMerge_Value_0->setThisExecutableNodePtr(fUML_Tests_ForkMerge_Value_0);
			fUML_Tests_ForkMerge_Value_0->setName("Value(0)");
			fUML_Tests_ForkMerge_Value_0->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1369
				fUML_Tests_ForkMerge_Value_0_LiteralInteger1369->setThisElementPtr(fUML_Tests_ForkMerge_Value_0_LiteralInteger1369);
				fUML_Tests_ForkMerge_Value_0_LiteralInteger1369->setName("LiteralInteger1369");
				fUML_Tests_ForkMerge_Value_0_LiteralInteger1369->setVisibility(VisibilityKind::public_);
				fUML_Tests_ForkMerge_Value_0_LiteralInteger1369->setValue(0);
			fUML_Tests_ForkMerge_Value_0->setValue(fUML_Tests_ForkMerge_Value_0_LiteralInteger1369);
				// OutputPin Value(0).result
				fUML_Tests_ForkMerge_Value_0_Value_0_result->setThisElementPtr(fUML_Tests_ForkMerge_Value_0_Value_0_result);
				fUML_Tests_ForkMerge_Value_0_Value_0_result->setName("Value(0).result");
				fUML_Tests_ForkMerge_Value_0_Value_0_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_ForkMerge_Value_0_Value_0_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_ForkMerge_Value_0->setResult(fUML_Tests_ForkMerge_Value_0_Value_0_result);
		fUML_Tests_ForkMerge->addNode(fUML_Tests_ForkMerge_Value_0);
			// InitialNode InitialNode
			fUML_Tests_ForkMerge_InitialNode->setThisElementPtr(fUML_Tests_ForkMerge_InitialNode);
			fUML_Tests_ForkMerge_InitialNode->setName("InitialNode");
			fUML_Tests_ForkMerge_InitialNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkMerge->addNode(fUML_Tests_ForkMerge_InitialNode);
			// MergeNode MergeNode
			fUML_Tests_ForkMerge_MergeNode->setThisElementPtr(fUML_Tests_ForkMerge_MergeNode);
			fUML_Tests_ForkMerge_MergeNode->setName("MergeNode");
			fUML_Tests_ForkMerge_MergeNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkMerge->addNode(fUML_Tests_ForkMerge_MergeNode);
			// ActivityParameterNode OutputNode
			fUML_Tests_ForkMerge_OutputNode->setThisElementPtr(fUML_Tests_ForkMerge_OutputNode);
			fUML_Tests_ForkMerge_OutputNode->setName("OutputNode");
			fUML_Tests_ForkMerge_OutputNode->setVisibility(VisibilityKind::public_);
			fUML_Tests_ForkMerge_OutputNode->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_ForkMerge_OutputNode->setParameter(fUML_Tests_ForkMerge_output);
		fUML_Tests_ForkMerge->addNode(fUML_Tests_ForkMerge_OutputNode);
			// ForkNode ForkNode
			fUML_Tests_ForkMerge_ForkNode->setThisElementPtr(fUML_Tests_ForkMerge_ForkNode);
			fUML_Tests_ForkMerge_ForkNode->setName("ForkNode");
			fUML_Tests_ForkMerge_ForkNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkMerge->addNode(fUML_Tests_ForkMerge_ForkNode);
			// ControlFlow ControlFlow1365 from MergeNode to Value(0)
			fUML_Tests_ForkMerge_ControlFlow1365->setThisActivityEdgePtr(fUML_Tests_ForkMerge_ControlFlow1365);
			fUML_Tests_ForkMerge_ControlFlow1365->setName("ControlFlow1365");
			fUML_Tests_ForkMerge_ControlFlow1365->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMerge_ControlFlow1365->setSource(fUML_Tests_ForkMerge_MergeNode);
			fUML_Tests_ForkMerge_ControlFlow1365->setTarget(fUML_Tests_ForkMerge_Value_0);
		fUML_Tests_ForkMerge->addEdge(fUML_Tests_ForkMerge_ControlFlow1365);
			// ControlFlow ControlFlow1370 from InitialNode to ForkNode
			fUML_Tests_ForkMerge_ControlFlow1370->setThisActivityEdgePtr(fUML_Tests_ForkMerge_ControlFlow1370);
			fUML_Tests_ForkMerge_ControlFlow1370->setName("ControlFlow1370");
			fUML_Tests_ForkMerge_ControlFlow1370->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMerge_ControlFlow1370->setSource(fUML_Tests_ForkMerge_InitialNode);
			fUML_Tests_ForkMerge_ControlFlow1370->setTarget(fUML_Tests_ForkMerge_ForkNode);
		fUML_Tests_ForkMerge->addEdge(fUML_Tests_ForkMerge_ControlFlow1370);
			// ControlFlow ControlFlow1372 from ForkNode to MergeNode
			fUML_Tests_ForkMerge_ControlFlow1372->setThisActivityEdgePtr(fUML_Tests_ForkMerge_ControlFlow1372);
			fUML_Tests_ForkMerge_ControlFlow1372->setName("ControlFlow1372");
			fUML_Tests_ForkMerge_ControlFlow1372->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMerge_ControlFlow1372->setSource(fUML_Tests_ForkMerge_ForkNode);
			fUML_Tests_ForkMerge_ControlFlow1372->setTarget(fUML_Tests_ForkMerge_MergeNode);
		fUML_Tests_ForkMerge->addEdge(fUML_Tests_ForkMerge_ControlFlow1372);
			// ControlFlow ControlFlow1374 from ForkNode to MergeNode
			fUML_Tests_ForkMerge_ControlFlow1374->setThisActivityEdgePtr(fUML_Tests_ForkMerge_ControlFlow1374);
			fUML_Tests_ForkMerge_ControlFlow1374->setName("ControlFlow1374");
			fUML_Tests_ForkMerge_ControlFlow1374->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMerge_ControlFlow1374->setSource(fUML_Tests_ForkMerge_ForkNode);
			fUML_Tests_ForkMerge_ControlFlow1374->setTarget(fUML_Tests_ForkMerge_MergeNode);
		fUML_Tests_ForkMerge->addEdge(fUML_Tests_ForkMerge_ControlFlow1374);
			// ObjectFlow ObjectFlow1376 from Value(0).result to OutputNode
			fUML_Tests_ForkMerge_ObjectFlow1376->setThisActivityEdgePtr(fUML_Tests_ForkMerge_ObjectFlow1376);
			fUML_Tests_ForkMerge_ObjectFlow1376->setName("ObjectFlow1376");
			fUML_Tests_ForkMerge_ObjectFlow1376->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMerge_ObjectFlow1376->setSource(fUML_Tests_ForkMerge_Value_0_Value_0_result);
			fUML_Tests_ForkMerge_ObjectFlow1376->setTarget(fUML_Tests_ForkMerge_OutputNode);
		fUML_Tests_ForkMerge->addEdge(fUML_Tests_ForkMerge_ObjectFlow1376);
	fUML_Tests->addPackagedElement(fUML_Tests_ForkMerge);
		// Activity HelloWorld
		fUML_Tests_HelloWorld->setThisActivityPtr(fUML_Tests_HelloWorld);
		fUML_Tests_HelloWorld->setName("HelloWorld");
		fUML_Tests_HelloWorld->setVisibility(VisibilityKind::public_);
		fUML_Tests_HelloWorld->isReentrant = false;
			// ValueSpecificationAction Value(\"Hello World!\")
			fUML_Tests_HelloWorld_Value_Hello_World_->setThisExecutableNodePtr(fUML_Tests_HelloWorld_Value_Hello_World_);
			fUML_Tests_HelloWorld_Value_Hello_World_->setName("Value(\"Hello World!\")");
			fUML_Tests_HelloWorld_Value_Hello_World_->setVisibility(VisibilityKind::public_);
				// LiteralString LiteralString1380
				fUML_Tests_HelloWorld_Value_Hello_World__LiteralString1380->setThisElementPtr(fUML_Tests_HelloWorld_Value_Hello_World__LiteralString1380);
				fUML_Tests_HelloWorld_Value_Hello_World__LiteralString1380->setName("LiteralString1380");
				fUML_Tests_HelloWorld_Value_Hello_World__LiteralString1380->setVisibility(VisibilityKind::public_);
				fUML_Tests_HelloWorld_Value_Hello_World__LiteralString1380->setValue("Hello World");
			fUML_Tests_HelloWorld_Value_Hello_World_->setValue(fUML_Tests_HelloWorld_Value_Hello_World__LiteralString1380);
				// OutputPin Value.result
				fUML_Tests_HelloWorld_Value_Hello_World__Value_result->setThisElementPtr(fUML_Tests_HelloWorld_Value_Hello_World__Value_result);
				fUML_Tests_HelloWorld_Value_Hello_World__Value_result->setName("Value.result");
				fUML_Tests_HelloWorld_Value_Hello_World__Value_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_HelloWorld_Value_Hello_World__Value_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_HelloWorld_Value_Hello_World_->setResult(fUML_Tests_HelloWorld_Value_Hello_World__Value_result);
		fUML_Tests_HelloWorld->addNode(fUML_Tests_HelloWorld_Value_Hello_World_);
			// CallBehaviorAction WriteLine
			fUML_Tests_HelloWorld_WriteLine->setThisExecutableNodePtr(fUML_Tests_HelloWorld_WriteLine);
			fUML_Tests_HelloWorld_WriteLine->setName("WriteLine");
			fUML_Tests_HelloWorld_WriteLine->setVisibility(VisibilityKind::public_);
				// OutputPin WriteLine.errorStatus
				fUML_Tests_HelloWorld_WriteLine_WriteLine_errorStatus->setThisElementPtr(fUML_Tests_HelloWorld_WriteLine_WriteLine_errorStatus);
				fUML_Tests_HelloWorld_WriteLine_WriteLine_errorStatus->setName("WriteLine.errorStatus");
				fUML_Tests_HelloWorld_WriteLine_WriteLine_errorStatus->setVisibility(VisibilityKind::public_);
				fUML_Tests_HelloWorld_WriteLine_WriteLine_errorStatus->setType(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_Common_Status);
			fUML_Tests_HelloWorld_WriteLine->addResult(fUML_Tests_HelloWorld_WriteLine_WriteLine_errorStatus);
			fUML_Tests_HelloWorld_WriteLine->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_BasicInputOutput_WriteLine);
				// InputPin WriteLine.value
				fUML_Tests_HelloWorld_WriteLine_WriteLine_value->setThisElementPtr(fUML_Tests_HelloWorld_WriteLine_WriteLine_value);
				fUML_Tests_HelloWorld_WriteLine_WriteLine_value->setName("WriteLine.value");
				fUML_Tests_HelloWorld_WriteLine_WriteLine_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_HelloWorld_WriteLine_WriteLine_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_HelloWorld_WriteLine->addArgument(fUML_Tests_HelloWorld_WriteLine_WriteLine_value);
		fUML_Tests_HelloWorld->addNode(fUML_Tests_HelloWorld_WriteLine);
			// ObjectFlow ObjectFlow1381 from Value.result to WriteLine.value
			fUML_Tests_HelloWorld_ObjectFlow1381->setThisActivityEdgePtr(fUML_Tests_HelloWorld_ObjectFlow1381);
			fUML_Tests_HelloWorld_ObjectFlow1381->setName("ObjectFlow1381");
			fUML_Tests_HelloWorld_ObjectFlow1381->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_HelloWorld_ObjectFlow1381->setSource(fUML_Tests_HelloWorld_Value_Hello_World__Value_result);
			fUML_Tests_HelloWorld_ObjectFlow1381->setTarget(fUML_Tests_HelloWorld_WriteLine_WriteLine_value);
		fUML_Tests_HelloWorld->addEdge(fUML_Tests_HelloWorld_ObjectFlow1381);
	fUML_Tests->addPackagedElement(fUML_Tests_HelloWorld);
		// Activity TestRealComparisonFunctions
		fUML_Tests_TestRealComparisonFunctions->setThisActivityPtr(fUML_Tests_TestRealComparisonFunctions);
		fUML_Tests_TestRealComparisonFunctions->setName("TestRealComparisonFunctions");
		fUML_Tests_TestRealComparisonFunctions->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestRealComparisonFunctions->isReentrant = false;
			// Parameter LTResult
			fUML_Tests_TestRealComparisonFunctions_LTResult->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_LTResult);
			fUML_Tests_TestRealComparisonFunctions_LTResult->setName("LTResult");
			fUML_Tests_TestRealComparisonFunctions_LTResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_LTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_LTResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealComparisonFunctions->addOwnedParameter(fUML_Tests_TestRealComparisonFunctions_LTResult);
			// Parameter LEResult
			fUML_Tests_TestRealComparisonFunctions_LEResult->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_LEResult);
			fUML_Tests_TestRealComparisonFunctions_LEResult->setName("LEResult");
			fUML_Tests_TestRealComparisonFunctions_LEResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_LEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_LEResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealComparisonFunctions->addOwnedParameter(fUML_Tests_TestRealComparisonFunctions_LEResult);
			// Parameter GTResult
			fUML_Tests_TestRealComparisonFunctions_GTResult->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_GTResult);
			fUML_Tests_TestRealComparisonFunctions_GTResult->setName("GTResult");
			fUML_Tests_TestRealComparisonFunctions_GTResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_GTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_GTResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealComparisonFunctions->addOwnedParameter(fUML_Tests_TestRealComparisonFunctions_GTResult);
			// Parameter GEResult
			fUML_Tests_TestRealComparisonFunctions_GEResult->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_GEResult);
			fUML_Tests_TestRealComparisonFunctions_GEResult->setName("GEResult");
			fUML_Tests_TestRealComparisonFunctions_GEResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_GEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_GEResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealComparisonFunctions->addOwnedParameter(fUML_Tests_TestRealComparisonFunctions_GEResult);
			// ForkNode Fork(3.0)
			fUML_Tests_TestRealComparisonFunctions_Fork_3_0->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Fork_3_0);
			fUML_Tests_TestRealComparisonFunctions_Fork_3_0->setName("Fork(3.0)");
			fUML_Tests_TestRealComparisonFunctions_Fork_3_0->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Fork_3_0);
			// CallBehaviorAction Call(LT)
			fUML_Tests_TestRealComparisonFunctions_Call_LT->setThisExecutableNodePtr(fUML_Tests_TestRealComparisonFunctions_Call_LT);
			fUML_Tests_TestRealComparisonFunctions_Call_LT->setName("Call(LT)");
			fUML_Tests_TestRealComparisonFunctions_Call_LT->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestRealComparisonFunctions_Call_LT_result->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_LT_result);
				fUML_Tests_TestRealComparisonFunctions_Call_LT_result->setName("result");
				fUML_Tests_TestRealComparisonFunctions_Call_LT_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_LT_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_Call_LT->addResult(fUML_Tests_TestRealComparisonFunctions_Call_LT_result);
			fUML_Tests_TestRealComparisonFunctions_Call_LT->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_lessThan);
				// InputPin x
				fUML_Tests_TestRealComparisonFunctions_Call_LT_x->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_LT_x);
				fUML_Tests_TestRealComparisonFunctions_Call_LT_x->setName("x");
				fUML_Tests_TestRealComparisonFunctions_Call_LT_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_LT_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealComparisonFunctions_Call_LT->addArgument(fUML_Tests_TestRealComparisonFunctions_Call_LT_x);
				// InputPin y
				fUML_Tests_TestRealComparisonFunctions_Call_LT_y->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_LT_y);
				fUML_Tests_TestRealComparisonFunctions_Call_LT_y->setName("y");
				fUML_Tests_TestRealComparisonFunctions_Call_LT_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_LT_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealComparisonFunctions_Call_LT->addArgument(fUML_Tests_TestRealComparisonFunctions_Call_LT_y);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Call_LT);
			// CallBehaviorAction Call(LE)
			fUML_Tests_TestRealComparisonFunctions_Call_LE->setThisExecutableNodePtr(fUML_Tests_TestRealComparisonFunctions_Call_LE);
			fUML_Tests_TestRealComparisonFunctions_Call_LE->setName("Call(LE)");
			fUML_Tests_TestRealComparisonFunctions_Call_LE->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestRealComparisonFunctions_Call_LE_result->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_LE_result);
				fUML_Tests_TestRealComparisonFunctions_Call_LE_result->setName("result");
				fUML_Tests_TestRealComparisonFunctions_Call_LE_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_LE_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_Call_LE->addResult(fUML_Tests_TestRealComparisonFunctions_Call_LE_result);
			fUML_Tests_TestRealComparisonFunctions_Call_LE->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_lessOrEqual);
				// InputPin x
				fUML_Tests_TestRealComparisonFunctions_Call_LE_x->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_LE_x);
				fUML_Tests_TestRealComparisonFunctions_Call_LE_x->setName("x");
				fUML_Tests_TestRealComparisonFunctions_Call_LE_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_LE_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealComparisonFunctions_Call_LE->addArgument(fUML_Tests_TestRealComparisonFunctions_Call_LE_x);
				// InputPin y
				fUML_Tests_TestRealComparisonFunctions_Call_LE_y->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_LE_y);
				fUML_Tests_TestRealComparisonFunctions_Call_LE_y->setName("y");
				fUML_Tests_TestRealComparisonFunctions_Call_LE_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_LE_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealComparisonFunctions_Call_LE->addArgument(fUML_Tests_TestRealComparisonFunctions_Call_LE_y);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Call_LE);
			// ActivityParameterNode Param(LEResult)
			fUML_Tests_TestRealComparisonFunctions_Param_LEResult->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Param_LEResult);
			fUML_Tests_TestRealComparisonFunctions_Param_LEResult->setName("Param(LEResult)");
			fUML_Tests_TestRealComparisonFunctions_Param_LEResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealComparisonFunctions_Param_LEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_Param_LEResult->setParameter(fUML_Tests_TestRealComparisonFunctions_LEResult);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Param_LEResult);
			// ActivityParameterNode Param(GTResult)
			fUML_Tests_TestRealComparisonFunctions_Param_GTResult->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Param_GTResult);
			fUML_Tests_TestRealComparisonFunctions_Param_GTResult->setName("Param(GTResult)");
			fUML_Tests_TestRealComparisonFunctions_Param_GTResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealComparisonFunctions_Param_GTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_Param_GTResult->setParameter(fUML_Tests_TestRealComparisonFunctions_GTResult);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Param_GTResult);
			// ForkNode Fork(2.0)
			fUML_Tests_TestRealComparisonFunctions_Fork_2_0->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Fork_2_0);
			fUML_Tests_TestRealComparisonFunctions_Fork_2_0->setName("Fork(2.0)");
			fUML_Tests_TestRealComparisonFunctions_Fork_2_0->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Fork_2_0);
			// ActivityParameterNode Param(GEResult)
			fUML_Tests_TestRealComparisonFunctions_Param_GEResult->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Param_GEResult);
			fUML_Tests_TestRealComparisonFunctions_Param_GEResult->setName("Param(GEResult)");
			fUML_Tests_TestRealComparisonFunctions_Param_GEResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealComparisonFunctions_Param_GEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_Param_GEResult->setParameter(fUML_Tests_TestRealComparisonFunctions_GEResult);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Param_GEResult);
			// ValueSpecificationAction Value(3.0)
			fUML_Tests_TestRealComparisonFunctions_Value_3_0->setThisExecutableNodePtr(fUML_Tests_TestRealComparisonFunctions_Value_3_0);
			fUML_Tests_TestRealComparisonFunctions_Value_3_0->setName("Value(3.0)");
			fUML_Tests_TestRealComparisonFunctions_Value_3_0->setVisibility(VisibilityKind::public_);
				// LiteralReal LiteralReal1399
				fUML_Tests_TestRealComparisonFunctions_Value_3_0_LiteralReal1399->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Value_3_0_LiteralReal1399);
				fUML_Tests_TestRealComparisonFunctions_Value_3_0_LiteralReal1399->setName("LiteralReal1399");
				fUML_Tests_TestRealComparisonFunctions_Value_3_0_LiteralReal1399->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Value_3_0_LiteralReal1399->setValue(3.0f);
			fUML_Tests_TestRealComparisonFunctions_Value_3_0->setValue(fUML_Tests_TestRealComparisonFunctions_Value_3_0_LiteralReal1399);
				// OutputPin Value(3.0).result
				fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result);
				fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result->setName("Value(3.0).result");
				fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealComparisonFunctions_Value_3_0->setResult(fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Value_3_0);
			// ValueSpecificationAction Value(2.0)
			fUML_Tests_TestRealComparisonFunctions_Value_2_0->setThisExecutableNodePtr(fUML_Tests_TestRealComparisonFunctions_Value_2_0);
			fUML_Tests_TestRealComparisonFunctions_Value_2_0->setName("Value(2.0)");
			fUML_Tests_TestRealComparisonFunctions_Value_2_0->setVisibility(VisibilityKind::public_);
				// LiteralReal LiteralReal1442
				fUML_Tests_TestRealComparisonFunctions_Value_2_0_LiteralReal1442->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Value_2_0_LiteralReal1442);
				fUML_Tests_TestRealComparisonFunctions_Value_2_0_LiteralReal1442->setName("LiteralReal1442");
				fUML_Tests_TestRealComparisonFunctions_Value_2_0_LiteralReal1442->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Value_2_0_LiteralReal1442->setValue(2.0f);
			fUML_Tests_TestRealComparisonFunctions_Value_2_0->setValue(fUML_Tests_TestRealComparisonFunctions_Value_2_0_LiteralReal1442);
				// OutputPin Value(2.0).result
				fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result);
				fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result->setName("Value(2.0).result");
				fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestRealComparisonFunctions_Value_2_0->setResult(fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Value_2_0);
			// ActivityParameterNode Param(LTResult)
			fUML_Tests_TestRealComparisonFunctions_Param_LTResult->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Param_LTResult);
			fUML_Tests_TestRealComparisonFunctions_Param_LTResult->setName("Param(LTResult)");
			fUML_Tests_TestRealComparisonFunctions_Param_LTResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealComparisonFunctions_Param_LTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_Param_LTResult->setParameter(fUML_Tests_TestRealComparisonFunctions_LTResult);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Param_LTResult);
			// CallBehaviorAction Call(GT)
			fUML_Tests_TestRealComparisonFunctions_Call_GT->setThisExecutableNodePtr(fUML_Tests_TestRealComparisonFunctions_Call_GT);
			fUML_Tests_TestRealComparisonFunctions_Call_GT->setName("Call(GT)");
			fUML_Tests_TestRealComparisonFunctions_Call_GT->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestRealComparisonFunctions_Call_GT_result->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_GT_result);
				fUML_Tests_TestRealComparisonFunctions_Call_GT_result->setName("result");
				fUML_Tests_TestRealComparisonFunctions_Call_GT_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_GT_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_Call_GT->addResult(fUML_Tests_TestRealComparisonFunctions_Call_GT_result);
			fUML_Tests_TestRealComparisonFunctions_Call_GT->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_greaterThan);
				// InputPin x
				fUML_Tests_TestRealComparisonFunctions_Call_GT_x->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_GT_x);
				fUML_Tests_TestRealComparisonFunctions_Call_GT_x->setName("x");
				fUML_Tests_TestRealComparisonFunctions_Call_GT_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_GT_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealComparisonFunctions_Call_GT->addArgument(fUML_Tests_TestRealComparisonFunctions_Call_GT_x);
				// InputPin y
				fUML_Tests_TestRealComparisonFunctions_Call_GT_y->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_GT_y);
				fUML_Tests_TestRealComparisonFunctions_Call_GT_y->setName("y");
				fUML_Tests_TestRealComparisonFunctions_Call_GT_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_GT_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealComparisonFunctions_Call_GT->addArgument(fUML_Tests_TestRealComparisonFunctions_Call_GT_y);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Call_GT);
			// CallBehaviorAction Call(GE)
			fUML_Tests_TestRealComparisonFunctions_Call_GE->setThisExecutableNodePtr(fUML_Tests_TestRealComparisonFunctions_Call_GE);
			fUML_Tests_TestRealComparisonFunctions_Call_GE->setName("Call(GE)");
			fUML_Tests_TestRealComparisonFunctions_Call_GE->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestRealComparisonFunctions_Call_GE_result->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_GE_result);
				fUML_Tests_TestRealComparisonFunctions_Call_GE_result->setName("result");
				fUML_Tests_TestRealComparisonFunctions_Call_GE_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_GE_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_Call_GE->addResult(fUML_Tests_TestRealComparisonFunctions_Call_GE_result);
			fUML_Tests_TestRealComparisonFunctions_Call_GE->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_greaterOrEqual);
				// InputPin x
				fUML_Tests_TestRealComparisonFunctions_Call_GE_x->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_GE_x);
				fUML_Tests_TestRealComparisonFunctions_Call_GE_x->setName("x");
				fUML_Tests_TestRealComparisonFunctions_Call_GE_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_GE_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealComparisonFunctions_Call_GE->addArgument(fUML_Tests_TestRealComparisonFunctions_Call_GE_x);
				// InputPin y
				fUML_Tests_TestRealComparisonFunctions_Call_GE_y->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_GE_y);
				fUML_Tests_TestRealComparisonFunctions_Call_GE_y->setName("y");
				fUML_Tests_TestRealComparisonFunctions_Call_GE_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_GE_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealComparisonFunctions_Call_GE->addArgument(fUML_Tests_TestRealComparisonFunctions_Call_GE_y);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Call_GE);
			// ObjectFlow ObjectFlow1418 from result to Param(GEResult)
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1418->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1418);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1418->setName("ObjectFlow1418");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1418->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1418->setSource(fUML_Tests_TestRealComparisonFunctions_Call_GE_result);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1418->setTarget(fUML_Tests_TestRealComparisonFunctions_Param_GEResult);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1418);
			// ControlFlow ControlFlow1383 from Call(GT) to Call(GE)
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1383->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ControlFlow1383);
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1383->setName("ControlFlow1383");
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1383->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1383->setSource(fUML_Tests_TestRealComparisonFunctions_Call_GT);
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1383->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_GE);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ControlFlow1383);
			// ObjectFlow ObjectFlow1420 from result to Param(LTResult)
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1420->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1420);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1420->setName("ObjectFlow1420");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1420->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1420->setSource(fUML_Tests_TestRealComparisonFunctions_Call_LT_result);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1420->setTarget(fUML_Tests_TestRealComparisonFunctions_Param_LTResult);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1420);
			// ObjectFlow ObjectFlow1385 from result to Param(LEResult)
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1385->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1385);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1385->setName("ObjectFlow1385");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1385->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1385->setSource(fUML_Tests_TestRealComparisonFunctions_Call_LE_result);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1385->setTarget(fUML_Tests_TestRealComparisonFunctions_Param_LEResult);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1385);
			// ObjectFlow ObjectFlow1428 from Fork(2.0) to y
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1428->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1428);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1428->setName("ObjectFlow1428");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1428->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1428->setSource(fUML_Tests_TestRealComparisonFunctions_Fork_2_0);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1428->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_LT_y);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1428);
			// ObjectFlow ObjectFlow1430 from Fork(2.0) to y
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1430->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1430);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1430->setName("ObjectFlow1430");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1430->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1430->setSource(fUML_Tests_TestRealComparisonFunctions_Fork_2_0);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1430->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_GT_y);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1430);
			// ObjectFlow ObjectFlow1432 from Value(3.0).result to Fork(3.0)
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1432->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1432);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1432->setName("ObjectFlow1432");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1432->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1432->setSource(fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1432->setTarget(fUML_Tests_TestRealComparisonFunctions_Fork_3_0);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1432);
			// ObjectFlow ObjectFlow1393 from Fork(2.0) to y
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1393->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1393);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1393->setName("ObjectFlow1393");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1393->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1393->setSource(fUML_Tests_TestRealComparisonFunctions_Fork_2_0);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1393->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_LE_y);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1393);
			// ObjectFlow ObjectFlow1395 from result to Param(GTResult)
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1395->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1395);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1395->setName("ObjectFlow1395");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1395->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1395->setSource(fUML_Tests_TestRealComparisonFunctions_Call_GT_result);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1395->setTarget(fUML_Tests_TestRealComparisonFunctions_Param_GTResult);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1395);
			// ObjectFlow ObjectFlow1434 from Fork(3.0) to x
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1434->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1434);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1434->setName("ObjectFlow1434");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1434->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1434->setSource(fUML_Tests_TestRealComparisonFunctions_Fork_3_0);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1434->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_GT_x);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1434);
			// ObjectFlow ObjectFlow1436 from Fork(3.0) to x
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1436->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1436);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1436->setName("ObjectFlow1436");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1436->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1436->setSource(fUML_Tests_TestRealComparisonFunctions_Fork_3_0);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1436->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_GE_x);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1436);
			// ObjectFlow ObjectFlow1438 from Value(2.0).result to Fork(2.0)
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1438->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1438);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1438->setName("ObjectFlow1438");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1438->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1438->setSource(fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1438->setTarget(fUML_Tests_TestRealComparisonFunctions_Fork_2_0);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1438);
			// ControlFlow ControlFlow1440 from Call(LE) to Call(GT)
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1440->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ControlFlow1440);
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1440->setName("ControlFlow1440");
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1440->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1440->setSource(fUML_Tests_TestRealComparisonFunctions_Call_LE);
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1440->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_GT);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ControlFlow1440);
			// ObjectFlow ObjectFlow1400 from Fork(2.0) to y
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1400->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1400);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1400->setName("ObjectFlow1400");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1400->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1400->setSource(fUML_Tests_TestRealComparisonFunctions_Fork_2_0);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1400->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_GE_y);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1400);
			// ControlFlow ControlFlow1445 from Call(LT) to Call(LE)
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1445->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ControlFlow1445);
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1445->setName("ControlFlow1445");
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1445->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1445->setSource(fUML_Tests_TestRealComparisonFunctions_Call_LT);
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1445->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_LE);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ControlFlow1445);
			// ObjectFlow ObjectFlow1408 from Fork(3.0) to x
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1408->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1408);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1408->setName("ObjectFlow1408");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1408->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1408->setSource(fUML_Tests_TestRealComparisonFunctions_Fork_3_0);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1408->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_LT_x);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1408);
			// ObjectFlow ObjectFlow1416 from Fork(3.0) to x
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1416->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1416);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1416->setName("ObjectFlow1416");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1416->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1416->setSource(fUML_Tests_TestRealComparisonFunctions_Fork_3_0);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1416->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_LE_x);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1416);
	fUML_Tests->addPackagedElement(fUML_Tests_TestRealComparisonFunctions);
		// Activity TestClassAttributeWriter
		fUML_Tests_TestClassAttributeWriter->setThisActivityPtr(fUML_Tests_TestClassAttributeWriter);
		fUML_Tests_TestClassAttributeWriter->setName("TestClassAttributeWriter");
		fUML_Tests_TestClassAttributeWriter->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestClassAttributeWriter->isReentrant = false;
			// Parameter objectIn
			fUML_Tests_TestClassAttributeWriter_objectIn->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_objectIn);
			fUML_Tests_TestClassAttributeWriter_objectIn->setName("objectIn");
			fUML_Tests_TestClassAttributeWriter_objectIn->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeWriter_objectIn->setType(fUML_Tests_TestClass);
		fUML_Tests_TestClassAttributeWriter->addOwnedParameter(fUML_Tests_TestClassAttributeWriter_objectIn);
			// Parameter value
			fUML_Tests_TestClassAttributeWriter_value->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_value);
			fUML_Tests_TestClassAttributeWriter_value->setName("value");
			fUML_Tests_TestClassAttributeWriter_value->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeWriter_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
		fUML_Tests_TestClassAttributeWriter->addOwnedParameter(fUML_Tests_TestClassAttributeWriter_value);
			// Parameter objectOut
			fUML_Tests_TestClassAttributeWriter_objectOut->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_objectOut);
			fUML_Tests_TestClassAttributeWriter_objectOut->setName("objectOut");
			fUML_Tests_TestClassAttributeWriter_objectOut->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeWriter_objectOut->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeWriter_objectOut->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassAttributeWriter->addOwnedParameter(fUML_Tests_TestClassAttributeWriter_objectOut);
			// ActivityParameterNode Parameter(objectIn)
			fUML_Tests_TestClassAttributeWriter_Parameter_objectIn->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_Parameter_objectIn);
			fUML_Tests_TestClassAttributeWriter_Parameter_objectIn->setName("Parameter(objectIn)");
			fUML_Tests_TestClassAttributeWriter_Parameter_objectIn->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeWriter_Parameter_objectIn->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeWriter_Parameter_objectIn->setParameter(fUML_Tests_TestClassAttributeWriter_objectIn);
		fUML_Tests_TestClassAttributeWriter->addNode(fUML_Tests_TestClassAttributeWriter_Parameter_objectIn);
			// ActivityParameterNode Parameter(value)
			fUML_Tests_TestClassAttributeWriter_Parameter_value->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_Parameter_value);
			fUML_Tests_TestClassAttributeWriter_Parameter_value->setName("Parameter(value)");
			fUML_Tests_TestClassAttributeWriter_Parameter_value->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeWriter_Parameter_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassAttributeWriter_Parameter_value->setParameter(fUML_Tests_TestClassAttributeWriter_value);
		fUML_Tests_TestClassAttributeWriter->addNode(fUML_Tests_TestClassAttributeWriter_Parameter_value);
			// ValueSpecificationAction Value(*)
			fUML_Tests_TestClassAttributeWriter_Value_times->setThisExecutableNodePtr(fUML_Tests_TestClassAttributeWriter_Value_times);
			fUML_Tests_TestClassAttributeWriter_Value_times->setName("Value(*)");
			fUML_Tests_TestClassAttributeWriter_Value_times->setVisibility(VisibilityKind::public_);
				// LiteralUnlimitedNatural LiteralUnlimitedNatural1459
				fUML_Tests_TestClassAttributeWriter_Value_times_LiteralUnlimitedNatural1459->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_Value_times_LiteralUnlimitedNatural1459);
				fUML_Tests_TestClassAttributeWriter_Value_times_LiteralUnlimitedNatural1459->setName("LiteralUnlimitedNatural1459");
				fUML_Tests_TestClassAttributeWriter_Value_times_LiteralUnlimitedNatural1459->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeWriter_Value_times_LiteralUnlimitedNatural1459->setValue(-1);
			fUML_Tests_TestClassAttributeWriter_Value_times->setValue(fUML_Tests_TestClassAttributeWriter_Value_times_LiteralUnlimitedNatural1459);
				// OutputPin Value(*).result
				fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result);
				fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result->setName("Value(*).result");
				fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestClassAttributeWriter_Value_times->setResult(fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result);
		fUML_Tests_TestClassAttributeWriter->addNode(fUML_Tests_TestClassAttributeWriter_Value_times);
			// ActivityParameterNode Parameter(objectOut)
			fUML_Tests_TestClassAttributeWriter_Parameter_objectOut->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_Parameter_objectOut);
			fUML_Tests_TestClassAttributeWriter_Parameter_objectOut->setName("Parameter(objectOut)");
			fUML_Tests_TestClassAttributeWriter_Parameter_objectOut->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeWriter_Parameter_objectOut->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeWriter_Parameter_objectOut->setParameter(fUML_Tests_TestClassAttributeWriter_objectOut);
		fUML_Tests_TestClassAttributeWriter->addNode(fUML_Tests_TestClassAttributeWriter_Parameter_objectOut);
			// AddStructuralFeatureValueAction Add(y)
			fUML_Tests_TestClassAttributeWriter_Add_y->setThisExecutableNodePtr(fUML_Tests_TestClassAttributeWriter_Add_y);
			fUML_Tests_TestClassAttributeWriter_Add_y->setName("Add(y)");
			fUML_Tests_TestClassAttributeWriter_Add_y->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeWriter_Add_y->setStructuralFeature(fUML_Tests_TestClass_y);
				// InputPin Add(x).object
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object->setName("Add(x).object");
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeWriter_Add_y->setObject(fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object);
				// InputPin Add(y).value
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value->setName("Add(y).value");
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassAttributeWriter_Add_y->setValue(fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value);
				// OutputPin Add(y).result
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result->setName("Add(y).result");
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeWriter_Add_y->setResult(fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result);
				// InputPin Add(y).insertAt
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt->setName("Add(y).insertAt");
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestClassAttributeWriter_Add_y->setInsertAt(fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt);
		fUML_Tests_TestClassAttributeWriter->addNode(fUML_Tests_TestClassAttributeWriter_Add_y);
			// ObjectFlow ObjectFlow1447 from Value(*).result to Add(y).insertAt
			fUML_Tests_TestClassAttributeWriter_ObjectFlow1447->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeWriter_ObjectFlow1447);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow1447->setName("ObjectFlow1447");
			fUML_Tests_TestClassAttributeWriter_ObjectFlow1447->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeWriter_ObjectFlow1447->setSource(fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow1447->setTarget(fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt);
		fUML_Tests_TestClassAttributeWriter->addEdge(fUML_Tests_TestClassAttributeWriter_ObjectFlow1447);
			// ObjectFlow ObjectFlow1449 from Parameter(value) to Add(y).value
			fUML_Tests_TestClassAttributeWriter_ObjectFlow1449->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeWriter_ObjectFlow1449);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow1449->setName("ObjectFlow1449");
			fUML_Tests_TestClassAttributeWriter_ObjectFlow1449->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeWriter_ObjectFlow1449->setSource(fUML_Tests_TestClassAttributeWriter_Parameter_value);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow1449->setTarget(fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value);
		fUML_Tests_TestClassAttributeWriter->addEdge(fUML_Tests_TestClassAttributeWriter_ObjectFlow1449);
			// ObjectFlow ObjectFlow1451 from Parameter(objectIn) to Add(x).object
			fUML_Tests_TestClassAttributeWriter_ObjectFlow1451->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeWriter_ObjectFlow1451);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow1451->setName("ObjectFlow1451");
			fUML_Tests_TestClassAttributeWriter_ObjectFlow1451->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeWriter_ObjectFlow1451->setSource(fUML_Tests_TestClassAttributeWriter_Parameter_objectIn);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow1451->setTarget(fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object);
		fUML_Tests_TestClassAttributeWriter->addEdge(fUML_Tests_TestClassAttributeWriter_ObjectFlow1451);
			// ObjectFlow ObjectFlow1455 from Add(y).result to Parameter(objectOut)
			fUML_Tests_TestClassAttributeWriter_ObjectFlow1455->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeWriter_ObjectFlow1455);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow1455->setName("ObjectFlow1455");
			fUML_Tests_TestClassAttributeWriter_ObjectFlow1455->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeWriter_ObjectFlow1455->setSource(fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow1455->setTarget(fUML_Tests_TestClassAttributeWriter_Parameter_objectOut);
		fUML_Tests_TestClassAttributeWriter->addEdge(fUML_Tests_TestClassAttributeWriter_ObjectFlow1455);
	fUML_Tests->addPackagedElement(fUML_Tests_TestClassAttributeWriter);
		// Activity DecisionJoin
		fUML_Tests_DecisionJoin->setThisActivityPtr(fUML_Tests_DecisionJoin);
		fUML_Tests_DecisionJoin->setName("DecisionJoin");
		fUML_Tests_DecisionJoin->setVisibility(VisibilityKind::public_);
		fUML_Tests_DecisionJoin->isReentrant = false;
			// Parameter output
			fUML_Tests_DecisionJoin_output->setThisElementPtr(fUML_Tests_DecisionJoin_output);
			fUML_Tests_DecisionJoin_output->setName("output");
			fUML_Tests_DecisionJoin_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_DecisionJoin_output->setIsOrdered(true);
			fUML_Tests_DecisionJoin_output->setUpper(-1);
			fUML_Tests_DecisionJoin_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_DecisionJoin_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_DecisionJoin->addOwnedParameter(fUML_Tests_DecisionJoin_output);
			// JoinNode JoinNode
			fUML_Tests_DecisionJoin_JoinNode->setThisElementPtr(fUML_Tests_DecisionJoin_JoinNode);
			fUML_Tests_DecisionJoin_JoinNode->setName("JoinNode");
			fUML_Tests_DecisionJoin_JoinNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_DecisionJoin->addNode(fUML_Tests_DecisionJoin_JoinNode);
			// ValueSpecificationAction Value(1)
			fUML_Tests_DecisionJoin_Value_1->setThisExecutableNodePtr(fUML_Tests_DecisionJoin_Value_1);
			fUML_Tests_DecisionJoin_Value_1->setName("Value(1)");
			fUML_Tests_DecisionJoin_Value_1->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1488
				fUML_Tests_DecisionJoin_Value_1_LiteralInteger1488->setThisElementPtr(fUML_Tests_DecisionJoin_Value_1_LiteralInteger1488);
				fUML_Tests_DecisionJoin_Value_1_LiteralInteger1488->setName("LiteralInteger1488");
				fUML_Tests_DecisionJoin_Value_1_LiteralInteger1488->setVisibility(VisibilityKind::public_);
				fUML_Tests_DecisionJoin_Value_1_LiteralInteger1488->setValue(1);
			fUML_Tests_DecisionJoin_Value_1->setValue(fUML_Tests_DecisionJoin_Value_1_LiteralInteger1488);
				// OutputPin OutputPin1489
				fUML_Tests_DecisionJoin_Value_1_OutputPin1489->setThisElementPtr(fUML_Tests_DecisionJoin_Value_1_OutputPin1489);
				fUML_Tests_DecisionJoin_Value_1_OutputPin1489->setName("OutputPin1489");
				fUML_Tests_DecisionJoin_Value_1_OutputPin1489->setVisibility(VisibilityKind::public_);
				fUML_Tests_DecisionJoin_Value_1_OutputPin1489->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_DecisionJoin_Value_1->setResult(fUML_Tests_DecisionJoin_Value_1_OutputPin1489);
		fUML_Tests_DecisionJoin->addNode(fUML_Tests_DecisionJoin_Value_1);
			// CallBehaviorAction Action_A
			fUML_Tests_DecisionJoin_Action_A->setThisExecutableNodePtr(fUML_Tests_DecisionJoin_Action_A);
			fUML_Tests_DecisionJoin_Action_A->setName("Action_A");
			fUML_Tests_DecisionJoin_Action_A->setVisibility(VisibilityKind::public_);
				// OutputPin Action_A.output
				fUML_Tests_DecisionJoin_Action_A_Action_A_output->setThisElementPtr(fUML_Tests_DecisionJoin_Action_A_Action_A_output);
				fUML_Tests_DecisionJoin_Action_A_Action_A_output->setName("Action_A.output");
				fUML_Tests_DecisionJoin_Action_A_Action_A_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_DecisionJoin_Action_A_Action_A_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_DecisionJoin_Action_A->addResult(fUML_Tests_DecisionJoin_Action_A_Action_A_output);
			fUML_Tests_DecisionJoin_Action_A->setBehavior(fUML_Tests_Copier);
				// InputPin Action_A.input
				fUML_Tests_DecisionJoin_Action_A_Action_A_input->setThisElementPtr(fUML_Tests_DecisionJoin_Action_A_Action_A_input);
				fUML_Tests_DecisionJoin_Action_A_Action_A_input->setName("Action_A.input");
				fUML_Tests_DecisionJoin_Action_A_Action_A_input->setVisibility(VisibilityKind::public_);
				fUML_Tests_DecisionJoin_Action_A_Action_A_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_DecisionJoin_Action_A->addArgument(fUML_Tests_DecisionJoin_Action_A_Action_A_input);
		fUML_Tests_DecisionJoin->addNode(fUML_Tests_DecisionJoin_Action_A);
			// DecisionNode DecisionNode
			fUML_Tests_DecisionJoin_DecisionNode->setThisElementPtr(fUML_Tests_DecisionJoin_DecisionNode);
			fUML_Tests_DecisionJoin_DecisionNode->setName("DecisionNode");
			fUML_Tests_DecisionJoin_DecisionNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_DecisionJoin->addNode(fUML_Tests_DecisionJoin_DecisionNode);
			// ActivityParameterNode OutputNode
			fUML_Tests_DecisionJoin_OutputNode->setThisElementPtr(fUML_Tests_DecisionJoin_OutputNode);
			fUML_Tests_DecisionJoin_OutputNode->setName("OutputNode");
			fUML_Tests_DecisionJoin_OutputNode->setVisibility(VisibilityKind::public_);
			fUML_Tests_DecisionJoin_OutputNode->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_DecisionJoin_OutputNode->setParameter(fUML_Tests_DecisionJoin_output);
		fUML_Tests_DecisionJoin->addNode(fUML_Tests_DecisionJoin_OutputNode);
			// ValueSpecificationAction Value(0)
			fUML_Tests_DecisionJoin_Value_0->setThisExecutableNodePtr(fUML_Tests_DecisionJoin_Value_0);
			fUML_Tests_DecisionJoin_Value_0->setName("Value(0)");
			fUML_Tests_DecisionJoin_Value_0->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1497
				fUML_Tests_DecisionJoin_Value_0_LiteralInteger1497->setThisElementPtr(fUML_Tests_DecisionJoin_Value_0_LiteralInteger1497);
				fUML_Tests_DecisionJoin_Value_0_LiteralInteger1497->setName("LiteralInteger1497");
				fUML_Tests_DecisionJoin_Value_0_LiteralInteger1497->setVisibility(VisibilityKind::public_);
				fUML_Tests_DecisionJoin_Value_0_LiteralInteger1497->setValue(0);
			fUML_Tests_DecisionJoin_Value_0->setValue(fUML_Tests_DecisionJoin_Value_0_LiteralInteger1497);
				// OutputPin OutputPin1496
				fUML_Tests_DecisionJoin_Value_0_OutputPin1496->setThisElementPtr(fUML_Tests_DecisionJoin_Value_0_OutputPin1496);
				fUML_Tests_DecisionJoin_Value_0_OutputPin1496->setName("OutputPin1496");
				fUML_Tests_DecisionJoin_Value_0_OutputPin1496->setVisibility(VisibilityKind::public_);
				fUML_Tests_DecisionJoin_Value_0_OutputPin1496->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_DecisionJoin_Value_0->setResult(fUML_Tests_DecisionJoin_Value_0_OutputPin1496);
		fUML_Tests_DecisionJoin->addNode(fUML_Tests_DecisionJoin_Value_0);
			// CallBehaviorAction Action_B
			fUML_Tests_DecisionJoin_Action_B->setThisExecutableNodePtr(fUML_Tests_DecisionJoin_Action_B);
			fUML_Tests_DecisionJoin_Action_B->setName("Action_B");
			fUML_Tests_DecisionJoin_Action_B->setVisibility(VisibilityKind::public_);
				// OutputPin Action_C.output
				fUML_Tests_DecisionJoin_Action_B_Action_C_output->setThisElementPtr(fUML_Tests_DecisionJoin_Action_B_Action_C_output);
				fUML_Tests_DecisionJoin_Action_B_Action_C_output->setName("Action_C.output");
				fUML_Tests_DecisionJoin_Action_B_Action_C_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_DecisionJoin_Action_B_Action_C_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_DecisionJoin_Action_B_Action_C_output->setUpper(2);
				fUML_Tests_DecisionJoin_Action_B_Action_C_output->setLower(2);
			fUML_Tests_DecisionJoin_Action_B->addResult(fUML_Tests_DecisionJoin_Action_B_Action_C_output);
			fUML_Tests_DecisionJoin_Action_B->setBehavior(fUML_Tests_Copier);
				// InputPin Action_B.input
				fUML_Tests_DecisionJoin_Action_B_Action_B_input->setThisElementPtr(fUML_Tests_DecisionJoin_Action_B_Action_B_input);
				fUML_Tests_DecisionJoin_Action_B_Action_B_input->setName("Action_B.input");
				fUML_Tests_DecisionJoin_Action_B_Action_B_input->setVisibility(VisibilityKind::public_);
				fUML_Tests_DecisionJoin_Action_B_Action_B_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_DecisionJoin_Action_B_Action_B_input->setUpper(2);
				fUML_Tests_DecisionJoin_Action_B_Action_B_input->setLower(2);
			fUML_Tests_DecisionJoin_Action_B->addArgument(fUML_Tests_DecisionJoin_Action_B_Action_B_input);
		fUML_Tests_DecisionJoin->addNode(fUML_Tests_DecisionJoin_Action_B);
			// ControlFlow ControlFlow1472 from Value(0) to Value(1)
			fUML_Tests_DecisionJoin_ControlFlow1472->setThisActivityEdgePtr(fUML_Tests_DecisionJoin_ControlFlow1472);
			fUML_Tests_DecisionJoin_ControlFlow1472->setName("ControlFlow1472");
			fUML_Tests_DecisionJoin_ControlFlow1472->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_DecisionJoin_ControlFlow1472->setSource(fUML_Tests_DecisionJoin_Value_0);
			fUML_Tests_DecisionJoin_ControlFlow1472->setTarget(fUML_Tests_DecisionJoin_Value_1);
		fUML_Tests_DecisionJoin->addEdge(fUML_Tests_DecisionJoin_ControlFlow1472);
			// ObjectFlow ObjectFlow1485 from DecisionNode to JoinNode
			fUML_Tests_DecisionJoin_ObjectFlow1485->setThisActivityEdgePtr(fUML_Tests_DecisionJoin_ObjectFlow1485);
			fUML_Tests_DecisionJoin_ObjectFlow1485->setName("ObjectFlow1485");
			fUML_Tests_DecisionJoin_ObjectFlow1485->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_DecisionJoin_ObjectFlow1485->setSource(fUML_Tests_DecisionJoin_DecisionNode);
			fUML_Tests_DecisionJoin_ObjectFlow1485->setTarget(fUML_Tests_DecisionJoin_JoinNode);
				// LiteralInteger LiteralInteger1487
				fUML_Tests_DecisionJoin_ObjectFlow1485_LiteralInteger1487->setThisElementPtr(fUML_Tests_DecisionJoin_ObjectFlow1485_LiteralInteger1487);
				fUML_Tests_DecisionJoin_ObjectFlow1485_LiteralInteger1487->setName("LiteralInteger1487");
				fUML_Tests_DecisionJoin_ObjectFlow1485_LiteralInteger1487->setVisibility(VisibilityKind::public_);
				fUML_Tests_DecisionJoin_ObjectFlow1485_LiteralInteger1487->setValue(1);
			fUML_Tests_DecisionJoin_ObjectFlow1485->setGuard(fUML_Tests_DecisionJoin_ObjectFlow1485_LiteralInteger1487);
		fUML_Tests_DecisionJoin->addEdge(fUML_Tests_DecisionJoin_ObjectFlow1485);
			// ObjectFlow ObjectFlow1474 from OutputPin1496 to Action_A.input
			fUML_Tests_DecisionJoin_ObjectFlow1474->setThisActivityEdgePtr(fUML_Tests_DecisionJoin_ObjectFlow1474);
			fUML_Tests_DecisionJoin_ObjectFlow1474->setName("ObjectFlow1474");
			fUML_Tests_DecisionJoin_ObjectFlow1474->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_DecisionJoin_ObjectFlow1474->setSource(fUML_Tests_DecisionJoin_Value_0_OutputPin1496);
			fUML_Tests_DecisionJoin_ObjectFlow1474->setTarget(fUML_Tests_DecisionJoin_Action_A_Action_A_input);
		fUML_Tests_DecisionJoin->addEdge(fUML_Tests_DecisionJoin_ObjectFlow1474);
			// ObjectFlow ObjectFlow1494 from JoinNode to Action_B.input
			fUML_Tests_DecisionJoin_ObjectFlow1494->setThisActivityEdgePtr(fUML_Tests_DecisionJoin_ObjectFlow1494);
			fUML_Tests_DecisionJoin_ObjectFlow1494->setName("ObjectFlow1494");
			fUML_Tests_DecisionJoin_ObjectFlow1494->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_DecisionJoin_ObjectFlow1494->setSource(fUML_Tests_DecisionJoin_JoinNode);
			fUML_Tests_DecisionJoin_ObjectFlow1494->setTarget(fUML_Tests_DecisionJoin_Action_B_Action_B_input);
		fUML_Tests_DecisionJoin->addEdge(fUML_Tests_DecisionJoin_ObjectFlow1494);
			// ObjectFlow ObjectFlow1476 from DecisionNode to JoinNode
			fUML_Tests_DecisionJoin_ObjectFlow1476->setThisActivityEdgePtr(fUML_Tests_DecisionJoin_ObjectFlow1476);
			fUML_Tests_DecisionJoin_ObjectFlow1476->setName("ObjectFlow1476");
			fUML_Tests_DecisionJoin_ObjectFlow1476->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_DecisionJoin_ObjectFlow1476->setSource(fUML_Tests_DecisionJoin_DecisionNode);
			fUML_Tests_DecisionJoin_ObjectFlow1476->setTarget(fUML_Tests_DecisionJoin_JoinNode);
				// LiteralInteger LiteralInteger1477
				fUML_Tests_DecisionJoin_ObjectFlow1476_LiteralInteger1477->setThisElementPtr(fUML_Tests_DecisionJoin_ObjectFlow1476_LiteralInteger1477);
				fUML_Tests_DecisionJoin_ObjectFlow1476_LiteralInteger1477->setName("LiteralInteger1477");
				fUML_Tests_DecisionJoin_ObjectFlow1476_LiteralInteger1477->setVisibility(VisibilityKind::public_);
				fUML_Tests_DecisionJoin_ObjectFlow1476_LiteralInteger1477->setValue(0);
			fUML_Tests_DecisionJoin_ObjectFlow1476->setGuard(fUML_Tests_DecisionJoin_ObjectFlow1476_LiteralInteger1477);
		fUML_Tests_DecisionJoin->addEdge(fUML_Tests_DecisionJoin_ObjectFlow1476);
			// ObjectFlow ObjectFlow1479 from OutputPin1489 to Action_A.input
			fUML_Tests_DecisionJoin_ObjectFlow1479->setThisActivityEdgePtr(fUML_Tests_DecisionJoin_ObjectFlow1479);
			fUML_Tests_DecisionJoin_ObjectFlow1479->setName("ObjectFlow1479");
			fUML_Tests_DecisionJoin_ObjectFlow1479->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_DecisionJoin_ObjectFlow1479->setSource(fUML_Tests_DecisionJoin_Value_1_OutputPin1489);
			fUML_Tests_DecisionJoin_ObjectFlow1479->setTarget(fUML_Tests_DecisionJoin_Action_A_Action_A_input);
		fUML_Tests_DecisionJoin->addEdge(fUML_Tests_DecisionJoin_ObjectFlow1479);
			// ObjectFlow ObjectFlow1500 from Action_A.output to DecisionNode
			fUML_Tests_DecisionJoin_ObjectFlow1500->setThisActivityEdgePtr(fUML_Tests_DecisionJoin_ObjectFlow1500);
			fUML_Tests_DecisionJoin_ObjectFlow1500->setName("ObjectFlow1500");
			fUML_Tests_DecisionJoin_ObjectFlow1500->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_DecisionJoin_ObjectFlow1500->setSource(fUML_Tests_DecisionJoin_Action_A_Action_A_output);
			fUML_Tests_DecisionJoin_ObjectFlow1500->setTarget(fUML_Tests_DecisionJoin_DecisionNode);
		fUML_Tests_DecisionJoin->addEdge(fUML_Tests_DecisionJoin_ObjectFlow1500);
			// ObjectFlow ObjectFlow1502 from Action_C.output to OutputNode
			fUML_Tests_DecisionJoin_ObjectFlow1502->setThisActivityEdgePtr(fUML_Tests_DecisionJoin_ObjectFlow1502);
			fUML_Tests_DecisionJoin_ObjectFlow1502->setName("ObjectFlow1502");
			fUML_Tests_DecisionJoin_ObjectFlow1502->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_DecisionJoin_ObjectFlow1502->setSource(fUML_Tests_DecisionJoin_Action_B_Action_C_output);
			fUML_Tests_DecisionJoin_ObjectFlow1502->setTarget(fUML_Tests_DecisionJoin_OutputNode);
		fUML_Tests_DecisionJoin->addEdge(fUML_Tests_DecisionJoin_ObjectFlow1502);
	fUML_Tests->addPackagedElement(fUML_Tests_DecisionJoin);
		// Class Specific
		fUML_Tests_Specific->setThisClass_Ptr(fUML_Tests_Specific);
		fUML_Tests_Specific->setName("Specific");
		fUML_Tests_Specific->setVisibility(VisibilityKind::public_);
		
			// Generalization to General
			fUML_Tests_Specific_Generalization1504->setThisElementPtr(fUML_Tests_Specific_Generalization1504);
			fUML_Tests_Specific_Generalization1504->setGeneral(fUML_Tests_General);
		fUML_Tests_Specific->addGeneralization(fUML_Tests_Specific_Generalization1504);
			// Property x
			fUML_Tests_Specific_x->setThisElementPtr(fUML_Tests_Specific_x);
			fUML_Tests_Specific_x->setName("x");
			fUML_Tests_Specific_x->setVisibility(VisibilityKind::public_);
		fUML_Tests_Specific->addOwnedAttribute(fUML_Tests_Specific_x);
	fUML_Tests->addPackagedElement(fUML_Tests_Specific);
		// Activity TestClassUnmarshaller
		fUML_Tests_TestClassUnmarshaller->setThisActivityPtr(fUML_Tests_TestClassUnmarshaller);
		fUML_Tests_TestClassUnmarshaller->setName("TestClassUnmarshaller");
		fUML_Tests_TestClassUnmarshaller->setVisibility(VisibilityKind::public_);
			// Parameter x
			fUML_Tests_TestClassUnmarshaller_x->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_x);
			fUML_Tests_TestClassUnmarshaller_x->setName("x");
			fUML_Tests_TestClassUnmarshaller_x->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_x->setUpper(-1);
			fUML_Tests_TestClassUnmarshaller_x->setLower(0);
			fUML_Tests_TestClassUnmarshaller_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_x->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassUnmarshaller->addOwnedParameter(fUML_Tests_TestClassUnmarshaller_x);
			// Parameter y
			fUML_Tests_TestClassUnmarshaller_y->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_y);
			fUML_Tests_TestClassUnmarshaller_y->setName("y");
			fUML_Tests_TestClassUnmarshaller_y->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_y->setUpper(-1);
			fUML_Tests_TestClassUnmarshaller_y->setLower(0);
			fUML_Tests_TestClassUnmarshaller_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_y->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassUnmarshaller->addOwnedParameter(fUML_Tests_TestClassUnmarshaller_y);
			// ActivityParameterNode Output(x)
			fUML_Tests_TestClassUnmarshaller_Output_x->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Output_x);
			fUML_Tests_TestClassUnmarshaller_Output_x->setName("Output(x)");
			fUML_Tests_TestClassUnmarshaller_Output_x->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Output_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Output_x->setParameter(fUML_Tests_TestClassUnmarshaller_x);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Output_x);
			// AddStructuralFeatureValueAction Write(y[1])
			fUML_Tests_TestClassUnmarshaller_Write_y_1->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Write_y_1);
			fUML_Tests_TestClassUnmarshaller_Write_y_1->setName("Write(y[1])");
			fUML_Tests_TestClassUnmarshaller_Write_y_1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Write_y_1->setStructuralFeature(fUML_Tests_TestClass_y);
				// InputPin object
				fUML_Tests_TestClassUnmarshaller_Write_y_1_object->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_y_1_object);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_object->setName("object");
				fUML_Tests_TestClassUnmarshaller_Write_y_1_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassUnmarshaller_Write_y_1->setObject(fUML_Tests_TestClassUnmarshaller_Write_y_1_object);
				// InputPin value
				fUML_Tests_TestClassUnmarshaller_Write_y_1_value->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_y_1_value);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_value->setName("value");
				fUML_Tests_TestClassUnmarshaller_Write_y_1_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Write_y_1->setValue(fUML_Tests_TestClassUnmarshaller_Write_y_1_value);
				// OutputPin result
				fUML_Tests_TestClassUnmarshaller_Write_y_1_result->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_y_1_result);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_result->setName("result");
				fUML_Tests_TestClassUnmarshaller_Write_y_1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassUnmarshaller_Write_y_1->setResult(fUML_Tests_TestClassUnmarshaller_Write_y_1_result);
				// InputPin insertAt
				fUML_Tests_TestClassUnmarshaller_Write_y_1_insertAt->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_y_1_insertAt);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_insertAt->setName("insertAt");
				fUML_Tests_TestClassUnmarshaller_Write_y_1_insertAt->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Write_y_1->setInsertAt(fUML_Tests_TestClassUnmarshaller_Write_y_1_insertAt);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Write_y_1);
			// AddStructuralFeatureValueAction Write(y[2])
			fUML_Tests_TestClassUnmarshaller_Write_y_2->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Write_y_2);
			fUML_Tests_TestClassUnmarshaller_Write_y_2->setName("Write(y[2])");
			fUML_Tests_TestClassUnmarshaller_Write_y_2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Write_y_2->setStructuralFeature(fUML_Tests_TestClass_y);
				// InputPin object
				fUML_Tests_TestClassUnmarshaller_Write_y_2_object->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_y_2_object);
				fUML_Tests_TestClassUnmarshaller_Write_y_2_object->setName("object");
				fUML_Tests_TestClassUnmarshaller_Write_y_2_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_y_2_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassUnmarshaller_Write_y_2->setObject(fUML_Tests_TestClassUnmarshaller_Write_y_2_object);
				// InputPin value
				fUML_Tests_TestClassUnmarshaller_Write_y_2_value->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_y_2_value);
				fUML_Tests_TestClassUnmarshaller_Write_y_2_value->setName("value");
				fUML_Tests_TestClassUnmarshaller_Write_y_2_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_y_2_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Write_y_2->setValue(fUML_Tests_TestClassUnmarshaller_Write_y_2_value);
				// OutputPin result
				fUML_Tests_TestClassUnmarshaller_Write_y_2_result->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_y_2_result);
				fUML_Tests_TestClassUnmarshaller_Write_y_2_result->setName("result");
				fUML_Tests_TestClassUnmarshaller_Write_y_2_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Write_y_2->setResult(fUML_Tests_TestClassUnmarshaller_Write_y_2_result);
				// InputPin insertAt
				fUML_Tests_TestClassUnmarshaller_Write_y_2_insertAt->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_y_2_insertAt);
				fUML_Tests_TestClassUnmarshaller_Write_y_2_insertAt->setName("insertAt");
				fUML_Tests_TestClassUnmarshaller_Write_y_2_insertAt->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Write_y_2->setInsertAt(fUML_Tests_TestClassUnmarshaller_Write_y_2_insertAt);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Write_y_2);
			// ForkNode ForkNode1553
			fUML_Tests_TestClassUnmarshaller_ForkNode1553->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_ForkNode1553);
			fUML_Tests_TestClassUnmarshaller_ForkNode1553->setName("ForkNode1553");
			fUML_Tests_TestClassUnmarshaller_ForkNode1553->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_ForkNode1553);
			// CreateObjectAction Create(Subclass1)
			fUML_Tests_TestClassUnmarshaller_Create_Subclass1->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Create_Subclass1);
			fUML_Tests_TestClassUnmarshaller_Create_Subclass1->setName("Create(Subclass1)");
			fUML_Tests_TestClassUnmarshaller_Create_Subclass1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Create_Subclass1->setClassifier(fUML_Tests_Subclass1);
				// OutputPin result
				fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result);
				fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result->setName("result");
				fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassUnmarshaller_Create_Subclass1->setResult(fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Create_Subclass1);
			// AddStructuralFeatureValueAction Write(a)
			fUML_Tests_TestClassUnmarshaller_Write_a->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Write_a);
			fUML_Tests_TestClassUnmarshaller_Write_a->setName("Write(a)");
			fUML_Tests_TestClassUnmarshaller_Write_a->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Write_a->setStructuralFeature(fUML_Tests_Subclass1_a);
				// InputPin object
				fUML_Tests_TestClassUnmarshaller_Write_a_object->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_a_object);
				fUML_Tests_TestClassUnmarshaller_Write_a_object->setName("object");
				fUML_Tests_TestClassUnmarshaller_Write_a_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_a_object->setType(fUML_Tests_Subclass1);
			fUML_Tests_TestClassUnmarshaller_Write_a->setObject(fUML_Tests_TestClassUnmarshaller_Write_a_object);
				// InputPin value
				fUML_Tests_TestClassUnmarshaller_Write_a_value->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_a_value);
				fUML_Tests_TestClassUnmarshaller_Write_a_value->setName("value");
				fUML_Tests_TestClassUnmarshaller_Write_a_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_a_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Write_a->setValue(fUML_Tests_TestClassUnmarshaller_Write_a_value);
				// OutputPin result
				fUML_Tests_TestClassUnmarshaller_Write_a_result->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_a_result);
				fUML_Tests_TestClassUnmarshaller_Write_a_result->setName("result");
				fUML_Tests_TestClassUnmarshaller_Write_a_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_a_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassUnmarshaller_Write_a->setResult(fUML_Tests_TestClassUnmarshaller_Write_a_result);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Write_a);
			// UnmarshallAction Unmarshall(TestClass)
			fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass);
			fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass->setName("Unmarshall(TestClass)");
			fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass->setUnmarshallType(fUML_Tests_TestClass);
				// InputPin object
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object->setName("object");
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass->setObject(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object);
				// OutputPin result(x)
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x->setName("result(x)");
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass->addResult(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x);
				// OutputPin result(y)
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y->setName("result(y)");
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y->setUpper(-1);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y->setLower(0);
			fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass->addResult(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass);
			// AddStructuralFeatureValueAction Write(x)
			fUML_Tests_TestClassUnmarshaller_Write_x->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Write_x);
			fUML_Tests_TestClassUnmarshaller_Write_x->setName("Write(x)");
			fUML_Tests_TestClassUnmarshaller_Write_x->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Write_x->setStructuralFeature(fUML_Tests_TestClass_x);
				// InputPin object
				fUML_Tests_TestClassUnmarshaller_Write_x_object->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_x_object);
				fUML_Tests_TestClassUnmarshaller_Write_x_object->setName("object");
				fUML_Tests_TestClassUnmarshaller_Write_x_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_x_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassUnmarshaller_Write_x->setObject(fUML_Tests_TestClassUnmarshaller_Write_x_object);
				// InputPin value
				fUML_Tests_TestClassUnmarshaller_Write_x_value->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_x_value);
				fUML_Tests_TestClassUnmarshaller_Write_x_value->setName("value");
				fUML_Tests_TestClassUnmarshaller_Write_x_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_x_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Write_x->setValue(fUML_Tests_TestClassUnmarshaller_Write_x_value);
				// OutputPin result
				fUML_Tests_TestClassUnmarshaller_Write_x_result->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_x_result);
				fUML_Tests_TestClassUnmarshaller_Write_x_result->setName("result");
				fUML_Tests_TestClassUnmarshaller_Write_x_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_x_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassUnmarshaller_Write_x->setResult(fUML_Tests_TestClassUnmarshaller_Write_x_result);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Write_x);
			// ValueSpecificationAction Value(0)
			fUML_Tests_TestClassUnmarshaller_Value_0->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Value_0);
			fUML_Tests_TestClassUnmarshaller_Value_0->setName("Value(0)");
			fUML_Tests_TestClassUnmarshaller_Value_0->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1533
				fUML_Tests_TestClassUnmarshaller_Value_0_LiteralInteger1533->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Value_0_LiteralInteger1533);
				fUML_Tests_TestClassUnmarshaller_Value_0_LiteralInteger1533->setName("LiteralInteger1533");
				fUML_Tests_TestClassUnmarshaller_Value_0_LiteralInteger1533->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Value_0_LiteralInteger1533->setValue(0);
			fUML_Tests_TestClassUnmarshaller_Value_0->setValue(fUML_Tests_TestClassUnmarshaller_Value_0_LiteralInteger1533);
				// OutputPin result
				fUML_Tests_TestClassUnmarshaller_Value_0_result->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Value_0_result);
				fUML_Tests_TestClassUnmarshaller_Value_0_result->setName("result");
				fUML_Tests_TestClassUnmarshaller_Value_0_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Value_0_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Value_0->setResult(fUML_Tests_TestClassUnmarshaller_Value_0_result);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Value_0);
			// ValueSpecificationAction Value(true)
			fUML_Tests_TestClassUnmarshaller_Value_true->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Value_true);
			fUML_Tests_TestClassUnmarshaller_Value_true->setName("Value(true)");
			fUML_Tests_TestClassUnmarshaller_Value_true->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1568
				fUML_Tests_TestClassUnmarshaller_Value_true_LiteralBoolean1568->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Value_true_LiteralBoolean1568);
				fUML_Tests_TestClassUnmarshaller_Value_true_LiteralBoolean1568->setName("LiteralBoolean1568");
				fUML_Tests_TestClassUnmarshaller_Value_true_LiteralBoolean1568->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Value_true_LiteralBoolean1568->setValue(true);
			fUML_Tests_TestClassUnmarshaller_Value_true->setValue(fUML_Tests_TestClassUnmarshaller_Value_true_LiteralBoolean1568);
				// OutputPin result
				fUML_Tests_TestClassUnmarshaller_Value_true_result->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Value_true_result);
				fUML_Tests_TestClassUnmarshaller_Value_true_result->setName("result");
				fUML_Tests_TestClassUnmarshaller_Value_true_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Value_true_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Value_true->setResult(fUML_Tests_TestClassUnmarshaller_Value_true_result);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Value_true);
			// ActivityParameterNode Output(y)
			fUML_Tests_TestClassUnmarshaller_Output_y->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Output_y);
			fUML_Tests_TestClassUnmarshaller_Output_y->setName("Output(y)");
			fUML_Tests_TestClassUnmarshaller_Output_y->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Output_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Output_y->setParameter(fUML_Tests_TestClassUnmarshaller_y);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Output_y);
			// ValueSpecificationAction Value(1)
			fUML_Tests_TestClassUnmarshaller_Value_1->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Value_1);
			fUML_Tests_TestClassUnmarshaller_Value_1->setName("Value(1)");
			fUML_Tests_TestClassUnmarshaller_Value_1->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1540
				fUML_Tests_TestClassUnmarshaller_Value_1_LiteralInteger1540->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Value_1_LiteralInteger1540);
				fUML_Tests_TestClassUnmarshaller_Value_1_LiteralInteger1540->setName("LiteralInteger1540");
				fUML_Tests_TestClassUnmarshaller_Value_1_LiteralInteger1540->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Value_1_LiteralInteger1540->setValue(1);
			fUML_Tests_TestClassUnmarshaller_Value_1->setValue(fUML_Tests_TestClassUnmarshaller_Value_1_LiteralInteger1540);
				// OutputPin result
				fUML_Tests_TestClassUnmarshaller_Value_1_result->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Value_1_result);
				fUML_Tests_TestClassUnmarshaller_Value_1_result->setName("result");
				fUML_Tests_TestClassUnmarshaller_Value_1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Value_1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Value_1->setResult(fUML_Tests_TestClassUnmarshaller_Value_1_result);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Value_1);
			// ValueSpecificationAction Value(2)
			fUML_Tests_TestClassUnmarshaller_Value_2->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Value_2);
			fUML_Tests_TestClassUnmarshaller_Value_2->setName("Value(2)");
			fUML_Tests_TestClassUnmarshaller_Value_2->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1571
				fUML_Tests_TestClassUnmarshaller_Value_2_LiteralInteger1571->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Value_2_LiteralInteger1571);
				fUML_Tests_TestClassUnmarshaller_Value_2_LiteralInteger1571->setName("LiteralInteger1571");
				fUML_Tests_TestClassUnmarshaller_Value_2_LiteralInteger1571->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Value_2_LiteralInteger1571->setValue(2);
			fUML_Tests_TestClassUnmarshaller_Value_2->setValue(fUML_Tests_TestClassUnmarshaller_Value_2_LiteralInteger1571);
				// OutputPin result
				fUML_Tests_TestClassUnmarshaller_Value_2_result->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Value_2_result);
				fUML_Tests_TestClassUnmarshaller_Value_2_result->setName("result");
				fUML_Tests_TestClassUnmarshaller_Value_2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Value_2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Value_2->setResult(fUML_Tests_TestClassUnmarshaller_Value_2_result);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Value_2);
			// ValueSpecificationAction Value(*)
			fUML_Tests_TestClassUnmarshaller_Value_times->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Value_times);
			fUML_Tests_TestClassUnmarshaller_Value_times->setName("Value(*)");
			fUML_Tests_TestClassUnmarshaller_Value_times->setVisibility(VisibilityKind::public_);
				// LiteralUnlimitedNatural LiteralUnlimitedNatural1576
				fUML_Tests_TestClassUnmarshaller_Value_times_LiteralUnlimitedNatural1576->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Value_times_LiteralUnlimitedNatural1576);
				fUML_Tests_TestClassUnmarshaller_Value_times_LiteralUnlimitedNatural1576->setName("LiteralUnlimitedNatural1576");
				fUML_Tests_TestClassUnmarshaller_Value_times_LiteralUnlimitedNatural1576->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Value_times_LiteralUnlimitedNatural1576->setValue(-1);
			fUML_Tests_TestClassUnmarshaller_Value_times->setValue(fUML_Tests_TestClassUnmarshaller_Value_times_LiteralUnlimitedNatural1576);
				// OutputPin result
				fUML_Tests_TestClassUnmarshaller_Value_times_result->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Value_times_result);
				fUML_Tests_TestClassUnmarshaller_Value_times_result->setName("result");
				fUML_Tests_TestClassUnmarshaller_Value_times_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Value_times->setResult(fUML_Tests_TestClassUnmarshaller_Value_times_result);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Value_times);
			// ObjectFlow ObjectFlow1547 from result to value
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1547->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow1547);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1547->setName("ObjectFlow1547");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1547->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1547->setSource(fUML_Tests_TestClassUnmarshaller_Value_2_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1547->setTarget(fUML_Tests_TestClassUnmarshaller_Write_y_2_value);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow1547);
			// ObjectFlow ObjectFlow1511 from result to object
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1511->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow1511);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1511->setName("ObjectFlow1511");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1511->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1511->setSource(fUML_Tests_TestClassUnmarshaller_Write_x_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1511->setTarget(fUML_Tests_TestClassUnmarshaller_Write_y_1_object);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow1511);
			// ObjectFlow ObjectFlow1513 from result to value
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1513->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow1513);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1513->setName("ObjectFlow1513");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1513->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1513->setSource(fUML_Tests_TestClassUnmarshaller_Value_0_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1513->setTarget(fUML_Tests_TestClassUnmarshaller_Write_x_value);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow1513);
			// ObjectFlow ObjectFlow1515 from ForkNode1553 to insertAt
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1515->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow1515);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1515->setName("ObjectFlow1515");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1515->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1515->setSource(fUML_Tests_TestClassUnmarshaller_ForkNode1553);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1515->setTarget(fUML_Tests_TestClassUnmarshaller_Write_y_1_insertAt);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow1515);
			// ObjectFlow ObjectFlow1562 from result(y) to Output(y)
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1562->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow1562);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1562->setName("ObjectFlow1562");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1562->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1562->setSource(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1562->setTarget(fUML_Tests_TestClassUnmarshaller_Output_y);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow1562);
			// ObjectFlow ObjectFlow1523 from result to value
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1523->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow1523);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1523->setName("ObjectFlow1523");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1523->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1523->setSource(fUML_Tests_TestClassUnmarshaller_Value_true_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1523->setTarget(fUML_Tests_TestClassUnmarshaller_Write_a_value);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow1523);
			// ObjectFlow ObjectFlow1534 from result to value
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1534->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow1534);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1534->setName("ObjectFlow1534");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1534->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1534->setSource(fUML_Tests_TestClassUnmarshaller_Value_1_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1534->setTarget(fUML_Tests_TestClassUnmarshaller_Write_y_1_value);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow1534);
			// ObjectFlow ObjectFlow1564 from result to object
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1564->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow1564);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1564->setName("ObjectFlow1564");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1564->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1564->setSource(fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1564->setTarget(fUML_Tests_TestClassUnmarshaller_Write_x_object);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow1564);
			// ObjectFlow ObjectFlow1536 from result to object
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1536->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow1536);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1536->setName("ObjectFlow1536");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1536->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1536->setSource(fUML_Tests_TestClassUnmarshaller_Write_y_2_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1536->setTarget(fUML_Tests_TestClassUnmarshaller_Write_a_object);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow1536);
			// ObjectFlow ObjectFlow1538 from ForkNode1553 to insertAt
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1538->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow1538);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1538->setName("ObjectFlow1538");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1538->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1538->setSource(fUML_Tests_TestClassUnmarshaller_ForkNode1553);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1538->setTarget(fUML_Tests_TestClassUnmarshaller_Write_y_2_insertAt);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow1538);
			// ObjectFlow ObjectFlow1569 from result(x) to Output(x)
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1569->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow1569);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1569->setName("ObjectFlow1569");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1569->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1569->setSource(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1569->setTarget(fUML_Tests_TestClassUnmarshaller_Output_x);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow1569);
			// ObjectFlow ObjectFlow1543 from result to ForkNode1553
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1543->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow1543);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1543->setName("ObjectFlow1543");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1543->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1543->setSource(fUML_Tests_TestClassUnmarshaller_Value_times_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1543->setTarget(fUML_Tests_TestClassUnmarshaller_ForkNode1553);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow1543);
			// ObjectFlow ObjectFlow1574 from result to object
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1574->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow1574);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1574->setName("ObjectFlow1574");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1574->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1574->setSource(fUML_Tests_TestClassUnmarshaller_Write_y_1_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1574->setTarget(fUML_Tests_TestClassUnmarshaller_Write_y_2_object);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow1574);
			// ObjectFlow ObjectFlow1545 from result to object
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1545->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow1545);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1545->setName("ObjectFlow1545");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1545->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1545->setSource(fUML_Tests_TestClassUnmarshaller_Write_a_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1545->setTarget(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow1545);
	fUML_Tests->addPackagedElement(fUML_Tests_TestClassUnmarshaller);
		// SignalEvent SignalEvent1579
		fUML_Tests_SignalEvent1579->setThisElementPtr(fUML_Tests_SignalEvent1579);
		fUML_Tests_SignalEvent1579->setName("SignalEvent1579");
		fUML_Tests_SignalEvent1579->setVisibility(VisibilityKind::public_);
		fUML_Tests_SignalEvent1579->setSignal(fUML_Tests_TestSignal);
	fUML_Tests->addPackagedElement(fUML_Tests_SignalEvent1579);
		// Activity CopierCaller
		fUML_Tests_CopierCaller->setThisActivityPtr(fUML_Tests_CopierCaller);
		fUML_Tests_CopierCaller->setName("CopierCaller");
		fUML_Tests_CopierCaller->setVisibility(VisibilityKind::public_);
		fUML_Tests_CopierCaller->isReentrant = false;
			// Parameter output
			fUML_Tests_CopierCaller_output->setThisElementPtr(fUML_Tests_CopierCaller_output);
			fUML_Tests_CopierCaller_output->setName("output");
			fUML_Tests_CopierCaller_output->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_CopierCaller_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_CopierCaller_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_CopierCaller->addOwnedParameter(fUML_Tests_CopierCaller_output);
			// ActivityParameterNode Parameter(output)
			fUML_Tests_CopierCaller_Parameter_output->setThisElementPtr(fUML_Tests_CopierCaller_Parameter_output);
			fUML_Tests_CopierCaller_Parameter_output->setName("Parameter(output)");
			fUML_Tests_CopierCaller_Parameter_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_CopierCaller_Parameter_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_CopierCaller_Parameter_output->setParameter(fUML_Tests_CopierCaller_output);
		fUML_Tests_CopierCaller->addNode(fUML_Tests_CopierCaller_Parameter_output);
			// ValueSpecificationAction Value(888)
			fUML_Tests_CopierCaller_Value_888->setThisExecutableNodePtr(fUML_Tests_CopierCaller_Value_888);
			fUML_Tests_CopierCaller_Value_888->setName("Value(888)");
			fUML_Tests_CopierCaller_Value_888->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1584
				fUML_Tests_CopierCaller_Value_888_LiteralInteger1584->setThisElementPtr(fUML_Tests_CopierCaller_Value_888_LiteralInteger1584);
				fUML_Tests_CopierCaller_Value_888_LiteralInteger1584->setName("LiteralInteger1584");
				fUML_Tests_CopierCaller_Value_888_LiteralInteger1584->setVisibility(VisibilityKind::public_);
				fUML_Tests_CopierCaller_Value_888_LiteralInteger1584->setValue(888);
			fUML_Tests_CopierCaller_Value_888->setValue(fUML_Tests_CopierCaller_Value_888_LiteralInteger1584);
				// OutputPin Value(0).result
				fUML_Tests_CopierCaller_Value_888_Value_0_result->setThisElementPtr(fUML_Tests_CopierCaller_Value_888_Value_0_result);
				fUML_Tests_CopierCaller_Value_888_Value_0_result->setName("Value(0).result");
				fUML_Tests_CopierCaller_Value_888_Value_0_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_CopierCaller_Value_888_Value_0_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_CopierCaller_Value_888->setResult(fUML_Tests_CopierCaller_Value_888_Value_0_result);
		fUML_Tests_CopierCaller->addNode(fUML_Tests_CopierCaller_Value_888);
			// CallBehaviorAction Call(Copier)
			fUML_Tests_CopierCaller_Call_Copier->setThisExecutableNodePtr(fUML_Tests_CopierCaller_Call_Copier);
			fUML_Tests_CopierCaller_Call_Copier->setName("Call(Copier)");
			fUML_Tests_CopierCaller_Call_Copier->setVisibility(VisibilityKind::public_);
				// OutputPin Copier.output
				fUML_Tests_CopierCaller_Call_Copier_Copier_output->setThisElementPtr(fUML_Tests_CopierCaller_Call_Copier_Copier_output);
				fUML_Tests_CopierCaller_Call_Copier_Copier_output->setName("Copier.output");
				fUML_Tests_CopierCaller_Call_Copier_Copier_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_CopierCaller_Call_Copier_Copier_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_CopierCaller_Call_Copier->addResult(fUML_Tests_CopierCaller_Call_Copier_Copier_output);
			fUML_Tests_CopierCaller_Call_Copier->setBehavior(fUML_Tests_Copier);
				// InputPin Copier.input
				fUML_Tests_CopierCaller_Call_Copier_Copier_input->setThisElementPtr(fUML_Tests_CopierCaller_Call_Copier_Copier_input);
				fUML_Tests_CopierCaller_Call_Copier_Copier_input->setName("Copier.input");
				fUML_Tests_CopierCaller_Call_Copier_Copier_input->setVisibility(VisibilityKind::public_);
				fUML_Tests_CopierCaller_Call_Copier_Copier_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_CopierCaller_Call_Copier->addArgument(fUML_Tests_CopierCaller_Call_Copier_Copier_input);
		fUML_Tests_CopierCaller->addNode(fUML_Tests_CopierCaller_Call_Copier);
			// ObjectFlow ObjectFlow1580 from Copier.output to Parameter(output)
			fUML_Tests_CopierCaller_ObjectFlow1580->setThisActivityEdgePtr(fUML_Tests_CopierCaller_ObjectFlow1580);
			fUML_Tests_CopierCaller_ObjectFlow1580->setName("ObjectFlow1580");
			fUML_Tests_CopierCaller_ObjectFlow1580->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_CopierCaller_ObjectFlow1580->setSource(fUML_Tests_CopierCaller_Call_Copier_Copier_output);
			fUML_Tests_CopierCaller_ObjectFlow1580->setTarget(fUML_Tests_CopierCaller_Parameter_output);
		fUML_Tests_CopierCaller->addEdge(fUML_Tests_CopierCaller_ObjectFlow1580);
			// ObjectFlow ObjectFlow1582 from Value(0).result to Copier.input
			fUML_Tests_CopierCaller_ObjectFlow1582->setThisActivityEdgePtr(fUML_Tests_CopierCaller_ObjectFlow1582);
			fUML_Tests_CopierCaller_ObjectFlow1582->setName("ObjectFlow1582");
			fUML_Tests_CopierCaller_ObjectFlow1582->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_CopierCaller_ObjectFlow1582->setSource(fUML_Tests_CopierCaller_Value_888_Value_0_result);
			fUML_Tests_CopierCaller_ObjectFlow1582->setTarget(fUML_Tests_CopierCaller_Call_Copier_Copier_input);
		fUML_Tests_CopierCaller->addEdge(fUML_Tests_CopierCaller_ObjectFlow1582);
	fUML_Tests->addPackagedElement(fUML_Tests_CopierCaller);
		// Signal TestSignal
		fUML_Tests_TestSignal->setThisSignalPtr(fUML_Tests_TestSignal);
		fUML_Tests_TestSignal->setName("TestSignal");
		fUML_Tests_TestSignal->setVisibility(VisibilityKind::public_);
	fUML_Tests->addPackagedElement(fUML_Tests_TestSignal);
		// SignalEvent SignalEvent1591
		fUML_Tests_SignalEvent1591->setThisElementPtr(fUML_Tests_SignalEvent1591);
		fUML_Tests_SignalEvent1591->setName("SignalEvent1591");
		fUML_Tests_SignalEvent1591->setVisibility(VisibilityKind::public_);
		fUML_Tests_SignalEvent1591->setSignal(fUML_Tests_TestSignal);
	fUML_Tests->addPackagedElement(fUML_Tests_SignalEvent1591);
		// Activity TestClassAttributeValueRemover
		fUML_Tests_TestClassAttributeValueRemover->setThisActivityPtr(fUML_Tests_TestClassAttributeValueRemover);
		fUML_Tests_TestClassAttributeValueRemover->setName("TestClassAttributeValueRemover");
		fUML_Tests_TestClassAttributeValueRemover->setVisibility(VisibilityKind::public_);
			// Parameter objectIn
			fUML_Tests_TestClassAttributeValueRemover_objectIn->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_objectIn);
			fUML_Tests_TestClassAttributeValueRemover_objectIn->setName("objectIn");
			fUML_Tests_TestClassAttributeValueRemover_objectIn->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_objectIn->setType(fUML_Tests_TestClass);
		fUML_Tests_TestClassAttributeValueRemover->addOwnedParameter(fUML_Tests_TestClassAttributeValueRemover_objectIn);
			// Parameter objectOut
			fUML_Tests_TestClassAttributeValueRemover_objectOut->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_objectOut);
			fUML_Tests_TestClassAttributeValueRemover_objectOut->setName("objectOut");
			fUML_Tests_TestClassAttributeValueRemover_objectOut->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_objectOut->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeValueRemover_objectOut->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassAttributeValueRemover->addOwnedParameter(fUML_Tests_TestClassAttributeValueRemover_objectOut);
			// AddStructuralFeatureValueAction Add(y)-3
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus3->setThisExecutableNodePtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus3->setName("Add(y)-3");
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus3->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus3->setStructuralFeature(fUML_Tests_TestClass_y);
				// InputPin object
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object->setName("object");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus3->setObject(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object);
				// InputPin value
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value->setName("value");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus3->setValue(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value);
				// OutputPin result
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result->setName("result");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus3->setResult(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3);
			// AddStructuralFeatureValueAction Add(y)-4
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus4->setThisExecutableNodePtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus4->setName("Add(y)-4");
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus4->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus4->setStructuralFeature(fUML_Tests_TestClass_y);
				// InputPin object
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object->setName("object");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus4->setObject(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object);
				// InputPin value
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value->setName("value");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus4->setValue(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value);
				// OutputPin result
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result->setName("result");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus4->setResult(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4);
			// AddStructuralFeatureValueAction Add(y)-1
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus1->setThisExecutableNodePtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus1->setName("Add(y)-1");
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus1->setStructuralFeature(fUML_Tests_TestClass_y);
				// InputPin object
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object->setName("object");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus1->setObject(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object);
				// InputPin value
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value->setName("value");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus1->setValue(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value);
				// OutputPin result
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result->setName("result");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus1->setResult(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1);
			// AddStructuralFeatureValueAction Add(y)-2
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus2->setThisExecutableNodePtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus2->setName("Add(y)-2");
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus2->setStructuralFeature(fUML_Tests_TestClass_y);
				// InputPin object
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object->setName("object");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus2->setObject(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object);
				// InputPin value
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value->setName("value");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus2->setValue(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value);
				// OutputPin result
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result->setName("result");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus2->setResult(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2);
			// ValueSpecificationAction Value(2)
			fUML_Tests_TestClassAttributeValueRemover_Value_2->setThisExecutableNodePtr(fUML_Tests_TestClassAttributeValueRemover_Value_2);
			fUML_Tests_TestClassAttributeValueRemover_Value_2->setName("Value(2)");
			fUML_Tests_TestClassAttributeValueRemover_Value_2->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1622
				fUML_Tests_TestClassAttributeValueRemover_Value_2_LiteralInteger1622->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Value_2_LiteralInteger1622);
				fUML_Tests_TestClassAttributeValueRemover_Value_2_LiteralInteger1622->setName("LiteralInteger1622");
				fUML_Tests_TestClassAttributeValueRemover_Value_2_LiteralInteger1622->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Value_2_LiteralInteger1622->setValue(2);
			fUML_Tests_TestClassAttributeValueRemover_Value_2->setValue(fUML_Tests_TestClassAttributeValueRemover_Value_2_LiteralInteger1622);
				// OutputPin result
				fUML_Tests_TestClassAttributeValueRemover_Value_2_result->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Value_2_result);
				fUML_Tests_TestClassAttributeValueRemover_Value_2_result->setName("result");
				fUML_Tests_TestClassAttributeValueRemover_Value_2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Value_2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassAttributeValueRemover_Value_2->setResult(fUML_Tests_TestClassAttributeValueRemover_Value_2_result);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_Value_2);
			// ForkNode ForkNode1662
			fUML_Tests_TestClassAttributeValueRemover_ForkNode1662->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_ForkNode1662);
			fUML_Tests_TestClassAttributeValueRemover_ForkNode1662->setName("ForkNode1662");
			fUML_Tests_TestClassAttributeValueRemover_ForkNode1662->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_ForkNode1662);
			// ActivityParameterNode objectOutNode
			fUML_Tests_TestClassAttributeValueRemover_objectOutNode->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_objectOutNode);
			fUML_Tests_TestClassAttributeValueRemover_objectOutNode->setName("objectOutNode");
			fUML_Tests_TestClassAttributeValueRemover_objectOutNode->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_objectOutNode->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeValueRemover_objectOutNode->setParameter(fUML_Tests_TestClassAttributeValueRemover_objectOut);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_objectOutNode);
			// RemoveStructuralFeatureValueAction RemoveAll(y)
			fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y->setThisExecutableNodePtr(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y);
			fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y->setName("RemoveAll(y)");
			fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y->setStructuralFeature(fUML_Tests_TestClass_y);
				// InputPin object
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object);
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object->setName("object");
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y->setObject(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object);
				// InputPin value
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value);
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value->setName("value");
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y->setValue(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value);
				// OutputPin result
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_result->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_result);
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_result->setName("result");
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y->setResult(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_result);
			fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y->setIsRemoveDuplicates(true);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y);
			// ActivityParameterNode objectInNode
			fUML_Tests_TestClassAttributeValueRemover_objectInNode->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_objectInNode);
			fUML_Tests_TestClassAttributeValueRemover_objectInNode->setName("objectInNode");
			fUML_Tests_TestClassAttributeValueRemover_objectInNode->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_objectInNode->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeValueRemover_objectInNode->setParameter(fUML_Tests_TestClassAttributeValueRemover_objectIn);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_objectInNode);
			// RemoveStructuralFeatureValueAction RemoveOne(y)
			fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y->setThisExecutableNodePtr(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y);
			fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y->setName("RemoveOne(y)");
			fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y->setStructuralFeature(fUML_Tests_TestClass_y);
				// InputPin object
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object);
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object->setName("object");
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y->setObject(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object);
				// InputPin value
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value);
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value->setName("value");
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y->setValue(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value);
				// OutputPin result
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result);
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result->setName("result");
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y->setResult(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y);
			// ValueSpecificationAction Value(1)
			fUML_Tests_TestClassAttributeValueRemover_Value_1->setThisExecutableNodePtr(fUML_Tests_TestClassAttributeValueRemover_Value_1);
			fUML_Tests_TestClassAttributeValueRemover_Value_1->setName("Value(1)");
			fUML_Tests_TestClassAttributeValueRemover_Value_1->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1645
				fUML_Tests_TestClassAttributeValueRemover_Value_1_LiteralInteger1645->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Value_1_LiteralInteger1645);
				fUML_Tests_TestClassAttributeValueRemover_Value_1_LiteralInteger1645->setName("LiteralInteger1645");
				fUML_Tests_TestClassAttributeValueRemover_Value_1_LiteralInteger1645->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Value_1_LiteralInteger1645->setValue(1);
			fUML_Tests_TestClassAttributeValueRemover_Value_1->setValue(fUML_Tests_TestClassAttributeValueRemover_Value_1_LiteralInteger1645);
				// OutputPin result
				fUML_Tests_TestClassAttributeValueRemover_Value_1_result->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Value_1_result);
				fUML_Tests_TestClassAttributeValueRemover_Value_1_result->setName("result");
				fUML_Tests_TestClassAttributeValueRemover_Value_1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Value_1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassAttributeValueRemover_Value_1->setResult(fUML_Tests_TestClassAttributeValueRemover_Value_1_result);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_Value_1);
			// ObjectFlow ObjectFlow1633 from result to value
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1633->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1633);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1633->setName("ObjectFlow1633");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1633->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1633->setSource(fUML_Tests_TestClassAttributeValueRemover_Value_2_result);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1633->setTarget(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1633);
			// ObjectFlow ObjectFlow1592 from result to object
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1592->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1592);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1592->setName("ObjectFlow1592");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1592->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1592->setSource(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1592->setTarget(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1592);
			// ObjectFlow ObjectFlow1594 from result to object
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1594->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1594);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1594->setName("ObjectFlow1594");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1594->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1594->setSource(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1594->setTarget(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1594);
			// ObjectFlow ObjectFlow1600 from result to object
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1600->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1600);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1600->setName("ObjectFlow1600");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1600->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1600->setSource(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1600->setTarget(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1600);
			// ObjectFlow ObjectFlow1635 from result to objectOutNode
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1635->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1635);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1635->setName("ObjectFlow1635");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1635->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1635->setSource(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_result);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1635->setTarget(fUML_Tests_TestClassAttributeValueRemover_objectOutNode);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1635);
			// ObjectFlow ObjectFlow1604 from ForkNode1662 to value
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1604->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1604);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1604->setName("ObjectFlow1604");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1604->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1604->setSource(fUML_Tests_TestClassAttributeValueRemover_ForkNode1662);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1604->setTarget(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1604);
			// ObjectFlow ObjectFlow1646 from ForkNode1662 to value
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1646->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1646);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1646->setName("ObjectFlow1646");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1646->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1646->setSource(fUML_Tests_TestClassAttributeValueRemover_ForkNode1662);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1646->setTarget(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1646);
			// ObjectFlow ObjectFlow1606 from result to ForkNode1662
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1606->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1606);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1606->setName("ObjectFlow1606");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1606->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1606->setSource(fUML_Tests_TestClassAttributeValueRemover_Value_1_result);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1606->setTarget(fUML_Tests_TestClassAttributeValueRemover_ForkNode1662);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1606);
			// ObjectFlow ObjectFlow1608 from ForkNode1662 to value
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1608->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1608);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1608->setName("ObjectFlow1608");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1608->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1608->setSource(fUML_Tests_TestClassAttributeValueRemover_ForkNode1662);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1608->setTarget(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1608);
			// ObjectFlow ObjectFlow1660 from result to object
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1660->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1660);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1660->setName("ObjectFlow1660");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1660->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1660->setSource(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1660->setTarget(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1660);
			// ObjectFlow ObjectFlow1625 from objectInNode to object
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1625->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1625);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1625->setName("ObjectFlow1625");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1625->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1625->setSource(fUML_Tests_TestClassAttributeValueRemover_objectInNode);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1625->setTarget(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1625);
			// ObjectFlow ObjectFlow1627 from ForkNode1662 to value
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1627->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1627);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1627->setName("ObjectFlow1627");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1627->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1627->setSource(fUML_Tests_TestClassAttributeValueRemover_ForkNode1662);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1627->setTarget(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1627);
			// ObjectFlow ObjectFlow1631 from ForkNode1662 to value
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1631->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1631);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1631->setName("ObjectFlow1631");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1631->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1631->setSource(fUML_Tests_TestClassAttributeValueRemover_ForkNode1662);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1631->setTarget(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1631);
			// ObjectFlow ObjectFlow1663 from result to object
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1663->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1663);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1663->setName("ObjectFlow1663");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1663->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1663->setSource(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1663->setTarget(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow1663);
	fUML_Tests->addPackagedElement(fUML_Tests_TestClassAttributeValueRemover);
		// Activity GenerateBooleanTestData
		fUML_Tests_GenerateBooleanTestData->setThisActivityPtr(fUML_Tests_GenerateBooleanTestData);
		fUML_Tests_GenerateBooleanTestData->setName("GenerateBooleanTestData");
		fUML_Tests_GenerateBooleanTestData->setVisibility(VisibilityKind::public_);
		fUML_Tests_GenerateBooleanTestData->isReentrant = false;
			// Parameter argumentData1
			fUML_Tests_GenerateBooleanTestData_argumentData1->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_argumentData1);
			fUML_Tests_GenerateBooleanTestData_argumentData1->setName("argumentData1");
			fUML_Tests_GenerateBooleanTestData_argumentData1->setVisibility(VisibilityKind::public_);
			fUML_Tests_GenerateBooleanTestData_argumentData1->setIsOrdered(true);
			fUML_Tests_GenerateBooleanTestData_argumentData1->setUpper(4);
			fUML_Tests_GenerateBooleanTestData_argumentData1->setLower(4);
			fUML_Tests_GenerateBooleanTestData_argumentData1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_argumentData1->setDirection(ParameterDirectionKind::out);
		fUML_Tests_GenerateBooleanTestData->addOwnedParameter(fUML_Tests_GenerateBooleanTestData_argumentData1);
			// Parameter argumentData2
			fUML_Tests_GenerateBooleanTestData_argumentData2->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_argumentData2);
			fUML_Tests_GenerateBooleanTestData_argumentData2->setName("argumentData2");
			fUML_Tests_GenerateBooleanTestData_argumentData2->setVisibility(VisibilityKind::public_);
			fUML_Tests_GenerateBooleanTestData_argumentData2->setIsOrdered(true);
			fUML_Tests_GenerateBooleanTestData_argumentData2->setUpper(4);
			fUML_Tests_GenerateBooleanTestData_argumentData2->setLower(4);
			fUML_Tests_GenerateBooleanTestData_argumentData2->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_argumentData2->setDirection(ParameterDirectionKind::out);
		fUML_Tests_GenerateBooleanTestData->addOwnedParameter(fUML_Tests_GenerateBooleanTestData_argumentData2);
			// ActivityParameterNode Param(argumentData2)
			fUML_Tests_GenerateBooleanTestData_Param_argumentData2->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Param_argumentData2);
			fUML_Tests_GenerateBooleanTestData_Param_argumentData2->setName("Param(argumentData2)");
			fUML_Tests_GenerateBooleanTestData_Param_argumentData2->setVisibility(VisibilityKind::public_);
			fUML_Tests_GenerateBooleanTestData_Param_argumentData2->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_Param_argumentData2->setParameter(fUML_Tests_GenerateBooleanTestData_argumentData2);
		fUML_Tests_GenerateBooleanTestData->addNode(fUML_Tests_GenerateBooleanTestData_Param_argumentData2);
			// ValueSpecificationAction Value(true)-1
			fUML_Tests_GenerateBooleanTestData_Value_trueminus1->setThisExecutableNodePtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus1);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus1->setName("Value(true)-1");
			fUML_Tests_GenerateBooleanTestData_Value_trueminus1->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1685
				fUML_Tests_GenerateBooleanTestData_Value_trueminus1_LiteralBoolean1685->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus1_LiteralBoolean1685);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus1_LiteralBoolean1685->setName("LiteralBoolean1685");
				fUML_Tests_GenerateBooleanTestData_Value_trueminus1_LiteralBoolean1685->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus1_LiteralBoolean1685->setValue(true);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus1->setValue(fUML_Tests_GenerateBooleanTestData_Value_trueminus1_LiteralBoolean1685);
				// OutputPin Value(true)-1.result
				fUML_Tests_GenerateBooleanTestData_Value_trueminus1_Value_trueminus1_result->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus1_Value_trueminus1_result);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus1_Value_trueminus1_result->setName("Value(true)-1.result");
				fUML_Tests_GenerateBooleanTestData_Value_trueminus1_Value_trueminus1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus1_Value_trueminus1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus1->setResult(fUML_Tests_GenerateBooleanTestData_Value_trueminus1_Value_trueminus1_result);
		fUML_Tests_GenerateBooleanTestData->addNode(fUML_Tests_GenerateBooleanTestData_Value_trueminus1);
			// ValueSpecificationAction Value(true)-4
			fUML_Tests_GenerateBooleanTestData_Value_trueminus4->setThisExecutableNodePtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus4);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus4->setName("Value(true)-4");
			fUML_Tests_GenerateBooleanTestData_Value_trueminus4->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1675
				fUML_Tests_GenerateBooleanTestData_Value_trueminus4_LiteralBoolean1675->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus4_LiteralBoolean1675);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus4_LiteralBoolean1675->setName("LiteralBoolean1675");
				fUML_Tests_GenerateBooleanTestData_Value_trueminus4_LiteralBoolean1675->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus4_LiteralBoolean1675->setValue(true);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus4->setValue(fUML_Tests_GenerateBooleanTestData_Value_trueminus4_LiteralBoolean1675);
				// OutputPin Value(true)-4.result
				fUML_Tests_GenerateBooleanTestData_Value_trueminus4_Value_trueminus4_result->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus4_Value_trueminus4_result);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus4_Value_trueminus4_result->setName("Value(true)-4.result");
				fUML_Tests_GenerateBooleanTestData_Value_trueminus4_Value_trueminus4_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus4_Value_trueminus4_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus4->setResult(fUML_Tests_GenerateBooleanTestData_Value_trueminus4_Value_trueminus4_result);
		fUML_Tests_GenerateBooleanTestData->addNode(fUML_Tests_GenerateBooleanTestData_Value_trueminus4);
			// ValueSpecificationAction Value(false)-3
			fUML_Tests_GenerateBooleanTestData_Value_falseminus3->setThisExecutableNodePtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus3);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus3->setName("Value(false)-3");
			fUML_Tests_GenerateBooleanTestData_Value_falseminus3->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1676
				fUML_Tests_GenerateBooleanTestData_Value_falseminus3_LiteralBoolean1676->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus3_LiteralBoolean1676);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus3_LiteralBoolean1676->setName("LiteralBoolean1676");
				fUML_Tests_GenerateBooleanTestData_Value_falseminus3_LiteralBoolean1676->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus3_LiteralBoolean1676->setValue(false);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus3->setValue(fUML_Tests_GenerateBooleanTestData_Value_falseminus3_LiteralBoolean1676);
				// OutputPin Value(false)-3.result
				fUML_Tests_GenerateBooleanTestData_Value_falseminus3_Value_falseminus3_result->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus3_Value_falseminus3_result);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus3_Value_falseminus3_result->setName("Value(false)-3.result");
				fUML_Tests_GenerateBooleanTestData_Value_falseminus3_Value_falseminus3_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus3_Value_falseminus3_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus3->setResult(fUML_Tests_GenerateBooleanTestData_Value_falseminus3_Value_falseminus3_result);
		fUML_Tests_GenerateBooleanTestData->addNode(fUML_Tests_GenerateBooleanTestData_Value_falseminus3);
			// ValueSpecificationAction Value(false)-4
			fUML_Tests_GenerateBooleanTestData_Value_falseminus4->setThisExecutableNodePtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus4);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus4->setName("Value(false)-4");
			fUML_Tests_GenerateBooleanTestData_Value_falseminus4->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1690
				fUML_Tests_GenerateBooleanTestData_Value_falseminus4_LiteralBoolean1690->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus4_LiteralBoolean1690);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus4_LiteralBoolean1690->setName("LiteralBoolean1690");
				fUML_Tests_GenerateBooleanTestData_Value_falseminus4_LiteralBoolean1690->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus4_LiteralBoolean1690->setValue(false);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus4->setValue(fUML_Tests_GenerateBooleanTestData_Value_falseminus4_LiteralBoolean1690);
				// OutputPin Value(false)-4.result
				fUML_Tests_GenerateBooleanTestData_Value_falseminus4_Value_falseminus4_result->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus4_Value_falseminus4_result);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus4_Value_falseminus4_result->setName("Value(false)-4.result");
				fUML_Tests_GenerateBooleanTestData_Value_falseminus4_Value_falseminus4_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus4_Value_falseminus4_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus4->setResult(fUML_Tests_GenerateBooleanTestData_Value_falseminus4_Value_falseminus4_result);
		fUML_Tests_GenerateBooleanTestData->addNode(fUML_Tests_GenerateBooleanTestData_Value_falseminus4);
			// ValueSpecificationAction Value(true)-2
			fUML_Tests_GenerateBooleanTestData_Value_trueminus2->setThisExecutableNodePtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus2);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus2->setName("Value(true)-2");
			fUML_Tests_GenerateBooleanTestData_Value_trueminus2->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1667
				fUML_Tests_GenerateBooleanTestData_Value_trueminus2_LiteralBoolean1667->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus2_LiteralBoolean1667);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus2_LiteralBoolean1667->setName("LiteralBoolean1667");
				fUML_Tests_GenerateBooleanTestData_Value_trueminus2_LiteralBoolean1667->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus2_LiteralBoolean1667->setValue(true);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus2->setValue(fUML_Tests_GenerateBooleanTestData_Value_trueminus2_LiteralBoolean1667);
				// OutputPin Value(true)-2.result
				fUML_Tests_GenerateBooleanTestData_Value_trueminus2_Value_trueminus2_result->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus2_Value_trueminus2_result);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus2_Value_trueminus2_result->setName("Value(true)-2.result");
				fUML_Tests_GenerateBooleanTestData_Value_trueminus2_Value_trueminus2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus2_Value_trueminus2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus2->setResult(fUML_Tests_GenerateBooleanTestData_Value_trueminus2_Value_trueminus2_result);
		fUML_Tests_GenerateBooleanTestData->addNode(fUML_Tests_GenerateBooleanTestData_Value_trueminus2);
			// ValueSpecificationAction Value(true)-3
			fUML_Tests_GenerateBooleanTestData_Value_trueminus3->setThisExecutableNodePtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus3);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus3->setName("Value(true)-3");
			fUML_Tests_GenerateBooleanTestData_Value_trueminus3->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1699
				fUML_Tests_GenerateBooleanTestData_Value_trueminus3_LiteralBoolean1699->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus3_LiteralBoolean1699);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus3_LiteralBoolean1699->setName("LiteralBoolean1699");
				fUML_Tests_GenerateBooleanTestData_Value_trueminus3_LiteralBoolean1699->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus3_LiteralBoolean1699->setValue(true);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus3->setValue(fUML_Tests_GenerateBooleanTestData_Value_trueminus3_LiteralBoolean1699);
				// OutputPin Value(true)-3.result
				fUML_Tests_GenerateBooleanTestData_Value_trueminus3_Value_trueminus3_result->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus3_Value_trueminus3_result);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus3_Value_trueminus3_result->setName("Value(true)-3.result");
				fUML_Tests_GenerateBooleanTestData_Value_trueminus3_Value_trueminus3_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus3_Value_trueminus3_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus3->setResult(fUML_Tests_GenerateBooleanTestData_Value_trueminus3_Value_trueminus3_result);
		fUML_Tests_GenerateBooleanTestData->addNode(fUML_Tests_GenerateBooleanTestData_Value_trueminus3);
			// ValueSpecificationAction Value(false)-2
			fUML_Tests_GenerateBooleanTestData_Value_falseminus2->setThisExecutableNodePtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus2);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus2->setName("Value(false)-2");
			fUML_Tests_GenerateBooleanTestData_Value_falseminus2->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1700
				fUML_Tests_GenerateBooleanTestData_Value_falseminus2_LiteralBoolean1700->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus2_LiteralBoolean1700);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus2_LiteralBoolean1700->setName("LiteralBoolean1700");
				fUML_Tests_GenerateBooleanTestData_Value_falseminus2_LiteralBoolean1700->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus2_LiteralBoolean1700->setValue(false);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus2->setValue(fUML_Tests_GenerateBooleanTestData_Value_falseminus2_LiteralBoolean1700);
				// OutputPin Value(false)-2.result
				fUML_Tests_GenerateBooleanTestData_Value_falseminus2_Value_falseminus2_result->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus2_Value_falseminus2_result);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus2_Value_falseminus2_result->setName("Value(false)-2.result");
				fUML_Tests_GenerateBooleanTestData_Value_falseminus2_Value_falseminus2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus2_Value_falseminus2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus2->setResult(fUML_Tests_GenerateBooleanTestData_Value_falseminus2_Value_falseminus2_result);
		fUML_Tests_GenerateBooleanTestData->addNode(fUML_Tests_GenerateBooleanTestData_Value_falseminus2);
			// ValueSpecificationAction Value(false)-1
			fUML_Tests_GenerateBooleanTestData_Value_falseminus1->setThisExecutableNodePtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus1);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus1->setName("Value(false)-1");
			fUML_Tests_GenerateBooleanTestData_Value_falseminus1->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1670
				fUML_Tests_GenerateBooleanTestData_Value_falseminus1_LiteralBoolean1670->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus1_LiteralBoolean1670);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus1_LiteralBoolean1670->setName("LiteralBoolean1670");
				fUML_Tests_GenerateBooleanTestData_Value_falseminus1_LiteralBoolean1670->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus1_LiteralBoolean1670->setValue(false);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus1->setValue(fUML_Tests_GenerateBooleanTestData_Value_falseminus1_LiteralBoolean1670);
				// OutputPin Value(false)-1.result
				fUML_Tests_GenerateBooleanTestData_Value_falseminus1_Value_falseminus1_result->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus1_Value_falseminus1_result);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus1_Value_falseminus1_result->setName("Value(false)-1.result");
				fUML_Tests_GenerateBooleanTestData_Value_falseminus1_Value_falseminus1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus1_Value_falseminus1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus1->setResult(fUML_Tests_GenerateBooleanTestData_Value_falseminus1_Value_falseminus1_result);
		fUML_Tests_GenerateBooleanTestData->addNode(fUML_Tests_GenerateBooleanTestData_Value_falseminus1);
			// ActivityParameterNode Param(argumentData1)
			fUML_Tests_GenerateBooleanTestData_Param_argumentData1->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Param_argumentData1);
			fUML_Tests_GenerateBooleanTestData_Param_argumentData1->setName("Param(argumentData1)");
			fUML_Tests_GenerateBooleanTestData_Param_argumentData1->setVisibility(VisibilityKind::public_);
			fUML_Tests_GenerateBooleanTestData_Param_argumentData1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_Param_argumentData1->setParameter(fUML_Tests_GenerateBooleanTestData_argumentData1);
		fUML_Tests_GenerateBooleanTestData->addNode(fUML_Tests_GenerateBooleanTestData_Param_argumentData1);
			// ObjectFlow ObjectFlow1683 from Value(true)-4.result to Param(argumentData2)
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1683->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ObjectFlow1683);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1683->setName("ObjectFlow1683");
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1683->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1683->setSource(fUML_Tests_GenerateBooleanTestData_Value_trueminus4_Value_trueminus4_result);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1683->setTarget(fUML_Tests_GenerateBooleanTestData_Param_argumentData2);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ObjectFlow1683);
			// ObjectFlow ObjectFlow1686 from Value(false)-2.result to Param(argumentData1)
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1686->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ObjectFlow1686);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1686->setName("ObjectFlow1686");
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1686->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1686->setSource(fUML_Tests_GenerateBooleanTestData_Value_falseminus2_Value_falseminus2_result);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1686->setTarget(fUML_Tests_GenerateBooleanTestData_Param_argumentData1);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ObjectFlow1686);
			// ObjectFlow ObjectFlow1665 from Value(false)-4.result to Param(argumentData2)
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1665->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ObjectFlow1665);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1665->setName("ObjectFlow1665");
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1665->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1665->setSource(fUML_Tests_GenerateBooleanTestData_Value_falseminus4_Value_falseminus4_result);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1665->setTarget(fUML_Tests_GenerateBooleanTestData_Param_argumentData2);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ObjectFlow1665);
			// ObjectFlow ObjectFlow1668 from Value(true)-1.result to Param(argumentData1)
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1668->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ObjectFlow1668);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1668->setName("ObjectFlow1668");
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1668->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1668->setSource(fUML_Tests_GenerateBooleanTestData_Value_trueminus1_Value_trueminus1_result);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1668->setTarget(fUML_Tests_GenerateBooleanTestData_Param_argumentData1);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ObjectFlow1668);
			// ObjectFlow ObjectFlow1691 from Value(false)-1.result to Param(argumentData1)
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1691->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ObjectFlow1691);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1691->setName("ObjectFlow1691");
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1691->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1691->setSource(fUML_Tests_GenerateBooleanTestData_Value_falseminus1_Value_falseminus1_result);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1691->setTarget(fUML_Tests_GenerateBooleanTestData_Param_argumentData1);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ObjectFlow1691);
			// ControlFlow ControlFlow1673 from Value(true)-2 to Value(false)-1
			fUML_Tests_GenerateBooleanTestData_ControlFlow1673->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ControlFlow1673);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1673->setName("ControlFlow1673");
			fUML_Tests_GenerateBooleanTestData_ControlFlow1673->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ControlFlow1673->setSource(fUML_Tests_GenerateBooleanTestData_Value_trueminus2);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1673->setTarget(fUML_Tests_GenerateBooleanTestData_Value_falseminus1);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ControlFlow1673);
			// ControlFlow ControlFlow1693 from Value(true)-4 to Value(false)-4
			fUML_Tests_GenerateBooleanTestData_ControlFlow1693->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ControlFlow1693);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1693->setName("ControlFlow1693");
			fUML_Tests_GenerateBooleanTestData_ControlFlow1693->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ControlFlow1693->setSource(fUML_Tests_GenerateBooleanTestData_Value_trueminus4);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1693->setTarget(fUML_Tests_GenerateBooleanTestData_Value_falseminus4);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ControlFlow1693);
			// ObjectFlow ObjectFlow1695 from Value(true)-3.result to Param(argumentData2)
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1695->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ObjectFlow1695);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1695->setName("ObjectFlow1695");
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1695->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1695->setSource(fUML_Tests_GenerateBooleanTestData_Value_trueminus3_Value_trueminus3_result);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1695->setTarget(fUML_Tests_GenerateBooleanTestData_Param_argumentData2);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ObjectFlow1695);
			// ControlFlow ControlFlow1697 from Value(false)-3 to Value(true)-4
			fUML_Tests_GenerateBooleanTestData_ControlFlow1697->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ControlFlow1697);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1697->setName("ControlFlow1697");
			fUML_Tests_GenerateBooleanTestData_ControlFlow1697->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ControlFlow1697->setSource(fUML_Tests_GenerateBooleanTestData_Value_falseminus3);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1697->setTarget(fUML_Tests_GenerateBooleanTestData_Value_trueminus4);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ControlFlow1697);
			// ControlFlow ControlFlow1677 from Value(true)-1 to Value(true)-2
			fUML_Tests_GenerateBooleanTestData_ControlFlow1677->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ControlFlow1677);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1677->setName("ControlFlow1677");
			fUML_Tests_GenerateBooleanTestData_ControlFlow1677->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ControlFlow1677->setSource(fUML_Tests_GenerateBooleanTestData_Value_trueminus1);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1677->setTarget(fUML_Tests_GenerateBooleanTestData_Value_trueminus2);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ControlFlow1677);
			// ObjectFlow ObjectFlow1679 from Value(false)-3.result to Param(argumentData2)
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1679->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ObjectFlow1679);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1679->setName("ObjectFlow1679");
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1679->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1679->setSource(fUML_Tests_GenerateBooleanTestData_Value_falseminus3_Value_falseminus3_result);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1679->setTarget(fUML_Tests_GenerateBooleanTestData_Param_argumentData2);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ObjectFlow1679);
			// ObjectFlow ObjectFlow1701 from Value(true)-2.result to Param(argumentData1)
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1701->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ObjectFlow1701);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1701->setName("ObjectFlow1701");
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1701->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1701->setSource(fUML_Tests_GenerateBooleanTestData_Value_trueminus2_Value_trueminus2_result);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1701->setTarget(fUML_Tests_GenerateBooleanTestData_Param_argumentData1);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ObjectFlow1701);
			// ControlFlow ControlFlow1703 from Value(false)-1 to Value(false)-2
			fUML_Tests_GenerateBooleanTestData_ControlFlow1703->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ControlFlow1703);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1703->setName("ControlFlow1703");
			fUML_Tests_GenerateBooleanTestData_ControlFlow1703->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ControlFlow1703->setSource(fUML_Tests_GenerateBooleanTestData_Value_falseminus1);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1703->setTarget(fUML_Tests_GenerateBooleanTestData_Value_falseminus2);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ControlFlow1703);
			// ControlFlow ControlFlow1681 from Value(true)-3 to Value(false)-3
			fUML_Tests_GenerateBooleanTestData_ControlFlow1681->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ControlFlow1681);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1681->setName("ControlFlow1681");
			fUML_Tests_GenerateBooleanTestData_ControlFlow1681->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ControlFlow1681->setSource(fUML_Tests_GenerateBooleanTestData_Value_trueminus3);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1681->setTarget(fUML_Tests_GenerateBooleanTestData_Value_falseminus3);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ControlFlow1681);
	fUML_Tests->addPackagedElement(fUML_Tests_GenerateBooleanTestData);
		// Signal SpecializedSignal
		fUML_Tests_SpecializedSignal->setThisSignalPtr(fUML_Tests_SpecializedSignal);
		fUML_Tests_SpecializedSignal->setName("SpecializedSignal");
		fUML_Tests_SpecializedSignal->setVisibility(VisibilityKind::public_);
		
			// Generalization to TestSignal
			fUML_Tests_SpecializedSignal_Generalization1705->setThisElementPtr(fUML_Tests_SpecializedSignal_Generalization1705);
			fUML_Tests_SpecializedSignal_Generalization1705->setGeneral(fUML_Tests_TestSignal);
		fUML_Tests_SpecializedSignal->addGeneralization(fUML_Tests_SpecializedSignal_Generalization1705);
	fUML_Tests->addPackagedElement(fUML_Tests_SpecializedSignal);
}
