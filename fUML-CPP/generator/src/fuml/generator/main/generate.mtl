[comment encoding = UTF-8 /]

[module generate('http://www.eclipse.org/uml2/5.0.0/UML')]

[import fuml::generator::eclipse::generateCDTManagedBuilderCorePrefsFile /]
[import fuml::generator::eclipse::generateCoreResourcesPrefs /]
[import fuml::generator::eclipse::generateCProjectFile /]
[import fuml::generator::eclipse::generateDebugLaunchConfigurationFile /]
[import fuml::generator::eclipse::generateLanguageSettingsXML /]
[import fuml::generator::eclipse::generateProjectFile /]
[import fuml::generator::eclipse::generateReleaseLaunchConfigurationFile /]
[import fuml::generator::environment::generateEnvironmentClassHeaderFile /]
[import fuml::generator::environment::generateEnvironmentClassSourceFile /]
[import fuml::generator::executionmode::executionmode /]
[import fuml::generator::git::generateGitignore /]
[import fuml::generator::mainsource::generateMainSourceFile /]
[import fuml::generator::model::generateModelClassHeaderFile /]
[import fuml::generator::model::generateModelClassSourceFile /]
[import fuml::generator::naming::naming /]
[import fuml::generator::opaquebehaviorexecutions::generateOpaqueBehaviorExecutionClassHeaderFile /]
[import fuml::generator::opaquebehaviorexecutions::generateOpaqueBehaviorExecutionClassSourceFile /]

[template public generateModel(aPackage : Package)]
[comment @main/]
[comment]
 * Uncomment the following line to enable extended naming convention mode.
 * In extended naming convention mode, an element's metaclass name will be added to it's name.
 * E.g.:
 * 		Class named 'MyClass' 		--> Class_MyClass
 * 		Activity named 'myActivity'	-->	Activity_myActivity
 * 		Package named 'APackage'	--> Package_APackage
 * This allows for multiple elements in the same hierarchical layer having the same name.
[/comment]
[comment] [setUseExtendedNamingConvention(true)/] [/comment]

[comment]
 * Uncomment the following line to generate the model as none-executable (i.e. generates InMemoryModel only)
[/comment]
[comment] [setIsNoneExecutable()/] [/comment]
[comment]
 * Uncomment the following line to generate the model as fUML-executable (i.e. generates bypasses PSCS execution environment)
[/comment]
[comment] [setIsFUMLExecutable()/] [/comment]
[comment]
 * Uncomment the following line to generate the model as PSCS-executable
[/comment]
[setIsPSCSExecutable()/]


[comment Ensure that this is only done for the root package /]
[if (aPackage.nestingPackage = null)]

	[if (isExecutable())]
		[aPackage.generateEnvironmentClassHeaderFile()/]
		[aPackage.generateEnvironmentClassSourceFile()/]

		[for (anOpaqueBehavior : OpaqueBehavior | aPackage.allOwnedElements()->filter(OpaqueBehavior))]
			[anOpaqueBehavior.generateOpaqueBehaviorExecutionClassHeaderFile()/]
			[anOpaqueBehavior.generateOpaqueBehaviorExecutionClassSourceFile()/]
		[/for]

		[generateCDTManagedBuilderCorePrefsFile()/]
		[generateDebugLaunchConfigurationFile()/]
		[generateReleaseLaunchConfigurationFile()/]
	[/if]

	[aPackage.generateModelClassHeaderFile()/]
	[aPackage.generateModelClassSourceFile()/]

	[aPackage.generateMainSourceFile()/]

	[generateCoreResourcesPrefs()/]
	[aPackage.generateCProjectFile()/]
	[generateGitignore()/]
	[generateLanguageSettingsXML()/]
	[generateProjectFile()/]
[/if]
[/template]
