/*
 * fUML_TestsModel.cpp
 * 
 * Auto-generated file
 */

#include "fUML_TestsModel.h"

#include <uml/commonbehavior/FunctionBehavior.h>
#include <uml/actions/DestroyObjectAction.h>
#include <uml/activities/Activity.h>
#include <uml/classification/Property.h>
#include <uml/simpleclassifiers/PrimitiveType.h>
#include <uml/classification/Parameter.h>
#include <uml/actions/ReadSelfAction.h>
#include <uml/classification/Operation.h>
#include <uml/activities/ControlFlow.h>
#include <uml/activities/ForkNode.h>
#include <uml/actions/UnmarshallAction.h>
#include <uml/actions/AcceptCallAction.h>
#include <uml/activities/ActivityFinalNode.h>
#include <uml/activities/InitialNode.h>
#include <uml/actions/ValueSpecificationAction.h>
#include <uml/actions/LinkEndData.h>
#include <utils/library/FoundationalModelLibraryModel.h>
#include <uml/actions/CreateObjectAction.h>
#include <uml/commonbehavior/SignalEvent.h>
#include <uml/commonbehavior/CallEvent.h>
#include <uml/values/LiteralUnlimitedNatural.h>
#include <uml/values/LiteralString.h>
#include <uml/values/LiteralReal.h>
#include <uml/actions/ReplyAction.h>
#include <uml/actions/CallBehaviorAction.h>
#include <uml/actions/ReadStructuralFeatureAction.h>
#include <uml/activities/ObjectFlow.h>
#include <uml/actions/RemoveStructuralFeatureValueAction.h>
#include <uml/activities/JoinNode.h>
#include <uml/actions/TestIdentityAction.h>
#include <uml/actions/AddStructuralFeatureValueAction.h>
#include <uml/values/LiteralBoolean.h>
#include <uml/actions/InputPin.h>
#include <uml/values/LiteralInteger.h>
#include <uml/commonbehavior/Trigger.h>
#include <uml/activities/MergeNode.h>
#include <uml/activities/CentralBufferNode.h>
#include <uml/actions/ReadLinkAction.h>
#include <uml/activities/ActivityParameterNode.h>
#include <uml/actions/AcceptEventAction.h>
#include <uml/actions/StartObjectBehaviorAction.h>
#include <utils/primitivetypes/PrimitiveTypesModel.h>
#include <uml/commonstructure/PackageImport.h>
#include <uml/classification/Generalization.h>
#include <uml/activities/DecisionNode.h>
#include <uml/structuredclassifiers/Association.h>
#include <uml/actions/CallOperationAction.h>
#include <uml/actions/StructuredActivityNode.h>
#include <uml/packages/Package.h>
#include <uml/activities/DataStoreNode.h>
#include <uml/actions/ReclassifyObjectAction.h>
#include <uml/actions/OutputPin.h>
#include <uml/actions/SendSignalAction.h>
#include <uml/actions/ReadIsClassifiedObjectAction.h>
#include <uml/structuredclassifiers/Class_.h>
#include <uml/simpleclassifiers/Signal.h>
#include <uml/actions/ReadExtentAction.h>


/*
 *	TODO: Generate includes for metaclasses
 */

/* Start of user code : User-defined includes and using directives
 * This section may be used for includes and using directives.
 * It will not be overwritten by future generation processes.
 */

/*
 * End of user code
 */

using namespace fUML_Tests;
using namespace fuml::primitivetypes;
using namespace fuml::library;

/* Start of user code : User-defined members
 * This section may be used for user-defined members,
 * for exmaple implementations of user-defined member functions
 * or definition of static members.
 * It will not be overwritten by future generation processes.
 */

/*
 * End of user code
 */

fUML_TestsModel::fUML_TestsModel()
{
	/* Start of user code : Additional model initializations
 	 * This section may be used to do any additional model initialization,
	 * for example initializing user-defined members.
 	 * It will not be overwritten by future generation processes.
 	 */

	/*
 	 * End of user code
 	 */
}

fUML_TestsModel::~fUML_TestsModel()
{
	/* Start of user code : Additional model cleanup
 	 * This section may be used to do any additional model cleanup,
	 * for example freeing memory for user-defined members.
 	 * It will not be overwritten by future generation processes.
 	 */

	/*
 	 * End of user code
 	 */
}

const std::shared_ptr<fUML_TestsModel>& fUML_TestsModel::Instance()
{
	static std::shared_ptr<fUML_TestsModel> instance = nullptr;

	if(!instance)
	{
		instance.reset(new fUML_TestsModel());
		instance->initializeInMemoryModel();
	}

	return instance;
}

void fUML_TestsModel::initializeInMemoryModel()
{
	// Create public members
	/*
	 * Model fUML_Tests
	 */
	fUML_Tests.reset(new Package());
	this->addToElementRepository("fUML_Tests", fUML_Tests);
		fUML_Tests_GenerateListTestData.reset(new Activity());
		this->addToElementRepository("GenerateListTestData", fUML_Tests_GenerateListTestData);
			fUML_Tests_GenerateListTestData_ControlFlow0.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow0", fUML_Tests_GenerateListTestData_ControlFlow0);
				fUML_Tests_GenerateListTestData_ControlFlow0_LiteralInteger1.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1", fUML_Tests_GenerateListTestData_ControlFlow0_LiteralInteger1);
			fUML_Tests_GenerateListTestData_Value_3.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(3)", fUML_Tests_GenerateListTestData_Value_3);
				fUML_Tests_GenerateListTestData_Value_3_Value_3_result.reset(new OutputPin());
				this->addToElementRepository("Value(3).result", fUML_Tests_GenerateListTestData_Value_3_Value_3_result);
					fUML_Tests_GenerateListTestData_Value_3_Value_3_result_LiteralInteger2.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger2", fUML_Tests_GenerateListTestData_Value_3_Value_3_result_LiteralInteger2);
					fUML_Tests_GenerateListTestData_Value_3_Value_3_result_LiteralUnlimitedNatural3.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural3", fUML_Tests_GenerateListTestData_Value_3_Value_3_result_LiteralUnlimitedNatural3);
				fUML_Tests_GenerateListTestData_Value_3_LiteralInteger4.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger4", fUML_Tests_GenerateListTestData_Value_3_LiteralInteger4);
			fUML_Tests_GenerateListTestData_Param_list.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(list)", fUML_Tests_GenerateListTestData_Param_list);
			fUML_Tests_GenerateListTestData_list.reset(new Parameter());
			this->addToElementRepository("list", fUML_Tests_GenerateListTestData_list);
				fUML_Tests_GenerateListTestData_list_LiteralUnlimitedNatural5.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural5", fUML_Tests_GenerateListTestData_list_LiteralUnlimitedNatural5);
				fUML_Tests_GenerateListTestData_list_LiteralUnlimitedNatural6.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural6", fUML_Tests_GenerateListTestData_list_LiteralUnlimitedNatural6);
			fUML_Tests_GenerateListTestData_ControlFlow7.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow7", fUML_Tests_GenerateListTestData_ControlFlow7);
				fUML_Tests_GenerateListTestData_ControlFlow7_LiteralInteger8.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger8", fUML_Tests_GenerateListTestData_ControlFlow7_LiteralInteger8);
			fUML_Tests_GenerateListTestData_Value_1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)", fUML_Tests_GenerateListTestData_Value_1);
				fUML_Tests_GenerateListTestData_Value_1_LiteralInteger9.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger9", fUML_Tests_GenerateListTestData_Value_1_LiteralInteger9);
				fUML_Tests_GenerateListTestData_Value_1_Value_1_result.reset(new OutputPin());
				this->addToElementRepository("Value(1).result", fUML_Tests_GenerateListTestData_Value_1_Value_1_result);
					fUML_Tests_GenerateListTestData_Value_1_Value_1_result_LiteralInteger10.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger10", fUML_Tests_GenerateListTestData_Value_1_Value_1_result_LiteralInteger10);
					fUML_Tests_GenerateListTestData_Value_1_Value_1_result_LiteralUnlimitedNatural11.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural11", fUML_Tests_GenerateListTestData_Value_1_Value_1_result_LiteralUnlimitedNatural11);
			fUML_Tests_GenerateListTestData_ObjectFlow12.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow12", fUML_Tests_GenerateListTestData_ObjectFlow12);
				fUML_Tests_GenerateListTestData_ObjectFlow12_LiteralInteger13.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger13", fUML_Tests_GenerateListTestData_ObjectFlow12_LiteralInteger13);
			fUML_Tests_GenerateListTestData_Value_2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2)", fUML_Tests_GenerateListTestData_Value_2);
				fUML_Tests_GenerateListTestData_Value_2_LiteralInteger14.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger14", fUML_Tests_GenerateListTestData_Value_2_LiteralInteger14);
				fUML_Tests_GenerateListTestData_Value_2_Value_2_result.reset(new OutputPin());
				this->addToElementRepository("Value(2).result", fUML_Tests_GenerateListTestData_Value_2_Value_2_result);
					fUML_Tests_GenerateListTestData_Value_2_Value_2_result_LiteralUnlimitedNatural15.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural15", fUML_Tests_GenerateListTestData_Value_2_Value_2_result_LiteralUnlimitedNatural15);
					fUML_Tests_GenerateListTestData_Value_2_Value_2_result_LiteralInteger16.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger16", fUML_Tests_GenerateListTestData_Value_2_Value_2_result_LiteralInteger16);
			fUML_Tests_GenerateListTestData_ObjectFlow17.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow17", fUML_Tests_GenerateListTestData_ObjectFlow17);
				fUML_Tests_GenerateListTestData_ObjectFlow17_LiteralInteger18.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger18", fUML_Tests_GenerateListTestData_ObjectFlow17_LiteralInteger18);
			fUML_Tests_GenerateListTestData_ObjectFlow19.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow19", fUML_Tests_GenerateListTestData_ObjectFlow19);
				fUML_Tests_GenerateListTestData_ObjectFlow19_LiteralInteger20.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger20", fUML_Tests_GenerateListTestData_ObjectFlow19_LiteralInteger20);
		fUML_Tests_Copier.reset(new Activity());
		this->addToElementRepository("Copier", fUML_Tests_Copier);
			fUML_Tests_Copier_output.reset(new Parameter());
			this->addToElementRepository("output", fUML_Tests_Copier_output);
				fUML_Tests_Copier_output_LiteralInteger21.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger21", fUML_Tests_Copier_output_LiteralInteger21);
				fUML_Tests_Copier_output_LiteralUnlimitedNatural22.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural22", fUML_Tests_Copier_output_LiteralUnlimitedNatural22);
			fUML_Tests_Copier_Parameter_input.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(input)", fUML_Tests_Copier_Parameter_input);
			fUML_Tests_Copier_Parameter_output.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(output)", fUML_Tests_Copier_Parameter_output);
			fUML_Tests_Copier_input.reset(new Parameter());
			this->addToElementRepository("input", fUML_Tests_Copier_input);
				fUML_Tests_Copier_input_LiteralUnlimitedNatural23.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural23", fUML_Tests_Copier_input_LiteralUnlimitedNatural23);
				fUML_Tests_Copier_input_LiteralInteger24.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger24", fUML_Tests_Copier_input_LiteralInteger24);
			fUML_Tests_Copier_ObjectFlow25.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow25", fUML_Tests_Copier_ObjectFlow25);
				fUML_Tests_Copier_ObjectFlow25_LiteralInteger26.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger26", fUML_Tests_Copier_ObjectFlow25_LiteralInteger26);
		fUML_Tests_TestCallSender.reset(new Activity());
		this->addToElementRepository("TestCallSender", fUML_Tests_TestCallSender);
			fUML_Tests_TestCallSender_ObjectFlow27.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow27", fUML_Tests_TestCallSender_ObjectFlow27);
				fUML_Tests_TestCallSender_ObjectFlow27_LiteralUnlimitedNatural28.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural28", fUML_Tests_TestCallSender_ObjectFlow27_LiteralUnlimitedNatural28);
			fUML_Tests_TestCallSender_ActivityFinalNode29.reset(new ActivityFinalNode());
			this->addToElementRepository("ActivityFinalNode29", fUML_Tests_TestCallSender_ActivityFinalNode29);
			fUML_Tests_TestCallSender_ObjectFlow30.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow30", fUML_Tests_TestCallSender_ObjectFlow30);
				fUML_Tests_TestCallSender_ObjectFlow30_LiteralUnlimitedNatural31.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural31", fUML_Tests_TestCallSender_ObjectFlow30_LiteralUnlimitedNatural31);
			fUML_Tests_TestCallSender_value.reset(new Property());
			this->addToElementRepository("value", fUML_Tests_TestCallSender_value);
			fUML_Tests_TestCallSender_ObjectFlow32.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow32", fUML_Tests_TestCallSender_ObjectFlow32);
				fUML_Tests_TestCallSender_ObjectFlow32_LiteralUnlimitedNatural33.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural33", fUML_Tests_TestCallSender_ObjectFlow32_LiteralUnlimitedNatural33);
			fUML_Tests_TestCallSender_ControlFlow34.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow34", fUML_Tests_TestCallSender_ControlFlow34);
				fUML_Tests_TestCallSender_ControlFlow34_LiteralUnlimitedNatural35.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural35", fUML_Tests_TestCallSender_ControlFlow34_LiteralUnlimitedNatural35);
			fUML_Tests_TestCallSender_Call_test.reset(new CallOperationAction());
			this->addToElementRepository("Call(test)", fUML_Tests_TestCallSender_Call_test);
				fUML_Tests_TestCallSender_Call_test_Call_test_target.reset(new InputPin());
				this->addToElementRepository("Call(test).target", fUML_Tests_TestCallSender_Call_test_Call_test_target);
				fUML_Tests_TestCallSender_Call_test_Call_test_input.reset(new InputPin());
				this->addToElementRepository("Call(test).input", fUML_Tests_TestCallSender_Call_test_Call_test_input);
				fUML_Tests_TestCallSender_Call_test_Call_test_output.reset(new OutputPin());
				this->addToElementRepository("Call(test).output", fUML_Tests_TestCallSender_Call_test_Call_test_output);
			fUML_Tests_TestCallSender_ObjectFlow36.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow36", fUML_Tests_TestCallSender_ObjectFlow36);
				fUML_Tests_TestCallSender_ObjectFlow36_LiteralUnlimitedNatural37.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural37", fUML_Tests_TestCallSender_ObjectFlow36_LiteralUnlimitedNatural37);
			fUML_Tests_TestCallSender_Accept_TestSignal.reset(new AcceptEventAction());
			this->addToElementRepository("Accept(TestSignal)", fUML_Tests_TestCallSender_Accept_TestSignal);
				fUML_Tests_TestCallSender_Accept_TestSignal_Trigger38.reset(new Trigger());
				this->addToElementRepository("Trigger38", fUML_Tests_TestCallSender_Accept_TestSignal_Trigger38);
			fUML_Tests_TestCallSender_ObjectFlow39.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow39", fUML_Tests_TestCallSender_ObjectFlow39);
				fUML_Tests_TestCallSender_ObjectFlow39_LiteralUnlimitedNatural40.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural40", fUML_Tests_TestCallSender_ObjectFlow39_LiteralUnlimitedNatural40);
			fUML_Tests_TestCallSender_Create_TestCallAccepter.reset(new CreateObjectAction());
			this->addToElementRepository("Create(TestCallAccepter)", fUML_Tests_TestCallSender_Create_TestCallAccepter);
				fUML_Tests_TestCallSender_Create_TestCallAccepter_Create_TestCallAccepter_result.reset(new OutputPin());
				this->addToElementRepository("Create(TestCallAccepter).result", fUML_Tests_TestCallSender_Create_TestCallAccepter_Create_TestCallAccepter_result);
			fUML_Tests_TestCallSender_Start_TestCallAccepter.reset(new StartObjectBehaviorAction());
			this->addToElementRepository("Start(TestCallAccepter)", fUML_Tests_TestCallSender_Start_TestCallAccepter);
				fUML_Tests_TestCallSender_Start_TestCallAccepter_Start_TestCallAccepter_object.reset(new InputPin());
				this->addToElementRepository("Start(TestCallAccepter).object", fUML_Tests_TestCallSender_Start_TestCallAccepter_Start_TestCallAccepter_object);
			fUML_Tests_TestCallSender_ForkNode.reset(new ForkNode());
			this->addToElementRepository("ForkNode", fUML_Tests_TestCallSender_ForkNode);
			fUML_Tests_TestCallSender_ControlFlow41.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow41", fUML_Tests_TestCallSender_ControlFlow41);
				fUML_Tests_TestCallSender_ControlFlow41_LiteralUnlimitedNatural42.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural42", fUML_Tests_TestCallSender_ControlFlow41_LiteralUnlimitedNatural42);
			fUML_Tests_TestCallSender_Write_value.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(value)", fUML_Tests_TestCallSender_Write_value);
				fUML_Tests_TestCallSender_Write_value_Write_value_object.reset(new InputPin());
				this->addToElementRepository("Write(value).object", fUML_Tests_TestCallSender_Write_value_Write_value_object);
				fUML_Tests_TestCallSender_Write_value_Write_value_value.reset(new InputPin());
				this->addToElementRepository("Write(value).value", fUML_Tests_TestCallSender_Write_value_Write_value_value);
			fUML_Tests_TestCallSender_ReadSelf.reset(new ReadSelfAction());
			this->addToElementRepository("ReadSelf", fUML_Tests_TestCallSender_ReadSelf);
				fUML_Tests_TestCallSender_ReadSelf_ReadSelf_result.reset(new OutputPin());
				this->addToElementRepository("ReadSelf.result", fUML_Tests_TestCallSender_ReadSelf_ReadSelf_result);
			fUML_Tests_TestCallSender_ObjectFlow43.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow43", fUML_Tests_TestCallSender_ObjectFlow43);
				fUML_Tests_TestCallSender_ObjectFlow43_LiteralUnlimitedNatural44.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural44", fUML_Tests_TestCallSender_ObjectFlow43_LiteralUnlimitedNatural44);
			fUML_Tests_TestCallSender_Value_0.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(0)", fUML_Tests_TestCallSender_Value_0);
				fUML_Tests_TestCallSender_Value_0_LiteralInteger45.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger45", fUML_Tests_TestCallSender_Value_0_LiteralInteger45);
				fUML_Tests_TestCallSender_Value_0_Value_0_result.reset(new OutputPin());
				this->addToElementRepository("Value(0).result", fUML_Tests_TestCallSender_Value_0_Value_0_result);
		fUML_Tests_SignalEvent46.reset(new SignalEvent());
		this->addToElementRepository("SignalEvent46", fUML_Tests_SignalEvent46);
		fUML_Tests_Specific.reset(new Class_());
		this->addToElementRepository("Specific", fUML_Tests_Specific);
			fUML_Tests_Specific_Generalization47.reset(new Generalization());
			this->addToElementRepository("Generalization47", fUML_Tests_Specific_Generalization47);
			fUML_Tests_Specific_x.reset(new Property());
			this->addToElementRepository("x", fUML_Tests_Specific_x);
		fUML_Tests_TestClassAttributeWriter.reset(new Activity());
		this->addToElementRepository("TestClassAttributeWriter", fUML_Tests_TestClassAttributeWriter);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow48.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow48", fUML_Tests_TestClassAttributeWriter_ObjectFlow48);
				fUML_Tests_TestClassAttributeWriter_ObjectFlow48_LiteralInteger49.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger49", fUML_Tests_TestClassAttributeWriter_ObjectFlow48_LiteralInteger49);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow50.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow50", fUML_Tests_TestClassAttributeWriter_ObjectFlow50);
				fUML_Tests_TestClassAttributeWriter_ObjectFlow50_LiteralInteger51.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger51", fUML_Tests_TestClassAttributeWriter_ObjectFlow50_LiteralInteger51);
			fUML_Tests_TestClassAttributeWriter_objectIn.reset(new Parameter());
			this->addToElementRepository("objectIn", fUML_Tests_TestClassAttributeWriter_objectIn);
				fUML_Tests_TestClassAttributeWriter_objectIn_LiteralUnlimitedNatural52.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural52", fUML_Tests_TestClassAttributeWriter_objectIn_LiteralUnlimitedNatural52);
				fUML_Tests_TestClassAttributeWriter_objectIn_LiteralInteger53.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger53", fUML_Tests_TestClassAttributeWriter_objectIn_LiteralInteger53);
			fUML_Tests_TestClassAttributeWriter_Parameter_objectOut.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(objectOut)", fUML_Tests_TestClassAttributeWriter_Parameter_objectOut);
			fUML_Tests_TestClassAttributeWriter_Add_y.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Add(y)", fUML_Tests_TestClassAttributeWriter_Add_y);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result.reset(new OutputPin());
				this->addToElementRepository("Add(y).result", fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result);
					fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result_LiteralInteger54.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger54", fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result_LiteralInteger54);
					fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result_LiteralUnlimitedNatural55.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural55", fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result_LiteralUnlimitedNatural55);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value.reset(new InputPin());
				this->addToElementRepository("Add(y).value", fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value);
					fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value_LiteralUnlimitedNatural56.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural56", fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value_LiteralUnlimitedNatural56);
					fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value_LiteralInteger57.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger57", fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value_LiteralInteger57);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object.reset(new InputPin());
				this->addToElementRepository("Add(x).object", fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object);
					fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object_LiteralUnlimitedNatural58.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural58", fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object_LiteralUnlimitedNatural58);
					fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object_LiteralInteger59.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger59", fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object_LiteralInteger59);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt.reset(new InputPin());
				this->addToElementRepository("Add(y).insertAt", fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt);
					fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt_LiteralInteger60.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger60", fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt_LiteralInteger60);
					fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt_LiteralUnlimitedNatural61.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural61", fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt_LiteralUnlimitedNatural61);
			fUML_Tests_TestClassAttributeWriter_Parameter_objectIn.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(objectIn)", fUML_Tests_TestClassAttributeWriter_Parameter_objectIn);
			fUML_Tests_TestClassAttributeWriter_objectOut.reset(new Parameter());
			this->addToElementRepository("objectOut", fUML_Tests_TestClassAttributeWriter_objectOut);
				fUML_Tests_TestClassAttributeWriter_objectOut_LiteralInteger62.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger62", fUML_Tests_TestClassAttributeWriter_objectOut_LiteralInteger62);
				fUML_Tests_TestClassAttributeWriter_objectOut_LiteralUnlimitedNatural63.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural63", fUML_Tests_TestClassAttributeWriter_objectOut_LiteralUnlimitedNatural63);
			fUML_Tests_TestClassAttributeWriter_Parameter_value.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(value)", fUML_Tests_TestClassAttributeWriter_Parameter_value);
			fUML_Tests_TestClassAttributeWriter_value.reset(new Parameter());
			this->addToElementRepository("value", fUML_Tests_TestClassAttributeWriter_value);
				fUML_Tests_TestClassAttributeWriter_value_LiteralInteger64.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger64", fUML_Tests_TestClassAttributeWriter_value_LiteralInteger64);
				fUML_Tests_TestClassAttributeWriter_value_LiteralUnlimitedNatural65.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural65", fUML_Tests_TestClassAttributeWriter_value_LiteralUnlimitedNatural65);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow66.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow66", fUML_Tests_TestClassAttributeWriter_ObjectFlow66);
				fUML_Tests_TestClassAttributeWriter_ObjectFlow66_LiteralInteger67.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger67", fUML_Tests_TestClassAttributeWriter_ObjectFlow66_LiteralInteger67);
			fUML_Tests_TestClassAttributeWriter_Value_times.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(*)", fUML_Tests_TestClassAttributeWriter_Value_times);
				fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result.reset(new OutputPin());
				this->addToElementRepository("Value(*).result", fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result);
					fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result_LiteralUnlimitedNatural68.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural68", fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result_LiteralUnlimitedNatural68);
					fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result_LiteralInteger69.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger69", fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result_LiteralInteger69);
				fUML_Tests_TestClassAttributeWriter_Value_times_LiteralUnlimitedNatural70.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural70", fUML_Tests_TestClassAttributeWriter_Value_times_LiteralUnlimitedNatural70);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow71.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow71", fUML_Tests_TestClassAttributeWriter_ObjectFlow71);
				fUML_Tests_TestClassAttributeWriter_ObjectFlow71_LiteralUnlimitedNatural72.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural72", fUML_Tests_TestClassAttributeWriter_ObjectFlow71_LiteralUnlimitedNatural72);
		fUML_Tests_TestAssociationEndWriterReader.reset(new Activity());
		this->addToElementRepository("TestAssociationEndWriterReader", fUML_Tests_TestAssociationEndWriterReader);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow73.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow73", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow73);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow73_LiteralUnlimitedNatural74.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural74", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow73_LiteralUnlimitedNatural74);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow75.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow75", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow75);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow75_LiteralUnlimitedNatural76.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural76", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow75_LiteralUnlimitedNatural76);
			fUML_Tests_TestAssociationEndWriterReader_output1Node.reset(new ActivityParameterNode());
			this->addToElementRepository("output1Node", fUML_Tests_TestAssociationEndWriterReader_output1Node);
			fUML_Tests_TestAssociationEndWriterReader_Value_times.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(*)", fUML_Tests_TestAssociationEndWriterReader_Value_times);
				fUML_Tests_TestAssociationEndWriterReader_Value_times_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestAssociationEndWriterReader_Value_times_result);
				fUML_Tests_TestAssociationEndWriterReader_Value_times_LiteralUnlimitedNatural77.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural77", fUML_Tests_TestAssociationEndWriterReader_Value_times_LiteralUnlimitedNatural77);
			fUML_Tests_TestAssociationEndWriterReader_object1Node.reset(new ActivityParameterNode());
			this->addToElementRepository("object1Node", fUML_Tests_TestAssociationEndWriterReader_object1Node);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2.reset(new RemoveStructuralFeatureValueAction());
			this->addToElementRepository("RemoveAt(end2)", fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result_LiteralUnlimitedNatural78.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural78", fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result_LiteralUnlimitedNatural78);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result_LiteralInteger79.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger79", fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result_LiteralInteger79);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt.reset(new InputPin());
				this->addToElementRepository("removeAt", fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt_LiteralUnlimitedNatural80.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural80", fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt_LiteralUnlimitedNatural80);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt_LiteralInteger81.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger81", fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt_LiteralInteger81);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object_LiteralInteger82.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger82", fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object_LiteralInteger82);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object_LiteralUnlimitedNatural83.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural83", fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object_LiteralUnlimitedNatural83);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Add(end2)-1", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt.reset(new InputPin());
				this->addToElementRepository("insertAt", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt_LiteralUnlimitedNatural84.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural84", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt_LiteralUnlimitedNatural84);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt_LiteralInteger85.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger85", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt_LiteralInteger85);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result_LiteralUnlimitedNatural86.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural86", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result_LiteralUnlimitedNatural86);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result_LiteralInteger87.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger87", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result_LiteralInteger87);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object_LiteralUnlimitedNatural88.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural88", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object_LiteralUnlimitedNatural88);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object_LiteralInteger89.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger89", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object_LiteralInteger89);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value_LiteralUnlimitedNatural90.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural90", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value_LiteralUnlimitedNatural90);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value_LiteralInteger91.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger91", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value_LiteralInteger91);
			fUML_Tests_TestAssociationEndWriterReader_ForkNode92.reset(new ForkNode());
			this->addToElementRepository("ForkNode92", fUML_Tests_TestAssociationEndWriterReader_ForkNode92);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow93.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow93", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow93);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow93_LiteralUnlimitedNatural94.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural94", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow93_LiteralUnlimitedNatural94);
			fUML_Tests_TestAssociationEndWriterReader_ControlFlow95.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow95", fUML_Tests_TestAssociationEndWriterReader_ControlFlow95);
				fUML_Tests_TestAssociationEndWriterReader_ControlFlow95_LiteralUnlimitedNatural96.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural96", fUML_Tests_TestAssociationEndWriterReader_ControlFlow95_LiteralUnlimitedNatural96);
			fUML_Tests_TestAssociationEndWriterReader_object3.reset(new Parameter());
			this->addToElementRepository("object3", fUML_Tests_TestAssociationEndWriterReader_object3);
			fUML_Tests_TestAssociationEndWriterReader_ForkNode97.reset(new ForkNode());
			this->addToElementRepository("ForkNode97", fUML_Tests_TestAssociationEndWriterReader_ForkNode97);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow98.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow98", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow98);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow98_LiteralUnlimitedNatural99.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural99", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow98_LiteralUnlimitedNatural99);
			fUML_Tests_TestAssociationEndWriterReader_object1.reset(new Parameter());
			this->addToElementRepository("object1", fUML_Tests_TestAssociationEndWriterReader_object1);
			fUML_Tests_TestAssociationEndWriterReader_object2Node.reset(new ActivityParameterNode());
			this->addToElementRepository("object2Node", fUML_Tests_TestAssociationEndWriterReader_object2Node);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Add(end2)-2", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value_LiteralUnlimitedNatural100.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural100", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value_LiteralUnlimitedNatural100);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value_LiteralInteger101.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger101", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value_LiteralInteger101);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result_LiteralUnlimitedNatural102.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural102", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result_LiteralUnlimitedNatural102);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result_LiteralInteger103.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger103", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result_LiteralInteger103);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt.reset(new InputPin());
				this->addToElementRepository("insertAt", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt_LiteralUnlimitedNatural104.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural104", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt_LiteralUnlimitedNatural104);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt_LiteralInteger105.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger105", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt_LiteralInteger105);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object_LiteralInteger106.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger106", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object_LiteralInteger106);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object_LiteralUnlimitedNatural107.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural107", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object_LiteralUnlimitedNatural107);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow108.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow108", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow108);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow108_LiteralUnlimitedNatural109.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural109", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow108_LiteralUnlimitedNatural109);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow110.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow110", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow110);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow110_LiteralUnlimitedNatural111.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural111", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow110_LiteralUnlimitedNatural111);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow112.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow112", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow112);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow112_LiteralUnlimitedNatural113.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural113", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow112_LiteralUnlimitedNatural113);
			fUML_Tests_TestAssociationEndWriterReader_output2.reset(new Parameter());
			this->addToElementRepository("output2", fUML_Tests_TestAssociationEndWriterReader_output2);
				fUML_Tests_TestAssociationEndWriterReader_output2_LiteralUnlimitedNatural114.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural114", fUML_Tests_TestAssociationEndWriterReader_output2_LiteralUnlimitedNatural114);
				fUML_Tests_TestAssociationEndWriterReader_output2_LiteralUnlimitedNatural115.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural115", fUML_Tests_TestAssociationEndWriterReader_output2_LiteralUnlimitedNatural115);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow116.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow116", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow116);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow116_LiteralUnlimitedNatural117.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural117", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow116_LiteralUnlimitedNatural117);
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2.reset(new ReadStructuralFeatureAction());
			this->addToElementRepository("Read(end2)-2", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result);
					fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result_LiteralUnlimitedNatural118.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural118", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result_LiteralUnlimitedNatural118);
					fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result_LiteralInteger119.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger119", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result_LiteralInteger119);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object);
					fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object_LiteralUnlimitedNatural120.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural120", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object_LiteralUnlimitedNatural120);
					fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object_LiteralInteger121.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger121", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object_LiteralInteger121);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow122.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow122", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow122);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow122_LiteralUnlimitedNatural123.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural123", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow122_LiteralUnlimitedNatural123);
			fUML_Tests_TestAssociationEndWriterReader_expectedNode.reset(new ActivityParameterNode());
			this->addToElementRepository("expectedNode", fUML_Tests_TestAssociationEndWriterReader_expectedNode);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow124.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow124", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow124);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow124_LiteralUnlimitedNatural125.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural125", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow124_LiteralUnlimitedNatural125);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow126.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow126", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow126);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow126_LiteralUnlimitedNatural127.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural127", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow126_LiteralUnlimitedNatural127);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow128.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow128", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow128);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow128_LiteralUnlimitedNatural129.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural129", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow128_LiteralUnlimitedNatural129);
			fUML_Tests_TestAssociationEndWriterReader_ForkNode130.reset(new ForkNode());
			this->addToElementRepository("ForkNode130", fUML_Tests_TestAssociationEndWriterReader_ForkNode130);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow131.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow131", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow131);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow131_LiteralUnlimitedNatural132.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural132", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow131_LiteralUnlimitedNatural132);
			fUML_Tests_TestAssociationEndWriterReader_Value_2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2)", fUML_Tests_TestAssociationEndWriterReader_Value_2);
				fUML_Tests_TestAssociationEndWriterReader_Value_2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestAssociationEndWriterReader_Value_2_result);
					fUML_Tests_TestAssociationEndWriterReader_Value_2_result_LiteralInteger133.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger133", fUML_Tests_TestAssociationEndWriterReader_Value_2_result_LiteralInteger133);
					fUML_Tests_TestAssociationEndWriterReader_Value_2_result_LiteralUnlimitedNatural134.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural134", fUML_Tests_TestAssociationEndWriterReader_Value_2_result_LiteralUnlimitedNatural134);
				fUML_Tests_TestAssociationEndWriterReader_Value_2_LiteralUnlimitedNatural135.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural135", fUML_Tests_TestAssociationEndWriterReader_Value_2_LiteralUnlimitedNatural135);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2.reset(new RemoveStructuralFeatureValueAction());
			this->addToElementRepository("RemoveAll(end2)", fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value_LiteralInteger136.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger136", fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value_LiteralInteger136);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value_LiteralUnlimitedNatural137.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural137", fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value_LiteralUnlimitedNatural137);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result_LiteralUnlimitedNatural138.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural138", fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result_LiteralUnlimitedNatural138);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result_LiteralInteger139.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger139", fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result_LiteralInteger139);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object_LiteralUnlimitedNatural140.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural140", fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object_LiteralUnlimitedNatural140);
					fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object_LiteralInteger141.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger141", fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object_LiteralInteger141);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow142.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow142", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow142);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow142_LiteralUnlimitedNatural143.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural143", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow142_LiteralUnlimitedNatural143);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Add(end2)-3", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt.reset(new InputPin());
				this->addToElementRepository("insertAt", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt_LiteralInteger144.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger144", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt_LiteralInteger144);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt_LiteralUnlimitedNatural145.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural145", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt_LiteralUnlimitedNatural145);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object_LiteralInteger146.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger146", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object_LiteralInteger146);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object_LiteralUnlimitedNatural147.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural147", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object_LiteralUnlimitedNatural147);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result_LiteralUnlimitedNatural148.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural148", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result_LiteralUnlimitedNatural148);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result_LiteralInteger149.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger149", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result_LiteralInteger149);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value_LiteralInteger150.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger150", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value_LiteralInteger150);
					fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value_LiteralUnlimitedNatural151.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural151", fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value_LiteralUnlimitedNatural151);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow152.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow152", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow152);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow152_LiteralUnlimitedNatural153.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural153", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow152_LiteralUnlimitedNatural153);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow154.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow154", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow154);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow154_LiteralUnlimitedNatural155.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural155", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow154_LiteralUnlimitedNatural155);
			fUML_Tests_TestAssociationEndWriterReader_output2Node.reset(new ActivityParameterNode());
			this->addToElementRepository("output2Node", fUML_Tests_TestAssociationEndWriterReader_output2Node);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow156.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow156", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow156);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow156_LiteralUnlimitedNatural157.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural157", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow156_LiteralUnlimitedNatural157);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow158.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow158", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow158);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow158_LiteralUnlimitedNatural159.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural159", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow158_LiteralUnlimitedNatural159);
			fUML_Tests_TestAssociationEndWriterReader_expected.reset(new Parameter());
			this->addToElementRepository("expected", fUML_Tests_TestAssociationEndWriterReader_expected);
				fUML_Tests_TestAssociationEndWriterReader_expected_LiteralUnlimitedNatural160.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural160", fUML_Tests_TestAssociationEndWriterReader_expected_LiteralUnlimitedNatural160);
				fUML_Tests_TestAssociationEndWriterReader_expected_LiteralInteger161.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger161", fUML_Tests_TestAssociationEndWriterReader_expected_LiteralInteger161);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow162.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow162", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow162);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow162_LiteralUnlimitedNatural163.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural163", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow162_LiteralUnlimitedNatural163);
			fUML_Tests_TestAssociationEndWriterReader_object3Node.reset(new ActivityParameterNode());
			this->addToElementRepository("object3Node", fUML_Tests_TestAssociationEndWriterReader_object3Node);
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1.reset(new ReadStructuralFeatureAction());
			this->addToElementRepository("Read(end2)-1", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result);
					fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result_LiteralUnlimitedNatural164.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural164", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result_LiteralUnlimitedNatural164);
					fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result_LiteralInteger165.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger165", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result_LiteralInteger165);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object);
					fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object_LiteralUnlimitedNatural166.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural166", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object_LiteralUnlimitedNatural166);
					fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object_LiteralInteger167.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger167", fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object_LiteralInteger167);
			fUML_Tests_TestAssociationEndWriterReader_ForkNode168.reset(new ForkNode());
			this->addToElementRepository("ForkNode168", fUML_Tests_TestAssociationEndWriterReader_ForkNode168);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow169.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow169", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow169);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow169_LiteralUnlimitedNatural170.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural170", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow169_LiteralUnlimitedNatural170);
			fUML_Tests_TestAssociationEndWriterReader_output1.reset(new Parameter());
			this->addToElementRepository("output1", fUML_Tests_TestAssociationEndWriterReader_output1);
				fUML_Tests_TestAssociationEndWriterReader_output1_LiteralUnlimitedNatural171.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural171", fUML_Tests_TestAssociationEndWriterReader_output1_LiteralUnlimitedNatural171);
				fUML_Tests_TestAssociationEndWriterReader_output1_LiteralUnlimitedNatural172.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural172", fUML_Tests_TestAssociationEndWriterReader_output1_LiteralUnlimitedNatural172);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow173.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow173", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow173);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow173_LiteralUnlimitedNatural174.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural174", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow173_LiteralUnlimitedNatural174);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow175.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow175", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow175);
				fUML_Tests_TestAssociationEndWriterReader_ObjectFlow175_LiteralUnlimitedNatural176.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural176", fUML_Tests_TestAssociationEndWriterReader_ObjectFlow175_LiteralUnlimitedNatural176);
			fUML_Tests_TestAssociationEndWriterReader_object2.reset(new Parameter());
			this->addToElementRepository("object2", fUML_Tests_TestAssociationEndWriterReader_object2);
		fUML_Tests_OtherSignal.reset(new Signal());
		this->addToElementRepository("OtherSignal", fUML_Tests_OtherSignal);
		fUML_Tests_Subclass2.reset(new Class_());
		this->addToElementRepository("Subclass2", fUML_Tests_Subclass2);
			fUML_Tests_Subclass2_b.reset(new Property());
			this->addToElementRepository("b", fUML_Tests_Subclass2_b);
			fUML_Tests_Subclass2_Generalization177.reset(new Generalization());
			this->addToElementRepository("Generalization177", fUML_Tests_Subclass2_Generalization177);
		fUML_Tests_TestClassAttributeValueRemover.reset(new Activity());
		this->addToElementRepository("TestClassAttributeValueRemover", fUML_Tests_TestClassAttributeValueRemover);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow178.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow178", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow178);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow178_LiteralUnlimitedNatural179.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural179", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow178_LiteralUnlimitedNatural179);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow180.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow180", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow180);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow180_LiteralUnlimitedNatural181.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural181", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow180_LiteralUnlimitedNatural181);
			fUML_Tests_TestClassAttributeValueRemover_Value_1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)", fUML_Tests_TestClassAttributeValueRemover_Value_1);
				fUML_Tests_TestClassAttributeValueRemover_Value_1_LiteralInteger182.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger182", fUML_Tests_TestClassAttributeValueRemover_Value_1_LiteralInteger182);
				fUML_Tests_TestClassAttributeValueRemover_Value_1_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassAttributeValueRemover_Value_1_result);
					fUML_Tests_TestClassAttributeValueRemover_Value_1_result_LiteralUnlimitedNatural183.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural183", fUML_Tests_TestClassAttributeValueRemover_Value_1_result_LiteralUnlimitedNatural183);
					fUML_Tests_TestClassAttributeValueRemover_Value_1_result_LiteralInteger184.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger184", fUML_Tests_TestClassAttributeValueRemover_Value_1_result_LiteralInteger184);
			fUML_Tests_TestClassAttributeValueRemover_objectIn.reset(new Parameter());
			this->addToElementRepository("objectIn", fUML_Tests_TestClassAttributeValueRemover_objectIn);
				fUML_Tests_TestClassAttributeValueRemover_objectIn_LiteralUnlimitedNatural185.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural185", fUML_Tests_TestClassAttributeValueRemover_objectIn_LiteralUnlimitedNatural185);
				fUML_Tests_TestClassAttributeValueRemover_objectIn_LiteralInteger186.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger186", fUML_Tests_TestClassAttributeValueRemover_objectIn_LiteralInteger186);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow187.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow187", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow187);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow187_LiteralUnlimitedNatural188.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural188", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow187_LiteralUnlimitedNatural188);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus4.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Add(y)-4", fUML_Tests_TestClassAttributeValueRemover_Add_yminus4);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value_LiteralUnlimitedNatural189.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural189", fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value_LiteralUnlimitedNatural189);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value_LiteralInteger190.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger190", fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value_LiteralInteger190);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result_LiteralUnlimitedNatural191.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural191", fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result_LiteralUnlimitedNatural191);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result_LiteralInteger192.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger192", fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result_LiteralInteger192);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object_LiteralInteger193.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger193", fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object_LiteralInteger193);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object_LiteralUnlimitedNatural194.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural194", fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object_LiteralUnlimitedNatural194);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow195.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow195", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow195);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow195_LiteralUnlimitedNatural196.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural196", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow195_LiteralUnlimitedNatural196);
			fUML_Tests_TestClassAttributeValueRemover_objectOut.reset(new Parameter());
			this->addToElementRepository("objectOut", fUML_Tests_TestClassAttributeValueRemover_objectOut);
				fUML_Tests_TestClassAttributeValueRemover_objectOut_LiteralUnlimitedNatural197.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural197", fUML_Tests_TestClassAttributeValueRemover_objectOut_LiteralUnlimitedNatural197);
				fUML_Tests_TestClassAttributeValueRemover_objectOut_LiteralInteger198.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger198", fUML_Tests_TestClassAttributeValueRemover_objectOut_LiteralInteger198);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow199.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow199", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow199);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow199_LiteralUnlimitedNatural200.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural200", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow199_LiteralUnlimitedNatural200);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus2.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Add(y)-2", fUML_Tests_TestClassAttributeValueRemover_Add_yminus2);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object_LiteralInteger201.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger201", fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object_LiteralInteger201);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object_LiteralUnlimitedNatural202.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural202", fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object_LiteralUnlimitedNatural202);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result_LiteralInteger203.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger203", fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result_LiteralInteger203);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result_LiteralUnlimitedNatural204.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural204", fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result_LiteralUnlimitedNatural204);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value_LiteralUnlimitedNatural205.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural205", fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value_LiteralUnlimitedNatural205);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value_LiteralInteger206.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger206", fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value_LiteralInteger206);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow207.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow207", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow207);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow207_LiteralUnlimitedNatural208.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural208", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow207_LiteralUnlimitedNatural208);
			fUML_Tests_TestClassAttributeValueRemover_Value_2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2)", fUML_Tests_TestClassAttributeValueRemover_Value_2);
				fUML_Tests_TestClassAttributeValueRemover_Value_2_LiteralInteger209.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger209", fUML_Tests_TestClassAttributeValueRemover_Value_2_LiteralInteger209);
				fUML_Tests_TestClassAttributeValueRemover_Value_2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassAttributeValueRemover_Value_2_result);
					fUML_Tests_TestClassAttributeValueRemover_Value_2_result_LiteralInteger210.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger210", fUML_Tests_TestClassAttributeValueRemover_Value_2_result_LiteralInteger210);
					fUML_Tests_TestClassAttributeValueRemover_Value_2_result_LiteralUnlimitedNatural211.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural211", fUML_Tests_TestClassAttributeValueRemover_Value_2_result_LiteralUnlimitedNatural211);
			fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y.reset(new RemoveStructuralFeatureValueAction());
			this->addToElementRepository("RemoveAll(y)", fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y);
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value);
					fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value_LiteralUnlimitedNatural212.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural212", fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value_LiteralUnlimitedNatural212);
					fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value_LiteralInteger213.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger213", fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value_LiteralInteger213);
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object);
					fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object_LiteralUnlimitedNatural214.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural214", fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object_LiteralUnlimitedNatural214);
					fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object_LiteralInteger215.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger215", fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object_LiteralInteger215);
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_result);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow216.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow216", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow216);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow216_LiteralUnlimitedNatural217.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural217", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow216_LiteralUnlimitedNatural217);
			fUML_Tests_TestClassAttributeValueRemover_ForkNode218.reset(new ForkNode());
			this->addToElementRepository("ForkNode218", fUML_Tests_TestClassAttributeValueRemover_ForkNode218);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow219.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow219", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow219);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow219_LiteralUnlimitedNatural220.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural220", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow219_LiteralUnlimitedNatural220);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow221.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow221", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow221);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow221_LiteralUnlimitedNatural222.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural222", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow221_LiteralUnlimitedNatural222);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus3.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Add(y)-3", fUML_Tests_TestClassAttributeValueRemover_Add_yminus3);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result_LiteralUnlimitedNatural223.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural223", fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result_LiteralUnlimitedNatural223);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result_LiteralInteger224.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger224", fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result_LiteralInteger224);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value_LiteralUnlimitedNatural225.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural225", fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value_LiteralUnlimitedNatural225);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value_LiteralInteger226.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger226", fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value_LiteralInteger226);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object_LiteralInteger227.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger227", fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object_LiteralInteger227);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object_LiteralUnlimitedNatural228.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural228", fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object_LiteralUnlimitedNatural228);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow229.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow229", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow229);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow229_LiteralUnlimitedNatural230.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural230", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow229_LiteralUnlimitedNatural230);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow231.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow231", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow231);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow231_LiteralUnlimitedNatural232.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural232", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow231_LiteralUnlimitedNatural232);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow233.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow233", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow233);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow233_LiteralUnlimitedNatural234.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural234", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow233_LiteralUnlimitedNatural234);
			fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y.reset(new RemoveStructuralFeatureValueAction());
			this->addToElementRepository("RemoveOne(y)", fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y);
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value);
					fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value_LiteralUnlimitedNatural235.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural235", fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value_LiteralUnlimitedNatural235);
					fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value_LiteralInteger236.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger236", fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value_LiteralInteger236);
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result);
					fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result_LiteralInteger237.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger237", fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result_LiteralInteger237);
					fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result_LiteralUnlimitedNatural238.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural238", fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result_LiteralUnlimitedNatural238);
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object);
					fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object_LiteralInteger239.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger239", fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object_LiteralInteger239);
					fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object_LiteralUnlimitedNatural240.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural240", fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object_LiteralUnlimitedNatural240);
			fUML_Tests_TestClassAttributeValueRemover_objectOutNode.reset(new ActivityParameterNode());
			this->addToElementRepository("objectOutNode", fUML_Tests_TestClassAttributeValueRemover_objectOutNode);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow241.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow241", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow241);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow241_LiteralUnlimitedNatural242.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural242", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow241_LiteralUnlimitedNatural242);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow243.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow243", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow243);
				fUML_Tests_TestClassAttributeValueRemover_ObjectFlow243_LiteralUnlimitedNatural244.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural244", fUML_Tests_TestClassAttributeValueRemover_ObjectFlow243_LiteralUnlimitedNatural244);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus1.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Add(y)-1", fUML_Tests_TestClassAttributeValueRemover_Add_yminus1);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object_LiteralUnlimitedNatural245.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural245", fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object_LiteralUnlimitedNatural245);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object_LiteralInteger246.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger246", fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object_LiteralInteger246);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result_LiteralUnlimitedNatural247.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural247", fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result_LiteralUnlimitedNatural247);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result_LiteralInteger248.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger248", fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result_LiteralInteger248);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value_LiteralUnlimitedNatural249.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural249", fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value_LiteralUnlimitedNatural249);
					fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value_LiteralInteger250.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger250", fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value_LiteralInteger250);
			fUML_Tests_TestClassAttributeValueRemover_objectInNode.reset(new ActivityParameterNode());
			this->addToElementRepository("objectInNode", fUML_Tests_TestClassAttributeValueRemover_objectInNode);
		fUML_Tests_TestClass.reset(new Class_());
		this->addToElementRepository("TestClass", fUML_Tests_TestClass);
			fUML_Tests_TestClass_x.reset(new Property());
			this->addToElementRepository("x", fUML_Tests_TestClass_x);
				fUML_Tests_TestClass_x_LiteralInteger251.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger251", fUML_Tests_TestClass_x_LiteralInteger251);
				fUML_Tests_TestClass_x_LiteralUnlimitedNatural252.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural252", fUML_Tests_TestClass_x_LiteralUnlimitedNatural252);
			fUML_Tests_TestClass_y.reset(new Property());
			this->addToElementRepository("y", fUML_Tests_TestClass_y);
				fUML_Tests_TestClass_y_LiteralInteger253.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger253", fUML_Tests_TestClass_y_LiteralInteger253);
				fUML_Tests_TestClass_y_LiteralUnlimitedNatural254.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural254", fUML_Tests_TestClass_y_LiteralUnlimitedNatural254);
		fUML_Tests_TestCallSend.reset(new Activity());
		this->addToElementRepository("TestCallSend", fUML_Tests_TestCallSend);
			fUML_Tests_TestCallSend_ObjectFlow255.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow255", fUML_Tests_TestCallSend_ObjectFlow255);
				fUML_Tests_TestCallSend_ObjectFlow255_LiteralUnlimitedNatural256.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural256", fUML_Tests_TestCallSend_ObjectFlow255_LiteralUnlimitedNatural256);
			fUML_Tests_TestCallSend_Create_TestCallSender.reset(new CreateObjectAction());
			this->addToElementRepository("Create(TestCallSender)", fUML_Tests_TestCallSend_Create_TestCallSender);
				fUML_Tests_TestCallSend_Create_TestCallSender_Create_TestCallSender_result.reset(new OutputPin());
				this->addToElementRepository("Create(TestCallSender).result", fUML_Tests_TestCallSend_Create_TestCallSender_Create_TestCallSender_result);
			fUML_Tests_TestCallSend_ControlFlow257.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow257", fUML_Tests_TestCallSend_ControlFlow257);
				fUML_Tests_TestCallSend_ControlFlow257_LiteralUnlimitedNatural258.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural258", fUML_Tests_TestCallSend_ControlFlow257_LiteralUnlimitedNatural258);
			fUML_Tests_TestCallSend_ObjectFlow259.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow259", fUML_Tests_TestCallSend_ObjectFlow259);
				fUML_Tests_TestCallSend_ObjectFlow259_LiteralUnlimitedNatural260.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural260", fUML_Tests_TestCallSend_ObjectFlow259_LiteralUnlimitedNatural260);
			fUML_Tests_TestCallSend_Send_TestSignal.reset(new SendSignalAction());
			this->addToElementRepository("Send(TestSignal)", fUML_Tests_TestCallSend_Send_TestSignal);
				fUML_Tests_TestCallSend_Send_TestSignal_Send_TestSignal_target.reset(new InputPin());
				this->addToElementRepository("Send(TestSignal).target", fUML_Tests_TestCallSend_Send_TestSignal_Send_TestSignal_target);
			fUML_Tests_TestCallSend_Start_TestCallSender.reset(new StartObjectBehaviorAction());
			this->addToElementRepository("Start(TestCallSender)", fUML_Tests_TestCallSend_Start_TestCallSender);
				fUML_Tests_TestCallSend_Start_TestCallSender_Start_TestCallSender_object.reset(new InputPin());
				this->addToElementRepository("Start(TestCallSender).object", fUML_Tests_TestCallSend_Start_TestCallSender_Start_TestCallSender_object);
			fUML_Tests_TestCallSend_ObjectFlow261.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow261", fUML_Tests_TestCallSend_ObjectFlow261);
				fUML_Tests_TestCallSend_ObjectFlow261_LiteralUnlimitedNatural262.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural262", fUML_Tests_TestCallSend_ObjectFlow261_LiteralUnlimitedNatural262);
			fUML_Tests_TestCallSend_ForkNode.reset(new ForkNode());
			this->addToElementRepository("ForkNode", fUML_Tests_TestCallSend_ForkNode);
		fUML_Tests_TestCompositeObjectDestroyer.reset(new Activity());
		this->addToElementRepository("TestCompositeObjectDestroyer", fUML_Tests_TestCompositeObjectDestroyer);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow263.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow263", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow263);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow263_LiteralUnlimitedNatural264.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural264", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow263_LiteralUnlimitedNatural264);
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode265.reset(new ForkNode());
			this->addToElementRepository("ForkNode265", fUML_Tests_TestCompositeObjectDestroyer_ForkNode265);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow266.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow266", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow266);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow266_LiteralUnlimitedNatural267.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural267", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow266_LiteralUnlimitedNatural267);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow268.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow268", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow268);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow268_LiteralUnlimitedNatural269.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural269", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow268_LiteralUnlimitedNatural269);
			fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite.reset(new DestroyObjectAction());
			this->addToElementRepository("Destroy(composite)", fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite);
				fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite_Destroy_composite_target.reset(new InputPin());
				this->addToElementRepository("Destroy(composite).target", fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite_Destroy_composite_target);
			fUML_Tests_TestCompositeObjectDestroyer_object1Out.reset(new Parameter());
			this->addToElementRepository("object1Out", fUML_Tests_TestCompositeObjectDestroyer_object1Out);
				fUML_Tests_TestCompositeObjectDestroyer_object1Out_LiteralUnlimitedNatural270.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural270", fUML_Tests_TestCompositeObjectDestroyer_object1Out_LiteralUnlimitedNatural270);
				fUML_Tests_TestCompositeObjectDestroyer_object1Out_LiteralInteger271.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger271", fUML_Tests_TestCompositeObjectDestroyer_object1Out_LiteralInteger271);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow272.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow272", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow272);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow272_LiteralUnlimitedNatural273.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural273", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow272_LiteralUnlimitedNatural273);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow274.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow274", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow274);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow274_LiteralUnlimitedNatural275.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural275", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow274_LiteralUnlimitedNatural275);
			fUML_Tests_TestCompositeObjectDestroyer_compositeOut.reset(new Parameter());
			this->addToElementRepository("compositeOut", fUML_Tests_TestCompositeObjectDestroyer_compositeOut);
				fUML_Tests_TestCompositeObjectDestroyer_compositeOut_LiteralInteger276.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger276", fUML_Tests_TestCompositeObjectDestroyer_compositeOut_LiteralInteger276);
				fUML_Tests_TestCompositeObjectDestroyer_compositeOut_LiteralUnlimitedNatural277.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural277", fUML_Tests_TestCompositeObjectDestroyer_compositeOut_LiteralUnlimitedNatural277);
			fUML_Tests_TestCompositeObjectDestroyer_assocOut.reset(new Parameter());
			this->addToElementRepository("assocOut", fUML_Tests_TestCompositeObjectDestroyer_assocOut);
				fUML_Tests_TestCompositeObjectDestroyer_assocOut_LiteralUnlimitedNatural278.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural278", fUML_Tests_TestCompositeObjectDestroyer_assocOut_LiteralUnlimitedNatural278);
				fUML_Tests_TestCompositeObjectDestroyer_assocOut_LiteralInteger279.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger279", fUML_Tests_TestCompositeObjectDestroyer_assocOut_LiteralInteger279);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow280.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow280", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow280);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow280_LiteralUnlimitedNatural281.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural281", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow280_LiteralUnlimitedNatural281);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow282.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow282", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow282);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow282_LiteralUnlimitedNatural283.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural283", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow282_LiteralUnlimitedNatural283);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow284.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow284", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow284);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow284_LiteralUnlimitedNatural285.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural285", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow284_LiteralUnlimitedNatural285);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c2.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(c2)", fUML_Tests_TestCompositeObjectDestroyer_Write_c2);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_object.reset(new InputPin());
				this->addToElementRepository("Write(c2).object", fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_object);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_result.reset(new OutputPin());
				this->addToElementRepository("Write(c2).result", fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_result);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_value.reset(new InputPin());
				this->addToElementRepository("Write(c2).value", fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_value);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_compositeOut.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(compositeOut)", fUML_Tests_TestCompositeObjectDestroyer_Parameter_compositeOut);
			fUML_Tests_TestCompositeObjectDestroyer_object2Out.reset(new Parameter());
			this->addToElementRepository("object2Out", fUML_Tests_TestCompositeObjectDestroyer_object2Out);
				fUML_Tests_TestCompositeObjectDestroyer_object2Out_LiteralUnlimitedNatural286.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural286", fUML_Tests_TestCompositeObjectDestroyer_object2Out_LiteralUnlimitedNatural286);
				fUML_Tests_TestCompositeObjectDestroyer_object2Out_LiteralInteger287.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger287", fUML_Tests_TestCompositeObjectDestroyer_object2Out_LiteralInteger287);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1Out.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(object1Out)", fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1Out);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow288.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow288", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow288);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow288_LiteralUnlimitedNatural289.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural289", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow288_LiteralUnlimitedNatural289);
			fUML_Tests_TestCompositeObjectDestroyer_Read_composite.reset(new ReadLinkAction());
			this->addToElementRepository("Read(composite)", fUML_Tests_TestCompositeObjectDestroyer_Read_composite);
				fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_inputValue.reset(new InputPin());
				this->addToElementRepository("Read(Composite).inputValue", fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_inputValue);
				fUML_Tests_TestCompositeObjectDestroyer_Read_composite_LinkEndData290.reset(new LinkEndData());
				this->addToElementRepository("LinkEndData290", fUML_Tests_TestCompositeObjectDestroyer_Read_composite_LinkEndData290);
				fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_iresult.reset(new OutputPin());
				this->addToElementRepository("Read(Composite).iresult", fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_iresult);
				fUML_Tests_TestCompositeObjectDestroyer_Read_composite_LinkEndData291.reset(new LinkEndData());
				this->addToElementRepository("LinkEndData291", fUML_Tests_TestCompositeObjectDestroyer_Read_composite_LinkEndData291);
			fUML_Tests_TestCompositeObjectDestroyer_composite.reset(new Parameter());
			this->addToElementRepository("composite", fUML_Tests_TestCompositeObjectDestroyer_composite);
				fUML_Tests_TestCompositeObjectDestroyer_composite_LiteralInteger292.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger292", fUML_Tests_TestCompositeObjectDestroyer_composite_LiteralInteger292);
				fUML_Tests_TestCompositeObjectDestroyer_composite_LiteralUnlimitedNatural293.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural293", fUML_Tests_TestCompositeObjectDestroyer_composite_LiteralUnlimitedNatural293);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(object2)", fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2);
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode294.reset(new ForkNode());
			this->addToElementRepository("ForkNode294", fUML_Tests_TestCompositeObjectDestroyer_ForkNode294);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow295.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow295", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow295);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow295_LiteralUnlimitedNatural296.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural296", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow295_LiteralUnlimitedNatural296);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow297.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow297", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow297);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow297_LiteralUnlimitedNatural298.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural298", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow297_LiteralUnlimitedNatural298);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow299.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow299", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow299);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow299_LiteralUnlimitedNatural300.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural300", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow299_LiteralUnlimitedNatural300);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2Out.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(object2Out)", fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2Out);
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode301.reset(new ForkNode());
			this->addToElementRepository("ForkNode301", fUML_Tests_TestCompositeObjectDestroyer_ForkNode301);
			fUML_Tests_TestCompositeObjectDestroyer_object2.reset(new Parameter());
			this->addToElementRepository("object2", fUML_Tests_TestCompositeObjectDestroyer_object2);
				fUML_Tests_TestCompositeObjectDestroyer_object2_LiteralInteger302.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger302", fUML_Tests_TestCompositeObjectDestroyer_object2_LiteralInteger302);
				fUML_Tests_TestCompositeObjectDestroyer_object2_LiteralUnlimitedNatural303.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural303", fUML_Tests_TestCompositeObjectDestroyer_object2_LiteralUnlimitedNatural303);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_assocOut.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(assocOut)", fUML_Tests_TestCompositeObjectDestroyer_Parameter_assocOut);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow304.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow304", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow304);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow304_LiteralUnlimitedNatural305.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural305", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow304_LiteralUnlimitedNatural305);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_composite.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(composite)", fUML_Tests_TestCompositeObjectDestroyer_Parameter_composite);
			fUML_Tests_TestCompositeObjectDestroyer_object1.reset(new Parameter());
			this->addToElementRepository("object1", fUML_Tests_TestCompositeObjectDestroyer_object1);
				fUML_Tests_TestCompositeObjectDestroyer_object1_LiteralInteger306.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger306", fUML_Tests_TestCompositeObjectDestroyer_object1_LiteralInteger306);
				fUML_Tests_TestCompositeObjectDestroyer_object1_LiteralUnlimitedNatural307.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural307", fUML_Tests_TestCompositeObjectDestroyer_object1_LiteralUnlimitedNatural307);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c1.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(c1)", fUML_Tests_TestCompositeObjectDestroyer_Write_c1);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_result.reset(new OutputPin());
				this->addToElementRepository("Write(c1).result", fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_result);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_object.reset(new InputPin());
				this->addToElementRepository("Write(c1).object", fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_object);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_value.reset(new InputPin());
				this->addToElementRepository("Write(c1).value", fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_value);
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode308.reset(new ForkNode());
			this->addToElementRepository("ForkNode308", fUML_Tests_TestCompositeObjectDestroyer_ForkNode308);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow309.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow309", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow309);
				fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow309_LiteralUnlimitedNatural310.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural310", fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow309_LiteralUnlimitedNatural310);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(object1)", fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1);
		fUML_Tests_ForkJoin.reset(new Activity());
		this->addToElementRepository("ForkJoin", fUML_Tests_ForkJoin);
			fUML_Tests_ForkJoin_ControlFlow311.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow311", fUML_Tests_ForkJoin_ControlFlow311);
				fUML_Tests_ForkJoin_ControlFlow311_LiteralInteger312.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger312", fUML_Tests_ForkJoin_ControlFlow311_LiteralInteger312);
			fUML_Tests_ForkJoin_ForkNode.reset(new ForkNode());
			this->addToElementRepository("ForkNode", fUML_Tests_ForkJoin_ForkNode);
			fUML_Tests_ForkJoin_JoinNode.reset(new JoinNode());
			this->addToElementRepository("JoinNode", fUML_Tests_ForkJoin_JoinNode);
			fUML_Tests_ForkJoin_ControlFlow313.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow313", fUML_Tests_ForkJoin_ControlFlow313);
				fUML_Tests_ForkJoin_ControlFlow313_LiteralInteger314.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger314", fUML_Tests_ForkJoin_ControlFlow313_LiteralInteger314);
			fUML_Tests_ForkJoin_ControlFlow315.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow315", fUML_Tests_ForkJoin_ControlFlow315);
				fUML_Tests_ForkJoin_ControlFlow315_LiteralInteger316.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger316", fUML_Tests_ForkJoin_ControlFlow315_LiteralInteger316);
			fUML_Tests_ForkJoin_ControlFlow317.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow317", fUML_Tests_ForkJoin_ControlFlow317);
				fUML_Tests_ForkJoin_ControlFlow317_LiteralInteger318.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger318", fUML_Tests_ForkJoin_ControlFlow317_LiteralInteger318);
			fUML_Tests_ForkJoin_InitialNode.reset(new InitialNode());
			this->addToElementRepository("InitialNode", fUML_Tests_ForkJoin_InitialNode);
			fUML_Tests_ForkJoin_FinalNode.reset(new ActivityFinalNode());
			this->addToElementRepository("FinalNode", fUML_Tests_ForkJoin_FinalNode);
		fUML_Tests_TestListFunctions.reset(new Activity());
		this->addToElementRepository("TestListFunctions", fUML_Tests_TestListFunctions);
			fUML_Tests_TestListFunctions_size.reset(new Parameter());
			this->addToElementRepository("size", fUML_Tests_TestListFunctions_size);
				fUML_Tests_TestListFunctions_size_LiteralUnlimitedNatural319.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural319", fUML_Tests_TestListFunctions_size_LiteralUnlimitedNatural319);
				fUML_Tests_TestListFunctions_size_LiteralInteger320.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger320", fUML_Tests_TestListFunctions_size_LiteralInteger320);
			fUML_Tests_TestListFunctions_Call_ListGet.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(ListGet)", fUML_Tests_TestListFunctions_Call_ListGet);
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index.reset(new InputPin());
				this->addToElementRepository("ListGet.index", fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index);
					fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index_LiteralInteger321.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger321", fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index_LiteralInteger321);
					fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index_LiteralUnlimitedNatural322.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural322", fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index_LiteralUnlimitedNatural322);
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list.reset(new InputPin());
				this->addToElementRepository("ListGet.list", fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list);
					fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list_LiteralInteger323.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger323", fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list_LiteralInteger323);
					fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list_LiteralUnlimitedNatural324.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural324", fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list_LiteralUnlimitedNatural324);
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result.reset(new OutputPin());
				this->addToElementRepository("ListGet.result", fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result);
					fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result_LiteralUnlimitedNatural325.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural325", fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result_LiteralUnlimitedNatural325);
					fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result_LiteralInteger326.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger326", fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result_LiteralInteger326);
			fUML_Tests_TestListFunctions_Call_ListConcat.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(ListConcat)", fUML_Tests_TestListFunctions_Call_ListConcat);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result.reset(new OutputPin());
				this->addToElementRepository("ListConcat.result", fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result);
					fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result_LiteralInteger327.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger327", fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result_LiteralInteger327);
					fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result_LiteralUnlimitedNatural328.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural328", fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result_LiteralUnlimitedNatural328);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1.reset(new InputPin());
				this->addToElementRepository("ListConcat.list1", fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1);
					fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1_LiteralUnlimitedNatural329.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural329", fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1_LiteralUnlimitedNatural329);
					fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1_LiteralInteger330.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger330", fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1_LiteralInteger330);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2.reset(new InputPin());
				this->addToElementRepository("ListConcat.list2", fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2);
					fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2_LiteralUnlimitedNatural331.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural331", fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2_LiteralUnlimitedNatural331);
					fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2_LiteralInteger332.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger332", fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2_LiteralInteger332);
			fUML_Tests_TestListFunctions_ObjectFlow333.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow333", fUML_Tests_TestListFunctions_ObjectFlow333);
				fUML_Tests_TestListFunctions_ObjectFlow333_LiteralInteger334.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger334", fUML_Tests_TestListFunctions_ObjectFlow333_LiteralInteger334);
			fUML_Tests_TestListFunctions_ObjectFlow335.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow335", fUML_Tests_TestListFunctions_ObjectFlow335);
				fUML_Tests_TestListFunctions_ObjectFlow335_LiteralInteger336.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger336", fUML_Tests_TestListFunctions_ObjectFlow335_LiteralInteger336);
			fUML_Tests_TestListFunctions_ObjectFlow337.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow337", fUML_Tests_TestListFunctions_ObjectFlow337);
				fUML_Tests_TestListFunctions_ObjectFlow337_LiteralInteger338.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger338", fUML_Tests_TestListFunctions_ObjectFlow337_LiteralInteger338);
			fUML_Tests_TestListFunctions_Param_element.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(element)", fUML_Tests_TestListFunctions_Param_element);
			fUML_Tests_TestListFunctions_Value_index.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(index)", fUML_Tests_TestListFunctions_Value_index);
				fUML_Tests_TestListFunctions_Value_index_LiteralInteger339.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger339", fUML_Tests_TestListFunctions_Value_index_LiteralInteger339);
				fUML_Tests_TestListFunctions_Value_index_Value_index_result.reset(new OutputPin());
				this->addToElementRepository("Value(index).result", fUML_Tests_TestListFunctions_Value_index_Value_index_result);
					fUML_Tests_TestListFunctions_Value_index_Value_index_result_LiteralInteger340.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger340", fUML_Tests_TestListFunctions_Value_index_Value_index_result_LiteralInteger340);
					fUML_Tests_TestListFunctions_Value_index_Value_index_result_LiteralUnlimitedNatural341.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural341", fUML_Tests_TestListFunctions_Value_index_Value_index_result_LiteralUnlimitedNatural341);
			fUML_Tests_TestListFunctions_concatNode.reset(new ActivityParameterNode());
			this->addToElementRepository("concatNode", fUML_Tests_TestListFunctions_concatNode);
			fUML_Tests_TestListFunctions_ObjectFlow342.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow342", fUML_Tests_TestListFunctions_ObjectFlow342);
				fUML_Tests_TestListFunctions_ObjectFlow342_LiteralInteger343.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger343", fUML_Tests_TestListFunctions_ObjectFlow342_LiteralInteger343);
			fUML_Tests_TestListFunctions_ObjectFlow344.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow344", fUML_Tests_TestListFunctions_ObjectFlow344);
				fUML_Tests_TestListFunctions_ObjectFlow344_LiteralUnlimitedNatural345.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural345", fUML_Tests_TestListFunctions_ObjectFlow344_LiteralUnlimitedNatural345);
			fUML_Tests_TestListFunctions_ObjectFlow346.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow346", fUML_Tests_TestListFunctions_ObjectFlow346);
				fUML_Tests_TestListFunctions_ObjectFlow346_LiteralInteger347.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger347", fUML_Tests_TestListFunctions_ObjectFlow346_LiteralInteger347);
			fUML_Tests_TestListFunctions_Fork.reset(new ForkNode());
			this->addToElementRepository("Fork", fUML_Tests_TestListFunctions_Fork);
			fUML_Tests_TestListFunctions_ObjectFlow348.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow348", fUML_Tests_TestListFunctions_ObjectFlow348);
				fUML_Tests_TestListFunctions_ObjectFlow348_LiteralUnlimitedNatural349.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural349", fUML_Tests_TestListFunctions_ObjectFlow348_LiteralUnlimitedNatural349);
			fUML_Tests_TestListFunctions_element.reset(new Parameter());
			this->addToElementRepository("element", fUML_Tests_TestListFunctions_element);
				fUML_Tests_TestListFunctions_element_LiteralInteger350.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger350", fUML_Tests_TestListFunctions_element_LiteralInteger350);
				fUML_Tests_TestListFunctions_element_LiteralUnlimitedNatural351.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural351", fUML_Tests_TestListFunctions_element_LiteralUnlimitedNatural351);
			fUML_Tests_TestListFunctions_concat.reset(new Parameter());
			this->addToElementRepository("concat", fUML_Tests_TestListFunctions_concat);
				fUML_Tests_TestListFunctions_concat_LiteralInteger352.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger352", fUML_Tests_TestListFunctions_concat_LiteralInteger352);
				fUML_Tests_TestListFunctions_concat_LiteralUnlimitedNatural353.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural353", fUML_Tests_TestListFunctions_concat_LiteralUnlimitedNatural353);
			fUML_Tests_TestListFunctions_ControlFlow354.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow354", fUML_Tests_TestListFunctions_ControlFlow354);
				fUML_Tests_TestListFunctions_ControlFlow354_LiteralInteger355.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger355", fUML_Tests_TestListFunctions_ControlFlow354_LiteralInteger355);
			fUML_Tests_TestListFunctions_Param_size.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(size)", fUML_Tests_TestListFunctions_Param_size);
			fUML_Tests_TestListFunctions_Call_ListSize.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(ListSize)", fUML_Tests_TestListFunctions_Call_ListSize);
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result.reset(new OutputPin());
				this->addToElementRepository("ListSize.result", fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result);
					fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result_LiteralUnlimitedNatural356.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural356", fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result_LiteralUnlimitedNatural356);
					fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result_LiteralInteger357.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger357", fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result_LiteralInteger357);
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list.reset(new InputPin());
				this->addToElementRepository("ListSize.list", fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list);
					fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list_LiteralUnlimitedNatural358.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural358", fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list_LiteralUnlimitedNatural358);
					fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list_LiteralInteger359.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger359", fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list_LiteralInteger359);
			fUML_Tests_TestListFunctions_Call_GenerateListTestData.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(GenerateListTestData)", fUML_Tests_TestListFunctions_Call_GenerateListTestData);
				fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list.reset(new OutputPin());
				this->addToElementRepository("GenData.list", fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list);
					fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list_LiteralUnlimitedNatural360.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural360", fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list_LiteralUnlimitedNatural360);
					fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list_LiteralUnlimitedNatural361.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural361", fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list_LiteralUnlimitedNatural361);
			fUML_Tests_TestListFunctions_ObjectFlow362.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow362", fUML_Tests_TestListFunctions_ObjectFlow362);
				fUML_Tests_TestListFunctions_ObjectFlow362_LiteralInteger363.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger363", fUML_Tests_TestListFunctions_ObjectFlow362_LiteralInteger363);
			fUML_Tests_TestListFunctions_ObjectFlow364.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow364", fUML_Tests_TestListFunctions_ObjectFlow364);
				fUML_Tests_TestListFunctions_ObjectFlow364_LiteralUnlimitedNatural365.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural365", fUML_Tests_TestListFunctions_ObjectFlow364_LiteralUnlimitedNatural365);
			fUML_Tests_TestListFunctions_ControlFlow366.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow366", fUML_Tests_TestListFunctions_ControlFlow366);
				fUML_Tests_TestListFunctions_ControlFlow366_LiteralUnlimitedNatural367.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural367", fUML_Tests_TestListFunctions_ControlFlow366_LiteralUnlimitedNatural367);
		fUML_Tests_TestUnlimitedNaturalFunctions.reset(new Activity());
		this->addToElementRepository("TestUnlimitedNaturalFunctions", fUML_Tests_TestUnlimitedNaturalFunctions);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow368.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow368", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow368);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow368_LiteralInteger369.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger369", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow368_LiteralInteger369);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow370.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow370", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow370);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow370_LiteralInteger371.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger371", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow370_LiteralInteger371);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow372.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow372", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow372);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow372_LiteralInteger373.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger373", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow372_LiteralInteger373);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow374.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow374", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow374);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow374_LiteralInteger375.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger375", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow374_LiteralInteger375);
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResult.reset(new Parameter());
			this->addToElementRepository("LEResult", fUML_Tests_TestUnlimitedNaturalFunctions_LEResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(LTResult)", fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResult.reset(new Parameter());
			this->addToElementRepository("GEResult", fUML_Tests_TestUnlimitedNaturalFunctions_GEResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(GE)_1", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result.reset(new OutputPin());
				this->addToElementRepository("GE.result", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result_LiteralUnlimitedNatural376.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural376", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result_LiteralUnlimitedNatural376);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result_LiteralInteger377.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger377", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result_LiteralInteger377);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y.reset(new InputPin());
				this->addToElementRepository("GE.y", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y_LiteralInteger378.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger378", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y_LiteralInteger378);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y_LiteralUnlimitedNatural379.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural379", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y_LiteralUnlimitedNatural379);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x.reset(new InputPin());
				this->addToElementRepository("GE.x", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x_LiteralInteger380.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger380", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x_LiteralInteger380);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x_LiteralUnlimitedNatural381.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural381", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x_LiteralUnlimitedNatural381);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow382.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow382", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow382);
				fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow382_LiteralInteger383.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger383", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow382_LiteralInteger383);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResulttimes.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(LTResult*)", fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow384.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow384", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow384);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow384_LiteralInteger385.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger385", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow384_LiteralInteger385);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow386.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow386", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow386);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow386_LiteralInteger387.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger387", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow386_LiteralInteger387);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow388.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow388", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow388);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow388_LiteralInteger389.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger389", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow388_LiteralInteger389);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow390.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow390", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow390);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow390_LiteralInteger391.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger391", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow390_LiteralInteger391);
			fUML_Tests_TestUnlimitedNaturalFunctions_MaxResult.reset(new Parameter());
			this->addToElementRepository("MaxResult", fUML_Tests_TestUnlimitedNaturalFunctions_MaxResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow392.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow392", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow392);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow392_LiteralInteger393.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger393", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow392_LiteralInteger393);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow394.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow394", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow394);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow394_LiteralInteger395.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger395", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow394_LiteralInteger395);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow396.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow396", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow396);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow396_LiteralInteger397.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger397", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow396_LiteralInteger397);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Min)", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y.reset(new InputPin());
				this->addToElementRepository("Min.y", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y_LiteralUnlimitedNatural398.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural398", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y_LiteralUnlimitedNatural398);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y_LiteralInteger399.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger399", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y_LiteralInteger399);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x.reset(new InputPin());
				this->addToElementRepository("Min.x", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x_LiteralInteger400.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger400", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x_LiteralInteger400);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x_LiteralUnlimitedNatural401.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural401", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x_LiteralUnlimitedNatural401);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result.reset(new OutputPin());
				this->addToElementRepository("Min.result", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result_LiteralUnlimitedNatural402.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural402", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result_LiteralUnlimitedNatural402);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result_LiteralInteger403.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger403", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result_LiteralInteger403);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MaxResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(MaxResult)", fUML_Tests_TestUnlimitedNaturalFunctions_Param_MaxResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow404.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow404", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow404);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow404_LiteralInteger405.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger405", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow404_LiteralInteger405);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow406.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow406", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow406);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow406_LiteralInteger407.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger407", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow406_LiteralInteger407);
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResulttimes.reset(new Parameter());
			this->addToElementRepository("GEResult*", fUML_Tests_TestUnlimitedNaturalFunctions_GEResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3.reset(new ForkNode());
			this->addToElementRepository("Fork(3)", fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_times.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(*)", fUML_Tests_TestUnlimitedNaturalFunctions_Value_times);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result.reset(new OutputPin());
				this->addToElementRepository("Value(*).result", fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result_LiteralInteger408.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger408", fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result_LiteralInteger408);
					fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result_LiteralUnlimitedNatural409.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural409", fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result_LiteralUnlimitedNatural409);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_LiteralUnlimitedNatural410.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural410", fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_LiteralUnlimitedNatural410);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow411.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow411", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow411);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow411_LiteralInteger412.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger412", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow411_LiteralInteger412);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(GEResult)", fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResulttimes.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(LEResult*)", fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow413.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow413", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow413);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow413_LiteralInteger414.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger414", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow413_LiteralInteger414);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow415.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow415", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow415);
				fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow415_LiteralInteger416.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger416", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow415_LiteralInteger416);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(GE)_2", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y.reset(new InputPin());
				this->addToElementRepository("GE.y", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y_LiteralUnlimitedNatural417.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural417", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y_LiteralUnlimitedNatural417);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y_LiteralInteger418.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger418", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y_LiteralInteger418);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result.reset(new OutputPin());
				this->addToElementRepository("GE.result", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result_LiteralInteger419.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger419", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result_LiteralInteger419);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result_LiteralUnlimitedNatural420.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural420", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result_LiteralUnlimitedNatural420);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x.reset(new InputPin());
				this->addToElementRepository("GE.x", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x_LiteralInteger421.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger421", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x_LiteralInteger421);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x_LiteralUnlimitedNatural422.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural422", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x_LiteralUnlimitedNatural422);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow423.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow423", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow423);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow423_LiteralInteger424.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger424", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow423_LiteralInteger424);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow425.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow425", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow425);
				fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow425_LiteralInteger426.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger426", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow425_LiteralInteger426);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow427.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow427", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow427);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow427_LiteralInteger428.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger428", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow427_LiteralInteger428);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow429.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow429", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow429);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow429_LiteralInteger430.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger430", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow429_LiteralInteger430);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(GT)_1", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y.reset(new InputPin());
				this->addToElementRepository("GT.y", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y_LiteralUnlimitedNatural431.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural431", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y_LiteralUnlimitedNatural431);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y_LiteralInteger432.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger432", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y_LiteralInteger432);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result.reset(new OutputPin());
				this->addToElementRepository("GT.result", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result_LiteralInteger433.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger433", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result_LiteralInteger433);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result_LiteralUnlimitedNatural434.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural434", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result_LiteralUnlimitedNatural434);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x.reset(new InputPin());
				this->addToElementRepository("GT.x", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x_LiteralInteger435.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger435", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x_LiteralInteger435);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x_LiteralUnlimitedNatural436.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural436", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x_LiteralUnlimitedNatural436);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow437.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow437", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow437);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow437_LiteralInteger438.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger438", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow437_LiteralInteger438);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow439.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow439", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow439);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow439_LiteralInteger440.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger440", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow439_LiteralInteger440);
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResulttimes.reset(new Parameter());
			this->addToElementRepository("GTResult*", fUML_Tests_TestUnlimitedNaturalFunctions_GTResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MinResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(MinResult)", fUML_Tests_TestUnlimitedNaturalFunctions_Param_MinResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow441.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow441", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow441);
				fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow441_LiteralInteger442.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger442", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow441_LiteralInteger442);
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResulttimes.reset(new Parameter());
			this->addToElementRepository("LTResult*", fUML_Tests_TestUnlimitedNaturalFunctions_LTResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow443.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow443", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow443);
				fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow443_LiteralInteger444.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger444", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow443_LiteralInteger444);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow445.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow445", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow445);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow445_LiteralInteger446.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger446", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow445_LiteralInteger446);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow447.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow447", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow447);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow447_LiteralInteger448.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger448", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow447_LiteralInteger448);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow449.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow449", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow449);
				fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow449_LiteralInteger450.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger450", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow449_LiteralInteger450);
			fUML_Tests_TestUnlimitedNaturalFunctions_MinResult.reset(new Parameter());
			this->addToElementRepository("MinResult", fUML_Tests_TestUnlimitedNaturalFunctions_MinResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(LE)_2", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y.reset(new InputPin());
				this->addToElementRepository("LE.y", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y_LiteralInteger451.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger451", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y_LiteralInteger451);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y_LiteralUnlimitedNatural452.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural452", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y_LiteralUnlimitedNatural452);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result.reset(new OutputPin());
				this->addToElementRepository("LE.result", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result_LiteralInteger453.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger453", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result_LiteralInteger453);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result_LiteralUnlimitedNatural454.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural454", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result_LiteralUnlimitedNatural454);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x.reset(new InputPin());
				this->addToElementRepository("LE.x", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x_LiteralUnlimitedNatural455.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural455", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x_LiteralUnlimitedNatural455);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x_LiteralInteger456.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger456", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x_LiteralInteger456);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow457.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow457", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow457);
				fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow457_LiteralInteger458.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger458", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow457_LiteralInteger458);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(LEResult)", fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResulttimes.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(GEResult*)", fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow459.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow459", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow459);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow459_LiteralInteger460.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger460", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow459_LiteralInteger460);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow461.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow461", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow461);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow461_LiteralInteger462.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger462", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow461_LiteralInteger462);
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResulttimes.reset(new Parameter());
			this->addToElementRepository("LEResult*", fUML_Tests_TestUnlimitedNaturalFunctions_LEResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow463.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow463", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow463);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow463_LiteralInteger464.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger464", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow463_LiteralInteger464);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(LE)_1", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x.reset(new InputPin());
				this->addToElementRepository("LE.x", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x_LiteralUnlimitedNatural465.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural465", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x_LiteralUnlimitedNatural465);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x_LiteralInteger466.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger466", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x_LiteralInteger466);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y.reset(new InputPin());
				this->addToElementRepository("LE.y", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y_LiteralInteger467.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger467", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y_LiteralInteger467);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y_LiteralUnlimitedNatural468.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural468", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y_LiteralUnlimitedNatural468);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result.reset(new OutputPin());
				this->addToElementRepository("LE.result", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result_LiteralUnlimitedNatural469.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural469", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result_LiteralUnlimitedNatural469);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result_LiteralInteger470.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger470", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result_LiteralInteger470);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_3.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(3)", fUML_Tests_TestUnlimitedNaturalFunctions_Value_3);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result.reset(new OutputPin());
				this->addToElementRepository("Value(3).result", fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result_LiteralUnlimitedNatural471.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural471", fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result_LiteralUnlimitedNatural471);
					fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result_LiteralInteger472.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger472", fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result_LiteralInteger472);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_LiteralUnlimitedNatural473.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural473", fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_LiteralUnlimitedNatural473);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow474.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow474", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow474);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow474_LiteralInteger475.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger475", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow474_LiteralInteger475);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2)", fUML_Tests_TestUnlimitedNaturalFunctions_Value_2);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result.reset(new OutputPin());
				this->addToElementRepository("Value(2).result", fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result_LiteralInteger476.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger476", fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result_LiteralInteger476);
					fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result_LiteralUnlimitedNatural477.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural477", fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result_LiteralUnlimitedNatural477);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_LiteralUnlimitedNatural478.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural478", fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_LiteralUnlimitedNatural478);
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResult.reset(new Parameter());
			this->addToElementRepository("GTResult", fUML_Tests_TestUnlimitedNaturalFunctions_GTResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2.reset(new ForkNode());
			this->addToElementRepository("Fork(2)", fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow479.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow479", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow479);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow479_LiteralInteger480.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger480", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow479_LiteralInteger480);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(GTResult)", fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(GT)_2", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result.reset(new OutputPin());
				this->addToElementRepository("GT.result", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result_LiteralInteger481.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger481", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result_LiteralInteger481);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result_LiteralUnlimitedNatural482.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural482", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result_LiteralUnlimitedNatural482);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x.reset(new InputPin());
				this->addToElementRepository("GT.x", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x_LiteralInteger483.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger483", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x_LiteralInteger483);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x_LiteralUnlimitedNatural484.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural484", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x_LiteralUnlimitedNatural484);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y.reset(new InputPin());
				this->addToElementRepository("GT.y", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y_LiteralUnlimitedNatural485.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural485", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y_LiteralUnlimitedNatural485);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y_LiteralInteger486.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger486", fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y_LiteralInteger486);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(LT)_1", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result.reset(new OutputPin());
				this->addToElementRepository("LT.result", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result_LiteralInteger487.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger487", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result_LiteralInteger487);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result_LiteralUnlimitedNatural488.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural488", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result_LiteralUnlimitedNatural488);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x.reset(new InputPin());
				this->addToElementRepository("LT.x", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x_LiteralUnlimitedNatural489.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural489", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x_LiteralUnlimitedNatural489);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x_LiteralInteger490.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger490", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x_LiteralInteger490);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y.reset(new InputPin());
				this->addToElementRepository("LT.y", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y_LiteralInteger491.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger491", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y_LiteralInteger491);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y_LiteralUnlimitedNatural492.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural492", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y_LiteralUnlimitedNatural492);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResulttimes.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(GTResult*)", fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(LT)_2", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y.reset(new InputPin());
				this->addToElementRepository("LT.y", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y_LiteralInteger493.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger493", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y_LiteralInteger493);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y_LiteralUnlimitedNatural494.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural494", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y_LiteralUnlimitedNatural494);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x.reset(new InputPin());
				this->addToElementRepository("LT.x", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x_LiteralUnlimitedNatural495.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural495", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x_LiteralUnlimitedNatural495);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x_LiteralInteger496.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger496", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x_LiteralInteger496);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result.reset(new OutputPin());
				this->addToElementRepository("LT.result", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result_LiteralUnlimitedNatural497.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural497", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result_LiteralUnlimitedNatural497);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result_LiteralInteger498.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger498", fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result_LiteralInteger498);
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResult.reset(new Parameter());
			this->addToElementRepository("LTResult", fUML_Tests_TestUnlimitedNaturalFunctions_LTResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow499.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow499", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow499);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow499_LiteralInteger500.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger500", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow499_LiteralInteger500);
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times.reset(new ForkNode());
			this->addToElementRepository("Fork(*)", fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Max)", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x.reset(new InputPin());
				this->addToElementRepository("Max.x", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x_LiteralInteger501.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger501", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x_LiteralInteger501);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x_LiteralUnlimitedNatural502.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural502", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x_LiteralUnlimitedNatural502);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result.reset(new OutputPin());
				this->addToElementRepository("Max.result", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result_LiteralUnlimitedNatural503.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural503", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result_LiteralUnlimitedNatural503);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result_LiteralInteger504.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger504", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result_LiteralInteger504);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y.reset(new InputPin());
				this->addToElementRepository("Min.y", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y_LiteralInteger505.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger505", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y_LiteralInteger505);
					fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y_LiteralUnlimitedNatural506.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural506", fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y_LiteralUnlimitedNatural506);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow507.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow507", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow507);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow507_LiteralInteger508.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger508", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow507_LiteralInteger508);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow509.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow509", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow509);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow509_LiteralInteger510.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger510", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow509_LiteralInteger510);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow511.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow511", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow511);
				fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow511_LiteralInteger512.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger512", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow511_LiteralInteger512);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow513.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow513", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow513);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow513_LiteralInteger514.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger514", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow513_LiteralInteger514);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow515.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow515", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow515);
				fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow515_LiteralInteger516.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger516", fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow515_LiteralInteger516);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow517.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow517", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow517);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow517_LiteralInteger518.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger518", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow517_LiteralInteger518);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow519.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow519", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow519);
				fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow519_LiteralInteger520.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger520", fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow519_LiteralInteger520);
		fUML_Tests_TestClassIdentityTester.reset(new Activity());
		this->addToElementRepository("TestClassIdentityTester", fUML_Tests_TestClassIdentityTester);
			fUML_Tests_TestClassIdentityTester_ObjectFlow521.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow521", fUML_Tests_TestClassIdentityTester_ObjectFlow521);
				fUML_Tests_TestClassIdentityTester_ObjectFlow521_LiteralInteger522.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger522", fUML_Tests_TestClassIdentityTester_ObjectFlow521_LiteralInteger522);
			fUML_Tests_TestClassIdentityTester_result.reset(new Parameter());
			this->addToElementRepository("result", fUML_Tests_TestClassIdentityTester_result);
				fUML_Tests_TestClassIdentityTester_result_LiteralUnlimitedNatural523.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural523", fUML_Tests_TestClassIdentityTester_result_LiteralUnlimitedNatural523);
				fUML_Tests_TestClassIdentityTester_result_LiteralInteger524.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger524", fUML_Tests_TestClassIdentityTester_result_LiteralInteger524);
			fUML_Tests_TestClassIdentityTester_Parameter_value2.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(value2)", fUML_Tests_TestClassIdentityTester_Parameter_value2);
			fUML_Tests_TestClassIdentityTester_TestIdentity.reset(new TestIdentityAction());
			this->addToElementRepository("TestIdentity", fUML_Tests_TestClassIdentityTester_TestIdentity);
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_first.reset(new InputPin());
				this->addToElementRepository("TestIdentity.first", fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_first);
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_result.reset(new OutputPin());
				this->addToElementRepository("TestIdentity.result", fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_result);
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_second.reset(new InputPin());
				this->addToElementRepository("TestIdentity.second", fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_second);
			fUML_Tests_TestClassIdentityTester_ObjectFlow525.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow525", fUML_Tests_TestClassIdentityTester_ObjectFlow525);
				fUML_Tests_TestClassIdentityTester_ObjectFlow525_LiteralInteger526.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger526", fUML_Tests_TestClassIdentityTester_ObjectFlow525_LiteralInteger526);
			fUML_Tests_TestClassIdentityTester_ObjectFlow527.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow527", fUML_Tests_TestClassIdentityTester_ObjectFlow527);
				fUML_Tests_TestClassIdentityTester_ObjectFlow527_LiteralInteger528.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger528", fUML_Tests_TestClassIdentityTester_ObjectFlow527_LiteralInteger528);
			fUML_Tests_TestClassIdentityTester_value2.reset(new Parameter());
			this->addToElementRepository("value2", fUML_Tests_TestClassIdentityTester_value2);
				fUML_Tests_TestClassIdentityTester_value2_LiteralUnlimitedNatural529.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural529", fUML_Tests_TestClassIdentityTester_value2_LiteralUnlimitedNatural529);
				fUML_Tests_TestClassIdentityTester_value2_LiteralInteger530.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger530", fUML_Tests_TestClassIdentityTester_value2_LiteralInteger530);
			fUML_Tests_TestClassIdentityTester_Parameter_result.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(result)", fUML_Tests_TestClassIdentityTester_Parameter_result);
			fUML_Tests_TestClassIdentityTester_Parameter_value1.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(value1)", fUML_Tests_TestClassIdentityTester_Parameter_value1);
			fUML_Tests_TestClassIdentityTester_value1.reset(new Parameter());
			this->addToElementRepository("value1", fUML_Tests_TestClassIdentityTester_value1);
				fUML_Tests_TestClassIdentityTester_value1_LiteralUnlimitedNatural531.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural531", fUML_Tests_TestClassIdentityTester_value1_LiteralUnlimitedNatural531);
				fUML_Tests_TestClassIdentityTester_value1_LiteralInteger532.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger532", fUML_Tests_TestClassIdentityTester_value1_LiteralInteger532);
		fUML_Tests_SelfReader.reset(new Activity());
		this->addToElementRepository("SelfReader", fUML_Tests_SelfReader);
			fUML_Tests_SelfReader_ObjectFlow533.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow533", fUML_Tests_SelfReader_ObjectFlow533);
				fUML_Tests_SelfReader_ObjectFlow533_LiteralInteger534.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger534", fUML_Tests_SelfReader_ObjectFlow533_LiteralInteger534);
			fUML_Tests_SelfReader_isSelfReader.reset(new Parameter());
			this->addToElementRepository("isSelfReader", fUML_Tests_SelfReader_isSelfReader);
			fUML_Tests_SelfReader_ObjectFlow535.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow535", fUML_Tests_SelfReader_ObjectFlow535);
				fUML_Tests_SelfReader_ObjectFlow535_LiteralUnlimitedNatural536.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural536", fUML_Tests_SelfReader_ObjectFlow535_LiteralUnlimitedNatural536);
			fUML_Tests_SelfReader_Parameter_isSelfReader.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(isSelfReader)", fUML_Tests_SelfReader_Parameter_isSelfReader);
			fUML_Tests_SelfReader_ReadSelf.reset(new ReadSelfAction());
			this->addToElementRepository("ReadSelf", fUML_Tests_SelfReader_ReadSelf);
				fUML_Tests_SelfReader_ReadSelf_ReadSelf_result.reset(new OutputPin());
				this->addToElementRepository("ReadSelf.result", fUML_Tests_SelfReader_ReadSelf_ReadSelf_result);
			fUML_Tests_SelfReader_IsClassified_SelfReader.reset(new ReadIsClassifiedObjectAction());
			this->addToElementRepository("IsClassified(SelfReader)", fUML_Tests_SelfReader_IsClassified_SelfReader);
				fUML_Tests_SelfReader_IsClassified_SelfReader_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_SelfReader_IsClassified_SelfReader_result);
				fUML_Tests_SelfReader_IsClassified_SelfReader_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_SelfReader_IsClassified_SelfReader_object);
			fUML_Tests_SelfReader_ObjectFlow537.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow537", fUML_Tests_SelfReader_ObjectFlow537);
				fUML_Tests_SelfReader_ObjectFlow537_LiteralUnlimitedNatural538.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural538", fUML_Tests_SelfReader_ObjectFlow537_LiteralUnlimitedNatural538);
			fUML_Tests_SelfReader_ForkNode539.reset(new ForkNode());
			this->addToElementRepository("ForkNode539", fUML_Tests_SelfReader_ForkNode539);
			fUML_Tests_SelfReader_self.reset(new Parameter());
			this->addToElementRepository("self", fUML_Tests_SelfReader_self);
				fUML_Tests_SelfReader_self_LiteralInteger540.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger540", fUML_Tests_SelfReader_self_LiteralInteger540);
				fUML_Tests_SelfReader_self_LiteralUnlimitedNatural541.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural541", fUML_Tests_SelfReader_self_LiteralUnlimitedNatural541);
			fUML_Tests_SelfReader_ObjectFlow542.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow542", fUML_Tests_SelfReader_ObjectFlow542);
				fUML_Tests_SelfReader_ObjectFlow542_LiteralUnlimitedNatural543.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural543", fUML_Tests_SelfReader_ObjectFlow542_LiteralUnlimitedNatural543);
			fUML_Tests_SelfReader_Parameter_self.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(self)", fUML_Tests_SelfReader_Parameter_self);
		fUML_Tests_TestCallAccepter.reset(new Activity());
		this->addToElementRepository("TestCallAccepter", fUML_Tests_TestCallAccepter);
			fUML_Tests_TestCallAccepter_test.reset(new Operation());
			this->addToElementRepository("test", fUML_Tests_TestCallAccepter_test);
				fUML_Tests_TestCallAccepter_test_input.reset(new Parameter());
				this->addToElementRepository("input", fUML_Tests_TestCallAccepter_test_input);
				fUML_Tests_TestCallAccepter_test_output.reset(new Parameter());
				this->addToElementRepository("output", fUML_Tests_TestCallAccepter_test_output);
			fUML_Tests_TestCallAccepter_ObjectFlow544.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow544", fUML_Tests_TestCallAccepter_ObjectFlow544);
				fUML_Tests_TestCallAccepter_ObjectFlow544_LiteralUnlimitedNatural545.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural545", fUML_Tests_TestCallAccepter_ObjectFlow544_LiteralUnlimitedNatural545);
			fUML_Tests_TestCallAccepter_Reply_test.reset(new ReplyAction());
			this->addToElementRepository("Reply(test)", fUML_Tests_TestCallAccepter_Reply_test);
				fUML_Tests_TestCallAccepter_Reply_test_Reply_test_replyValue.reset(new InputPin());
				this->addToElementRepository("Reply(test).replyValue", fUML_Tests_TestCallAccepter_Reply_test_Reply_test_replyValue);
				fUML_Tests_TestCallAccepter_Reply_test_Reply_test_returnInfo.reset(new InputPin());
				this->addToElementRepository("Reply(test).returnInfo", fUML_Tests_TestCallAccepter_Reply_test_Reply_test_returnInfo);
			fUML_Tests_TestCallAccepter_Accept_test.reset(new AcceptCallAction());
			this->addToElementRepository("Accept(test)", fUML_Tests_TestCallAccepter_Accept_test);
				fUML_Tests_TestCallAccepter_Accept_test_Accept_test_result.reset(new OutputPin());
				this->addToElementRepository("Accept(test).result", fUML_Tests_TestCallAccepter_Accept_test_Accept_test_result);
				fUML_Tests_TestCallAccepter_Accept_test_Accept_test_returnInfo.reset(new OutputPin());
				this->addToElementRepository("Accept(test).returnInfo", fUML_Tests_TestCallAccepter_Accept_test_Accept_test_returnInfo);
				fUML_Tests_TestCallAccepter_Accept_test_Trigger546.reset(new Trigger());
				this->addToElementRepository("Trigger546", fUML_Tests_TestCallAccepter_Accept_test_Trigger546);
			fUML_Tests_TestCallAccepter_ObjectFlow547.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow547", fUML_Tests_TestCallAccepter_ObjectFlow547);
				fUML_Tests_TestCallAccepter_ObjectFlow547_LiteralUnlimitedNatural548.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural548", fUML_Tests_TestCallAccepter_ObjectFlow547_LiteralUnlimitedNatural548);
			fUML_Tests_TestCallAccepter_ControlFlow549.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow549", fUML_Tests_TestCallAccepter_ControlFlow549);
				fUML_Tests_TestCallAccepter_ControlFlow549_LiteralUnlimitedNatural550.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural550", fUML_Tests_TestCallAccepter_ControlFlow549_LiteralUnlimitedNatural550);
			fUML_Tests_TestCallAccepter_InitialNode551.reset(new InitialNode());
			this->addToElementRepository("InitialNode551", fUML_Tests_TestCallAccepter_InitialNode551);
		fUML_Tests_TestDataStore.reset(new Activity());
		this->addToElementRepository("TestDataStore", fUML_Tests_TestDataStore);
			fUML_Tests_TestDataStore_ObjectFlow552.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow552", fUML_Tests_TestDataStore_ObjectFlow552);
				fUML_Tests_TestDataStore_ObjectFlow552_LiteralUnlimitedNatural553.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural553", fUML_Tests_TestDataStore_ObjectFlow552_LiteralUnlimitedNatural553);
			fUML_Tests_TestDataStore_ControlFlow554.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow554", fUML_Tests_TestDataStore_ControlFlow554);
				fUML_Tests_TestDataStore_ControlFlow554_LiteralUnlimitedNatural555.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural555", fUML_Tests_TestDataStore_ControlFlow554_LiteralUnlimitedNatural555);
			fUML_Tests_TestDataStore_Call_Copierminus2.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Copier)-2", fUML_Tests_TestDataStore_Call_Copierminus2);
				fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input.reset(new InputPin());
				this->addToElementRepository("Call(Copier)-2.input", fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input);
					fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input_LiteralUnlimitedNatural556.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural556", fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input_LiteralUnlimitedNatural556);
					fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input_LiteralInteger557.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger557", fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input_LiteralInteger557);
				fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output.reset(new OutputPin());
				this->addToElementRepository("Call(Copier)-2.output", fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output);
					fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output_LiteralInteger558.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger558", fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output_LiteralInteger558);
					fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output_LiteralUnlimitedNatural559.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural559", fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output_LiteralUnlimitedNatural559);
			fUML_Tests_TestDataStore_ControlFlow560.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow560", fUML_Tests_TestDataStore_ControlFlow560);
				fUML_Tests_TestDataStore_ControlFlow560_LiteralUnlimitedNatural561.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural561", fUML_Tests_TestDataStore_ControlFlow560_LiteralUnlimitedNatural561);
				fUML_Tests_TestDataStore_ControlFlow560_LiteralInteger562.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger562", fUML_Tests_TestDataStore_ControlFlow560_LiteralInteger562);
			fUML_Tests_TestDataStore_ControlFlow563.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow563", fUML_Tests_TestDataStore_ControlFlow563);
				fUML_Tests_TestDataStore_ControlFlow563_LiteralUnlimitedNatural564.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural564", fUML_Tests_TestDataStore_ControlFlow563_LiteralUnlimitedNatural564);
			fUML_Tests_TestDataStore_ControlFlow565.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow565", fUML_Tests_TestDataStore_ControlFlow565);
				fUML_Tests_TestDataStore_ControlFlow565_LiteralUnlimitedNatural566.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural566", fUML_Tests_TestDataStore_ControlFlow565_LiteralUnlimitedNatural566);
				fUML_Tests_TestDataStore_ControlFlow565_LiteralInteger567.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger567", fUML_Tests_TestDataStore_ControlFlow565_LiteralInteger567);
			fUML_Tests_TestDataStore_ObjectFlow568.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow568", fUML_Tests_TestDataStore_ObjectFlow568);
				fUML_Tests_TestDataStore_ObjectFlow568_LiteralUnlimitedNatural569.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural569", fUML_Tests_TestDataStore_ObjectFlow568_LiteralUnlimitedNatural569);
			fUML_Tests_TestDataStore_ObjectFlow570.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow570", fUML_Tests_TestDataStore_ObjectFlow570);
				fUML_Tests_TestDataStore_ObjectFlow570_LiteralUnlimitedNatural571.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural571", fUML_Tests_TestDataStore_ObjectFlow570_LiteralUnlimitedNatural571);
			fUML_Tests_TestDataStore_Value_2minusInitminus3.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2)-Init-3", fUML_Tests_TestDataStore_Value_2minusInitminus3);
				fUML_Tests_TestDataStore_Value_2minusInitminus3_Value_2minusInitminus1_result.reset(new OutputPin());
				this->addToElementRepository("Value(2)-Init-1.result", fUML_Tests_TestDataStore_Value_2minusInitminus3_Value_2minusInitminus1_result);
				fUML_Tests_TestDataStore_Value_2minusInitminus3_LiteralInteger572.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger572", fUML_Tests_TestDataStore_Value_2minusInitminus3_LiteralInteger572);
			fUML_Tests_TestDataStore_ControlFlow573.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow573", fUML_Tests_TestDataStore_ControlFlow573);
				fUML_Tests_TestDataStore_ControlFlow573_LiteralUnlimitedNatural574.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural574", fUML_Tests_TestDataStore_ControlFlow573_LiteralUnlimitedNatural574);
			fUML_Tests_TestDataStore_ControlFlow575.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow575", fUML_Tests_TestDataStore_ControlFlow575);
				fUML_Tests_TestDataStore_ControlFlow575_LiteralUnlimitedNatural576.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural576", fUML_Tests_TestDataStore_ControlFlow575_LiteralUnlimitedNatural576);
			fUML_Tests_TestDataStore_Call_Copierminus1.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Copier)-1", fUML_Tests_TestDataStore_Call_Copierminus1);
				fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input.reset(new InputPin());
				this->addToElementRepository("Call(Copier)-1.input", fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input);
					fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input_LiteralUnlimitedNatural577.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural577", fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input_LiteralUnlimitedNatural577);
					fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input_LiteralInteger578.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger578", fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input_LiteralInteger578);
				fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output.reset(new OutputPin());
				this->addToElementRepository("Call(Copier)-1.output", fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output);
					fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output_LiteralInteger579.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger579", fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output_LiteralInteger579);
					fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output_LiteralUnlimitedNatural580.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural580", fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output_LiteralUnlimitedNatural580);
			fUML_Tests_TestDataStore_Parameter_output.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(output)", fUML_Tests_TestDataStore_Parameter_output);
			fUML_Tests_TestDataStore_FinalNode.reset(new ActivityFinalNode());
			this->addToElementRepository("FinalNode", fUML_Tests_TestDataStore_FinalNode);
			fUML_Tests_TestDataStore_Value_1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)", fUML_Tests_TestDataStore_Value_1);
				fUML_Tests_TestDataStore_Value_1_LiteralInteger581.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger581", fUML_Tests_TestDataStore_Value_1_LiteralInteger581);
				fUML_Tests_TestDataStore_Value_1_Value_1_result.reset(new OutputPin());
				this->addToElementRepository("Value(1).result", fUML_Tests_TestDataStore_Value_1_Value_1_result);
			fUML_Tests_TestDataStore_DecisionNode.reset(new DecisionNode());
			this->addToElementRepository("DecisionNode", fUML_Tests_TestDataStore_DecisionNode);
			fUML_Tests_TestDataStore_ControlFlow582.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow582", fUML_Tests_TestDataStore_ControlFlow582);
				fUML_Tests_TestDataStore_ControlFlow582_LiteralUnlimitedNatural583.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural583", fUML_Tests_TestDataStore_ControlFlow582_LiteralUnlimitedNatural583);
			fUML_Tests_TestDataStore_Merge1.reset(new MergeNode());
			this->addToElementRepository("Merge1", fUML_Tests_TestDataStore_Merge1);
			fUML_Tests_TestDataStore_ObjectFlow584.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow584", fUML_Tests_TestDataStore_ObjectFlow584);
				fUML_Tests_TestDataStore_ObjectFlow584_LiteralUnlimitedNatural585.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural585", fUML_Tests_TestDataStore_ObjectFlow584_LiteralUnlimitedNatural585);
			fUML_Tests_TestDataStore_ControlFlow586.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow586", fUML_Tests_TestDataStore_ControlFlow586);
				fUML_Tests_TestDataStore_ControlFlow586_LiteralUnlimitedNatural587.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural587", fUML_Tests_TestDataStore_ControlFlow586_LiteralUnlimitedNatural587);
			fUML_Tests_TestDataStore_ObjectFlow588.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow588", fUML_Tests_TestDataStore_ObjectFlow588);
				fUML_Tests_TestDataStore_ObjectFlow588_LiteralUnlimitedNatural589.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural589", fUML_Tests_TestDataStore_ObjectFlow588_LiteralUnlimitedNatural589);
			fUML_Tests_TestDataStore_Value_1minusInitminus2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)-Init-2", fUML_Tests_TestDataStore_Value_1minusInitminus2);
				fUML_Tests_TestDataStore_Value_1minusInitminus2_LiteralInteger590.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger590", fUML_Tests_TestDataStore_Value_1minusInitminus2_LiteralInteger590);
				fUML_Tests_TestDataStore_Value_1minusInitminus2_Value_1minusInitminus2_result.reset(new OutputPin());
				this->addToElementRepository("Value(1)-Init-2.result", fUML_Tests_TestDataStore_Value_1minusInitminus2_Value_1minusInitminus2_result);
			fUML_Tests_TestDataStore_ControlFlow591.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow591", fUML_Tests_TestDataStore_ControlFlow591);
				fUML_Tests_TestDataStore_ControlFlow591_LiteralInteger592.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger592", fUML_Tests_TestDataStore_ControlFlow591_LiteralInteger592);
				fUML_Tests_TestDataStore_ControlFlow591_LiteralUnlimitedNatural593.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural593", fUML_Tests_TestDataStore_ControlFlow591_LiteralUnlimitedNatural593);
			fUML_Tests_TestDataStore_decisionInputFlow.reset(new ObjectFlow());
			this->addToElementRepository("decisionInputFlow", fUML_Tests_TestDataStore_decisionInputFlow);
				fUML_Tests_TestDataStore_decisionInputFlow_LiteralUnlimitedNatural594.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural594", fUML_Tests_TestDataStore_decisionInputFlow_LiteralUnlimitedNatural594);
			fUML_Tests_TestDataStore_Value_3.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(3)", fUML_Tests_TestDataStore_Value_3);
				fUML_Tests_TestDataStore_Value_3_Value_3_result.reset(new OutputPin());
				this->addToElementRepository("Value(3).result", fUML_Tests_TestDataStore_Value_3_Value_3_result);
				fUML_Tests_TestDataStore_Value_3_LiteralInteger595.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger595", fUML_Tests_TestDataStore_Value_3_LiteralInteger595);
			fUML_Tests_TestDataStore_ObjectFlow596.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow596", fUML_Tests_TestDataStore_ObjectFlow596);
				fUML_Tests_TestDataStore_ObjectFlow596_LiteralUnlimitedNatural597.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural597", fUML_Tests_TestDataStore_ObjectFlow596_LiteralUnlimitedNatural597);
			fUML_Tests_TestDataStore_InitialNode598.reset(new InitialNode());
			this->addToElementRepository("InitialNode598", fUML_Tests_TestDataStore_InitialNode598);
			fUML_Tests_TestDataStore_ObjectFlow599.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow599", fUML_Tests_TestDataStore_ObjectFlow599);
				fUML_Tests_TestDataStore_ObjectFlow599_LiteralUnlimitedNatural600.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural600", fUML_Tests_TestDataStore_ObjectFlow599_LiteralUnlimitedNatural600);
			fUML_Tests_TestDataStore_ControlFlow601.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow601", fUML_Tests_TestDataStore_ControlFlow601);
				fUML_Tests_TestDataStore_ControlFlow601_LiteralUnlimitedNatural602.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural602", fUML_Tests_TestDataStore_ControlFlow601_LiteralUnlimitedNatural602);
			fUML_Tests_TestDataStore_ControlFlow603.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow603", fUML_Tests_TestDataStore_ControlFlow603);
				fUML_Tests_TestDataStore_ControlFlow603_LiteralUnlimitedNatural604.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural604", fUML_Tests_TestDataStore_ControlFlow603_LiteralUnlimitedNatural604);
			fUML_Tests_TestDataStore_Merge2.reset(new MergeNode());
			this->addToElementRepository("Merge2", fUML_Tests_TestDataStore_Merge2);
			fUML_Tests_TestDataStore_ObjectFlow605.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow605", fUML_Tests_TestDataStore_ObjectFlow605);
				fUML_Tests_TestDataStore_ObjectFlow605_LiteralUnlimitedNatural606.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural606", fUML_Tests_TestDataStore_ObjectFlow605_LiteralUnlimitedNatural606);
			fUML_Tests_TestDataStore_Value_1minusInitminus1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)-Init-1", fUML_Tests_TestDataStore_Value_1minusInitminus1);
				fUML_Tests_TestDataStore_Value_1minusInitminus1_LiteralInteger607.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger607", fUML_Tests_TestDataStore_Value_1minusInitminus1_LiteralInteger607);
				fUML_Tests_TestDataStore_Value_1minusInitminus1_Value_1minusInitminus1_result.reset(new OutputPin());
				this->addToElementRepository("Value(1)-Init-1.result", fUML_Tests_TestDataStore_Value_1minusInitminus1_Value_1minusInitminus1_result);
			fUML_Tests_TestDataStore_Merge3.reset(new MergeNode());
			this->addToElementRepository("Merge3", fUML_Tests_TestDataStore_Merge3);
			fUML_Tests_TestDataStore_ControlFlow608.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow608", fUML_Tests_TestDataStore_ControlFlow608);
				fUML_Tests_TestDataStore_ControlFlow608_LiteralUnlimitedNatural609.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural609", fUML_Tests_TestDataStore_ControlFlow608_LiteralUnlimitedNatural609);
			fUML_Tests_TestDataStore_ObjectFlow610.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow610", fUML_Tests_TestDataStore_ObjectFlow610);
				fUML_Tests_TestDataStore_ObjectFlow610_LiteralUnlimitedNatural611.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural611", fUML_Tests_TestDataStore_ObjectFlow610_LiteralUnlimitedNatural611);
			fUML_Tests_TestDataStore_Value_2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2)", fUML_Tests_TestDataStore_Value_2);
				fUML_Tests_TestDataStore_Value_2_Value_2_result.reset(new OutputPin());
				this->addToElementRepository("Value(2).result", fUML_Tests_TestDataStore_Value_2_Value_2_result);
				fUML_Tests_TestDataStore_Value_2_LiteralInteger612.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger612", fUML_Tests_TestDataStore_Value_2_LiteralInteger612);
			fUML_Tests_TestDataStore_DataStoreNode.reset(new DataStoreNode());
			this->addToElementRepository("DataStoreNode", fUML_Tests_TestDataStore_DataStoreNode);
			fUML_Tests_TestDataStore_ObjectFlow613.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow613", fUML_Tests_TestDataStore_ObjectFlow613);
				fUML_Tests_TestDataStore_ObjectFlow613_LiteralUnlimitedNatural614.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural614", fUML_Tests_TestDataStore_ObjectFlow613_LiteralUnlimitedNatural614);
			fUML_Tests_TestDataStore_output.reset(new Parameter());
			this->addToElementRepository("output", fUML_Tests_TestDataStore_output);
				fUML_Tests_TestDataStore_output_LiteralInteger615.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger615", fUML_Tests_TestDataStore_output_LiteralInteger615);
				fUML_Tests_TestDataStore_output_LiteralUnlimitedNatural616.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural616", fUML_Tests_TestDataStore_output_LiteralUnlimitedNatural616);
			fUML_Tests_TestDataStore_ControlFlow617.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow617", fUML_Tests_TestDataStore_ControlFlow617);
				fUML_Tests_TestDataStore_ControlFlow617_LiteralUnlimitedNatural618.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural618", fUML_Tests_TestDataStore_ControlFlow617_LiteralUnlimitedNatural618);
		fUML_Tests_CallEvent619.reset(new CallEvent());
		this->addToElementRepository("CallEvent619", fUML_Tests_CallEvent619);
		fUML_Tests_CompositeAssociation.reset(new Association());
		this->addToElementRepository("CompositeAssociation", fUML_Tests_CompositeAssociation);
			fUML_Tests_CompositeAssociation_composite.reset(new Property());
			this->addToElementRepository("composite", fUML_Tests_CompositeAssociation_composite);
			fUML_Tests_CompositeAssociation_c2.reset(new Property());
			this->addToElementRepository("c2", fUML_Tests_CompositeAssociation_c2);
		fUML_Tests_SimpleDecision.reset(new Activity());
		this->addToElementRepository("SimpleDecision", fUML_Tests_SimpleDecision);
			fUML_Tests_SimpleDecision_ObjectFlow620.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow620", fUML_Tests_SimpleDecision_ObjectFlow620);
				fUML_Tests_SimpleDecision_ObjectFlow620_LiteralInteger621.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger621", fUML_Tests_SimpleDecision_ObjectFlow620_LiteralInteger621);
				fUML_Tests_SimpleDecision_ObjectFlow620_LiteralInteger622.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger622", fUML_Tests_SimpleDecision_ObjectFlow620_LiteralInteger622);
			fUML_Tests_SimpleDecision_Parameter_output_0.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(output_0)", fUML_Tests_SimpleDecision_Parameter_output_0);
			fUML_Tests_SimpleDecision_DecisionNode.reset(new DecisionNode());
			this->addToElementRepository("DecisionNode", fUML_Tests_SimpleDecision_DecisionNode);
			fUML_Tests_SimpleDecision_testValue.reset(new Parameter());
			this->addToElementRepository("testValue", fUML_Tests_SimpleDecision_testValue);
				fUML_Tests_SimpleDecision_testValue_LiteralInteger623.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger623", fUML_Tests_SimpleDecision_testValue_LiteralInteger623);
				fUML_Tests_SimpleDecision_testValue_LiteralUnlimitedNatural624.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural624", fUML_Tests_SimpleDecision_testValue_LiteralUnlimitedNatural624);
			fUML_Tests_SimpleDecision_Parameter_testValue.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(testValue)", fUML_Tests_SimpleDecision_Parameter_testValue);
			fUML_Tests_SimpleDecision_ObjectFlow625.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow625", fUML_Tests_SimpleDecision_ObjectFlow625);
				fUML_Tests_SimpleDecision_ObjectFlow625_LiteralInteger626.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger626", fUML_Tests_SimpleDecision_ObjectFlow625_LiteralInteger626);
			fUML_Tests_SimpleDecision_Parameter_output_1.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(output_1)", fUML_Tests_SimpleDecision_Parameter_output_1);
			fUML_Tests_SimpleDecision_output_0.reset(new Parameter());
			this->addToElementRepository("output_0", fUML_Tests_SimpleDecision_output_0);
				fUML_Tests_SimpleDecision_output_0_LiteralInteger627.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger627", fUML_Tests_SimpleDecision_output_0_LiteralInteger627);
				fUML_Tests_SimpleDecision_output_0_LiteralUnlimitedNatural628.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural628", fUML_Tests_SimpleDecision_output_0_LiteralUnlimitedNatural628);
			fUML_Tests_SimpleDecision_output_1.reset(new Parameter());
			this->addToElementRepository("output_1", fUML_Tests_SimpleDecision_output_1);
				fUML_Tests_SimpleDecision_output_1_LiteralUnlimitedNatural629.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural629", fUML_Tests_SimpleDecision_output_1_LiteralUnlimitedNatural629);
				fUML_Tests_SimpleDecision_output_1_LiteralInteger630.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger630", fUML_Tests_SimpleDecision_output_1_LiteralInteger630);
			fUML_Tests_SimpleDecision_ObjectFlow631.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow631", fUML_Tests_SimpleDecision_ObjectFlow631);
				fUML_Tests_SimpleDecision_ObjectFlow631_LiteralInteger632.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger632", fUML_Tests_SimpleDecision_ObjectFlow631_LiteralInteger632);
				fUML_Tests_SimpleDecision_ObjectFlow631_LiteralInteger633.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger633", fUML_Tests_SimpleDecision_ObjectFlow631_LiteralInteger633);
		fUML_Tests_TestSignalReceiver.reset(new Activity());
		this->addToElementRepository("TestSignalReceiver", fUML_Tests_TestSignalReceiver);
			fUML_Tests_TestSignalReceiver_ControlFlow634.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow634", fUML_Tests_TestSignalReceiver_ControlFlow634);
				fUML_Tests_TestSignalReceiver_ControlFlow634_LiteralUnlimitedNatural635.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural635", fUML_Tests_TestSignalReceiver_ControlFlow634_LiteralUnlimitedNatural635);
			fUML_Tests_TestSignalReceiver_signal.reset(new Property());
			this->addToElementRepository("signal", fUML_Tests_TestSignalReceiver_signal);
				fUML_Tests_TestSignalReceiver_signal_LiteralInteger636.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger636", fUML_Tests_TestSignalReceiver_signal_LiteralInteger636);
				fUML_Tests_TestSignalReceiver_signal_LiteralUnlimitedNatural637.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural637", fUML_Tests_TestSignalReceiver_signal_LiteralUnlimitedNatural637);
			fUML_Tests_TestSignalReceiver_ControlFlow638.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow638", fUML_Tests_TestSignalReceiver_ControlFlow638);
				fUML_Tests_TestSignalReceiver_ControlFlow638_LiteralUnlimitedNatural639.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural639", fUML_Tests_TestSignalReceiver_ControlFlow638_LiteralUnlimitedNatural639);
			fUML_Tests_TestSignalReceiver_Write_signal.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(signal)", fUML_Tests_TestSignalReceiver_Write_signal);
				fUML_Tests_TestSignalReceiver_Write_signal_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestSignalReceiver_Write_signal_value);
				fUML_Tests_TestSignalReceiver_Write_signal_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestSignalReceiver_Write_signal_object);
			fUML_Tests_TestSignalReceiver_Output_testSignalOut.reset(new ActivityParameterNode());
			this->addToElementRepository("Output(testSignalOut)", fUML_Tests_TestSignalReceiver_Output_testSignalOut);
			fUML_Tests_TestSignalReceiver_ObjectFlow640.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow640", fUML_Tests_TestSignalReceiver_ObjectFlow640);
				fUML_Tests_TestSignalReceiver_ObjectFlow640_LiteralUnlimitedNatural641.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural641", fUML_Tests_TestSignalReceiver_ObjectFlow640_LiteralUnlimitedNatural641);
			fUML_Tests_TestSignalReceiver_ObjectFlow642.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow642", fUML_Tests_TestSignalReceiver_ObjectFlow642);
				fUML_Tests_TestSignalReceiver_ObjectFlow642_LiteralUnlimitedNatural643.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural643", fUML_Tests_TestSignalReceiver_ObjectFlow642_LiteralUnlimitedNatural643);
			fUML_Tests_TestSignalReceiver_ReadSelf.reset(new ReadSelfAction());
			this->addToElementRepository("ReadSelf", fUML_Tests_TestSignalReceiver_ReadSelf);
				fUML_Tests_TestSignalReceiver_ReadSelf_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestSignalReceiver_ReadSelf_result);
			fUML_Tests_TestSignalReceiver_InitialNode644.reset(new InitialNode());
			this->addToElementRepository("InitialNode644", fUML_Tests_TestSignalReceiver_InitialNode644);
			fUML_Tests_TestSignalReceiver_Fork_signal.reset(new ForkNode());
			this->addToElementRepository("Fork(signal)", fUML_Tests_TestSignalReceiver_Fork_signal);
			fUML_Tests_TestSignalReceiver_ObjectFlow645.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow645", fUML_Tests_TestSignalReceiver_ObjectFlow645);
				fUML_Tests_TestSignalReceiver_ObjectFlow645_LiteralUnlimitedNatural646.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural646", fUML_Tests_TestSignalReceiver_ObjectFlow645_LiteralUnlimitedNatural646);
			fUML_Tests_TestSignalReceiver_ObjectFlow647.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow647", fUML_Tests_TestSignalReceiver_ObjectFlow647);
				fUML_Tests_TestSignalReceiver_ObjectFlow647_LiteralUnlimitedNatural648.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural648", fUML_Tests_TestSignalReceiver_ObjectFlow647_LiteralUnlimitedNatural648);
			fUML_Tests_TestSignalReceiver_Accept_TestSignal.reset(new AcceptEventAction());
			this->addToElementRepository("Accept(TestSignal)", fUML_Tests_TestSignalReceiver_Accept_TestSignal);
				fUML_Tests_TestSignalReceiver_Accept_TestSignal_Trigger649.reset(new Trigger());
				this->addToElementRepository("Trigger649", fUML_Tests_TestSignalReceiver_Accept_TestSignal_Trigger649);
				fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal.reset(new OutputPin());
				this->addToElementRepository("signal", fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal);
					fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal_LiteralUnlimitedNatural650.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural650", fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal_LiteralUnlimitedNatural650);
					fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal_LiteralInteger651.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger651", fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal_LiteralInteger651);
			fUML_Tests_TestSignalReceiver_testSignalOut.reset(new Parameter());
			this->addToElementRepository("testSignalOut", fUML_Tests_TestSignalReceiver_testSignalOut);
				fUML_Tests_TestSignalReceiver_testSignalOut_LiteralInteger652.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger652", fUML_Tests_TestSignalReceiver_testSignalOut_LiteralInteger652);
				fUML_Tests_TestSignalReceiver_testSignalOut_LiteralUnlimitedNatural653.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural653", fUML_Tests_TestSignalReceiver_testSignalOut_LiteralUnlimitedNatural653);
		fUML_Tests_ActiveClass.reset(new Class_());
		this->addToElementRepository("ActiveClass", fUML_Tests_ActiveClass);
			fUML_Tests_ActiveClass_signal1.reset(new Property());
			this->addToElementRepository("signal1", fUML_Tests_ActiveClass_signal1);
			fUML_Tests_ActiveClass_signal2.reset(new Property());
			this->addToElementRepository("signal2", fUML_Tests_ActiveClass_signal2);
			fUML_Tests_ActiveClass_ActiveClassBehavior.reset(new Activity());
			this->addToElementRepository("ActiveClassBehavior", fUML_Tests_ActiveClass_ActiveClassBehavior);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal.reset(new AcceptEventAction());
				this->addToElementRepository("Accept(TestSignal)", fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Accept_TestSignal_result.reset(new OutputPin());
					this->addToElementRepository("Accept(TestSignal).result", fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Accept_TestSignal_result);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Trigger654.reset(new Trigger());
					this->addToElementRepository("Trigger654", fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Trigger654);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Fork_self.reset(new ForkNode());
				this->addToElementRepository("Fork(self)", fUML_Tests_ActiveClass_ActiveClassBehavior_Fork_self);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1.reset(new AddStructuralFeatureValueAction());
				this->addToElementRepository("Write(signal1)", fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_value.reset(new InputPin());
					this->addToElementRepository("Write(signal1).value", fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_value);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_object.reset(new InputPin());
					this->addToElementRepository("Write(signal1).object", fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_object);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow655.reset(new ObjectFlow());
				this->addToElementRepository("ObjectFlow655", fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow655);
					fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow655_LiteralUnlimitedNatural656.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural656", fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow655_LiteralUnlimitedNatural656);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2.reset(new AddStructuralFeatureValueAction());
				this->addToElementRepository("Write(signal2)", fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_value.reset(new InputPin());
					this->addToElementRepository("Write(signal2).value", fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_value);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_object.reset(new InputPin());
					this->addToElementRepository("Write(signal2).object", fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_object);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow657.reset(new ObjectFlow());
				this->addToElementRepository("ObjectFlow657", fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow657);
					fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow657_LiteralUnlimitedNatural658.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural658", fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow657_LiteralUnlimitedNatural658);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal.reset(new AcceptEventAction());
				this->addToElementRepository("Accept(OtherSignal)", fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Trigger659.reset(new Trigger());
					this->addToElementRepository("Trigger659", fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Trigger659);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Accept_OtherSignal_result.reset(new OutputPin());
					this->addToElementRepository("Accept(OtherSignal).result", fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Accept_OtherSignal_result);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow660.reset(new ObjectFlow());
				this->addToElementRepository("ObjectFlow660", fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow660);
					fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow660_LiteralUnlimitedNatural661.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural661", fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow660_LiteralUnlimitedNatural661);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf.reset(new ReadSelfAction());
				this->addToElementRepository("ReadSelf", fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf);
					fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf_self.reset(new OutputPin());
					this->addToElementRepository("self", fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf_self);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow662.reset(new ObjectFlow());
				this->addToElementRepository("ObjectFlow662", fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow662);
					fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow662_LiteralUnlimitedNatural663.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural663", fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow662_LiteralUnlimitedNatural663);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow664.reset(new ObjectFlow());
				this->addToElementRepository("ObjectFlow664", fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow664);
					fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow664_LiteralUnlimitedNatural665.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural665", fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow664_LiteralUnlimitedNatural665);
		fUML_Tests_TestClassObjectDestroyer.reset(new Activity());
		this->addToElementRepository("TestClassObjectDestroyer", fUML_Tests_TestClassObjectDestroyer);
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectOut.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(objectOut)", fUML_Tests_TestClassObjectDestroyer_Parameter_objectOut);
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow666.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow666", fUML_Tests_TestClassObjectDestroyer_ObjectFlow666);
				fUML_Tests_TestClassObjectDestroyer_ObjectFlow666_LiteralInteger667.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger667", fUML_Tests_TestClassObjectDestroyer_ObjectFlow666_LiteralInteger667);
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectIn.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(objectIn)", fUML_Tests_TestClassObjectDestroyer_Parameter_objectIn);
			fUML_Tests_TestClassObjectDestroyer_objectIn.reset(new Parameter());
			this->addToElementRepository("objectIn", fUML_Tests_TestClassObjectDestroyer_objectIn);
				fUML_Tests_TestClassObjectDestroyer_objectIn_LiteralInteger668.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger668", fUML_Tests_TestClassObjectDestroyer_objectIn_LiteralInteger668);
				fUML_Tests_TestClassObjectDestroyer_objectIn_LiteralUnlimitedNatural669.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural669", fUML_Tests_TestClassObjectDestroyer_objectIn_LiteralUnlimitedNatural669);
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow670.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow670", fUML_Tests_TestClassObjectDestroyer_ObjectFlow670);
				fUML_Tests_TestClassObjectDestroyer_ObjectFlow670_LiteralInteger671.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger671", fUML_Tests_TestClassObjectDestroyer_ObjectFlow670_LiteralInteger671);
			fUML_Tests_TestClassObjectDestroyer_objectOut.reset(new Parameter());
			this->addToElementRepository("objectOut", fUML_Tests_TestClassObjectDestroyer_objectOut);
				fUML_Tests_TestClassObjectDestroyer_objectOut_LiteralInteger672.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger672", fUML_Tests_TestClassObjectDestroyer_objectOut_LiteralInteger672);
				fUML_Tests_TestClassObjectDestroyer_objectOut_LiteralUnlimitedNatural673.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural673", fUML_Tests_TestClassObjectDestroyer_objectOut_LiteralUnlimitedNatural673);
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow674.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow674", fUML_Tests_TestClassObjectDestroyer_ObjectFlow674);
				fUML_Tests_TestClassObjectDestroyer_ObjectFlow674_LiteralInteger675.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger675", fUML_Tests_TestClassObjectDestroyer_ObjectFlow674_LiteralInteger675);
			fUML_Tests_TestClassObjectDestroyer_Fork.reset(new ForkNode());
			this->addToElementRepository("Fork", fUML_Tests_TestClassObjectDestroyer_Fork);
			fUML_Tests_TestClassObjectDestroyer_DestroyObject.reset(new DestroyObjectAction());
			this->addToElementRepository("DestroyObject", fUML_Tests_TestClassObjectDestroyer_DestroyObject);
				fUML_Tests_TestClassObjectDestroyer_DestroyObject_DestroyObject_target.reset(new InputPin());
				this->addToElementRepository("DestroyObject.target", fUML_Tests_TestClassObjectDestroyer_DestroyObject_DestroyObject_target);
		fUML_Tests_ForkMergeData.reset(new Activity());
		this->addToElementRepository("ForkMergeData", fUML_Tests_ForkMergeData);
			fUML_Tests_ForkMergeData_ObjectFlow676.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow676", fUML_Tests_ForkMergeData_ObjectFlow676);
				fUML_Tests_ForkMergeData_ObjectFlow676_LiteralInteger677.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger677", fUML_Tests_ForkMergeData_ObjectFlow676_LiteralInteger677);
			fUML_Tests_ForkMergeData_ControlFlow678.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow678", fUML_Tests_ForkMergeData_ControlFlow678);
				fUML_Tests_ForkMergeData_ControlFlow678_LiteralInteger679.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger679", fUML_Tests_ForkMergeData_ControlFlow678_LiteralInteger679);
			fUML_Tests_ForkMergeData_InitialNode.reset(new InitialNode());
			this->addToElementRepository("InitialNode", fUML_Tests_ForkMergeData_InitialNode);
			fUML_Tests_ForkMergeData_ObjectFlow680.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow680", fUML_Tests_ForkMergeData_ObjectFlow680);
				fUML_Tests_ForkMergeData_ObjectFlow680_LiteralInteger681.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger681", fUML_Tests_ForkMergeData_ObjectFlow680_LiteralInteger681);
			fUML_Tests_ForkMergeData_Action_B.reset(new CallBehaviorAction());
			this->addToElementRepository("Action_B", fUML_Tests_ForkMergeData_Action_B);
				fUML_Tests_ForkMergeData_Action_B_Action_B_input.reset(new InputPin());
				this->addToElementRepository("Action_B.input", fUML_Tests_ForkMergeData_Action_B_Action_B_input);
					fUML_Tests_ForkMergeData_Action_B_Action_B_input_LiteralInteger682.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger682", fUML_Tests_ForkMergeData_Action_B_Action_B_input_LiteralInteger682);
					fUML_Tests_ForkMergeData_Action_B_Action_B_input_LiteralUnlimitedNatural683.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural683", fUML_Tests_ForkMergeData_Action_B_Action_B_input_LiteralUnlimitedNatural683);
				fUML_Tests_ForkMergeData_Action_B_Action_B_output.reset(new OutputPin());
				this->addToElementRepository("Action_B.output", fUML_Tests_ForkMergeData_Action_B_Action_B_output);
					fUML_Tests_ForkMergeData_Action_B_Action_B_output_LiteralUnlimitedNatural684.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural684", fUML_Tests_ForkMergeData_Action_B_Action_B_output_LiteralUnlimitedNatural684);
					fUML_Tests_ForkMergeData_Action_B_Action_B_output_LiteralInteger685.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger685", fUML_Tests_ForkMergeData_Action_B_Action_B_output_LiteralInteger685);
			fUML_Tests_ForkMergeData_Parameter_output.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(output)", fUML_Tests_ForkMergeData_Parameter_output);
			fUML_Tests_ForkMergeData_Action_A.reset(new ValueSpecificationAction());
			this->addToElementRepository("Action_A", fUML_Tests_ForkMergeData_Action_A);
				fUML_Tests_ForkMergeData_Action_A_LiteralInteger686.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger686", fUML_Tests_ForkMergeData_Action_A_LiteralInteger686);
				fUML_Tests_ForkMergeData_Action_A_Action_A_result.reset(new OutputPin());
				this->addToElementRepository("Action_A.result", fUML_Tests_ForkMergeData_Action_A_Action_A_result);
					fUML_Tests_ForkMergeData_Action_A_Action_A_result_LiteralInteger687.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger687", fUML_Tests_ForkMergeData_Action_A_Action_A_result_LiteralInteger687);
					fUML_Tests_ForkMergeData_Action_A_Action_A_result_LiteralUnlimitedNatural688.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural688", fUML_Tests_ForkMergeData_Action_A_Action_A_result_LiteralUnlimitedNatural688);
			fUML_Tests_ForkMergeData_ObjectFlow689.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow689", fUML_Tests_ForkMergeData_ObjectFlow689);
				fUML_Tests_ForkMergeData_ObjectFlow689_LiteralUnlimitedNatural690.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural690", fUML_Tests_ForkMergeData_ObjectFlow689_LiteralUnlimitedNatural690);
			fUML_Tests_ForkMergeData_output.reset(new Parameter());
			this->addToElementRepository("output", fUML_Tests_ForkMergeData_output);
				fUML_Tests_ForkMergeData_output_LiteralUnlimitedNatural691.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural691", fUML_Tests_ForkMergeData_output_LiteralUnlimitedNatural691);
				fUML_Tests_ForkMergeData_output_LiteralUnlimitedNatural692.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural692", fUML_Tests_ForkMergeData_output_LiteralUnlimitedNatural692);
			fUML_Tests_ForkMergeData_ForkNode.reset(new ForkNode());
			this->addToElementRepository("ForkNode", fUML_Tests_ForkMergeData_ForkNode);
			fUML_Tests_ForkMergeData_MergeNode.reset(new MergeNode());
			this->addToElementRepository("MergeNode", fUML_Tests_ForkMergeData_MergeNode);
			fUML_Tests_ForkMergeData_ObjectFlow693.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow693", fUML_Tests_ForkMergeData_ObjectFlow693);
				fUML_Tests_ForkMergeData_ObjectFlow693_LiteralInteger694.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger694", fUML_Tests_ForkMergeData_ObjectFlow693_LiteralInteger694);
			fUML_Tests_ForkMergeData_ObjectFlow695.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow695", fUML_Tests_ForkMergeData_ObjectFlow695);
				fUML_Tests_ForkMergeData_ObjectFlow695_LiteralUnlimitedNatural696.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural696", fUML_Tests_ForkMergeData_ObjectFlow695_LiteralUnlimitedNatural696);
		fUML_Tests_DecisionJoin.reset(new Activity());
		this->addToElementRepository("DecisionJoin", fUML_Tests_DecisionJoin);
			fUML_Tests_DecisionJoin_ControlFlow697.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow697", fUML_Tests_DecisionJoin_ControlFlow697);
				fUML_Tests_DecisionJoin_ControlFlow697_LiteralInteger698.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger698", fUML_Tests_DecisionJoin_ControlFlow697_LiteralInteger698);
			fUML_Tests_DecisionJoin_Value_1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)", fUML_Tests_DecisionJoin_Value_1);
				fUML_Tests_DecisionJoin_Value_1_LiteralInteger699.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger699", fUML_Tests_DecisionJoin_Value_1_LiteralInteger699);
				fUML_Tests_DecisionJoin_Value_1_OutputPin700.reset(new OutputPin());
				this->addToElementRepository("OutputPin700", fUML_Tests_DecisionJoin_Value_1_OutputPin700);
			fUML_Tests_DecisionJoin_ObjectFlow701.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow701", fUML_Tests_DecisionJoin_ObjectFlow701);
				fUML_Tests_DecisionJoin_ObjectFlow701_LiteralInteger702.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger702", fUML_Tests_DecisionJoin_ObjectFlow701_LiteralInteger702);
			fUML_Tests_DecisionJoin_Action_B.reset(new CallBehaviorAction());
			this->addToElementRepository("Action_B", fUML_Tests_DecisionJoin_Action_B);
				fUML_Tests_DecisionJoin_Action_B_Action_B_input.reset(new InputPin());
				this->addToElementRepository("Action_B.input", fUML_Tests_DecisionJoin_Action_B_Action_B_input);
					fUML_Tests_DecisionJoin_Action_B_Action_B_input_LiteralUnlimitedNatural703.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural703", fUML_Tests_DecisionJoin_Action_B_Action_B_input_LiteralUnlimitedNatural703);
					fUML_Tests_DecisionJoin_Action_B_Action_B_input_LiteralInteger704.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger704", fUML_Tests_DecisionJoin_Action_B_Action_B_input_LiteralInteger704);
				fUML_Tests_DecisionJoin_Action_B_Action_C_output.reset(new OutputPin());
				this->addToElementRepository("Action_C.output", fUML_Tests_DecisionJoin_Action_B_Action_C_output);
					fUML_Tests_DecisionJoin_Action_B_Action_C_output_LiteralInteger705.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger705", fUML_Tests_DecisionJoin_Action_B_Action_C_output_LiteralInteger705);
					fUML_Tests_DecisionJoin_Action_B_Action_C_output_LiteralUnlimitedNatural706.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural706", fUML_Tests_DecisionJoin_Action_B_Action_C_output_LiteralUnlimitedNatural706);
			fUML_Tests_DecisionJoin_output.reset(new Parameter());
			this->addToElementRepository("output", fUML_Tests_DecisionJoin_output);
				fUML_Tests_DecisionJoin_output_LiteralUnlimitedNatural707.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural707", fUML_Tests_DecisionJoin_output_LiteralUnlimitedNatural707);
				fUML_Tests_DecisionJoin_output_LiteralUnlimitedNatural708.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural708", fUML_Tests_DecisionJoin_output_LiteralUnlimitedNatural708);
			fUML_Tests_DecisionJoin_Value_0.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(0)", fUML_Tests_DecisionJoin_Value_0);
				fUML_Tests_DecisionJoin_Value_0_OutputPin709.reset(new OutputPin());
				this->addToElementRepository("OutputPin709", fUML_Tests_DecisionJoin_Value_0_OutputPin709);
				fUML_Tests_DecisionJoin_Value_0_LiteralInteger710.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger710", fUML_Tests_DecisionJoin_Value_0_LiteralInteger710);
			fUML_Tests_DecisionJoin_ObjectFlow711.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow711", fUML_Tests_DecisionJoin_ObjectFlow711);
				fUML_Tests_DecisionJoin_ObjectFlow711_LiteralInteger712.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger712", fUML_Tests_DecisionJoin_ObjectFlow711_LiteralInteger712);
			fUML_Tests_DecisionJoin_ObjectFlow713.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow713", fUML_Tests_DecisionJoin_ObjectFlow713);
				fUML_Tests_DecisionJoin_ObjectFlow713_LiteralInteger714.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger714", fUML_Tests_DecisionJoin_ObjectFlow713_LiteralInteger714);
				fUML_Tests_DecisionJoin_ObjectFlow713_LiteralUnlimitedNatural715.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural715", fUML_Tests_DecisionJoin_ObjectFlow713_LiteralUnlimitedNatural715);
			fUML_Tests_DecisionJoin_ObjectFlow716.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow716", fUML_Tests_DecisionJoin_ObjectFlow716);
				fUML_Tests_DecisionJoin_ObjectFlow716_LiteralInteger717.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger717", fUML_Tests_DecisionJoin_ObjectFlow716_LiteralInteger717);
			fUML_Tests_DecisionJoin_ObjectFlow718.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow718", fUML_Tests_DecisionJoin_ObjectFlow718);
				fUML_Tests_DecisionJoin_ObjectFlow718_LiteralInteger719.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger719", fUML_Tests_DecisionJoin_ObjectFlow718_LiteralInteger719);
			fUML_Tests_DecisionJoin_ObjectFlow720.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow720", fUML_Tests_DecisionJoin_ObjectFlow720);
				fUML_Tests_DecisionJoin_ObjectFlow720_LiteralUnlimitedNatural721.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural721", fUML_Tests_DecisionJoin_ObjectFlow720_LiteralUnlimitedNatural721);
				fUML_Tests_DecisionJoin_ObjectFlow720_LiteralInteger722.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger722", fUML_Tests_DecisionJoin_ObjectFlow720_LiteralInteger722);
			fUML_Tests_DecisionJoin_DecisionNode.reset(new DecisionNode());
			this->addToElementRepository("DecisionNode", fUML_Tests_DecisionJoin_DecisionNode);
			fUML_Tests_DecisionJoin_Action_A.reset(new CallBehaviorAction());
			this->addToElementRepository("Action_A", fUML_Tests_DecisionJoin_Action_A);
				fUML_Tests_DecisionJoin_Action_A_Action_A_input.reset(new InputPin());
				this->addToElementRepository("Action_A.input", fUML_Tests_DecisionJoin_Action_A_Action_A_input);
					fUML_Tests_DecisionJoin_Action_A_Action_A_input_LiteralInteger723.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger723", fUML_Tests_DecisionJoin_Action_A_Action_A_input_LiteralInteger723);
					fUML_Tests_DecisionJoin_Action_A_Action_A_input_LiteralUnlimitedNatural724.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural724", fUML_Tests_DecisionJoin_Action_A_Action_A_input_LiteralUnlimitedNatural724);
				fUML_Tests_DecisionJoin_Action_A_Action_A_output.reset(new OutputPin());
				this->addToElementRepository("Action_A.output", fUML_Tests_DecisionJoin_Action_A_Action_A_output);
					fUML_Tests_DecisionJoin_Action_A_Action_A_output_LiteralUnlimitedNatural725.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural725", fUML_Tests_DecisionJoin_Action_A_Action_A_output_LiteralUnlimitedNatural725);
					fUML_Tests_DecisionJoin_Action_A_Action_A_output_LiteralInteger726.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger726", fUML_Tests_DecisionJoin_Action_A_Action_A_output_LiteralInteger726);
			fUML_Tests_DecisionJoin_JoinNode.reset(new JoinNode());
			this->addToElementRepository("JoinNode", fUML_Tests_DecisionJoin_JoinNode);
			fUML_Tests_DecisionJoin_OutputNode.reset(new ActivityParameterNode());
			this->addToElementRepository("OutputNode", fUML_Tests_DecisionJoin_OutputNode);
			fUML_Tests_DecisionJoin_ObjectFlow727.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow727", fUML_Tests_DecisionJoin_ObjectFlow727);
				fUML_Tests_DecisionJoin_ObjectFlow727_LiteralInteger728.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger728", fUML_Tests_DecisionJoin_ObjectFlow727_LiteralInteger728);
		fUML_Tests_TestSimpleActivities.reset(new Activity());
		this->addToElementRepository("TestSimpleActivities", fUML_Tests_TestSimpleActivities);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(SimpleDecision_1)", fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_1.reset(new OutputPin());
				this->addToElementRepository("SimpleDecision_1.output_1", fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_1);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_testValue.reset(new InputPin());
				this->addToElementRepository("SimpleDecision_1.testValue", fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_testValue);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_0.reset(new OutputPin());
				this->addToElementRepository("SimpleDecision_1.output_0", fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_0);
			fUML_Tests_TestSimpleActivities_ObjectFlow729.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow729", fUML_Tests_TestSimpleActivities_ObjectFlow729);
				fUML_Tests_TestSimpleActivities_ObjectFlow729_LiteralInteger730.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger730", fUML_Tests_TestSimpleActivities_ObjectFlow729_LiteralInteger730);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0.reset(new Parameter());
			this->addToElementRepository("SimpleDecision_1.output_0", fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0);
				fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0_LiteralUnlimitedNatural731.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural731", fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0_LiteralUnlimitedNatural731);
				fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0_LiteralInteger732.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger732", fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0_LiteralInteger732);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_1_output_0.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(SimpleDecision_1.output_0)", fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_1_output_0);
			fUML_Tests_TestSimpleActivities_Fork_0.reset(new ForkNode());
			this->addToElementRepository("Fork_0", fUML_Tests_TestSimpleActivities_Fork_0);
			fUML_Tests_TestSimpleActivities_ObjectFlow733.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow733", fUML_Tests_TestSimpleActivities_ObjectFlow733);
				fUML_Tests_TestSimpleActivities_ObjectFlow733_LiteralInteger734.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger734", fUML_Tests_TestSimpleActivities_ObjectFlow733_LiteralInteger734);
			fUML_Tests_TestSimpleActivities_Call_ForkMerge.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(ForkMerge)", fUML_Tests_TestSimpleActivities_Call_ForkMerge);
				fUML_Tests_TestSimpleActivities_Call_ForkMerge_ForkMerge_output.reset(new OutputPin());
				this->addToElementRepository("ForkMerge.output", fUML_Tests_TestSimpleActivities_Call_ForkMerge_ForkMerge_output);
			fUML_Tests_TestSimpleActivities_ObjectFlow735.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow735", fUML_Tests_TestSimpleActivities_ObjectFlow735);
				fUML_Tests_TestSimpleActivities_ObjectFlow735_LiteralInteger736.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger736", fUML_Tests_TestSimpleActivities_ObjectFlow735_LiteralInteger736);
			fUML_Tests_TestSimpleActivities_Parameter_ForkMergeData_output.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(ForkMergeData.output)", fUML_Tests_TestSimpleActivities_Parameter_ForkMergeData_output);
			fUML_Tests_TestSimpleActivities_ObjectFlow737.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow737", fUML_Tests_TestSimpleActivities_ObjectFlow737);
				fUML_Tests_TestSimpleActivities_ObjectFlow737_LiteralInteger738.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger738", fUML_Tests_TestSimpleActivities_ObjectFlow737_LiteralInteger738);
			fUML_Tests_TestSimpleActivities_Value_1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)", fUML_Tests_TestSimpleActivities_Value_1);
				fUML_Tests_TestSimpleActivities_Value_1_Value_1_result.reset(new OutputPin());
				this->addToElementRepository("Value(1).result", fUML_Tests_TestSimpleActivities_Value_1_Value_1_result);
					fUML_Tests_TestSimpleActivities_Value_1_Value_1_result_LiteralUnlimitedNatural739.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural739", fUML_Tests_TestSimpleActivities_Value_1_Value_1_result_LiteralUnlimitedNatural739);
					fUML_Tests_TestSimpleActivities_Value_1_Value_1_result_LiteralInteger740.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger740", fUML_Tests_TestSimpleActivities_Value_1_Value_1_result_LiteralInteger740);
				fUML_Tests_TestSimpleActivities_Value_1_LiteralInteger741.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger741", fUML_Tests_TestSimpleActivities_Value_1_LiteralInteger741);
			fUML_Tests_TestSimpleActivities_ObjectFlow742.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow742", fUML_Tests_TestSimpleActivities_ObjectFlow742);
				fUML_Tests_TestSimpleActivities_ObjectFlow742_LiteralInteger743.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger743", fUML_Tests_TestSimpleActivities_ObjectFlow742_LiteralInteger743);
			fUML_Tests_TestSimpleActivities_ControlFlow744.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow744", fUML_Tests_TestSimpleActivities_ControlFlow744);
				fUML_Tests_TestSimpleActivities_ControlFlow744_LiteralInteger745.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger745", fUML_Tests_TestSimpleActivities_ControlFlow744_LiteralInteger745);
			fUML_Tests_TestSimpleActivities_Copier_output.reset(new Parameter());
			this->addToElementRepository("Copier.output", fUML_Tests_TestSimpleActivities_Copier_output);
				fUML_Tests_TestSimpleActivities_Copier_output_LiteralInteger746.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger746", fUML_Tests_TestSimpleActivities_Copier_output_LiteralInteger746);
				fUML_Tests_TestSimpleActivities_Copier_output_LiteralUnlimitedNatural747.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural747", fUML_Tests_TestSimpleActivities_Copier_output_LiteralUnlimitedNatural747);
			fUML_Tests_TestSimpleActivities_ControlFlow748.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow748", fUML_Tests_TestSimpleActivities_ControlFlow748);
				fUML_Tests_TestSimpleActivities_ControlFlow748_LiteralInteger749.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger749", fUML_Tests_TestSimpleActivities_ControlFlow748_LiteralInteger749);
			fUML_Tests_TestSimpleActivities_Parameter_DecisionJoin_output.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(DecisionJoin.output)", fUML_Tests_TestSimpleActivities_Parameter_DecisionJoin_output);
			fUML_Tests_TestSimpleActivities_ObjectFlow750.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow750", fUML_Tests_TestSimpleActivities_ObjectFlow750);
				fUML_Tests_TestSimpleActivities_ObjectFlow750_LiteralInteger751.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger751", fUML_Tests_TestSimpleActivities_ObjectFlow750_LiteralInteger751);
			fUML_Tests_TestSimpleActivities_Call_ForkJoin.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(ForkJoin)", fUML_Tests_TestSimpleActivities_Call_ForkJoin);
			fUML_Tests_TestSimpleActivities_ControlFlow752.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow752", fUML_Tests_TestSimpleActivities_ControlFlow752);
				fUML_Tests_TestSimpleActivities_ControlFlow752_LiteralInteger753.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger753", fUML_Tests_TestSimpleActivities_ControlFlow752_LiteralInteger753);
			fUML_Tests_TestSimpleActivities_ObjectFlow754.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow754", fUML_Tests_TestSimpleActivities_ObjectFlow754);
				fUML_Tests_TestSimpleActivities_ObjectFlow754_LiteralInteger755.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger755", fUML_Tests_TestSimpleActivities_ObjectFlow754_LiteralInteger755);
			fUML_Tests_TestSimpleActivities_ObjectFlow756.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow756", fUML_Tests_TestSimpleActivities_ObjectFlow756);
				fUML_Tests_TestSimpleActivities_ObjectFlow756_LiteralInteger757.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger757", fUML_Tests_TestSimpleActivities_ObjectFlow756_LiteralInteger757);
			fUML_Tests_TestSimpleActivities_Call_DecisionJoin.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(DecisionJoin)", fUML_Tests_TestSimpleActivities_Call_DecisionJoin);
				fUML_Tests_TestSimpleActivities_Call_DecisionJoin_DecisionJoin_output.reset(new OutputPin());
				this->addToElementRepository("DecisionJoin.output", fUML_Tests_TestSimpleActivities_Call_DecisionJoin_DecisionJoin_output);
			fUML_Tests_TestSimpleActivities_ForkMerge.reset(new Parameter());
			this->addToElementRepository("ForkMerge", fUML_Tests_TestSimpleActivities_ForkMerge);
				fUML_Tests_TestSimpleActivities_ForkMerge_LiteralUnlimitedNatural758.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural758", fUML_Tests_TestSimpleActivities_ForkMerge_LiteralUnlimitedNatural758);
				fUML_Tests_TestSimpleActivities_ForkMerge_LiteralUnlimitedNatural759.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural759", fUML_Tests_TestSimpleActivities_ForkMerge_LiteralUnlimitedNatural759);
			fUML_Tests_TestSimpleActivities_ObjectFlow760.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow760", fUML_Tests_TestSimpleActivities_ObjectFlow760);
				fUML_Tests_TestSimpleActivities_ObjectFlow760_LiteralInteger761.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger761", fUML_Tests_TestSimpleActivities_ObjectFlow760_LiteralInteger761);
			fUML_Tests_TestSimpleActivities_ControlFlow762.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow762", fUML_Tests_TestSimpleActivities_ControlFlow762);
				fUML_Tests_TestSimpleActivities_ControlFlow762_LiteralInteger763.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger763", fUML_Tests_TestSimpleActivities_ControlFlow762_LiteralInteger763);
			fUML_Tests_TestSimpleActivities_ObjectFlow764.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow764", fUML_Tests_TestSimpleActivities_ObjectFlow764);
				fUML_Tests_TestSimpleActivities_ObjectFlow764_LiteralInteger765.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger765", fUML_Tests_TestSimpleActivities_ObjectFlow764_LiteralInteger765);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_0.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(SimpleDecision_0.output_0)", fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_0);
			fUML_Tests_TestSimpleActivities_Call_ForkMergeData.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(ForkMergeData)", fUML_Tests_TestSimpleActivities_Call_ForkMergeData);
				fUML_Tests_TestSimpleActivities_Call_ForkMergeData_ForkMergeData_output.reset(new OutputPin());
				this->addToElementRepository("ForkMergeData.output", fUML_Tests_TestSimpleActivities_Call_ForkMergeData_ForkMergeData_output);
			fUML_Tests_TestSimpleActivities_ObjectFlow766.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow766", fUML_Tests_TestSimpleActivities_ObjectFlow766);
				fUML_Tests_TestSimpleActivities_ObjectFlow766_LiteralInteger767.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger767", fUML_Tests_TestSimpleActivities_ObjectFlow766_LiteralInteger767);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1.reset(new Parameter());
			this->addToElementRepository("SimpleDecision_1.output_1", fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1);
				fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1_LiteralInteger768.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger768", fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1_LiteralInteger768);
				fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1_LiteralUnlimitedNatural769.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural769", fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1_LiteralUnlimitedNatural769);
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1.reset(new Parameter());
			this->addToElementRepository("SimpleDecision_0.output_1", fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1);
				fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1_LiteralInteger770.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger770", fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1_LiteralInteger770);
				fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1_LiteralUnlimitedNatural771.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural771", fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1_LiteralUnlimitedNatural771);
			fUML_Tests_TestSimpleActivities_ControlFlow772.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow772", fUML_Tests_TestSimpleActivities_ControlFlow772);
				fUML_Tests_TestSimpleActivities_ControlFlow772_LiteralInteger773.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger773", fUML_Tests_TestSimpleActivities_ControlFlow772_LiteralInteger773);
			fUML_Tests_TestSimpleActivities_Parameter_ForkMerge.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(ForkMerge)", fUML_Tests_TestSimpleActivities_Parameter_ForkMerge);
			fUML_Tests_TestSimpleActivities_Call_Copier.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Copier)", fUML_Tests_TestSimpleActivities_Call_Copier);
				fUML_Tests_TestSimpleActivities_Call_Copier_Copier_input.reset(new InputPin());
				this->addToElementRepository("Copier.input", fUML_Tests_TestSimpleActivities_Call_Copier_Copier_input);
				fUML_Tests_TestSimpleActivities_Call_Copier_Copier_output.reset(new OutputPin());
				this->addToElementRepository("Copier.output", fUML_Tests_TestSimpleActivities_Call_Copier_Copier_output);
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0.reset(new Parameter());
			this->addToElementRepository("SimpleDecision_0.output_0", fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0);
				fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0_LiteralInteger774.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger774", fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0_LiteralInteger774);
				fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0_LiteralUnlimitedNatural775.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural775", fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0_LiteralUnlimitedNatural775);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(SimpleDecision_0)", fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_output_0.reset(new OutputPin());
				this->addToElementRepository("SimpleDecision_0.output_0", fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_output_0);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_testValue.reset(new InputPin());
				this->addToElementRepository("SimpleDecision_0.testValue", fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_testValue);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDcision_0_output_1.reset(new OutputPin());
				this->addToElementRepository("SimpleDcision_0.output_1", fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDcision_0_output_1);
			fUML_Tests_TestSimpleActivities_ControlFlow776.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow776", fUML_Tests_TestSimpleActivities_ControlFlow776);
				fUML_Tests_TestSimpleActivities_ControlFlow776_LiteralInteger777.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger777", fUML_Tests_TestSimpleActivities_ControlFlow776_LiteralInteger777);
			fUML_Tests_TestSimpleActivities_ControlFlow778.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow778", fUML_Tests_TestSimpleActivities_ControlFlow778);
				fUML_Tests_TestSimpleActivities_ControlFlow778_LiteralInteger779.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger779", fUML_Tests_TestSimpleActivities_ControlFlow778_LiteralInteger779);
			fUML_Tests_TestSimpleActivities_Parameter_CopierCaller_output.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(CopierCaller.output)", fUML_Tests_TestSimpleActivities_Parameter_CopierCaller_output);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1Node.reset(new ActivityParameterNode());
			this->addToElementRepository("SimpleDecision_1.output_1Node", fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1Node);
			fUML_Tests_TestSimpleActivities_Value_0.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(0)", fUML_Tests_TestSimpleActivities_Value_0);
				fUML_Tests_TestSimpleActivities_Value_0_Value_0_result.reset(new OutputPin());
				this->addToElementRepository("Value(0).result", fUML_Tests_TestSimpleActivities_Value_0_Value_0_result);
					fUML_Tests_TestSimpleActivities_Value_0_Value_0_result_LiteralUnlimitedNatural780.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural780", fUML_Tests_TestSimpleActivities_Value_0_Value_0_result_LiteralUnlimitedNatural780);
					fUML_Tests_TestSimpleActivities_Value_0_Value_0_result_LiteralInteger781.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger781", fUML_Tests_TestSimpleActivities_Value_0_Value_0_result_LiteralInteger781);
				fUML_Tests_TestSimpleActivities_Value_0_LiteralInteger782.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger782", fUML_Tests_TestSimpleActivities_Value_0_LiteralInteger782);
			fUML_Tests_TestSimpleActivities_ObjectFlow783.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow783", fUML_Tests_TestSimpleActivities_ObjectFlow783);
				fUML_Tests_TestSimpleActivities_ObjectFlow783_LiteralInteger784.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger784", fUML_Tests_TestSimpleActivities_ObjectFlow783_LiteralInteger784);
			fUML_Tests_TestSimpleActivities_ObjectFlow785.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow785", fUML_Tests_TestSimpleActivities_ObjectFlow785);
				fUML_Tests_TestSimpleActivities_ObjectFlow785_LiteralInteger786.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger786", fUML_Tests_TestSimpleActivities_ObjectFlow785_LiteralInteger786);
			fUML_Tests_TestSimpleActivities_Parameter_Copier_output.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(Copier.output)", fUML_Tests_TestSimpleActivities_Parameter_Copier_output);
			fUML_Tests_TestSimpleActivities_DecisionJoin_output.reset(new Parameter());
			this->addToElementRepository("DecisionJoin.output", fUML_Tests_TestSimpleActivities_DecisionJoin_output);
				fUML_Tests_TestSimpleActivities_DecisionJoin_output_LiteralUnlimitedNatural787.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural787", fUML_Tests_TestSimpleActivities_DecisionJoin_output_LiteralUnlimitedNatural787);
				fUML_Tests_TestSimpleActivities_DecisionJoin_output_LiteralUnlimitedNatural788.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural788", fUML_Tests_TestSimpleActivities_DecisionJoin_output_LiteralUnlimitedNatural788);
			fUML_Tests_TestSimpleActivities_Call_CopierCaller.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(CopierCaller)", fUML_Tests_TestSimpleActivities_Call_CopierCaller);
				fUML_Tests_TestSimpleActivities_Call_CopierCaller_CopierCaller_output.reset(new OutputPin());
				this->addToElementRepository("CopierCaller.output", fUML_Tests_TestSimpleActivities_Call_CopierCaller_CopierCaller_output);
			fUML_Tests_TestSimpleActivities_CopierCaller_output.reset(new Parameter());
			this->addToElementRepository("CopierCaller.output", fUML_Tests_TestSimpleActivities_CopierCaller_output);
				fUML_Tests_TestSimpleActivities_CopierCaller_output_LiteralUnlimitedNatural789.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural789", fUML_Tests_TestSimpleActivities_CopierCaller_output_LiteralUnlimitedNatural789);
				fUML_Tests_TestSimpleActivities_CopierCaller_output_LiteralInteger790.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger790", fUML_Tests_TestSimpleActivities_CopierCaller_output_LiteralInteger790);
			fUML_Tests_TestSimpleActivities_ForkMergeData_output.reset(new Parameter());
			this->addToElementRepository("ForkMergeData.output", fUML_Tests_TestSimpleActivities_ForkMergeData_output);
				fUML_Tests_TestSimpleActivities_ForkMergeData_output_LiteralUnlimitedNatural791.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural791", fUML_Tests_TestSimpleActivities_ForkMergeData_output_LiteralUnlimitedNatural791);
				fUML_Tests_TestSimpleActivities_ForkMergeData_output_LiteralUnlimitedNatural792.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural792", fUML_Tests_TestSimpleActivities_ForkMergeData_output_LiteralUnlimitedNatural792);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_1.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(SimpleDecision_0.output_1)", fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_1);
		fUML_Tests_CopierCaller.reset(new Activity());
		this->addToElementRepository("CopierCaller", fUML_Tests_CopierCaller);
			fUML_Tests_CopierCaller_ObjectFlow793.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow793", fUML_Tests_CopierCaller_ObjectFlow793);
				fUML_Tests_CopierCaller_ObjectFlow793_LiteralInteger794.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger794", fUML_Tests_CopierCaller_ObjectFlow793_LiteralInteger794);
			fUML_Tests_CopierCaller_output.reset(new Parameter());
			this->addToElementRepository("output", fUML_Tests_CopierCaller_output);
				fUML_Tests_CopierCaller_output_LiteralInteger795.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger795", fUML_Tests_CopierCaller_output_LiteralInteger795);
				fUML_Tests_CopierCaller_output_LiteralUnlimitedNatural796.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural796", fUML_Tests_CopierCaller_output_LiteralUnlimitedNatural796);
			fUML_Tests_CopierCaller_ObjectFlow797.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow797", fUML_Tests_CopierCaller_ObjectFlow797);
				fUML_Tests_CopierCaller_ObjectFlow797_LiteralInteger798.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger798", fUML_Tests_CopierCaller_ObjectFlow797_LiteralInteger798);
			fUML_Tests_CopierCaller_Call_Copier.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Copier)", fUML_Tests_CopierCaller_Call_Copier);
				fUML_Tests_CopierCaller_Call_Copier_Copier_output.reset(new OutputPin());
				this->addToElementRepository("Copier.output", fUML_Tests_CopierCaller_Call_Copier_Copier_output);
					fUML_Tests_CopierCaller_Call_Copier_Copier_output_LiteralUnlimitedNatural799.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural799", fUML_Tests_CopierCaller_Call_Copier_Copier_output_LiteralUnlimitedNatural799);
					fUML_Tests_CopierCaller_Call_Copier_Copier_output_LiteralInteger800.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger800", fUML_Tests_CopierCaller_Call_Copier_Copier_output_LiteralInteger800);
				fUML_Tests_CopierCaller_Call_Copier_Copier_input.reset(new InputPin());
				this->addToElementRepository("Copier.input", fUML_Tests_CopierCaller_Call_Copier_Copier_input);
					fUML_Tests_CopierCaller_Call_Copier_Copier_input_LiteralInteger801.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger801", fUML_Tests_CopierCaller_Call_Copier_Copier_input_LiteralInteger801);
					fUML_Tests_CopierCaller_Call_Copier_Copier_input_LiteralUnlimitedNatural802.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural802", fUML_Tests_CopierCaller_Call_Copier_Copier_input_LiteralUnlimitedNatural802);
			fUML_Tests_CopierCaller_Parameter_output.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(output)", fUML_Tests_CopierCaller_Parameter_output);
			fUML_Tests_CopierCaller_Value_888.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(888)", fUML_Tests_CopierCaller_Value_888);
				fUML_Tests_CopierCaller_Value_888_Value_0_result.reset(new OutputPin());
				this->addToElementRepository("Value(0).result", fUML_Tests_CopierCaller_Value_888_Value_0_result);
				fUML_Tests_CopierCaller_Value_888_LiteralInteger803.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger803", fUML_Tests_CopierCaller_Value_888_LiteralInteger803);
		fUML_Tests_NodeEnabler.reset(new Activity());
		this->addToElementRepository("NodeEnabler", fUML_Tests_NodeEnabler);
			fUML_Tests_NodeEnabler_ControlFlow804.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow804", fUML_Tests_NodeEnabler_ControlFlow804);
				fUML_Tests_NodeEnabler_ControlFlow804_LiteralUnlimitedNatural805.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural805", fUML_Tests_NodeEnabler_ControlFlow804_LiteralUnlimitedNatural805);
			fUML_Tests_NodeEnabler_ObjectFlow806.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow806", fUML_Tests_NodeEnabler_ObjectFlow806);
				fUML_Tests_NodeEnabler_ObjectFlow806_LiteralUnlimitedNatural807.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural807", fUML_Tests_NodeEnabler_ObjectFlow806_LiteralUnlimitedNatural807);
			fUML_Tests_NodeEnabler_ObjectFlow808.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow808", fUML_Tests_NodeEnabler_ObjectFlow808);
				fUML_Tests_NodeEnabler_ObjectFlow808_LiteralUnlimitedNatural809.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural809", fUML_Tests_NodeEnabler_ObjectFlow808_LiteralUnlimitedNatural809);
			fUML_Tests_NodeEnabler_Output_output.reset(new ActivityParameterNode());
			this->addToElementRepository("Output(output)", fUML_Tests_NodeEnabler_Output_output);
			fUML_Tests_NodeEnabler_FinalNode.reset(new ActivityFinalNode());
			this->addToElementRepository("FinalNode", fUML_Tests_NodeEnabler_FinalNode);
			fUML_Tests_NodeEnabler_output.reset(new Parameter());
			this->addToElementRepository("output", fUML_Tests_NodeEnabler_output);
				fUML_Tests_NodeEnabler_output_LiteralInteger810.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger810", fUML_Tests_NodeEnabler_output_LiteralInteger810);
				fUML_Tests_NodeEnabler_output_LiteralUnlimitedNatural811.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural811", fUML_Tests_NodeEnabler_output_LiteralUnlimitedNatural811);
			fUML_Tests_NodeEnabler_Input_input.reset(new ActivityParameterNode());
			this->addToElementRepository("Input(input)", fUML_Tests_NodeEnabler_Input_input);
			fUML_Tests_NodeEnabler_StructuredNode.reset(new StructuredActivityNode());
			this->addToElementRepository("StructuredNode", fUML_Tests_NodeEnabler_StructuredNode);
				fUML_Tests_NodeEnabler_StructuredNode_Call_Copier.reset(new CallBehaviorAction());
				this->addToElementRepository("Call(Copier)", fUML_Tests_NodeEnabler_StructuredNode_Call_Copier);
					fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_input.reset(new InputPin());
					this->addToElementRepository("Call(Copier).input", fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_input);
						fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_input_LiteralInteger812.reset(new LiteralInteger());
						this->addToElementRepository("LiteralInteger812", fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_input_LiteralInteger812);
						fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_input_LiteralUnlimitedNatural813.reset(new LiteralUnlimitedNatural());
						this->addToElementRepository("LiteralUnlimitedNatural813", fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_input_LiteralUnlimitedNatural813);
					fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_output.reset(new OutputPin());
					this->addToElementRepository("Call(Copier).output", fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_output);
						fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_output_LiteralInteger814.reset(new LiteralInteger());
						this->addToElementRepository("LiteralInteger814", fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_output_LiteralInteger814);
						fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_output_LiteralUnlimitedNatural815.reset(new LiteralUnlimitedNatural());
						this->addToElementRepository("LiteralUnlimitedNatural815", fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_output_LiteralUnlimitedNatural815);
			fUML_Tests_NodeEnabler_input.reset(new Parameter());
			this->addToElementRepository("input", fUML_Tests_NodeEnabler_input);
				fUML_Tests_NodeEnabler_input_LiteralInteger816.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger816", fUML_Tests_NodeEnabler_input_LiteralInteger816);
				fUML_Tests_NodeEnabler_input_LiteralUnlimitedNatural817.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural817", fUML_Tests_NodeEnabler_input_LiteralUnlimitedNatural817);
		fUML_Tests_TestClassExtentReader.reset(new Activity());
		this->addToElementRepository("TestClassExtentReader", fUML_Tests_TestClassExtentReader);
			fUML_Tests_TestClassExtentReader_ControlFlow818.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow818", fUML_Tests_TestClassExtentReader_ControlFlow818);
				fUML_Tests_TestClassExtentReader_ControlFlow818_LiteralInteger819.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger819", fUML_Tests_TestClassExtentReader_ControlFlow818_LiteralInteger819);
			fUML_Tests_TestClassExtentReader_object.reset(new Parameter());
			this->addToElementRepository("object", fUML_Tests_TestClassExtentReader_object);
				fUML_Tests_TestClassExtentReader_object_LiteralInteger820.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger820", fUML_Tests_TestClassExtentReader_object_LiteralInteger820);
				fUML_Tests_TestClassExtentReader_object_LiteralUnlimitedNatural821.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural821", fUML_Tests_TestClassExtentReader_object_LiteralUnlimitedNatural821);
			fUML_Tests_TestClassExtentReader_Param_extent.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(extent)", fUML_Tests_TestClassExtentReader_Param_extent);
			fUML_Tests_TestClassExtentReader_Create_TestClass.reset(new CreateObjectAction());
			this->addToElementRepository("Create(TestClass)", fUML_Tests_TestClassExtentReader_Create_TestClass);
				fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result.reset(new OutputPin());
				this->addToElementRepository("Create.result", fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result);
					fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result_LiteralUnlimitedNatural822.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural822", fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result_LiteralUnlimitedNatural822);
					fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result_LiteralInteger823.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger823", fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result_LiteralInteger823);
			fUML_Tests_TestClassExtentReader_Param_object.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(object)", fUML_Tests_TestClassExtentReader_Param_object);
			fUML_Tests_TestClassExtentReader_ObjectFlow824.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow824", fUML_Tests_TestClassExtentReader_ObjectFlow824);
				fUML_Tests_TestClassExtentReader_ObjectFlow824_LiteralInteger825.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger825", fUML_Tests_TestClassExtentReader_ObjectFlow824_LiteralInteger825);
			fUML_Tests_TestClassExtentReader_extent.reset(new Parameter());
			this->addToElementRepository("extent", fUML_Tests_TestClassExtentReader_extent);
				fUML_Tests_TestClassExtentReader_extent_LiteralUnlimitedNatural826.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural826", fUML_Tests_TestClassExtentReader_extent_LiteralUnlimitedNatural826);
				fUML_Tests_TestClassExtentReader_extent_LiteralUnlimitedNatural827.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural827", fUML_Tests_TestClassExtentReader_extent_LiteralUnlimitedNatural827);
			fUML_Tests_TestClassExtentReader_ReadExtent_TestClass.reset(new ReadExtentAction());
			this->addToElementRepository("ReadExtent(TestClass)", fUML_Tests_TestClassExtentReader_ReadExtent_TestClass);
				fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result.reset(new OutputPin());
				this->addToElementRepository("ReadExtent.result", fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result);
					fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result_LiteralUnlimitedNatural828.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural828", fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result_LiteralUnlimitedNatural828);
					fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result_LiteralUnlimitedNatural829.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural829", fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result_LiteralUnlimitedNatural829);
			fUML_Tests_TestClassExtentReader_ObjectFlow830.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow830", fUML_Tests_TestClassExtentReader_ObjectFlow830);
				fUML_Tests_TestClassExtentReader_ObjectFlow830_LiteralInteger831.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger831", fUML_Tests_TestClassExtentReader_ObjectFlow830_LiteralInteger831);
		fUML_Tests_HelloWorld.reset(new Activity());
		this->addToElementRepository("HelloWorld", fUML_Tests_HelloWorld);
			fUML_Tests_HelloWorld_WriteLine.reset(new CallBehaviorAction());
			this->addToElementRepository("WriteLine", fUML_Tests_HelloWorld_WriteLine);
				fUML_Tests_HelloWorld_WriteLine_WriteLine_value.reset(new InputPin());
				this->addToElementRepository("WriteLine.value", fUML_Tests_HelloWorld_WriteLine_WriteLine_value);
				fUML_Tests_HelloWorld_WriteLine_WriteLine_errorStatus.reset(new OutputPin());
				this->addToElementRepository("WriteLine.errorStatus", fUML_Tests_HelloWorld_WriteLine_WriteLine_errorStatus);
			fUML_Tests_HelloWorld_ObjectFlow832.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow832", fUML_Tests_HelloWorld_ObjectFlow832);
				fUML_Tests_HelloWorld_ObjectFlow832_LiteralInteger833.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger833", fUML_Tests_HelloWorld_ObjectFlow832_LiteralInteger833);
			fUML_Tests_HelloWorld_Value_Hello_World_.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(\"Hello World!\")", fUML_Tests_HelloWorld_Value_Hello_World_);
				fUML_Tests_HelloWorld_Value_Hello_World__LiteralString834.reset(new LiteralString());
				this->addToElementRepository("LiteralString834", fUML_Tests_HelloWorld_Value_Hello_World__LiteralString834);
				fUML_Tests_HelloWorld_Value_Hello_World__Value_result.reset(new OutputPin());
				this->addToElementRepository("Value.result", fUML_Tests_HelloWorld_Value_Hello_World__Value_result);
		fUML_Tests_TestSpecializedSignalSend.reset(new Activity());
		this->addToElementRepository("TestSpecializedSignalSend", fUML_Tests_TestSpecializedSignalSend);
			fUML_Tests_TestSpecializedSignalSend_ActivityFinalNode835.reset(new ActivityFinalNode());
			this->addToElementRepository("ActivityFinalNode835", fUML_Tests_TestSpecializedSignalSend_ActivityFinalNode835);
			fUML_Tests_TestSpecializedSignalSend_ControlFlow836.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow836", fUML_Tests_TestSpecializedSignalSend_ControlFlow836);
				fUML_Tests_TestSpecializedSignalSend_ControlFlow836_LiteralUnlimitedNatural837.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural837", fUML_Tests_TestSpecializedSignalSend_ControlFlow836_LiteralUnlimitedNatural837);
			fUML_Tests_TestSpecializedSignalSend_ForkNode838.reset(new ForkNode());
			this->addToElementRepository("ForkNode838", fUML_Tests_TestSpecializedSignalSend_ForkNode838);
			fUML_Tests_TestSpecializedSignalSend_ControlFlow839.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow839", fUML_Tests_TestSpecializedSignalSend_ControlFlow839);
				fUML_Tests_TestSpecializedSignalSend_ControlFlow839_LiteralUnlimitedNatural840.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural840", fUML_Tests_TestSpecializedSignalSend_ControlFlow839_LiteralUnlimitedNatural840);
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow841.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow841", fUML_Tests_TestSpecializedSignalSend_ObjectFlow841);
				fUML_Tests_TestSpecializedSignalSend_ObjectFlow841_LiteralUnlimitedNatural842.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural842", fUML_Tests_TestSpecializedSignalSend_ObjectFlow841_LiteralUnlimitedNatural842);
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow843.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow843", fUML_Tests_TestSpecializedSignalSend_ObjectFlow843);
				fUML_Tests_TestSpecializedSignalSend_ObjectFlow843_LiteralUnlimitedNatural844.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural844", fUML_Tests_TestSpecializedSignalSend_ObjectFlow843_LiteralUnlimitedNatural844);
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow845.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow845", fUML_Tests_TestSpecializedSignalSend_ObjectFlow845);
				fUML_Tests_TestSpecializedSignalSend_ObjectFlow845_LiteralUnlimitedNatural846.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural846", fUML_Tests_TestSpecializedSignalSend_ObjectFlow845_LiteralUnlimitedNatural846);
			fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver.reset(new CreateObjectAction());
			this->addToElementRepository("Create(TestSignalReceiver)", fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver);
				fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result);
					fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result_LiteralUnlimitedNatural847.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural847", fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result_LiteralUnlimitedNatural847);
					fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result_LiteralInteger848.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger848", fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result_LiteralInteger848);
			fUML_Tests_TestSpecializedSignalSend_ControlFlow849.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow849", fUML_Tests_TestSpecializedSignalSend_ControlFlow849);
				fUML_Tests_TestSpecializedSignalSend_ControlFlow849_LiteralUnlimitedNatural850.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural850", fUML_Tests_TestSpecializedSignalSend_ControlFlow849_LiteralUnlimitedNatural850);
			fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver.reset(new StartObjectBehaviorAction());
			this->addToElementRepository("Start(TestSignalReceiver)", fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver);
				fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object);
					fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object_LiteralInteger851.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger851", fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object_LiteralInteger851);
					fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object_LiteralUnlimitedNatural852.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural852", fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object_LiteralUnlimitedNatural852);
			fUML_Tests_TestSpecializedSignalSend_InitialNode853.reset(new InitialNode());
			this->addToElementRepository("InitialNode853", fUML_Tests_TestSpecializedSignalSend_InitialNode853);
			fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal.reset(new SendSignalAction());
			this->addToElementRepository("Send(SpecializedSignal)", fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal);
				fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target.reset(new InputPin());
				this->addToElementRepository("target", fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target);
					fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target_LiteralUnlimitedNatural854.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural854", fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target_LiteralUnlimitedNatural854);
					fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target_LiteralInteger855.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger855", fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target_LiteralInteger855);
		fUML_Tests_SpecializedSignal.reset(new Signal());
		this->addToElementRepository("SpecializedSignal", fUML_Tests_SpecializedSignal);
			fUML_Tests_SpecializedSignal_Generalization856.reset(new Generalization());
			this->addToElementRepository("Generalization856", fUML_Tests_SpecializedSignal_Generalization856);
		fUML_Tests_SignalEvent857.reset(new SignalEvent());
		this->addToElementRepository("SignalEvent857", fUML_Tests_SignalEvent857);
		fUML_Tests_TestClassObjectCreator.reset(new Activity());
		this->addToElementRepository("TestClassObjectCreator", fUML_Tests_TestClassObjectCreator);
			fUML_Tests_TestClassObjectCreator_Parameter_result.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(result)", fUML_Tests_TestClassObjectCreator_Parameter_result);
			fUML_Tests_TestClassObjectCreator_result.reset(new Parameter());
			this->addToElementRepository("result", fUML_Tests_TestClassObjectCreator_result);
				fUML_Tests_TestClassObjectCreator_result_LiteralUnlimitedNatural858.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural858", fUML_Tests_TestClassObjectCreator_result_LiteralUnlimitedNatural858);
				fUML_Tests_TestClassObjectCreator_result_LiteralInteger859.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger859", fUML_Tests_TestClassObjectCreator_result_LiteralInteger859);
			fUML_Tests_TestClassObjectCreator_Create_TestClass.reset(new CreateObjectAction());
			this->addToElementRepository("Create(TestClass)", fUML_Tests_TestClassObjectCreator_Create_TestClass);
				fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result.reset(new OutputPin());
				this->addToElementRepository("Create(TestClass).result", fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result);
					fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result_LiteralInteger860.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger860", fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result_LiteralInteger860);
					fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result_LiteralUnlimitedNatural861.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural861", fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result_LiteralUnlimitedNatural861);
			fUML_Tests_TestClassObjectCreator_ObjectFlow862.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow862", fUML_Tests_TestClassObjectCreator_ObjectFlow862);
				fUML_Tests_TestClassObjectCreator_ObjectFlow862_LiteralInteger863.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger863", fUML_Tests_TestClassObjectCreator_ObjectFlow862_LiteralInteger863);
		fUML_Tests_Subclass1.reset(new Class_());
		this->addToElementRepository("Subclass1", fUML_Tests_Subclass1);
			fUML_Tests_Subclass1_a.reset(new Property());
			this->addToElementRepository("a", fUML_Tests_Subclass1_a);
			fUML_Tests_Subclass1_Generalization864.reset(new Generalization());
			this->addToElementRepository("Generalization864", fUML_Tests_Subclass1_Generalization864);
		fUML_Tests_ActiveClassBehaviorSender.reset(new Activity());
		this->addToElementRepository("ActiveClassBehaviorSender", fUML_Tests_ActiveClassBehaviorSender);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow865.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow865", fUML_Tests_ActiveClassBehaviorSender_ObjectFlow865);
				fUML_Tests_ActiveClassBehaviorSender_ObjectFlow865_LiteralUnlimitedNatural866.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural866", fUML_Tests_ActiveClassBehaviorSender_ObjectFlow865_LiteralUnlimitedNatural866);
			fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass.reset(new StartObjectBehaviorAction());
			this->addToElementRepository("Start(ActiveClass)", fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass);
				fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object);
					fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object_LiteralUnlimitedNatural867.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural867", fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object_LiteralUnlimitedNatural867);
					fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object_LiteralInteger868.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger868", fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object_LiteralInteger868);
			fUML_Tests_ActiveClassBehaviorSender_ForkNode869.reset(new ForkNode());
			this->addToElementRepository("ForkNode869", fUML_Tests_ActiveClassBehaviorSender_ForkNode869);
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow870.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow870", fUML_Tests_ActiveClassBehaviorSender_ControlFlow870);
				fUML_Tests_ActiveClassBehaviorSender_ControlFlow870_LiteralUnlimitedNatural871.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural871", fUML_Tests_ActiveClassBehaviorSender_ControlFlow870_LiteralUnlimitedNatural871);
			fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal.reset(new SendSignalAction());
			this->addToElementRepository("Send(TestSignal)", fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal);
				fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target.reset(new InputPin());
				this->addToElementRepository("target", fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target);
					fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target_LiteralInteger872.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger872", fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target_LiteralInteger872);
					fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target_LiteralUnlimitedNatural873.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural873", fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target_LiteralUnlimitedNatural873);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow874.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow874", fUML_Tests_ActiveClassBehaviorSender_ObjectFlow874);
				fUML_Tests_ActiveClassBehaviorSender_ObjectFlow874_LiteralUnlimitedNatural875.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural875", fUML_Tests_ActiveClassBehaviorSender_ObjectFlow874_LiteralUnlimitedNatural875);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow876.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow876", fUML_Tests_ActiveClassBehaviorSender_ObjectFlow876);
				fUML_Tests_ActiveClassBehaviorSender_ObjectFlow876_LiteralUnlimitedNatural877.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural877", fUML_Tests_ActiveClassBehaviorSender_ObjectFlow876_LiteralUnlimitedNatural877);
			fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal.reset(new SendSignalAction());
			this->addToElementRepository("Send(OtherSignal)", fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal);
				fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target.reset(new InputPin());
				this->addToElementRepository("target", fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target);
					fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target_LiteralInteger878.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger878", fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target_LiteralInteger878);
					fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target_LiteralUnlimitedNatural879.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural879", fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target_LiteralUnlimitedNatural879);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow880.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow880", fUML_Tests_ActiveClassBehaviorSender_ObjectFlow880);
				fUML_Tests_ActiveClassBehaviorSender_ObjectFlow880_LiteralUnlimitedNatural881.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural881", fUML_Tests_ActiveClassBehaviorSender_ObjectFlow880_LiteralUnlimitedNatural881);
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow882.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow882", fUML_Tests_ActiveClassBehaviorSender_ControlFlow882);
				fUML_Tests_ActiveClassBehaviorSender_ControlFlow882_LiteralUnlimitedNatural883.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural883", fUML_Tests_ActiveClassBehaviorSender_ControlFlow882_LiteralUnlimitedNatural883);
			fUML_Tests_ActiveClassBehaviorSender_InitialNode884.reset(new InitialNode());
			this->addToElementRepository("InitialNode884", fUML_Tests_ActiveClassBehaviorSender_InitialNode884);
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow885.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow885", fUML_Tests_ActiveClassBehaviorSender_ControlFlow885);
				fUML_Tests_ActiveClassBehaviorSender_ControlFlow885_LiteralUnlimitedNatural886.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural886", fUML_Tests_ActiveClassBehaviorSender_ControlFlow885_LiteralUnlimitedNatural886);
			fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass.reset(new CreateObjectAction());
			this->addToElementRepository("Create(ActiveClass)", fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass);
				fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result);
					fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result_LiteralUnlimitedNatural887.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural887", fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result_LiteralUnlimitedNatural887);
					fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result_LiteralInteger888.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger888", fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result_LiteralInteger888);
		fUML_Tests_TestStringFunctions.reset(new Activity());
		this->addToElementRepository("TestStringFunctions", fUML_Tests_TestStringFunctions);
			fUML_Tests_TestStringFunctions_Value_9.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(9)", fUML_Tests_TestStringFunctions_Value_9);
				fUML_Tests_TestStringFunctions_Value_9_Value_9_result.reset(new OutputPin());
				this->addToElementRepository("Value(9).result", fUML_Tests_TestStringFunctions_Value_9_Value_9_result);
					fUML_Tests_TestStringFunctions_Value_9_Value_9_result_LiteralUnlimitedNatural889.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural889", fUML_Tests_TestStringFunctions_Value_9_Value_9_result_LiteralUnlimitedNatural889);
					fUML_Tests_TestStringFunctions_Value_9_Value_9_result_LiteralInteger890.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger890", fUML_Tests_TestStringFunctions_Value_9_Value_9_result_LiteralInteger890);
				fUML_Tests_TestStringFunctions_Value_9_LiteralInteger891.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger891", fUML_Tests_TestStringFunctions_Value_9_LiteralInteger891);
			fUML_Tests_TestStringFunctions_Call_Concat.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Concat)", fUML_Tests_TestStringFunctions_Call_Concat);
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_result.reset(new OutputPin());
				this->addToElementRepository("Concat.result", fUML_Tests_TestStringFunctions_Call_Concat_Concat_result);
					fUML_Tests_TestStringFunctions_Call_Concat_Concat_result_LiteralInteger892.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger892", fUML_Tests_TestStringFunctions_Call_Concat_Concat_result_LiteralInteger892);
					fUML_Tests_TestStringFunctions_Call_Concat_Concat_result_LiteralUnlimitedNatural893.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural893", fUML_Tests_TestStringFunctions_Call_Concat_Concat_result_LiteralUnlimitedNatural893);
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_x.reset(new InputPin());
				this->addToElementRepository("Concat.x", fUML_Tests_TestStringFunctions_Call_Concat_Concat_x);
					fUML_Tests_TestStringFunctions_Call_Concat_Concat_x_LiteralInteger894.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger894", fUML_Tests_TestStringFunctions_Call_Concat_Concat_x_LiteralInteger894);
					fUML_Tests_TestStringFunctions_Call_Concat_Concat_x_LiteralUnlimitedNatural895.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural895", fUML_Tests_TestStringFunctions_Call_Concat_Concat_x_LiteralUnlimitedNatural895);
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_y.reset(new InputPin());
				this->addToElementRepository("Concat.y", fUML_Tests_TestStringFunctions_Call_Concat_Concat_y);
					fUML_Tests_TestStringFunctions_Call_Concat_Concat_y_LiteralInteger896.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger896", fUML_Tests_TestStringFunctions_Call_Concat_Concat_y_LiteralInteger896);
					fUML_Tests_TestStringFunctions_Call_Concat_Concat_y_LiteralUnlimitedNatural897.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural897", fUML_Tests_TestStringFunctions_Call_Concat_Concat_y_LiteralUnlimitedNatural897);
			fUML_Tests_TestStringFunctions_Call_Size.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Size)", fUML_Tests_TestStringFunctions_Call_Size);
				fUML_Tests_TestStringFunctions_Call_Size_Size_result.reset(new OutputPin());
				this->addToElementRepository("Size.result", fUML_Tests_TestStringFunctions_Call_Size_Size_result);
					fUML_Tests_TestStringFunctions_Call_Size_Size_result_LiteralInteger898.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger898", fUML_Tests_TestStringFunctions_Call_Size_Size_result_LiteralInteger898);
					fUML_Tests_TestStringFunctions_Call_Size_Size_result_LiteralUnlimitedNatural899.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural899", fUML_Tests_TestStringFunctions_Call_Size_Size_result_LiteralUnlimitedNatural899);
				fUML_Tests_TestStringFunctions_Call_Size_Size_x.reset(new InputPin());
				this->addToElementRepository("Size.x", fUML_Tests_TestStringFunctions_Call_Size_Size_x);
					fUML_Tests_TestStringFunctions_Call_Size_Size_x_LiteralInteger900.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger900", fUML_Tests_TestStringFunctions_Call_Size_Size_x_LiteralInteger900);
					fUML_Tests_TestStringFunctions_Call_Size_Size_x_LiteralUnlimitedNatural901.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural901", fUML_Tests_TestStringFunctions_Call_Size_Size_x_LiteralUnlimitedNatural901);
			fUML_Tests_TestStringFunctions_ObjectFlow902.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow902", fUML_Tests_TestStringFunctions_ObjectFlow902);
				fUML_Tests_TestStringFunctions_ObjectFlow902_LiteralInteger903.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger903", fUML_Tests_TestStringFunctions_ObjectFlow902_LiteralInteger903);
			fUML_Tests_TestStringFunctions_Substring1Result.reset(new Parameter());
			this->addToElementRepository("Substring1Result", fUML_Tests_TestStringFunctions_Substring1Result);
				fUML_Tests_TestStringFunctions_Substring1Result_LiteralInteger904.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger904", fUML_Tests_TestStringFunctions_Substring1Result_LiteralInteger904);
				fUML_Tests_TestStringFunctions_Substring1Result_LiteralUnlimitedNatural905.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural905", fUML_Tests_TestStringFunctions_Substring1Result_LiteralUnlimitedNatural905);
			fUML_Tests_TestStringFunctions_ObjectFlow906.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow906", fUML_Tests_TestStringFunctions_ObjectFlow906);
				fUML_Tests_TestStringFunctions_ObjectFlow906_LiteralInteger907.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger907", fUML_Tests_TestStringFunctions_ObjectFlow906_LiteralInteger907);
			fUML_Tests_TestStringFunctions_Fork_Value.reset(new ForkNode());
			this->addToElementRepository("Fork(Value)", fUML_Tests_TestStringFunctions_Fork_Value);
			fUML_Tests_TestStringFunctions_Param_ConcatResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(ConcatResult)", fUML_Tests_TestStringFunctions_Param_ConcatResult);
			fUML_Tests_TestStringFunctions_Value_123456789.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(\"123456789\")", fUML_Tests_TestStringFunctions_Value_123456789);
				fUML_Tests_TestStringFunctions_Value_123456789_Value_result.reset(new OutputPin());
				this->addToElementRepository("Value.result", fUML_Tests_TestStringFunctions_Value_123456789_Value_result);
					fUML_Tests_TestStringFunctions_Value_123456789_Value_result_LiteralInteger908.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger908", fUML_Tests_TestStringFunctions_Value_123456789_Value_result_LiteralInteger908);
					fUML_Tests_TestStringFunctions_Value_123456789_Value_result_LiteralUnlimitedNatural909.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural909", fUML_Tests_TestStringFunctions_Value_123456789_Value_result_LiteralUnlimitedNatural909);
				fUML_Tests_TestStringFunctions_Value_123456789_LiteralString910.reset(new LiteralString());
				this->addToElementRepository("LiteralString910", fUML_Tests_TestStringFunctions_Value_123456789_LiteralString910);
			fUML_Tests_TestStringFunctions_ObjectFlow911.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow911", fUML_Tests_TestStringFunctions_ObjectFlow911);
				fUML_Tests_TestStringFunctions_ObjectFlow911_LiteralInteger912.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger912", fUML_Tests_TestStringFunctions_ObjectFlow911_LiteralInteger912);
			fUML_Tests_TestStringFunctions_Call_Substringminus1.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Substring)-1", fUML_Tests_TestStringFunctions_Call_Substringminus1);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestStringFunctions_Call_Substringminus1_result);
					fUML_Tests_TestStringFunctions_Call_Substringminus1_result_LiteralInteger913.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger913", fUML_Tests_TestStringFunctions_Call_Substringminus1_result_LiteralInteger913);
					fUML_Tests_TestStringFunctions_Call_Substringminus1_result_LiteralUnlimitedNatural914.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural914", fUML_Tests_TestStringFunctions_Call_Substringminus1_result_LiteralUnlimitedNatural914);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestStringFunctions_Call_Substringminus1_x);
					fUML_Tests_TestStringFunctions_Call_Substringminus1_x_LiteralUnlimitedNatural915.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural915", fUML_Tests_TestStringFunctions_Call_Substringminus1_x_LiteralUnlimitedNatural915);
					fUML_Tests_TestStringFunctions_Call_Substringminus1_x_LiteralInteger916.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger916", fUML_Tests_TestStringFunctions_Call_Substringminus1_x_LiteralInteger916);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_upper.reset(new InputPin());
				this->addToElementRepository("upper", fUML_Tests_TestStringFunctions_Call_Substringminus1_upper);
					fUML_Tests_TestStringFunctions_Call_Substringminus1_upper_LiteralInteger917.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger917", fUML_Tests_TestStringFunctions_Call_Substringminus1_upper_LiteralInteger917);
					fUML_Tests_TestStringFunctions_Call_Substringminus1_upper_LiteralUnlimitedNatural918.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural918", fUML_Tests_TestStringFunctions_Call_Substringminus1_upper_LiteralUnlimitedNatural918);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_lower.reset(new InputPin());
				this->addToElementRepository("lower", fUML_Tests_TestStringFunctions_Call_Substringminus1_lower);
					fUML_Tests_TestStringFunctions_Call_Substringminus1_lower_LiteralUnlimitedNatural919.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural919", fUML_Tests_TestStringFunctions_Call_Substringminus1_lower_LiteralUnlimitedNatural919);
					fUML_Tests_TestStringFunctions_Call_Substringminus1_lower_LiteralInteger920.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger920", fUML_Tests_TestStringFunctions_Call_Substringminus1_lower_LiteralInteger920);
			fUML_Tests_TestStringFunctions_Value_5.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(5)", fUML_Tests_TestStringFunctions_Value_5);
				fUML_Tests_TestStringFunctions_Value_5_Value_5_result.reset(new OutputPin());
				this->addToElementRepository("Value(5).result", fUML_Tests_TestStringFunctions_Value_5_Value_5_result);
					fUML_Tests_TestStringFunctions_Value_5_Value_5_result_LiteralUnlimitedNatural921.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural921", fUML_Tests_TestStringFunctions_Value_5_Value_5_result_LiteralUnlimitedNatural921);
					fUML_Tests_TestStringFunctions_Value_5_Value_5_result_LiteralInteger922.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger922", fUML_Tests_TestStringFunctions_Value_5_Value_5_result_LiteralInteger922);
				fUML_Tests_TestStringFunctions_Value_5_LiteralInteger923.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger923", fUML_Tests_TestStringFunctions_Value_5_LiteralInteger923);
			fUML_Tests_TestStringFunctions_ObjectFlow924.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow924", fUML_Tests_TestStringFunctions_ObjectFlow924);
				fUML_Tests_TestStringFunctions_ObjectFlow924_LiteralInteger925.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger925", fUML_Tests_TestStringFunctions_ObjectFlow924_LiteralInteger925);
			fUML_Tests_TestStringFunctions_Substring2Result.reset(new Parameter());
			this->addToElementRepository("Substring2Result", fUML_Tests_TestStringFunctions_Substring2Result);
				fUML_Tests_TestStringFunctions_Substring2Result_LiteralUnlimitedNatural926.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural926", fUML_Tests_TestStringFunctions_Substring2Result_LiteralUnlimitedNatural926);
				fUML_Tests_TestStringFunctions_Substring2Result_LiteralInteger927.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger927", fUML_Tests_TestStringFunctions_Substring2Result_LiteralInteger927);
			fUML_Tests_TestStringFunctions_ObjectFlow928.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow928", fUML_Tests_TestStringFunctions_ObjectFlow928);
				fUML_Tests_TestStringFunctions_ObjectFlow928_LiteralInteger929.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger929", fUML_Tests_TestStringFunctions_ObjectFlow928_LiteralInteger929);
			fUML_Tests_TestStringFunctions_ObjectFlow930.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow930", fUML_Tests_TestStringFunctions_ObjectFlow930);
				fUML_Tests_TestStringFunctions_ObjectFlow930_LiteralInteger931.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger931", fUML_Tests_TestStringFunctions_ObjectFlow930_LiteralInteger931);
			fUML_Tests_TestStringFunctions_ObjectFlow932.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow932", fUML_Tests_TestStringFunctions_ObjectFlow932);
				fUML_Tests_TestStringFunctions_ObjectFlow932_LiteralInteger933.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger933", fUML_Tests_TestStringFunctions_ObjectFlow932_LiteralInteger933);
			fUML_Tests_TestStringFunctions_Value_6.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(6)", fUML_Tests_TestStringFunctions_Value_6);
				fUML_Tests_TestStringFunctions_Value_6_LiteralInteger934.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger934", fUML_Tests_TestStringFunctions_Value_6_LiteralInteger934);
				fUML_Tests_TestStringFunctions_Value_6_Value_6_result.reset(new OutputPin());
				this->addToElementRepository("Value(6).result", fUML_Tests_TestStringFunctions_Value_6_Value_6_result);
					fUML_Tests_TestStringFunctions_Value_6_Value_6_result_LiteralUnlimitedNatural935.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural935", fUML_Tests_TestStringFunctions_Value_6_Value_6_result_LiteralUnlimitedNatural935);
					fUML_Tests_TestStringFunctions_Value_6_Value_6_result_LiteralInteger936.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger936", fUML_Tests_TestStringFunctions_Value_6_Value_6_result_LiteralInteger936);
			fUML_Tests_TestStringFunctions_ObjectFlow937.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow937", fUML_Tests_TestStringFunctions_ObjectFlow937);
				fUML_Tests_TestStringFunctions_ObjectFlow937_LiteralInteger938.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger938", fUML_Tests_TestStringFunctions_ObjectFlow937_LiteralInteger938);
			fUML_Tests_TestStringFunctions_Param_Substring2Result.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(Substring2Result)", fUML_Tests_TestStringFunctions_Param_Substring2Result);
			fUML_Tests_TestStringFunctions_ConcatResult.reset(new Parameter());
			this->addToElementRepository("ConcatResult", fUML_Tests_TestStringFunctions_ConcatResult);
				fUML_Tests_TestStringFunctions_ConcatResult_LiteralInteger939.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger939", fUML_Tests_TestStringFunctions_ConcatResult_LiteralInteger939);
				fUML_Tests_TestStringFunctions_ConcatResult_LiteralUnlimitedNatural940.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural940", fUML_Tests_TestStringFunctions_ConcatResult_LiteralUnlimitedNatural940);
			fUML_Tests_TestStringFunctions_ObjectFlow941.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow941", fUML_Tests_TestStringFunctions_ObjectFlow941);
				fUML_Tests_TestStringFunctions_ObjectFlow941_LiteralInteger942.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger942", fUML_Tests_TestStringFunctions_ObjectFlow941_LiteralInteger942);
			fUML_Tests_TestStringFunctions_Call_Substringminus2.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Substring)-2", fUML_Tests_TestStringFunctions_Call_Substringminus2);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_upper.reset(new InputPin());
				this->addToElementRepository("upper", fUML_Tests_TestStringFunctions_Call_Substringminus2_upper);
					fUML_Tests_TestStringFunctions_Call_Substringminus2_upper_LiteralInteger943.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger943", fUML_Tests_TestStringFunctions_Call_Substringminus2_upper_LiteralInteger943);
					fUML_Tests_TestStringFunctions_Call_Substringminus2_upper_LiteralUnlimitedNatural944.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural944", fUML_Tests_TestStringFunctions_Call_Substringminus2_upper_LiteralUnlimitedNatural944);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestStringFunctions_Call_Substringminus2_result);
					fUML_Tests_TestStringFunctions_Call_Substringminus2_result_LiteralUnlimitedNatural945.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural945", fUML_Tests_TestStringFunctions_Call_Substringminus2_result_LiteralUnlimitedNatural945);
					fUML_Tests_TestStringFunctions_Call_Substringminus2_result_LiteralInteger946.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger946", fUML_Tests_TestStringFunctions_Call_Substringminus2_result_LiteralInteger946);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_lower.reset(new InputPin());
				this->addToElementRepository("lower", fUML_Tests_TestStringFunctions_Call_Substringminus2_lower);
					fUML_Tests_TestStringFunctions_Call_Substringminus2_lower_LiteralInteger947.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger947", fUML_Tests_TestStringFunctions_Call_Substringminus2_lower_LiteralInteger947);
					fUML_Tests_TestStringFunctions_Call_Substringminus2_lower_LiteralUnlimitedNatural948.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural948", fUML_Tests_TestStringFunctions_Call_Substringminus2_lower_LiteralUnlimitedNatural948);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestStringFunctions_Call_Substringminus2_x);
					fUML_Tests_TestStringFunctions_Call_Substringminus2_x_LiteralUnlimitedNatural949.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural949", fUML_Tests_TestStringFunctions_Call_Substringminus2_x_LiteralUnlimitedNatural949);
					fUML_Tests_TestStringFunctions_Call_Substringminus2_x_LiteralInteger950.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger950", fUML_Tests_TestStringFunctions_Call_Substringminus2_x_LiteralInteger950);
			fUML_Tests_TestStringFunctions_Param_Substring1Result.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(Substring1Result)", fUML_Tests_TestStringFunctions_Param_Substring1Result);
			fUML_Tests_TestStringFunctions_ObjectFlow951.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow951", fUML_Tests_TestStringFunctions_ObjectFlow951);
				fUML_Tests_TestStringFunctions_ObjectFlow951_LiteralInteger952.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger952", fUML_Tests_TestStringFunctions_ObjectFlow951_LiteralInteger952);
			fUML_Tests_TestStringFunctions_Fork_Substringminus2.reset(new ForkNode());
			this->addToElementRepository("Fork(Substring-2)", fUML_Tests_TestStringFunctions_Fork_Substringminus2);
			fUML_Tests_TestStringFunctions_ObjectFlow953.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow953", fUML_Tests_TestStringFunctions_ObjectFlow953);
				fUML_Tests_TestStringFunctions_ObjectFlow953_LiteralInteger954.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger954", fUML_Tests_TestStringFunctions_ObjectFlow953_LiteralInteger954);
			fUML_Tests_TestStringFunctions_ObjectFlow955.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow955", fUML_Tests_TestStringFunctions_ObjectFlow955);
				fUML_Tests_TestStringFunctions_ObjectFlow955_LiteralInteger956.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger956", fUML_Tests_TestStringFunctions_ObjectFlow955_LiteralInteger956);
			fUML_Tests_TestStringFunctions_ObjectFlow957.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow957", fUML_Tests_TestStringFunctions_ObjectFlow957);
				fUML_Tests_TestStringFunctions_ObjectFlow957_LiteralInteger958.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger958", fUML_Tests_TestStringFunctions_ObjectFlow957_LiteralInteger958);
			fUML_Tests_TestStringFunctions_ObjectFlow959.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow959", fUML_Tests_TestStringFunctions_ObjectFlow959);
				fUML_Tests_TestStringFunctions_ObjectFlow959_LiteralInteger960.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger960", fUML_Tests_TestStringFunctions_ObjectFlow959_LiteralInteger960);
			fUML_Tests_TestStringFunctions_Value_1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)", fUML_Tests_TestStringFunctions_Value_1);
				fUML_Tests_TestStringFunctions_Value_1_Value_1_result.reset(new OutputPin());
				this->addToElementRepository("Value(1).result", fUML_Tests_TestStringFunctions_Value_1_Value_1_result);
					fUML_Tests_TestStringFunctions_Value_1_Value_1_result_LiteralUnlimitedNatural961.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural961", fUML_Tests_TestStringFunctions_Value_1_Value_1_result_LiteralUnlimitedNatural961);
					fUML_Tests_TestStringFunctions_Value_1_Value_1_result_LiteralInteger962.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger962", fUML_Tests_TestStringFunctions_Value_1_Value_1_result_LiteralInteger962);
				fUML_Tests_TestStringFunctions_Value_1_LiteralInteger963.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger963", fUML_Tests_TestStringFunctions_Value_1_LiteralInteger963);
			fUML_Tests_TestStringFunctions_Param_SizeResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(SizeResult)", fUML_Tests_TestStringFunctions_Param_SizeResult);
			fUML_Tests_TestStringFunctions_SizeResult.reset(new Parameter());
			this->addToElementRepository("SizeResult", fUML_Tests_TestStringFunctions_SizeResult);
				fUML_Tests_TestStringFunctions_SizeResult_LiteralUnlimitedNatural964.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural964", fUML_Tests_TestStringFunctions_SizeResult_LiteralUnlimitedNatural964);
				fUML_Tests_TestStringFunctions_SizeResult_LiteralInteger965.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger965", fUML_Tests_TestStringFunctions_SizeResult_LiteralInteger965);
			fUML_Tests_TestStringFunctions_ObjectFlow966.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow966", fUML_Tests_TestStringFunctions_ObjectFlow966);
				fUML_Tests_TestStringFunctions_ObjectFlow966_LiteralInteger967.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger967", fUML_Tests_TestStringFunctions_ObjectFlow966_LiteralInteger967);
			fUML_Tests_TestStringFunctions_ObjectFlow968.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow968", fUML_Tests_TestStringFunctions_ObjectFlow968);
				fUML_Tests_TestStringFunctions_ObjectFlow968_LiteralInteger969.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger969", fUML_Tests_TestStringFunctions_ObjectFlow968_LiteralInteger969);
			fUML_Tests_TestStringFunctions_Fork_Substringminus1.reset(new ForkNode());
			this->addToElementRepository("Fork(Substring-1)", fUML_Tests_TestStringFunctions_Fork_Substringminus1);
		fUML_Tests_TestClassReclassifier.reset(new Activity());
		this->addToElementRepository("TestClassReclassifier", fUML_Tests_TestClassReclassifier);
			fUML_Tests_TestClassReclassifier_ObjectFlow970.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow970", fUML_Tests_TestClassReclassifier_ObjectFlow970);
				fUML_Tests_TestClassReclassifier_ObjectFlow970_LiteralUnlimitedNatural971.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural971", fUML_Tests_TestClassReclassifier_ObjectFlow970_LiteralUnlimitedNatural971);
			fUML_Tests_TestClassReclassifier_ObjectFlow972.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow972", fUML_Tests_TestClassReclassifier_ObjectFlow972);
				fUML_Tests_TestClassReclassifier_ObjectFlow972_LiteralUnlimitedNatural973.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural973", fUML_Tests_TestClassReclassifier_ObjectFlow972_LiteralUnlimitedNatural973);
			fUML_Tests_TestClassReclassifier_ObjectFlow974.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow974", fUML_Tests_TestClassReclassifier_ObjectFlow974);
				fUML_Tests_TestClassReclassifier_ObjectFlow974_LiteralUnlimitedNatural975.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural975", fUML_Tests_TestClassReclassifier_ObjectFlow974_LiteralUnlimitedNatural975);
			fUML_Tests_TestClassReclassifier_ObjectFlow976.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow976", fUML_Tests_TestClassReclassifier_ObjectFlow976);
				fUML_Tests_TestClassReclassifier_ObjectFlow976_LiteralUnlimitedNatural977.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural977", fUML_Tests_TestClassReclassifier_ObjectFlow976_LiteralUnlimitedNatural977);
			fUML_Tests_TestClassReclassifier_Value_true.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(true)", fUML_Tests_TestClassReclassifier_Value_true);
				fUML_Tests_TestClassReclassifier_Value_true_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassReclassifier_Value_true_result);
					fUML_Tests_TestClassReclassifier_Value_true_result_LiteralInteger978.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger978", fUML_Tests_TestClassReclassifier_Value_true_result_LiteralInteger978);
					fUML_Tests_TestClassReclassifier_Value_true_result_LiteralUnlimitedNatural979.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural979", fUML_Tests_TestClassReclassifier_Value_true_result_LiteralUnlimitedNatural979);
				fUML_Tests_TestClassReclassifier_Value_true_LiteralBoolean980.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean980", fUML_Tests_TestClassReclassifier_Value_true_LiteralBoolean980);
			fUML_Tests_TestClassReclassifier_resultNode.reset(new ActivityParameterNode());
			this->addToElementRepository("resultNode", fUML_Tests_TestClassReclassifier_resultNode);
			fUML_Tests_TestClassReclassifier_ForkNode981.reset(new ForkNode());
			this->addToElementRepository("ForkNode981", fUML_Tests_TestClassReclassifier_ForkNode981);
			fUML_Tests_TestClassReclassifier_ObjectFlow982.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow982", fUML_Tests_TestClassReclassifier_ObjectFlow982);
				fUML_Tests_TestClassReclassifier_ObjectFlow982_LiteralUnlimitedNatural983.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural983", fUML_Tests_TestClassReclassifier_ObjectFlow982_LiteralUnlimitedNatural983);
			fUML_Tests_TestClassReclassifier_Write_y.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(y)", fUML_Tests_TestClassReclassifier_Write_y);
				fUML_Tests_TestClassReclassifier_Write_y_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassReclassifier_Write_y_value);
				fUML_Tests_TestClassReclassifier_Write_y_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassReclassifier_Write_y_object);
					fUML_Tests_TestClassReclassifier_Write_y_object_LiteralUnlimitedNatural984.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural984", fUML_Tests_TestClassReclassifier_Write_y_object_LiteralUnlimitedNatural984);
					fUML_Tests_TestClassReclassifier_Write_y_object_LiteralInteger985.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger985", fUML_Tests_TestClassReclassifier_Write_y_object_LiteralInteger985);
				fUML_Tests_TestClassReclassifier_Write_y_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassReclassifier_Write_y_result);
					fUML_Tests_TestClassReclassifier_Write_y_result_LiteralInteger986.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger986", fUML_Tests_TestClassReclassifier_Write_y_result_LiteralInteger986);
					fUML_Tests_TestClassReclassifier_Write_y_result_LiteralUnlimitedNatural987.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural987", fUML_Tests_TestClassReclassifier_Write_y_result_LiteralUnlimitedNatural987);
			fUML_Tests_TestClassReclassifier_Create_Subclass1.reset(new CreateObjectAction());
			this->addToElementRepository("Create(Subclass1)", fUML_Tests_TestClassReclassifier_Create_Subclass1);
				fUML_Tests_TestClassReclassifier_Create_Subclass1_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassReclassifier_Create_Subclass1_result);
					fUML_Tests_TestClassReclassifier_Create_Subclass1_result_LiteralUnlimitedNatural988.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural988", fUML_Tests_TestClassReclassifier_Create_Subclass1_result_LiteralUnlimitedNatural988);
					fUML_Tests_TestClassReclassifier_Create_Subclass1_result_LiteralInteger989.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger989", fUML_Tests_TestClassReclassifier_Create_Subclass1_result_LiteralInteger989);
			fUML_Tests_TestClassReclassifier_Reclassify_Subclass2.reset(new ReclassifyObjectAction());
			this->addToElementRepository("Reclassify(Subclass2)", fUML_Tests_TestClassReclassifier_Reclassify_Subclass2);
				fUML_Tests_TestClassReclassifier_Reclassify_Subclass2_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassReclassifier_Reclassify_Subclass2_object);
			fUML_Tests_TestClassReclassifier_ObjectFlow990.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow990", fUML_Tests_TestClassReclassifier_ObjectFlow990);
				fUML_Tests_TestClassReclassifier_ObjectFlow990_LiteralUnlimitedNatural991.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural991", fUML_Tests_TestClassReclassifier_ObjectFlow990_LiteralUnlimitedNatural991);
			fUML_Tests_TestClassReclassifier_ObjectFlow992.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow992", fUML_Tests_TestClassReclassifier_ObjectFlow992);
				fUML_Tests_TestClassReclassifier_ObjectFlow992_LiteralUnlimitedNatural993.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural993", fUML_Tests_TestClassReclassifier_ObjectFlow992_LiteralUnlimitedNatural993);
			fUML_Tests_TestClassReclassifier_Value_2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2)", fUML_Tests_TestClassReclassifier_Value_2);
				fUML_Tests_TestClassReclassifier_Value_2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassReclassifier_Value_2_result);
					fUML_Tests_TestClassReclassifier_Value_2_result_LiteralUnlimitedNatural994.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural994", fUML_Tests_TestClassReclassifier_Value_2_result_LiteralUnlimitedNatural994);
					fUML_Tests_TestClassReclassifier_Value_2_result_LiteralInteger995.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger995", fUML_Tests_TestClassReclassifier_Value_2_result_LiteralInteger995);
				fUML_Tests_TestClassReclassifier_Value_2_LiteralInteger996.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger996", fUML_Tests_TestClassReclassifier_Value_2_LiteralInteger996);
			fUML_Tests_TestClassReclassifier_Write_a.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(a)", fUML_Tests_TestClassReclassifier_Write_a);
				fUML_Tests_TestClassReclassifier_Write_a_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassReclassifier_Write_a_object);
					fUML_Tests_TestClassReclassifier_Write_a_object_LiteralInteger997.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger997", fUML_Tests_TestClassReclassifier_Write_a_object_LiteralInteger997);
					fUML_Tests_TestClassReclassifier_Write_a_object_LiteralUnlimitedNatural998.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural998", fUML_Tests_TestClassReclassifier_Write_a_object_LiteralUnlimitedNatural998);
				fUML_Tests_TestClassReclassifier_Write_a_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassReclassifier_Write_a_result);
					fUML_Tests_TestClassReclassifier_Write_a_result_LiteralUnlimitedNatural999.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural999", fUML_Tests_TestClassReclassifier_Write_a_result_LiteralUnlimitedNatural999);
					fUML_Tests_TestClassReclassifier_Write_a_result_LiteralInteger1000.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1000", fUML_Tests_TestClassReclassifier_Write_a_result_LiteralInteger1000);
				fUML_Tests_TestClassReclassifier_Write_a_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassReclassifier_Write_a_value);
					fUML_Tests_TestClassReclassifier_Write_a_value_LiteralUnlimitedNatural1001.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1001", fUML_Tests_TestClassReclassifier_Write_a_value_LiteralUnlimitedNatural1001);
					fUML_Tests_TestClassReclassifier_Write_a_value_LiteralInteger1002.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1002", fUML_Tests_TestClassReclassifier_Write_a_value_LiteralInteger1002);
			fUML_Tests_TestClassReclassifier_Value_1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)", fUML_Tests_TestClassReclassifier_Value_1);
				fUML_Tests_TestClassReclassifier_Value_1_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassReclassifier_Value_1_result);
					fUML_Tests_TestClassReclassifier_Value_1_result_LiteralUnlimitedNatural1003.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1003", fUML_Tests_TestClassReclassifier_Value_1_result_LiteralUnlimitedNatural1003);
					fUML_Tests_TestClassReclassifier_Value_1_result_LiteralInteger1004.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1004", fUML_Tests_TestClassReclassifier_Value_1_result_LiteralInteger1004);
				fUML_Tests_TestClassReclassifier_Value_1_LiteralInteger1005.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1005", fUML_Tests_TestClassReclassifier_Value_1_LiteralInteger1005);
			fUML_Tests_TestClassReclassifier_ObjectFlow1006.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1006", fUML_Tests_TestClassReclassifier_ObjectFlow1006);
				fUML_Tests_TestClassReclassifier_ObjectFlow1006_LiteralUnlimitedNatural1007.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1007", fUML_Tests_TestClassReclassifier_ObjectFlow1006_LiteralUnlimitedNatural1007);
			fUML_Tests_TestClassReclassifier_ObjectFlow1008.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1008", fUML_Tests_TestClassReclassifier_ObjectFlow1008);
				fUML_Tests_TestClassReclassifier_ObjectFlow1008_LiteralUnlimitedNatural1009.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1009", fUML_Tests_TestClassReclassifier_ObjectFlow1008_LiteralUnlimitedNatural1009);
			fUML_Tests_TestClassReclassifier_result.reset(new Parameter());
			this->addToElementRepository("result", fUML_Tests_TestClassReclassifier_result);
				fUML_Tests_TestClassReclassifier_result_LiteralUnlimitedNatural1010.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1010", fUML_Tests_TestClassReclassifier_result_LiteralUnlimitedNatural1010);
				fUML_Tests_TestClassReclassifier_result_LiteralInteger1011.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1011", fUML_Tests_TestClassReclassifier_result_LiteralInteger1011);
			fUML_Tests_TestClassReclassifier_Write_x.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(x)", fUML_Tests_TestClassReclassifier_Write_x);
				fUML_Tests_TestClassReclassifier_Write_x_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassReclassifier_Write_x_object);
					fUML_Tests_TestClassReclassifier_Write_x_object_LiteralInteger1012.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1012", fUML_Tests_TestClassReclassifier_Write_x_object_LiteralInteger1012);
					fUML_Tests_TestClassReclassifier_Write_x_object_LiteralUnlimitedNatural1013.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1013", fUML_Tests_TestClassReclassifier_Write_x_object_LiteralUnlimitedNatural1013);
				fUML_Tests_TestClassReclassifier_Write_x_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassReclassifier_Write_x_result);
					fUML_Tests_TestClassReclassifier_Write_x_result_LiteralUnlimitedNatural1014.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1014", fUML_Tests_TestClassReclassifier_Write_x_result_LiteralUnlimitedNatural1014);
					fUML_Tests_TestClassReclassifier_Write_x_result_LiteralInteger1015.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1015", fUML_Tests_TestClassReclassifier_Write_x_result_LiteralInteger1015);
				fUML_Tests_TestClassReclassifier_Write_x_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassReclassifier_Write_x_value);
					fUML_Tests_TestClassReclassifier_Write_x_value_LiteralInteger1016.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1016", fUML_Tests_TestClassReclassifier_Write_x_value_LiteralInteger1016);
					fUML_Tests_TestClassReclassifier_Write_x_value_LiteralUnlimitedNatural1017.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1017", fUML_Tests_TestClassReclassifier_Write_x_value_LiteralUnlimitedNatural1017);
		fUML_Tests_TestAssociation.reset(new Association());
		this->addToElementRepository("TestAssociation", fUML_Tests_TestAssociation);
			fUML_Tests_TestAssociation_end1.reset(new Property());
			this->addToElementRepository("end1", fUML_Tests_TestAssociation_end1);
				fUML_Tests_TestAssociation_end1_LiteralUnlimitedNatural1018.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1018", fUML_Tests_TestAssociation_end1_LiteralUnlimitedNatural1018);
				fUML_Tests_TestAssociation_end1_LiteralInteger1019.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1019", fUML_Tests_TestAssociation_end1_LiteralInteger1019);
			fUML_Tests_TestAssociation_end2.reset(new Property());
			this->addToElementRepository("end2", fUML_Tests_TestAssociation_end2);
				fUML_Tests_TestAssociation_end2_LiteralInteger1020.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1020", fUML_Tests_TestAssociation_end2_LiteralInteger1020);
				fUML_Tests_TestAssociation_end2_LiteralUnlimitedNatural1021.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1021", fUML_Tests_TestAssociation_end2_LiteralUnlimitedNatural1021);
		fUML_Tests_TestClassUnmarshaller.reset(new Activity());
		this->addToElementRepository("TestClassUnmarshaller", fUML_Tests_TestClassUnmarshaller);
			fUML_Tests_TestClassUnmarshaller_Write_x.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(x)", fUML_Tests_TestClassUnmarshaller_Write_x);
				fUML_Tests_TestClassUnmarshaller_Write_x_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassUnmarshaller_Write_x_object);
					fUML_Tests_TestClassUnmarshaller_Write_x_object_LiteralUnlimitedNatural1022.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1022", fUML_Tests_TestClassUnmarshaller_Write_x_object_LiteralUnlimitedNatural1022);
					fUML_Tests_TestClassUnmarshaller_Write_x_object_LiteralInteger1023.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1023", fUML_Tests_TestClassUnmarshaller_Write_x_object_LiteralInteger1023);
				fUML_Tests_TestClassUnmarshaller_Write_x_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassUnmarshaller_Write_x_result);
					fUML_Tests_TestClassUnmarshaller_Write_x_result_LiteralUnlimitedNatural1024.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1024", fUML_Tests_TestClassUnmarshaller_Write_x_result_LiteralUnlimitedNatural1024);
					fUML_Tests_TestClassUnmarshaller_Write_x_result_LiteralInteger1025.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1025", fUML_Tests_TestClassUnmarshaller_Write_x_result_LiteralInteger1025);
				fUML_Tests_TestClassUnmarshaller_Write_x_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassUnmarshaller_Write_x_value);
					fUML_Tests_TestClassUnmarshaller_Write_x_value_LiteralUnlimitedNatural1026.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1026", fUML_Tests_TestClassUnmarshaller_Write_x_value_LiteralUnlimitedNatural1026);
					fUML_Tests_TestClassUnmarshaller_Write_x_value_LiteralInteger1027.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1027", fUML_Tests_TestClassUnmarshaller_Write_x_value_LiteralInteger1027);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1028.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1028", fUML_Tests_TestClassUnmarshaller_ObjectFlow1028);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow1028_LiteralUnlimitedNatural1029.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1029", fUML_Tests_TestClassUnmarshaller_ObjectFlow1028_LiteralUnlimitedNatural1029);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1030.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1030", fUML_Tests_TestClassUnmarshaller_ObjectFlow1030);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow1030_LiteralUnlimitedNatural1031.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1031", fUML_Tests_TestClassUnmarshaller_ObjectFlow1030_LiteralUnlimitedNatural1031);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1032.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1032", fUML_Tests_TestClassUnmarshaller_ObjectFlow1032);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow1032_LiteralUnlimitedNatural1033.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1033", fUML_Tests_TestClassUnmarshaller_ObjectFlow1032_LiteralUnlimitedNatural1033);
			fUML_Tests_TestClassUnmarshaller_Value_0.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(0)", fUML_Tests_TestClassUnmarshaller_Value_0);
				fUML_Tests_TestClassUnmarshaller_Value_0_LiteralInteger1034.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1034", fUML_Tests_TestClassUnmarshaller_Value_0_LiteralInteger1034);
				fUML_Tests_TestClassUnmarshaller_Value_0_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassUnmarshaller_Value_0_result);
					fUML_Tests_TestClassUnmarshaller_Value_0_result_LiteralUnlimitedNatural1035.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1035", fUML_Tests_TestClassUnmarshaller_Value_0_result_LiteralUnlimitedNatural1035);
					fUML_Tests_TestClassUnmarshaller_Value_0_result_LiteralInteger1036.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1036", fUML_Tests_TestClassUnmarshaller_Value_0_result_LiteralInteger1036);
			fUML_Tests_TestClassUnmarshaller_Create_Subclass1.reset(new CreateObjectAction());
			this->addToElementRepository("Create(Subclass1)", fUML_Tests_TestClassUnmarshaller_Create_Subclass1);
				fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result);
					fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result_LiteralUnlimitedNatural1037.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1037", fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result_LiteralUnlimitedNatural1037);
					fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result_LiteralInteger1038.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1038", fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result_LiteralInteger1038);
			fUML_Tests_TestClassUnmarshaller_Output_y.reset(new ActivityParameterNode());
			this->addToElementRepository("Output(y)", fUML_Tests_TestClassUnmarshaller_Output_y);
			fUML_Tests_TestClassUnmarshaller_Value_true.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(true)", fUML_Tests_TestClassUnmarshaller_Value_true);
				fUML_Tests_TestClassUnmarshaller_Value_true_LiteralBoolean1039.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1039", fUML_Tests_TestClassUnmarshaller_Value_true_LiteralBoolean1039);
				fUML_Tests_TestClassUnmarshaller_Value_true_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassUnmarshaller_Value_true_result);
					fUML_Tests_TestClassUnmarshaller_Value_true_result_LiteralUnlimitedNatural1040.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1040", fUML_Tests_TestClassUnmarshaller_Value_true_result_LiteralUnlimitedNatural1040);
					fUML_Tests_TestClassUnmarshaller_Value_true_result_LiteralInteger1041.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1041", fUML_Tests_TestClassUnmarshaller_Value_true_result_LiteralInteger1041);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1042.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1042", fUML_Tests_TestClassUnmarshaller_ObjectFlow1042);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow1042_LiteralUnlimitedNatural1043.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1043", fUML_Tests_TestClassUnmarshaller_ObjectFlow1042_LiteralUnlimitedNatural1043);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1044.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1044", fUML_Tests_TestClassUnmarshaller_ObjectFlow1044);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow1044_LiteralUnlimitedNatural1045.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1045", fUML_Tests_TestClassUnmarshaller_ObjectFlow1044_LiteralUnlimitedNatural1045);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1046.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1046", fUML_Tests_TestClassUnmarshaller_ObjectFlow1046);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow1046_LiteralUnlimitedNatural1047.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1047", fUML_Tests_TestClassUnmarshaller_ObjectFlow1046_LiteralUnlimitedNatural1047);
			fUML_Tests_TestClassUnmarshaller_Write_y_1.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(y[1])", fUML_Tests_TestClassUnmarshaller_Write_y_1);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassUnmarshaller_Write_y_1_object);
					fUML_Tests_TestClassUnmarshaller_Write_y_1_object_LiteralInteger1048.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1048", fUML_Tests_TestClassUnmarshaller_Write_y_1_object_LiteralInteger1048);
					fUML_Tests_TestClassUnmarshaller_Write_y_1_object_LiteralUnlimitedNatural1049.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1049", fUML_Tests_TestClassUnmarshaller_Write_y_1_object_LiteralUnlimitedNatural1049);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_insertAt.reset(new InputPin());
				this->addToElementRepository("insertAt", fUML_Tests_TestClassUnmarshaller_Write_y_1_insertAt);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassUnmarshaller_Write_y_1_result);
					fUML_Tests_TestClassUnmarshaller_Write_y_1_result_LiteralUnlimitedNatural1050.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1050", fUML_Tests_TestClassUnmarshaller_Write_y_1_result_LiteralUnlimitedNatural1050);
					fUML_Tests_TestClassUnmarshaller_Write_y_1_result_LiteralInteger1051.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1051", fUML_Tests_TestClassUnmarshaller_Write_y_1_result_LiteralInteger1051);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassUnmarshaller_Write_y_1_value);
					fUML_Tests_TestClassUnmarshaller_Write_y_1_value_LiteralInteger1052.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1052", fUML_Tests_TestClassUnmarshaller_Write_y_1_value_LiteralInteger1052);
					fUML_Tests_TestClassUnmarshaller_Write_y_1_value_LiteralUnlimitedNatural1053.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1053", fUML_Tests_TestClassUnmarshaller_Write_y_1_value_LiteralUnlimitedNatural1053);
			fUML_Tests_TestClassUnmarshaller_ForkNode1054.reset(new ForkNode());
			this->addToElementRepository("ForkNode1054", fUML_Tests_TestClassUnmarshaller_ForkNode1054);
			fUML_Tests_TestClassUnmarshaller_x.reset(new Parameter());
			this->addToElementRepository("x", fUML_Tests_TestClassUnmarshaller_x);
				fUML_Tests_TestClassUnmarshaller_x_LiteralInteger1055.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1055", fUML_Tests_TestClassUnmarshaller_x_LiteralInteger1055);
				fUML_Tests_TestClassUnmarshaller_x_LiteralUnlimitedNatural1056.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1056", fUML_Tests_TestClassUnmarshaller_x_LiteralUnlimitedNatural1056);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1057.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1057", fUML_Tests_TestClassUnmarshaller_ObjectFlow1057);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow1057_LiteralUnlimitedNatural1058.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1058", fUML_Tests_TestClassUnmarshaller_ObjectFlow1057_LiteralUnlimitedNatural1058);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1059.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1059", fUML_Tests_TestClassUnmarshaller_ObjectFlow1059);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow1059_LiteralUnlimitedNatural1060.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1060", fUML_Tests_TestClassUnmarshaller_ObjectFlow1059_LiteralUnlimitedNatural1060);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1061.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1061", fUML_Tests_TestClassUnmarshaller_ObjectFlow1061);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow1061_LiteralUnlimitedNatural1062.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1062", fUML_Tests_TestClassUnmarshaller_ObjectFlow1061_LiteralUnlimitedNatural1062);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1063.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1063", fUML_Tests_TestClassUnmarshaller_ObjectFlow1063);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow1063_LiteralUnlimitedNatural1064.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1064", fUML_Tests_TestClassUnmarshaller_ObjectFlow1063_LiteralUnlimitedNatural1064);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1065.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1065", fUML_Tests_TestClassUnmarshaller_ObjectFlow1065);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow1065_LiteralUnlimitedNatural1066.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1066", fUML_Tests_TestClassUnmarshaller_ObjectFlow1065_LiteralUnlimitedNatural1066);
			fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass.reset(new UnmarshallAction());
			this->addToElementRepository("Unmarshall(TestClass)", fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y.reset(new OutputPin());
				this->addToElementRepository("result(y)", fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y);
					fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y_LiteralInteger1067.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1067", fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y_LiteralInteger1067);
					fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y_LiteralUnlimitedNatural1068.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1068", fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y_LiteralUnlimitedNatural1068);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object);
					fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object_LiteralInteger1069.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1069", fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object_LiteralInteger1069);
					fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object_LiteralUnlimitedNatural1070.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1070", fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object_LiteralUnlimitedNatural1070);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x.reset(new OutputPin());
				this->addToElementRepository("result(x)", fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x);
					fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x_LiteralUnlimitedNatural1071.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1071", fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x_LiteralUnlimitedNatural1071);
					fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x_LiteralInteger1072.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1072", fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x_LiteralInteger1072);
			fUML_Tests_TestClassUnmarshaller_Value_1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)", fUML_Tests_TestClassUnmarshaller_Value_1);
				fUML_Tests_TestClassUnmarshaller_Value_1_LiteralInteger1073.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1073", fUML_Tests_TestClassUnmarshaller_Value_1_LiteralInteger1073);
				fUML_Tests_TestClassUnmarshaller_Value_1_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassUnmarshaller_Value_1_result);
					fUML_Tests_TestClassUnmarshaller_Value_1_result_LiteralInteger1074.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1074", fUML_Tests_TestClassUnmarshaller_Value_1_result_LiteralInteger1074);
					fUML_Tests_TestClassUnmarshaller_Value_1_result_LiteralUnlimitedNatural1075.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1075", fUML_Tests_TestClassUnmarshaller_Value_1_result_LiteralUnlimitedNatural1075);
			fUML_Tests_TestClassUnmarshaller_y.reset(new Parameter());
			this->addToElementRepository("y", fUML_Tests_TestClassUnmarshaller_y);
				fUML_Tests_TestClassUnmarshaller_y_LiteralInteger1076.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1076", fUML_Tests_TestClassUnmarshaller_y_LiteralInteger1076);
				fUML_Tests_TestClassUnmarshaller_y_LiteralUnlimitedNatural1077.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1077", fUML_Tests_TestClassUnmarshaller_y_LiteralUnlimitedNatural1077);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1078.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1078", fUML_Tests_TestClassUnmarshaller_ObjectFlow1078);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow1078_LiteralUnlimitedNatural1079.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1079", fUML_Tests_TestClassUnmarshaller_ObjectFlow1078_LiteralUnlimitedNatural1079);
			fUML_Tests_TestClassUnmarshaller_Output_x.reset(new ActivityParameterNode());
			this->addToElementRepository("Output(x)", fUML_Tests_TestClassUnmarshaller_Output_x);
			fUML_Tests_TestClassUnmarshaller_Value_times.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(*)", fUML_Tests_TestClassUnmarshaller_Value_times);
				fUML_Tests_TestClassUnmarshaller_Value_times_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassUnmarshaller_Value_times_result);
				fUML_Tests_TestClassUnmarshaller_Value_times_LiteralUnlimitedNatural1080.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1080", fUML_Tests_TestClassUnmarshaller_Value_times_LiteralUnlimitedNatural1080);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1081.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1081", fUML_Tests_TestClassUnmarshaller_ObjectFlow1081);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow1081_LiteralUnlimitedNatural1082.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1082", fUML_Tests_TestClassUnmarshaller_ObjectFlow1081_LiteralUnlimitedNatural1082);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1083.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1083", fUML_Tests_TestClassUnmarshaller_ObjectFlow1083);
				fUML_Tests_TestClassUnmarshaller_ObjectFlow1083_LiteralUnlimitedNatural1084.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1084", fUML_Tests_TestClassUnmarshaller_ObjectFlow1083_LiteralUnlimitedNatural1084);
			fUML_Tests_TestClassUnmarshaller_Value_2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2)", fUML_Tests_TestClassUnmarshaller_Value_2);
				fUML_Tests_TestClassUnmarshaller_Value_2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassUnmarshaller_Value_2_result);
					fUML_Tests_TestClassUnmarshaller_Value_2_result_LiteralInteger1085.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1085", fUML_Tests_TestClassUnmarshaller_Value_2_result_LiteralInteger1085);
					fUML_Tests_TestClassUnmarshaller_Value_2_result_LiteralUnlimitedNatural1086.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1086", fUML_Tests_TestClassUnmarshaller_Value_2_result_LiteralUnlimitedNatural1086);
				fUML_Tests_TestClassUnmarshaller_Value_2_LiteralInteger1087.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1087", fUML_Tests_TestClassUnmarshaller_Value_2_LiteralInteger1087);
			fUML_Tests_TestClassUnmarshaller_Write_y_2.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(y[2])", fUML_Tests_TestClassUnmarshaller_Write_y_2);
				fUML_Tests_TestClassUnmarshaller_Write_y_2_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassUnmarshaller_Write_y_2_result);
				fUML_Tests_TestClassUnmarshaller_Write_y_2_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassUnmarshaller_Write_y_2_value);
					fUML_Tests_TestClassUnmarshaller_Write_y_2_value_LiteralInteger1088.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1088", fUML_Tests_TestClassUnmarshaller_Write_y_2_value_LiteralInteger1088);
					fUML_Tests_TestClassUnmarshaller_Write_y_2_value_LiteralUnlimitedNatural1089.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1089", fUML_Tests_TestClassUnmarshaller_Write_y_2_value_LiteralUnlimitedNatural1089);
				fUML_Tests_TestClassUnmarshaller_Write_y_2_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassUnmarshaller_Write_y_2_object);
					fUML_Tests_TestClassUnmarshaller_Write_y_2_object_LiteralUnlimitedNatural1090.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1090", fUML_Tests_TestClassUnmarshaller_Write_y_2_object_LiteralUnlimitedNatural1090);
					fUML_Tests_TestClassUnmarshaller_Write_y_2_object_LiteralInteger1091.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1091", fUML_Tests_TestClassUnmarshaller_Write_y_2_object_LiteralInteger1091);
				fUML_Tests_TestClassUnmarshaller_Write_y_2_insertAt.reset(new InputPin());
				this->addToElementRepository("insertAt", fUML_Tests_TestClassUnmarshaller_Write_y_2_insertAt);
			fUML_Tests_TestClassUnmarshaller_Write_a.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(a)", fUML_Tests_TestClassUnmarshaller_Write_a);
				fUML_Tests_TestClassUnmarshaller_Write_a_value.reset(new InputPin());
				this->addToElementRepository("value", fUML_Tests_TestClassUnmarshaller_Write_a_value);
					fUML_Tests_TestClassUnmarshaller_Write_a_value_LiteralInteger1092.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1092", fUML_Tests_TestClassUnmarshaller_Write_a_value_LiteralInteger1092);
					fUML_Tests_TestClassUnmarshaller_Write_a_value_LiteralUnlimitedNatural1093.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1093", fUML_Tests_TestClassUnmarshaller_Write_a_value_LiteralUnlimitedNatural1093);
				fUML_Tests_TestClassUnmarshaller_Write_a_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestClassUnmarshaller_Write_a_result);
				fUML_Tests_TestClassUnmarshaller_Write_a_object.reset(new InputPin());
				this->addToElementRepository("object", fUML_Tests_TestClassUnmarshaller_Write_a_object);
					fUML_Tests_TestClassUnmarshaller_Write_a_object_LiteralInteger1094.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1094", fUML_Tests_TestClassUnmarshaller_Write_a_object_LiteralInteger1094);
					fUML_Tests_TestClassUnmarshaller_Write_a_object_LiteralUnlimitedNatural1095.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1095", fUML_Tests_TestClassUnmarshaller_Write_a_object_LiteralUnlimitedNatural1095);
		fUML_Tests_GenerateBooleanTestData.reset(new Activity());
		this->addToElementRepository("GenerateBooleanTestData", fUML_Tests_GenerateBooleanTestData);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(false)-2", fUML_Tests_GenerateBooleanTestData_Value_falseminus2);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus2_LiteralBoolean1096.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1096", fUML_Tests_GenerateBooleanTestData_Value_falseminus2_LiteralBoolean1096);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus2_Value_falseminus2_result.reset(new OutputPin());
				this->addToElementRepository("Value(false)-2.result", fUML_Tests_GenerateBooleanTestData_Value_falseminus2_Value_falseminus2_result);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(true)-2", fUML_Tests_GenerateBooleanTestData_Value_trueminus2);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus2_Value_trueminus2_result.reset(new OutputPin());
				this->addToElementRepository("Value(true)-2.result", fUML_Tests_GenerateBooleanTestData_Value_trueminus2_Value_trueminus2_result);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus2_LiteralBoolean1097.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1097", fUML_Tests_GenerateBooleanTestData_Value_trueminus2_LiteralBoolean1097);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1098.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1098", fUML_Tests_GenerateBooleanTestData_ObjectFlow1098);
				fUML_Tests_GenerateBooleanTestData_ObjectFlow1098_LiteralInteger1099.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1099", fUML_Tests_GenerateBooleanTestData_ObjectFlow1098_LiteralInteger1099);
			fUML_Tests_GenerateBooleanTestData_Param_argumentData2.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(argumentData2)", fUML_Tests_GenerateBooleanTestData_Param_argumentData2);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1100.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1100", fUML_Tests_GenerateBooleanTestData_ObjectFlow1100);
				fUML_Tests_GenerateBooleanTestData_ObjectFlow1100_LiteralInteger1101.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1101", fUML_Tests_GenerateBooleanTestData_ObjectFlow1100_LiteralInteger1101);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1102.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1102", fUML_Tests_GenerateBooleanTestData_ObjectFlow1102);
				fUML_Tests_GenerateBooleanTestData_ObjectFlow1102_LiteralInteger1103.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1103", fUML_Tests_GenerateBooleanTestData_ObjectFlow1102_LiteralInteger1103);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus4.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(false)-4", fUML_Tests_GenerateBooleanTestData_Value_falseminus4);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus4_Value_falseminus4_result.reset(new OutputPin());
				this->addToElementRepository("Value(false)-4.result", fUML_Tests_GenerateBooleanTestData_Value_falseminus4_Value_falseminus4_result);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus4_LiteralBoolean1104.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1104", fUML_Tests_GenerateBooleanTestData_Value_falseminus4_LiteralBoolean1104);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1105.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1105", fUML_Tests_GenerateBooleanTestData_ObjectFlow1105);
				fUML_Tests_GenerateBooleanTestData_ObjectFlow1105_LiteralInteger1106.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1106", fUML_Tests_GenerateBooleanTestData_ObjectFlow1105_LiteralInteger1106);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1107.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1107", fUML_Tests_GenerateBooleanTestData_ControlFlow1107);
				fUML_Tests_GenerateBooleanTestData_ControlFlow1107_LiteralInteger1108.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1108", fUML_Tests_GenerateBooleanTestData_ControlFlow1107_LiteralInteger1108);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(false)-1", fUML_Tests_GenerateBooleanTestData_Value_falseminus1);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus1_Value_falseminus1_result.reset(new OutputPin());
				this->addToElementRepository("Value(false)-1.result", fUML_Tests_GenerateBooleanTestData_Value_falseminus1_Value_falseminus1_result);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus1_LiteralBoolean1109.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1109", fUML_Tests_GenerateBooleanTestData_Value_falseminus1_LiteralBoolean1109);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1110.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1110", fUML_Tests_GenerateBooleanTestData_ObjectFlow1110);
				fUML_Tests_GenerateBooleanTestData_ObjectFlow1110_LiteralInteger1111.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1111", fUML_Tests_GenerateBooleanTestData_ObjectFlow1110_LiteralInteger1111);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus3.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(true)-3", fUML_Tests_GenerateBooleanTestData_Value_trueminus3);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus3_LiteralBoolean1112.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1112", fUML_Tests_GenerateBooleanTestData_Value_trueminus3_LiteralBoolean1112);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus3_Value_trueminus3_result.reset(new OutputPin());
				this->addToElementRepository("Value(true)-3.result", fUML_Tests_GenerateBooleanTestData_Value_trueminus3_Value_trueminus3_result);
			fUML_Tests_GenerateBooleanTestData_Param_argumentData1.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(argumentData1)", fUML_Tests_GenerateBooleanTestData_Param_argumentData1);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1113.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1113", fUML_Tests_GenerateBooleanTestData_ControlFlow1113);
				fUML_Tests_GenerateBooleanTestData_ControlFlow1113_LiteralInteger1114.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1114", fUML_Tests_GenerateBooleanTestData_ControlFlow1113_LiteralInteger1114);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1115.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1115", fUML_Tests_GenerateBooleanTestData_ObjectFlow1115);
				fUML_Tests_GenerateBooleanTestData_ObjectFlow1115_LiteralInteger1116.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1116", fUML_Tests_GenerateBooleanTestData_ObjectFlow1115_LiteralInteger1116);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1117.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1117", fUML_Tests_GenerateBooleanTestData_ControlFlow1117);
				fUML_Tests_GenerateBooleanTestData_ControlFlow1117_LiteralInteger1118.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1118", fUML_Tests_GenerateBooleanTestData_ControlFlow1117_LiteralInteger1118);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus3.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(false)-3", fUML_Tests_GenerateBooleanTestData_Value_falseminus3);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus3_LiteralBoolean1119.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1119", fUML_Tests_GenerateBooleanTestData_Value_falseminus3_LiteralBoolean1119);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus3_Value_falseminus3_result.reset(new OutputPin());
				this->addToElementRepository("Value(false)-3.result", fUML_Tests_GenerateBooleanTestData_Value_falseminus3_Value_falseminus3_result);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1120.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1120", fUML_Tests_GenerateBooleanTestData_ObjectFlow1120);
				fUML_Tests_GenerateBooleanTestData_ObjectFlow1120_LiteralInteger1121.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1121", fUML_Tests_GenerateBooleanTestData_ObjectFlow1120_LiteralInteger1121);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1122.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1122", fUML_Tests_GenerateBooleanTestData_ControlFlow1122);
				fUML_Tests_GenerateBooleanTestData_ControlFlow1122_LiteralInteger1123.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1123", fUML_Tests_GenerateBooleanTestData_ControlFlow1122_LiteralInteger1123);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1124.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1124", fUML_Tests_GenerateBooleanTestData_ObjectFlow1124);
				fUML_Tests_GenerateBooleanTestData_ObjectFlow1124_LiteralInteger1125.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1125", fUML_Tests_GenerateBooleanTestData_ObjectFlow1124_LiteralInteger1125);
			fUML_Tests_GenerateBooleanTestData_argumentData2.reset(new Parameter());
			this->addToElementRepository("argumentData2", fUML_Tests_GenerateBooleanTestData_argumentData2);
				fUML_Tests_GenerateBooleanTestData_argumentData2_LiteralUnlimitedNatural1126.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1126", fUML_Tests_GenerateBooleanTestData_argumentData2_LiteralUnlimitedNatural1126);
				fUML_Tests_GenerateBooleanTestData_argumentData2_LiteralInteger1127.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1127", fUML_Tests_GenerateBooleanTestData_argumentData2_LiteralInteger1127);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1128.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1128", fUML_Tests_GenerateBooleanTestData_ControlFlow1128);
				fUML_Tests_GenerateBooleanTestData_ControlFlow1128_LiteralInteger1129.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1129", fUML_Tests_GenerateBooleanTestData_ControlFlow1128_LiteralInteger1129);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1130.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1130", fUML_Tests_GenerateBooleanTestData_ControlFlow1130);
				fUML_Tests_GenerateBooleanTestData_ControlFlow1130_LiteralInteger1131.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1131", fUML_Tests_GenerateBooleanTestData_ControlFlow1130_LiteralInteger1131);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(true)-1", fUML_Tests_GenerateBooleanTestData_Value_trueminus1);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus1_Value_trueminus1_result.reset(new OutputPin());
				this->addToElementRepository("Value(true)-1.result", fUML_Tests_GenerateBooleanTestData_Value_trueminus1_Value_trueminus1_result);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus1_LiteralBoolean1132.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1132", fUML_Tests_GenerateBooleanTestData_Value_trueminus1_LiteralBoolean1132);
			fUML_Tests_GenerateBooleanTestData_argumentData1.reset(new Parameter());
			this->addToElementRepository("argumentData1", fUML_Tests_GenerateBooleanTestData_argumentData1);
				fUML_Tests_GenerateBooleanTestData_argumentData1_LiteralUnlimitedNatural1133.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1133", fUML_Tests_GenerateBooleanTestData_argumentData1_LiteralUnlimitedNatural1133);
				fUML_Tests_GenerateBooleanTestData_argumentData1_LiteralInteger1134.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1134", fUML_Tests_GenerateBooleanTestData_argumentData1_LiteralInteger1134);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus4.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(true)-4", fUML_Tests_GenerateBooleanTestData_Value_trueminus4);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus4_LiteralBoolean1135.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1135", fUML_Tests_GenerateBooleanTestData_Value_trueminus4_LiteralBoolean1135);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus4_Value_trueminus4_result.reset(new OutputPin());
				this->addToElementRepository("Value(true)-4.result", fUML_Tests_GenerateBooleanTestData_Value_trueminus4_Value_trueminus4_result);
		fUML_Tests_SignalEvent1136.reset(new SignalEvent());
		this->addToElementRepository("SignalEvent1136", fUML_Tests_SignalEvent1136);
		fUML_Tests_TestGeneralizationAssembly.reset(new Activity());
		this->addToElementRepository("TestGeneralizationAssembly", fUML_Tests_TestGeneralizationAssembly);
			fUML_Tests_TestGeneralizationAssembly_Create_Specific.reset(new CreateObjectAction());
			this->addToElementRepository("Create(Specific)", fUML_Tests_TestGeneralizationAssembly_Create_Specific);
				fUML_Tests_TestGeneralizationAssembly_Create_Specific_CreateObjectAction_result.reset(new OutputPin());
				this->addToElementRepository("CreateObjectAction.result", fUML_Tests_TestGeneralizationAssembly_Create_Specific_CreateObjectAction_result);
			fUML_Tests_TestGeneralizationAssembly_ActivityParameterNode.reset(new ActivityParameterNode());
			this->addToElementRepository("ActivityParameterNode", fUML_Tests_TestGeneralizationAssembly_ActivityParameterNode);
			fUML_Tests_TestGeneralizationAssembly_result.reset(new Parameter());
			this->addToElementRepository("result", fUML_Tests_TestGeneralizationAssembly_result);
			fUML_Tests_TestGeneralizationAssembly_ObjectFlow1137.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1137", fUML_Tests_TestGeneralizationAssembly_ObjectFlow1137);
		fUML_Tests_TestRealFunctions.reset(new Activity());
		this->addToElementRepository("TestRealFunctions", fUML_Tests_TestRealFunctions);
			fUML_Tests_TestRealFunctions_ObjectFlow1138.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1138", fUML_Tests_TestRealFunctions_ObjectFlow1138);
				fUML_Tests_TestRealFunctions_ObjectFlow1138_LiteralInteger1139.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1139", fUML_Tests_TestRealFunctions_ObjectFlow1138_LiteralInteger1139);
			fUML_Tests_TestRealFunctions_ControlFlow1140.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1140", fUML_Tests_TestRealFunctions_ControlFlow1140);
				fUML_Tests_TestRealFunctions_ControlFlow1140_LiteralUnlimitedNatural1141.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1141", fUML_Tests_TestRealFunctions_ControlFlow1140_LiteralUnlimitedNatural1141);
			fUML_Tests_TestRealFunctions_Param_MaxResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(MaxResult)", fUML_Tests_TestRealFunctions_Param_MaxResult);
			fUML_Tests_TestRealFunctions_Call_Abs.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Abs)", fUML_Tests_TestRealFunctions_Call_Abs);
				fUML_Tests_TestRealFunctions_Call_Abs_Abs_x.reset(new InputPin());
				this->addToElementRepository("Abs.x", fUML_Tests_TestRealFunctions_Call_Abs_Abs_x);
					fUML_Tests_TestRealFunctions_Call_Abs_Abs_x_LiteralUnlimitedNatural1142.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1142", fUML_Tests_TestRealFunctions_Call_Abs_Abs_x_LiteralUnlimitedNatural1142);
					fUML_Tests_TestRealFunctions_Call_Abs_Abs_x_LiteralInteger1143.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1143", fUML_Tests_TestRealFunctions_Call_Abs_Abs_x_LiteralInteger1143);
				fUML_Tests_TestRealFunctions_Call_Abs_Abs_result.reset(new OutputPin());
				this->addToElementRepository("Abs.result", fUML_Tests_TestRealFunctions_Call_Abs_Abs_result);
					fUML_Tests_TestRealFunctions_Call_Abs_Abs_result_LiteralInteger1144.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1144", fUML_Tests_TestRealFunctions_Call_Abs_Abs_result_LiteralInteger1144);
					fUML_Tests_TestRealFunctions_Call_Abs_Abs_result_LiteralUnlimitedNatural1145.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1145", fUML_Tests_TestRealFunctions_Call_Abs_Abs_result_LiteralUnlimitedNatural1145);
			fUML_Tests_TestRealFunctions_ObjectFlow1146.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1146", fUML_Tests_TestRealFunctions_ObjectFlow1146);
				fUML_Tests_TestRealFunctions_ObjectFlow1146_LiteralInteger1147.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1147", fUML_Tests_TestRealFunctions_ObjectFlow1146_LiteralInteger1147);
			fUML_Tests_TestRealFunctions_Call_Min.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Min)", fUML_Tests_TestRealFunctions_Call_Min);
				fUML_Tests_TestRealFunctions_Call_Min_Min_result.reset(new OutputPin());
				this->addToElementRepository("Min.result", fUML_Tests_TestRealFunctions_Call_Min_Min_result);
					fUML_Tests_TestRealFunctions_Call_Min_Min_result_LiteralInteger1148.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1148", fUML_Tests_TestRealFunctions_Call_Min_Min_result_LiteralInteger1148);
					fUML_Tests_TestRealFunctions_Call_Min_Min_result_LiteralUnlimitedNatural1149.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1149", fUML_Tests_TestRealFunctions_Call_Min_Min_result_LiteralUnlimitedNatural1149);
				fUML_Tests_TestRealFunctions_Call_Min_Min_y.reset(new InputPin());
				this->addToElementRepository("Min.y", fUML_Tests_TestRealFunctions_Call_Min_Min_y);
					fUML_Tests_TestRealFunctions_Call_Min_Min_y_LiteralInteger1150.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1150", fUML_Tests_TestRealFunctions_Call_Min_Min_y_LiteralInteger1150);
					fUML_Tests_TestRealFunctions_Call_Min_Min_y_LiteralUnlimitedNatural1151.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1151", fUML_Tests_TestRealFunctions_Call_Min_Min_y_LiteralUnlimitedNatural1151);
				fUML_Tests_TestRealFunctions_Call_Min_Min_x.reset(new InputPin());
				this->addToElementRepository("Min.x", fUML_Tests_TestRealFunctions_Call_Min_Min_x);
					fUML_Tests_TestRealFunctions_Call_Min_Min_x_LiteralInteger1152.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1152", fUML_Tests_TestRealFunctions_Call_Min_Min_x_LiteralInteger1152);
					fUML_Tests_TestRealFunctions_Call_Min_Min_x_LiteralUnlimitedNatural1153.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1153", fUML_Tests_TestRealFunctions_Call_Min_Min_x_LiteralUnlimitedNatural1153);
			fUML_Tests_TestRealFunctions_ObjectFlow1154.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1154", fUML_Tests_TestRealFunctions_ObjectFlow1154);
				fUML_Tests_TestRealFunctions_ObjectFlow1154_LiteralInteger1155.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1155", fUML_Tests_TestRealFunctions_ObjectFlow1154_LiteralInteger1155);
			fUML_Tests_TestRealFunctions_InvResult.reset(new Parameter());
			this->addToElementRepository("InvResult", fUML_Tests_TestRealFunctions_InvResult);
			fUML_Tests_TestRealFunctions_ObjectFlow1156.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1156", fUML_Tests_TestRealFunctions_ObjectFlow1156);
				fUML_Tests_TestRealFunctions_ObjectFlow1156_LiteralInteger1157.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1157", fUML_Tests_TestRealFunctions_ObjectFlow1156_LiteralInteger1157);
			fUML_Tests_TestRealFunctions_DivideResult.reset(new Parameter());
			this->addToElementRepository("DivideResult", fUML_Tests_TestRealFunctions_DivideResult);
			fUML_Tests_TestRealFunctions_Value_minus2_3.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(-2.3)", fUML_Tests_TestRealFunctions_Value_minus2_3);
				fUML_Tests_TestRealFunctions_Value_minus2_3_LiteralReal1158.reset(new LiteralReal());
				this->addToElementRepository("LiteralReal1158", fUML_Tests_TestRealFunctions_Value_minus2_3_LiteralReal1158);
				fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result.reset(new OutputPin());
				this->addToElementRepository("Value(-2.3).result", fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result);
					fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result_LiteralInteger1159.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1159", fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result_LiteralInteger1159);
					fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result_LiteralUnlimitedNatural1160.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1160", fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result_LiteralUnlimitedNatural1160);
			fUML_Tests_TestRealFunctions_ObjectFlow1161.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1161", fUML_Tests_TestRealFunctions_ObjectFlow1161);
				fUML_Tests_TestRealFunctions_ObjectFlow1161_LiteralUnlimitedNatural1162.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1162", fUML_Tests_TestRealFunctions_ObjectFlow1161_LiteralUnlimitedNatural1162);
			fUML_Tests_TestRealFunctions_Param_PlusResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(PlusResult)", fUML_Tests_TestRealFunctions_Param_PlusResult);
			fUML_Tests_TestRealFunctions_Param_ToIntegerResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(ToIntegerResult)", fUML_Tests_TestRealFunctions_Param_ToIntegerResult);
			fUML_Tests_TestRealFunctions_ObjectFlow1163.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1163", fUML_Tests_TestRealFunctions_ObjectFlow1163);
				fUML_Tests_TestRealFunctions_ObjectFlow1163_LiteralInteger1164.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1164", fUML_Tests_TestRealFunctions_ObjectFlow1163_LiteralInteger1164);
			fUML_Tests_TestRealFunctions_Call_Max.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Max)", fUML_Tests_TestRealFunctions_Call_Max);
				fUML_Tests_TestRealFunctions_Call_Max_Max_y.reset(new InputPin());
				this->addToElementRepository("Max.y", fUML_Tests_TestRealFunctions_Call_Max_Max_y);
					fUML_Tests_TestRealFunctions_Call_Max_Max_y_LiteralInteger1165.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1165", fUML_Tests_TestRealFunctions_Call_Max_Max_y_LiteralInteger1165);
					fUML_Tests_TestRealFunctions_Call_Max_Max_y_LiteralUnlimitedNatural1166.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1166", fUML_Tests_TestRealFunctions_Call_Max_Max_y_LiteralUnlimitedNatural1166);
				fUML_Tests_TestRealFunctions_Call_Max_Max_x.reset(new InputPin());
				this->addToElementRepository("Max.x", fUML_Tests_TestRealFunctions_Call_Max_Max_x);
					fUML_Tests_TestRealFunctions_Call_Max_Max_x_LiteralUnlimitedNatural1167.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1167", fUML_Tests_TestRealFunctions_Call_Max_Max_x_LiteralUnlimitedNatural1167);
					fUML_Tests_TestRealFunctions_Call_Max_Max_x_LiteralInteger1168.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1168", fUML_Tests_TestRealFunctions_Call_Max_Max_x_LiteralInteger1168);
				fUML_Tests_TestRealFunctions_Call_Max_Max_result.reset(new OutputPin());
				this->addToElementRepository("Max.result", fUML_Tests_TestRealFunctions_Call_Max_Max_result);
					fUML_Tests_TestRealFunctions_Call_Max_Max_result_LiteralInteger1169.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1169", fUML_Tests_TestRealFunctions_Call_Max_Max_result_LiteralInteger1169);
					fUML_Tests_TestRealFunctions_Call_Max_Max_result_LiteralUnlimitedNatural1170.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1170", fUML_Tests_TestRealFunctions_Call_Max_Max_result_LiteralUnlimitedNatural1170);
			fUML_Tests_TestRealFunctions_ObjectFlow1171.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1171", fUML_Tests_TestRealFunctions_ObjectFlow1171);
				fUML_Tests_TestRealFunctions_ObjectFlow1171_LiteralInteger1172.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1172", fUML_Tests_TestRealFunctions_ObjectFlow1171_LiteralInteger1172);
			fUML_Tests_TestRealFunctions_Call_Neg.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Neg)", fUML_Tests_TestRealFunctions_Call_Neg);
				fUML_Tests_TestRealFunctions_Call_Neg_Neg_x.reset(new InputPin());
				this->addToElementRepository("Neg.x", fUML_Tests_TestRealFunctions_Call_Neg_Neg_x);
					fUML_Tests_TestRealFunctions_Call_Neg_Neg_x_LiteralInteger1173.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1173", fUML_Tests_TestRealFunctions_Call_Neg_Neg_x_LiteralInteger1173);
					fUML_Tests_TestRealFunctions_Call_Neg_Neg_x_LiteralUnlimitedNatural1174.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1174", fUML_Tests_TestRealFunctions_Call_Neg_Neg_x_LiteralUnlimitedNatural1174);
				fUML_Tests_TestRealFunctions_Call_Neg_Neg_result.reset(new OutputPin());
				this->addToElementRepository("Neg.result", fUML_Tests_TestRealFunctions_Call_Neg_Neg_result);
					fUML_Tests_TestRealFunctions_Call_Neg_Neg_result_LiteralUnlimitedNatural1175.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1175", fUML_Tests_TestRealFunctions_Call_Neg_Neg_result_LiteralUnlimitedNatural1175);
					fUML_Tests_TestRealFunctions_Call_Neg_Neg_result_LiteralInteger1176.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1176", fUML_Tests_TestRealFunctions_Call_Neg_Neg_result_LiteralInteger1176);
			fUML_Tests_TestRealFunctions_ObjectFlow1177.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1177", fUML_Tests_TestRealFunctions_ObjectFlow1177);
				fUML_Tests_TestRealFunctions_ObjectFlow1177_LiteralInteger1178.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1178", fUML_Tests_TestRealFunctions_ObjectFlow1177_LiteralInteger1178);
			fUML_Tests_TestRealFunctions_ObjectFlow1179.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1179", fUML_Tests_TestRealFunctions_ObjectFlow1179);
				fUML_Tests_TestRealFunctions_ObjectFlow1179_LiteralInteger1180.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1180", fUML_Tests_TestRealFunctions_ObjectFlow1179_LiteralInteger1180);
			fUML_Tests_TestRealFunctions_ObjectFlow1181.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1181", fUML_Tests_TestRealFunctions_ObjectFlow1181);
				fUML_Tests_TestRealFunctions_ObjectFlow1181_LiteralInteger1182.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1182", fUML_Tests_TestRealFunctions_ObjectFlow1181_LiteralInteger1182);
			fUML_Tests_TestRealFunctions_NegResult.reset(new Parameter());
			this->addToElementRepository("NegResult", fUML_Tests_TestRealFunctions_NegResult);
			fUML_Tests_TestRealFunctions_ControlFlow1183.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1183", fUML_Tests_TestRealFunctions_ControlFlow1183);
				fUML_Tests_TestRealFunctions_ControlFlow1183_LiteralInteger1184.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1184", fUML_Tests_TestRealFunctions_ControlFlow1183_LiteralInteger1184);
			fUML_Tests_TestRealFunctions_FloorResult.reset(new Parameter());
			this->addToElementRepository("FloorResult", fUML_Tests_TestRealFunctions_FloorResult);
				fUML_Tests_TestRealFunctions_FloorResult_LiteralInteger1185.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1185", fUML_Tests_TestRealFunctions_FloorResult_LiteralInteger1185);
				fUML_Tests_TestRealFunctions_FloorResult_LiteralUnlimitedNatural1186.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1186", fUML_Tests_TestRealFunctions_FloorResult_LiteralUnlimitedNatural1186);
			fUML_Tests_TestRealFunctions_Param_RoundResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(RoundResult)", fUML_Tests_TestRealFunctions_Param_RoundResult);
			fUML_Tests_TestRealFunctions_ObjectFlow1187.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1187", fUML_Tests_TestRealFunctions_ObjectFlow1187);
				fUML_Tests_TestRealFunctions_ObjectFlow1187_LiteralUnlimitedNatural1188.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1188", fUML_Tests_TestRealFunctions_ObjectFlow1187_LiteralUnlimitedNatural1188);
			fUML_Tests_TestRealFunctions_MaxResult.reset(new Parameter());
			this->addToElementRepository("MaxResult", fUML_Tests_TestRealFunctions_MaxResult);
			fUML_Tests_TestRealFunctions_ControlFlow1189.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1189", fUML_Tests_TestRealFunctions_ControlFlow1189);
				fUML_Tests_TestRealFunctions_ControlFlow1189_LiteralUnlimitedNatural1190.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1190", fUML_Tests_TestRealFunctions_ControlFlow1189_LiteralUnlimitedNatural1190);
			fUML_Tests_TestRealFunctions_ObjectFlow1191.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1191", fUML_Tests_TestRealFunctions_ObjectFlow1191);
				fUML_Tests_TestRealFunctions_ObjectFlow1191_LiteralUnlimitedNatural1192.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1192", fUML_Tests_TestRealFunctions_ObjectFlow1191_LiteralUnlimitedNatural1192);
			fUML_Tests_TestRealFunctions_ControlFlow1193.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1193", fUML_Tests_TestRealFunctions_ControlFlow1193);
				fUML_Tests_TestRealFunctions_ControlFlow1193_LiteralInteger1194.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1194", fUML_Tests_TestRealFunctions_ControlFlow1193_LiteralInteger1194);
			fUML_Tests_TestRealFunctions_Fork_0_5.reset(new ForkNode());
			this->addToElementRepository("Fork(0.5)", fUML_Tests_TestRealFunctions_Fork_0_5);
			fUML_Tests_TestRealFunctions_Param_DivideResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(DivideResult)", fUML_Tests_TestRealFunctions_Param_DivideResult);
			fUML_Tests_TestRealFunctions_ObjectFlow1195.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1195", fUML_Tests_TestRealFunctions_ObjectFlow1195);
				fUML_Tests_TestRealFunctions_ObjectFlow1195_LiteralInteger1196.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1196", fUML_Tests_TestRealFunctions_ObjectFlow1195_LiteralInteger1196);
			fUML_Tests_TestRealFunctions_Call_Divide.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Divide)", fUML_Tests_TestRealFunctions_Call_Divide);
				fUML_Tests_TestRealFunctions_Call_Divide_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestRealFunctions_Call_Divide_x);
					fUML_Tests_TestRealFunctions_Call_Divide_x_LiteralUnlimitedNatural1197.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1197", fUML_Tests_TestRealFunctions_Call_Divide_x_LiteralUnlimitedNatural1197);
					fUML_Tests_TestRealFunctions_Call_Divide_x_LiteralInteger1198.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1198", fUML_Tests_TestRealFunctions_Call_Divide_x_LiteralInteger1198);
				fUML_Tests_TestRealFunctions_Call_Divide_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestRealFunctions_Call_Divide_result);
					fUML_Tests_TestRealFunctions_Call_Divide_result_LiteralUnlimitedNatural1199.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1199", fUML_Tests_TestRealFunctions_Call_Divide_result_LiteralUnlimitedNatural1199);
					fUML_Tests_TestRealFunctions_Call_Divide_result_LiteralInteger1200.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1200", fUML_Tests_TestRealFunctions_Call_Divide_result_LiteralInteger1200);
				fUML_Tests_TestRealFunctions_Call_Divide_y.reset(new InputPin());
				this->addToElementRepository("y", fUML_Tests_TestRealFunctions_Call_Divide_y);
					fUML_Tests_TestRealFunctions_Call_Divide_y_LiteralUnlimitedNatural1201.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1201", fUML_Tests_TestRealFunctions_Call_Divide_y_LiteralUnlimitedNatural1201);
					fUML_Tests_TestRealFunctions_Call_Divide_y_LiteralInteger1202.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1202", fUML_Tests_TestRealFunctions_Call_Divide_y_LiteralInteger1202);
			fUML_Tests_TestRealFunctions_Call_Minus.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Minus)", fUML_Tests_TestRealFunctions_Call_Minus);
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_x.reset(new InputPin());
				this->addToElementRepository("Minus.x", fUML_Tests_TestRealFunctions_Call_Minus_Minus_x);
					fUML_Tests_TestRealFunctions_Call_Minus_Minus_x_LiteralUnlimitedNatural1203.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1203", fUML_Tests_TestRealFunctions_Call_Minus_Minus_x_LiteralUnlimitedNatural1203);
					fUML_Tests_TestRealFunctions_Call_Minus_Minus_x_LiteralInteger1204.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1204", fUML_Tests_TestRealFunctions_Call_Minus_Minus_x_LiteralInteger1204);
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_result.reset(new OutputPin());
				this->addToElementRepository("Minus.result", fUML_Tests_TestRealFunctions_Call_Minus_Minus_result);
					fUML_Tests_TestRealFunctions_Call_Minus_Minus_result_LiteralUnlimitedNatural1205.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1205", fUML_Tests_TestRealFunctions_Call_Minus_Minus_result_LiteralUnlimitedNatural1205);
					fUML_Tests_TestRealFunctions_Call_Minus_Minus_result_LiteralInteger1206.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1206", fUML_Tests_TestRealFunctions_Call_Minus_Minus_result_LiteralInteger1206);
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_y.reset(new InputPin());
				this->addToElementRepository("Minus.y", fUML_Tests_TestRealFunctions_Call_Minus_Minus_y);
					fUML_Tests_TestRealFunctions_Call_Minus_Minus_y_LiteralUnlimitedNatural1207.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1207", fUML_Tests_TestRealFunctions_Call_Minus_Minus_y_LiteralUnlimitedNatural1207);
					fUML_Tests_TestRealFunctions_Call_Minus_Minus_y_LiteralInteger1208.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1208", fUML_Tests_TestRealFunctions_Call_Minus_Minus_y_LiteralInteger1208);
			fUML_Tests_TestRealFunctions_Param_MinusResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(MinusResult)", fUML_Tests_TestRealFunctions_Param_MinusResult);
			fUML_Tests_TestRealFunctions_PlusResult.reset(new Parameter());
			this->addToElementRepository("PlusResult", fUML_Tests_TestRealFunctions_PlusResult);
			fUML_Tests_TestRealFunctions_ObjectFlow1209.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1209", fUML_Tests_TestRealFunctions_ObjectFlow1209);
				fUML_Tests_TestRealFunctions_ObjectFlow1209_LiteralInteger1210.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1210", fUML_Tests_TestRealFunctions_ObjectFlow1209_LiteralInteger1210);
			fUML_Tests_TestRealFunctions_ControlFlow1211.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1211", fUML_Tests_TestRealFunctions_ControlFlow1211);
				fUML_Tests_TestRealFunctions_ControlFlow1211_LiteralInteger1212.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1212", fUML_Tests_TestRealFunctions_ControlFlow1211_LiteralInteger1212);
			fUML_Tests_TestRealFunctions_ObjectFlow1213.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1213", fUML_Tests_TestRealFunctions_ObjectFlow1213);
				fUML_Tests_TestRealFunctions_ObjectFlow1213_LiteralInteger1214.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1214", fUML_Tests_TestRealFunctions_ObjectFlow1213_LiteralInteger1214);
			fUML_Tests_TestRealFunctions_ToIntegerResult.reset(new Parameter());
			this->addToElementRepository("ToIntegerResult", fUML_Tests_TestRealFunctions_ToIntegerResult);
				fUML_Tests_TestRealFunctions_ToIntegerResult_LiteralInteger1215.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1215", fUML_Tests_TestRealFunctions_ToIntegerResult_LiteralInteger1215);
				fUML_Tests_TestRealFunctions_ToIntegerResult_LiteralUnlimitedNatural1216.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1216", fUML_Tests_TestRealFunctions_ToIntegerResult_LiteralUnlimitedNatural1216);
			fUML_Tests_TestRealFunctions_ObjectFlow1217.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1217", fUML_Tests_TestRealFunctions_ObjectFlow1217);
				fUML_Tests_TestRealFunctions_ObjectFlow1217_LiteralInteger1218.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1218", fUML_Tests_TestRealFunctions_ObjectFlow1217_LiteralInteger1218);
			fUML_Tests_TestRealFunctions_ControlFlow1219.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1219", fUML_Tests_TestRealFunctions_ControlFlow1219);
				fUML_Tests_TestRealFunctions_ControlFlow1219_LiteralUnlimitedNatural1220.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1220", fUML_Tests_TestRealFunctions_ControlFlow1219_LiteralUnlimitedNatural1220);
			fUML_Tests_TestRealFunctions_ObjectFlow1221.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1221", fUML_Tests_TestRealFunctions_ObjectFlow1221);
				fUML_Tests_TestRealFunctions_ObjectFlow1221_LiteralInteger1222.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1222", fUML_Tests_TestRealFunctions_ObjectFlow1221_LiteralInteger1222);
			fUML_Tests_TestRealFunctions_Param_NegResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(NegResult)", fUML_Tests_TestRealFunctions_Param_NegResult);
			fUML_Tests_TestRealFunctions_MinResult.reset(new Parameter());
			this->addToElementRepository("MinResult", fUML_Tests_TestRealFunctions_MinResult);
			fUML_Tests_TestRealFunctions_Call_Floor.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Floor)", fUML_Tests_TestRealFunctions_Call_Floor);
				fUML_Tests_TestRealFunctions_Call_Floor_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestRealFunctions_Call_Floor_x);
					fUML_Tests_TestRealFunctions_Call_Floor_x_LiteralInteger1223.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1223", fUML_Tests_TestRealFunctions_Call_Floor_x_LiteralInteger1223);
					fUML_Tests_TestRealFunctions_Call_Floor_x_LiteralUnlimitedNatural1224.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1224", fUML_Tests_TestRealFunctions_Call_Floor_x_LiteralUnlimitedNatural1224);
				fUML_Tests_TestRealFunctions_Call_Floor_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestRealFunctions_Call_Floor_result);
					fUML_Tests_TestRealFunctions_Call_Floor_result_LiteralInteger1225.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1225", fUML_Tests_TestRealFunctions_Call_Floor_result_LiteralInteger1225);
					fUML_Tests_TestRealFunctions_Call_Floor_result_LiteralUnlimitedNatural1226.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1226", fUML_Tests_TestRealFunctions_Call_Floor_result_LiteralUnlimitedNatural1226);
			fUML_Tests_TestRealFunctions_AbsResult.reset(new Parameter());
			this->addToElementRepository("AbsResult", fUML_Tests_TestRealFunctions_AbsResult);
			fUML_Tests_TestRealFunctions_ObjectFlow1227.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1227", fUML_Tests_TestRealFunctions_ObjectFlow1227);
				fUML_Tests_TestRealFunctions_ObjectFlow1227_LiteralInteger1228.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1228", fUML_Tests_TestRealFunctions_ObjectFlow1227_LiteralInteger1228);
			fUML_Tests_TestRealFunctions_ObjectFlow1229.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1229", fUML_Tests_TestRealFunctions_ObjectFlow1229);
				fUML_Tests_TestRealFunctions_ObjectFlow1229_LiteralInteger1230.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1230", fUML_Tests_TestRealFunctions_ObjectFlow1229_LiteralInteger1230);
			fUML_Tests_TestRealFunctions_ObjectFlow1231.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1231", fUML_Tests_TestRealFunctions_ObjectFlow1231);
				fUML_Tests_TestRealFunctions_ObjectFlow1231_LiteralUnlimitedNatural1232.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1232", fUML_Tests_TestRealFunctions_ObjectFlow1231_LiteralUnlimitedNatural1232);
			fUML_Tests_TestRealFunctions_MinusResult.reset(new Parameter());
			this->addToElementRepository("MinusResult", fUML_Tests_TestRealFunctions_MinusResult);
			fUML_Tests_TestRealFunctions_ControlFlow1233.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1233", fUML_Tests_TestRealFunctions_ControlFlow1233);
				fUML_Tests_TestRealFunctions_ControlFlow1233_LiteralInteger1234.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1234", fUML_Tests_TestRealFunctions_ControlFlow1233_LiteralInteger1234);
			fUML_Tests_TestRealFunctions_Fork_minus2_3.reset(new ForkNode());
			this->addToElementRepository("Fork(-2.3)", fUML_Tests_TestRealFunctions_Fork_minus2_3);
			fUML_Tests_TestRealFunctions_ControlFlow1235.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1235", fUML_Tests_TestRealFunctions_ControlFlow1235);
				fUML_Tests_TestRealFunctions_ControlFlow1235_LiteralInteger1236.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1236", fUML_Tests_TestRealFunctions_ControlFlow1235_LiteralInteger1236);
			fUML_Tests_TestRealFunctions_ObjectFlow1237.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1237", fUML_Tests_TestRealFunctions_ObjectFlow1237);
				fUML_Tests_TestRealFunctions_ObjectFlow1237_LiteralInteger1238.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1238", fUML_Tests_TestRealFunctions_ObjectFlow1237_LiteralInteger1238);
			fUML_Tests_TestRealFunctions_ObjectFlow1239.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1239", fUML_Tests_TestRealFunctions_ObjectFlow1239);
				fUML_Tests_TestRealFunctions_ObjectFlow1239_LiteralInteger1240.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1240", fUML_Tests_TestRealFunctions_ObjectFlow1239_LiteralInteger1240);
			fUML_Tests_TestRealFunctions_RoundResult.reset(new Parameter());
			this->addToElementRepository("RoundResult", fUML_Tests_TestRealFunctions_RoundResult);
				fUML_Tests_TestRealFunctions_RoundResult_LiteralInteger1241.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1241", fUML_Tests_TestRealFunctions_RoundResult_LiteralInteger1241);
				fUML_Tests_TestRealFunctions_RoundResult_LiteralUnlimitedNatural1242.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1242", fUML_Tests_TestRealFunctions_RoundResult_LiteralUnlimitedNatural1242);
			fUML_Tests_TestRealFunctions_Value_0_5.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(0.5)", fUML_Tests_TestRealFunctions_Value_0_5);
				fUML_Tests_TestRealFunctions_Value_0_5_LiteralReal1243.reset(new LiteralReal());
				this->addToElementRepository("LiteralReal1243", fUML_Tests_TestRealFunctions_Value_0_5_LiteralReal1243);
				fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result.reset(new OutputPin());
				this->addToElementRepository("Value(0.5).result", fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result);
					fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result_LiteralUnlimitedNatural1244.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1244", fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result_LiteralUnlimitedNatural1244);
					fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result_LiteralInteger1245.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1245", fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result_LiteralInteger1245);
			fUML_Tests_TestRealFunctions_Param_MinResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(MinResult)", fUML_Tests_TestRealFunctions_Param_MinResult);
			fUML_Tests_TestRealFunctions_ObjectFlow1246.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1246", fUML_Tests_TestRealFunctions_ObjectFlow1246);
				fUML_Tests_TestRealFunctions_ObjectFlow1246_LiteralInteger1247.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1247", fUML_Tests_TestRealFunctions_ObjectFlow1246_LiteralInteger1247);
			fUML_Tests_TestRealFunctions_ControlFlow1248.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1248", fUML_Tests_TestRealFunctions_ControlFlow1248);
				fUML_Tests_TestRealFunctions_ControlFlow1248_LiteralInteger1249.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1249", fUML_Tests_TestRealFunctions_ControlFlow1248_LiteralInteger1249);
			fUML_Tests_TestRealFunctions_ObjectFlow1250.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1250", fUML_Tests_TestRealFunctions_ObjectFlow1250);
				fUML_Tests_TestRealFunctions_ObjectFlow1250_LiteralInteger1251.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1251", fUML_Tests_TestRealFunctions_ObjectFlow1250_LiteralInteger1251);
			fUML_Tests_TestRealFunctions_ObjectFlow1252.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1252", fUML_Tests_TestRealFunctions_ObjectFlow1252);
				fUML_Tests_TestRealFunctions_ObjectFlow1252_LiteralInteger1253.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1253", fUML_Tests_TestRealFunctions_ObjectFlow1252_LiteralInteger1253);
			fUML_Tests_TestRealFunctions_ControlFlow1254.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1254", fUML_Tests_TestRealFunctions_ControlFlow1254);
				fUML_Tests_TestRealFunctions_ControlFlow1254_LiteralUnlimitedNatural1255.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1255", fUML_Tests_TestRealFunctions_ControlFlow1254_LiteralUnlimitedNatural1255);
			fUML_Tests_TestRealFunctions_Call_Round.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Round)", fUML_Tests_TestRealFunctions_Call_Round);
				fUML_Tests_TestRealFunctions_Call_Round_Round_x.reset(new InputPin());
				this->addToElementRepository("Round.x", fUML_Tests_TestRealFunctions_Call_Round_Round_x);
				fUML_Tests_TestRealFunctions_Call_Round_Round_result.reset(new OutputPin());
				this->addToElementRepository("Round.result", fUML_Tests_TestRealFunctions_Call_Round_Round_result);
			fUML_Tests_TestRealFunctions_ObjectFlow1256.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1256", fUML_Tests_TestRealFunctions_ObjectFlow1256);
				fUML_Tests_TestRealFunctions_ObjectFlow1256_LiteralUnlimitedNatural1257.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1257", fUML_Tests_TestRealFunctions_ObjectFlow1256_LiteralUnlimitedNatural1257);
			fUML_Tests_TestRealFunctions_Call_Plus.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Plus)", fUML_Tests_TestRealFunctions_Call_Plus);
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_x.reset(new InputPin());
				this->addToElementRepository("Plus.x", fUML_Tests_TestRealFunctions_Call_Plus_Plus_x);
					fUML_Tests_TestRealFunctions_Call_Plus_Plus_x_LiteralUnlimitedNatural1258.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1258", fUML_Tests_TestRealFunctions_Call_Plus_Plus_x_LiteralUnlimitedNatural1258);
					fUML_Tests_TestRealFunctions_Call_Plus_Plus_x_LiteralInteger1259.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1259", fUML_Tests_TestRealFunctions_Call_Plus_Plus_x_LiteralInteger1259);
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_y.reset(new InputPin());
				this->addToElementRepository("Plus.y", fUML_Tests_TestRealFunctions_Call_Plus_Plus_y);
					fUML_Tests_TestRealFunctions_Call_Plus_Plus_y_LiteralUnlimitedNatural1260.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1260", fUML_Tests_TestRealFunctions_Call_Plus_Plus_y_LiteralUnlimitedNatural1260);
					fUML_Tests_TestRealFunctions_Call_Plus_Plus_y_LiteralInteger1261.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1261", fUML_Tests_TestRealFunctions_Call_Plus_Plus_y_LiteralInteger1261);
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_result.reset(new OutputPin());
				this->addToElementRepository("Plus.result", fUML_Tests_TestRealFunctions_Call_Plus_Plus_result);
					fUML_Tests_TestRealFunctions_Call_Plus_Plus_result_LiteralInteger1262.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1262", fUML_Tests_TestRealFunctions_Call_Plus_Plus_result_LiteralInteger1262);
					fUML_Tests_TestRealFunctions_Call_Plus_Plus_result_LiteralUnlimitedNatural1263.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1263", fUML_Tests_TestRealFunctions_Call_Plus_Plus_result_LiteralUnlimitedNatural1263);
			fUML_Tests_TestRealFunctions_Call_Inv.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Inv)", fUML_Tests_TestRealFunctions_Call_Inv);
				fUML_Tests_TestRealFunctions_Call_Inv_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestRealFunctions_Call_Inv_result);
				fUML_Tests_TestRealFunctions_Call_Inv_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestRealFunctions_Call_Inv_x);
			fUML_Tests_TestRealFunctions_ObjectFlow1264.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1264", fUML_Tests_TestRealFunctions_ObjectFlow1264);
				fUML_Tests_TestRealFunctions_ObjectFlow1264_LiteralInteger1265.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1265", fUML_Tests_TestRealFunctions_ObjectFlow1264_LiteralInteger1265);
			fUML_Tests_TestRealFunctions_ControlFlow1266.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1266", fUML_Tests_TestRealFunctions_ControlFlow1266);
				fUML_Tests_TestRealFunctions_ControlFlow1266_LiteralUnlimitedNatural1267.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1267", fUML_Tests_TestRealFunctions_ControlFlow1266_LiteralUnlimitedNatural1267);
			fUML_Tests_TestRealFunctions_Call_ToInteger.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(ToInteger)", fUML_Tests_TestRealFunctions_Call_ToInteger);
				fUML_Tests_TestRealFunctions_Call_ToInteger_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestRealFunctions_Call_ToInteger_x);
					fUML_Tests_TestRealFunctions_Call_ToInteger_x_LiteralInteger1268.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1268", fUML_Tests_TestRealFunctions_Call_ToInteger_x_LiteralInteger1268);
					fUML_Tests_TestRealFunctions_Call_ToInteger_x_LiteralUnlimitedNatural1269.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1269", fUML_Tests_TestRealFunctions_Call_ToInteger_x_LiteralUnlimitedNatural1269);
				fUML_Tests_TestRealFunctions_Call_ToInteger_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestRealFunctions_Call_ToInteger_result);
					fUML_Tests_TestRealFunctions_Call_ToInteger_result_LiteralInteger1270.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1270", fUML_Tests_TestRealFunctions_Call_ToInteger_result_LiteralInteger1270);
					fUML_Tests_TestRealFunctions_Call_ToInteger_result_LiteralUnlimitedNatural1271.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1271", fUML_Tests_TestRealFunctions_Call_ToInteger_result_LiteralUnlimitedNatural1271);
			fUML_Tests_TestRealFunctions_Param_FloorResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(FloorResult)", fUML_Tests_TestRealFunctions_Param_FloorResult);
			fUML_Tests_TestRealFunctions_ObjectFlow1272.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1272", fUML_Tests_TestRealFunctions_ObjectFlow1272);
				fUML_Tests_TestRealFunctions_ObjectFlow1272_LiteralUnlimitedNatural1273.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1273", fUML_Tests_TestRealFunctions_ObjectFlow1272_LiteralUnlimitedNatural1273);
			fUML_Tests_TestRealFunctions_ObjectFlow1274.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1274", fUML_Tests_TestRealFunctions_ObjectFlow1274);
				fUML_Tests_TestRealFunctions_ObjectFlow1274_LiteralUnlimitedNatural1275.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1275", fUML_Tests_TestRealFunctions_ObjectFlow1274_LiteralUnlimitedNatural1275);
			fUML_Tests_TestRealFunctions_TimesResult.reset(new Parameter());
			this->addToElementRepository("TimesResult", fUML_Tests_TestRealFunctions_TimesResult);
			fUML_Tests_TestRealFunctions_ObjectFlow1276.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1276", fUML_Tests_TestRealFunctions_ObjectFlow1276);
				fUML_Tests_TestRealFunctions_ObjectFlow1276_LiteralUnlimitedNatural1277.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1277", fUML_Tests_TestRealFunctions_ObjectFlow1276_LiteralUnlimitedNatural1277);
			fUML_Tests_TestRealFunctions_Fork_3_1.reset(new ForkNode());
			this->addToElementRepository("Fork(3.1)", fUML_Tests_TestRealFunctions_Fork_3_1);
			fUML_Tests_TestRealFunctions_Call_Times.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Times)", fUML_Tests_TestRealFunctions_Call_Times);
				fUML_Tests_TestRealFunctions_Call_Times_Times_result.reset(new OutputPin());
				this->addToElementRepository("Times.result", fUML_Tests_TestRealFunctions_Call_Times_Times_result);
					fUML_Tests_TestRealFunctions_Call_Times_Times_result_LiteralInteger1278.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1278", fUML_Tests_TestRealFunctions_Call_Times_Times_result_LiteralInteger1278);
					fUML_Tests_TestRealFunctions_Call_Times_Times_result_LiteralUnlimitedNatural1279.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1279", fUML_Tests_TestRealFunctions_Call_Times_Times_result_LiteralUnlimitedNatural1279);
				fUML_Tests_TestRealFunctions_Call_Times_Times_y.reset(new InputPin());
				this->addToElementRepository("Times.y", fUML_Tests_TestRealFunctions_Call_Times_Times_y);
					fUML_Tests_TestRealFunctions_Call_Times_Times_y_LiteralUnlimitedNatural1280.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1280", fUML_Tests_TestRealFunctions_Call_Times_Times_y_LiteralUnlimitedNatural1280);
					fUML_Tests_TestRealFunctions_Call_Times_Times_y_LiteralInteger1281.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1281", fUML_Tests_TestRealFunctions_Call_Times_Times_y_LiteralInteger1281);
				fUML_Tests_TestRealFunctions_Call_Times_Times_x.reset(new InputPin());
				this->addToElementRepository("Times.x", fUML_Tests_TestRealFunctions_Call_Times_Times_x);
					fUML_Tests_TestRealFunctions_Call_Times_Times_x_LiteralInteger1282.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1282", fUML_Tests_TestRealFunctions_Call_Times_Times_x_LiteralInteger1282);
					fUML_Tests_TestRealFunctions_Call_Times_Times_x_LiteralUnlimitedNatural1283.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1283", fUML_Tests_TestRealFunctions_Call_Times_Times_x_LiteralUnlimitedNatural1283);
			fUML_Tests_TestRealFunctions_Value_3_1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(3.1)", fUML_Tests_TestRealFunctions_Value_3_1);
				fUML_Tests_TestRealFunctions_Value_3_1_Value_3_1_result.reset(new OutputPin());
				this->addToElementRepository("Value(3.1).result", fUML_Tests_TestRealFunctions_Value_3_1_Value_3_1_result);
				fUML_Tests_TestRealFunctions_Value_3_1_LiteralReal1284.reset(new LiteralReal());
				this->addToElementRepository("LiteralReal1284", fUML_Tests_TestRealFunctions_Value_3_1_LiteralReal1284);
			fUML_Tests_TestRealFunctions_ObjectFlow1285.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1285", fUML_Tests_TestRealFunctions_ObjectFlow1285);
				fUML_Tests_TestRealFunctions_ObjectFlow1285_LiteralInteger1286.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1286", fUML_Tests_TestRealFunctions_ObjectFlow1285_LiteralInteger1286);
			fUML_Tests_TestRealFunctions_Call_AbsResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Call(AbsResult)", fUML_Tests_TestRealFunctions_Call_AbsResult);
			fUML_Tests_TestRealFunctions_Param_InvResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(InvResult)", fUML_Tests_TestRealFunctions_Param_InvResult);
			fUML_Tests_TestRealFunctions_ObjectFlow1287.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1287", fUML_Tests_TestRealFunctions_ObjectFlow1287);
				fUML_Tests_TestRealFunctions_ObjectFlow1287_LiteralUnlimitedNatural1288.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1288", fUML_Tests_TestRealFunctions_ObjectFlow1287_LiteralUnlimitedNatural1288);
			fUML_Tests_TestRealFunctions_Param_TimesResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(TimesResult)", fUML_Tests_TestRealFunctions_Param_TimesResult);
			fUML_Tests_TestRealFunctions_ObjectFlow1289.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1289", fUML_Tests_TestRealFunctions_ObjectFlow1289);
				fUML_Tests_TestRealFunctions_ObjectFlow1289_LiteralInteger1290.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1290", fUML_Tests_TestRealFunctions_ObjectFlow1289_LiteralInteger1290);
		fUML_Tests_TestComposite.reset(new Class_());
		this->addToElementRepository("TestComposite", fUML_Tests_TestComposite);
			fUML_Tests_TestComposite_c1.reset(new Property());
			this->addToElementRepository("c1", fUML_Tests_TestComposite_c1);
		fUML_Tests_TestNodeEnabler.reset(new Activity());
		this->addToElementRepository("TestNodeEnabler", fUML_Tests_TestNodeEnabler);
			fUML_Tests_TestNodeEnabler_ObjectFlow1291.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1291", fUML_Tests_TestNodeEnabler_ObjectFlow1291);
				fUML_Tests_TestNodeEnabler_ObjectFlow1291_LiteralUnlimitedNatural1292.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1292", fUML_Tests_TestNodeEnabler_ObjectFlow1291_LiteralUnlimitedNatural1292);
			fUML_Tests_TestNodeEnabler_outputNode.reset(new ActivityParameterNode());
			this->addToElementRepository("outputNode", fUML_Tests_TestNodeEnabler_outputNode);
			fUML_Tests_TestNodeEnabler_ObjectFlow1293.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1293", fUML_Tests_TestNodeEnabler_ObjectFlow1293);
				fUML_Tests_TestNodeEnabler_ObjectFlow1293_LiteralUnlimitedNatural1294.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1294", fUML_Tests_TestNodeEnabler_ObjectFlow1293_LiteralUnlimitedNatural1294);
			fUML_Tests_TestNodeEnabler_Value_1.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(1)", fUML_Tests_TestNodeEnabler_Value_1);
				fUML_Tests_TestNodeEnabler_Value_1_LiteralInteger1295.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1295", fUML_Tests_TestNodeEnabler_Value_1_LiteralInteger1295);
				fUML_Tests_TestNodeEnabler_Value_1_Value_1_result.reset(new OutputPin());
				this->addToElementRepository("Value(1).result", fUML_Tests_TestNodeEnabler_Value_1_Value_1_result);
			fUML_Tests_TestNodeEnabler_output.reset(new Parameter());
			this->addToElementRepository("output", fUML_Tests_TestNodeEnabler_output);
				fUML_Tests_TestNodeEnabler_output_LiteralUnlimitedNatural1296.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1296", fUML_Tests_TestNodeEnabler_output_LiteralUnlimitedNatural1296);
				fUML_Tests_TestNodeEnabler_output_LiteralInteger1297.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1297", fUML_Tests_TestNodeEnabler_output_LiteralInteger1297);
			fUML_Tests_TestNodeEnabler_Call_NodeEnabler.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(NodeEnabler)", fUML_Tests_TestNodeEnabler_Call_NodeEnabler);
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output.reset(new OutputPin());
				this->addToElementRepository("Call(NodeEnabler).output", fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output);
					fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output_LiteralInteger1298.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1298", fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output_LiteralInteger1298);
					fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output_LiteralUnlimitedNatural1299.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1299", fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output_LiteralUnlimitedNatural1299);
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input.reset(new InputPin());
				this->addToElementRepository("Call(NodeEnabler).input", fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input);
					fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input_LiteralInteger1300.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1300", fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input_LiteralInteger1300);
					fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input_LiteralUnlimitedNatural1301.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1301", fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input_LiteralUnlimitedNatural1301);
		fUML_Tests_TestSignal.reset(new Signal());
		this->addToElementRepository("TestSignal", fUML_Tests_TestSignal);
		fUML_Tests_TestClassWriterReader.reset(new Activity());
		this->addToElementRepository("TestClassWriterReader", fUML_Tests_TestClassWriterReader);
			fUML_Tests_TestClassWriterReader_ObjectFlow1302.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1302", fUML_Tests_TestClassWriterReader_ObjectFlow1302);
				fUML_Tests_TestClassWriterReader_ObjectFlow1302_LiteralInteger1303.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1303", fUML_Tests_TestClassWriterReader_ObjectFlow1302_LiteralInteger1303);
			fUML_Tests_TestClassWriterReader_Write_x.reset(new AddStructuralFeatureValueAction());
			this->addToElementRepository("Write(x)", fUML_Tests_TestClassWriterReader_Write_x);
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_object.reset(new InputPin());
				this->addToElementRepository("Write(x).object", fUML_Tests_TestClassWriterReader_Write_x_Write_x_object);
					fUML_Tests_TestClassWriterReader_Write_x_Write_x_object_LiteralInteger1304.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1304", fUML_Tests_TestClassWriterReader_Write_x_Write_x_object_LiteralInteger1304);
					fUML_Tests_TestClassWriterReader_Write_x_Write_x_object_LiteralUnlimitedNatural1305.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1305", fUML_Tests_TestClassWriterReader_Write_x_Write_x_object_LiteralUnlimitedNatural1305);
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_result.reset(new OutputPin());
				this->addToElementRepository("Write(x).result", fUML_Tests_TestClassWriterReader_Write_x_Write_x_result);
					fUML_Tests_TestClassWriterReader_Write_x_Write_x_result_LiteralInteger1306.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1306", fUML_Tests_TestClassWriterReader_Write_x_Write_x_result_LiteralInteger1306);
					fUML_Tests_TestClassWriterReader_Write_x_Write_x_result_LiteralUnlimitedNatural1307.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1307", fUML_Tests_TestClassWriterReader_Write_x_Write_x_result_LiteralUnlimitedNatural1307);
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_value.reset(new InputPin());
				this->addToElementRepository("Write(x).value", fUML_Tests_TestClassWriterReader_Write_x_Write_x_value);
					fUML_Tests_TestClassWriterReader_Write_x_Write_x_value_LiteralInteger1308.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1308", fUML_Tests_TestClassWriterReader_Write_x_Write_x_value_LiteralInteger1308);
					fUML_Tests_TestClassWriterReader_Write_x_Write_x_value_LiteralUnlimitedNatural1309.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1309", fUML_Tests_TestClassWriterReader_Write_x_Write_x_value_LiteralUnlimitedNatural1309);
			fUML_Tests_TestClassWriterReader_ObjectFlow1310.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1310", fUML_Tests_TestClassWriterReader_ObjectFlow1310);
				fUML_Tests_TestClassWriterReader_ObjectFlow1310_LiteralInteger1311.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1311", fUML_Tests_TestClassWriterReader_ObjectFlow1310_LiteralInteger1311);
			fUML_Tests_TestClassWriterReader_ObjectFlow1312.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1312", fUML_Tests_TestClassWriterReader_ObjectFlow1312);
				fUML_Tests_TestClassWriterReader_ObjectFlow1312_LiteralInteger1313.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1313", fUML_Tests_TestClassWriterReader_ObjectFlow1312_LiteralInteger1313);
			fUML_Tests_TestClassWriterReader_Create_TestClass.reset(new CreateObjectAction());
			this->addToElementRepository("Create(TestClass)", fUML_Tests_TestClassWriterReader_Create_TestClass);
				fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result.reset(new OutputPin());
				this->addToElementRepository("Create(TestClass).result", fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result);
					fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result_LiteralUnlimitedNatural1314.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1314", fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result_LiteralUnlimitedNatural1314);
					fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result_LiteralInteger1315.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1315", fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result_LiteralInteger1315);
			fUML_Tests_TestClassWriterReader_Value_999.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(999)", fUML_Tests_TestClassWriterReader_Value_999);
				fUML_Tests_TestClassWriterReader_Value_999_LiteralInteger1316.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1316", fUML_Tests_TestClassWriterReader_Value_999_LiteralInteger1316);
				fUML_Tests_TestClassWriterReader_Value_999_Value_999_result.reset(new OutputPin());
				this->addToElementRepository("Value(999).result", fUML_Tests_TestClassWriterReader_Value_999_Value_999_result);
					fUML_Tests_TestClassWriterReader_Value_999_Value_999_result_LiteralInteger1317.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1317", fUML_Tests_TestClassWriterReader_Value_999_Value_999_result_LiteralInteger1317);
					fUML_Tests_TestClassWriterReader_Value_999_Value_999_result_LiteralUnlimitedNatural1318.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1318", fUML_Tests_TestClassWriterReader_Value_999_Value_999_result_LiteralUnlimitedNatural1318);
			fUML_Tests_TestClassWriterReader_Parameter_x.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(x)", fUML_Tests_TestClassWriterReader_Parameter_x);
			fUML_Tests_TestClassWriterReader_ObjectFlow1319.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1319", fUML_Tests_TestClassWriterReader_ObjectFlow1319);
				fUML_Tests_TestClassWriterReader_ObjectFlow1319_LiteralInteger1320.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1320", fUML_Tests_TestClassWriterReader_ObjectFlow1319_LiteralInteger1320);
			fUML_Tests_TestClassWriterReader_x.reset(new Parameter());
			this->addToElementRepository("x", fUML_Tests_TestClassWriterReader_x);
				fUML_Tests_TestClassWriterReader_x_LiteralInteger1321.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1321", fUML_Tests_TestClassWriterReader_x_LiteralInteger1321);
				fUML_Tests_TestClassWriterReader_x_LiteralUnlimitedNatural1322.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1322", fUML_Tests_TestClassWriterReader_x_LiteralUnlimitedNatural1322);
			fUML_Tests_TestClassWriterReader_Read_x.reset(new ReadStructuralFeatureAction());
			this->addToElementRepository("Read(x)", fUML_Tests_TestClassWriterReader_Read_x);
				fUML_Tests_TestClassWriterReader_Read_x_Read_x_object.reset(new InputPin());
				this->addToElementRepository("Read(x).object", fUML_Tests_TestClassWriterReader_Read_x_Read_x_object);
					fUML_Tests_TestClassWriterReader_Read_x_Read_x_object_LiteralUnlimitedNatural1323.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1323", fUML_Tests_TestClassWriterReader_Read_x_Read_x_object_LiteralUnlimitedNatural1323);
					fUML_Tests_TestClassWriterReader_Read_x_Read_x_object_LiteralInteger1324.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1324", fUML_Tests_TestClassWriterReader_Read_x_Read_x_object_LiteralInteger1324);
				fUML_Tests_TestClassWriterReader_Read_x_Read_x_result.reset(new OutputPin());
				this->addToElementRepository("Read(x).result", fUML_Tests_TestClassWriterReader_Read_x_Read_x_result);
					fUML_Tests_TestClassWriterReader_Read_x_Read_x_result_LiteralInteger1325.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1325", fUML_Tests_TestClassWriterReader_Read_x_Read_x_result_LiteralInteger1325);
					fUML_Tests_TestClassWriterReader_Read_x_Read_x_result_LiteralUnlimitedNatural1326.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1326", fUML_Tests_TestClassWriterReader_Read_x_Read_x_result_LiteralUnlimitedNatural1326);
		fUML_Tests_TestRealComparisonFunctions.reset(new Activity());
		this->addToElementRepository("TestRealComparisonFunctions", fUML_Tests_TestRealComparisonFunctions);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1327.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1327", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1327);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1327_LiteralInteger1328.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1328", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1327_LiteralInteger1328);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1329.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1329", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1329);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1329_LiteralInteger1330.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1330", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1329_LiteralInteger1330);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1331.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1331", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1331);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1331_LiteralInteger1332.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1332", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1331_LiteralInteger1332);
			fUML_Tests_TestRealComparisonFunctions_Param_LEResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(LEResult)", fUML_Tests_TestRealComparisonFunctions_Param_LEResult);
			fUML_Tests_TestRealComparisonFunctions_Value_3_0.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(3.0)", fUML_Tests_TestRealComparisonFunctions_Value_3_0);
				fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result.reset(new OutputPin());
				this->addToElementRepository("Value(3.0).result", fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result);
					fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result_LiteralInteger1333.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1333", fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result_LiteralInteger1333);
					fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result_LiteralUnlimitedNatural1334.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1334", fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result_LiteralUnlimitedNatural1334);
				fUML_Tests_TestRealComparisonFunctions_Value_3_0_LiteralReal1335.reset(new LiteralReal());
				this->addToElementRepository("LiteralReal1335", fUML_Tests_TestRealComparisonFunctions_Value_3_0_LiteralReal1335);
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1336.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1336", fUML_Tests_TestRealComparisonFunctions_ControlFlow1336);
				fUML_Tests_TestRealComparisonFunctions_ControlFlow1336_LiteralInteger1337.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1337", fUML_Tests_TestRealComparisonFunctions_ControlFlow1336_LiteralInteger1337);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1338.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1338", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1338);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1338_LiteralInteger1339.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1339", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1338_LiteralInteger1339);
			fUML_Tests_TestRealComparisonFunctions_Param_LTResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(LTResult)", fUML_Tests_TestRealComparisonFunctions_Param_LTResult);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1340.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1340", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1340);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1340_LiteralInteger1341.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1341", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1340_LiteralInteger1341);
			fUML_Tests_TestRealComparisonFunctions_Call_GE.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(GE)", fUML_Tests_TestRealComparisonFunctions_Call_GE);
				fUML_Tests_TestRealComparisonFunctions_Call_GE_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestRealComparisonFunctions_Call_GE_x);
					fUML_Tests_TestRealComparisonFunctions_Call_GE_x_LiteralUnlimitedNatural1342.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1342", fUML_Tests_TestRealComparisonFunctions_Call_GE_x_LiteralUnlimitedNatural1342);
					fUML_Tests_TestRealComparisonFunctions_Call_GE_x_LiteralInteger1343.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1343", fUML_Tests_TestRealComparisonFunctions_Call_GE_x_LiteralInteger1343);
				fUML_Tests_TestRealComparisonFunctions_Call_GE_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestRealComparisonFunctions_Call_GE_result);
					fUML_Tests_TestRealComparisonFunctions_Call_GE_result_LiteralUnlimitedNatural1344.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1344", fUML_Tests_TestRealComparisonFunctions_Call_GE_result_LiteralUnlimitedNatural1344);
					fUML_Tests_TestRealComparisonFunctions_Call_GE_result_LiteralInteger1345.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1345", fUML_Tests_TestRealComparisonFunctions_Call_GE_result_LiteralInteger1345);
				fUML_Tests_TestRealComparisonFunctions_Call_GE_y.reset(new InputPin());
				this->addToElementRepository("y", fUML_Tests_TestRealComparisonFunctions_Call_GE_y);
					fUML_Tests_TestRealComparisonFunctions_Call_GE_y_LiteralInteger1346.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1346", fUML_Tests_TestRealComparisonFunctions_Call_GE_y_LiteralInteger1346);
					fUML_Tests_TestRealComparisonFunctions_Call_GE_y_LiteralUnlimitedNatural1347.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1347", fUML_Tests_TestRealComparisonFunctions_Call_GE_y_LiteralUnlimitedNatural1347);
			fUML_Tests_TestRealComparisonFunctions_Call_LE.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(LE)", fUML_Tests_TestRealComparisonFunctions_Call_LE);
				fUML_Tests_TestRealComparisonFunctions_Call_LE_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestRealComparisonFunctions_Call_LE_result);
					fUML_Tests_TestRealComparisonFunctions_Call_LE_result_LiteralInteger1348.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1348", fUML_Tests_TestRealComparisonFunctions_Call_LE_result_LiteralInteger1348);
					fUML_Tests_TestRealComparisonFunctions_Call_LE_result_LiteralUnlimitedNatural1349.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1349", fUML_Tests_TestRealComparisonFunctions_Call_LE_result_LiteralUnlimitedNatural1349);
				fUML_Tests_TestRealComparisonFunctions_Call_LE_y.reset(new InputPin());
				this->addToElementRepository("y", fUML_Tests_TestRealComparisonFunctions_Call_LE_y);
					fUML_Tests_TestRealComparisonFunctions_Call_LE_y_LiteralInteger1350.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1350", fUML_Tests_TestRealComparisonFunctions_Call_LE_y_LiteralInteger1350);
					fUML_Tests_TestRealComparisonFunctions_Call_LE_y_LiteralUnlimitedNatural1351.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1351", fUML_Tests_TestRealComparisonFunctions_Call_LE_y_LiteralUnlimitedNatural1351);
				fUML_Tests_TestRealComparisonFunctions_Call_LE_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestRealComparisonFunctions_Call_LE_x);
					fUML_Tests_TestRealComparisonFunctions_Call_LE_x_LiteralInteger1352.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1352", fUML_Tests_TestRealComparisonFunctions_Call_LE_x_LiteralInteger1352);
					fUML_Tests_TestRealComparisonFunctions_Call_LE_x_LiteralUnlimitedNatural1353.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1353", fUML_Tests_TestRealComparisonFunctions_Call_LE_x_LiteralUnlimitedNatural1353);
			fUML_Tests_TestRealComparisonFunctions_GEResult.reset(new Parameter());
			this->addToElementRepository("GEResult", fUML_Tests_TestRealComparisonFunctions_GEResult);
			fUML_Tests_TestRealComparisonFunctions_Call_LT.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(LT)", fUML_Tests_TestRealComparisonFunctions_Call_LT);
				fUML_Tests_TestRealComparisonFunctions_Call_LT_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestRealComparisonFunctions_Call_LT_result);
					fUML_Tests_TestRealComparisonFunctions_Call_LT_result_LiteralInteger1354.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1354", fUML_Tests_TestRealComparisonFunctions_Call_LT_result_LiteralInteger1354);
					fUML_Tests_TestRealComparisonFunctions_Call_LT_result_LiteralUnlimitedNatural1355.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1355", fUML_Tests_TestRealComparisonFunctions_Call_LT_result_LiteralUnlimitedNatural1355);
				fUML_Tests_TestRealComparisonFunctions_Call_LT_y.reset(new InputPin());
				this->addToElementRepository("y", fUML_Tests_TestRealComparisonFunctions_Call_LT_y);
					fUML_Tests_TestRealComparisonFunctions_Call_LT_y_LiteralUnlimitedNatural1356.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1356", fUML_Tests_TestRealComparisonFunctions_Call_LT_y_LiteralUnlimitedNatural1356);
					fUML_Tests_TestRealComparisonFunctions_Call_LT_y_LiteralInteger1357.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1357", fUML_Tests_TestRealComparisonFunctions_Call_LT_y_LiteralInteger1357);
				fUML_Tests_TestRealComparisonFunctions_Call_LT_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestRealComparisonFunctions_Call_LT_x);
					fUML_Tests_TestRealComparisonFunctions_Call_LT_x_LiteralInteger1358.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1358", fUML_Tests_TestRealComparisonFunctions_Call_LT_x_LiteralInteger1358);
					fUML_Tests_TestRealComparisonFunctions_Call_LT_x_LiteralUnlimitedNatural1359.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1359", fUML_Tests_TestRealComparisonFunctions_Call_LT_x_LiteralUnlimitedNatural1359);
			fUML_Tests_TestRealComparisonFunctions_Call_GT.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(GT)", fUML_Tests_TestRealComparisonFunctions_Call_GT);
				fUML_Tests_TestRealComparisonFunctions_Call_GT_y.reset(new InputPin());
				this->addToElementRepository("y", fUML_Tests_TestRealComparisonFunctions_Call_GT_y);
					fUML_Tests_TestRealComparisonFunctions_Call_GT_y_LiteralUnlimitedNatural1360.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1360", fUML_Tests_TestRealComparisonFunctions_Call_GT_y_LiteralUnlimitedNatural1360);
					fUML_Tests_TestRealComparisonFunctions_Call_GT_y_LiteralInteger1361.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1361", fUML_Tests_TestRealComparisonFunctions_Call_GT_y_LiteralInteger1361);
				fUML_Tests_TestRealComparisonFunctions_Call_GT_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestRealComparisonFunctions_Call_GT_x);
					fUML_Tests_TestRealComparisonFunctions_Call_GT_x_LiteralInteger1362.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1362", fUML_Tests_TestRealComparisonFunctions_Call_GT_x_LiteralInteger1362);
					fUML_Tests_TestRealComparisonFunctions_Call_GT_x_LiteralUnlimitedNatural1363.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1363", fUML_Tests_TestRealComparisonFunctions_Call_GT_x_LiteralUnlimitedNatural1363);
				fUML_Tests_TestRealComparisonFunctions_Call_GT_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestRealComparisonFunctions_Call_GT_result);
					fUML_Tests_TestRealComparisonFunctions_Call_GT_result_LiteralInteger1364.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1364", fUML_Tests_TestRealComparisonFunctions_Call_GT_result_LiteralInteger1364);
					fUML_Tests_TestRealComparisonFunctions_Call_GT_result_LiteralUnlimitedNatural1365.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1365", fUML_Tests_TestRealComparisonFunctions_Call_GT_result_LiteralUnlimitedNatural1365);
			fUML_Tests_TestRealComparisonFunctions_GTResult.reset(new Parameter());
			this->addToElementRepository("GTResult", fUML_Tests_TestRealComparisonFunctions_GTResult);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1366.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1366", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1366);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1366_LiteralInteger1367.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1367", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1366_LiteralInteger1367);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1368.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1368", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1368);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1368_LiteralInteger1369.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1369", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1368_LiteralInteger1369);
			fUML_Tests_TestRealComparisonFunctions_Fork_2_0.reset(new ForkNode());
			this->addToElementRepository("Fork(2.0)", fUML_Tests_TestRealComparisonFunctions_Fork_2_0);
			fUML_Tests_TestRealComparisonFunctions_LTResult.reset(new Parameter());
			this->addToElementRepository("LTResult", fUML_Tests_TestRealComparisonFunctions_LTResult);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1370.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1370", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1370);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1370_LiteralInteger1371.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1371", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1370_LiteralInteger1371);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1372.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1372", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1372);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1372_LiteralInteger1373.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1373", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1372_LiteralInteger1373);
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1374.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1374", fUML_Tests_TestRealComparisonFunctions_ControlFlow1374);
				fUML_Tests_TestRealComparisonFunctions_ControlFlow1374_LiteralInteger1375.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1375", fUML_Tests_TestRealComparisonFunctions_ControlFlow1374_LiteralInteger1375);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1376.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1376", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1376);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1376_LiteralInteger1377.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1377", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1376_LiteralInteger1377);
			fUML_Tests_TestRealComparisonFunctions_Value_2_0.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2.0)", fUML_Tests_TestRealComparisonFunctions_Value_2_0);
				fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result.reset(new OutputPin());
				this->addToElementRepository("Value(2.0).result", fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result);
					fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result_LiteralInteger1378.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1378", fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result_LiteralInteger1378);
					fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result_LiteralUnlimitedNatural1379.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1379", fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result_LiteralUnlimitedNatural1379);
				fUML_Tests_TestRealComparisonFunctions_Value_2_0_LiteralReal1380.reset(new LiteralReal());
				this->addToElementRepository("LiteralReal1380", fUML_Tests_TestRealComparisonFunctions_Value_2_0_LiteralReal1380);
			fUML_Tests_TestRealComparisonFunctions_Param_GEResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(GEResult)", fUML_Tests_TestRealComparisonFunctions_Param_GEResult);
			fUML_Tests_TestRealComparisonFunctions_Param_GTResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(GTResult)", fUML_Tests_TestRealComparisonFunctions_Param_GTResult);
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1381.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1381", fUML_Tests_TestRealComparisonFunctions_ControlFlow1381);
				fUML_Tests_TestRealComparisonFunctions_ControlFlow1381_LiteralInteger1382.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1382", fUML_Tests_TestRealComparisonFunctions_ControlFlow1381_LiteralInteger1382);
			fUML_Tests_TestRealComparisonFunctions_LEResult.reset(new Parameter());
			this->addToElementRepository("LEResult", fUML_Tests_TestRealComparisonFunctions_LEResult);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1383.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1383", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1383);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1383_LiteralInteger1384.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1384", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1383_LiteralInteger1384);
			fUML_Tests_TestRealComparisonFunctions_Fork_3_0.reset(new ForkNode());
			this->addToElementRepository("Fork(3.0)", fUML_Tests_TestRealComparisonFunctions_Fork_3_0);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1385.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1385", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1385);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1385_LiteralInteger1386.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1386", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1385_LiteralInteger1386);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1387.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1387", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1387);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1387_LiteralInteger1388.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1388", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1387_LiteralInteger1388);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1389.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1389", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1389);
				fUML_Tests_TestRealComparisonFunctions_ObjectFlow1389_LiteralInteger1390.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1390", fUML_Tests_TestRealComparisonFunctions_ObjectFlow1389_LiteralInteger1390);
		fUML_Tests_ForkMerge.reset(new Activity());
		this->addToElementRepository("ForkMerge", fUML_Tests_ForkMerge);
			fUML_Tests_ForkMerge_ControlFlow1391.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1391", fUML_Tests_ForkMerge_ControlFlow1391);
				fUML_Tests_ForkMerge_ControlFlow1391_LiteralInteger1392.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1392", fUML_Tests_ForkMerge_ControlFlow1391_LiteralInteger1392);
			fUML_Tests_ForkMerge_ForkNode.reset(new ForkNode());
			this->addToElementRepository("ForkNode", fUML_Tests_ForkMerge_ForkNode);
			fUML_Tests_ForkMerge_MergeNode.reset(new MergeNode());
			this->addToElementRepository("MergeNode", fUML_Tests_ForkMerge_MergeNode);
			fUML_Tests_ForkMerge_InitialNode.reset(new InitialNode());
			this->addToElementRepository("InitialNode", fUML_Tests_ForkMerge_InitialNode);
			fUML_Tests_ForkMerge_ControlFlow1393.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1393", fUML_Tests_ForkMerge_ControlFlow1393);
				fUML_Tests_ForkMerge_ControlFlow1393_LiteralInteger1394.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1394", fUML_Tests_ForkMerge_ControlFlow1393_LiteralInteger1394);
			fUML_Tests_ForkMerge_Value_0.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(0)", fUML_Tests_ForkMerge_Value_0);
				fUML_Tests_ForkMerge_Value_0_LiteralInteger1395.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1395", fUML_Tests_ForkMerge_Value_0_LiteralInteger1395);
				fUML_Tests_ForkMerge_Value_0_Value_0_result.reset(new OutputPin());
				this->addToElementRepository("Value(0).result", fUML_Tests_ForkMerge_Value_0_Value_0_result);
					fUML_Tests_ForkMerge_Value_0_Value_0_result_LiteralInteger1396.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1396", fUML_Tests_ForkMerge_Value_0_Value_0_result_LiteralInteger1396);
					fUML_Tests_ForkMerge_Value_0_Value_0_result_LiteralUnlimitedNatural1397.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1397", fUML_Tests_ForkMerge_Value_0_Value_0_result_LiteralUnlimitedNatural1397);
			fUML_Tests_ForkMerge_output.reset(new Parameter());
			this->addToElementRepository("output", fUML_Tests_ForkMerge_output);
				fUML_Tests_ForkMerge_output_LiteralUnlimitedNatural1398.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1398", fUML_Tests_ForkMerge_output_LiteralUnlimitedNatural1398);
				fUML_Tests_ForkMerge_output_LiteralUnlimitedNatural1399.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1399", fUML_Tests_ForkMerge_output_LiteralUnlimitedNatural1399);
			fUML_Tests_ForkMerge_OutputNode.reset(new ActivityParameterNode());
			this->addToElementRepository("OutputNode", fUML_Tests_ForkMerge_OutputNode);
			fUML_Tests_ForkMerge_ObjectFlow1400.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1400", fUML_Tests_ForkMerge_ObjectFlow1400);
				fUML_Tests_ForkMerge_ObjectFlow1400_LiteralInteger1401.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1401", fUML_Tests_ForkMerge_ObjectFlow1400_LiteralInteger1401);
			fUML_Tests_ForkMerge_ControlFlow1402.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1402", fUML_Tests_ForkMerge_ControlFlow1402);
				fUML_Tests_ForkMerge_ControlFlow1402_LiteralInteger1403.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1403", fUML_Tests_ForkMerge_ControlFlow1402_LiteralInteger1403);
			fUML_Tests_ForkMerge_ControlFlow1404.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1404", fUML_Tests_ForkMerge_ControlFlow1404);
				fUML_Tests_ForkMerge_ControlFlow1404_LiteralInteger1405.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1405", fUML_Tests_ForkMerge_ControlFlow1404_LiteralInteger1405);
		fUML_Tests_TestCentralBuffer.reset(new Activity());
		this->addToElementRepository("TestCentralBuffer", fUML_Tests_TestCentralBuffer);
			fUML_Tests_TestCentralBuffer_ControlFlow1406.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1406", fUML_Tests_TestCentralBuffer_ControlFlow1406);
				fUML_Tests_TestCentralBuffer_ControlFlow1406_LiteralUnlimitedNatural1407.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1407", fUML_Tests_TestCentralBuffer_ControlFlow1406_LiteralUnlimitedNatural1407);
			fUML_Tests_TestCentralBuffer_ObjectFlow1408.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1408", fUML_Tests_TestCentralBuffer_ObjectFlow1408);
				fUML_Tests_TestCentralBuffer_ObjectFlow1408_LiteralUnlimitedNatural1409.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1409", fUML_Tests_TestCentralBuffer_ObjectFlow1408_LiteralUnlimitedNatural1409);
			fUML_Tests_TestCentralBuffer_Parameter_input2.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(input2)", fUML_Tests_TestCentralBuffer_Parameter_input2);
			fUML_Tests_TestCentralBuffer_input1.reset(new Parameter());
			this->addToElementRepository("input1", fUML_Tests_TestCentralBuffer_input1);
			fUML_Tests_TestCentralBuffer_Parameter_output.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(output)", fUML_Tests_TestCentralBuffer_Parameter_output);
			fUML_Tests_TestCentralBuffer_output.reset(new Parameter());
			this->addToElementRepository("output", fUML_Tests_TestCentralBuffer_output);
				fUML_Tests_TestCentralBuffer_output_LiteralUnlimitedNatural1410.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1410", fUML_Tests_TestCentralBuffer_output_LiteralUnlimitedNatural1410);
				fUML_Tests_TestCentralBuffer_output_LiteralInteger1411.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1411", fUML_Tests_TestCentralBuffer_output_LiteralInteger1411);
			fUML_Tests_TestCentralBuffer_StructuredActivityNode.reset(new StructuredActivityNode());
			this->addToElementRepository("StructuredActivityNode", fUML_Tests_TestCentralBuffer_StructuredActivityNode);
				fUML_Tests_TestCentralBuffer_StructuredActivityNode_CentralBufferNode.reset(new CentralBufferNode());
				this->addToElementRepository("CentralBufferNode", fUML_Tests_TestCentralBuffer_StructuredActivityNode_CentralBufferNode);
			fUML_Tests_TestCentralBuffer_InitialNode.reset(new InitialNode());
			this->addToElementRepository("InitialNode", fUML_Tests_TestCentralBuffer_InitialNode);
			fUML_Tests_TestCentralBuffer_ObjectFlow1412.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1412", fUML_Tests_TestCentralBuffer_ObjectFlow1412);
				fUML_Tests_TestCentralBuffer_ObjectFlow1412_LiteralUnlimitedNatural1413.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1413", fUML_Tests_TestCentralBuffer_ObjectFlow1412_LiteralUnlimitedNatural1413);
			fUML_Tests_TestCentralBuffer_Parameter_input1.reset(new ActivityParameterNode());
			this->addToElementRepository("Parameter(input1)", fUML_Tests_TestCentralBuffer_Parameter_input1);
			fUML_Tests_TestCentralBuffer_input2.reset(new Parameter());
			this->addToElementRepository("input2", fUML_Tests_TestCentralBuffer_input2);
			fUML_Tests_TestCentralBuffer_ObjectFlow1414.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1414", fUML_Tests_TestCentralBuffer_ObjectFlow1414);
				fUML_Tests_TestCentralBuffer_ObjectFlow1414_LiteralUnlimitedNatural1415.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1415", fUML_Tests_TestCentralBuffer_ObjectFlow1414_LiteralUnlimitedNatural1415);
		fUML_Tests_TestBooleanFunctions.reset(new Activity());
		this->addToElementRepository("TestBooleanFunctions", fUML_Tests_TestBooleanFunctions);
			fUML_Tests_TestBooleanFunctions_Param_OrResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(OrResult)", fUML_Tests_TestBooleanFunctions_Param_OrResult);
			fUML_Tests_TestBooleanFunctions_Call_Xor.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Xor)", fUML_Tests_TestBooleanFunctions_Call_Xor);
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y.reset(new InputPin());
				this->addToElementRepository("Xor.y", fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y);
					fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y_LiteralUnlimitedNatural1416.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1416", fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y_LiteralUnlimitedNatural1416);
					fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y_LiteralInteger1417.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1417", fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y_LiteralInteger1417);
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x.reset(new InputPin());
				this->addToElementRepository("Xor.x", fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x);
					fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x_LiteralInteger1418.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1418", fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x_LiteralInteger1418);
					fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x_LiteralUnlimitedNatural1419.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1419", fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x_LiteralUnlimitedNatural1419);
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result.reset(new OutputPin());
				this->addToElementRepository("Xor.result", fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result);
					fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result_LiteralUnlimitedNatural1420.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1420", fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result_LiteralUnlimitedNatural1420);
					fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result_LiteralInteger1421.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1421", fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result_LiteralInteger1421);
			fUML_Tests_TestBooleanFunctions_ControlFlow1422.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1422", fUML_Tests_TestBooleanFunctions_ControlFlow1422);
				fUML_Tests_TestBooleanFunctions_ControlFlow1422_LiteralInteger1423.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1423", fUML_Tests_TestBooleanFunctions_ControlFlow1422_LiteralInteger1423);
			fUML_Tests_TestBooleanFunctions_Param_NotResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(NotResult)", fUML_Tests_TestBooleanFunctions_Param_NotResult);
			fUML_Tests_TestBooleanFunctions_NotResult.reset(new Parameter());
			this->addToElementRepository("NotResult", fUML_Tests_TestBooleanFunctions_NotResult);
				fUML_Tests_TestBooleanFunctions_NotResult_LiteralUnlimitedNatural1424.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1424", fUML_Tests_TestBooleanFunctions_NotResult_LiteralUnlimitedNatural1424);
				fUML_Tests_TestBooleanFunctions_NotResult_LiteralUnlimitedNatural1425.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1425", fUML_Tests_TestBooleanFunctions_NotResult_LiteralUnlimitedNatural1425);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1426.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1426", fUML_Tests_TestBooleanFunctions_ObjectFlow1426);
				fUML_Tests_TestBooleanFunctions_ObjectFlow1426_LiteralInteger1427.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1427", fUML_Tests_TestBooleanFunctions_ObjectFlow1426_LiteralInteger1427);
			fUML_Tests_TestBooleanFunctions_Call_Or.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Or)", fUML_Tests_TestBooleanFunctions_Call_Or);
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_x.reset(new InputPin());
				this->addToElementRepository("Or.x", fUML_Tests_TestBooleanFunctions_Call_Or_Or_x);
					fUML_Tests_TestBooleanFunctions_Call_Or_Or_x_LiteralUnlimitedNatural1428.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1428", fUML_Tests_TestBooleanFunctions_Call_Or_Or_x_LiteralUnlimitedNatural1428);
					fUML_Tests_TestBooleanFunctions_Call_Or_Or_x_LiteralInteger1429.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1429", fUML_Tests_TestBooleanFunctions_Call_Or_Or_x_LiteralInteger1429);
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_result.reset(new OutputPin());
				this->addToElementRepository("Or.result", fUML_Tests_TestBooleanFunctions_Call_Or_Or_result);
					fUML_Tests_TestBooleanFunctions_Call_Or_Or_result_LiteralUnlimitedNatural1430.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1430", fUML_Tests_TestBooleanFunctions_Call_Or_Or_result_LiteralUnlimitedNatural1430);
					fUML_Tests_TestBooleanFunctions_Call_Or_Or_result_LiteralInteger1431.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1431", fUML_Tests_TestBooleanFunctions_Call_Or_Or_result_LiteralInteger1431);
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_y.reset(new InputPin());
				this->addToElementRepository("Or.y", fUML_Tests_TestBooleanFunctions_Call_Or_Or_y);
					fUML_Tests_TestBooleanFunctions_Call_Or_Or_y_LiteralUnlimitedNatural1432.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1432", fUML_Tests_TestBooleanFunctions_Call_Or_Or_y_LiteralUnlimitedNatural1432);
					fUML_Tests_TestBooleanFunctions_Call_Or_Or_y_LiteralInteger1433.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1433", fUML_Tests_TestBooleanFunctions_Call_Or_Or_y_LiteralInteger1433);
			fUML_Tests_TestBooleanFunctions_ControlFlow1434.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1434", fUML_Tests_TestBooleanFunctions_ControlFlow1434);
				fUML_Tests_TestBooleanFunctions_ControlFlow1434_LiteralInteger1435.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1435", fUML_Tests_TestBooleanFunctions_ControlFlow1434_LiteralInteger1435);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1436.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1436", fUML_Tests_TestBooleanFunctions_ObjectFlow1436);
				fUML_Tests_TestBooleanFunctions_ObjectFlow1436_LiteralInteger1437.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1437", fUML_Tests_TestBooleanFunctions_ObjectFlow1436_LiteralInteger1437);
			fUML_Tests_TestBooleanFunctions_ControlFlow1438.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1438", fUML_Tests_TestBooleanFunctions_ControlFlow1438);
				fUML_Tests_TestBooleanFunctions_ControlFlow1438_LiteralInteger1439.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1439", fUML_Tests_TestBooleanFunctions_ControlFlow1438_LiteralInteger1439);
			fUML_Tests_TestBooleanFunctions_AndResult.reset(new Parameter());
			this->addToElementRepository("AndResult", fUML_Tests_TestBooleanFunctions_AndResult);
				fUML_Tests_TestBooleanFunctions_AndResult_LiteralUnlimitedNatural1440.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1440", fUML_Tests_TestBooleanFunctions_AndResult_LiteralUnlimitedNatural1440);
				fUML_Tests_TestBooleanFunctions_AndResult_LiteralUnlimitedNatural1441.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1441", fUML_Tests_TestBooleanFunctions_AndResult_LiteralUnlimitedNatural1441);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1442.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1442", fUML_Tests_TestBooleanFunctions_ObjectFlow1442);
				fUML_Tests_TestBooleanFunctions_ObjectFlow1442_LiteralInteger1443.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1443", fUML_Tests_TestBooleanFunctions_ObjectFlow1442_LiteralInteger1443);
			fUML_Tests_TestBooleanFunctions_Value_true.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(true)", fUML_Tests_TestBooleanFunctions_Value_true);
				fUML_Tests_TestBooleanFunctions_Value_true_LiteralBoolean1444.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1444", fUML_Tests_TestBooleanFunctions_Value_true_LiteralBoolean1444);
				fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result.reset(new OutputPin());
				this->addToElementRepository("Value(true).result", fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result);
					fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result_LiteralInteger1445.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1445", fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result_LiteralInteger1445);
					fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result_LiteralUnlimitedNatural1446.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1446", fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result_LiteralUnlimitedNatural1446);
			fUML_Tests_TestBooleanFunctions_OrResult.reset(new Parameter());
			this->addToElementRepository("OrResult", fUML_Tests_TestBooleanFunctions_OrResult);
				fUML_Tests_TestBooleanFunctions_OrResult_LiteralUnlimitedNatural1447.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1447", fUML_Tests_TestBooleanFunctions_OrResult_LiteralUnlimitedNatural1447);
				fUML_Tests_TestBooleanFunctions_OrResult_LiteralUnlimitedNatural1448.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1448", fUML_Tests_TestBooleanFunctions_OrResult_LiteralUnlimitedNatural1448);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1449.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1449", fUML_Tests_TestBooleanFunctions_ObjectFlow1449);
				fUML_Tests_TestBooleanFunctions_ObjectFlow1449_LiteralInteger1450.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1450", fUML_Tests_TestBooleanFunctions_ObjectFlow1449_LiteralInteger1450);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1451.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1451", fUML_Tests_TestBooleanFunctions_ObjectFlow1451);
				fUML_Tests_TestBooleanFunctions_ObjectFlow1451_LiteralInteger1452.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1452", fUML_Tests_TestBooleanFunctions_ObjectFlow1451_LiteralInteger1452);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1453.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1453", fUML_Tests_TestBooleanFunctions_ObjectFlow1453);
				fUML_Tests_TestBooleanFunctions_ObjectFlow1453_LiteralInteger1454.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1454", fUML_Tests_TestBooleanFunctions_ObjectFlow1453_LiteralInteger1454);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1455.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1455", fUML_Tests_TestBooleanFunctions_ObjectFlow1455);
				fUML_Tests_TestBooleanFunctions_ObjectFlow1455_LiteralInteger1456.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1456", fUML_Tests_TestBooleanFunctions_ObjectFlow1455_LiteralInteger1456);
			fUML_Tests_TestBooleanFunctions_Call_Not.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Not)", fUML_Tests_TestBooleanFunctions_Call_Not);
				fUML_Tests_TestBooleanFunctions_Call_Not_Not_x.reset(new InputPin());
				this->addToElementRepository("Not.x", fUML_Tests_TestBooleanFunctions_Call_Not_Not_x);
					fUML_Tests_TestBooleanFunctions_Call_Not_Not_x_LiteralUnlimitedNatural1457.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1457", fUML_Tests_TestBooleanFunctions_Call_Not_Not_x_LiteralUnlimitedNatural1457);
					fUML_Tests_TestBooleanFunctions_Call_Not_Not_x_LiteralInteger1458.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1458", fUML_Tests_TestBooleanFunctions_Call_Not_Not_x_LiteralInteger1458);
				fUML_Tests_TestBooleanFunctions_Call_Not_Not_result.reset(new OutputPin());
				this->addToElementRepository("Not.result", fUML_Tests_TestBooleanFunctions_Call_Not_Not_result);
					fUML_Tests_TestBooleanFunctions_Call_Not_Not_result_LiteralUnlimitedNatural1459.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1459", fUML_Tests_TestBooleanFunctions_Call_Not_Not_result_LiteralUnlimitedNatural1459);
					fUML_Tests_TestBooleanFunctions_Call_Not_Not_result_LiteralInteger1460.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1460", fUML_Tests_TestBooleanFunctions_Call_Not_Not_result_LiteralInteger1460);
			fUML_Tests_TestBooleanFunctions_ControlFlow1461.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1461", fUML_Tests_TestBooleanFunctions_ControlFlow1461);
				fUML_Tests_TestBooleanFunctions_ControlFlow1461_LiteralInteger1462.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1462", fUML_Tests_TestBooleanFunctions_ControlFlow1461_LiteralInteger1462);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1463.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1463", fUML_Tests_TestBooleanFunctions_ObjectFlow1463);
				fUML_Tests_TestBooleanFunctions_ObjectFlow1463_LiteralInteger1464.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1464", fUML_Tests_TestBooleanFunctions_ObjectFlow1463_LiteralInteger1464);
			fUML_Tests_TestBooleanFunctions_GenData2.reset(new CallBehaviorAction());
			this->addToElementRepository("GenData2", fUML_Tests_TestBooleanFunctions_GenData2);
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1.reset(new OutputPin());
				this->addToElementRepository("GenData2.argumentData1", fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1);
					fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1_LiteralInteger1465.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1465", fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1_LiteralInteger1465);
					fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1_LiteralUnlimitedNatural1466.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1466", fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1_LiteralUnlimitedNatural1466);
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2.reset(new OutputPin());
				this->addToElementRepository("GenData2.argumentData2", fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2);
					fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2_LiteralInteger1467.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1467", fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2_LiteralInteger1467);
					fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2_LiteralUnlimitedNatural1468.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1468", fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2_LiteralUnlimitedNatural1468);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1469.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1469", fUML_Tests_TestBooleanFunctions_ObjectFlow1469);
				fUML_Tests_TestBooleanFunctions_ObjectFlow1469_LiteralInteger1470.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1470", fUML_Tests_TestBooleanFunctions_ObjectFlow1469_LiteralInteger1470);
			fUML_Tests_TestBooleanFunctions_Param_AndResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(AndResult)", fUML_Tests_TestBooleanFunctions_Param_AndResult);
			fUML_Tests_TestBooleanFunctions_Call_And.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(And)", fUML_Tests_TestBooleanFunctions_Call_And);
				fUML_Tests_TestBooleanFunctions_Call_And_And_result.reset(new OutputPin());
				this->addToElementRepository("And.result", fUML_Tests_TestBooleanFunctions_Call_And_And_result);
					fUML_Tests_TestBooleanFunctions_Call_And_And_result_LiteralUnlimitedNatural1471.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1471", fUML_Tests_TestBooleanFunctions_Call_And_And_result_LiteralUnlimitedNatural1471);
					fUML_Tests_TestBooleanFunctions_Call_And_And_result_LiteralInteger1472.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1472", fUML_Tests_TestBooleanFunctions_Call_And_And_result_LiteralInteger1472);
				fUML_Tests_TestBooleanFunctions_Call_And_And_y.reset(new InputPin());
				this->addToElementRepository("And.y", fUML_Tests_TestBooleanFunctions_Call_And_And_y);
					fUML_Tests_TestBooleanFunctions_Call_And_And_y_LiteralInteger1473.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1473", fUML_Tests_TestBooleanFunctions_Call_And_And_y_LiteralInteger1473);
					fUML_Tests_TestBooleanFunctions_Call_And_And_y_LiteralUnlimitedNatural1474.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1474", fUML_Tests_TestBooleanFunctions_Call_And_And_y_LiteralUnlimitedNatural1474);
				fUML_Tests_TestBooleanFunctions_Call_And_And_x.reset(new InputPin());
				this->addToElementRepository("And.x", fUML_Tests_TestBooleanFunctions_Call_And_And_x);
					fUML_Tests_TestBooleanFunctions_Call_And_And_x_LiteralUnlimitedNatural1475.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1475", fUML_Tests_TestBooleanFunctions_Call_And_And_x_LiteralUnlimitedNatural1475);
					fUML_Tests_TestBooleanFunctions_Call_And_And_x_LiteralInteger1476.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1476", fUML_Tests_TestBooleanFunctions_Call_And_And_x_LiteralInteger1476);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1477.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1477", fUML_Tests_TestBooleanFunctions_ObjectFlow1477);
				fUML_Tests_TestBooleanFunctions_ObjectFlow1477_LiteralInteger1478.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1478", fUML_Tests_TestBooleanFunctions_ObjectFlow1477_LiteralInteger1478);
			fUML_Tests_TestBooleanFunctions_ControlFlow1479.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1479", fUML_Tests_TestBooleanFunctions_ControlFlow1479);
				fUML_Tests_TestBooleanFunctions_ControlFlow1479_LiteralInteger1480.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1480", fUML_Tests_TestBooleanFunctions_ControlFlow1479_LiteralInteger1480);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1481.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1481", fUML_Tests_TestBooleanFunctions_ObjectFlow1481);
				fUML_Tests_TestBooleanFunctions_ObjectFlow1481_LiteralInteger1482.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1482", fUML_Tests_TestBooleanFunctions_ObjectFlow1481_LiteralInteger1482);
			fUML_Tests_TestBooleanFunctions_Value_false.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(false)", fUML_Tests_TestBooleanFunctions_Value_false);
				fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result.reset(new OutputPin());
				this->addToElementRepository("Value(false).result", fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result);
					fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result_LiteralInteger1483.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1483", fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result_LiteralInteger1483);
					fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result_LiteralUnlimitedNatural1484.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1484", fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result_LiteralUnlimitedNatural1484);
				fUML_Tests_TestBooleanFunctions_Value_false_LiteralBoolean1485.reset(new LiteralBoolean());
				this->addToElementRepository("LiteralBoolean1485", fUML_Tests_TestBooleanFunctions_Value_false_LiteralBoolean1485);
			fUML_Tests_TestBooleanFunctions_Param_ImpliesResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(ImpliesResult)", fUML_Tests_TestBooleanFunctions_Param_ImpliesResult);
			fUML_Tests_TestBooleanFunctions_GenData1.reset(new CallBehaviorAction());
			this->addToElementRepository("GenData1", fUML_Tests_TestBooleanFunctions_GenData1);
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2.reset(new OutputPin());
				this->addToElementRepository("GenData1.argumentData2", fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2);
					fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2_LiteralUnlimitedNatural1486.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1486", fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2_LiteralUnlimitedNatural1486);
					fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2_LiteralInteger1487.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1487", fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2_LiteralInteger1487);
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1.reset(new OutputPin());
				this->addToElementRepository("GenData1.argumentData1", fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1);
					fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1_LiteralInteger1488.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1488", fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1_LiteralInteger1488);
					fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1_LiteralUnlimitedNatural1489.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1489", fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1_LiteralUnlimitedNatural1489);
			fUML_Tests_TestBooleanFunctions_ImpliesResult.reset(new Parameter());
			this->addToElementRepository("ImpliesResult", fUML_Tests_TestBooleanFunctions_ImpliesResult);
				fUML_Tests_TestBooleanFunctions_ImpliesResult_LiteralUnlimitedNatural1490.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1490", fUML_Tests_TestBooleanFunctions_ImpliesResult_LiteralUnlimitedNatural1490);
				fUML_Tests_TestBooleanFunctions_ImpliesResult_LiteralUnlimitedNatural1491.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1491", fUML_Tests_TestBooleanFunctions_ImpliesResult_LiteralUnlimitedNatural1491);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1492.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1492", fUML_Tests_TestBooleanFunctions_ObjectFlow1492);
				fUML_Tests_TestBooleanFunctions_ObjectFlow1492_LiteralInteger1493.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1493", fUML_Tests_TestBooleanFunctions_ObjectFlow1492_LiteralInteger1493);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1494.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1494", fUML_Tests_TestBooleanFunctions_ObjectFlow1494);
				fUML_Tests_TestBooleanFunctions_ObjectFlow1494_LiteralInteger1495.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1495", fUML_Tests_TestBooleanFunctions_ObjectFlow1494_LiteralInteger1495);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1496.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1496", fUML_Tests_TestBooleanFunctions_ObjectFlow1496);
				fUML_Tests_TestBooleanFunctions_ObjectFlow1496_LiteralInteger1497.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1497", fUML_Tests_TestBooleanFunctions_ObjectFlow1496_LiteralInteger1497);
			fUML_Tests_TestBooleanFunctions_GenData4.reset(new CallBehaviorAction());
			this->addToElementRepository("GenData4", fUML_Tests_TestBooleanFunctions_GenData4);
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1.reset(new OutputPin());
				this->addToElementRepository("GenData4.argumentData1", fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1);
					fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1_LiteralInteger1498.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1498", fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1_LiteralInteger1498);
					fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1_LiteralUnlimitedNatural1499.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1499", fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1_LiteralUnlimitedNatural1499);
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2.reset(new OutputPin());
				this->addToElementRepository("GenData4.argumentData2", fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2);
					fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2_LiteralUnlimitedNatural1500.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1500", fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2_LiteralUnlimitedNatural1500);
					fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2_LiteralInteger1501.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1501", fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2_LiteralInteger1501);
			fUML_Tests_TestBooleanFunctions_Call_Implies.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Implies)", fUML_Tests_TestBooleanFunctions_Call_Implies);
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x.reset(new InputPin());
				this->addToElementRepository("Implies.x", fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x);
					fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x_LiteralInteger1502.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1502", fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x_LiteralInteger1502);
					fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x_LiteralUnlimitedNatural1503.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1503", fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x_LiteralUnlimitedNatural1503);
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y.reset(new InputPin());
				this->addToElementRepository("Implies.y", fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y);
					fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y_LiteralInteger1504.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1504", fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y_LiteralInteger1504);
					fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y_LiteralUnlimitedNatural1505.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1505", fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y_LiteralUnlimitedNatural1505);
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result.reset(new OutputPin());
				this->addToElementRepository("Implies.result", fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result);
					fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result_LiteralUnlimitedNatural1506.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1506", fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result_LiteralUnlimitedNatural1506);
					fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result_LiteralInteger1507.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1507", fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result_LiteralInteger1507);
			fUML_Tests_TestBooleanFunctions_XorResult.reset(new Parameter());
			this->addToElementRepository("XorResult", fUML_Tests_TestBooleanFunctions_XorResult);
				fUML_Tests_TestBooleanFunctions_XorResult_LiteralUnlimitedNatural1508.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1508", fUML_Tests_TestBooleanFunctions_XorResult_LiteralUnlimitedNatural1508);
				fUML_Tests_TestBooleanFunctions_XorResult_LiteralUnlimitedNatural1509.reset(new LiteralUnlimitedNatural());
				this->addToElementRepository("LiteralUnlimitedNatural1509", fUML_Tests_TestBooleanFunctions_XorResult_LiteralUnlimitedNatural1509);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1510.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1510", fUML_Tests_TestBooleanFunctions_ObjectFlow1510);
				fUML_Tests_TestBooleanFunctions_ObjectFlow1510_LiteralInteger1511.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1511", fUML_Tests_TestBooleanFunctions_ObjectFlow1510_LiteralInteger1511);
			fUML_Tests_TestBooleanFunctions_Param_XorResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(XorResult)", fUML_Tests_TestBooleanFunctions_Param_XorResult);
			fUML_Tests_TestBooleanFunctions_GenData3.reset(new CallBehaviorAction());
			this->addToElementRepository("GenData3", fUML_Tests_TestBooleanFunctions_GenData3);
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1.reset(new OutputPin());
				this->addToElementRepository("GenData3.argumentData1", fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1);
					fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1_LiteralUnlimitedNatural1512.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1512", fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1_LiteralUnlimitedNatural1512);
					fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1_LiteralInteger1513.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1513", fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1_LiteralInteger1513);
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2.reset(new OutputPin());
				this->addToElementRepository("GenData3.argumentData2", fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2);
					fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2_LiteralInteger1514.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1514", fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2_LiteralInteger1514);
					fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2_LiteralUnlimitedNatural1515.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1515", fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2_LiteralUnlimitedNatural1515);
		fUML_Tests_TestIntegerComparisonFunctions.reset(new Activity());
		this->addToElementRepository("TestIntegerComparisonFunctions", fUML_Tests_TestIntegerComparisonFunctions);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LT.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(LT)", fUML_Tests_TestIntegerComparisonFunctions_Call_LT);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x.reset(new InputPin());
				this->addToElementRepository("LT.x", fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x_LiteralUnlimitedNatural1516.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1516", fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x_LiteralUnlimitedNatural1516);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x_LiteralInteger1517.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1517", fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x_LiteralInteger1517);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result.reset(new OutputPin());
				this->addToElementRepository("LT.result", fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result_LiteralInteger1518.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1518", fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result_LiteralInteger1518);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result_LiteralUnlimitedNatural1519.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1519", fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result_LiteralUnlimitedNatural1519);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y.reset(new InputPin());
				this->addToElementRepository("LT.y", fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y_LiteralInteger1520.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1520", fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y_LiteralInteger1520);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y_LiteralUnlimitedNatural1521.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1521", fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y_LiteralUnlimitedNatural1521);
			fUML_Tests_TestIntegerComparisonFunctions_GTResult.reset(new Parameter());
			this->addToElementRepository("GTResult", fUML_Tests_TestIntegerComparisonFunctions_GTResult);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GE.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(GE)", fUML_Tests_TestIntegerComparisonFunctions_Call_GE);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y.reset(new InputPin());
				this->addToElementRepository("GE.y", fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y_LiteralInteger1522.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1522", fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y_LiteralInteger1522);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y_LiteralUnlimitedNatural1523.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1523", fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y_LiteralUnlimitedNatural1523);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x.reset(new InputPin());
				this->addToElementRepository("GE.x", fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x_LiteralUnlimitedNatural1524.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1524", fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x_LiteralUnlimitedNatural1524);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x_LiteralInteger1525.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1525", fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x_LiteralInteger1525);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result.reset(new OutputPin());
				this->addToElementRepository("GE.result", fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result_LiteralUnlimitedNatural1526.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1526", fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result_LiteralUnlimitedNatural1526);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result_LiteralInteger1527.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1527", fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result_LiteralInteger1527);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1528.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1528", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1528);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1528_LiteralInteger1529.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1529", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1528_LiteralInteger1529);
			fUML_Tests_TestIntegerComparisonFunctions_Param_GEResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(GEResult)", fUML_Tests_TestIntegerComparisonFunctions_Param_GEResult);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1530.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1530", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1530);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1530_LiteralInteger1531.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1531", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1530_LiteralInteger1531);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1532.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1532", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1532);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1532_LiteralInteger1533.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1533", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1532_LiteralInteger1533);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1534.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1534", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1534);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1534_LiteralInteger1535.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1535", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1534_LiteralInteger1535);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1536.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1536", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1536);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1536_LiteralInteger1537.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1537", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1536_LiteralInteger1537);
			fUML_Tests_TestIntegerComparisonFunctions_Param_LEResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(LEResult)", fUML_Tests_TestIntegerComparisonFunctions_Param_LEResult);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1538.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1538", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1538);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1538_LiteralInteger1539.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1539", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1538_LiteralInteger1539);
			fUML_Tests_TestIntegerComparisonFunctions_Param_LTResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(LTResult)", fUML_Tests_TestIntegerComparisonFunctions_Param_LTResult);
			fUML_Tests_TestIntegerComparisonFunctions_LTResult.reset(new Parameter());
			this->addToElementRepository("LTResult", fUML_Tests_TestIntegerComparisonFunctions_LTResult);
			fUML_Tests_TestIntegerComparisonFunctions_Value_3.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(3)", fUML_Tests_TestIntegerComparisonFunctions_Value_3);
				fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result.reset(new OutputPin());
				this->addToElementRepository("Value(3).result", fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result);
					fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result_LiteralUnlimitedNatural1540.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1540", fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result_LiteralUnlimitedNatural1540);
					fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result_LiteralInteger1541.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1541", fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result_LiteralInteger1541);
				fUML_Tests_TestIntegerComparisonFunctions_Value_3_LiteralInteger1542.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1542", fUML_Tests_TestIntegerComparisonFunctions_Value_3_LiteralInteger1542);
			fUML_Tests_TestIntegerComparisonFunctions_Fork_2.reset(new ForkNode());
			this->addToElementRepository("Fork(2)", fUML_Tests_TestIntegerComparisonFunctions_Fork_2);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LE.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(LE)", fUML_Tests_TestIntegerComparisonFunctions_Call_LE);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y.reset(new InputPin());
				this->addToElementRepository("LE.y", fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y_LiteralUnlimitedNatural1543.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1543", fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y_LiteralUnlimitedNatural1543);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y_LiteralInteger1544.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1544", fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y_LiteralInteger1544);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x.reset(new InputPin());
				this->addToElementRepository("LE.x", fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x_LiteralUnlimitedNatural1545.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1545", fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x_LiteralUnlimitedNatural1545);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x_LiteralInteger1546.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1546", fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x_LiteralInteger1546);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result.reset(new OutputPin());
				this->addToElementRepository("LE.result", fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result_LiteralUnlimitedNatural1547.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1547", fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result_LiteralUnlimitedNatural1547);
					fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result_LiteralInteger1548.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1548", fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result_LiteralInteger1548);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GT.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(GT)", fUML_Tests_TestIntegerComparisonFunctions_Call_GT);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y.reset(new InputPin());
				this->addToElementRepository("GT.y", fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y_LiteralUnlimitedNatural1549.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1549", fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y_LiteralUnlimitedNatural1549);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y_LiteralInteger1550.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1550", fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y_LiteralInteger1550);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result.reset(new OutputPin());
				this->addToElementRepository("GT.result", fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result_LiteralUnlimitedNatural1551.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1551", fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result_LiteralUnlimitedNatural1551);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result_LiteralInteger1552.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1552", fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result_LiteralInteger1552);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x.reset(new InputPin());
				this->addToElementRepository("GT.x", fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x_LiteralUnlimitedNatural1553.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1553", fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x_LiteralUnlimitedNatural1553);
					fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x_LiteralInteger1554.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1554", fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x_LiteralInteger1554);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1555.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1555", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1555);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1555_LiteralInteger1556.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1556", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1555_LiteralInteger1556);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1557.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1557", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1557);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1557_LiteralInteger1558.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1558", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1557_LiteralInteger1558);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1559.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1559", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1559);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1559_LiteralInteger1560.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1560", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1559_LiteralInteger1560);
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1561.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1561", fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1561);
				fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1561_LiteralInteger1562.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1562", fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1561_LiteralInteger1562);
			fUML_Tests_TestIntegerComparisonFunctions_GEResult.reset(new Parameter());
			this->addToElementRepository("GEResult", fUML_Tests_TestIntegerComparisonFunctions_GEResult);
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1563.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1563", fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1563);
				fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1563_LiteralInteger1564.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1564", fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1563_LiteralInteger1564);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1565.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1565", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1565);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1565_LiteralInteger1566.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1566", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1565_LiteralInteger1566);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1567.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1567", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1567);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1567_LiteralInteger1568.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1568", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1567_LiteralInteger1568);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1569.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1569", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1569);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1569_LiteralInteger1570.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1570", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1569_LiteralInteger1570);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1571.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1571", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1571);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1571_LiteralInteger1572.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1572", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1571_LiteralInteger1572);
			fUML_Tests_TestIntegerComparisonFunctions_Value_2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2)", fUML_Tests_TestIntegerComparisonFunctions_Value_2);
				fUML_Tests_TestIntegerComparisonFunctions_Value_2_LiteralInteger1573.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1573", fUML_Tests_TestIntegerComparisonFunctions_Value_2_LiteralInteger1573);
				fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result.reset(new OutputPin());
				this->addToElementRepository("Value(2).result", fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result);
					fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result_LiteralInteger1574.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1574", fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result_LiteralInteger1574);
					fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result_LiteralUnlimitedNatural1575.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1575", fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result_LiteralUnlimitedNatural1575);
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1576.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1576", fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1576);
				fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1576_LiteralInteger1577.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1577", fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1576_LiteralInteger1577);
			fUML_Tests_TestIntegerComparisonFunctions_LEResult.reset(new Parameter());
			this->addToElementRepository("LEResult", fUML_Tests_TestIntegerComparisonFunctions_LEResult);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1578.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1578", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1578);
				fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1578_LiteralInteger1579.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1579", fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1578_LiteralInteger1579);
			fUML_Tests_TestIntegerComparisonFunctions_Fork_3.reset(new ForkNode());
			this->addToElementRepository("Fork(3)", fUML_Tests_TestIntegerComparisonFunctions_Fork_3);
			fUML_Tests_TestIntegerComparisonFunctions_Param_GTResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(GTResult)", fUML_Tests_TestIntegerComparisonFunctions_Param_GTResult);
		fUML_Tests_General.reset(new Class_());
		this->addToElementRepository("General", fUML_Tests_General);
			fUML_Tests_General_y.reset(new Property());
			this->addToElementRepository("y", fUML_Tests_General_y);
		fUML_Tests_TestIntegerFunctions.reset(new Activity());
		this->addToElementRepository("TestIntegerFunctions", fUML_Tests_TestIntegerFunctions);
			fUML_Tests_TestIntegerFunctions_Value_2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(2)", fUML_Tests_TestIntegerFunctions_Value_2);
				fUML_Tests_TestIntegerFunctions_Value_2_LiteralInteger1580.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1580", fUML_Tests_TestIntegerFunctions_Value_2_LiteralInteger1580);
				fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result.reset(new OutputPin());
				this->addToElementRepository("Value(2).result", fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result);
					fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result_LiteralUnlimitedNatural1581.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1581", fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result_LiteralUnlimitedNatural1581);
			fUML_Tests_TestIntegerFunctions_ControlFlow1582.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1582", fUML_Tests_TestIntegerFunctions_ControlFlow1582);
				fUML_Tests_TestIntegerFunctions_ControlFlow1582_LiteralInteger1583.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1583", fUML_Tests_TestIntegerFunctions_ControlFlow1582_LiteralInteger1583);
			fUML_Tests_TestIntegerFunctions_Fork_2.reset(new ForkNode());
			this->addToElementRepository("Fork(2)", fUML_Tests_TestIntegerFunctions_Fork_2);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1584.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1584", fUML_Tests_TestIntegerFunctions_ObjectFlow1584);
				fUML_Tests_TestIntegerFunctions_ObjectFlow1584_LiteralInteger1585.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1585", fUML_Tests_TestIntegerFunctions_ObjectFlow1584_LiteralInteger1585);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1586.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1586", fUML_Tests_TestIntegerFunctions_ObjectFlow1586);
				fUML_Tests_TestIntegerFunctions_ObjectFlow1586_LiteralInteger1587.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1587", fUML_Tests_TestIntegerFunctions_ObjectFlow1586_LiteralInteger1587);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1588.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1588", fUML_Tests_TestIntegerFunctions_ObjectFlow1588);
				fUML_Tests_TestIntegerFunctions_ObjectFlow1588_LiteralInteger1589.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1589", fUML_Tests_TestIntegerFunctions_ObjectFlow1588_LiteralInteger1589);
			fUML_Tests_TestIntegerFunctions_Fork_3.reset(new ForkNode());
			this->addToElementRepository("Fork(3)", fUML_Tests_TestIntegerFunctions_Fork_3);
			fUML_Tests_TestIntegerFunctions_Param_ModResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(ModResult)", fUML_Tests_TestIntegerFunctions_Param_ModResult);
			fUML_Tests_TestIntegerFunctions_Call_Times.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Times)", fUML_Tests_TestIntegerFunctions_Call_Times);
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_y.reset(new InputPin());
				this->addToElementRepository("Times.y", fUML_Tests_TestIntegerFunctions_Call_Times_Times_y);
					fUML_Tests_TestIntegerFunctions_Call_Times_Times_y_LiteralInteger1590.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1590", fUML_Tests_TestIntegerFunctions_Call_Times_Times_y_LiteralInteger1590);
					fUML_Tests_TestIntegerFunctions_Call_Times_Times_y_LiteralUnlimitedNatural1591.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1591", fUML_Tests_TestIntegerFunctions_Call_Times_Times_y_LiteralUnlimitedNatural1591);
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_result.reset(new OutputPin());
				this->addToElementRepository("Times.result", fUML_Tests_TestIntegerFunctions_Call_Times_Times_result);
					fUML_Tests_TestIntegerFunctions_Call_Times_Times_result_LiteralUnlimitedNatural1592.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1592", fUML_Tests_TestIntegerFunctions_Call_Times_Times_result_LiteralUnlimitedNatural1592);
					fUML_Tests_TestIntegerFunctions_Call_Times_Times_result_LiteralInteger1593.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1593", fUML_Tests_TestIntegerFunctions_Call_Times_Times_result_LiteralInteger1593);
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_x.reset(new InputPin());
				this->addToElementRepository("Times.x", fUML_Tests_TestIntegerFunctions_Call_Times_Times_x);
					fUML_Tests_TestIntegerFunctions_Call_Times_Times_x_LiteralUnlimitedNatural1594.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1594", fUML_Tests_TestIntegerFunctions_Call_Times_Times_x_LiteralUnlimitedNatural1594);
					fUML_Tests_TestIntegerFunctions_Call_Times_Times_x_LiteralInteger1595.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1595", fUML_Tests_TestIntegerFunctions_Call_Times_Times_x_LiteralInteger1595);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1596.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1596", fUML_Tests_TestIntegerFunctions_ObjectFlow1596);
				fUML_Tests_TestIntegerFunctions_ObjectFlow1596_LiteralInteger1597.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1597", fUML_Tests_TestIntegerFunctions_ObjectFlow1596_LiteralInteger1597);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1598.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1598", fUML_Tests_TestIntegerFunctions_ObjectFlow1598);
				fUML_Tests_TestIntegerFunctions_ObjectFlow1598_LiteralInteger1599.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1599", fUML_Tests_TestIntegerFunctions_ObjectFlow1598_LiteralInteger1599);
			fUML_Tests_TestIntegerFunctions_PlusResult.reset(new Parameter());
			this->addToElementRepository("PlusResult", fUML_Tests_TestIntegerFunctions_PlusResult);
			fUML_Tests_TestIntegerFunctions_ControlFlow1600.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1600", fUML_Tests_TestIntegerFunctions_ControlFlow1600);
				fUML_Tests_TestIntegerFunctions_ControlFlow1600_LiteralInteger1601.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1601", fUML_Tests_TestIntegerFunctions_ControlFlow1600_LiteralInteger1601);
			fUML_Tests_TestIntegerFunctions_NegResult.reset(new Parameter());
			this->addToElementRepository("NegResult", fUML_Tests_TestIntegerFunctions_NegResult);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1602.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1602", fUML_Tests_TestIntegerFunctions_ObjectFlow1602);
				fUML_Tests_TestIntegerFunctions_ObjectFlow1602_LiteralInteger1603.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1603", fUML_Tests_TestIntegerFunctions_ObjectFlow1602_LiteralInteger1603);
			fUML_Tests_TestIntegerFunctions_Param_MinResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(MinResult)", fUML_Tests_TestIntegerFunctions_Param_MinResult);
			fUML_Tests_TestIntegerFunctions_MinResult.reset(new Parameter());
			this->addToElementRepository("MinResult", fUML_Tests_TestIntegerFunctions_MinResult);
			fUML_Tests_TestIntegerFunctions_ModResult.reset(new Parameter());
			this->addToElementRepository("ModResult", fUML_Tests_TestIntegerFunctions_ModResult);
			fUML_Tests_TestIntegerFunctions_Param_NegResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(NegResult)", fUML_Tests_TestIntegerFunctions_Param_NegResult);
			fUML_Tests_TestIntegerFunctions_Param_TimesResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(TimesResult)", fUML_Tests_TestIntegerFunctions_Param_TimesResult);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1604.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1604", fUML_Tests_TestIntegerFunctions_ObjectFlow1604);
				fUML_Tests_TestIntegerFunctions_ObjectFlow1604_LiteralInteger1605.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1605", fUML_Tests_TestIntegerFunctions_ObjectFlow1604_LiteralInteger1605);
			fUML_Tests_TestIntegerFunctions_ControlFlow1606.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1606", fUML_Tests_TestIntegerFunctions_ControlFlow1606);
				fUML_Tests_TestIntegerFunctions_ControlFlow1606_LiteralInteger1607.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1607", fUML_Tests_TestIntegerFunctions_ControlFlow1606_LiteralInteger1607);
			fUML_Tests_TestIntegerFunctions_ControlFlow1608.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1608", fUML_Tests_TestIntegerFunctions_ControlFlow1608);
				fUML_Tests_TestIntegerFunctions_ControlFlow1608_LiteralInteger1609.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1609", fUML_Tests_TestIntegerFunctions_ControlFlow1608_LiteralInteger1609);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1610.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1610", fUML_Tests_TestIntegerFunctions_ObjectFlow1610);
				fUML_Tests_TestIntegerFunctions_ObjectFlow1610_LiteralInteger1611.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1611", fUML_Tests_TestIntegerFunctions_ObjectFlow1610_LiteralInteger1611);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1612.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1612", fUML_Tests_TestIntegerFunctions_ObjectFlow1612);
				fUML_Tests_TestIntegerFunctions_ObjectFlow1612_LiteralInteger1613.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1613", fUML_Tests_TestIntegerFunctions_ObjectFlow1612_LiteralInteger1613);
			fUML_Tests_TestIntegerFunctions_ControlFlow1614.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1614", fUML_Tests_TestIntegerFunctions_ControlFlow1614);
				fUML_Tests_TestIntegerFunctions_ControlFlow1614_LiteralInteger1615.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1615", fUML_Tests_TestIntegerFunctions_ControlFlow1614_LiteralInteger1615);
			fUML_Tests_TestIntegerFunctions_Call_Abs.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Abs)", fUML_Tests_TestIntegerFunctions_Call_Abs);
				fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result.reset(new OutputPin());
				this->addToElementRepository("Abs.result", fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result);
					fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result_LiteralUnlimitedNatural1616.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1616", fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result_LiteralUnlimitedNatural1616);
					fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result_LiteralInteger1617.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1617", fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result_LiteralInteger1617);
				fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x.reset(new InputPin());
				this->addToElementRepository("Abs.x", fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x);
					fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x_LiteralUnlimitedNatural1618.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1618", fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x_LiteralUnlimitedNatural1618);
					fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x_LiteralInteger1619.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1619", fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x_LiteralInteger1619);
			fUML_Tests_TestIntegerFunctions_Param_PlusResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(PlusResult)", fUML_Tests_TestIntegerFunctions_Param_PlusResult);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1620.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1620", fUML_Tests_TestIntegerFunctions_ObjectFlow1620);
				fUML_Tests_TestIntegerFunctions_ObjectFlow1620_LiteralInteger1621.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1621", fUML_Tests_TestIntegerFunctions_ObjectFlow1620_LiteralInteger1621);
			fUML_Tests_TestIntegerFunctions_MaxResult.reset(new Parameter());
			this->addToElementRepository("MaxResult", fUML_Tests_TestIntegerFunctions_MaxResult);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1622.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1622", fUML_Tests_TestIntegerFunctions_ObjectFlow1622);
				fUML_Tests_TestIntegerFunctions_ObjectFlow1622_LiteralInteger1623.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1623", fUML_Tests_TestIntegerFunctions_ObjectFlow1622_LiteralInteger1623);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1624.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1624", fUML_Tests_TestIntegerFunctions_ObjectFlow1624);
				fUML_Tests_TestIntegerFunctions_ObjectFlow1624_LiteralInteger1625.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1625", fUML_Tests_TestIntegerFunctions_ObjectFlow1624_LiteralInteger1625);
			fUML_Tests_TestIntegerFunctions_Call_Div.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Div)", fUML_Tests_TestIntegerFunctions_Call_Div);
				fUML_Tests_TestIntegerFunctions_Call_Div_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestIntegerFunctions_Call_Div_result);
					fUML_Tests_TestIntegerFunctions_Call_Div_result_LiteralUnlimitedNatural1626.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1626", fUML_Tests_TestIntegerFunctions_Call_Div_result_LiteralUnlimitedNatural1626);
					fUML_Tests_TestIntegerFunctions_Call_Div_result_LiteralInteger1627.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1627", fUML_Tests_TestIntegerFunctions_Call_Div_result_LiteralInteger1627);
				fUML_Tests_TestIntegerFunctions_Call_Div_Div_x.reset(new InputPin());
				this->addToElementRepository("Div.x", fUML_Tests_TestIntegerFunctions_Call_Div_Div_x);
					fUML_Tests_TestIntegerFunctions_Call_Div_Div_x_LiteralInteger1628.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1628", fUML_Tests_TestIntegerFunctions_Call_Div_Div_x_LiteralInteger1628);
					fUML_Tests_TestIntegerFunctions_Call_Div_Div_x_LiteralUnlimitedNatural1629.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1629", fUML_Tests_TestIntegerFunctions_Call_Div_Div_x_LiteralUnlimitedNatural1629);
				fUML_Tests_TestIntegerFunctions_Call_Div_Div_y.reset(new InputPin());
				this->addToElementRepository("Div.y", fUML_Tests_TestIntegerFunctions_Call_Div_Div_y);
					fUML_Tests_TestIntegerFunctions_Call_Div_Div_y_LiteralInteger1630.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1630", fUML_Tests_TestIntegerFunctions_Call_Div_Div_y_LiteralInteger1630);
					fUML_Tests_TestIntegerFunctions_Call_Div_Div_y_LiteralUnlimitedNatural1631.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1631", fUML_Tests_TestIntegerFunctions_Call_Div_Div_y_LiteralUnlimitedNatural1631);
			fUML_Tests_TestIntegerFunctions_Call_Min.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Min)", fUML_Tests_TestIntegerFunctions_Call_Min);
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_y.reset(new InputPin());
				this->addToElementRepository("Min.y", fUML_Tests_TestIntegerFunctions_Call_Min_Min_y);
					fUML_Tests_TestIntegerFunctions_Call_Min_Min_y_LiteralUnlimitedNatural1632.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1632", fUML_Tests_TestIntegerFunctions_Call_Min_Min_y_LiteralUnlimitedNatural1632);
					fUML_Tests_TestIntegerFunctions_Call_Min_Min_y_LiteralInteger1633.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1633", fUML_Tests_TestIntegerFunctions_Call_Min_Min_y_LiteralInteger1633);
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_result.reset(new OutputPin());
				this->addToElementRepository("Min.result", fUML_Tests_TestIntegerFunctions_Call_Min_Min_result);
					fUML_Tests_TestIntegerFunctions_Call_Min_Min_result_LiteralInteger1634.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1634", fUML_Tests_TestIntegerFunctions_Call_Min_Min_result_LiteralInteger1634);
					fUML_Tests_TestIntegerFunctions_Call_Min_Min_result_LiteralUnlimitedNatural1635.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1635", fUML_Tests_TestIntegerFunctions_Call_Min_Min_result_LiteralUnlimitedNatural1635);
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_x.reset(new InputPin());
				this->addToElementRepository("Min.x", fUML_Tests_TestIntegerFunctions_Call_Min_Min_x);
					fUML_Tests_TestIntegerFunctions_Call_Min_Min_x_LiteralInteger1636.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1636", fUML_Tests_TestIntegerFunctions_Call_Min_Min_x_LiteralInteger1636);
					fUML_Tests_TestIntegerFunctions_Call_Min_Min_x_LiteralUnlimitedNatural1637.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1637", fUML_Tests_TestIntegerFunctions_Call_Min_Min_x_LiteralUnlimitedNatural1637);
			fUML_Tests_TestIntegerFunctions_Value_3.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(3)", fUML_Tests_TestIntegerFunctions_Value_3);
				fUML_Tests_TestIntegerFunctions_Value_3_Value_3_result.reset(new OutputPin());
				this->addToElementRepository("Value(3).result", fUML_Tests_TestIntegerFunctions_Value_3_Value_3_result);
				fUML_Tests_TestIntegerFunctions_Value_3_LiteralInteger1638.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1638", fUML_Tests_TestIntegerFunctions_Value_3_LiteralInteger1638);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1639.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1639", fUML_Tests_TestIntegerFunctions_ObjectFlow1639);
				fUML_Tests_TestIntegerFunctions_ObjectFlow1639_LiteralInteger1640.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1640", fUML_Tests_TestIntegerFunctions_ObjectFlow1639_LiteralInteger1640);
			fUML_Tests_TestIntegerFunctions_TimesResult.reset(new Parameter());
			this->addToElementRepository("TimesResult", fUML_Tests_TestIntegerFunctions_TimesResult);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1641.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1641", fUML_Tests_TestIntegerFunctions_ObjectFlow1641);
				fUML_Tests_TestIntegerFunctions_ObjectFlow1641_LiteralInteger1642.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1642", fUML_Tests_TestIntegerFunctions_ObjectFlow1641_LiteralInteger1642);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1643.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1643", fUML_Tests_TestIntegerFunctions_ObjectFlow1643);
				fUML_Tests_TestIntegerFunctions_ObjectFlow1643_LiteralInteger1644.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1644", fUML_Tests_TestIntegerFunctions_ObjectFlow1643_LiteralInteger1644);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1645.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1645", fUML_Tests_TestIntegerFunctions_ObjectFlow1645);
				fUML_Tests_TestIntegerFunctions_ObjectFlow1645_LiteralInteger1646.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1646", fUML_Tests_TestIntegerFunctions_ObjectFlow1645_LiteralInteger1646);
			fUML_Tests_TestIntegerFunctions_Call_Minus.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Minus)", fUML_Tests_TestIntegerFunctions_Call_Minus);
				fUML_Tests_TestIntegerFunctions_Call_Minus_x.reset(new InputPin());
				this->addToElementRepository("x", fUML_Tests_TestIntegerFunctions_Call_Minus_x);
					fUML_Tests_TestIntegerFunctions_Call_Minus_x_LiteralUnlimitedNatural1647.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1647", fUML_Tests_TestIntegerFunctions_Call_Minus_x_LiteralUnlimitedNatural1647);
					fUML_Tests_TestIntegerFunctions_Call_Minus_x_LiteralInteger1648.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1648", fUML_Tests_TestIntegerFunctions_Call_Minus_x_LiteralInteger1648);
				fUML_Tests_TestIntegerFunctions_Call_Minus_y.reset(new InputPin());
				this->addToElementRepository("y", fUML_Tests_TestIntegerFunctions_Call_Minus_y);
					fUML_Tests_TestIntegerFunctions_Call_Minus_y_LiteralInteger1649.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1649", fUML_Tests_TestIntegerFunctions_Call_Minus_y_LiteralInteger1649);
					fUML_Tests_TestIntegerFunctions_Call_Minus_y_LiteralUnlimitedNatural1650.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1650", fUML_Tests_TestIntegerFunctions_Call_Minus_y_LiteralUnlimitedNatural1650);
				fUML_Tests_TestIntegerFunctions_Call_Minus_result.reset(new OutputPin());
				this->addToElementRepository("result", fUML_Tests_TestIntegerFunctions_Call_Minus_result);
					fUML_Tests_TestIntegerFunctions_Call_Minus_result_LiteralInteger1651.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1651", fUML_Tests_TestIntegerFunctions_Call_Minus_result_LiteralInteger1651);
					fUML_Tests_TestIntegerFunctions_Call_Minus_result_LiteralUnlimitedNatural1652.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1652", fUML_Tests_TestIntegerFunctions_Call_Minus_result_LiteralUnlimitedNatural1652);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1653.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1653", fUML_Tests_TestIntegerFunctions_ObjectFlow1653);
				fUML_Tests_TestIntegerFunctions_ObjectFlow1653_LiteralInteger1654.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1654", fUML_Tests_TestIntegerFunctions_ObjectFlow1653_LiteralInteger1654);
			fUML_Tests_TestIntegerFunctions_Call_Plus.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Plus)", fUML_Tests_TestIntegerFunctions_Call_Plus);
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result.reset(new OutputPin());
				this->addToElementRepository("Plus.result", fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result);
					fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result_LiteralUnlimitedNatural1655.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1655", fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result_LiteralUnlimitedNatural1655);
					fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result_LiteralInteger1656.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1656", fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result_LiteralInteger1656);
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y.reset(new InputPin());
				this->addToElementRepository("Plus.y", fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y);
					fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y_LiteralInteger1657.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1657", fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y_LiteralInteger1657);
					fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y_LiteralUnlimitedNatural1658.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1658", fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y_LiteralUnlimitedNatural1658);
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x.reset(new InputPin());
				this->addToElementRepository("Plus.x", fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x);
					fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x_LiteralInteger1659.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1659", fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x_LiteralInteger1659);
					fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x_LiteralUnlimitedNatural1660.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1660", fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x_LiteralUnlimitedNatural1660);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1661.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1661", fUML_Tests_TestIntegerFunctions_ObjectFlow1661);
				fUML_Tests_TestIntegerFunctions_ObjectFlow1661_LiteralInteger1662.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1662", fUML_Tests_TestIntegerFunctions_ObjectFlow1661_LiteralInteger1662);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1663.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1663", fUML_Tests_TestIntegerFunctions_ObjectFlow1663);
				fUML_Tests_TestIntegerFunctions_ObjectFlow1663_LiteralInteger1664.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1664", fUML_Tests_TestIntegerFunctions_ObjectFlow1663_LiteralInteger1664);
			fUML_Tests_TestIntegerFunctions_DivResult.reset(new Parameter());
			this->addToElementRepository("DivResult", fUML_Tests_TestIntegerFunctions_DivResult);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1665.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1665", fUML_Tests_TestIntegerFunctions_ObjectFlow1665);
				fUML_Tests_TestIntegerFunctions_ObjectFlow1665_LiteralInteger1666.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1666", fUML_Tests_TestIntegerFunctions_ObjectFlow1665_LiteralInteger1666);
			fUML_Tests_TestIntegerFunctions_Param_DivResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(DivResult)", fUML_Tests_TestIntegerFunctions_Param_DivResult);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1667.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1667", fUML_Tests_TestIntegerFunctions_ObjectFlow1667);
				fUML_Tests_TestIntegerFunctions_ObjectFlow1667_LiteralInteger1668.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1668", fUML_Tests_TestIntegerFunctions_ObjectFlow1667_LiteralInteger1668);
			fUML_Tests_TestIntegerFunctions_Param_AbsResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(AbsResult)", fUML_Tests_TestIntegerFunctions_Param_AbsResult);
			fUML_Tests_TestIntegerFunctions_Call_Mod.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Mod)", fUML_Tests_TestIntegerFunctions_Call_Mod);
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y.reset(new InputPin());
				this->addToElementRepository("Mod.y", fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y);
					fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y_LiteralInteger1669.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1669", fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y_LiteralInteger1669);
					fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y_LiteralUnlimitedNatural1670.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1670", fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y_LiteralUnlimitedNatural1670);
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x.reset(new InputPin());
				this->addToElementRepository("Mod.x", fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x);
					fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x_LiteralInteger1671.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1671", fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x_LiteralInteger1671);
					fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x_LiteralUnlimitedNatural1672.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1672", fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x_LiteralUnlimitedNatural1672);
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result.reset(new OutputPin());
				this->addToElementRepository("Mod.result", fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result);
					fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result_LiteralInteger1673.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1673", fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result_LiteralInteger1673);
					fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result_LiteralUnlimitedNatural1674.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1674", fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result_LiteralUnlimitedNatural1674);
			fUML_Tests_TestIntegerFunctions_Value_neg_2.reset(new ValueSpecificationAction());
			this->addToElementRepository("Value(neg 2)", fUML_Tests_TestIntegerFunctions_Value_neg_2);
				fUML_Tests_TestIntegerFunctions_Value_neg_2_LiteralInteger1675.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1675", fUML_Tests_TestIntegerFunctions_Value_neg_2_LiteralInteger1675);
				fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result.reset(new OutputPin());
				this->addToElementRepository("Value(-2).result", fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result);
					fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result_LiteralInteger1676.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1676", fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result_LiteralInteger1676);
					fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result_LiteralUnlimitedNatural1677.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1677", fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result_LiteralUnlimitedNatural1677);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1678.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1678", fUML_Tests_TestIntegerFunctions_ObjectFlow1678);
				fUML_Tests_TestIntegerFunctions_ObjectFlow1678_LiteralInteger1679.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1679", fUML_Tests_TestIntegerFunctions_ObjectFlow1678_LiteralInteger1679);
			fUML_Tests_TestIntegerFunctions_Call_Neg.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Neg)", fUML_Tests_TestIntegerFunctions_Call_Neg);
				fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result.reset(new OutputPin());
				this->addToElementRepository("Neg.result", fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result);
					fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result_LiteralUnlimitedNatural1680.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1680", fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result_LiteralUnlimitedNatural1680);
					fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result_LiteralInteger1681.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1681", fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result_LiteralInteger1681);
				fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x.reset(new InputPin());
				this->addToElementRepository("Neg.x", fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x);
					fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x_LiteralUnlimitedNatural1682.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1682", fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x_LiteralUnlimitedNatural1682);
					fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x_LiteralInteger1683.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1683", fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x_LiteralInteger1683);
			fUML_Tests_TestIntegerFunctions_Param_MinusResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(MinusResult)", fUML_Tests_TestIntegerFunctions_Param_MinusResult);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1684.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1684", fUML_Tests_TestIntegerFunctions_ObjectFlow1684);
				fUML_Tests_TestIntegerFunctions_ObjectFlow1684_LiteralInteger1685.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1685", fUML_Tests_TestIntegerFunctions_ObjectFlow1684_LiteralInteger1685);
			fUML_Tests_TestIntegerFunctions_ControlFlow1686.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1686", fUML_Tests_TestIntegerFunctions_ControlFlow1686);
				fUML_Tests_TestIntegerFunctions_ControlFlow1686_LiteralInteger1687.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1687", fUML_Tests_TestIntegerFunctions_ControlFlow1686_LiteralInteger1687);
			fUML_Tests_TestIntegerFunctions_ControlFlow1688.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1688", fUML_Tests_TestIntegerFunctions_ControlFlow1688);
				fUML_Tests_TestIntegerFunctions_ControlFlow1688_LiteralInteger1689.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1689", fUML_Tests_TestIntegerFunctions_ControlFlow1688_LiteralInteger1689);
			fUML_Tests_TestIntegerFunctions_Param_MaxResult.reset(new ActivityParameterNode());
			this->addToElementRepository("Param(MaxResult)", fUML_Tests_TestIntegerFunctions_Param_MaxResult);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1690.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1690", fUML_Tests_TestIntegerFunctions_ObjectFlow1690);
				fUML_Tests_TestIntegerFunctions_ObjectFlow1690_LiteralInteger1691.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1691", fUML_Tests_TestIntegerFunctions_ObjectFlow1690_LiteralInteger1691);
			fUML_Tests_TestIntegerFunctions_Call_Max.reset(new CallBehaviorAction());
			this->addToElementRepository("Call(Max)", fUML_Tests_TestIntegerFunctions_Call_Max);
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_result.reset(new OutputPin());
				this->addToElementRepository("Max.result", fUML_Tests_TestIntegerFunctions_Call_Max_Max_result);
					fUML_Tests_TestIntegerFunctions_Call_Max_Max_result_LiteralInteger1692.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1692", fUML_Tests_TestIntegerFunctions_Call_Max_Max_result_LiteralInteger1692);
					fUML_Tests_TestIntegerFunctions_Call_Max_Max_result_LiteralUnlimitedNatural1693.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1693", fUML_Tests_TestIntegerFunctions_Call_Max_Max_result_LiteralUnlimitedNatural1693);
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_y.reset(new InputPin());
				this->addToElementRepository("Max.y", fUML_Tests_TestIntegerFunctions_Call_Max_Max_y);
					fUML_Tests_TestIntegerFunctions_Call_Max_Max_y_LiteralInteger1694.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1694", fUML_Tests_TestIntegerFunctions_Call_Max_Max_y_LiteralInteger1694);
					fUML_Tests_TestIntegerFunctions_Call_Max_Max_y_LiteralUnlimitedNatural1695.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1695", fUML_Tests_TestIntegerFunctions_Call_Max_Max_y_LiteralUnlimitedNatural1695);
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_x.reset(new InputPin());
				this->addToElementRepository("Max.x", fUML_Tests_TestIntegerFunctions_Call_Max_Max_x);
					fUML_Tests_TestIntegerFunctions_Call_Max_Max_x_LiteralUnlimitedNatural1696.reset(new LiteralUnlimitedNatural());
					this->addToElementRepository("LiteralUnlimitedNatural1696", fUML_Tests_TestIntegerFunctions_Call_Max_Max_x_LiteralUnlimitedNatural1696);
					fUML_Tests_TestIntegerFunctions_Call_Max_Max_x_LiteralInteger1697.reset(new LiteralInteger());
					this->addToElementRepository("LiteralInteger1697", fUML_Tests_TestIntegerFunctions_Call_Max_Max_x_LiteralInteger1697);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1698.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1698", fUML_Tests_TestIntegerFunctions_ObjectFlow1698);
				fUML_Tests_TestIntegerFunctions_ObjectFlow1698_LiteralInteger1699.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1699", fUML_Tests_TestIntegerFunctions_ObjectFlow1698_LiteralInteger1699);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1700.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1700", fUML_Tests_TestIntegerFunctions_ObjectFlow1700);
				fUML_Tests_TestIntegerFunctions_ObjectFlow1700_LiteralInteger1701.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1701", fUML_Tests_TestIntegerFunctions_ObjectFlow1700_LiteralInteger1701);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1702.reset(new ObjectFlow());
			this->addToElementRepository("ObjectFlow1702", fUML_Tests_TestIntegerFunctions_ObjectFlow1702);
				fUML_Tests_TestIntegerFunctions_ObjectFlow1702_LiteralInteger1703.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1703", fUML_Tests_TestIntegerFunctions_ObjectFlow1702_LiteralInteger1703);
			fUML_Tests_TestIntegerFunctions_MinusResult.reset(new Parameter());
			this->addToElementRepository("MinusResult", fUML_Tests_TestIntegerFunctions_MinusResult);
			fUML_Tests_TestIntegerFunctions_AbsResult.reset(new Parameter());
			this->addToElementRepository("AbsResult", fUML_Tests_TestIntegerFunctions_AbsResult);
			fUML_Tests_TestIntegerFunctions_ControlFlow1704.reset(new ControlFlow());
			this->addToElementRepository("ControlFlow1704", fUML_Tests_TestIntegerFunctions_ControlFlow1704);
				fUML_Tests_TestIntegerFunctions_ControlFlow1704_LiteralInteger1705.reset(new LiteralInteger());
				this->addToElementRepository("LiteralInteger1705", fUML_Tests_TestIntegerFunctions_ControlFlow1704_LiteralInteger1705);

	// Initialize public members
	/*
	 * Model fUML_Tests
	 */
	fUML_Tests->setThisPackagePtr(fUML_Tests);
	fUML_Tests->setName("fUML_Tests");
	fUML_Tests->setVisibility(VisibilityKind::public_);
		// Activity GenerateListTestData
		fUML_Tests_GenerateListTestData->setThisActivityPtr(fUML_Tests_GenerateListTestData);
		fUML_Tests_GenerateListTestData->setName("GenerateListTestData");
		fUML_Tests_GenerateListTestData->setVisibility(VisibilityKind::public_);
		fUML_Tests_GenerateListTestData->isReentrant = false;
			// Parameter list
			fUML_Tests_GenerateListTestData_list->setThisElementPtr(fUML_Tests_GenerateListTestData_list);
			fUML_Tests_GenerateListTestData_list->setName("list");
			fUML_Tests_GenerateListTestData_list->setVisibility(VisibilityKind::public_);
			fUML_Tests_GenerateListTestData_list->setUpper(-1);
			fUML_Tests_GenerateListTestData_list->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_GenerateListTestData_list->setDirection(ParameterDirectionKind::out);
		fUML_Tests_GenerateListTestData->addOwnedParameter(fUML_Tests_GenerateListTestData_list);
			// ValueSpecificationAction Value(3)
			fUML_Tests_GenerateListTestData_Value_3->setThisExecutableNodePtr(fUML_Tests_GenerateListTestData_Value_3);
			fUML_Tests_GenerateListTestData_Value_3->setName("Value(3)");
			fUML_Tests_GenerateListTestData_Value_3->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger4
				fUML_Tests_GenerateListTestData_Value_3_LiteralInteger4->setThisElementPtr(fUML_Tests_GenerateListTestData_Value_3_LiteralInteger4);
				fUML_Tests_GenerateListTestData_Value_3_LiteralInteger4->setName("LiteralInteger4");
				fUML_Tests_GenerateListTestData_Value_3_LiteralInteger4->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateListTestData_Value_3_LiteralInteger4->setValue(3);
			fUML_Tests_GenerateListTestData_Value_3->setValue(fUML_Tests_GenerateListTestData_Value_3_LiteralInteger4);
				// OutputPin Value(3).result
				fUML_Tests_GenerateListTestData_Value_3_Value_3_result->setThisElementPtr(fUML_Tests_GenerateListTestData_Value_3_Value_3_result);
				fUML_Tests_GenerateListTestData_Value_3_Value_3_result->setName("Value(3).result");
				fUML_Tests_GenerateListTestData_Value_3_Value_3_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateListTestData_Value_3_Value_3_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_GenerateListTestData_Value_3->setResult(fUML_Tests_GenerateListTestData_Value_3_Value_3_result);
		fUML_Tests_GenerateListTestData->addNode(fUML_Tests_GenerateListTestData_Value_3);
			// ActivityParameterNode Param(list)
			fUML_Tests_GenerateListTestData_Param_list->setThisElementPtr(fUML_Tests_GenerateListTestData_Param_list);
			fUML_Tests_GenerateListTestData_Param_list->setName("Param(list)");
			fUML_Tests_GenerateListTestData_Param_list->setVisibility(VisibilityKind::public_);
			fUML_Tests_GenerateListTestData_Param_list->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_GenerateListTestData_Param_list->setParameter(fUML_Tests_GenerateListTestData_list);
		fUML_Tests_GenerateListTestData->addNode(fUML_Tests_GenerateListTestData_Param_list);
			// ValueSpecificationAction Value(1)
			fUML_Tests_GenerateListTestData_Value_1->setThisExecutableNodePtr(fUML_Tests_GenerateListTestData_Value_1);
			fUML_Tests_GenerateListTestData_Value_1->setName("Value(1)");
			fUML_Tests_GenerateListTestData_Value_1->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger9
				fUML_Tests_GenerateListTestData_Value_1_LiteralInteger9->setThisElementPtr(fUML_Tests_GenerateListTestData_Value_1_LiteralInteger9);
				fUML_Tests_GenerateListTestData_Value_1_LiteralInteger9->setName("LiteralInteger9");
				fUML_Tests_GenerateListTestData_Value_1_LiteralInteger9->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateListTestData_Value_1_LiteralInteger9->setValue(1);
			fUML_Tests_GenerateListTestData_Value_1->setValue(fUML_Tests_GenerateListTestData_Value_1_LiteralInteger9);
				// OutputPin Value(1).result
				fUML_Tests_GenerateListTestData_Value_1_Value_1_result->setThisElementPtr(fUML_Tests_GenerateListTestData_Value_1_Value_1_result);
				fUML_Tests_GenerateListTestData_Value_1_Value_1_result->setName("Value(1).result");
				fUML_Tests_GenerateListTestData_Value_1_Value_1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateListTestData_Value_1_Value_1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_GenerateListTestData_Value_1->setResult(fUML_Tests_GenerateListTestData_Value_1_Value_1_result);
		fUML_Tests_GenerateListTestData->addNode(fUML_Tests_GenerateListTestData_Value_1);
			// ValueSpecificationAction Value(2)
			fUML_Tests_GenerateListTestData_Value_2->setThisExecutableNodePtr(fUML_Tests_GenerateListTestData_Value_2);
			fUML_Tests_GenerateListTestData_Value_2->setName("Value(2)");
			fUML_Tests_GenerateListTestData_Value_2->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger14
				fUML_Tests_GenerateListTestData_Value_2_LiteralInteger14->setThisElementPtr(fUML_Tests_GenerateListTestData_Value_2_LiteralInteger14);
				fUML_Tests_GenerateListTestData_Value_2_LiteralInteger14->setName("LiteralInteger14");
				fUML_Tests_GenerateListTestData_Value_2_LiteralInteger14->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateListTestData_Value_2_LiteralInteger14->setValue(2);
			fUML_Tests_GenerateListTestData_Value_2->setValue(fUML_Tests_GenerateListTestData_Value_2_LiteralInteger14);
				// OutputPin Value(2).result
				fUML_Tests_GenerateListTestData_Value_2_Value_2_result->setThisElementPtr(fUML_Tests_GenerateListTestData_Value_2_Value_2_result);
				fUML_Tests_GenerateListTestData_Value_2_Value_2_result->setName("Value(2).result");
				fUML_Tests_GenerateListTestData_Value_2_Value_2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateListTestData_Value_2_Value_2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_GenerateListTestData_Value_2->setResult(fUML_Tests_GenerateListTestData_Value_2_Value_2_result);
		fUML_Tests_GenerateListTestData->addNode(fUML_Tests_GenerateListTestData_Value_2);
			// ControlFlow ControlFlow0 from Value(1) to Value(2)
			fUML_Tests_GenerateListTestData_ControlFlow0->setThisActivityEdgePtr(fUML_Tests_GenerateListTestData_ControlFlow0);
			fUML_Tests_GenerateListTestData_ControlFlow0->setName("ControlFlow0");
			fUML_Tests_GenerateListTestData_ControlFlow0->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateListTestData_ControlFlow0->setSource(fUML_Tests_GenerateListTestData_Value_1);
			fUML_Tests_GenerateListTestData_ControlFlow0->setTarget(fUML_Tests_GenerateListTestData_Value_2);
		fUML_Tests_GenerateListTestData->addEdge(fUML_Tests_GenerateListTestData_ControlFlow0);
			// ControlFlow ControlFlow7 from Value(2) to Value(3)
			fUML_Tests_GenerateListTestData_ControlFlow7->setThisActivityEdgePtr(fUML_Tests_GenerateListTestData_ControlFlow7);
			fUML_Tests_GenerateListTestData_ControlFlow7->setName("ControlFlow7");
			fUML_Tests_GenerateListTestData_ControlFlow7->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateListTestData_ControlFlow7->setSource(fUML_Tests_GenerateListTestData_Value_2);
			fUML_Tests_GenerateListTestData_ControlFlow7->setTarget(fUML_Tests_GenerateListTestData_Value_3);
		fUML_Tests_GenerateListTestData->addEdge(fUML_Tests_GenerateListTestData_ControlFlow7);
			// ObjectFlow ObjectFlow12 from Value(1).result to Param(list)
			fUML_Tests_GenerateListTestData_ObjectFlow12->setThisActivityEdgePtr(fUML_Tests_GenerateListTestData_ObjectFlow12);
			fUML_Tests_GenerateListTestData_ObjectFlow12->setName("ObjectFlow12");
			fUML_Tests_GenerateListTestData_ObjectFlow12->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateListTestData_ObjectFlow12->setSource(fUML_Tests_GenerateListTestData_Value_1_Value_1_result);
			fUML_Tests_GenerateListTestData_ObjectFlow12->setTarget(fUML_Tests_GenerateListTestData_Param_list);
		fUML_Tests_GenerateListTestData->addEdge(fUML_Tests_GenerateListTestData_ObjectFlow12);
			// ObjectFlow ObjectFlow17 from Value(2).result to Param(list)
			fUML_Tests_GenerateListTestData_ObjectFlow17->setThisActivityEdgePtr(fUML_Tests_GenerateListTestData_ObjectFlow17);
			fUML_Tests_GenerateListTestData_ObjectFlow17->setName("ObjectFlow17");
			fUML_Tests_GenerateListTestData_ObjectFlow17->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateListTestData_ObjectFlow17->setSource(fUML_Tests_GenerateListTestData_Value_2_Value_2_result);
			fUML_Tests_GenerateListTestData_ObjectFlow17->setTarget(fUML_Tests_GenerateListTestData_Param_list);
		fUML_Tests_GenerateListTestData->addEdge(fUML_Tests_GenerateListTestData_ObjectFlow17);
			// ObjectFlow ObjectFlow19 from Value(3).result to Param(list)
			fUML_Tests_GenerateListTestData_ObjectFlow19->setThisActivityEdgePtr(fUML_Tests_GenerateListTestData_ObjectFlow19);
			fUML_Tests_GenerateListTestData_ObjectFlow19->setName("ObjectFlow19");
			fUML_Tests_GenerateListTestData_ObjectFlow19->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateListTestData_ObjectFlow19->setSource(fUML_Tests_GenerateListTestData_Value_3_Value_3_result);
			fUML_Tests_GenerateListTestData_ObjectFlow19->setTarget(fUML_Tests_GenerateListTestData_Param_list);
		fUML_Tests_GenerateListTestData->addEdge(fUML_Tests_GenerateListTestData_ObjectFlow19);
	fUML_Tests->addPackagedElement(fUML_Tests_GenerateListTestData);
		// Activity Copier
		fUML_Tests_Copier->setThisActivityPtr(fUML_Tests_Copier);
		fUML_Tests_Copier->setName("Copier");
		fUML_Tests_Copier->setVisibility(VisibilityKind::public_);
		fUML_Tests_Copier->isReentrant = false;
			// Parameter input
			fUML_Tests_Copier_input->setThisElementPtr(fUML_Tests_Copier_input);
			fUML_Tests_Copier_input->setName("input");
			fUML_Tests_Copier_input->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_Copier_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
		fUML_Tests_Copier->addOwnedParameter(fUML_Tests_Copier_input);
			// Parameter output
			fUML_Tests_Copier_output->setThisElementPtr(fUML_Tests_Copier_output);
			fUML_Tests_Copier_output->setName("output");
			fUML_Tests_Copier_output->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_Copier_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_Copier_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_Copier->addOwnedParameter(fUML_Tests_Copier_output);
			// ActivityParameterNode Parameter(input)
			fUML_Tests_Copier_Parameter_input->setThisElementPtr(fUML_Tests_Copier_Parameter_input);
			fUML_Tests_Copier_Parameter_input->setName("Parameter(input)");
			fUML_Tests_Copier_Parameter_input->setVisibility(VisibilityKind::public_);
			fUML_Tests_Copier_Parameter_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_Copier_Parameter_input->setParameter(fUML_Tests_Copier_input);
		fUML_Tests_Copier->addNode(fUML_Tests_Copier_Parameter_input);
			// ActivityParameterNode Parameter(output)
			fUML_Tests_Copier_Parameter_output->setThisElementPtr(fUML_Tests_Copier_Parameter_output);
			fUML_Tests_Copier_Parameter_output->setName("Parameter(output)");
			fUML_Tests_Copier_Parameter_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_Copier_Parameter_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_Copier_Parameter_output->setParameter(fUML_Tests_Copier_output);
		fUML_Tests_Copier->addNode(fUML_Tests_Copier_Parameter_output);
			// ObjectFlow ObjectFlow25 from Parameter(input) to Parameter(output)
			fUML_Tests_Copier_ObjectFlow25->setThisActivityEdgePtr(fUML_Tests_Copier_ObjectFlow25);
			fUML_Tests_Copier_ObjectFlow25->setName("ObjectFlow25");
			fUML_Tests_Copier_ObjectFlow25->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_Copier_ObjectFlow25->setSource(fUML_Tests_Copier_Parameter_input);
			fUML_Tests_Copier_ObjectFlow25->setTarget(fUML_Tests_Copier_Parameter_output);
		fUML_Tests_Copier->addEdge(fUML_Tests_Copier_ObjectFlow25);
	fUML_Tests->addPackagedElement(fUML_Tests_Copier);
		// Activity TestCallSender
		fUML_Tests_TestCallSender->setThisActivityPtr(fUML_Tests_TestCallSender);
		fUML_Tests_TestCallSender->setName("TestCallSender");
		fUML_Tests_TestCallSender->setVisibility(VisibilityKind::public_);
		
			// Property value
			fUML_Tests_TestCallSender_value->setThisElementPtr(fUML_Tests_TestCallSender_value);
			fUML_Tests_TestCallSender_value->setName("value");
			fUML_Tests_TestCallSender_value->setVisibility(VisibilityKind::private_);
		fUML_Tests_TestCallSender->addOwnedAttribute(fUML_Tests_TestCallSender_value);
		fUML_Tests_TestCallSender->setIsActive(true);
			// ForkNode ForkNode
			fUML_Tests_TestCallSender_ForkNode->setThisElementPtr(fUML_Tests_TestCallSender_ForkNode);
			fUML_Tests_TestCallSender_ForkNode->setName("ForkNode");
			fUML_Tests_TestCallSender_ForkNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestCallSender->addNode(fUML_Tests_TestCallSender_ForkNode);
			// AddStructuralFeatureValueAction Write(value)
			fUML_Tests_TestCallSender_Write_value->setThisExecutableNodePtr(fUML_Tests_TestCallSender_Write_value);
			fUML_Tests_TestCallSender_Write_value->setName("Write(value)");
			fUML_Tests_TestCallSender_Write_value->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSender_Write_value->setStructuralFeature(fUML_Tests_TestCallSender_value);
				// InputPin Write(value).object
				fUML_Tests_TestCallSender_Write_value_Write_value_object->setThisElementPtr(fUML_Tests_TestCallSender_Write_value_Write_value_object);
				fUML_Tests_TestCallSender_Write_value_Write_value_object->setName("Write(value).object");
				fUML_Tests_TestCallSender_Write_value_Write_value_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSender_Write_value->setObject(fUML_Tests_TestCallSender_Write_value_Write_value_object);
				// InputPin Write(value).value
				fUML_Tests_TestCallSender_Write_value_Write_value_value->setThisElementPtr(fUML_Tests_TestCallSender_Write_value_Write_value_value);
				fUML_Tests_TestCallSender_Write_value_Write_value_value->setName("Write(value).value");
				fUML_Tests_TestCallSender_Write_value_Write_value_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCallSender_Write_value_Write_value_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestCallSender_Write_value->setValue(fUML_Tests_TestCallSender_Write_value_Write_value_value);
		fUML_Tests_TestCallSender->addNode(fUML_Tests_TestCallSender_Write_value);
			// ActivityFinalNode ActivityFinalNode29
			fUML_Tests_TestCallSender_ActivityFinalNode29->setThisElementPtr(fUML_Tests_TestCallSender_ActivityFinalNode29);
			fUML_Tests_TestCallSender_ActivityFinalNode29->setName("ActivityFinalNode29");
			fUML_Tests_TestCallSender_ActivityFinalNode29->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestCallSender->addNode(fUML_Tests_TestCallSender_ActivityFinalNode29);
			// ReadSelfAction ReadSelf
			fUML_Tests_TestCallSender_ReadSelf->setThisExecutableNodePtr(fUML_Tests_TestCallSender_ReadSelf);
			fUML_Tests_TestCallSender_ReadSelf->setName("ReadSelf");
			fUML_Tests_TestCallSender_ReadSelf->setVisibility(VisibilityKind::public_);
				// OutputPin ReadSelf.result
				fUML_Tests_TestCallSender_ReadSelf_ReadSelf_result->setThisElementPtr(fUML_Tests_TestCallSender_ReadSelf_ReadSelf_result);
				fUML_Tests_TestCallSender_ReadSelf_ReadSelf_result->setName("ReadSelf.result");
				fUML_Tests_TestCallSender_ReadSelf_ReadSelf_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSender_ReadSelf->setResult(fUML_Tests_TestCallSender_ReadSelf_ReadSelf_result);
		fUML_Tests_TestCallSender->addNode(fUML_Tests_TestCallSender_ReadSelf);
			// CallOperationAction Call(test)
			fUML_Tests_TestCallSender_Call_test->setThisExecutableNodePtr(fUML_Tests_TestCallSender_Call_test);
			fUML_Tests_TestCallSender_Call_test->setName("Call(test)");
			fUML_Tests_TestCallSender_Call_test->setVisibility(VisibilityKind::public_);
				// OutputPin Call(test).output
				fUML_Tests_TestCallSender_Call_test_Call_test_output->setThisElementPtr(fUML_Tests_TestCallSender_Call_test_Call_test_output);
				fUML_Tests_TestCallSender_Call_test_Call_test_output->setName("Call(test).output");
				fUML_Tests_TestCallSender_Call_test_Call_test_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCallSender_Call_test_Call_test_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestCallSender_Call_test->addResult(fUML_Tests_TestCallSender_Call_test_Call_test_output);
			fUML_Tests_TestCallSender_Call_test->setOperation(fUML_Tests_TestCallAccepter_test);
				// InputPin Call(test).target
				fUML_Tests_TestCallSender_Call_test_Call_test_target->setThisElementPtr(fUML_Tests_TestCallSender_Call_test_Call_test_target);
				fUML_Tests_TestCallSender_Call_test_Call_test_target->setName("Call(test).target");
				fUML_Tests_TestCallSender_Call_test_Call_test_target->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCallSender_Call_test_Call_test_target->setType(fUML_Tests_TestCallAccepter);
			fUML_Tests_TestCallSender_Call_test->setTarget(fUML_Tests_TestCallSender_Call_test_Call_test_target);
				// InputPin Call(test).input
				fUML_Tests_TestCallSender_Call_test_Call_test_input->setThisElementPtr(fUML_Tests_TestCallSender_Call_test_Call_test_input);
				fUML_Tests_TestCallSender_Call_test_Call_test_input->setName("Call(test).input");
				fUML_Tests_TestCallSender_Call_test_Call_test_input->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCallSender_Call_test_Call_test_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestCallSender_Call_test->addArgument(fUML_Tests_TestCallSender_Call_test_Call_test_input);
		fUML_Tests_TestCallSender->addNode(fUML_Tests_TestCallSender_Call_test);
			// ValueSpecificationAction Value(0)
			fUML_Tests_TestCallSender_Value_0->setThisExecutableNodePtr(fUML_Tests_TestCallSender_Value_0);
			fUML_Tests_TestCallSender_Value_0->setName("Value(0)");
			fUML_Tests_TestCallSender_Value_0->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger45
				fUML_Tests_TestCallSender_Value_0_LiteralInteger45->setThisElementPtr(fUML_Tests_TestCallSender_Value_0_LiteralInteger45);
				fUML_Tests_TestCallSender_Value_0_LiteralInteger45->setName("LiteralInteger45");
				fUML_Tests_TestCallSender_Value_0_LiteralInteger45->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCallSender_Value_0_LiteralInteger45->setValue(0);
			fUML_Tests_TestCallSender_Value_0->setValue(fUML_Tests_TestCallSender_Value_0_LiteralInteger45);
				// OutputPin Value(0).result
				fUML_Tests_TestCallSender_Value_0_Value_0_result->setThisElementPtr(fUML_Tests_TestCallSender_Value_0_Value_0_result);
				fUML_Tests_TestCallSender_Value_0_Value_0_result->setName("Value(0).result");
				fUML_Tests_TestCallSender_Value_0_Value_0_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCallSender_Value_0_Value_0_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestCallSender_Value_0->setResult(fUML_Tests_TestCallSender_Value_0_Value_0_result);
		fUML_Tests_TestCallSender->addNode(fUML_Tests_TestCallSender_Value_0);
			// AcceptEventAction Accept(TestSignal)
			fUML_Tests_TestCallSender_Accept_TestSignal->setThisExecutableNodePtr(fUML_Tests_TestCallSender_Accept_TestSignal);
			fUML_Tests_TestCallSender_Accept_TestSignal->setName("Accept(TestSignal)");
			fUML_Tests_TestCallSender_Accept_TestSignal->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCallSender_Accept_TestSignal_Trigger38->setName("Trigger38");
				fUML_Tests_TestCallSender_Accept_TestSignal_Trigger38->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCallSender_Accept_TestSignal_Trigger38->setEvent(fUML_Tests_SignalEvent857);
			fUML_Tests_TestCallSender_Accept_TestSignal->addTrigger(fUML_Tests_TestCallSender_Accept_TestSignal_Trigger38);
		fUML_Tests_TestCallSender->addNode(fUML_Tests_TestCallSender_Accept_TestSignal);
			// CreateObjectAction Create(TestCallAccepter)
			fUML_Tests_TestCallSender_Create_TestCallAccepter->setThisExecutableNodePtr(fUML_Tests_TestCallSender_Create_TestCallAccepter);
			fUML_Tests_TestCallSender_Create_TestCallAccepter->setName("Create(TestCallAccepter)");
			fUML_Tests_TestCallSender_Create_TestCallAccepter->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSender_Create_TestCallAccepter->setClassifier(fUML_Tests_TestCallAccepter);
				// OutputPin Create(TestCallAccepter).result
				fUML_Tests_TestCallSender_Create_TestCallAccepter_Create_TestCallAccepter_result->setThisElementPtr(fUML_Tests_TestCallSender_Create_TestCallAccepter_Create_TestCallAccepter_result);
				fUML_Tests_TestCallSender_Create_TestCallAccepter_Create_TestCallAccepter_result->setName("Create(TestCallAccepter).result");
				fUML_Tests_TestCallSender_Create_TestCallAccepter_Create_TestCallAccepter_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSender_Create_TestCallAccepter->setResult(fUML_Tests_TestCallSender_Create_TestCallAccepter_Create_TestCallAccepter_result);
		fUML_Tests_TestCallSender->addNode(fUML_Tests_TestCallSender_Create_TestCallAccepter);
			// StartObjectBehaviorAction Start(TestCallAccepter)
			fUML_Tests_TestCallSender_Start_TestCallAccepter->setThisExecutableNodePtr(fUML_Tests_TestCallSender_Start_TestCallAccepter);
			fUML_Tests_TestCallSender_Start_TestCallAccepter->setName("Start(TestCallAccepter)");
			fUML_Tests_TestCallSender_Start_TestCallAccepter->setVisibility(VisibilityKind::public_);
				// InputPin Start(TestCallAccepter).object
				fUML_Tests_TestCallSender_Start_TestCallAccepter_Start_TestCallAccepter_object->setThisElementPtr(fUML_Tests_TestCallSender_Start_TestCallAccepter_Start_TestCallAccepter_object);
				fUML_Tests_TestCallSender_Start_TestCallAccepter_Start_TestCallAccepter_object->setName("Start(TestCallAccepter).object");
				fUML_Tests_TestCallSender_Start_TestCallAccepter_Start_TestCallAccepter_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSender_Start_TestCallAccepter->setObject(fUML_Tests_TestCallSender_Start_TestCallAccepter_Start_TestCallAccepter_object);
		fUML_Tests_TestCallSender->addNode(fUML_Tests_TestCallSender_Start_TestCallAccepter);
			// ObjectFlow ObjectFlow27 from ReadSelf.result to Write(value).object
			fUML_Tests_TestCallSender_ObjectFlow27->setThisActivityEdgePtr(fUML_Tests_TestCallSender_ObjectFlow27);
			fUML_Tests_TestCallSender_ObjectFlow27->setName("ObjectFlow27");
			fUML_Tests_TestCallSender_ObjectFlow27->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSender_ObjectFlow27->setSource(fUML_Tests_TestCallSender_ReadSelf_ReadSelf_result);
			fUML_Tests_TestCallSender_ObjectFlow27->setTarget(fUML_Tests_TestCallSender_Write_value_Write_value_object);
		fUML_Tests_TestCallSender->addEdge(fUML_Tests_TestCallSender_ObjectFlow27);
			// ControlFlow ControlFlow41 from Start(TestCallAccepter) to Call(test)
			fUML_Tests_TestCallSender_ControlFlow41->setThisActivityEdgePtr(fUML_Tests_TestCallSender_ControlFlow41);
			fUML_Tests_TestCallSender_ControlFlow41->setName("ControlFlow41");
			fUML_Tests_TestCallSender_ControlFlow41->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSender_ControlFlow41->setSource(fUML_Tests_TestCallSender_Start_TestCallAccepter);
			fUML_Tests_TestCallSender_ControlFlow41->setTarget(fUML_Tests_TestCallSender_Call_test);
		fUML_Tests_TestCallSender->addEdge(fUML_Tests_TestCallSender_ControlFlow41);
			// ObjectFlow ObjectFlow30 from ForkNode to Start(TestCallAccepter).object
			fUML_Tests_TestCallSender_ObjectFlow30->setThisActivityEdgePtr(fUML_Tests_TestCallSender_ObjectFlow30);
			fUML_Tests_TestCallSender_ObjectFlow30->setName("ObjectFlow30");
			fUML_Tests_TestCallSender_ObjectFlow30->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSender_ObjectFlow30->setSource(fUML_Tests_TestCallSender_ForkNode);
			fUML_Tests_TestCallSender_ObjectFlow30->setTarget(fUML_Tests_TestCallSender_Start_TestCallAccepter_Start_TestCallAccepter_object);
		fUML_Tests_TestCallSender->addEdge(fUML_Tests_TestCallSender_ObjectFlow30);
			// ObjectFlow ObjectFlow32 from Call(test).output to Write(value).value
			fUML_Tests_TestCallSender_ObjectFlow32->setThisActivityEdgePtr(fUML_Tests_TestCallSender_ObjectFlow32);
			fUML_Tests_TestCallSender_ObjectFlow32->setName("ObjectFlow32");
			fUML_Tests_TestCallSender_ObjectFlow32->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSender_ObjectFlow32->setSource(fUML_Tests_TestCallSender_Call_test_Call_test_output);
			fUML_Tests_TestCallSender_ObjectFlow32->setTarget(fUML_Tests_TestCallSender_Write_value_Write_value_value);
		fUML_Tests_TestCallSender->addEdge(fUML_Tests_TestCallSender_ObjectFlow32);
			// ObjectFlow ObjectFlow43 from Value(0).result to Call(test).input
			fUML_Tests_TestCallSender_ObjectFlow43->setThisActivityEdgePtr(fUML_Tests_TestCallSender_ObjectFlow43);
			fUML_Tests_TestCallSender_ObjectFlow43->setName("ObjectFlow43");
			fUML_Tests_TestCallSender_ObjectFlow43->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSender_ObjectFlow43->setSource(fUML_Tests_TestCallSender_Value_0_Value_0_result);
			fUML_Tests_TestCallSender_ObjectFlow43->setTarget(fUML_Tests_TestCallSender_Call_test_Call_test_input);
		fUML_Tests_TestCallSender->addEdge(fUML_Tests_TestCallSender_ObjectFlow43);
			// ControlFlow ControlFlow34 from Accept(TestSignal) to ActivityFinalNode29
			fUML_Tests_TestCallSender_ControlFlow34->setThisActivityEdgePtr(fUML_Tests_TestCallSender_ControlFlow34);
			fUML_Tests_TestCallSender_ControlFlow34->setName("ControlFlow34");
			fUML_Tests_TestCallSender_ControlFlow34->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSender_ControlFlow34->setSource(fUML_Tests_TestCallSender_Accept_TestSignal);
			fUML_Tests_TestCallSender_ControlFlow34->setTarget(fUML_Tests_TestCallSender_ActivityFinalNode29);
		fUML_Tests_TestCallSender->addEdge(fUML_Tests_TestCallSender_ControlFlow34);
			// ObjectFlow ObjectFlow36 from Create(TestCallAccepter).result to ForkNode
			fUML_Tests_TestCallSender_ObjectFlow36->setThisActivityEdgePtr(fUML_Tests_TestCallSender_ObjectFlow36);
			fUML_Tests_TestCallSender_ObjectFlow36->setName("ObjectFlow36");
			fUML_Tests_TestCallSender_ObjectFlow36->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSender_ObjectFlow36->setSource(fUML_Tests_TestCallSender_Create_TestCallAccepter_Create_TestCallAccepter_result);
			fUML_Tests_TestCallSender_ObjectFlow36->setTarget(fUML_Tests_TestCallSender_ForkNode);
		fUML_Tests_TestCallSender->addEdge(fUML_Tests_TestCallSender_ObjectFlow36);
			// ObjectFlow ObjectFlow39 from ForkNode to Call(test).target
			fUML_Tests_TestCallSender_ObjectFlow39->setThisActivityEdgePtr(fUML_Tests_TestCallSender_ObjectFlow39);
			fUML_Tests_TestCallSender_ObjectFlow39->setName("ObjectFlow39");
			fUML_Tests_TestCallSender_ObjectFlow39->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSender_ObjectFlow39->setSource(fUML_Tests_TestCallSender_ForkNode);
			fUML_Tests_TestCallSender_ObjectFlow39->setTarget(fUML_Tests_TestCallSender_Call_test_Call_test_target);
		fUML_Tests_TestCallSender->addEdge(fUML_Tests_TestCallSender_ObjectFlow39);
	fUML_Tests->addPackagedElement(fUML_Tests_TestCallSender);
		// SignalEvent SignalEvent46
		fUML_Tests_SignalEvent46->setThisElementPtr(fUML_Tests_SignalEvent46);
		fUML_Tests_SignalEvent46->setName("SignalEvent46");
		fUML_Tests_SignalEvent46->setVisibility(VisibilityKind::public_);
		fUML_Tests_SignalEvent46->setSignal(fUML_Tests_TestSignal);
	fUML_Tests->addPackagedElement(fUML_Tests_SignalEvent46);
		// Class Specific
		fUML_Tests_Specific->setThisClass_Ptr(fUML_Tests_Specific);
		fUML_Tests_Specific->setName("Specific");
		fUML_Tests_Specific->setVisibility(VisibilityKind::public_);
		
			// Generalization to General
			fUML_Tests_Specific_Generalization47->setThisElementPtr(fUML_Tests_Specific_Generalization47);
			fUML_Tests_Specific_Generalization47->setGeneral(fUML_Tests_General);
		fUML_Tests_Specific->addGeneralization(fUML_Tests_Specific_Generalization47);
			// Property x
			fUML_Tests_Specific_x->setThisElementPtr(fUML_Tests_Specific_x);
			fUML_Tests_Specific_x->setName("x");
			fUML_Tests_Specific_x->setVisibility(VisibilityKind::public_);
		fUML_Tests_Specific->addOwnedAttribute(fUML_Tests_Specific_x);
	fUML_Tests->addPackagedElement(fUML_Tests_Specific);
		// Activity TestClassAttributeWriter
		fUML_Tests_TestClassAttributeWriter->setThisActivityPtr(fUML_Tests_TestClassAttributeWriter);
		fUML_Tests_TestClassAttributeWriter->setName("TestClassAttributeWriter");
		fUML_Tests_TestClassAttributeWriter->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestClassAttributeWriter->isReentrant = false;
			// Parameter objectIn
			fUML_Tests_TestClassAttributeWriter_objectIn->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_objectIn);
			fUML_Tests_TestClassAttributeWriter_objectIn->setName("objectIn");
			fUML_Tests_TestClassAttributeWriter_objectIn->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeWriter_objectIn->setType(fUML_Tests_TestClass);
		fUML_Tests_TestClassAttributeWriter->addOwnedParameter(fUML_Tests_TestClassAttributeWriter_objectIn);
			// Parameter value
			fUML_Tests_TestClassAttributeWriter_value->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_value);
			fUML_Tests_TestClassAttributeWriter_value->setName("value");
			fUML_Tests_TestClassAttributeWriter_value->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeWriter_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
		fUML_Tests_TestClassAttributeWriter->addOwnedParameter(fUML_Tests_TestClassAttributeWriter_value);
			// Parameter objectOut
			fUML_Tests_TestClassAttributeWriter_objectOut->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_objectOut);
			fUML_Tests_TestClassAttributeWriter_objectOut->setName("objectOut");
			fUML_Tests_TestClassAttributeWriter_objectOut->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeWriter_objectOut->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeWriter_objectOut->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassAttributeWriter->addOwnedParameter(fUML_Tests_TestClassAttributeWriter_objectOut);
			// ActivityParameterNode Parameter(objectOut)
			fUML_Tests_TestClassAttributeWriter_Parameter_objectOut->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_Parameter_objectOut);
			fUML_Tests_TestClassAttributeWriter_Parameter_objectOut->setName("Parameter(objectOut)");
			fUML_Tests_TestClassAttributeWriter_Parameter_objectOut->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeWriter_Parameter_objectOut->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeWriter_Parameter_objectOut->setParameter(fUML_Tests_TestClassAttributeWriter_objectOut);
		fUML_Tests_TestClassAttributeWriter->addNode(fUML_Tests_TestClassAttributeWriter_Parameter_objectOut);
			// AddStructuralFeatureValueAction Add(y)
			fUML_Tests_TestClassAttributeWriter_Add_y->setThisExecutableNodePtr(fUML_Tests_TestClassAttributeWriter_Add_y);
			fUML_Tests_TestClassAttributeWriter_Add_y->setName("Add(y)");
			fUML_Tests_TestClassAttributeWriter_Add_y->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeWriter_Add_y->setStructuralFeature(fUML_Tests_TestClass_y);
				// InputPin Add(x).object
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object->setName("Add(x).object");
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeWriter_Add_y->setObject(fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object);
				// InputPin Add(y).value
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value->setName("Add(y).value");
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassAttributeWriter_Add_y->setValue(fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value);
				// OutputPin Add(y).result
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result->setName("Add(y).result");
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeWriter_Add_y->setResult(fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result);
				// InputPin Add(y).insertAt
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt->setName("Add(y).insertAt");
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestClassAttributeWriter_Add_y->setInsertAt(fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt);
		fUML_Tests_TestClassAttributeWriter->addNode(fUML_Tests_TestClassAttributeWriter_Add_y);
			// ActivityParameterNode Parameter(objectIn)
			fUML_Tests_TestClassAttributeWriter_Parameter_objectIn->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_Parameter_objectIn);
			fUML_Tests_TestClassAttributeWriter_Parameter_objectIn->setName("Parameter(objectIn)");
			fUML_Tests_TestClassAttributeWriter_Parameter_objectIn->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeWriter_Parameter_objectIn->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeWriter_Parameter_objectIn->setParameter(fUML_Tests_TestClassAttributeWriter_objectIn);
		fUML_Tests_TestClassAttributeWriter->addNode(fUML_Tests_TestClassAttributeWriter_Parameter_objectIn);
			// ActivityParameterNode Parameter(value)
			fUML_Tests_TestClassAttributeWriter_Parameter_value->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_Parameter_value);
			fUML_Tests_TestClassAttributeWriter_Parameter_value->setName("Parameter(value)");
			fUML_Tests_TestClassAttributeWriter_Parameter_value->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeWriter_Parameter_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassAttributeWriter_Parameter_value->setParameter(fUML_Tests_TestClassAttributeWriter_value);
		fUML_Tests_TestClassAttributeWriter->addNode(fUML_Tests_TestClassAttributeWriter_Parameter_value);
			// ValueSpecificationAction Value(*)
			fUML_Tests_TestClassAttributeWriter_Value_times->setThisExecutableNodePtr(fUML_Tests_TestClassAttributeWriter_Value_times);
			fUML_Tests_TestClassAttributeWriter_Value_times->setName("Value(*)");
			fUML_Tests_TestClassAttributeWriter_Value_times->setVisibility(VisibilityKind::public_);
				// LiteralUnlimitedNatural LiteralUnlimitedNatural70
				fUML_Tests_TestClassAttributeWriter_Value_times_LiteralUnlimitedNatural70->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_Value_times_LiteralUnlimitedNatural70);
				fUML_Tests_TestClassAttributeWriter_Value_times_LiteralUnlimitedNatural70->setName("LiteralUnlimitedNatural70");
				fUML_Tests_TestClassAttributeWriter_Value_times_LiteralUnlimitedNatural70->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeWriter_Value_times_LiteralUnlimitedNatural70->setValue(-1);
			fUML_Tests_TestClassAttributeWriter_Value_times->setValue(fUML_Tests_TestClassAttributeWriter_Value_times_LiteralUnlimitedNatural70);
				// OutputPin Value(*).result
				fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result->setThisElementPtr(fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result);
				fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result->setName("Value(*).result");
				fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestClassAttributeWriter_Value_times->setResult(fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result);
		fUML_Tests_TestClassAttributeWriter->addNode(fUML_Tests_TestClassAttributeWriter_Value_times);
			// ObjectFlow ObjectFlow48 from Add(y).result to Parameter(objectOut)
			fUML_Tests_TestClassAttributeWriter_ObjectFlow48->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeWriter_ObjectFlow48);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow48->setName("ObjectFlow48");
			fUML_Tests_TestClassAttributeWriter_ObjectFlow48->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeWriter_ObjectFlow48->setSource(fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_result);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow48->setTarget(fUML_Tests_TestClassAttributeWriter_Parameter_objectOut);
		fUML_Tests_TestClassAttributeWriter->addEdge(fUML_Tests_TestClassAttributeWriter_ObjectFlow48);
			// ObjectFlow ObjectFlow50 from Parameter(value) to Add(y).value
			fUML_Tests_TestClassAttributeWriter_ObjectFlow50->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeWriter_ObjectFlow50);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow50->setName("ObjectFlow50");
			fUML_Tests_TestClassAttributeWriter_ObjectFlow50->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeWriter_ObjectFlow50->setSource(fUML_Tests_TestClassAttributeWriter_Parameter_value);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow50->setTarget(fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_value);
		fUML_Tests_TestClassAttributeWriter->addEdge(fUML_Tests_TestClassAttributeWriter_ObjectFlow50);
			// ObjectFlow ObjectFlow66 from Parameter(objectIn) to Add(x).object
			fUML_Tests_TestClassAttributeWriter_ObjectFlow66->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeWriter_ObjectFlow66);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow66->setName("ObjectFlow66");
			fUML_Tests_TestClassAttributeWriter_ObjectFlow66->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeWriter_ObjectFlow66->setSource(fUML_Tests_TestClassAttributeWriter_Parameter_objectIn);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow66->setTarget(fUML_Tests_TestClassAttributeWriter_Add_y_Add_x_object);
		fUML_Tests_TestClassAttributeWriter->addEdge(fUML_Tests_TestClassAttributeWriter_ObjectFlow66);
			// ObjectFlow ObjectFlow71 from Value(*).result to Add(y).insertAt
			fUML_Tests_TestClassAttributeWriter_ObjectFlow71->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeWriter_ObjectFlow71);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow71->setName("ObjectFlow71");
			fUML_Tests_TestClassAttributeWriter_ObjectFlow71->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeWriter_ObjectFlow71->setSource(fUML_Tests_TestClassAttributeWriter_Value_times_Value_times_result);
			fUML_Tests_TestClassAttributeWriter_ObjectFlow71->setTarget(fUML_Tests_TestClassAttributeWriter_Add_y_Add_y_insertAt);
		fUML_Tests_TestClassAttributeWriter->addEdge(fUML_Tests_TestClassAttributeWriter_ObjectFlow71);
	fUML_Tests->addPackagedElement(fUML_Tests_TestClassAttributeWriter);
		// Activity TestAssociationEndWriterReader
		fUML_Tests_TestAssociationEndWriterReader->setThisActivityPtr(fUML_Tests_TestAssociationEndWriterReader);
		fUML_Tests_TestAssociationEndWriterReader->setName("TestAssociationEndWriterReader");
		fUML_Tests_TestAssociationEndWriterReader->setVisibility(VisibilityKind::public_);
			// Parameter object1
			fUML_Tests_TestAssociationEndWriterReader_object1->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_object1);
			fUML_Tests_TestAssociationEndWriterReader_object1->setName("object1");
			fUML_Tests_TestAssociationEndWriterReader_object1->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_object1->setType(fUML_Tests_TestClass);
		fUML_Tests_TestAssociationEndWriterReader->addOwnedParameter(fUML_Tests_TestAssociationEndWriterReader_object1);
			// Parameter object2
			fUML_Tests_TestAssociationEndWriterReader_object2->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_object2);
			fUML_Tests_TestAssociationEndWriterReader_object2->setName("object2");
			fUML_Tests_TestAssociationEndWriterReader_object2->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_object2->setType(fUML_Tests_TestClass);
		fUML_Tests_TestAssociationEndWriterReader->addOwnedParameter(fUML_Tests_TestAssociationEndWriterReader_object2);
			// Parameter object3
			fUML_Tests_TestAssociationEndWriterReader_object3->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_object3);
			fUML_Tests_TestAssociationEndWriterReader_object3->setName("object3");
			fUML_Tests_TestAssociationEndWriterReader_object3->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_object3->setType(fUML_Tests_TestClass);
		fUML_Tests_TestAssociationEndWriterReader->addOwnedParameter(fUML_Tests_TestAssociationEndWriterReader_object3);
			// Parameter output1
			fUML_Tests_TestAssociationEndWriterReader_output1->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_output1);
			fUML_Tests_TestAssociationEndWriterReader_output1->setName("output1");
			fUML_Tests_TestAssociationEndWriterReader_output1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_output1->setUpper(-1);
			fUML_Tests_TestAssociationEndWriterReader_output1->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_output1->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestAssociationEndWriterReader->addOwnedParameter(fUML_Tests_TestAssociationEndWriterReader_output1);
			// Parameter output2
			fUML_Tests_TestAssociationEndWriterReader_output2->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_output2);
			fUML_Tests_TestAssociationEndWriterReader_output2->setName("output2");
			fUML_Tests_TestAssociationEndWriterReader_output2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_output2->setUpper(-1);
			fUML_Tests_TestAssociationEndWriterReader_output2->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_output2->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestAssociationEndWriterReader->addOwnedParameter(fUML_Tests_TestAssociationEndWriterReader_output2);
			// Parameter expected
			fUML_Tests_TestAssociationEndWriterReader_expected->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_expected);
			fUML_Tests_TestAssociationEndWriterReader_expected->setName("expected");
			fUML_Tests_TestAssociationEndWriterReader_expected->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_expected->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_expected->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestAssociationEndWriterReader->addOwnedParameter(fUML_Tests_TestAssociationEndWriterReader_expected);
			// ActivityParameterNode expectedNode
			fUML_Tests_TestAssociationEndWriterReader_expectedNode->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_expectedNode);
			fUML_Tests_TestAssociationEndWriterReader_expectedNode->setName("expectedNode");
			fUML_Tests_TestAssociationEndWriterReader_expectedNode->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_expectedNode->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_expectedNode->setParameter(fUML_Tests_TestAssociationEndWriterReader_expected);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_expectedNode);
			// ActivityParameterNode output1Node
			fUML_Tests_TestAssociationEndWriterReader_output1Node->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_output1Node);
			fUML_Tests_TestAssociationEndWriterReader_output1Node->setName("output1Node");
			fUML_Tests_TestAssociationEndWriterReader_output1Node->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_output1Node->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_output1Node->setParameter(fUML_Tests_TestAssociationEndWriterReader_output1);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_output1Node);
			// ForkNode ForkNode130
			fUML_Tests_TestAssociationEndWriterReader_ForkNode130->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_ForkNode130);
			fUML_Tests_TestAssociationEndWriterReader_ForkNode130->setName("ForkNode130");
			fUML_Tests_TestAssociationEndWriterReader_ForkNode130->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_ForkNode130);
			// ValueSpecificationAction Value(*)
			fUML_Tests_TestAssociationEndWriterReader_Value_times->setThisExecutableNodePtr(fUML_Tests_TestAssociationEndWriterReader_Value_times);
			fUML_Tests_TestAssociationEndWriterReader_Value_times->setName("Value(*)");
			fUML_Tests_TestAssociationEndWriterReader_Value_times->setVisibility(VisibilityKind::public_);
				// LiteralUnlimitedNatural LiteralUnlimitedNatural77
				fUML_Tests_TestAssociationEndWriterReader_Value_times_LiteralUnlimitedNatural77->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Value_times_LiteralUnlimitedNatural77);
				fUML_Tests_TestAssociationEndWriterReader_Value_times_LiteralUnlimitedNatural77->setName("LiteralUnlimitedNatural77");
				fUML_Tests_TestAssociationEndWriterReader_Value_times_LiteralUnlimitedNatural77->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Value_times_LiteralUnlimitedNatural77->setValue(-1);
			fUML_Tests_TestAssociationEndWriterReader_Value_times->setValue(fUML_Tests_TestAssociationEndWriterReader_Value_times_LiteralUnlimitedNatural77);
				// OutputPin result
				fUML_Tests_TestAssociationEndWriterReader_Value_times_result->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Value_times_result);
				fUML_Tests_TestAssociationEndWriterReader_Value_times_result->setName("result");
				fUML_Tests_TestAssociationEndWriterReader_Value_times_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Value_times->setResult(fUML_Tests_TestAssociationEndWriterReader_Value_times_result);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_Value_times);
			// ValueSpecificationAction Value(2)
			fUML_Tests_TestAssociationEndWriterReader_Value_2->setThisExecutableNodePtr(fUML_Tests_TestAssociationEndWriterReader_Value_2);
			fUML_Tests_TestAssociationEndWriterReader_Value_2->setName("Value(2)");
			fUML_Tests_TestAssociationEndWriterReader_Value_2->setVisibility(VisibilityKind::public_);
				// LiteralUnlimitedNatural LiteralUnlimitedNatural135
				fUML_Tests_TestAssociationEndWriterReader_Value_2_LiteralUnlimitedNatural135->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Value_2_LiteralUnlimitedNatural135);
				fUML_Tests_TestAssociationEndWriterReader_Value_2_LiteralUnlimitedNatural135->setName("LiteralUnlimitedNatural135");
				fUML_Tests_TestAssociationEndWriterReader_Value_2_LiteralUnlimitedNatural135->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Value_2_LiteralUnlimitedNatural135->setValue(2);
			fUML_Tests_TestAssociationEndWriterReader_Value_2->setValue(fUML_Tests_TestAssociationEndWriterReader_Value_2_LiteralUnlimitedNatural135);
				// OutputPin result
				fUML_Tests_TestAssociationEndWriterReader_Value_2_result->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Value_2_result);
				fUML_Tests_TestAssociationEndWriterReader_Value_2_result->setName("result");
				fUML_Tests_TestAssociationEndWriterReader_Value_2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Value_2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestAssociationEndWriterReader_Value_2->setResult(fUML_Tests_TestAssociationEndWriterReader_Value_2_result);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_Value_2);
			// ActivityParameterNode object1Node
			fUML_Tests_TestAssociationEndWriterReader_object1Node->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_object1Node);
			fUML_Tests_TestAssociationEndWriterReader_object1Node->setName("object1Node");
			fUML_Tests_TestAssociationEndWriterReader_object1Node->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_object1Node->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_object1Node->setParameter(fUML_Tests_TestAssociationEndWriterReader_object1);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_object1Node);
			// RemoveStructuralFeatureValueAction RemoveAt(end2)
			fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2->setThisExecutableNodePtr(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2->setName("RemoveAt(end2)");
			fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2->setStructuralFeature(fUML_Tests_TestAssociation_end2);
				// InputPin object
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object->setName("object");
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2->setObject(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object);
				// OutputPin result
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result->setName("result");
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2->setResult(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result);
				// InputPin removeAt
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt->setName("removeAt");
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2->setRemoveAt(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2);
			// AddStructuralFeatureValueAction Add(end2)-1
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1->setThisExecutableNodePtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1->setName("Add(end2)-1");
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1->setStructuralFeature(fUML_Tests_TestAssociation_end2);
				// InputPin object
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object->setName("object");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1->setObject(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object);
				// InputPin value
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value->setName("value");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1->setValue(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value);
				// OutputPin result
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result->setName("result");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1->setResult(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result);
				// InputPin insertAt
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt->setName("insertAt");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1->setInsertAt(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1);
			// RemoveStructuralFeatureValueAction RemoveAll(end2)
			fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2->setThisExecutableNodePtr(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2->setName("RemoveAll(end2)");
			fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2->setStructuralFeature(fUML_Tests_TestAssociation_end2);
				// InputPin object
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object->setName("object");
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2->setObject(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object);
				// InputPin value
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value->setName("value");
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2->setValue(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value);
				// OutputPin result
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result);
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result->setName("result");
				fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2->setResult(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result);
			fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2->setIsRemoveDuplicates(true);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2);
			// AddStructuralFeatureValueAction Add(end2)-3
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3->setThisExecutableNodePtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3->setName("Add(end2)-3");
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3->setStructuralFeature(fUML_Tests_TestAssociation_end2);
				// InputPin object
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object->setName("object");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3->setObject(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object);
				// InputPin value
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value->setName("value");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3->setValue(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value);
				// OutputPin result
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result->setName("result");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3->setResult(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result);
				// InputPin insertAt
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt->setName("insertAt");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3->setInsertAt(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3);
			// ActivityParameterNode output2Node
			fUML_Tests_TestAssociationEndWriterReader_output2Node->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_output2Node);
			fUML_Tests_TestAssociationEndWriterReader_output2Node->setName("output2Node");
			fUML_Tests_TestAssociationEndWriterReader_output2Node->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_output2Node->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_output2Node->setParameter(fUML_Tests_TestAssociationEndWriterReader_output2);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_output2Node);
			// ForkNode ForkNode92
			fUML_Tests_TestAssociationEndWriterReader_ForkNode92->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_ForkNode92);
			fUML_Tests_TestAssociationEndWriterReader_ForkNode92->setName("ForkNode92");
			fUML_Tests_TestAssociationEndWriterReader_ForkNode92->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_ForkNode92);
			// ForkNode ForkNode97
			fUML_Tests_TestAssociationEndWriterReader_ForkNode97->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_ForkNode97);
			fUML_Tests_TestAssociationEndWriterReader_ForkNode97->setName("ForkNode97");
			fUML_Tests_TestAssociationEndWriterReader_ForkNode97->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_ForkNode97);
			// ActivityParameterNode object2Node
			fUML_Tests_TestAssociationEndWriterReader_object2Node->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_object2Node);
			fUML_Tests_TestAssociationEndWriterReader_object2Node->setName("object2Node");
			fUML_Tests_TestAssociationEndWriterReader_object2Node->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_object2Node->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_object2Node->setParameter(fUML_Tests_TestAssociationEndWriterReader_object2);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_object2Node);
			// ActivityParameterNode object3Node
			fUML_Tests_TestAssociationEndWriterReader_object3Node->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_object3Node);
			fUML_Tests_TestAssociationEndWriterReader_object3Node->setName("object3Node");
			fUML_Tests_TestAssociationEndWriterReader_object3Node->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_object3Node->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_object3Node->setParameter(fUML_Tests_TestAssociationEndWriterReader_object3);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_object3Node);
			// ReadStructuralFeatureAction Read(end2)-1
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1->setThisExecutableNodePtr(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1);
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1->setName("Read(end2)-1");
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1->setStructuralFeature(fUML_Tests_TestAssociation_end2);
				// InputPin object
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object->setName("object");
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1->setObject(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object);
				// OutputPin result
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result->setName("result");
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result->setType(fUML_Tests_TestClass);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result->setUpper(-1);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result->setLower(0);
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1->setResult(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1);
			// ForkNode ForkNode168
			fUML_Tests_TestAssociationEndWriterReader_ForkNode168->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_ForkNode168);
			fUML_Tests_TestAssociationEndWriterReader_ForkNode168->setName("ForkNode168");
			fUML_Tests_TestAssociationEndWriterReader_ForkNode168->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_ForkNode168);
			// AddStructuralFeatureValueAction Add(end2)-2
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2->setThisExecutableNodePtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2->setName("Add(end2)-2");
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2->setStructuralFeature(fUML_Tests_TestAssociation_end2);
				// InputPin object
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object->setName("object");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2->setObject(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object);
				// InputPin value
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value->setName("value");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2->setValue(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value);
				// OutputPin result
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result->setName("result");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2->setResult(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result);
				// InputPin insertAt
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt);
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt->setName("insertAt");
				fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2->setInsertAt(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2);
			// ReadStructuralFeatureAction Read(end2)-2
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2->setThisExecutableNodePtr(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2);
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2->setName("Read(end2)-2");
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2->setStructuralFeature(fUML_Tests_TestAssociation_end2);
				// InputPin object
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object->setName("object");
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2->setObject(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object);
				// OutputPin result
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result->setThisElementPtr(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result->setName("result");
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result->setType(fUML_Tests_TestClass);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result->setUpper(-1);
				fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result->setLower(0);
			fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2->setResult(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result);
		fUML_Tests_TestAssociationEndWriterReader->addNode(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2);
			// ObjectFlow ObjectFlow124 from ForkNode97 to value
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow124->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow124);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow124->setName("ObjectFlow124");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow124->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow124->setSource(fUML_Tests_TestAssociationEndWriterReader_ForkNode97);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow124->setTarget(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_value);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow124);
			// ObjectFlow ObjectFlow73 from ForkNode168 to value
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow73->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow73);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow73->setName("ObjectFlow73");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow73->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow73->setSource(fUML_Tests_TestAssociationEndWriterReader_ForkNode168);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow73->setTarget(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_value);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow73);
			// ObjectFlow ObjectFlow75 from result to object
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow75->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow75);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow75->setName("ObjectFlow75");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow75->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow75->setSource(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_result);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow75->setTarget(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_object);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow75);
			// ObjectFlow ObjectFlow128 from object2Node to ForkNode168
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow128->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow128);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow128->setName("ObjectFlow128");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow128->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow128->setSource(fUML_Tests_TestAssociationEndWriterReader_object2Node);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow128->setTarget(fUML_Tests_TestAssociationEndWriterReader_ForkNode168);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow128);
			// ObjectFlow ObjectFlow126 from object3Node to ForkNode97
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow126->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow126);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow126->setName("ObjectFlow126");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow126->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow126->setSource(fUML_Tests_TestAssociationEndWriterReader_object3Node);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow126->setTarget(fUML_Tests_TestAssociationEndWriterReader_ForkNode97);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow126);
			// ObjectFlow ObjectFlow131 from result to object
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow131->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow131);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow131->setName("ObjectFlow131");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow131->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow131->setSource(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_result);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow131->setTarget(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_object);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow131);
			// ObjectFlow ObjectFlow142 from object1Node to object
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow142->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow142);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow142->setName("ObjectFlow142");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow142->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow142->setSource(fUML_Tests_TestAssociationEndWriterReader_object1Node);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow142->setTarget(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_object);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow142);
			// ObjectFlow ObjectFlow152 from result to output1Node
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow152->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow152);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow152->setName("ObjectFlow152");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow152->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow152->setSource(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_result);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow152->setTarget(fUML_Tests_TestAssociationEndWriterReader_output1Node);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow152);
			// ObjectFlow ObjectFlow154 from ForkNode168 to expectedNode
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow154->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow154);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow154->setName("ObjectFlow154");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow154->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow154->setSource(fUML_Tests_TestAssociationEndWriterReader_ForkNode168);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow154->setTarget(fUML_Tests_TestAssociationEndWriterReader_expectedNode);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow154);
			// ObjectFlow ObjectFlow156 from ForkNode97 to value
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow156->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow156);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow156->setName("ObjectFlow156");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow156->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow156->setSource(fUML_Tests_TestAssociationEndWriterReader_ForkNode97);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow156->setTarget(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_value);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow156);
			// ObjectFlow ObjectFlow93 from result to ForkNode130
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow93->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow93);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow93->setName("ObjectFlow93");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow93->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow93->setSource(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_result);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow93->setTarget(fUML_Tests_TestAssociationEndWriterReader_ForkNode130);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow93);
			// ObjectFlow ObjectFlow158 from ForkNode92 to insertAt
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow158->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow158);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow158->setName("ObjectFlow158");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow158->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow158->setSource(fUML_Tests_TestAssociationEndWriterReader_ForkNode92);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow158->setTarget(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_insertAt);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow158);
			// ControlFlow ControlFlow95 from Read(end2)-1 to RemoveAt(end2)
			fUML_Tests_TestAssociationEndWriterReader_ControlFlow95->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ControlFlow95);
			fUML_Tests_TestAssociationEndWriterReader_ControlFlow95->setName("ControlFlow95");
			fUML_Tests_TestAssociationEndWriterReader_ControlFlow95->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ControlFlow95->setSource(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1);
			fUML_Tests_TestAssociationEndWriterReader_ControlFlow95->setTarget(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ControlFlow95);
			// ObjectFlow ObjectFlow162 from result to removeAt
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow162->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow162);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow162->setName("ObjectFlow162");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow162->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow162->setSource(fUML_Tests_TestAssociationEndWriterReader_Value_2_result);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow162->setTarget(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_removeAt);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow162);
			// ObjectFlow ObjectFlow98 from result to object
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow98->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow98);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow98->setName("ObjectFlow98");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow98->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow98->setSource(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_result);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow98->setTarget(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_object);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow98);
			// ObjectFlow ObjectFlow169 from result to ForkNode92
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow169->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow169);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow169->setName("ObjectFlow169");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow169->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow169->setSource(fUML_Tests_TestAssociationEndWriterReader_Value_times_result);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow169->setTarget(fUML_Tests_TestAssociationEndWriterReader_ForkNode92);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow169);
			// ObjectFlow ObjectFlow108 from ForkNode130 to object
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow108->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow108);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow108->setName("ObjectFlow108");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow108->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow108->setSource(fUML_Tests_TestAssociationEndWriterReader_ForkNode130);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow108->setTarget(fUML_Tests_TestAssociationEndWriterReader_RemoveAt_end2_object);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow108);
			// ObjectFlow ObjectFlow110 from ForkNode92 to insertAt
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow110->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow110);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow110->setName("ObjectFlow110");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow110->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow110->setSource(fUML_Tests_TestAssociationEndWriterReader_ForkNode92);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow110->setTarget(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_insertAt);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow110);
			// ObjectFlow ObjectFlow112 from result to object
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow112->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow112);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow112->setName("ObjectFlow112");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow112->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow112->setSource(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus3_result);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow112->setTarget(fUML_Tests_TestAssociationEndWriterReader_RemoveAll_end2_object);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow112);
			// ObjectFlow ObjectFlow173 from ForkNode92 to insertAt
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow173->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow173);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow173->setName("ObjectFlow173");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow173->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow173->setSource(fUML_Tests_TestAssociationEndWriterReader_ForkNode92);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow173->setTarget(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus2_insertAt);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow173);
			// ObjectFlow ObjectFlow116 from ForkNode130 to object
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow116->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow116);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow116->setName("ObjectFlow116");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow116->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow116->setSource(fUML_Tests_TestAssociationEndWriterReader_ForkNode130);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow116->setTarget(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus1_object);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow116);
			// ObjectFlow ObjectFlow175 from ForkNode168 to value
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow175->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow175);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow175->setName("ObjectFlow175");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow175->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow175->setSource(fUML_Tests_TestAssociationEndWriterReader_ForkNode168);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow175->setTarget(fUML_Tests_TestAssociationEndWriterReader_Add_end2minus1_value);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow175);
			// ObjectFlow ObjectFlow122 from result to output2Node
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow122->setThisActivityEdgePtr(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow122);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow122->setName("ObjectFlow122");
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow122->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow122->setSource(fUML_Tests_TestAssociationEndWriterReader_Read_end2minus2_result);
			fUML_Tests_TestAssociationEndWriterReader_ObjectFlow122->setTarget(fUML_Tests_TestAssociationEndWriterReader_output2Node);
		fUML_Tests_TestAssociationEndWriterReader->addEdge(fUML_Tests_TestAssociationEndWriterReader_ObjectFlow122);
	fUML_Tests->addPackagedElement(fUML_Tests_TestAssociationEndWriterReader);
		// Signal OtherSignal
		fUML_Tests_OtherSignal->setThisSignalPtr(fUML_Tests_OtherSignal);
		fUML_Tests_OtherSignal->setName("OtherSignal");
		fUML_Tests_OtherSignal->setVisibility(VisibilityKind::public_);
	fUML_Tests->addPackagedElement(fUML_Tests_OtherSignal);
		// Class Subclass2
		fUML_Tests_Subclass2->setThisClass_Ptr(fUML_Tests_Subclass2);
		fUML_Tests_Subclass2->setName("Subclass2");
		fUML_Tests_Subclass2->setVisibility(VisibilityKind::public_);
		
			// Generalization to TestClass
			fUML_Tests_Subclass2_Generalization177->setThisElementPtr(fUML_Tests_Subclass2_Generalization177);
			fUML_Tests_Subclass2_Generalization177->setGeneral(fUML_Tests_TestClass);
		fUML_Tests_Subclass2->addGeneralization(fUML_Tests_Subclass2_Generalization177);
			// Property b
			fUML_Tests_Subclass2_b->setThisElementPtr(fUML_Tests_Subclass2_b);
			fUML_Tests_Subclass2_b->setName("b");
			fUML_Tests_Subclass2_b->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_Subclass2_b->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
		fUML_Tests_Subclass2->addOwnedAttribute(fUML_Tests_Subclass2_b);
	fUML_Tests->addPackagedElement(fUML_Tests_Subclass2);
		// Activity TestClassAttributeValueRemover
		fUML_Tests_TestClassAttributeValueRemover->setThisActivityPtr(fUML_Tests_TestClassAttributeValueRemover);
		fUML_Tests_TestClassAttributeValueRemover->setName("TestClassAttributeValueRemover");
		fUML_Tests_TestClassAttributeValueRemover->setVisibility(VisibilityKind::public_);
			// Parameter objectIn
			fUML_Tests_TestClassAttributeValueRemover_objectIn->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_objectIn);
			fUML_Tests_TestClassAttributeValueRemover_objectIn->setName("objectIn");
			fUML_Tests_TestClassAttributeValueRemover_objectIn->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_objectIn->setType(fUML_Tests_TestClass);
		fUML_Tests_TestClassAttributeValueRemover->addOwnedParameter(fUML_Tests_TestClassAttributeValueRemover_objectIn);
			// Parameter objectOut
			fUML_Tests_TestClassAttributeValueRemover_objectOut->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_objectOut);
			fUML_Tests_TestClassAttributeValueRemover_objectOut->setName("objectOut");
			fUML_Tests_TestClassAttributeValueRemover_objectOut->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_objectOut->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeValueRemover_objectOut->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassAttributeValueRemover->addOwnedParameter(fUML_Tests_TestClassAttributeValueRemover_objectOut);
			// RemoveStructuralFeatureValueAction RemoveOne(y)
			fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y->setThisExecutableNodePtr(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y);
			fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y->setName("RemoveOne(y)");
			fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y->setStructuralFeature(fUML_Tests_TestClass_y);
				// InputPin object
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object);
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object->setName("object");
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y->setObject(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object);
				// InputPin value
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value);
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value->setName("value");
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y->setValue(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value);
				// OutputPin result
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result);
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result->setName("result");
				fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y->setResult(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y);
			// ValueSpecificationAction Value(2)
			fUML_Tests_TestClassAttributeValueRemover_Value_2->setThisExecutableNodePtr(fUML_Tests_TestClassAttributeValueRemover_Value_2);
			fUML_Tests_TestClassAttributeValueRemover_Value_2->setName("Value(2)");
			fUML_Tests_TestClassAttributeValueRemover_Value_2->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger209
				fUML_Tests_TestClassAttributeValueRemover_Value_2_LiteralInteger209->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Value_2_LiteralInteger209);
				fUML_Tests_TestClassAttributeValueRemover_Value_2_LiteralInteger209->setName("LiteralInteger209");
				fUML_Tests_TestClassAttributeValueRemover_Value_2_LiteralInteger209->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Value_2_LiteralInteger209->setValue(2);
			fUML_Tests_TestClassAttributeValueRemover_Value_2->setValue(fUML_Tests_TestClassAttributeValueRemover_Value_2_LiteralInteger209);
				// OutputPin result
				fUML_Tests_TestClassAttributeValueRemover_Value_2_result->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Value_2_result);
				fUML_Tests_TestClassAttributeValueRemover_Value_2_result->setName("result");
				fUML_Tests_TestClassAttributeValueRemover_Value_2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Value_2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassAttributeValueRemover_Value_2->setResult(fUML_Tests_TestClassAttributeValueRemover_Value_2_result);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_Value_2);
			// RemoveStructuralFeatureValueAction RemoveAll(y)
			fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y->setThisExecutableNodePtr(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y);
			fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y->setName("RemoveAll(y)");
			fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y->setStructuralFeature(fUML_Tests_TestClass_y);
				// InputPin object
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object);
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object->setName("object");
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y->setObject(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object);
				// InputPin value
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value);
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value->setName("value");
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y->setValue(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value);
				// OutputPin result
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_result->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_result);
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_result->setName("result");
				fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y->setResult(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_result);
			fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y->setIsRemoveDuplicates(true);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y);
			// ValueSpecificationAction Value(1)
			fUML_Tests_TestClassAttributeValueRemover_Value_1->setThisExecutableNodePtr(fUML_Tests_TestClassAttributeValueRemover_Value_1);
			fUML_Tests_TestClassAttributeValueRemover_Value_1->setName("Value(1)");
			fUML_Tests_TestClassAttributeValueRemover_Value_1->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger182
				fUML_Tests_TestClassAttributeValueRemover_Value_1_LiteralInteger182->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Value_1_LiteralInteger182);
				fUML_Tests_TestClassAttributeValueRemover_Value_1_LiteralInteger182->setName("LiteralInteger182");
				fUML_Tests_TestClassAttributeValueRemover_Value_1_LiteralInteger182->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Value_1_LiteralInteger182->setValue(1);
			fUML_Tests_TestClassAttributeValueRemover_Value_1->setValue(fUML_Tests_TestClassAttributeValueRemover_Value_1_LiteralInteger182);
				// OutputPin result
				fUML_Tests_TestClassAttributeValueRemover_Value_1_result->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Value_1_result);
				fUML_Tests_TestClassAttributeValueRemover_Value_1_result->setName("result");
				fUML_Tests_TestClassAttributeValueRemover_Value_1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Value_1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassAttributeValueRemover_Value_1->setResult(fUML_Tests_TestClassAttributeValueRemover_Value_1_result);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_Value_1);
			// ForkNode ForkNode218
			fUML_Tests_TestClassAttributeValueRemover_ForkNode218->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_ForkNode218);
			fUML_Tests_TestClassAttributeValueRemover_ForkNode218->setName("ForkNode218");
			fUML_Tests_TestClassAttributeValueRemover_ForkNode218->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_ForkNode218);
			// AddStructuralFeatureValueAction Add(y)-4
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus4->setThisExecutableNodePtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus4->setName("Add(y)-4");
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus4->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus4->setStructuralFeature(fUML_Tests_TestClass_y);
				// InputPin object
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object->setName("object");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus4->setObject(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object);
				// InputPin value
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value->setName("value");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus4->setValue(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value);
				// OutputPin result
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result->setName("result");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus4->setResult(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4);
			// AddStructuralFeatureValueAction Add(y)-3
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus3->setThisExecutableNodePtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus3->setName("Add(y)-3");
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus3->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus3->setStructuralFeature(fUML_Tests_TestClass_y);
				// InputPin object
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object->setName("object");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus3->setObject(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object);
				// InputPin value
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value->setName("value");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus3->setValue(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value);
				// OutputPin result
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result->setName("result");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus3->setResult(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3);
			// ActivityParameterNode objectOutNode
			fUML_Tests_TestClassAttributeValueRemover_objectOutNode->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_objectOutNode);
			fUML_Tests_TestClassAttributeValueRemover_objectOutNode->setName("objectOutNode");
			fUML_Tests_TestClassAttributeValueRemover_objectOutNode->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_objectOutNode->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeValueRemover_objectOutNode->setParameter(fUML_Tests_TestClassAttributeValueRemover_objectOut);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_objectOutNode);
			// AddStructuralFeatureValueAction Add(y)-1
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus1->setThisExecutableNodePtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus1->setName("Add(y)-1");
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus1->setStructuralFeature(fUML_Tests_TestClass_y);
				// InputPin object
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object->setName("object");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus1->setObject(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object);
				// InputPin value
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value->setName("value");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus1->setValue(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value);
				// OutputPin result
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result->setName("result");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus1->setResult(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1);
			// ActivityParameterNode objectInNode
			fUML_Tests_TestClassAttributeValueRemover_objectInNode->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_objectInNode);
			fUML_Tests_TestClassAttributeValueRemover_objectInNode->setName("objectInNode");
			fUML_Tests_TestClassAttributeValueRemover_objectInNode->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_objectInNode->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeValueRemover_objectInNode->setParameter(fUML_Tests_TestClassAttributeValueRemover_objectIn);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_objectInNode);
			// AddStructuralFeatureValueAction Add(y)-2
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus2->setThisExecutableNodePtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus2->setName("Add(y)-2");
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus2->setStructuralFeature(fUML_Tests_TestClass_y);
				// InputPin object
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object->setName("object");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus2->setObject(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object);
				// InputPin value
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value->setName("value");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus2->setValue(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value);
				// OutputPin result
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result->setThisElementPtr(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result->setName("result");
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassAttributeValueRemover_Add_yminus2->setResult(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result);
		fUML_Tests_TestClassAttributeValueRemover->addNode(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2);
			// ObjectFlow ObjectFlow178 from ForkNode218 to value
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow178->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow178);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow178->setName("ObjectFlow178");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow178->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow178->setSource(fUML_Tests_TestClassAttributeValueRemover_ForkNode218);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow178->setTarget(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_value);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow178);
			// ObjectFlow ObjectFlow231 from result to objectOutNode
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow231->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow231);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow231->setName("ObjectFlow231");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow231->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow231->setSource(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_result);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow231->setTarget(fUML_Tests_TestClassAttributeValueRemover_objectOutNode);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow231);
			// ObjectFlow ObjectFlow233 from ForkNode218 to value
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow233->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow233);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow233->setName("ObjectFlow233");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow233->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow233->setSource(fUML_Tests_TestClassAttributeValueRemover_ForkNode218);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow233->setTarget(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_value);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow233);
			// ObjectFlow ObjectFlow180 from ForkNode218 to value
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow180->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow180);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow180->setName("ObjectFlow180");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow180->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow180->setSource(fUML_Tests_TestClassAttributeValueRemover_ForkNode218);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow180->setTarget(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_value);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow180);
			// ObjectFlow ObjectFlow187 from result to object
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow187->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow187);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow187->setName("ObjectFlow187");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow187->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow187->setSource(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_result);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow187->setTarget(fUML_Tests_TestClassAttributeValueRemover_RemoveAll_y_object);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow187);
			// ObjectFlow ObjectFlow195 from result to object
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow195->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow195);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow195->setName("ObjectFlow195");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow195->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow195->setSource(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_result);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow195->setTarget(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_object);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow195);
			// ObjectFlow ObjectFlow199 from result to object
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow199->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow199);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow199->setName("ObjectFlow199");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow199->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow199->setSource(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_result);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow199->setTarget(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_object);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow199);
			// ObjectFlow ObjectFlow241 from result to ForkNode218
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow241->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow241);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow241->setName("ObjectFlow241");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow241->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow241->setSource(fUML_Tests_TestClassAttributeValueRemover_Value_1_result);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow241->setTarget(fUML_Tests_TestClassAttributeValueRemover_ForkNode218);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow241);
			// ObjectFlow ObjectFlow243 from objectInNode to object
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow243->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow243);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow243->setName("ObjectFlow243");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow243->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow243->setSource(fUML_Tests_TestClassAttributeValueRemover_objectInNode);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow243->setTarget(fUML_Tests_TestClassAttributeValueRemover_Add_yminus1_object);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow243);
			// ObjectFlow ObjectFlow207 from result to object
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow207->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow207);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow207->setName("ObjectFlow207");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow207->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow207->setSource(fUML_Tests_TestClassAttributeValueRemover_Add_yminus2_result);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow207->setTarget(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_object);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow207);
			// ObjectFlow ObjectFlow216 from ForkNode218 to value
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow216->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow216);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow216->setName("ObjectFlow216");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow216->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow216->setSource(fUML_Tests_TestClassAttributeValueRemover_ForkNode218);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow216->setTarget(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_value);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow216);
			// ObjectFlow ObjectFlow219 from result to value
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow219->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow219);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow219->setName("ObjectFlow219");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow219->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow219->setSource(fUML_Tests_TestClassAttributeValueRemover_Value_2_result);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow219->setTarget(fUML_Tests_TestClassAttributeValueRemover_Add_yminus3_value);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow219);
			// ObjectFlow ObjectFlow221 from ForkNode218 to value
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow221->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow221);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow221->setName("ObjectFlow221");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow221->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow221->setSource(fUML_Tests_TestClassAttributeValueRemover_ForkNode218);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow221->setTarget(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_value);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow221);
			// ObjectFlow ObjectFlow229 from result to object
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow229->setThisActivityEdgePtr(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow229);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow229->setName("ObjectFlow229");
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow229->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow229->setSource(fUML_Tests_TestClassAttributeValueRemover_Add_yminus4_result);
			fUML_Tests_TestClassAttributeValueRemover_ObjectFlow229->setTarget(fUML_Tests_TestClassAttributeValueRemover_RemoveOne_y_object);
		fUML_Tests_TestClassAttributeValueRemover->addEdge(fUML_Tests_TestClassAttributeValueRemover_ObjectFlow229);
	fUML_Tests->addPackagedElement(fUML_Tests_TestClassAttributeValueRemover);
		// Class TestClass
		fUML_Tests_TestClass->setThisClass_Ptr(fUML_Tests_TestClass);
		fUML_Tests_TestClass->setName("TestClass");
		fUML_Tests_TestClass->setVisibility(VisibilityKind::public_);
		
			// Property x
			fUML_Tests_TestClass_x->setThisElementPtr(fUML_Tests_TestClass_x);
			fUML_Tests_TestClass_x->setName("x");
			fUML_Tests_TestClass_x->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClass_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
		fUML_Tests_TestClass->addOwnedAttribute(fUML_Tests_TestClass_x);
			// Property y
			fUML_Tests_TestClass_y->setThisElementPtr(fUML_Tests_TestClass_y);
			fUML_Tests_TestClass_y->setName("y");
			fUML_Tests_TestClass_y->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClass_y->setIsOrdered(true);
			fUML_Tests_TestClass_y->setIsUnique(false);
			fUML_Tests_TestClass_y->setUpper(-1);
			fUML_Tests_TestClass_y->setLower(0);
			fUML_Tests_TestClass_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
		fUML_Tests_TestClass->addOwnedAttribute(fUML_Tests_TestClass_y);
	fUML_Tests->addPackagedElement(fUML_Tests_TestClass);
		// Activity TestCallSend
		fUML_Tests_TestCallSend->setThisActivityPtr(fUML_Tests_TestCallSend);
		fUML_Tests_TestCallSend->setName("TestCallSend");
		fUML_Tests_TestCallSend->setVisibility(VisibilityKind::public_);
			// CreateObjectAction Create(TestCallSender)
			fUML_Tests_TestCallSend_Create_TestCallSender->setThisExecutableNodePtr(fUML_Tests_TestCallSend_Create_TestCallSender);
			fUML_Tests_TestCallSend_Create_TestCallSender->setName("Create(TestCallSender)");
			fUML_Tests_TestCallSend_Create_TestCallSender->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSend_Create_TestCallSender->setClassifier(fUML_Tests_TestCallSender);
				// OutputPin Create(TestCallSender).result
				fUML_Tests_TestCallSend_Create_TestCallSender_Create_TestCallSender_result->setThisElementPtr(fUML_Tests_TestCallSend_Create_TestCallSender_Create_TestCallSender_result);
				fUML_Tests_TestCallSend_Create_TestCallSender_Create_TestCallSender_result->setName("Create(TestCallSender).result");
				fUML_Tests_TestCallSend_Create_TestCallSender_Create_TestCallSender_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSend_Create_TestCallSender->setResult(fUML_Tests_TestCallSend_Create_TestCallSender_Create_TestCallSender_result);
		fUML_Tests_TestCallSend->addNode(fUML_Tests_TestCallSend_Create_TestCallSender);
			// SendSignalAction Send(TestSignal)
			fUML_Tests_TestCallSend_Send_TestSignal->setThisExecutableNodePtr(fUML_Tests_TestCallSend_Send_TestSignal);
			fUML_Tests_TestCallSend_Send_TestSignal->setName("Send(TestSignal)");
			fUML_Tests_TestCallSend_Send_TestSignal->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSend_Send_TestSignal->setSignal(fUML_Tests_TestSignal);
				// InputPin Send(TestSignal).target
				fUML_Tests_TestCallSend_Send_TestSignal_Send_TestSignal_target->setThisElementPtr(fUML_Tests_TestCallSend_Send_TestSignal_Send_TestSignal_target);
				fUML_Tests_TestCallSend_Send_TestSignal_Send_TestSignal_target->setName("Send(TestSignal).target");
				fUML_Tests_TestCallSend_Send_TestSignal_Send_TestSignal_target->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSend_Send_TestSignal->setTarget(fUML_Tests_TestCallSend_Send_TestSignal_Send_TestSignal_target);
		fUML_Tests_TestCallSend->addNode(fUML_Tests_TestCallSend_Send_TestSignal);
			// StartObjectBehaviorAction Start(TestCallSender)
			fUML_Tests_TestCallSend_Start_TestCallSender->setThisExecutableNodePtr(fUML_Tests_TestCallSend_Start_TestCallSender);
			fUML_Tests_TestCallSend_Start_TestCallSender->setName("Start(TestCallSender)");
			fUML_Tests_TestCallSend_Start_TestCallSender->setVisibility(VisibilityKind::public_);
				// InputPin Start(TestCallSender).object
				fUML_Tests_TestCallSend_Start_TestCallSender_Start_TestCallSender_object->setThisElementPtr(fUML_Tests_TestCallSend_Start_TestCallSender_Start_TestCallSender_object);
				fUML_Tests_TestCallSend_Start_TestCallSender_Start_TestCallSender_object->setName("Start(TestCallSender).object");
				fUML_Tests_TestCallSend_Start_TestCallSender_Start_TestCallSender_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallSend_Start_TestCallSender->setObject(fUML_Tests_TestCallSend_Start_TestCallSender_Start_TestCallSender_object);
		fUML_Tests_TestCallSend->addNode(fUML_Tests_TestCallSend_Start_TestCallSender);
			// ForkNode ForkNode
			fUML_Tests_TestCallSend_ForkNode->setThisElementPtr(fUML_Tests_TestCallSend_ForkNode);
			fUML_Tests_TestCallSend_ForkNode->setName("ForkNode");
			fUML_Tests_TestCallSend_ForkNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestCallSend->addNode(fUML_Tests_TestCallSend_ForkNode);
			// ObjectFlow ObjectFlow255 from ForkNode to Start(TestCallSender).object
			fUML_Tests_TestCallSend_ObjectFlow255->setThisActivityEdgePtr(fUML_Tests_TestCallSend_ObjectFlow255);
			fUML_Tests_TestCallSend_ObjectFlow255->setName("ObjectFlow255");
			fUML_Tests_TestCallSend_ObjectFlow255->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSend_ObjectFlow255->setSource(fUML_Tests_TestCallSend_ForkNode);
			fUML_Tests_TestCallSend_ObjectFlow255->setTarget(fUML_Tests_TestCallSend_Start_TestCallSender_Start_TestCallSender_object);
		fUML_Tests_TestCallSend->addEdge(fUML_Tests_TestCallSend_ObjectFlow255);
			// ControlFlow ControlFlow257 from Start(TestCallSender) to Send(TestSignal)
			fUML_Tests_TestCallSend_ControlFlow257->setThisActivityEdgePtr(fUML_Tests_TestCallSend_ControlFlow257);
			fUML_Tests_TestCallSend_ControlFlow257->setName("ControlFlow257");
			fUML_Tests_TestCallSend_ControlFlow257->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSend_ControlFlow257->setSource(fUML_Tests_TestCallSend_Start_TestCallSender);
			fUML_Tests_TestCallSend_ControlFlow257->setTarget(fUML_Tests_TestCallSend_Send_TestSignal);
		fUML_Tests_TestCallSend->addEdge(fUML_Tests_TestCallSend_ControlFlow257);
			// ObjectFlow ObjectFlow259 from ForkNode to Send(TestSignal).target
			fUML_Tests_TestCallSend_ObjectFlow259->setThisActivityEdgePtr(fUML_Tests_TestCallSend_ObjectFlow259);
			fUML_Tests_TestCallSend_ObjectFlow259->setName("ObjectFlow259");
			fUML_Tests_TestCallSend_ObjectFlow259->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSend_ObjectFlow259->setSource(fUML_Tests_TestCallSend_ForkNode);
			fUML_Tests_TestCallSend_ObjectFlow259->setTarget(fUML_Tests_TestCallSend_Send_TestSignal_Send_TestSignal_target);
		fUML_Tests_TestCallSend->addEdge(fUML_Tests_TestCallSend_ObjectFlow259);
			// ObjectFlow ObjectFlow261 from Create(TestCallSender).result to ForkNode
			fUML_Tests_TestCallSend_ObjectFlow261->setThisActivityEdgePtr(fUML_Tests_TestCallSend_ObjectFlow261);
			fUML_Tests_TestCallSend_ObjectFlow261->setName("ObjectFlow261");
			fUML_Tests_TestCallSend_ObjectFlow261->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallSend_ObjectFlow261->setSource(fUML_Tests_TestCallSend_Create_TestCallSender_Create_TestCallSender_result);
			fUML_Tests_TestCallSend_ObjectFlow261->setTarget(fUML_Tests_TestCallSend_ForkNode);
		fUML_Tests_TestCallSend->addEdge(fUML_Tests_TestCallSend_ObjectFlow261);
	fUML_Tests->addPackagedElement(fUML_Tests_TestCallSend);
		// Activity TestCompositeObjectDestroyer
		fUML_Tests_TestCompositeObjectDestroyer->setThisActivityPtr(fUML_Tests_TestCompositeObjectDestroyer);
		fUML_Tests_TestCompositeObjectDestroyer->setName("TestCompositeObjectDestroyer");
		fUML_Tests_TestCompositeObjectDestroyer->setVisibility(VisibilityKind::public_);
			// Parameter composite
			fUML_Tests_TestCompositeObjectDestroyer_composite->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_composite);
			fUML_Tests_TestCompositeObjectDestroyer_composite->setName("composite");
			fUML_Tests_TestCompositeObjectDestroyer_composite->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_composite->setType(fUML_Tests_TestComposite);
		fUML_Tests_TestCompositeObjectDestroyer->addOwnedParameter(fUML_Tests_TestCompositeObjectDestroyer_composite);
			// Parameter object1
			fUML_Tests_TestCompositeObjectDestroyer_object1->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_object1);
			fUML_Tests_TestCompositeObjectDestroyer_object1->setName("object1");
			fUML_Tests_TestCompositeObjectDestroyer_object1->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_object1->setType(fUML_Tests_TestClass);
		fUML_Tests_TestCompositeObjectDestroyer->addOwnedParameter(fUML_Tests_TestCompositeObjectDestroyer_object1);
			// Parameter object2
			fUML_Tests_TestCompositeObjectDestroyer_object2->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_object2);
			fUML_Tests_TestCompositeObjectDestroyer_object2->setName("object2");
			fUML_Tests_TestCompositeObjectDestroyer_object2->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_object2->setType(fUML_Tests_TestClass);
		fUML_Tests_TestCompositeObjectDestroyer->addOwnedParameter(fUML_Tests_TestCompositeObjectDestroyer_object2);
			// Parameter compositeOut
			fUML_Tests_TestCompositeObjectDestroyer_compositeOut->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_compositeOut);
			fUML_Tests_TestCompositeObjectDestroyer_compositeOut->setName("compositeOut");
			fUML_Tests_TestCompositeObjectDestroyer_compositeOut->setVisibility(VisibilityKind::public_);
			
			
			fUML_Tests_TestCompositeObjectDestroyer_compositeOut->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestCompositeObjectDestroyer->addOwnedParameter(fUML_Tests_TestCompositeObjectDestroyer_compositeOut);
			// Parameter object1Out
			fUML_Tests_TestCompositeObjectDestroyer_object1Out->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_object1Out);
			fUML_Tests_TestCompositeObjectDestroyer_object1Out->setName("object1Out");
			fUML_Tests_TestCompositeObjectDestroyer_object1Out->setVisibility(VisibilityKind::public_);
			
			
			fUML_Tests_TestCompositeObjectDestroyer_object1Out->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestCompositeObjectDestroyer->addOwnedParameter(fUML_Tests_TestCompositeObjectDestroyer_object1Out);
			// Parameter object2Out
			fUML_Tests_TestCompositeObjectDestroyer_object2Out->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_object2Out);
			fUML_Tests_TestCompositeObjectDestroyer_object2Out->setName("object2Out");
			fUML_Tests_TestCompositeObjectDestroyer_object2Out->setVisibility(VisibilityKind::public_);
			
			
			fUML_Tests_TestCompositeObjectDestroyer_object2Out->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestCompositeObjectDestroyer->addOwnedParameter(fUML_Tests_TestCompositeObjectDestroyer_object2Out);
			// Parameter assocOut
			fUML_Tests_TestCompositeObjectDestroyer_assocOut->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_assocOut);
			fUML_Tests_TestCompositeObjectDestroyer_assocOut->setName("assocOut");
			fUML_Tests_TestCompositeObjectDestroyer_assocOut->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_assocOut->setUpper(-1);
			fUML_Tests_TestCompositeObjectDestroyer_assocOut->setLower(0);
			fUML_Tests_TestCompositeObjectDestroyer_assocOut->setType(fUML_Tests_TestClass);
			fUML_Tests_TestCompositeObjectDestroyer_assocOut->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestCompositeObjectDestroyer->addOwnedParameter(fUML_Tests_TestCompositeObjectDestroyer_assocOut);
			// ReadLinkAction Read(composite)
			fUML_Tests_TestCompositeObjectDestroyer_Read_composite->setThisExecutableNodePtr(fUML_Tests_TestCompositeObjectDestroyer_Read_composite);
			fUML_Tests_TestCompositeObjectDestroyer_Read_composite->setName("Read(composite)");
			fUML_Tests_TestCompositeObjectDestroyer_Read_composite->setVisibility(VisibilityKind::public_);
				
			fUML_Tests_TestCompositeObjectDestroyer_Read_composite->addEndData(fUML_Tests_TestCompositeObjectDestroyer_Read_composite_LinkEndData290);
				
			fUML_Tests_TestCompositeObjectDestroyer_Read_composite->addEndData(fUML_Tests_TestCompositeObjectDestroyer_Read_composite_LinkEndData291);
				// InputPin Read(Composite).inputValue
				fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_inputValue->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_inputValue);
				fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_inputValue->setName("Read(Composite).inputValue");
				fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_inputValue->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Read_composite->addInputValue(fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_inputValue);
			fUML_Tests_TestCompositeObjectDestroyer_Read_composite->setResult(fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_iresult);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Read_composite);
			// ForkNode ForkNode265
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode265->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_ForkNode265);
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode265->setName("ForkNode265");
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode265->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_ForkNode265);
			// ActivityParameterNode Parameter(object2)
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2->setName("Parameter(object2)");
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2->setType(fUML_Tests_TestClass);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2->setParameter(fUML_Tests_TestCompositeObjectDestroyer_object2);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2);
			// ForkNode ForkNode294
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode294->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_ForkNode294);
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode294->setName("ForkNode294");
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode294->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_ForkNode294);
			// ActivityParameterNode Parameter(object2Out)
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2Out->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2Out);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2Out->setName("Parameter(object2Out)");
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2Out->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2Out->setParameter(fUML_Tests_TestCompositeObjectDestroyer_object2Out);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2Out);
			// ForkNode ForkNode301
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode301->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_ForkNode301);
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode301->setName("ForkNode301");
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode301->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_ForkNode301);
			// DestroyObjectAction Destroy(composite)
			fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite->setThisExecutableNodePtr(fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite);
			fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite->setName("Destroy(composite)");
			fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite->setIsDestroyLinks(true);
			fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite->setIsDestroyOwnedObjects(true);
				// InputPin Destroy(composite).target
				fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite_Destroy_composite_target->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite_Destroy_composite_target);
				fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite_Destroy_composite_target->setName("Destroy(composite).target");
				fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite_Destroy_composite_target->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite_Destroy_composite_target);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite);
			// ActivityParameterNode Parameter(assocOut)
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_assocOut->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Parameter_assocOut);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_assocOut->setName("Parameter(assocOut)");
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_assocOut->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_assocOut->setType(fUML_Tests_TestClass);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_assocOut->setParameter(fUML_Tests_TestCompositeObjectDestroyer_assocOut);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Parameter_assocOut);
			// ActivityParameterNode Parameter(composite)
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_composite->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Parameter_composite);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_composite->setName("Parameter(composite)");
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_composite->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_composite->setType(fUML_Tests_TestComposite);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_composite->setParameter(fUML_Tests_TestCompositeObjectDestroyer_composite);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Parameter_composite);
			// AddStructuralFeatureValueAction Write(c1)
			fUML_Tests_TestCompositeObjectDestroyer_Write_c1->setThisExecutableNodePtr(fUML_Tests_TestCompositeObjectDestroyer_Write_c1);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c1->setName("Write(c1)");
			fUML_Tests_TestCompositeObjectDestroyer_Write_c1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c1->setStructuralFeature(fUML_Tests_TestComposite_c1);
				// InputPin Write(c1).object
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_object->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_object);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_object->setName("Write(c1).object");
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_object->setType(fUML_Tests_TestComposite);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c1->setObject(fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_object);
				// InputPin Write(c1).value
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_value->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_value);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_value->setName("Write(c1).value");
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_value->setType(fUML_Tests_TestClass);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c1->setValue(fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_value);
				// OutputPin Write(c1).result
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_result->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_result);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_result->setName("Write(c1).result");
				fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c1->setResult(fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_result);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Write_c1);
			// ForkNode ForkNode308
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode308->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_ForkNode308);
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode308->setName("ForkNode308");
			fUML_Tests_TestCompositeObjectDestroyer_ForkNode308->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_ForkNode308);
			// AddStructuralFeatureValueAction Write(c2)
			fUML_Tests_TestCompositeObjectDestroyer_Write_c2->setThisExecutableNodePtr(fUML_Tests_TestCompositeObjectDestroyer_Write_c2);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c2->setName("Write(c2)");
			fUML_Tests_TestCompositeObjectDestroyer_Write_c2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c2->setStructuralFeature(fUML_Tests_CompositeAssociation_c2);
				// InputPin Write(c2).object
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_object->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_object);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_object->setName("Write(c2).object");
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c2->setObject(fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_object);
				// InputPin Write(c2).value
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_value->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_value);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_value->setName("Write(c2).value");
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_value->setType(fUML_Tests_TestClass);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c2->setValue(fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_value);
				// OutputPin Write(c2).result
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_result->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_result);
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_result->setName("Write(c2).result");
				fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Write_c2->setResult(fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_result);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Write_c2);
			// ActivityParameterNode Parameter(compositeOut)
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_compositeOut->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Parameter_compositeOut);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_compositeOut->setName("Parameter(compositeOut)");
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_compositeOut->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_compositeOut->setParameter(fUML_Tests_TestCompositeObjectDestroyer_compositeOut);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Parameter_compositeOut);
			// ActivityParameterNode Parameter(object1Out)
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1Out->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1Out);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1Out->setName("Parameter(object1Out)");
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1Out->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1Out->setParameter(fUML_Tests_TestCompositeObjectDestroyer_object1Out);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1Out);
			// ActivityParameterNode Parameter(object1)
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1->setThisElementPtr(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1->setName("Parameter(object1)");
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1->setType(fUML_Tests_TestClass);
			fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1->setParameter(fUML_Tests_TestCompositeObjectDestroyer_object1);
		fUML_Tests_TestCompositeObjectDestroyer->addNode(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1);
			// ObjectFlow ObjectFlow263 from Write(c1).result to Write(c2).object
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow263->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow263);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow263->setName("ObjectFlow263");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow263->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow263->setSource(fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_result);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow263->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_object);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow263);
			// ObjectFlow ObjectFlow266 from Parameter(composite) to ForkNode301
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow266->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow266);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow266->setName("ObjectFlow266");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow266->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow266->setSource(fUML_Tests_TestCompositeObjectDestroyer_Parameter_composite);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow266->setTarget(fUML_Tests_TestCompositeObjectDestroyer_ForkNode301);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow266);
			// ObjectFlow ObjectFlow268 from Parameter(object1) to ForkNode308
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow268->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow268);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow268->setName("ObjectFlow268");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow268->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow268->setSource(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow268->setTarget(fUML_Tests_TestCompositeObjectDestroyer_ForkNode308);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow268);
			// ObjectFlow ObjectFlow295 from ForkNode301 to Write(c1).object
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow295->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow295);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow295->setName("ObjectFlow295");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow295->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow295->setSource(fUML_Tests_TestCompositeObjectDestroyer_ForkNode301);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow295->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_object);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow295);
			// ObjectFlow ObjectFlow297 from ForkNode294 to Read(Composite).inputValue
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow297->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow297);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow297->setName("ObjectFlow297");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow297->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow297->setSource(fUML_Tests_TestCompositeObjectDestroyer_ForkNode294);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow297->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_inputValue);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow297);
			// ObjectFlow ObjectFlow299 from ForkNode301 to Parameter(compositeOut)
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow299->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow299);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow299->setName("ObjectFlow299");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow299->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow299->setSource(fUML_Tests_TestCompositeObjectDestroyer_ForkNode301);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow299->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Parameter_compositeOut);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow299);
			// ObjectFlow ObjectFlow304 from ForkNode265 to Parameter(object2Out)
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow304->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow304);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow304->setName("ObjectFlow304");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow304->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow304->setSource(fUML_Tests_TestCompositeObjectDestroyer_ForkNode265);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow304->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2Out);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow304);
			// ObjectFlow ObjectFlow272 from ForkNode265 to Write(c2).value
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow272->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow272);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow272->setName("ObjectFlow272");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow272->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow272->setSource(fUML_Tests_TestCompositeObjectDestroyer_ForkNode265);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow272->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_value);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow272);
			// ObjectFlow ObjectFlow274 from Read(Composite).iresult to Parameter(assocOut)
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow274->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow274);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow274->setName("ObjectFlow274");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow274->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow274->setSource(fUML_Tests_TestCompositeObjectDestroyer_Read_composite_Read_Composite_iresult);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow274->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Parameter_assocOut);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow274);
			// ObjectFlow ObjectFlow280 from ForkNode308 to Write(c1).value
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow280->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow280);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow280->setName("ObjectFlow280");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow280->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow280->setSource(fUML_Tests_TestCompositeObjectDestroyer_ForkNode308);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow280->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Write_c1_Write_c1_value);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow280);
			// ObjectFlow ObjectFlow282 from Write(c2).result to ForkNode294
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow282->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow282);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow282->setName("ObjectFlow282");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow282->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow282->setSource(fUML_Tests_TestCompositeObjectDestroyer_Write_c2_Write_c2_result);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow282->setTarget(fUML_Tests_TestCompositeObjectDestroyer_ForkNode294);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow282);
			// ObjectFlow ObjectFlow284 from ForkNode294 to Destroy(composite).target
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow284->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow284);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow284->setName("ObjectFlow284");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow284->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow284->setSource(fUML_Tests_TestCompositeObjectDestroyer_ForkNode294);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow284->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Destroy_composite_Destroy_composite_target);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow284);
			// ObjectFlow ObjectFlow309 from ForkNode308 to Parameter(object1Out)
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow309->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow309);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow309->setName("ObjectFlow309");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow309->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow309->setSource(fUML_Tests_TestCompositeObjectDestroyer_ForkNode308);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow309->setTarget(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object1Out);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow309);
			// ObjectFlow ObjectFlow288 from Parameter(object2) to ForkNode265
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow288->setThisActivityEdgePtr(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow288);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow288->setName("ObjectFlow288");
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow288->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow288->setSource(fUML_Tests_TestCompositeObjectDestroyer_Parameter_object2);
			fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow288->setTarget(fUML_Tests_TestCompositeObjectDestroyer_ForkNode265);
		fUML_Tests_TestCompositeObjectDestroyer->addEdge(fUML_Tests_TestCompositeObjectDestroyer_ObjectFlow288);
	fUML_Tests->addPackagedElement(fUML_Tests_TestCompositeObjectDestroyer);
		// Activity ForkJoin
		fUML_Tests_ForkJoin->setThisActivityPtr(fUML_Tests_ForkJoin);
		fUML_Tests_ForkJoin->setName("ForkJoin");
		fUML_Tests_ForkJoin->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkJoin->isReentrant = false;
			// ForkNode ForkNode
			fUML_Tests_ForkJoin_ForkNode->setThisElementPtr(fUML_Tests_ForkJoin_ForkNode);
			fUML_Tests_ForkJoin_ForkNode->setName("ForkNode");
			fUML_Tests_ForkJoin_ForkNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkJoin->addNode(fUML_Tests_ForkJoin_ForkNode);
			// JoinNode JoinNode
			fUML_Tests_ForkJoin_JoinNode->setThisElementPtr(fUML_Tests_ForkJoin_JoinNode);
			fUML_Tests_ForkJoin_JoinNode->setName("JoinNode");
			fUML_Tests_ForkJoin_JoinNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkJoin->addNode(fUML_Tests_ForkJoin_JoinNode);
			// InitialNode InitialNode
			fUML_Tests_ForkJoin_InitialNode->setThisElementPtr(fUML_Tests_ForkJoin_InitialNode);
			fUML_Tests_ForkJoin_InitialNode->setName("InitialNode");
			fUML_Tests_ForkJoin_InitialNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkJoin->addNode(fUML_Tests_ForkJoin_InitialNode);
			// ActivityFinalNode FinalNode
			fUML_Tests_ForkJoin_FinalNode->setThisElementPtr(fUML_Tests_ForkJoin_FinalNode);
			fUML_Tests_ForkJoin_FinalNode->setName("FinalNode");
			fUML_Tests_ForkJoin_FinalNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkJoin->addNode(fUML_Tests_ForkJoin_FinalNode);
			// ControlFlow ControlFlow311 from InitialNode to ForkNode
			fUML_Tests_ForkJoin_ControlFlow311->setThisActivityEdgePtr(fUML_Tests_ForkJoin_ControlFlow311);
			fUML_Tests_ForkJoin_ControlFlow311->setName("ControlFlow311");
			fUML_Tests_ForkJoin_ControlFlow311->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkJoin_ControlFlow311->setSource(fUML_Tests_ForkJoin_InitialNode);
			fUML_Tests_ForkJoin_ControlFlow311->setTarget(fUML_Tests_ForkJoin_ForkNode);
		fUML_Tests_ForkJoin->addEdge(fUML_Tests_ForkJoin_ControlFlow311);
			// ControlFlow ControlFlow313 from ForkNode to JoinNode
			fUML_Tests_ForkJoin_ControlFlow313->setThisActivityEdgePtr(fUML_Tests_ForkJoin_ControlFlow313);
			fUML_Tests_ForkJoin_ControlFlow313->setName("ControlFlow313");
			fUML_Tests_ForkJoin_ControlFlow313->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkJoin_ControlFlow313->setSource(fUML_Tests_ForkJoin_ForkNode);
			fUML_Tests_ForkJoin_ControlFlow313->setTarget(fUML_Tests_ForkJoin_JoinNode);
		fUML_Tests_ForkJoin->addEdge(fUML_Tests_ForkJoin_ControlFlow313);
			// ControlFlow ControlFlow315 from ForkNode to JoinNode
			fUML_Tests_ForkJoin_ControlFlow315->setThisActivityEdgePtr(fUML_Tests_ForkJoin_ControlFlow315);
			fUML_Tests_ForkJoin_ControlFlow315->setName("ControlFlow315");
			fUML_Tests_ForkJoin_ControlFlow315->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkJoin_ControlFlow315->setSource(fUML_Tests_ForkJoin_ForkNode);
			fUML_Tests_ForkJoin_ControlFlow315->setTarget(fUML_Tests_ForkJoin_JoinNode);
		fUML_Tests_ForkJoin->addEdge(fUML_Tests_ForkJoin_ControlFlow315);
			// ControlFlow ControlFlow317 from JoinNode to FinalNode
			fUML_Tests_ForkJoin_ControlFlow317->setThisActivityEdgePtr(fUML_Tests_ForkJoin_ControlFlow317);
			fUML_Tests_ForkJoin_ControlFlow317->setName("ControlFlow317");
			fUML_Tests_ForkJoin_ControlFlow317->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkJoin_ControlFlow317->setSource(fUML_Tests_ForkJoin_JoinNode);
			fUML_Tests_ForkJoin_ControlFlow317->setTarget(fUML_Tests_ForkJoin_FinalNode);
		fUML_Tests_ForkJoin->addEdge(fUML_Tests_ForkJoin_ControlFlow317);
	fUML_Tests->addPackagedElement(fUML_Tests_ForkJoin);
		// Activity TestListFunctions
		fUML_Tests_TestListFunctions->setThisActivityPtr(fUML_Tests_TestListFunctions);
		fUML_Tests_TestListFunctions->setName("TestListFunctions");
		fUML_Tests_TestListFunctions->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestListFunctions->isReentrant = false;
			// Parameter size
			fUML_Tests_TestListFunctions_size->setThisElementPtr(fUML_Tests_TestListFunctions_size);
			fUML_Tests_TestListFunctions_size->setName("size");
			fUML_Tests_TestListFunctions_size->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_size->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestListFunctions_size->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestListFunctions->addOwnedParameter(fUML_Tests_TestListFunctions_size);
			// Parameter element
			fUML_Tests_TestListFunctions_element->setThisElementPtr(fUML_Tests_TestListFunctions_element);
			fUML_Tests_TestListFunctions_element->setName("element");
			fUML_Tests_TestListFunctions_element->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_element->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestListFunctions_element->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestListFunctions->addOwnedParameter(fUML_Tests_TestListFunctions_element);
			// Parameter concat
			fUML_Tests_TestListFunctions_concat->setThisElementPtr(fUML_Tests_TestListFunctions_concat);
			fUML_Tests_TestListFunctions_concat->setName("concat");
			fUML_Tests_TestListFunctions_concat->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestListFunctions_concat->setIsOrdered(true);
			fUML_Tests_TestListFunctions_concat->setIsUnique(false);
			fUML_Tests_TestListFunctions_concat->setUpper(-1);
			fUML_Tests_TestListFunctions_concat->setLower(0);
			fUML_Tests_TestListFunctions_concat->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestListFunctions_concat->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestListFunctions->addOwnedParameter(fUML_Tests_TestListFunctions_concat);
			// ForkNode Fork
			fUML_Tests_TestListFunctions_Fork->setThisElementPtr(fUML_Tests_TestListFunctions_Fork);
			fUML_Tests_TestListFunctions_Fork->setName("Fork");
			fUML_Tests_TestListFunctions_Fork->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestListFunctions->addNode(fUML_Tests_TestListFunctions_Fork);
			// CallBehaviorAction Call(ListGet)
			fUML_Tests_TestListFunctions_Call_ListGet->setThisExecutableNodePtr(fUML_Tests_TestListFunctions_Call_ListGet);
			fUML_Tests_TestListFunctions_Call_ListGet->setName("Call(ListGet)");
			fUML_Tests_TestListFunctions_Call_ListGet->setVisibility(VisibilityKind::public_);
				// OutputPin ListGet.result
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result->setThisElementPtr(fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result);
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result->setName("ListGet.result");
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestListFunctions_Call_ListGet->addResult(fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result);
			fUML_Tests_TestListFunctions_Call_ListGet->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_ListFunctions_ListGet);
				// InputPin ListGet.list
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list->setThisElementPtr(fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list);
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list->setName("ListGet.list");
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list->setVisibility(VisibilityKind::public_);
				
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list->setUpper(-1);
			fUML_Tests_TestListFunctions_Call_ListGet->addArgument(fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list);
				// InputPin ListGet.index
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index->setThisElementPtr(fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index);
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index->setName("ListGet.index");
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestListFunctions_Call_ListGet->addArgument(fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index);
		fUML_Tests_TestListFunctions->addNode(fUML_Tests_TestListFunctions_Call_ListGet);
			// ActivityParameterNode Param(size)
			fUML_Tests_TestListFunctions_Param_size->setThisElementPtr(fUML_Tests_TestListFunctions_Param_size);
			fUML_Tests_TestListFunctions_Param_size->setName("Param(size)");
			fUML_Tests_TestListFunctions_Param_size->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestListFunctions_Param_size->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestListFunctions_Param_size->setParameter(fUML_Tests_TestListFunctions_size);
		fUML_Tests_TestListFunctions->addNode(fUML_Tests_TestListFunctions_Param_size);
			// CallBehaviorAction Call(ListConcat)
			fUML_Tests_TestListFunctions_Call_ListConcat->setThisExecutableNodePtr(fUML_Tests_TestListFunctions_Call_ListConcat);
			fUML_Tests_TestListFunctions_Call_ListConcat->setName("Call(ListConcat)");
			fUML_Tests_TestListFunctions_Call_ListConcat->setVisibility(VisibilityKind::public_);
				// OutputPin ListConcat.result
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result->setThisElementPtr(fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result->setName("ListConcat.result");
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result->setUpper(-1);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result->setLower(0);
			fUML_Tests_TestListFunctions_Call_ListConcat->addResult(fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result);
			fUML_Tests_TestListFunctions_Call_ListConcat->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_ListFunctions_ListConcat);
				// InputPin ListConcat.list1
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1->setThisElementPtr(fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1->setName("ListConcat.list1");
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1->setUpper(-1);
			fUML_Tests_TestListFunctions_Call_ListConcat->addArgument(fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1);
				// InputPin ListConcat.list2
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2->setThisElementPtr(fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2->setName("ListConcat.list2");
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2->setUpper(-1);
			fUML_Tests_TestListFunctions_Call_ListConcat->addArgument(fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2);
		fUML_Tests_TestListFunctions->addNode(fUML_Tests_TestListFunctions_Call_ListConcat);
			// ActivityParameterNode Param(element)
			fUML_Tests_TestListFunctions_Param_element->setThisElementPtr(fUML_Tests_TestListFunctions_Param_element);
			fUML_Tests_TestListFunctions_Param_element->setName("Param(element)");
			fUML_Tests_TestListFunctions_Param_element->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestListFunctions_Param_element->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestListFunctions_Param_element->setParameter(fUML_Tests_TestListFunctions_element);
		fUML_Tests_TestListFunctions->addNode(fUML_Tests_TestListFunctions_Param_element);
			// ValueSpecificationAction Value(index)
			fUML_Tests_TestListFunctions_Value_index->setThisExecutableNodePtr(fUML_Tests_TestListFunctions_Value_index);
			fUML_Tests_TestListFunctions_Value_index->setName("Value(index)");
			fUML_Tests_TestListFunctions_Value_index->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger339
				fUML_Tests_TestListFunctions_Value_index_LiteralInteger339->setThisElementPtr(fUML_Tests_TestListFunctions_Value_index_LiteralInteger339);
				fUML_Tests_TestListFunctions_Value_index_LiteralInteger339->setName("LiteralInteger339");
				fUML_Tests_TestListFunctions_Value_index_LiteralInteger339->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestListFunctions_Value_index_LiteralInteger339->setValue(2);
			fUML_Tests_TestListFunctions_Value_index->setValue(fUML_Tests_TestListFunctions_Value_index_LiteralInteger339);
				// OutputPin Value(index).result
				fUML_Tests_TestListFunctions_Value_index_Value_index_result->setThisElementPtr(fUML_Tests_TestListFunctions_Value_index_Value_index_result);
				fUML_Tests_TestListFunctions_Value_index_Value_index_result->setName("Value(index).result");
				fUML_Tests_TestListFunctions_Value_index_Value_index_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestListFunctions_Value_index_Value_index_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestListFunctions_Value_index->setResult(fUML_Tests_TestListFunctions_Value_index_Value_index_result);
		fUML_Tests_TestListFunctions->addNode(fUML_Tests_TestListFunctions_Value_index);
			// CallBehaviorAction Call(ListSize)
			fUML_Tests_TestListFunctions_Call_ListSize->setThisExecutableNodePtr(fUML_Tests_TestListFunctions_Call_ListSize);
			fUML_Tests_TestListFunctions_Call_ListSize->setName("Call(ListSize)");
			fUML_Tests_TestListFunctions_Call_ListSize->setVisibility(VisibilityKind::public_);
				// OutputPin ListSize.result
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result->setThisElementPtr(fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result);
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result->setName("ListSize.result");
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestListFunctions_Call_ListSize->addResult(fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result);
			fUML_Tests_TestListFunctions_Call_ListSize->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_ListFunctions_ListSize);
				// InputPin ListSize.list
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list->setThisElementPtr(fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list);
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list->setName("ListSize.list");
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list->setVisibility(VisibilityKind::public_);
				
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list->setUpper(-1);
				fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list->setLower(0);
			fUML_Tests_TestListFunctions_Call_ListSize->addArgument(fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list);
		fUML_Tests_TestListFunctions->addNode(fUML_Tests_TestListFunctions_Call_ListSize);
			// CallBehaviorAction Call(GenerateListTestData)
			fUML_Tests_TestListFunctions_Call_GenerateListTestData->setThisExecutableNodePtr(fUML_Tests_TestListFunctions_Call_GenerateListTestData);
			fUML_Tests_TestListFunctions_Call_GenerateListTestData->setName("Call(GenerateListTestData)");
			fUML_Tests_TestListFunctions_Call_GenerateListTestData->setVisibility(VisibilityKind::public_);
				// OutputPin GenData.list
				fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list->setThisElementPtr(fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list);
				fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list->setName("GenData.list");
				fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list->setUpper(-1);
			fUML_Tests_TestListFunctions_Call_GenerateListTestData->addResult(fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list);
			fUML_Tests_TestListFunctions_Call_GenerateListTestData->setBehavior(fUML_Tests_GenerateListTestData);
		fUML_Tests_TestListFunctions->addNode(fUML_Tests_TestListFunctions_Call_GenerateListTestData);
			// ActivityParameterNode concatNode
			fUML_Tests_TestListFunctions_concatNode->setThisElementPtr(fUML_Tests_TestListFunctions_concatNode);
			fUML_Tests_TestListFunctions_concatNode->setName("concatNode");
			fUML_Tests_TestListFunctions_concatNode->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestListFunctions_concatNode->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestListFunctions_concatNode->setParameter(fUML_Tests_TestListFunctions_concat);
		fUML_Tests_TestListFunctions->addNode(fUML_Tests_TestListFunctions_concatNode);
			// ObjectFlow ObjectFlow346 from Value(index).result to ListGet.index
			fUML_Tests_TestListFunctions_ObjectFlow346->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ObjectFlow346);
			fUML_Tests_TestListFunctions_ObjectFlow346->setName("ObjectFlow346");
			fUML_Tests_TestListFunctions_ObjectFlow346->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ObjectFlow346->setSource(fUML_Tests_TestListFunctions_Value_index_Value_index_result);
			fUML_Tests_TestListFunctions_ObjectFlow346->setTarget(fUML_Tests_TestListFunctions_Call_ListGet_ListGet_index);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ObjectFlow346);
			// ObjectFlow ObjectFlow348 from ListConcat.result to concatNode
			fUML_Tests_TestListFunctions_ObjectFlow348->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ObjectFlow348);
			fUML_Tests_TestListFunctions_ObjectFlow348->setName("ObjectFlow348");
			fUML_Tests_TestListFunctions_ObjectFlow348->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ObjectFlow348->setSource(fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_result);
			fUML_Tests_TestListFunctions_ObjectFlow348->setTarget(fUML_Tests_TestListFunctions_concatNode);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ObjectFlow348);
			// ControlFlow ControlFlow354 from Call(ListSize) to Call(ListGet)
			fUML_Tests_TestListFunctions_ControlFlow354->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ControlFlow354);
			fUML_Tests_TestListFunctions_ControlFlow354->setName("ControlFlow354");
			fUML_Tests_TestListFunctions_ControlFlow354->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ControlFlow354->setSource(fUML_Tests_TestListFunctions_Call_ListSize);
			fUML_Tests_TestListFunctions_ControlFlow354->setTarget(fUML_Tests_TestListFunctions_Call_ListGet);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ControlFlow354);
			// ObjectFlow ObjectFlow333 from ListSize.result to Param(size)
			fUML_Tests_TestListFunctions_ObjectFlow333->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ObjectFlow333);
			fUML_Tests_TestListFunctions_ObjectFlow333->setName("ObjectFlow333");
			fUML_Tests_TestListFunctions_ObjectFlow333->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ObjectFlow333->setSource(fUML_Tests_TestListFunctions_Call_ListSize_ListSize_result);
			fUML_Tests_TestListFunctions_ObjectFlow333->setTarget(fUML_Tests_TestListFunctions_Param_size);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ObjectFlow333);
			// ObjectFlow ObjectFlow335 from Fork to ListSize.list
			fUML_Tests_TestListFunctions_ObjectFlow335->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ObjectFlow335);
			fUML_Tests_TestListFunctions_ObjectFlow335->setName("ObjectFlow335");
			fUML_Tests_TestListFunctions_ObjectFlow335->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ObjectFlow335->setSource(fUML_Tests_TestListFunctions_Fork);
			fUML_Tests_TestListFunctions_ObjectFlow335->setTarget(fUML_Tests_TestListFunctions_Call_ListSize_ListSize_list);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ObjectFlow335);
			// ObjectFlow ObjectFlow337 from GenData.list to Fork
			fUML_Tests_TestListFunctions_ObjectFlow337->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ObjectFlow337);
			fUML_Tests_TestListFunctions_ObjectFlow337->setName("ObjectFlow337");
			fUML_Tests_TestListFunctions_ObjectFlow337->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ObjectFlow337->setSource(fUML_Tests_TestListFunctions_Call_GenerateListTestData_GenData_list);
			fUML_Tests_TestListFunctions_ObjectFlow337->setTarget(fUML_Tests_TestListFunctions_Fork);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ObjectFlow337);
			// ObjectFlow ObjectFlow362 from ListGet.result to Param(element)
			fUML_Tests_TestListFunctions_ObjectFlow362->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ObjectFlow362);
			fUML_Tests_TestListFunctions_ObjectFlow362->setName("ObjectFlow362");
			fUML_Tests_TestListFunctions_ObjectFlow362->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ObjectFlow362->setSource(fUML_Tests_TestListFunctions_Call_ListGet_ListGet_result);
			fUML_Tests_TestListFunctions_ObjectFlow362->setTarget(fUML_Tests_TestListFunctions_Param_element);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ObjectFlow362);
			// ObjectFlow ObjectFlow364 from Fork to ListConcat.list1
			fUML_Tests_TestListFunctions_ObjectFlow364->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ObjectFlow364);
			fUML_Tests_TestListFunctions_ObjectFlow364->setName("ObjectFlow364");
			fUML_Tests_TestListFunctions_ObjectFlow364->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ObjectFlow364->setSource(fUML_Tests_TestListFunctions_Fork);
			fUML_Tests_TestListFunctions_ObjectFlow364->setTarget(fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list1);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ObjectFlow364);
			// ObjectFlow ObjectFlow342 from Fork to ListGet.list
			fUML_Tests_TestListFunctions_ObjectFlow342->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ObjectFlow342);
			fUML_Tests_TestListFunctions_ObjectFlow342->setName("ObjectFlow342");
			fUML_Tests_TestListFunctions_ObjectFlow342->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ObjectFlow342->setSource(fUML_Tests_TestListFunctions_Fork);
			fUML_Tests_TestListFunctions_ObjectFlow342->setTarget(fUML_Tests_TestListFunctions_Call_ListGet_ListGet_list);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ObjectFlow342);
			// ControlFlow ControlFlow366 from Call(ListGet) to Call(ListConcat)
			fUML_Tests_TestListFunctions_ControlFlow366->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ControlFlow366);
			fUML_Tests_TestListFunctions_ControlFlow366->setName("ControlFlow366");
			fUML_Tests_TestListFunctions_ControlFlow366->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ControlFlow366->setSource(fUML_Tests_TestListFunctions_Call_ListGet);
			fUML_Tests_TestListFunctions_ControlFlow366->setTarget(fUML_Tests_TestListFunctions_Call_ListConcat);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ControlFlow366);
			// ObjectFlow ObjectFlow344 from Fork to ListConcat.list2
			fUML_Tests_TestListFunctions_ObjectFlow344->setThisActivityEdgePtr(fUML_Tests_TestListFunctions_ObjectFlow344);
			fUML_Tests_TestListFunctions_ObjectFlow344->setName("ObjectFlow344");
			fUML_Tests_TestListFunctions_ObjectFlow344->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestListFunctions_ObjectFlow344->setSource(fUML_Tests_TestListFunctions_Fork);
			fUML_Tests_TestListFunctions_ObjectFlow344->setTarget(fUML_Tests_TestListFunctions_Call_ListConcat_ListConcat_list2);
		fUML_Tests_TestListFunctions->addEdge(fUML_Tests_TestListFunctions_ObjectFlow344);
	fUML_Tests->addPackagedElement(fUML_Tests_TestListFunctions);
		// Activity TestUnlimitedNaturalFunctions
		fUML_Tests_TestUnlimitedNaturalFunctions->setThisActivityPtr(fUML_Tests_TestUnlimitedNaturalFunctions);
		fUML_Tests_TestUnlimitedNaturalFunctions->setName("TestUnlimitedNaturalFunctions");
		fUML_Tests_TestUnlimitedNaturalFunctions->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestUnlimitedNaturalFunctions->isReentrant = false;
			// Parameter LTResult
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_LTResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResult->setName("LTResult");
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestUnlimitedNaturalFunctions->addOwnedParameter(fUML_Tests_TestUnlimitedNaturalFunctions_LTResult);
			// Parameter LEResult
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_LEResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResult->setName("LEResult");
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestUnlimitedNaturalFunctions->addOwnedParameter(fUML_Tests_TestUnlimitedNaturalFunctions_LEResult);
			// Parameter GTResult
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_GTResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResult->setName("GTResult");
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestUnlimitedNaturalFunctions->addOwnedParameter(fUML_Tests_TestUnlimitedNaturalFunctions_GTResult);
			// Parameter GEResult
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_GEResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResult->setName("GEResult");
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestUnlimitedNaturalFunctions->addOwnedParameter(fUML_Tests_TestUnlimitedNaturalFunctions_GEResult);
			// Parameter LTResult*
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResulttimes->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_LTResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResulttimes->setName("LTResult*");
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResulttimes->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResulttimes->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_LTResulttimes->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestUnlimitedNaturalFunctions->addOwnedParameter(fUML_Tests_TestUnlimitedNaturalFunctions_LTResulttimes);
			// Parameter LEResult*
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResulttimes->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_LEResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResulttimes->setName("LEResult*");
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResulttimes->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResulttimes->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_LEResulttimes->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestUnlimitedNaturalFunctions->addOwnedParameter(fUML_Tests_TestUnlimitedNaturalFunctions_LEResulttimes);
			// Parameter GTResult*
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResulttimes->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_GTResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResulttimes->setName("GTResult*");
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResulttimes->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResulttimes->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_GTResulttimes->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestUnlimitedNaturalFunctions->addOwnedParameter(fUML_Tests_TestUnlimitedNaturalFunctions_GTResulttimes);
			// Parameter GEResult*
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResulttimes->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_GEResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResulttimes->setName("GEResult*");
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResulttimes->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResulttimes->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_GEResulttimes->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestUnlimitedNaturalFunctions->addOwnedParameter(fUML_Tests_TestUnlimitedNaturalFunctions_GEResulttimes);
			// Parameter MaxResult
			fUML_Tests_TestUnlimitedNaturalFunctions_MaxResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_MaxResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_MaxResult->setName("MaxResult");
			fUML_Tests_TestUnlimitedNaturalFunctions_MaxResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_MaxResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_MaxResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestUnlimitedNaturalFunctions->addOwnedParameter(fUML_Tests_TestUnlimitedNaturalFunctions_MaxResult);
			// Parameter MinResult
			fUML_Tests_TestUnlimitedNaturalFunctions_MinResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_MinResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_MinResult->setName("MinResult");
			fUML_Tests_TestUnlimitedNaturalFunctions_MinResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_MinResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_MinResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestUnlimitedNaturalFunctions->addOwnedParameter(fUML_Tests_TestUnlimitedNaturalFunctions_MinResult);
			// ActivityParameterNode Param(MinResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MinResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Param_MinResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MinResult->setName("Param(MinResult)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MinResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MinResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MinResult->setParameter(fUML_Tests_TestUnlimitedNaturalFunctions_MinResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Param_MinResult);
			// ActivityParameterNode Param(LTResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResult->setName("Param(LTResult)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResult->setParameter(fUML_Tests_TestUnlimitedNaturalFunctions_LTResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResult);
			// CallBehaviorAction Call(GE)_1
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1->setName("Call(GE)_1");
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1->setVisibility(VisibilityKind::public_);
				// OutputPin GE.result
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result->setName("GE.result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1->addResult(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_UnlimitedNaturalFunctions_greaterOrEqual);
				// InputPin GE.x
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x->setName("GE.x");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x);
				// InputPin GE.y
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y->setName("GE.y");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1);
			// CallBehaviorAction Call(LE)_2
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2->setName("Call(LE)_2");
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2->setVisibility(VisibilityKind::public_);
				// OutputPin LE.result
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result->setName("LE.result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2->addResult(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_UnlimitedNaturalFunctions_lessOrEqual);
				// InputPin LE.x
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x->setName("LE.x");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x);
				// InputPin LE.y
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y->setName("LE.y");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2);
			// ActivityParameterNode Param(LEResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResult->setName("Param(LEResult)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResult->setParameter(fUML_Tests_TestUnlimitedNaturalFunctions_LEResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResult);
			// ActivityParameterNode Param(LTResult*)
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResulttimes->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResulttimes->setName("Param(LTResult*)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResulttimes->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResulttimes->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResulttimes->setParameter(fUML_Tests_TestUnlimitedNaturalFunctions_LTResulttimes);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResulttimes);
			// ActivityParameterNode Param(GEResult*)
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResulttimes->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResulttimes->setName("Param(GEResult*)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResulttimes->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResulttimes->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResulttimes->setParameter(fUML_Tests_TestUnlimitedNaturalFunctions_GEResulttimes);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResulttimes);
			// CallBehaviorAction Call(LE)_1
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1->setName("Call(LE)_1");
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1->setVisibility(VisibilityKind::public_);
				// OutputPin LE.result
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result->setName("LE.result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1->addResult(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_UnlimitedNaturalFunctions_lessOrEqual);
				// InputPin LE.x
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x->setName("LE.x");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x);
				// InputPin LE.y
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y->setName("LE.y");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1);
			// ValueSpecificationAction Value(3)
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_3->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Value_3);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_3->setName("Value(3)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_3->setVisibility(VisibilityKind::public_);
				// LiteralUnlimitedNatural LiteralUnlimitedNatural473
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_LiteralUnlimitedNatural473->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_LiteralUnlimitedNatural473);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_LiteralUnlimitedNatural473->setName("LiteralUnlimitedNatural473");
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_LiteralUnlimitedNatural473->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_LiteralUnlimitedNatural473->setValue(3);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_3->setValue(fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_LiteralUnlimitedNatural473);
				// OutputPin Value(3).result
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result->setName("Value(3).result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_3->setResult(fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Value_3);
			// ValueSpecificationAction Value(2)
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_2->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Value_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_2->setName("Value(2)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_2->setVisibility(VisibilityKind::public_);
				// LiteralUnlimitedNatural LiteralUnlimitedNatural478
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_LiteralUnlimitedNatural478->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_LiteralUnlimitedNatural478);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_LiteralUnlimitedNatural478->setName("LiteralUnlimitedNatural478");
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_LiteralUnlimitedNatural478->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_LiteralUnlimitedNatural478->setValue(2);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_2->setValue(fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_LiteralUnlimitedNatural478);
				// OutputPin Value(2).result
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result->setName("Value(2).result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_2->setResult(fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Value_2);
			// CallBehaviorAction Call(Min)
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min->setName("Call(Min)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min->setVisibility(VisibilityKind::public_);
				// OutputPin Min.result
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result->setName("Min.result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min->addResult(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_UnlimitedNaturalFunctions_Min);
				// InputPin Min.x
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x->setName("Min.x");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x);
				// InputPin Min.y
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y->setName("Min.y");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min);
			// ActivityParameterNode Param(MaxResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MaxResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Param_MaxResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MaxResult->setName("Param(MaxResult)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MaxResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MaxResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_MaxResult->setParameter(fUML_Tests_TestUnlimitedNaturalFunctions_MaxResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Param_MaxResult);
			// ForkNode Fork(2)
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2->setName("Fork(2)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			// ActivityParameterNode Param(GTResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResult->setName("Param(GTResult)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResult->setParameter(fUML_Tests_TestUnlimitedNaturalFunctions_GTResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResult);
			// ForkNode Fork(3)
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3);
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3->setName("Fork(3)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3);
			// CallBehaviorAction Call(GT)_2
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2->setName("Call(GT)_2");
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2->setVisibility(VisibilityKind::public_);
				// OutputPin GT.result
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result->setName("GT.result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2->addResult(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_UnlimitedNaturalFunctions_greaterThan);
				// InputPin GT.x
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x->setName("GT.x");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x);
				// InputPin GT.y
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y->setName("GT.y");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2);
			// CallBehaviorAction Call(LT)_1
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1->setName("Call(LT)_1");
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1->setVisibility(VisibilityKind::public_);
				// OutputPin LT.result
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result->setName("LT.result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1->addResult(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_UnlimitedNaturalFunctions_lessThan);
				// InputPin LT.x
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x->setName("LT.x");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x);
				// InputPin LT.y
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y->setName("LT.y");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1);
			// ValueSpecificationAction Value(*)
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_times->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Value_times);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_times->setName("Value(*)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_times->setVisibility(VisibilityKind::public_);
				// LiteralUnlimitedNatural LiteralUnlimitedNatural410
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_LiteralUnlimitedNatural410->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_LiteralUnlimitedNatural410);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_LiteralUnlimitedNatural410->setName("LiteralUnlimitedNatural410");
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_LiteralUnlimitedNatural410->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_LiteralUnlimitedNatural410->setValue(-1);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_times->setValue(fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_LiteralUnlimitedNatural410);
				// OutputPin Value(*).result
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result->setName("Value(*).result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Value_times->setResult(fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Value_times);
			// ActivityParameterNode Param(GEResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResult->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResult);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResult->setName("Param(GEResult)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResult->setParameter(fUML_Tests_TestUnlimitedNaturalFunctions_GEResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResult);
			// ActivityParameterNode Param(LEResult*)
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResulttimes->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResulttimes->setName("Param(LEResult*)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResulttimes->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResulttimes->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResulttimes->setParameter(fUML_Tests_TestUnlimitedNaturalFunctions_LEResulttimes);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResulttimes);
			// ActivityParameterNode Param(GTResult*)
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResulttimes->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResulttimes);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResulttimes->setName("Param(GTResult*)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResulttimes->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResulttimes->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResulttimes->setParameter(fUML_Tests_TestUnlimitedNaturalFunctions_GTResulttimes);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResulttimes);
			// CallBehaviorAction Call(LT)_2
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2->setName("Call(LT)_2");
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2->setVisibility(VisibilityKind::public_);
				// OutputPin LT.result
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result->setName("LT.result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2->addResult(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_UnlimitedNaturalFunctions_lessThan);
				// InputPin LT.x
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x->setName("LT.x");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x);
				// InputPin LT.y
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y->setName("LT.y");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2);
			// CallBehaviorAction Call(GE)_2
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2->setName("Call(GE)_2");
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2->setVisibility(VisibilityKind::public_);
				// OutputPin GE.result
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result->setName("GE.result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2->addResult(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_UnlimitedNaturalFunctions_greaterOrEqual);
				// InputPin GE.x
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x->setName("GE.x");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x);
				// InputPin GE.y
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y->setName("GE.y");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2);
			// ForkNode Fork(*)
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times);
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times->setName("Fork(*)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times);
			// CallBehaviorAction Call(Max)
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max->setName("Call(Max)");
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max->setVisibility(VisibilityKind::public_);
				// OutputPin Max.result
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result->setName("Max.result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max->addResult(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_UnlimitedNaturalFunctions_Max);
				// InputPin Max.x
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x->setName("Max.x");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x);
				// InputPin Min.y
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y->setName("Min.y");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max);
			// CallBehaviorAction Call(GT)_1
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1->setThisExecutableNodePtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1->setName("Call(GT)_1");
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1->setVisibility(VisibilityKind::public_);
				// OutputPin GT.result
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result->setName("GT.result");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1->addResult(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_UnlimitedNaturalFunctions_greaterThan);
				// InputPin GT.x
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x->setName("GT.x");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x);
				// InputPin GT.y
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y->setThisElementPtr(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y->setName("GT.y");
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_UnlimitedNatural);
			fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1->addArgument(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addNode(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1);
			// ObjectFlow ObjectFlow437 from Fork(2) to GT.x
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow437->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow437);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow437->setName("ObjectFlow437");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow437->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow437->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow437->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_x);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow437);
			// ObjectFlow ObjectFlow368 from Max.result to Param(MaxResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow368->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow368);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow368->setName("ObjectFlow368");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow368->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow368->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow368->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Param_MaxResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow368);
			// ObjectFlow ObjectFlow370 from LT.result to Param(LTResult*)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow370->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow370);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow370->setName("ObjectFlow370");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow370->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow370->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow370->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResulttimes);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow370);
			// ObjectFlow ObjectFlow439 from Fork(2) to LE.y
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow439->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow439);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow439->setName("ObjectFlow439");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow439->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow439->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow439->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow439);
			// ObjectFlow ObjectFlow372 from Fork(*) to GE.y
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow372->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow372);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow372->setName("ObjectFlow372");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow372->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow372->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow372->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow372);
			// ObjectFlow ObjectFlow374 from LT.result to Param(LTResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow374->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow374);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow374->setName("ObjectFlow374");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow374->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow374->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow374->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LTResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow374);
			// ControlFlow ControlFlow441 from Call(Max) to Call(Min)
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow441->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow441);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow441->setName("ControlFlow441");
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow441->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow441->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow441->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow441);
			// ControlFlow ControlFlow443 from Call(GT)_1 to Call(GE)_1
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow443->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow443);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow443->setName("ControlFlow443");
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow443->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow443->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow443->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow443);
			// ObjectFlow ObjectFlow445 from Min.result to Param(MinResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow445->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow445);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow445->setName("ObjectFlow445");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow445->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow445->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow445->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Param_MinResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow445);
			// ObjectFlow ObjectFlow447 from Fork(2) to GT.y
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow447->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow447);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow447->setName("ObjectFlow447");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow447->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow447->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow447->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow447);
			// ControlFlow ControlFlow449 from Call(LE)_2 to Call(GT)_2
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow449->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow449);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow449->setName("ControlFlow449");
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow449->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow449->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow449->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow449);
			// ControlFlow ControlFlow457 from Call(LT)_2 to Call(LE)_2
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow457->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow457);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow457->setName("ControlFlow457");
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow457->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow457->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow457->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow457);
			// ControlFlow ControlFlow382 from Call(GT)_2 to Call(GE)_2
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow382->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow382);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow382->setName("ControlFlow382");
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow382->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow382->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow382->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow382);
			// ObjectFlow ObjectFlow459 from GE.result to Param(GEResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow459->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow459);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow459->setName("ObjectFlow459");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow459->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow459->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow459->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow459);
			// ObjectFlow ObjectFlow461 from Fork(*) to Min.y
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow461->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow461);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow461->setName("ObjectFlow461");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow461->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow461->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow461->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow461);
			// ObjectFlow ObjectFlow384 from Fork(2) to LE.x
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow384->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow384);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow384->setName("ObjectFlow384");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow384->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow384->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow384->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_x);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow384);
			// ObjectFlow ObjectFlow386 from Fork(3) to LT.x
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow386->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow386);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow386->setName("ObjectFlow386");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow386->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow386->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow386->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_x);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow386);
			// ObjectFlow ObjectFlow463 from Fork(2) to GE.y
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow463->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow463);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow463->setName("ObjectFlow463");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow463->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow463->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow463->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow463);
			// ObjectFlow ObjectFlow388 from Fork(2) to GE.x
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow388->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow388);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow388->setName("ObjectFlow388");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow388->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow388->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow388->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_x);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow388);
			// ObjectFlow ObjectFlow390 from Fork(2) to Max.x
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow390->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow390);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow390->setName("ObjectFlow390");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow390->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow390->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow390->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Max_x);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow390);
			// ObjectFlow ObjectFlow392 from Value(3).result to Fork(3)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow392->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow392);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow392->setName("ObjectFlow392");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow392->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow392->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Value_3_Value_3_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow392->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow392);
			// ObjectFlow ObjectFlow394 from Value(2).result to Fork(2)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow394->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow394);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow394->setName("ObjectFlow394");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow394->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow394->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Value_2_Value_2_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow394->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow394);
			// ObjectFlow ObjectFlow474 from Fork(3) to GE.x
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow474->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow474);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow474->setName("ObjectFlow474");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow474->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow474->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow474->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1_GE_x);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow474);
			// ObjectFlow ObjectFlow396 from LE.result to Param(LEResult*)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow396->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow396);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow396->setName("ObjectFlow396");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow396->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow396->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow396->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResulttimes);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow396);
			// ObjectFlow ObjectFlow404 from LE.result to Param(LEResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow404->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow404);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow404->setName("ObjectFlow404");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow404->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow404->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow404->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Param_LEResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow404);
			// ObjectFlow ObjectFlow479 from Fork(*) to Min.y
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow479->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow479);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow479->setName("ObjectFlow479");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow479->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow479->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow479->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max_Min_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow479);
			// ObjectFlow ObjectFlow406 from Fork(3) to GT.x
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow406->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow406);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow406->setName("ObjectFlow406");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow406->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow406->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow406->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_x);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow406);
			// ObjectFlow ObjectFlow411 from Fork(2) to LT.x
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow411->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow411);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow411->setName("ObjectFlow411");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow411->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow411->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow411->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_x);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow411);
			// ObjectFlow ObjectFlow413 from Fork(*) to GT.y
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow413->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow413);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow413->setName("ObjectFlow413");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow413->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow413->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow413->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow413);
			// ControlFlow ControlFlow415 from Call(GE)_2 to Call(Max)
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow415->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow415);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow415->setName("ControlFlow415");
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow415->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow415->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow415->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Max);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow415);
			// ObjectFlow ObjectFlow499 from Fork(*) to LE.y
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow499->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow499);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow499->setName("ObjectFlow499");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow499->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow499->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow499->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_2_LE_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow499);
			// ObjectFlow ObjectFlow507 from Fork(2) to LT.y
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow507->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow507);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow507->setName("ObjectFlow507");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow507->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow507->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow507->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1_LT_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow507);
			// ObjectFlow ObjectFlow509 from GT.result to Param(GTResult*)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow509->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow509);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow509->setName("ObjectFlow509");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow509->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow509->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_2_GT_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow509->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResulttimes);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow509);
			// ControlFlow ControlFlow511 from Call(GE)_1 to Call(LT)_2
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow511->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow511);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow511->setName("ControlFlow511");
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow511->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow511->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_1);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow511->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow511);
			// ObjectFlow ObjectFlow513 from Value(*).result to Fork(*)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow513->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow513);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow513->setName("ObjectFlow513");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow513->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow513->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Value_times_Value_times_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow513->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow513);
			// ControlFlow ControlFlow515 from Call(LE)_1 to Call(GT)_1
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow515->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow515);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow515->setName("ControlFlow515");
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow515->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow515->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow515->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow515);
			// ObjectFlow ObjectFlow423 from Fork(*) to LT.y
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow423->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow423);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow423->setName("ObjectFlow423");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow423->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow423->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_times);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow423->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_2_LT_y);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow423);
			// ControlFlow ControlFlow425 from Call(LT)_1 to Call(LE)_1
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow425->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow425);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow425->setName("ControlFlow425");
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow425->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow425->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LT_1);
			fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow425->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ControlFlow425);
			// ObjectFlow ObjectFlow427 from Fork(2) to Min.x
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow427->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow427);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow427->setName("ObjectFlow427");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow427->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow427->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_2);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow427->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_Min_Min_x);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow427);
			// ObjectFlow ObjectFlow517 from GE.result to Param(GEResult*)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow517->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow517);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow517->setName("ObjectFlow517");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow517->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow517->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GE_2_GE_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow517->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GEResulttimes);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow517);
			// ObjectFlow ObjectFlow429 from Fork(3) to LE.x
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow429->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow429);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow429->setName("ObjectFlow429");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow429->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow429->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Fork_3);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow429->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Call_LE_1_LE_x);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow429);
			// ObjectFlow ObjectFlow519 from GT.result to Param(GTResult)
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow519->setThisActivityEdgePtr(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow519);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow519->setName("ObjectFlow519");
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow519->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow519->setSource(fUML_Tests_TestUnlimitedNaturalFunctions_Call_GT_1_GT_result);
			fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow519->setTarget(fUML_Tests_TestUnlimitedNaturalFunctions_Param_GTResult);
		fUML_Tests_TestUnlimitedNaturalFunctions->addEdge(fUML_Tests_TestUnlimitedNaturalFunctions_ObjectFlow519);
	fUML_Tests->addPackagedElement(fUML_Tests_TestUnlimitedNaturalFunctions);
		// Activity TestClassIdentityTester
		fUML_Tests_TestClassIdentityTester->setThisActivityPtr(fUML_Tests_TestClassIdentityTester);
		fUML_Tests_TestClassIdentityTester->setName("TestClassIdentityTester");
		fUML_Tests_TestClassIdentityTester->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestClassIdentityTester->isReentrant = false;
			// Parameter value1
			fUML_Tests_TestClassIdentityTester_value1->setThisElementPtr(fUML_Tests_TestClassIdentityTester_value1);
			fUML_Tests_TestClassIdentityTester_value1->setName("value1");
			fUML_Tests_TestClassIdentityTester_value1->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassIdentityTester_value1->setType(fUML_Tests_TestClass);
		fUML_Tests_TestClassIdentityTester->addOwnedParameter(fUML_Tests_TestClassIdentityTester_value1);
			// Parameter value2
			fUML_Tests_TestClassIdentityTester_value2->setThisElementPtr(fUML_Tests_TestClassIdentityTester_value2);
			fUML_Tests_TestClassIdentityTester_value2->setName("value2");
			fUML_Tests_TestClassIdentityTester_value2->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassIdentityTester_value2->setType(fUML_Tests_TestClass);
		fUML_Tests_TestClassIdentityTester->addOwnedParameter(fUML_Tests_TestClassIdentityTester_value2);
			// Parameter result
			fUML_Tests_TestClassIdentityTester_result->setThisElementPtr(fUML_Tests_TestClassIdentityTester_result);
			fUML_Tests_TestClassIdentityTester_result->setName("result");
			fUML_Tests_TestClassIdentityTester_result->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassIdentityTester_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestClassIdentityTester_result->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassIdentityTester->addOwnedParameter(fUML_Tests_TestClassIdentityTester_result);
			// ActivityParameterNode Parameter(value2)
			fUML_Tests_TestClassIdentityTester_Parameter_value2->setThisElementPtr(fUML_Tests_TestClassIdentityTester_Parameter_value2);
			fUML_Tests_TestClassIdentityTester_Parameter_value2->setName("Parameter(value2)");
			fUML_Tests_TestClassIdentityTester_Parameter_value2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassIdentityTester_Parameter_value2->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassIdentityTester_Parameter_value2->setParameter(fUML_Tests_TestClassIdentityTester_value2);
		fUML_Tests_TestClassIdentityTester->addNode(fUML_Tests_TestClassIdentityTester_Parameter_value2);
			// TestIdentityAction TestIdentity
			fUML_Tests_TestClassIdentityTester_TestIdentity->setThisExecutableNodePtr(fUML_Tests_TestClassIdentityTester_TestIdentity);
			fUML_Tests_TestClassIdentityTester_TestIdentity->setName("TestIdentity");
			fUML_Tests_TestClassIdentityTester_TestIdentity->setVisibility(VisibilityKind::public_);
				// InputPin TestIdentity.first
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_first->setThisElementPtr(fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_first);
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_first->setName("TestIdentity.first");
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_first->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassIdentityTester_TestIdentity->setFirst(fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_first);
				// InputPin TestIdentity.second
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_second->setThisElementPtr(fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_second);
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_second->setName("TestIdentity.second");
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_second->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassIdentityTester_TestIdentity->setSecond(fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_second);
				// OutputPin TestIdentity.result
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_result->setThisElementPtr(fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_result);
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_result->setName("TestIdentity.result");
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestClassIdentityTester_TestIdentity->setResult(fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_result);
		fUML_Tests_TestClassIdentityTester->addNode(fUML_Tests_TestClassIdentityTester_TestIdentity);
			// ActivityParameterNode Parameter(result)
			fUML_Tests_TestClassIdentityTester_Parameter_result->setThisElementPtr(fUML_Tests_TestClassIdentityTester_Parameter_result);
			fUML_Tests_TestClassIdentityTester_Parameter_result->setName("Parameter(result)");
			fUML_Tests_TestClassIdentityTester_Parameter_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassIdentityTester_Parameter_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestClassIdentityTester_Parameter_result->setParameter(fUML_Tests_TestClassIdentityTester_result);
		fUML_Tests_TestClassIdentityTester->addNode(fUML_Tests_TestClassIdentityTester_Parameter_result);
			// ActivityParameterNode Parameter(value1)
			fUML_Tests_TestClassIdentityTester_Parameter_value1->setThisElementPtr(fUML_Tests_TestClassIdentityTester_Parameter_value1);
			fUML_Tests_TestClassIdentityTester_Parameter_value1->setName("Parameter(value1)");
			fUML_Tests_TestClassIdentityTester_Parameter_value1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassIdentityTester_Parameter_value1->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassIdentityTester_Parameter_value1->setParameter(fUML_Tests_TestClassIdentityTester_value1);
		fUML_Tests_TestClassIdentityTester->addNode(fUML_Tests_TestClassIdentityTester_Parameter_value1);
			// ObjectFlow ObjectFlow521 from TestIdentity.result to Parameter(result)
			fUML_Tests_TestClassIdentityTester_ObjectFlow521->setThisActivityEdgePtr(fUML_Tests_TestClassIdentityTester_ObjectFlow521);
			fUML_Tests_TestClassIdentityTester_ObjectFlow521->setName("ObjectFlow521");
			fUML_Tests_TestClassIdentityTester_ObjectFlow521->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassIdentityTester_ObjectFlow521->setSource(fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_result);
			fUML_Tests_TestClassIdentityTester_ObjectFlow521->setTarget(fUML_Tests_TestClassIdentityTester_Parameter_result);
		fUML_Tests_TestClassIdentityTester->addEdge(fUML_Tests_TestClassIdentityTester_ObjectFlow521);
			// ObjectFlow ObjectFlow525 from Parameter(value1) to TestIdentity.first
			fUML_Tests_TestClassIdentityTester_ObjectFlow525->setThisActivityEdgePtr(fUML_Tests_TestClassIdentityTester_ObjectFlow525);
			fUML_Tests_TestClassIdentityTester_ObjectFlow525->setName("ObjectFlow525");
			fUML_Tests_TestClassIdentityTester_ObjectFlow525->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassIdentityTester_ObjectFlow525->setSource(fUML_Tests_TestClassIdentityTester_Parameter_value1);
			fUML_Tests_TestClassIdentityTester_ObjectFlow525->setTarget(fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_first);
		fUML_Tests_TestClassIdentityTester->addEdge(fUML_Tests_TestClassIdentityTester_ObjectFlow525);
			// ObjectFlow ObjectFlow527 from Parameter(value2) to TestIdentity.second
			fUML_Tests_TestClassIdentityTester_ObjectFlow527->setThisActivityEdgePtr(fUML_Tests_TestClassIdentityTester_ObjectFlow527);
			fUML_Tests_TestClassIdentityTester_ObjectFlow527->setName("ObjectFlow527");
			fUML_Tests_TestClassIdentityTester_ObjectFlow527->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassIdentityTester_ObjectFlow527->setSource(fUML_Tests_TestClassIdentityTester_Parameter_value2);
			fUML_Tests_TestClassIdentityTester_ObjectFlow527->setTarget(fUML_Tests_TestClassIdentityTester_TestIdentity_TestIdentity_second);
		fUML_Tests_TestClassIdentityTester->addEdge(fUML_Tests_TestClassIdentityTester_ObjectFlow527);
	fUML_Tests->addPackagedElement(fUML_Tests_TestClassIdentityTester);
		// Activity SelfReader
		fUML_Tests_SelfReader->setThisActivityPtr(fUML_Tests_SelfReader);
		fUML_Tests_SelfReader->setName("SelfReader");
		fUML_Tests_SelfReader->setVisibility(VisibilityKind::public_);
		fUML_Tests_SelfReader->isReentrant = false;
			// Parameter self
			fUML_Tests_SelfReader_self->setThisElementPtr(fUML_Tests_SelfReader_self);
			fUML_Tests_SelfReader_self->setName("self");
			fUML_Tests_SelfReader_self->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_SelfReader_self->setType(fUML_Tests_SelfReader);
			fUML_Tests_SelfReader_self->setDirection(ParameterDirectionKind::out);
		fUML_Tests_SelfReader->addOwnedParameter(fUML_Tests_SelfReader_self);
			// Parameter isSelfReader
			fUML_Tests_SelfReader_isSelfReader->setThisElementPtr(fUML_Tests_SelfReader_isSelfReader);
			fUML_Tests_SelfReader_isSelfReader->setName("isSelfReader");
			fUML_Tests_SelfReader_isSelfReader->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_SelfReader_isSelfReader->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_SelfReader_isSelfReader->setDirection(ParameterDirectionKind::out);
		fUML_Tests_SelfReader->addOwnedParameter(fUML_Tests_SelfReader_isSelfReader);
			// ActivityParameterNode Parameter(isSelfReader)
			fUML_Tests_SelfReader_Parameter_isSelfReader->setThisElementPtr(fUML_Tests_SelfReader_Parameter_isSelfReader);
			fUML_Tests_SelfReader_Parameter_isSelfReader->setName("Parameter(isSelfReader)");
			fUML_Tests_SelfReader_Parameter_isSelfReader->setVisibility(VisibilityKind::public_);
			fUML_Tests_SelfReader_Parameter_isSelfReader->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_SelfReader_Parameter_isSelfReader->setParameter(fUML_Tests_SelfReader_isSelfReader);
		fUML_Tests_SelfReader->addNode(fUML_Tests_SelfReader_Parameter_isSelfReader);
			// ReadSelfAction ReadSelf
			fUML_Tests_SelfReader_ReadSelf->setThisExecutableNodePtr(fUML_Tests_SelfReader_ReadSelf);
			fUML_Tests_SelfReader_ReadSelf->setName("ReadSelf");
			fUML_Tests_SelfReader_ReadSelf->setVisibility(VisibilityKind::public_);
				// OutputPin ReadSelf.result
				fUML_Tests_SelfReader_ReadSelf_ReadSelf_result->setThisElementPtr(fUML_Tests_SelfReader_ReadSelf_ReadSelf_result);
				fUML_Tests_SelfReader_ReadSelf_ReadSelf_result->setName("ReadSelf.result");
				fUML_Tests_SelfReader_ReadSelf_ReadSelf_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_SelfReader_ReadSelf->setResult(fUML_Tests_SelfReader_ReadSelf_ReadSelf_result);
		fUML_Tests_SelfReader->addNode(fUML_Tests_SelfReader_ReadSelf);
			// ReadIsClassifiedObjectAction IsClassified(SelfReader)
			fUML_Tests_SelfReader_IsClassified_SelfReader->setThisExecutableNodePtr(fUML_Tests_SelfReader_IsClassified_SelfReader);
			fUML_Tests_SelfReader_IsClassified_SelfReader->setName("IsClassified(SelfReader)");
			fUML_Tests_SelfReader_IsClassified_SelfReader->setVisibility(VisibilityKind::public_);
			fUML_Tests_SelfReader_IsClassified_SelfReader->setClassifier(fUML_Tests_SelfReader);
				// InputPin object
				fUML_Tests_SelfReader_IsClassified_SelfReader_object->setThisElementPtr(fUML_Tests_SelfReader_IsClassified_SelfReader_object);
				fUML_Tests_SelfReader_IsClassified_SelfReader_object->setName("object");
				fUML_Tests_SelfReader_IsClassified_SelfReader_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_SelfReader_IsClassified_SelfReader->setObject(fUML_Tests_SelfReader_IsClassified_SelfReader_object);
				// OutputPin result
				fUML_Tests_SelfReader_IsClassified_SelfReader_result->setThisElementPtr(fUML_Tests_SelfReader_IsClassified_SelfReader_result);
				fUML_Tests_SelfReader_IsClassified_SelfReader_result->setName("result");
				fUML_Tests_SelfReader_IsClassified_SelfReader_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_SelfReader_IsClassified_SelfReader->setResult(fUML_Tests_SelfReader_IsClassified_SelfReader_result);
		fUML_Tests_SelfReader->addNode(fUML_Tests_SelfReader_IsClassified_SelfReader);
			// ForkNode ForkNode539
			fUML_Tests_SelfReader_ForkNode539->setThisElementPtr(fUML_Tests_SelfReader_ForkNode539);
			fUML_Tests_SelfReader_ForkNode539->setName("ForkNode539");
			fUML_Tests_SelfReader_ForkNode539->setVisibility(VisibilityKind::public_);
		fUML_Tests_SelfReader->addNode(fUML_Tests_SelfReader_ForkNode539);
			// ActivityParameterNode Parameter(self)
			fUML_Tests_SelfReader_Parameter_self->setThisElementPtr(fUML_Tests_SelfReader_Parameter_self);
			fUML_Tests_SelfReader_Parameter_self->setName("Parameter(self)");
			fUML_Tests_SelfReader_Parameter_self->setVisibility(VisibilityKind::public_);
			fUML_Tests_SelfReader_Parameter_self->setType(fUML_Tests_SelfReader);
			fUML_Tests_SelfReader_Parameter_self->setParameter(fUML_Tests_SelfReader_self);
		fUML_Tests_SelfReader->addNode(fUML_Tests_SelfReader_Parameter_self);
			// ObjectFlow ObjectFlow533 from ForkNode539 to object
			fUML_Tests_SelfReader_ObjectFlow533->setThisActivityEdgePtr(fUML_Tests_SelfReader_ObjectFlow533);
			fUML_Tests_SelfReader_ObjectFlow533->setName("ObjectFlow533");
			fUML_Tests_SelfReader_ObjectFlow533->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_SelfReader_ObjectFlow533->setSource(fUML_Tests_SelfReader_ForkNode539);
			fUML_Tests_SelfReader_ObjectFlow533->setTarget(fUML_Tests_SelfReader_IsClassified_SelfReader_object);
		fUML_Tests_SelfReader->addEdge(fUML_Tests_SelfReader_ObjectFlow533);
			// ObjectFlow ObjectFlow535 from ReadSelf.result to ForkNode539
			fUML_Tests_SelfReader_ObjectFlow535->setThisActivityEdgePtr(fUML_Tests_SelfReader_ObjectFlow535);
			fUML_Tests_SelfReader_ObjectFlow535->setName("ObjectFlow535");
			fUML_Tests_SelfReader_ObjectFlow535->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_SelfReader_ObjectFlow535->setSource(fUML_Tests_SelfReader_ReadSelf_ReadSelf_result);
			fUML_Tests_SelfReader_ObjectFlow535->setTarget(fUML_Tests_SelfReader_ForkNode539);
		fUML_Tests_SelfReader->addEdge(fUML_Tests_SelfReader_ObjectFlow535);
			// ObjectFlow ObjectFlow537 from result to Parameter(isSelfReader)
			fUML_Tests_SelfReader_ObjectFlow537->setThisActivityEdgePtr(fUML_Tests_SelfReader_ObjectFlow537);
			fUML_Tests_SelfReader_ObjectFlow537->setName("ObjectFlow537");
			fUML_Tests_SelfReader_ObjectFlow537->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_SelfReader_ObjectFlow537->setSource(fUML_Tests_SelfReader_IsClassified_SelfReader_result);
			fUML_Tests_SelfReader_ObjectFlow537->setTarget(fUML_Tests_SelfReader_Parameter_isSelfReader);
		fUML_Tests_SelfReader->addEdge(fUML_Tests_SelfReader_ObjectFlow537);
			// ObjectFlow ObjectFlow542 from ForkNode539 to Parameter(self)
			fUML_Tests_SelfReader_ObjectFlow542->setThisActivityEdgePtr(fUML_Tests_SelfReader_ObjectFlow542);
			fUML_Tests_SelfReader_ObjectFlow542->setName("ObjectFlow542");
			fUML_Tests_SelfReader_ObjectFlow542->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_SelfReader_ObjectFlow542->setSource(fUML_Tests_SelfReader_ForkNode539);
			fUML_Tests_SelfReader_ObjectFlow542->setTarget(fUML_Tests_SelfReader_Parameter_self);
		fUML_Tests_SelfReader->addEdge(fUML_Tests_SelfReader_ObjectFlow542);
	fUML_Tests->addPackagedElement(fUML_Tests_SelfReader);
		// Activity TestCallAccepter
		fUML_Tests_TestCallAccepter->setThisActivityPtr(fUML_Tests_TestCallAccepter);
		fUML_Tests_TestCallAccepter->setName("TestCallAccepter");
		fUML_Tests_TestCallAccepter->setVisibility(VisibilityKind::public_);
			// Operation test
			fUML_Tests_TestCallAccepter_test->setThisOperationPtr(fUML_Tests_TestCallAccepter_test);
			fUML_Tests_TestCallAccepter_test->setName("test");
			fUML_Tests_TestCallAccepter_test->setVisibility(VisibilityKind::public_);
				// Parameter input
				fUML_Tests_TestCallAccepter_test_input->setThisElementPtr(fUML_Tests_TestCallAccepter_test_input);
				fUML_Tests_TestCallAccepter_test_input->setName("input");
				fUML_Tests_TestCallAccepter_test_input->setVisibility(VisibilityKind::public_);
				
				fUML_Tests_TestCallAccepter_test_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestCallAccepter_test->addOwnedParameter(fUML_Tests_TestCallAccepter_test_input);
				// Parameter output
				fUML_Tests_TestCallAccepter_test_output->setThisElementPtr(fUML_Tests_TestCallAccepter_test_output);
				fUML_Tests_TestCallAccepter_test_output->setName("output");
				fUML_Tests_TestCallAccepter_test_output->setVisibility(VisibilityKind::public_);
				
				fUML_Tests_TestCallAccepter_test_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_TestCallAccepter_test_output->setDirection(ParameterDirectionKind::out);
			fUML_Tests_TestCallAccepter_test->addOwnedParameter(fUML_Tests_TestCallAccepter_test_output);
		fUML_Tests_TestCallAccepter->addOwnedOperation(fUML_Tests_TestCallAccepter_test);
			// ReplyAction Reply(test)
			fUML_Tests_TestCallAccepter_Reply_test->setThisExecutableNodePtr(fUML_Tests_TestCallAccepter_Reply_test);
			fUML_Tests_TestCallAccepter_Reply_test->setName("Reply(test)");
			fUML_Tests_TestCallAccepter_Reply_test->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallAccepter_Reply_test->setReplyToCall(fUML_Tests_TestCallAccepter_Accept_test_Trigger546);
				// InputPin Reply(test).returnInfo
				fUML_Tests_TestCallAccepter_Reply_test_Reply_test_returnInfo->setThisElementPtr(fUML_Tests_TestCallAccepter_Reply_test_Reply_test_returnInfo);
				fUML_Tests_TestCallAccepter_Reply_test_Reply_test_returnInfo->setName("Reply(test).returnInfo");
				fUML_Tests_TestCallAccepter_Reply_test_Reply_test_returnInfo->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallAccepter_Reply_test->setReturnInformation(fUML_Tests_TestCallAccepter_Reply_test_Reply_test_returnInfo);
				// InputPin Reply(test).replyValue
				fUML_Tests_TestCallAccepter_Reply_test_Reply_test_replyValue->setThisElementPtr(fUML_Tests_TestCallAccepter_Reply_test_Reply_test_replyValue);
				fUML_Tests_TestCallAccepter_Reply_test_Reply_test_replyValue->setName("Reply(test).replyValue");
				fUML_Tests_TestCallAccepter_Reply_test_Reply_test_replyValue->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallAccepter_Reply_test->addReplyValue(fUML_Tests_TestCallAccepter_Reply_test_Reply_test_replyValue);
		fUML_Tests_TestCallAccepter->addNode(fUML_Tests_TestCallAccepter_Reply_test);
			// AcceptCallAction Accept(test)
			fUML_Tests_TestCallAccepter_Accept_test->setThisExecutableNodePtr(fUML_Tests_TestCallAccepter_Accept_test);
			fUML_Tests_TestCallAccepter_Accept_test->setName("Accept(test)");
			fUML_Tests_TestCallAccepter_Accept_test->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallAccepter_Accept_test->setIsUnmarshall(true);
				// OutputPin Accept(test).result
				fUML_Tests_TestCallAccepter_Accept_test_Accept_test_result->setThisElementPtr(fUML_Tests_TestCallAccepter_Accept_test_Accept_test_result);
				fUML_Tests_TestCallAccepter_Accept_test_Accept_test_result->setName("Accept(test).result");
				fUML_Tests_TestCallAccepter_Accept_test_Accept_test_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallAccepter_Accept_test->addResult(fUML_Tests_TestCallAccepter_Accept_test_Accept_test_result);
				fUML_Tests_TestCallAccepter_Accept_test_Trigger546->setName("Trigger546");
				fUML_Tests_TestCallAccepter_Accept_test_Trigger546->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestCallAccepter_Accept_test_Trigger546->setEvent(fUML_Tests_CallEvent619);
			fUML_Tests_TestCallAccepter_Accept_test->addTrigger(fUML_Tests_TestCallAccepter_Accept_test_Trigger546);
				// OutputPin Accept(test).returnInfo
				fUML_Tests_TestCallAccepter_Accept_test_Accept_test_returnInfo->setThisElementPtr(fUML_Tests_TestCallAccepter_Accept_test_Accept_test_returnInfo);
				fUML_Tests_TestCallAccepter_Accept_test_Accept_test_returnInfo->setName("Accept(test).returnInfo");
				fUML_Tests_TestCallAccepter_Accept_test_Accept_test_returnInfo->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCallAccepter_Accept_test->setReturnInformation(fUML_Tests_TestCallAccepter_Accept_test_Accept_test_returnInfo);
		fUML_Tests_TestCallAccepter->addNode(fUML_Tests_TestCallAccepter_Accept_test);
			// InitialNode InitialNode551
			fUML_Tests_TestCallAccepter_InitialNode551->setThisElementPtr(fUML_Tests_TestCallAccepter_InitialNode551);
			fUML_Tests_TestCallAccepter_InitialNode551->setName("InitialNode551");
			fUML_Tests_TestCallAccepter_InitialNode551->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestCallAccepter->addNode(fUML_Tests_TestCallAccepter_InitialNode551);
			// ObjectFlow ObjectFlow544 from Accept(test).result to Reply(test).replyValue
			fUML_Tests_TestCallAccepter_ObjectFlow544->setThisActivityEdgePtr(fUML_Tests_TestCallAccepter_ObjectFlow544);
			fUML_Tests_TestCallAccepter_ObjectFlow544->setName("ObjectFlow544");
			fUML_Tests_TestCallAccepter_ObjectFlow544->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallAccepter_ObjectFlow544->setSource(fUML_Tests_TestCallAccepter_Accept_test_Accept_test_result);
			fUML_Tests_TestCallAccepter_ObjectFlow544->setTarget(fUML_Tests_TestCallAccepter_Reply_test_Reply_test_replyValue);
		fUML_Tests_TestCallAccepter->addEdge(fUML_Tests_TestCallAccepter_ObjectFlow544);
			// ObjectFlow ObjectFlow547 from Accept(test).returnInfo to Reply(test).returnInfo
			fUML_Tests_TestCallAccepter_ObjectFlow547->setThisActivityEdgePtr(fUML_Tests_TestCallAccepter_ObjectFlow547);
			fUML_Tests_TestCallAccepter_ObjectFlow547->setName("ObjectFlow547");
			fUML_Tests_TestCallAccepter_ObjectFlow547->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallAccepter_ObjectFlow547->setSource(fUML_Tests_TestCallAccepter_Accept_test_Accept_test_returnInfo);
			fUML_Tests_TestCallAccepter_ObjectFlow547->setTarget(fUML_Tests_TestCallAccepter_Reply_test_Reply_test_returnInfo);
		fUML_Tests_TestCallAccepter->addEdge(fUML_Tests_TestCallAccepter_ObjectFlow547);
			// ControlFlow ControlFlow549 from InitialNode551 to Accept(test)
			fUML_Tests_TestCallAccepter_ControlFlow549->setThisActivityEdgePtr(fUML_Tests_TestCallAccepter_ControlFlow549);
			fUML_Tests_TestCallAccepter_ControlFlow549->setName("ControlFlow549");
			fUML_Tests_TestCallAccepter_ControlFlow549->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCallAccepter_ControlFlow549->setSource(fUML_Tests_TestCallAccepter_InitialNode551);
			fUML_Tests_TestCallAccepter_ControlFlow549->setTarget(fUML_Tests_TestCallAccepter_Accept_test);
		fUML_Tests_TestCallAccepter->addEdge(fUML_Tests_TestCallAccepter_ControlFlow549);
	fUML_Tests->addPackagedElement(fUML_Tests_TestCallAccepter);
		// Activity TestDataStore
		fUML_Tests_TestDataStore->setThisActivityPtr(fUML_Tests_TestDataStore);
		fUML_Tests_TestDataStore->setName("TestDataStore");
		fUML_Tests_TestDataStore->setVisibility(VisibilityKind::public_);
			// Parameter output
			fUML_Tests_TestDataStore_output->setThisElementPtr(fUML_Tests_TestDataStore_output);
			fUML_Tests_TestDataStore_output->setName("output");
			fUML_Tests_TestDataStore_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestDataStore_output->setUpper(-1);
			fUML_Tests_TestDataStore_output->setLower(0);
			fUML_Tests_TestDataStore_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestDataStore_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestDataStore->addOwnedParameter(fUML_Tests_TestDataStore_output);
			// ValueSpecificationAction Value(1)-Init-2
			fUML_Tests_TestDataStore_Value_1minusInitminus2->setThisExecutableNodePtr(fUML_Tests_TestDataStore_Value_1minusInitminus2);
			fUML_Tests_TestDataStore_Value_1minusInitminus2->setName("Value(1)-Init-2");
			fUML_Tests_TestDataStore_Value_1minusInitminus2->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger590
				fUML_Tests_TestDataStore_Value_1minusInitminus2_LiteralInteger590->setThisElementPtr(fUML_Tests_TestDataStore_Value_1minusInitminus2_LiteralInteger590);
				fUML_Tests_TestDataStore_Value_1minusInitminus2_LiteralInteger590->setName("LiteralInteger590");
				fUML_Tests_TestDataStore_Value_1minusInitminus2_LiteralInteger590->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_Value_1minusInitminus2_LiteralInteger590->setValue(1);
			fUML_Tests_TestDataStore_Value_1minusInitminus2->setValue(fUML_Tests_TestDataStore_Value_1minusInitminus2_LiteralInteger590);
				// OutputPin Value(1)-Init-2.result
				fUML_Tests_TestDataStore_Value_1minusInitminus2_Value_1minusInitminus2_result->setThisElementPtr(fUML_Tests_TestDataStore_Value_1minusInitminus2_Value_1minusInitminus2_result);
				fUML_Tests_TestDataStore_Value_1minusInitminus2_Value_1minusInitminus2_result->setName("Value(1)-Init-2.result");
				fUML_Tests_TestDataStore_Value_1minusInitminus2_Value_1minusInitminus2_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestDataStore_Value_1minusInitminus2->setResult(fUML_Tests_TestDataStore_Value_1minusInitminus2_Value_1minusInitminus2_result);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Value_1minusInitminus2);
			// ValueSpecificationAction Value(3)
			fUML_Tests_TestDataStore_Value_3->setThisExecutableNodePtr(fUML_Tests_TestDataStore_Value_3);
			fUML_Tests_TestDataStore_Value_3->setName("Value(3)");
			fUML_Tests_TestDataStore_Value_3->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger595
				fUML_Tests_TestDataStore_Value_3_LiteralInteger595->setThisElementPtr(fUML_Tests_TestDataStore_Value_3_LiteralInteger595);
				fUML_Tests_TestDataStore_Value_3_LiteralInteger595->setName("LiteralInteger595");
				fUML_Tests_TestDataStore_Value_3_LiteralInteger595->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_Value_3_LiteralInteger595->setValue(3);
			fUML_Tests_TestDataStore_Value_3->setValue(fUML_Tests_TestDataStore_Value_3_LiteralInteger595);
				// OutputPin Value(3).result
				fUML_Tests_TestDataStore_Value_3_Value_3_result->setThisElementPtr(fUML_Tests_TestDataStore_Value_3_Value_3_result);
				fUML_Tests_TestDataStore_Value_3_Value_3_result->setName("Value(3).result");
				fUML_Tests_TestDataStore_Value_3_Value_3_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestDataStore_Value_3->setResult(fUML_Tests_TestDataStore_Value_3_Value_3_result);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Value_3);
			// InitialNode InitialNode598
			fUML_Tests_TestDataStore_InitialNode598->setThisElementPtr(fUML_Tests_TestDataStore_InitialNode598);
			fUML_Tests_TestDataStore_InitialNode598->setName("InitialNode598");
			fUML_Tests_TestDataStore_InitialNode598->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_InitialNode598);
			// CallBehaviorAction Call(Copier)-2
			fUML_Tests_TestDataStore_Call_Copierminus2->setThisExecutableNodePtr(fUML_Tests_TestDataStore_Call_Copierminus2);
			fUML_Tests_TestDataStore_Call_Copierminus2->setName("Call(Copier)-2");
			fUML_Tests_TestDataStore_Call_Copierminus2->setVisibility(VisibilityKind::public_);
				// OutputPin Call(Copier)-2.output
				fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output->setThisElementPtr(fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output);
				fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output->setName("Call(Copier)-2.output");
				fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestDataStore_Call_Copierminus2->addResult(fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output);
			fUML_Tests_TestDataStore_Call_Copierminus2->setBehavior(fUML_Tests_Copier);
				// InputPin Call(Copier)-2.input
				fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input->setThisElementPtr(fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input);
				fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input->setName("Call(Copier)-2.input");
				fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestDataStore_Call_Copierminus2->addArgument(fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Call_Copierminus2);
			// ValueSpecificationAction Value(2)-Init-3
			fUML_Tests_TestDataStore_Value_2minusInitminus3->setThisExecutableNodePtr(fUML_Tests_TestDataStore_Value_2minusInitminus3);
			fUML_Tests_TestDataStore_Value_2minusInitminus3->setName("Value(2)-Init-3");
			fUML_Tests_TestDataStore_Value_2minusInitminus3->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger572
				fUML_Tests_TestDataStore_Value_2minusInitminus3_LiteralInteger572->setThisElementPtr(fUML_Tests_TestDataStore_Value_2minusInitminus3_LiteralInteger572);
				fUML_Tests_TestDataStore_Value_2minusInitminus3_LiteralInteger572->setName("LiteralInteger572");
				fUML_Tests_TestDataStore_Value_2minusInitminus3_LiteralInteger572->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_Value_2minusInitminus3_LiteralInteger572->setValue(2);
			fUML_Tests_TestDataStore_Value_2minusInitminus3->setValue(fUML_Tests_TestDataStore_Value_2minusInitminus3_LiteralInteger572);
				// OutputPin Value(2)-Init-1.result
				fUML_Tests_TestDataStore_Value_2minusInitminus3_Value_2minusInitminus1_result->setThisElementPtr(fUML_Tests_TestDataStore_Value_2minusInitminus3_Value_2minusInitminus1_result);
				fUML_Tests_TestDataStore_Value_2minusInitminus3_Value_2minusInitminus1_result->setName("Value(2)-Init-1.result");
				fUML_Tests_TestDataStore_Value_2minusInitminus3_Value_2minusInitminus1_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestDataStore_Value_2minusInitminus3->setResult(fUML_Tests_TestDataStore_Value_2minusInitminus3_Value_2minusInitminus1_result);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Value_2minusInitminus3);
			// CallBehaviorAction Call(Copier)-1
			fUML_Tests_TestDataStore_Call_Copierminus1->setThisExecutableNodePtr(fUML_Tests_TestDataStore_Call_Copierminus1);
			fUML_Tests_TestDataStore_Call_Copierminus1->setName("Call(Copier)-1");
			fUML_Tests_TestDataStore_Call_Copierminus1->setVisibility(VisibilityKind::public_);
				// OutputPin Call(Copier)-1.output
				fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output->setThisElementPtr(fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output);
				fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output->setName("Call(Copier)-1.output");
				fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestDataStore_Call_Copierminus1->addResult(fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output);
			fUML_Tests_TestDataStore_Call_Copierminus1->setBehavior(fUML_Tests_Copier);
				// InputPin Call(Copier)-1.input
				fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input->setThisElementPtr(fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input);
				fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input->setName("Call(Copier)-1.input");
				fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestDataStore_Call_Copierminus1->addArgument(fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Call_Copierminus1);
			// MergeNode Merge2
			fUML_Tests_TestDataStore_Merge2->setThisElementPtr(fUML_Tests_TestDataStore_Merge2);
			fUML_Tests_TestDataStore_Merge2->setName("Merge2");
			fUML_Tests_TestDataStore_Merge2->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Merge2);
			// ActivityParameterNode Parameter(output)
			fUML_Tests_TestDataStore_Parameter_output->setThisElementPtr(fUML_Tests_TestDataStore_Parameter_output);
			fUML_Tests_TestDataStore_Parameter_output->setName("Parameter(output)");
			fUML_Tests_TestDataStore_Parameter_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestDataStore_Parameter_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestDataStore_Parameter_output->setParameter(fUML_Tests_TestDataStore_output);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Parameter_output);
			// ValueSpecificationAction Value(1)-Init-1
			fUML_Tests_TestDataStore_Value_1minusInitminus1->setThisExecutableNodePtr(fUML_Tests_TestDataStore_Value_1minusInitminus1);
			fUML_Tests_TestDataStore_Value_1minusInitminus1->setName("Value(1)-Init-1");
			fUML_Tests_TestDataStore_Value_1minusInitminus1->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger607
				fUML_Tests_TestDataStore_Value_1minusInitminus1_LiteralInteger607->setThisElementPtr(fUML_Tests_TestDataStore_Value_1minusInitminus1_LiteralInteger607);
				fUML_Tests_TestDataStore_Value_1minusInitminus1_LiteralInteger607->setName("LiteralInteger607");
				fUML_Tests_TestDataStore_Value_1minusInitminus1_LiteralInteger607->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_Value_1minusInitminus1_LiteralInteger607->setValue(1);
			fUML_Tests_TestDataStore_Value_1minusInitminus1->setValue(fUML_Tests_TestDataStore_Value_1minusInitminus1_LiteralInteger607);
				// OutputPin Value(1)-Init-1.result
				fUML_Tests_TestDataStore_Value_1minusInitminus1_Value_1minusInitminus1_result->setThisElementPtr(fUML_Tests_TestDataStore_Value_1minusInitminus1_Value_1minusInitminus1_result);
				fUML_Tests_TestDataStore_Value_1minusInitminus1_Value_1minusInitminus1_result->setName("Value(1)-Init-1.result");
				fUML_Tests_TestDataStore_Value_1minusInitminus1_Value_1minusInitminus1_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestDataStore_Value_1minusInitminus1->setResult(fUML_Tests_TestDataStore_Value_1minusInitminus1_Value_1minusInitminus1_result);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Value_1minusInitminus1);
			// ActivityFinalNode FinalNode
			fUML_Tests_TestDataStore_FinalNode->setThisElementPtr(fUML_Tests_TestDataStore_FinalNode);
			fUML_Tests_TestDataStore_FinalNode->setName("FinalNode");
			fUML_Tests_TestDataStore_FinalNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_FinalNode);
			// MergeNode Merge3
			fUML_Tests_TestDataStore_Merge3->setThisElementPtr(fUML_Tests_TestDataStore_Merge3);
			fUML_Tests_TestDataStore_Merge3->setName("Merge3");
			fUML_Tests_TestDataStore_Merge3->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Merge3);
			// ValueSpecificationAction Value(1)
			fUML_Tests_TestDataStore_Value_1->setThisExecutableNodePtr(fUML_Tests_TestDataStore_Value_1);
			fUML_Tests_TestDataStore_Value_1->setName("Value(1)");
			fUML_Tests_TestDataStore_Value_1->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger581
				fUML_Tests_TestDataStore_Value_1_LiteralInteger581->setThisElementPtr(fUML_Tests_TestDataStore_Value_1_LiteralInteger581);
				fUML_Tests_TestDataStore_Value_1_LiteralInteger581->setName("LiteralInteger581");
				fUML_Tests_TestDataStore_Value_1_LiteralInteger581->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_Value_1_LiteralInteger581->setValue(1);
			fUML_Tests_TestDataStore_Value_1->setValue(fUML_Tests_TestDataStore_Value_1_LiteralInteger581);
				// OutputPin Value(1).result
				fUML_Tests_TestDataStore_Value_1_Value_1_result->setThisElementPtr(fUML_Tests_TestDataStore_Value_1_Value_1_result);
				fUML_Tests_TestDataStore_Value_1_Value_1_result->setName("Value(1).result");
				fUML_Tests_TestDataStore_Value_1_Value_1_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestDataStore_Value_1->setResult(fUML_Tests_TestDataStore_Value_1_Value_1_result);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Value_1);
			// DecisionNode DecisionNode
			fUML_Tests_TestDataStore_DecisionNode->setThisElementPtr(fUML_Tests_TestDataStore_DecisionNode);
			fUML_Tests_TestDataStore_DecisionNode->setName("DecisionNode");
			fUML_Tests_TestDataStore_DecisionNode->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestDataStore_DecisionNode->setDecisionInputFlow(fUML_Tests_TestDataStore_decisionInputFlow);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_DecisionNode);
			// MergeNode Merge1
			fUML_Tests_TestDataStore_Merge1->setThisElementPtr(fUML_Tests_TestDataStore_Merge1);
			fUML_Tests_TestDataStore_Merge1->setName("Merge1");
			fUML_Tests_TestDataStore_Merge1->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Merge1);
			// ValueSpecificationAction Value(2)
			fUML_Tests_TestDataStore_Value_2->setThisExecutableNodePtr(fUML_Tests_TestDataStore_Value_2);
			fUML_Tests_TestDataStore_Value_2->setName("Value(2)");
			fUML_Tests_TestDataStore_Value_2->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger612
				fUML_Tests_TestDataStore_Value_2_LiteralInteger612->setThisElementPtr(fUML_Tests_TestDataStore_Value_2_LiteralInteger612);
				fUML_Tests_TestDataStore_Value_2_LiteralInteger612->setName("LiteralInteger612");
				fUML_Tests_TestDataStore_Value_2_LiteralInteger612->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_Value_2_LiteralInteger612->setValue(2);
			fUML_Tests_TestDataStore_Value_2->setValue(fUML_Tests_TestDataStore_Value_2_LiteralInteger612);
				// OutputPin Value(2).result
				fUML_Tests_TestDataStore_Value_2_Value_2_result->setThisElementPtr(fUML_Tests_TestDataStore_Value_2_Value_2_result);
				fUML_Tests_TestDataStore_Value_2_Value_2_result->setName("Value(2).result");
				fUML_Tests_TestDataStore_Value_2_Value_2_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestDataStore_Value_2->setResult(fUML_Tests_TestDataStore_Value_2_Value_2_result);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_Value_2);
			// DataStoreNode DataStoreNode
			fUML_Tests_TestDataStore_DataStoreNode->setThisElementPtr(fUML_Tests_TestDataStore_DataStoreNode);
			fUML_Tests_TestDataStore_DataStoreNode->setName("DataStoreNode");
			fUML_Tests_TestDataStore_DataStoreNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestDataStore->addNode(fUML_Tests_TestDataStore_DataStoreNode);
			// ObjectFlow ObjectFlow552 from Value(1).result to Merge2
			fUML_Tests_TestDataStore_ObjectFlow552->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ObjectFlow552);
			fUML_Tests_TestDataStore_ObjectFlow552->setName("ObjectFlow552");
			fUML_Tests_TestDataStore_ObjectFlow552->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ObjectFlow552->setSource(fUML_Tests_TestDataStore_Value_1_Value_1_result);
			fUML_Tests_TestDataStore_ObjectFlow552->setTarget(fUML_Tests_TestDataStore_Merge2);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ObjectFlow552);
			// ControlFlow ControlFlow554 from Value(3) to Merge3
			fUML_Tests_TestDataStore_ControlFlow554->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow554);
			fUML_Tests_TestDataStore_ControlFlow554->setName("ControlFlow554");
			fUML_Tests_TestDataStore_ControlFlow554->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow554->setSource(fUML_Tests_TestDataStore_Value_3);
			fUML_Tests_TestDataStore_ControlFlow554->setTarget(fUML_Tests_TestDataStore_Merge3);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow554);
			// ControlFlow ControlFlow560 from DecisionNode to Call(Copier)-1
			fUML_Tests_TestDataStore_ControlFlow560->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow560);
			fUML_Tests_TestDataStore_ControlFlow560->setName("ControlFlow560");
			fUML_Tests_TestDataStore_ControlFlow560->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow560->setSource(fUML_Tests_TestDataStore_DecisionNode);
			fUML_Tests_TestDataStore_ControlFlow560->setTarget(fUML_Tests_TestDataStore_Call_Copierminus1);
				// LiteralInteger LiteralInteger562
				fUML_Tests_TestDataStore_ControlFlow560_LiteralInteger562->setThisElementPtr(fUML_Tests_TestDataStore_ControlFlow560_LiteralInteger562);
				fUML_Tests_TestDataStore_ControlFlow560_LiteralInteger562->setName("LiteralInteger562");
				fUML_Tests_TestDataStore_ControlFlow560_LiteralInteger562->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_ControlFlow560_LiteralInteger562->setValue(1);
			fUML_Tests_TestDataStore_ControlFlow560->setGuard(fUML_Tests_TestDataStore_ControlFlow560_LiteralInteger562);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow560);
			// ControlFlow ControlFlow563 from InitialNode598 to Value(1)-Init-1
			fUML_Tests_TestDataStore_ControlFlow563->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow563);
			fUML_Tests_TestDataStore_ControlFlow563->setName("ControlFlow563");
			fUML_Tests_TestDataStore_ControlFlow563->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow563->setSource(fUML_Tests_TestDataStore_InitialNode598);
			fUML_Tests_TestDataStore_ControlFlow563->setTarget(fUML_Tests_TestDataStore_Value_1minusInitminus1);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow563);
			// ControlFlow ControlFlow565 from DecisionNode to FinalNode
			fUML_Tests_TestDataStore_ControlFlow565->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow565);
			fUML_Tests_TestDataStore_ControlFlow565->setName("ControlFlow565");
			fUML_Tests_TestDataStore_ControlFlow565->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow565->setSource(fUML_Tests_TestDataStore_DecisionNode);
			fUML_Tests_TestDataStore_ControlFlow565->setTarget(fUML_Tests_TestDataStore_FinalNode);
				// LiteralInteger LiteralInteger567
				fUML_Tests_TestDataStore_ControlFlow565_LiteralInteger567->setThisElementPtr(fUML_Tests_TestDataStore_ControlFlow565_LiteralInteger567);
				fUML_Tests_TestDataStore_ControlFlow565_LiteralInteger567->setName("LiteralInteger567");
				fUML_Tests_TestDataStore_ControlFlow565_LiteralInteger567->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_ControlFlow565_LiteralInteger567->setValue(3);
			fUML_Tests_TestDataStore_ControlFlow565->setGuard(fUML_Tests_TestDataStore_ControlFlow565_LiteralInteger567);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow565);
			// ObjectFlow ObjectFlow568 from Value(1)-Init-1.result to DataStoreNode
			fUML_Tests_TestDataStore_ObjectFlow568->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ObjectFlow568);
			fUML_Tests_TestDataStore_ObjectFlow568->setName("ObjectFlow568");
			fUML_Tests_TestDataStore_ObjectFlow568->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ObjectFlow568->setSource(fUML_Tests_TestDataStore_Value_1minusInitminus1_Value_1minusInitminus1_result);
			fUML_Tests_TestDataStore_ObjectFlow568->setTarget(fUML_Tests_TestDataStore_DataStoreNode);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ObjectFlow568);
			// ObjectFlow ObjectFlow570 from Value(2)-Init-1.result to DataStoreNode
			fUML_Tests_TestDataStore_ObjectFlow570->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ObjectFlow570);
			fUML_Tests_TestDataStore_ObjectFlow570->setName("ObjectFlow570");
			fUML_Tests_TestDataStore_ObjectFlow570->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ObjectFlow570->setSource(fUML_Tests_TestDataStore_Value_2minusInitminus3_Value_2minusInitminus1_result);
			fUML_Tests_TestDataStore_ObjectFlow570->setTarget(fUML_Tests_TestDataStore_DataStoreNode);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ObjectFlow570);
			// ControlFlow ControlFlow573 from Merge1 to DecisionNode
			fUML_Tests_TestDataStore_ControlFlow573->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow573);
			fUML_Tests_TestDataStore_ControlFlow573->setName("ControlFlow573");
			fUML_Tests_TestDataStore_ControlFlow573->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow573->setSource(fUML_Tests_TestDataStore_Merge1);
			fUML_Tests_TestDataStore_ControlFlow573->setTarget(fUML_Tests_TestDataStore_DecisionNode);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow573);
			// ControlFlow ControlFlow575 from Call(Copier)-2 to Value(3)
			fUML_Tests_TestDataStore_ControlFlow575->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow575);
			fUML_Tests_TestDataStore_ControlFlow575->setName("ControlFlow575");
			fUML_Tests_TestDataStore_ControlFlow575->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow575->setSource(fUML_Tests_TestDataStore_Call_Copierminus2);
			fUML_Tests_TestDataStore_ControlFlow575->setTarget(fUML_Tests_TestDataStore_Value_3);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow575);
			// ControlFlow ControlFlow582 from Value(1)-Init-2 to Value(2)-Init-3
			fUML_Tests_TestDataStore_ControlFlow582->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow582);
			fUML_Tests_TestDataStore_ControlFlow582->setName("ControlFlow582");
			fUML_Tests_TestDataStore_ControlFlow582->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow582->setSource(fUML_Tests_TestDataStore_Value_1minusInitminus2);
			fUML_Tests_TestDataStore_ControlFlow582->setTarget(fUML_Tests_TestDataStore_Value_2minusInitminus3);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow582);
			// ObjectFlow ObjectFlow584 from Value(3).result to Merge2
			fUML_Tests_TestDataStore_ObjectFlow584->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ObjectFlow584);
			fUML_Tests_TestDataStore_ObjectFlow584->setName("ObjectFlow584");
			fUML_Tests_TestDataStore_ObjectFlow584->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ObjectFlow584->setSource(fUML_Tests_TestDataStore_Value_3_Value_3_result);
			fUML_Tests_TestDataStore_ObjectFlow584->setTarget(fUML_Tests_TestDataStore_Merge2);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ObjectFlow584);
			// ControlFlow ControlFlow586 from Call(Copier)-1 to Value(2)
			fUML_Tests_TestDataStore_ControlFlow586->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow586);
			fUML_Tests_TestDataStore_ControlFlow586->setName("ControlFlow586");
			fUML_Tests_TestDataStore_ControlFlow586->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow586->setSource(fUML_Tests_TestDataStore_Call_Copierminus1);
			fUML_Tests_TestDataStore_ControlFlow586->setTarget(fUML_Tests_TestDataStore_Value_2);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow586);
			// ObjectFlow ObjectFlow588 from Value(2).result to Merge2
			fUML_Tests_TestDataStore_ObjectFlow588->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ObjectFlow588);
			fUML_Tests_TestDataStore_ObjectFlow588->setName("ObjectFlow588");
			fUML_Tests_TestDataStore_ObjectFlow588->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ObjectFlow588->setSource(fUML_Tests_TestDataStore_Value_2_Value_2_result);
			fUML_Tests_TestDataStore_ObjectFlow588->setTarget(fUML_Tests_TestDataStore_Merge2);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ObjectFlow588);
			// ControlFlow ControlFlow591 from DecisionNode to Call(Copier)-2
			fUML_Tests_TestDataStore_ControlFlow591->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow591);
			fUML_Tests_TestDataStore_ControlFlow591->setName("ControlFlow591");
			fUML_Tests_TestDataStore_ControlFlow591->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow591->setSource(fUML_Tests_TestDataStore_DecisionNode);
			fUML_Tests_TestDataStore_ControlFlow591->setTarget(fUML_Tests_TestDataStore_Call_Copierminus2);
				// LiteralInteger LiteralInteger592
				fUML_Tests_TestDataStore_ControlFlow591_LiteralInteger592->setThisElementPtr(fUML_Tests_TestDataStore_ControlFlow591_LiteralInteger592);
				fUML_Tests_TestDataStore_ControlFlow591_LiteralInteger592->setName("LiteralInteger592");
				fUML_Tests_TestDataStore_ControlFlow591_LiteralInteger592->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestDataStore_ControlFlow591_LiteralInteger592->setValue(2);
			fUML_Tests_TestDataStore_ControlFlow591->setGuard(fUML_Tests_TestDataStore_ControlFlow591_LiteralInteger592);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow591);
			// ObjectFlow decisionInputFlow from Merge2 to DecisionNode
			fUML_Tests_TestDataStore_decisionInputFlow->setThisActivityEdgePtr(fUML_Tests_TestDataStore_decisionInputFlow);
			fUML_Tests_TestDataStore_decisionInputFlow->setName("decisionInputFlow");
			fUML_Tests_TestDataStore_decisionInputFlow->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_decisionInputFlow->setSource(fUML_Tests_TestDataStore_Merge2);
			fUML_Tests_TestDataStore_decisionInputFlow->setTarget(fUML_Tests_TestDataStore_DecisionNode);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_decisionInputFlow);
			// ObjectFlow ObjectFlow596 from Value(1)-Init-2.result to DataStoreNode
			fUML_Tests_TestDataStore_ObjectFlow596->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ObjectFlow596);
			fUML_Tests_TestDataStore_ObjectFlow596->setName("ObjectFlow596");
			fUML_Tests_TestDataStore_ObjectFlow596->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ObjectFlow596->setSource(fUML_Tests_TestDataStore_Value_1minusInitminus2_Value_1minusInitminus2_result);
			fUML_Tests_TestDataStore_ObjectFlow596->setTarget(fUML_Tests_TestDataStore_DataStoreNode);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ObjectFlow596);
			// ObjectFlow ObjectFlow599 from DataStoreNode to Call(Copier)-2.input
			fUML_Tests_TestDataStore_ObjectFlow599->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ObjectFlow599);
			fUML_Tests_TestDataStore_ObjectFlow599->setName("ObjectFlow599");
			fUML_Tests_TestDataStore_ObjectFlow599->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ObjectFlow599->setSource(fUML_Tests_TestDataStore_DataStoreNode);
			fUML_Tests_TestDataStore_ObjectFlow599->setTarget(fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_input);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ObjectFlow599);
			// ControlFlow ControlFlow601 from Value(2) to Merge3
			fUML_Tests_TestDataStore_ControlFlow601->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow601);
			fUML_Tests_TestDataStore_ControlFlow601->setName("ControlFlow601");
			fUML_Tests_TestDataStore_ControlFlow601->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow601->setSource(fUML_Tests_TestDataStore_Value_2);
			fUML_Tests_TestDataStore_ControlFlow601->setTarget(fUML_Tests_TestDataStore_Merge3);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow601);
			// ControlFlow ControlFlow603 from Merge3 to Merge1
			fUML_Tests_TestDataStore_ControlFlow603->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow603);
			fUML_Tests_TestDataStore_ControlFlow603->setName("ControlFlow603");
			fUML_Tests_TestDataStore_ControlFlow603->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow603->setSource(fUML_Tests_TestDataStore_Merge3);
			fUML_Tests_TestDataStore_ControlFlow603->setTarget(fUML_Tests_TestDataStore_Merge1);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow603);
			// ObjectFlow ObjectFlow605 from Call(Copier)-1.output to Parameter(output)
			fUML_Tests_TestDataStore_ObjectFlow605->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ObjectFlow605);
			fUML_Tests_TestDataStore_ObjectFlow605->setName("ObjectFlow605");
			fUML_Tests_TestDataStore_ObjectFlow605->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ObjectFlow605->setSource(fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_output);
			fUML_Tests_TestDataStore_ObjectFlow605->setTarget(fUML_Tests_TestDataStore_Parameter_output);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ObjectFlow605);
			// ControlFlow ControlFlow608 from Value(2)-Init-3 to Merge1
			fUML_Tests_TestDataStore_ControlFlow608->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow608);
			fUML_Tests_TestDataStore_ControlFlow608->setName("ControlFlow608");
			fUML_Tests_TestDataStore_ControlFlow608->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow608->setSource(fUML_Tests_TestDataStore_Value_2minusInitminus3);
			fUML_Tests_TestDataStore_ControlFlow608->setTarget(fUML_Tests_TestDataStore_Merge1);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow608);
			// ObjectFlow ObjectFlow610 from Call(Copier)-2.output to Parameter(output)
			fUML_Tests_TestDataStore_ObjectFlow610->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ObjectFlow610);
			fUML_Tests_TestDataStore_ObjectFlow610->setName("ObjectFlow610");
			fUML_Tests_TestDataStore_ObjectFlow610->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ObjectFlow610->setSource(fUML_Tests_TestDataStore_Call_Copierminus2_Call_Copierminus2_output);
			fUML_Tests_TestDataStore_ObjectFlow610->setTarget(fUML_Tests_TestDataStore_Parameter_output);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ObjectFlow610);
			// ObjectFlow ObjectFlow613 from DataStoreNode to Call(Copier)-1.input
			fUML_Tests_TestDataStore_ObjectFlow613->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ObjectFlow613);
			fUML_Tests_TestDataStore_ObjectFlow613->setName("ObjectFlow613");
			fUML_Tests_TestDataStore_ObjectFlow613->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ObjectFlow613->setSource(fUML_Tests_TestDataStore_DataStoreNode);
			fUML_Tests_TestDataStore_ObjectFlow613->setTarget(fUML_Tests_TestDataStore_Call_Copierminus1_Call_Copierminus1_input);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ObjectFlow613);
			// ControlFlow ControlFlow617 from Value(1)-Init-1 to Value(1)-Init-2
			fUML_Tests_TestDataStore_ControlFlow617->setThisActivityEdgePtr(fUML_Tests_TestDataStore_ControlFlow617);
			fUML_Tests_TestDataStore_ControlFlow617->setName("ControlFlow617");
			fUML_Tests_TestDataStore_ControlFlow617->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestDataStore_ControlFlow617->setSource(fUML_Tests_TestDataStore_Value_1minusInitminus1);
			fUML_Tests_TestDataStore_ControlFlow617->setTarget(fUML_Tests_TestDataStore_Value_1minusInitminus2);
		fUML_Tests_TestDataStore->addEdge(fUML_Tests_TestDataStore_ControlFlow617);
	fUML_Tests->addPackagedElement(fUML_Tests_TestDataStore);
		// CallEvent CallEvent619
		fUML_Tests_CallEvent619->setThisElementPtr(fUML_Tests_CallEvent619);
		fUML_Tests_CallEvent619->setName("CallEvent619");
		fUML_Tests_CallEvent619->setVisibility(VisibilityKind::public_);
		fUML_Tests_CallEvent619->setOperation(fUML_Tests_TestCallAccepter_test);
	fUML_Tests->addPackagedElement(fUML_Tests_CallEvent619);
		// Association CompositeAssociation
		fUML_Tests_CompositeAssociation->setThisAssociationPtr(fUML_Tests_CompositeAssociation);
		fUML_Tests_CompositeAssociation->setName("CompositeAssociation");
		fUML_Tests_CompositeAssociation->setVisibility(VisibilityKind::public_);
		fUML_Tests_CompositeAssociation->addOwnedEnd(fUML_Tests_CompositeAssociation_c2);
		fUML_Tests_CompositeAssociation->addOwnedEnd(fUML_Tests_CompositeAssociation_composite);
		fUML_Tests_CompositeAssociation->addNavigableOwnedEnd(fUML_Tests_CompositeAssociation_c2);
	fUML_Tests->addPackagedElement(fUML_Tests_CompositeAssociation);
		// Activity SimpleDecision
		fUML_Tests_SimpleDecision->setThisActivityPtr(fUML_Tests_SimpleDecision);
		fUML_Tests_SimpleDecision->setName("SimpleDecision");
		fUML_Tests_SimpleDecision->setVisibility(VisibilityKind::public_);
		fUML_Tests_SimpleDecision->isReentrant = false;
			// Parameter testValue
			fUML_Tests_SimpleDecision_testValue->setThisElementPtr(fUML_Tests_SimpleDecision_testValue);
			fUML_Tests_SimpleDecision_testValue->setName("testValue");
			fUML_Tests_SimpleDecision_testValue->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_SimpleDecision_testValue->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
		fUML_Tests_SimpleDecision->addOwnedParameter(fUML_Tests_SimpleDecision_testValue);
			// Parameter output_0
			fUML_Tests_SimpleDecision_output_0->setThisElementPtr(fUML_Tests_SimpleDecision_output_0);
			fUML_Tests_SimpleDecision_output_0->setName("output_0");
			fUML_Tests_SimpleDecision_output_0->setVisibility(VisibilityKind::public_);
			fUML_Tests_SimpleDecision_output_0->setLower(0);
			fUML_Tests_SimpleDecision_output_0->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_SimpleDecision_output_0->setDirection(ParameterDirectionKind::out);
		fUML_Tests_SimpleDecision->addOwnedParameter(fUML_Tests_SimpleDecision_output_0);
			// Parameter output_1
			fUML_Tests_SimpleDecision_output_1->setThisElementPtr(fUML_Tests_SimpleDecision_output_1);
			fUML_Tests_SimpleDecision_output_1->setName("output_1");
			fUML_Tests_SimpleDecision_output_1->setVisibility(VisibilityKind::public_);
			fUML_Tests_SimpleDecision_output_1->setLower(0);
			fUML_Tests_SimpleDecision_output_1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_SimpleDecision_output_1->setDirection(ParameterDirectionKind::out);
		fUML_Tests_SimpleDecision->addOwnedParameter(fUML_Tests_SimpleDecision_output_1);
			// ActivityParameterNode Parameter(output_0)
			fUML_Tests_SimpleDecision_Parameter_output_0->setThisElementPtr(fUML_Tests_SimpleDecision_Parameter_output_0);
			fUML_Tests_SimpleDecision_Parameter_output_0->setName("Parameter(output_0)");
			fUML_Tests_SimpleDecision_Parameter_output_0->setVisibility(VisibilityKind::public_);
			fUML_Tests_SimpleDecision_Parameter_output_0->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_SimpleDecision_Parameter_output_0->setParameter(fUML_Tests_SimpleDecision_output_0);
		fUML_Tests_SimpleDecision->addNode(fUML_Tests_SimpleDecision_Parameter_output_0);
			// DecisionNode DecisionNode
			fUML_Tests_SimpleDecision_DecisionNode->setThisElementPtr(fUML_Tests_SimpleDecision_DecisionNode);
			fUML_Tests_SimpleDecision_DecisionNode->setName("DecisionNode");
			fUML_Tests_SimpleDecision_DecisionNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_SimpleDecision->addNode(fUML_Tests_SimpleDecision_DecisionNode);
			// ActivityParameterNode Parameter(testValue)
			fUML_Tests_SimpleDecision_Parameter_testValue->setThisElementPtr(fUML_Tests_SimpleDecision_Parameter_testValue);
			fUML_Tests_SimpleDecision_Parameter_testValue->setName("Parameter(testValue)");
			fUML_Tests_SimpleDecision_Parameter_testValue->setVisibility(VisibilityKind::public_);
			fUML_Tests_SimpleDecision_Parameter_testValue->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_SimpleDecision_Parameter_testValue->setParameter(fUML_Tests_SimpleDecision_testValue);
		fUML_Tests_SimpleDecision->addNode(fUML_Tests_SimpleDecision_Parameter_testValue);
			// ActivityParameterNode Parameter(output_1)
			fUML_Tests_SimpleDecision_Parameter_output_1->setThisElementPtr(fUML_Tests_SimpleDecision_Parameter_output_1);
			fUML_Tests_SimpleDecision_Parameter_output_1->setName("Parameter(output_1)");
			fUML_Tests_SimpleDecision_Parameter_output_1->setVisibility(VisibilityKind::public_);
			fUML_Tests_SimpleDecision_Parameter_output_1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_SimpleDecision_Parameter_output_1->setParameter(fUML_Tests_SimpleDecision_output_1);
		fUML_Tests_SimpleDecision->addNode(fUML_Tests_SimpleDecision_Parameter_output_1);
			// ObjectFlow ObjectFlow620 from DecisionNode to Parameter(output_0)
			fUML_Tests_SimpleDecision_ObjectFlow620->setThisActivityEdgePtr(fUML_Tests_SimpleDecision_ObjectFlow620);
			fUML_Tests_SimpleDecision_ObjectFlow620->setName("ObjectFlow620");
			fUML_Tests_SimpleDecision_ObjectFlow620->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_SimpleDecision_ObjectFlow620->setSource(fUML_Tests_SimpleDecision_DecisionNode);
			fUML_Tests_SimpleDecision_ObjectFlow620->setTarget(fUML_Tests_SimpleDecision_Parameter_output_0);
				// LiteralInteger LiteralInteger621
				fUML_Tests_SimpleDecision_ObjectFlow620_LiteralInteger621->setThisElementPtr(fUML_Tests_SimpleDecision_ObjectFlow620_LiteralInteger621);
				fUML_Tests_SimpleDecision_ObjectFlow620_LiteralInteger621->setName("LiteralInteger621");
				fUML_Tests_SimpleDecision_ObjectFlow620_LiteralInteger621->setVisibility(VisibilityKind::public_);
				fUML_Tests_SimpleDecision_ObjectFlow620_LiteralInteger621->setValue(0);
			fUML_Tests_SimpleDecision_ObjectFlow620->setGuard(fUML_Tests_SimpleDecision_ObjectFlow620_LiteralInteger621);
		fUML_Tests_SimpleDecision->addEdge(fUML_Tests_SimpleDecision_ObjectFlow620);
			// ObjectFlow ObjectFlow625 from Parameter(testValue) to DecisionNode
			fUML_Tests_SimpleDecision_ObjectFlow625->setThisActivityEdgePtr(fUML_Tests_SimpleDecision_ObjectFlow625);
			fUML_Tests_SimpleDecision_ObjectFlow625->setName("ObjectFlow625");
			fUML_Tests_SimpleDecision_ObjectFlow625->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_SimpleDecision_ObjectFlow625->setSource(fUML_Tests_SimpleDecision_Parameter_testValue);
			fUML_Tests_SimpleDecision_ObjectFlow625->setTarget(fUML_Tests_SimpleDecision_DecisionNode);
		fUML_Tests_SimpleDecision->addEdge(fUML_Tests_SimpleDecision_ObjectFlow625);
			// ObjectFlow ObjectFlow631 from DecisionNode to Parameter(output_1)
			fUML_Tests_SimpleDecision_ObjectFlow631->setThisActivityEdgePtr(fUML_Tests_SimpleDecision_ObjectFlow631);
			fUML_Tests_SimpleDecision_ObjectFlow631->setName("ObjectFlow631");
			fUML_Tests_SimpleDecision_ObjectFlow631->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_SimpleDecision_ObjectFlow631->setSource(fUML_Tests_SimpleDecision_DecisionNode);
			fUML_Tests_SimpleDecision_ObjectFlow631->setTarget(fUML_Tests_SimpleDecision_Parameter_output_1);
				// LiteralInteger LiteralInteger633
				fUML_Tests_SimpleDecision_ObjectFlow631_LiteralInteger633->setThisElementPtr(fUML_Tests_SimpleDecision_ObjectFlow631_LiteralInteger633);
				fUML_Tests_SimpleDecision_ObjectFlow631_LiteralInteger633->setName("LiteralInteger633");
				fUML_Tests_SimpleDecision_ObjectFlow631_LiteralInteger633->setVisibility(VisibilityKind::public_);
				fUML_Tests_SimpleDecision_ObjectFlow631_LiteralInteger633->setValue(1);
			fUML_Tests_SimpleDecision_ObjectFlow631->setGuard(fUML_Tests_SimpleDecision_ObjectFlow631_LiteralInteger633);
		fUML_Tests_SimpleDecision->addEdge(fUML_Tests_SimpleDecision_ObjectFlow631);
	fUML_Tests->addPackagedElement(fUML_Tests_SimpleDecision);
		// Activity TestSignalReceiver
		fUML_Tests_TestSignalReceiver->setThisActivityPtr(fUML_Tests_TestSignalReceiver);
		fUML_Tests_TestSignalReceiver->setName("TestSignalReceiver");
		fUML_Tests_TestSignalReceiver->setVisibility(VisibilityKind::public_);
		
			// Property signal
			fUML_Tests_TestSignalReceiver_signal->setThisElementPtr(fUML_Tests_TestSignalReceiver_signal);
			fUML_Tests_TestSignalReceiver_signal->setName("signal");
			fUML_Tests_TestSignalReceiver_signal->setVisibility(VisibilityKind::private_);
			fUML_Tests_TestSignalReceiver_signal->setLower(0);
			fUML_Tests_TestSignalReceiver_signal->setType(fUML_Tests_TestSignal);
		fUML_Tests_TestSignalReceiver->addOwnedAttribute(fUML_Tests_TestSignalReceiver_signal);
			// Parameter testSignalOut
			fUML_Tests_TestSignalReceiver_testSignalOut->setThisElementPtr(fUML_Tests_TestSignalReceiver_testSignalOut);
			fUML_Tests_TestSignalReceiver_testSignalOut->setName("testSignalOut");
			fUML_Tests_TestSignalReceiver_testSignalOut->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSignalReceiver_testSignalOut->setLower(0);
			fUML_Tests_TestSignalReceiver_testSignalOut->setType(fUML_Tests_TestSignal);
			fUML_Tests_TestSignalReceiver_testSignalOut->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestSignalReceiver->addOwnedParameter(fUML_Tests_TestSignalReceiver_testSignalOut);
			// ReadSelfAction ReadSelf
			fUML_Tests_TestSignalReceiver_ReadSelf->setThisExecutableNodePtr(fUML_Tests_TestSignalReceiver_ReadSelf);
			fUML_Tests_TestSignalReceiver_ReadSelf->setName("ReadSelf");
			fUML_Tests_TestSignalReceiver_ReadSelf->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestSignalReceiver_ReadSelf_result->setThisElementPtr(fUML_Tests_TestSignalReceiver_ReadSelf_result);
				fUML_Tests_TestSignalReceiver_ReadSelf_result->setName("result");
				fUML_Tests_TestSignalReceiver_ReadSelf_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSignalReceiver_ReadSelf->setResult(fUML_Tests_TestSignalReceiver_ReadSelf_result);
		fUML_Tests_TestSignalReceiver->addNode(fUML_Tests_TestSignalReceiver_ReadSelf);
			// InitialNode InitialNode644
			fUML_Tests_TestSignalReceiver_InitialNode644->setThisElementPtr(fUML_Tests_TestSignalReceiver_InitialNode644);
			fUML_Tests_TestSignalReceiver_InitialNode644->setName("InitialNode644");
			fUML_Tests_TestSignalReceiver_InitialNode644->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestSignalReceiver->addNode(fUML_Tests_TestSignalReceiver_InitialNode644);
			// ForkNode Fork(signal)
			fUML_Tests_TestSignalReceiver_Fork_signal->setThisElementPtr(fUML_Tests_TestSignalReceiver_Fork_signal);
			fUML_Tests_TestSignalReceiver_Fork_signal->setName("Fork(signal)");
			fUML_Tests_TestSignalReceiver_Fork_signal->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestSignalReceiver->addNode(fUML_Tests_TestSignalReceiver_Fork_signal);
			// AcceptEventAction Accept(TestSignal)
			fUML_Tests_TestSignalReceiver_Accept_TestSignal->setThisExecutableNodePtr(fUML_Tests_TestSignalReceiver_Accept_TestSignal);
			fUML_Tests_TestSignalReceiver_Accept_TestSignal->setName("Accept(TestSignal)");
			fUML_Tests_TestSignalReceiver_Accept_TestSignal->setVisibility(VisibilityKind::public_);
				// OutputPin signal
				fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal->setThisElementPtr(fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal);
				fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal->setName("signal");
				fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal->setType(fUML_Tests_TestSignal);
			fUML_Tests_TestSignalReceiver_Accept_TestSignal->addResult(fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal);
				fUML_Tests_TestSignalReceiver_Accept_TestSignal_Trigger649->setName("Trigger649");
				fUML_Tests_TestSignalReceiver_Accept_TestSignal_Trigger649->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSignalReceiver_Accept_TestSignal_Trigger649->setEvent(fUML_Tests_SignalEvent857);
			fUML_Tests_TestSignalReceiver_Accept_TestSignal->addTrigger(fUML_Tests_TestSignalReceiver_Accept_TestSignal_Trigger649);
		fUML_Tests_TestSignalReceiver->addNode(fUML_Tests_TestSignalReceiver_Accept_TestSignal);
			// AddStructuralFeatureValueAction Write(signal)
			fUML_Tests_TestSignalReceiver_Write_signal->setThisExecutableNodePtr(fUML_Tests_TestSignalReceiver_Write_signal);
			fUML_Tests_TestSignalReceiver_Write_signal->setName("Write(signal)");
			fUML_Tests_TestSignalReceiver_Write_signal->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSignalReceiver_Write_signal->setStructuralFeature(fUML_Tests_TestSignalReceiver_signal);
				// InputPin object
				fUML_Tests_TestSignalReceiver_Write_signal_object->setThisElementPtr(fUML_Tests_TestSignalReceiver_Write_signal_object);
				fUML_Tests_TestSignalReceiver_Write_signal_object->setName("object");
				fUML_Tests_TestSignalReceiver_Write_signal_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSignalReceiver_Write_signal->setObject(fUML_Tests_TestSignalReceiver_Write_signal_object);
				// InputPin value
				fUML_Tests_TestSignalReceiver_Write_signal_value->setThisElementPtr(fUML_Tests_TestSignalReceiver_Write_signal_value);
				fUML_Tests_TestSignalReceiver_Write_signal_value->setName("value");
				fUML_Tests_TestSignalReceiver_Write_signal_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSignalReceiver_Write_signal_value->setType(fUML_Tests_TestSignal);
			fUML_Tests_TestSignalReceiver_Write_signal->setValue(fUML_Tests_TestSignalReceiver_Write_signal_value);
		fUML_Tests_TestSignalReceiver->addNode(fUML_Tests_TestSignalReceiver_Write_signal);
			// ActivityParameterNode Output(testSignalOut)
			fUML_Tests_TestSignalReceiver_Output_testSignalOut->setThisElementPtr(fUML_Tests_TestSignalReceiver_Output_testSignalOut);
			fUML_Tests_TestSignalReceiver_Output_testSignalOut->setName("Output(testSignalOut)");
			fUML_Tests_TestSignalReceiver_Output_testSignalOut->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSignalReceiver_Output_testSignalOut->setType(fUML_Tests_TestSignal);
			fUML_Tests_TestSignalReceiver_Output_testSignalOut->setParameter(fUML_Tests_TestSignalReceiver_testSignalOut);
		fUML_Tests_TestSignalReceiver->addNode(fUML_Tests_TestSignalReceiver_Output_testSignalOut);
			// ControlFlow ControlFlow634 from InitialNode644 to Accept(TestSignal)
			fUML_Tests_TestSignalReceiver_ControlFlow634->setThisActivityEdgePtr(fUML_Tests_TestSignalReceiver_ControlFlow634);
			fUML_Tests_TestSignalReceiver_ControlFlow634->setName("ControlFlow634");
			fUML_Tests_TestSignalReceiver_ControlFlow634->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSignalReceiver_ControlFlow634->setSource(fUML_Tests_TestSignalReceiver_InitialNode644);
			fUML_Tests_TestSignalReceiver_ControlFlow634->setTarget(fUML_Tests_TestSignalReceiver_Accept_TestSignal);
		fUML_Tests_TestSignalReceiver->addEdge(fUML_Tests_TestSignalReceiver_ControlFlow634);
			// ObjectFlow ObjectFlow645 from Fork(signal) to Output(testSignalOut)
			fUML_Tests_TestSignalReceiver_ObjectFlow645->setThisActivityEdgePtr(fUML_Tests_TestSignalReceiver_ObjectFlow645);
			fUML_Tests_TestSignalReceiver_ObjectFlow645->setName("ObjectFlow645");
			fUML_Tests_TestSignalReceiver_ObjectFlow645->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSignalReceiver_ObjectFlow645->setSource(fUML_Tests_TestSignalReceiver_Fork_signal);
			fUML_Tests_TestSignalReceiver_ObjectFlow645->setTarget(fUML_Tests_TestSignalReceiver_Output_testSignalOut);
		fUML_Tests_TestSignalReceiver->addEdge(fUML_Tests_TestSignalReceiver_ObjectFlow645);
			// ObjectFlow ObjectFlow647 from signal to Fork(signal)
			fUML_Tests_TestSignalReceiver_ObjectFlow647->setThisActivityEdgePtr(fUML_Tests_TestSignalReceiver_ObjectFlow647);
			fUML_Tests_TestSignalReceiver_ObjectFlow647->setName("ObjectFlow647");
			fUML_Tests_TestSignalReceiver_ObjectFlow647->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSignalReceiver_ObjectFlow647->setSource(fUML_Tests_TestSignalReceiver_Accept_TestSignal_signal);
			fUML_Tests_TestSignalReceiver_ObjectFlow647->setTarget(fUML_Tests_TestSignalReceiver_Fork_signal);
		fUML_Tests_TestSignalReceiver->addEdge(fUML_Tests_TestSignalReceiver_ObjectFlow647);
			// ControlFlow ControlFlow638 from Accept(TestSignal) to ReadSelf
			fUML_Tests_TestSignalReceiver_ControlFlow638->setThisActivityEdgePtr(fUML_Tests_TestSignalReceiver_ControlFlow638);
			fUML_Tests_TestSignalReceiver_ControlFlow638->setName("ControlFlow638");
			fUML_Tests_TestSignalReceiver_ControlFlow638->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSignalReceiver_ControlFlow638->setSource(fUML_Tests_TestSignalReceiver_Accept_TestSignal);
			fUML_Tests_TestSignalReceiver_ControlFlow638->setTarget(fUML_Tests_TestSignalReceiver_ReadSelf);
		fUML_Tests_TestSignalReceiver->addEdge(fUML_Tests_TestSignalReceiver_ControlFlow638);
			// ObjectFlow ObjectFlow640 from result to object
			fUML_Tests_TestSignalReceiver_ObjectFlow640->setThisActivityEdgePtr(fUML_Tests_TestSignalReceiver_ObjectFlow640);
			fUML_Tests_TestSignalReceiver_ObjectFlow640->setName("ObjectFlow640");
			fUML_Tests_TestSignalReceiver_ObjectFlow640->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSignalReceiver_ObjectFlow640->setSource(fUML_Tests_TestSignalReceiver_ReadSelf_result);
			fUML_Tests_TestSignalReceiver_ObjectFlow640->setTarget(fUML_Tests_TestSignalReceiver_Write_signal_object);
		fUML_Tests_TestSignalReceiver->addEdge(fUML_Tests_TestSignalReceiver_ObjectFlow640);
			// ObjectFlow ObjectFlow642 from Fork(signal) to value
			fUML_Tests_TestSignalReceiver_ObjectFlow642->setThisActivityEdgePtr(fUML_Tests_TestSignalReceiver_ObjectFlow642);
			fUML_Tests_TestSignalReceiver_ObjectFlow642->setName("ObjectFlow642");
			fUML_Tests_TestSignalReceiver_ObjectFlow642->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSignalReceiver_ObjectFlow642->setSource(fUML_Tests_TestSignalReceiver_Fork_signal);
			fUML_Tests_TestSignalReceiver_ObjectFlow642->setTarget(fUML_Tests_TestSignalReceiver_Write_signal_value);
		fUML_Tests_TestSignalReceiver->addEdge(fUML_Tests_TestSignalReceiver_ObjectFlow642);
	fUML_Tests->addPackagedElement(fUML_Tests_TestSignalReceiver);
		// Class ActiveClass
		fUML_Tests_ActiveClass->setThisClass_Ptr(fUML_Tests_ActiveClass);
		fUML_Tests_ActiveClass->setName("ActiveClass");
		fUML_Tests_ActiveClass->setVisibility(VisibilityKind::public_);
		
			// Property signal1
			fUML_Tests_ActiveClass_signal1->setThisElementPtr(fUML_Tests_ActiveClass_signal1);
			fUML_Tests_ActiveClass_signal1->setName("signal1");
			fUML_Tests_ActiveClass_signal1->setVisibility(VisibilityKind::private_);
			
			fUML_Tests_ActiveClass_signal1->setType(fUML_Tests_TestSignal);
		fUML_Tests_ActiveClass->addOwnedAttribute(fUML_Tests_ActiveClass_signal1);
			// Property signal2
			fUML_Tests_ActiveClass_signal2->setThisElementPtr(fUML_Tests_ActiveClass_signal2);
			fUML_Tests_ActiveClass_signal2->setName("signal2");
			fUML_Tests_ActiveClass_signal2->setVisibility(VisibilityKind::private_);
			
			fUML_Tests_ActiveClass_signal2->setType(fUML_Tests_OtherSignal);
		fUML_Tests_ActiveClass->addOwnedAttribute(fUML_Tests_ActiveClass_signal2);
		fUML_Tests_ActiveClass->setClassifierBehavior(fUML_Tests_ActiveClass_ActiveClassBehavior);
			// Activity ActiveClassBehavior
			fUML_Tests_ActiveClass_ActiveClassBehavior->setThisActivityPtr(fUML_Tests_ActiveClass_ActiveClassBehavior);
			fUML_Tests_ActiveClass_ActiveClassBehavior->setName("ActiveClassBehavior");
			fUML_Tests_ActiveClass_ActiveClassBehavior->setVisibility(VisibilityKind::public_);
				// AcceptEventAction Accept(TestSignal)
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal->setThisExecutableNodePtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal->setName("Accept(TestSignal)");
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal->setVisibility(VisibilityKind::public_);
					// OutputPin Accept(TestSignal).result
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Accept_TestSignal_result->setThisElementPtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Accept_TestSignal_result);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Accept_TestSignal_result->setName("Accept(TestSignal).result");
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Accept_TestSignal_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal->addResult(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Accept_TestSignal_result);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Trigger654->setName("Trigger654");
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Trigger654->setVisibility(VisibilityKind::public_);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Trigger654->setEvent(fUML_Tests_SignalEvent46);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal->addTrigger(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Trigger654);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addNode(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal);
				// ForkNode Fork(self)
				fUML_Tests_ActiveClass_ActiveClassBehavior_Fork_self->setThisElementPtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Fork_self);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Fork_self->setName("Fork(self)");
				fUML_Tests_ActiveClass_ActiveClassBehavior_Fork_self->setVisibility(VisibilityKind::public_);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addNode(fUML_Tests_ActiveClass_ActiveClassBehavior_Fork_self);
				// AddStructuralFeatureValueAction Write(signal1)
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1->setThisExecutableNodePtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1->setName("Write(signal1)");
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1->setVisibility(VisibilityKind::public_);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1->setStructuralFeature(fUML_Tests_ActiveClass_signal1);
					// InputPin Write(signal1).object
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_object->setThisElementPtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_object);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_object->setName("Write(signal1).object");
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_object->setVisibility(VisibilityKind::public_);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_object->setType(fUML_Tests_ActiveClass);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1->setObject(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_object);
					// InputPin Write(signal1).value
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_value->setThisElementPtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_value);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_value->setName("Write(signal1).value");
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1->setValue(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_value);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addNode(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1);
				// AddStructuralFeatureValueAction Write(signal2)
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2->setThisExecutableNodePtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2->setName("Write(signal2)");
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2->setVisibility(VisibilityKind::public_);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2->setStructuralFeature(fUML_Tests_ActiveClass_signal2);
					// InputPin Write(signal2).object
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_object->setThisElementPtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_object);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_object->setName("Write(signal2).object");
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_object->setVisibility(VisibilityKind::public_);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_object->setType(fUML_Tests_ActiveClass);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2->setObject(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_object);
					// InputPin Write(signal2).value
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_value->setThisElementPtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_value);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_value->setName("Write(signal2).value");
					fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2->setValue(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_value);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addNode(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2);
				// AcceptEventAction Accept(OtherSignal)
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal->setThisExecutableNodePtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal->setName("Accept(OtherSignal)");
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal->setVisibility(VisibilityKind::public_);
					// OutputPin Accept(OtherSignal).result
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Accept_OtherSignal_result->setThisElementPtr(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Accept_OtherSignal_result);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Accept_OtherSignal_result->setName("Accept(OtherSignal).result");
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Accept_OtherSignal_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal->addResult(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Accept_OtherSignal_result);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Trigger659->setName("Trigger659");
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Trigger659->setVisibility(VisibilityKind::public_);
					fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Trigger659->setEvent(fUML_Tests_SignalEvent1136);
				fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal->addTrigger(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Trigger659);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addNode(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal);
				// ReadSelfAction ReadSelf
				fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf->setThisExecutableNodePtr(fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf->setName("ReadSelf");
				fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf->setVisibility(VisibilityKind::public_);
					// OutputPin self
					fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf_self->setThisElementPtr(fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf_self);
					fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf_self->setName("self");
					fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf_self->setVisibility(VisibilityKind::public_);
					fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf_self->setType(fUML_Tests_ActiveClass);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf->setResult(fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf_self);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addNode(fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf);
				// ObjectFlow ObjectFlow655 from Accept(TestSignal).result to Write(signal1).value
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow655->setThisActivityEdgePtr(fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow655);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow655->setName("ObjectFlow655");
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow655->setVisibility(VisibilityKind::public_);
				
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow655->setSource(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_TestSignal_Accept_TestSignal_result);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow655->setTarget(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_value);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addEdge(fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow655);
				// ObjectFlow ObjectFlow657 from Fork(self) to Write(signal2).object
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow657->setThisActivityEdgePtr(fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow657);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow657->setName("ObjectFlow657");
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow657->setVisibility(VisibilityKind::public_);
				
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow657->setSource(fUML_Tests_ActiveClass_ActiveClassBehavior_Fork_self);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow657->setTarget(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_object);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addEdge(fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow657);
				// ObjectFlow ObjectFlow660 from self to Fork(self)
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow660->setThisActivityEdgePtr(fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow660);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow660->setName("ObjectFlow660");
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow660->setVisibility(VisibilityKind::public_);
				
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow660->setSource(fUML_Tests_ActiveClass_ActiveClassBehavior_ReadSelf_self);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow660->setTarget(fUML_Tests_ActiveClass_ActiveClassBehavior_Fork_self);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addEdge(fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow660);
				// ObjectFlow ObjectFlow662 from Accept(OtherSignal).result to Write(signal2).value
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow662->setThisActivityEdgePtr(fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow662);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow662->setName("ObjectFlow662");
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow662->setVisibility(VisibilityKind::public_);
				
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow662->setSource(fUML_Tests_ActiveClass_ActiveClassBehavior_Accept_OtherSignal_Accept_OtherSignal_result);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow662->setTarget(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal2_Write_signal2_value);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addEdge(fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow662);
				// ObjectFlow ObjectFlow664 from Fork(self) to Write(signal1).object
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow664->setThisActivityEdgePtr(fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow664);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow664->setName("ObjectFlow664");
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow664->setVisibility(VisibilityKind::public_);
				
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow664->setSource(fUML_Tests_ActiveClass_ActiveClassBehavior_Fork_self);
				fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow664->setTarget(fUML_Tests_ActiveClass_ActiveClassBehavior_Write_signal1_Write_signal1_object);
			fUML_Tests_ActiveClass_ActiveClassBehavior->addEdge(fUML_Tests_ActiveClass_ActiveClassBehavior_ObjectFlow664);
		fUML_Tests_ActiveClass->addOwnedBehavior(fUML_Tests_ActiveClass_ActiveClassBehavior);
		fUML_Tests_ActiveClass->setIsActive(true);
	fUML_Tests->addPackagedElement(fUML_Tests_ActiveClass);
		// Activity TestClassObjectDestroyer
		fUML_Tests_TestClassObjectDestroyer->setThisActivityPtr(fUML_Tests_TestClassObjectDestroyer);
		fUML_Tests_TestClassObjectDestroyer->setName("TestClassObjectDestroyer");
		fUML_Tests_TestClassObjectDestroyer->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestClassObjectDestroyer->isReentrant = false;
			// Parameter objectIn
			fUML_Tests_TestClassObjectDestroyer_objectIn->setThisElementPtr(fUML_Tests_TestClassObjectDestroyer_objectIn);
			fUML_Tests_TestClassObjectDestroyer_objectIn->setName("objectIn");
			fUML_Tests_TestClassObjectDestroyer_objectIn->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassObjectDestroyer_objectIn->setType(fUML_Tests_TestClass);
		fUML_Tests_TestClassObjectDestroyer->addOwnedParameter(fUML_Tests_TestClassObjectDestroyer_objectIn);
			// Parameter objectOut
			fUML_Tests_TestClassObjectDestroyer_objectOut->setThisElementPtr(fUML_Tests_TestClassObjectDestroyer_objectOut);
			fUML_Tests_TestClassObjectDestroyer_objectOut->setName("objectOut");
			fUML_Tests_TestClassObjectDestroyer_objectOut->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassObjectDestroyer_objectOut->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassObjectDestroyer_objectOut->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassObjectDestroyer->addOwnedParameter(fUML_Tests_TestClassObjectDestroyer_objectOut);
			// ActivityParameterNode Parameter(objectOut)
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectOut->setThisElementPtr(fUML_Tests_TestClassObjectDestroyer_Parameter_objectOut);
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectOut->setName("Parameter(objectOut)");
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectOut->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectOut->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectOut->setParameter(fUML_Tests_TestClassObjectDestroyer_objectOut);
		fUML_Tests_TestClassObjectDestroyer->addNode(fUML_Tests_TestClassObjectDestroyer_Parameter_objectOut);
			// ActivityParameterNode Parameter(objectIn)
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectIn->setThisElementPtr(fUML_Tests_TestClassObjectDestroyer_Parameter_objectIn);
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectIn->setName("Parameter(objectIn)");
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectIn->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectIn->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassObjectDestroyer_Parameter_objectIn->setParameter(fUML_Tests_TestClassObjectDestroyer_objectIn);
		fUML_Tests_TestClassObjectDestroyer->addNode(fUML_Tests_TestClassObjectDestroyer_Parameter_objectIn);
			// ForkNode Fork
			fUML_Tests_TestClassObjectDestroyer_Fork->setThisElementPtr(fUML_Tests_TestClassObjectDestroyer_Fork);
			fUML_Tests_TestClassObjectDestroyer_Fork->setName("Fork");
			fUML_Tests_TestClassObjectDestroyer_Fork->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestClassObjectDestroyer->addNode(fUML_Tests_TestClassObjectDestroyer_Fork);
			// DestroyObjectAction DestroyObject
			fUML_Tests_TestClassObjectDestroyer_DestroyObject->setThisExecutableNodePtr(fUML_Tests_TestClassObjectDestroyer_DestroyObject);
			fUML_Tests_TestClassObjectDestroyer_DestroyObject->setName("DestroyObject");
			fUML_Tests_TestClassObjectDestroyer_DestroyObject->setVisibility(VisibilityKind::public_);
				// InputPin DestroyObject.target
				fUML_Tests_TestClassObjectDestroyer_DestroyObject_DestroyObject_target->setThisElementPtr(fUML_Tests_TestClassObjectDestroyer_DestroyObject_DestroyObject_target);
				fUML_Tests_TestClassObjectDestroyer_DestroyObject_DestroyObject_target->setName("DestroyObject.target");
				fUML_Tests_TestClassObjectDestroyer_DestroyObject_DestroyObject_target->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassObjectDestroyer_DestroyObject->setTarget(fUML_Tests_TestClassObjectDestroyer_DestroyObject_DestroyObject_target);
		fUML_Tests_TestClassObjectDestroyer->addNode(fUML_Tests_TestClassObjectDestroyer_DestroyObject);
			// ObjectFlow ObjectFlow666 from Parameter(objectIn) to Fork
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow666->setThisActivityEdgePtr(fUML_Tests_TestClassObjectDestroyer_ObjectFlow666);
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow666->setName("ObjectFlow666");
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow666->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow666->setSource(fUML_Tests_TestClassObjectDestroyer_Parameter_objectIn);
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow666->setTarget(fUML_Tests_TestClassObjectDestroyer_Fork);
		fUML_Tests_TestClassObjectDestroyer->addEdge(fUML_Tests_TestClassObjectDestroyer_ObjectFlow666);
			// ObjectFlow ObjectFlow670 from Fork to DestroyObject.target
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow670->setThisActivityEdgePtr(fUML_Tests_TestClassObjectDestroyer_ObjectFlow670);
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow670->setName("ObjectFlow670");
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow670->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow670->setSource(fUML_Tests_TestClassObjectDestroyer_Fork);
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow670->setTarget(fUML_Tests_TestClassObjectDestroyer_DestroyObject_DestroyObject_target);
		fUML_Tests_TestClassObjectDestroyer->addEdge(fUML_Tests_TestClassObjectDestroyer_ObjectFlow670);
			// ObjectFlow ObjectFlow674 from Fork to Parameter(objectOut)
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow674->setThisActivityEdgePtr(fUML_Tests_TestClassObjectDestroyer_ObjectFlow674);
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow674->setName("ObjectFlow674");
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow674->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow674->setSource(fUML_Tests_TestClassObjectDestroyer_Fork);
			fUML_Tests_TestClassObjectDestroyer_ObjectFlow674->setTarget(fUML_Tests_TestClassObjectDestroyer_Parameter_objectOut);
		fUML_Tests_TestClassObjectDestroyer->addEdge(fUML_Tests_TestClassObjectDestroyer_ObjectFlow674);
	fUML_Tests->addPackagedElement(fUML_Tests_TestClassObjectDestroyer);
		// Activity ForkMergeData
		fUML_Tests_ForkMergeData->setThisActivityPtr(fUML_Tests_ForkMergeData);
		fUML_Tests_ForkMergeData->setName("ForkMergeData");
		fUML_Tests_ForkMergeData->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkMergeData->isReentrant = false;
			// Parameter output
			fUML_Tests_ForkMergeData_output->setThisElementPtr(fUML_Tests_ForkMergeData_output);
			fUML_Tests_ForkMergeData_output->setName("output");
			fUML_Tests_ForkMergeData_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_ForkMergeData_output->setUpper(-1);
			fUML_Tests_ForkMergeData_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_ForkMergeData_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_ForkMergeData->addOwnedParameter(fUML_Tests_ForkMergeData_output);
			// InitialNode InitialNode
			fUML_Tests_ForkMergeData_InitialNode->setThisElementPtr(fUML_Tests_ForkMergeData_InitialNode);
			fUML_Tests_ForkMergeData_InitialNode->setName("InitialNode");
			fUML_Tests_ForkMergeData_InitialNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkMergeData->addNode(fUML_Tests_ForkMergeData_InitialNode);
			// ForkNode ForkNode
			fUML_Tests_ForkMergeData_ForkNode->setThisElementPtr(fUML_Tests_ForkMergeData_ForkNode);
			fUML_Tests_ForkMergeData_ForkNode->setName("ForkNode");
			fUML_Tests_ForkMergeData_ForkNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkMergeData->addNode(fUML_Tests_ForkMergeData_ForkNode);
			// MergeNode MergeNode
			fUML_Tests_ForkMergeData_MergeNode->setThisElementPtr(fUML_Tests_ForkMergeData_MergeNode);
			fUML_Tests_ForkMergeData_MergeNode->setName("MergeNode");
			fUML_Tests_ForkMergeData_MergeNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkMergeData->addNode(fUML_Tests_ForkMergeData_MergeNode);
			// CallBehaviorAction Action_B
			fUML_Tests_ForkMergeData_Action_B->setThisExecutableNodePtr(fUML_Tests_ForkMergeData_Action_B);
			fUML_Tests_ForkMergeData_Action_B->setName("Action_B");
			fUML_Tests_ForkMergeData_Action_B->setVisibility(VisibilityKind::public_);
				// OutputPin Action_B.output
				fUML_Tests_ForkMergeData_Action_B_Action_B_output->setThisElementPtr(fUML_Tests_ForkMergeData_Action_B_Action_B_output);
				fUML_Tests_ForkMergeData_Action_B_Action_B_output->setName("Action_B.output");
				fUML_Tests_ForkMergeData_Action_B_Action_B_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_ForkMergeData_Action_B_Action_B_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_ForkMergeData_Action_B->addResult(fUML_Tests_ForkMergeData_Action_B_Action_B_output);
			fUML_Tests_ForkMergeData_Action_B->setBehavior(fUML_Tests_Copier);
				// InputPin Action_B.input
				fUML_Tests_ForkMergeData_Action_B_Action_B_input->setThisElementPtr(fUML_Tests_ForkMergeData_Action_B_Action_B_input);
				fUML_Tests_ForkMergeData_Action_B_Action_B_input->setName("Action_B.input");
				fUML_Tests_ForkMergeData_Action_B_Action_B_input->setVisibility(VisibilityKind::public_);
				fUML_Tests_ForkMergeData_Action_B_Action_B_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_ForkMergeData_Action_B->addArgument(fUML_Tests_ForkMergeData_Action_B_Action_B_input);
		fUML_Tests_ForkMergeData->addNode(fUML_Tests_ForkMergeData_Action_B);
			// ActivityParameterNode Parameter(output)
			fUML_Tests_ForkMergeData_Parameter_output->setThisElementPtr(fUML_Tests_ForkMergeData_Parameter_output);
			fUML_Tests_ForkMergeData_Parameter_output->setName("Parameter(output)");
			fUML_Tests_ForkMergeData_Parameter_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_ForkMergeData_Parameter_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_ForkMergeData_Parameter_output->setParameter(fUML_Tests_ForkMergeData_output);
		fUML_Tests_ForkMergeData->addNode(fUML_Tests_ForkMergeData_Parameter_output);
			// ValueSpecificationAction Action_A
			fUML_Tests_ForkMergeData_Action_A->setThisExecutableNodePtr(fUML_Tests_ForkMergeData_Action_A);
			fUML_Tests_ForkMergeData_Action_A->setName("Action_A");
			fUML_Tests_ForkMergeData_Action_A->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger686
				fUML_Tests_ForkMergeData_Action_A_LiteralInteger686->setThisElementPtr(fUML_Tests_ForkMergeData_Action_A_LiteralInteger686);
				fUML_Tests_ForkMergeData_Action_A_LiteralInteger686->setName("LiteralInteger686");
				fUML_Tests_ForkMergeData_Action_A_LiteralInteger686->setVisibility(VisibilityKind::public_);
				fUML_Tests_ForkMergeData_Action_A_LiteralInteger686->setValue(0);
			fUML_Tests_ForkMergeData_Action_A->setValue(fUML_Tests_ForkMergeData_Action_A_LiteralInteger686);
				// OutputPin Action_A.result
				fUML_Tests_ForkMergeData_Action_A_Action_A_result->setThisElementPtr(fUML_Tests_ForkMergeData_Action_A_Action_A_result);
				fUML_Tests_ForkMergeData_Action_A_Action_A_result->setName("Action_A.result");
				fUML_Tests_ForkMergeData_Action_A_Action_A_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_ForkMergeData_Action_A_Action_A_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_ForkMergeData_Action_A->setResult(fUML_Tests_ForkMergeData_Action_A_Action_A_result);
		fUML_Tests_ForkMergeData->addNode(fUML_Tests_ForkMergeData_Action_A);
			// ObjectFlow ObjectFlow676 from Action_B.output to Parameter(output)
			fUML_Tests_ForkMergeData_ObjectFlow676->setThisActivityEdgePtr(fUML_Tests_ForkMergeData_ObjectFlow676);
			fUML_Tests_ForkMergeData_ObjectFlow676->setName("ObjectFlow676");
			fUML_Tests_ForkMergeData_ObjectFlow676->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMergeData_ObjectFlow676->setSource(fUML_Tests_ForkMergeData_Action_B_Action_B_output);
			fUML_Tests_ForkMergeData_ObjectFlow676->setTarget(fUML_Tests_ForkMergeData_Parameter_output);
		fUML_Tests_ForkMergeData->addEdge(fUML_Tests_ForkMergeData_ObjectFlow676);
			// ObjectFlow ObjectFlow689 from ForkNode to MergeNode
			fUML_Tests_ForkMergeData_ObjectFlow689->setThisActivityEdgePtr(fUML_Tests_ForkMergeData_ObjectFlow689);
			fUML_Tests_ForkMergeData_ObjectFlow689->setName("ObjectFlow689");
			fUML_Tests_ForkMergeData_ObjectFlow689->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMergeData_ObjectFlow689->setSource(fUML_Tests_ForkMergeData_ForkNode);
			fUML_Tests_ForkMergeData_ObjectFlow689->setTarget(fUML_Tests_ForkMergeData_MergeNode);
		fUML_Tests_ForkMergeData->addEdge(fUML_Tests_ForkMergeData_ObjectFlow689);
			// ControlFlow ControlFlow678 from InitialNode to Action_A
			fUML_Tests_ForkMergeData_ControlFlow678->setThisActivityEdgePtr(fUML_Tests_ForkMergeData_ControlFlow678);
			fUML_Tests_ForkMergeData_ControlFlow678->setName("ControlFlow678");
			fUML_Tests_ForkMergeData_ControlFlow678->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMergeData_ControlFlow678->setSource(fUML_Tests_ForkMergeData_InitialNode);
			fUML_Tests_ForkMergeData_ControlFlow678->setTarget(fUML_Tests_ForkMergeData_Action_A);
		fUML_Tests_ForkMergeData->addEdge(fUML_Tests_ForkMergeData_ControlFlow678);
			// ObjectFlow ObjectFlow680 from MergeNode to Action_B.input
			fUML_Tests_ForkMergeData_ObjectFlow680->setThisActivityEdgePtr(fUML_Tests_ForkMergeData_ObjectFlow680);
			fUML_Tests_ForkMergeData_ObjectFlow680->setName("ObjectFlow680");
			fUML_Tests_ForkMergeData_ObjectFlow680->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMergeData_ObjectFlow680->setSource(fUML_Tests_ForkMergeData_MergeNode);
			fUML_Tests_ForkMergeData_ObjectFlow680->setTarget(fUML_Tests_ForkMergeData_Action_B_Action_B_input);
		fUML_Tests_ForkMergeData->addEdge(fUML_Tests_ForkMergeData_ObjectFlow680);
			// ObjectFlow ObjectFlow693 from Action_A.result to ForkNode
			fUML_Tests_ForkMergeData_ObjectFlow693->setThisActivityEdgePtr(fUML_Tests_ForkMergeData_ObjectFlow693);
			fUML_Tests_ForkMergeData_ObjectFlow693->setName("ObjectFlow693");
			fUML_Tests_ForkMergeData_ObjectFlow693->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMergeData_ObjectFlow693->setSource(fUML_Tests_ForkMergeData_Action_A_Action_A_result);
			fUML_Tests_ForkMergeData_ObjectFlow693->setTarget(fUML_Tests_ForkMergeData_ForkNode);
		fUML_Tests_ForkMergeData->addEdge(fUML_Tests_ForkMergeData_ObjectFlow693);
			// ObjectFlow ObjectFlow695 from ForkNode to MergeNode
			fUML_Tests_ForkMergeData_ObjectFlow695->setThisActivityEdgePtr(fUML_Tests_ForkMergeData_ObjectFlow695);
			fUML_Tests_ForkMergeData_ObjectFlow695->setName("ObjectFlow695");
			fUML_Tests_ForkMergeData_ObjectFlow695->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMergeData_ObjectFlow695->setSource(fUML_Tests_ForkMergeData_ForkNode);
			fUML_Tests_ForkMergeData_ObjectFlow695->setTarget(fUML_Tests_ForkMergeData_MergeNode);
		fUML_Tests_ForkMergeData->addEdge(fUML_Tests_ForkMergeData_ObjectFlow695);
	fUML_Tests->addPackagedElement(fUML_Tests_ForkMergeData);
		// Activity DecisionJoin
		fUML_Tests_DecisionJoin->setThisActivityPtr(fUML_Tests_DecisionJoin);
		fUML_Tests_DecisionJoin->setName("DecisionJoin");
		fUML_Tests_DecisionJoin->setVisibility(VisibilityKind::public_);
		fUML_Tests_DecisionJoin->isReentrant = false;
			// Parameter output
			fUML_Tests_DecisionJoin_output->setThisElementPtr(fUML_Tests_DecisionJoin_output);
			fUML_Tests_DecisionJoin_output->setName("output");
			fUML_Tests_DecisionJoin_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_DecisionJoin_output->setIsOrdered(true);
			fUML_Tests_DecisionJoin_output->setUpper(-1);
			fUML_Tests_DecisionJoin_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_DecisionJoin_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_DecisionJoin->addOwnedParameter(fUML_Tests_DecisionJoin_output);
			// ValueSpecificationAction Value(1)
			fUML_Tests_DecisionJoin_Value_1->setThisExecutableNodePtr(fUML_Tests_DecisionJoin_Value_1);
			fUML_Tests_DecisionJoin_Value_1->setName("Value(1)");
			fUML_Tests_DecisionJoin_Value_1->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger699
				fUML_Tests_DecisionJoin_Value_1_LiteralInteger699->setThisElementPtr(fUML_Tests_DecisionJoin_Value_1_LiteralInteger699);
				fUML_Tests_DecisionJoin_Value_1_LiteralInteger699->setName("LiteralInteger699");
				fUML_Tests_DecisionJoin_Value_1_LiteralInteger699->setVisibility(VisibilityKind::public_);
				fUML_Tests_DecisionJoin_Value_1_LiteralInteger699->setValue(1);
			fUML_Tests_DecisionJoin_Value_1->setValue(fUML_Tests_DecisionJoin_Value_1_LiteralInteger699);
				// OutputPin OutputPin700
				fUML_Tests_DecisionJoin_Value_1_OutputPin700->setThisElementPtr(fUML_Tests_DecisionJoin_Value_1_OutputPin700);
				fUML_Tests_DecisionJoin_Value_1_OutputPin700->setName("OutputPin700");
				fUML_Tests_DecisionJoin_Value_1_OutputPin700->setVisibility(VisibilityKind::public_);
				fUML_Tests_DecisionJoin_Value_1_OutputPin700->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_DecisionJoin_Value_1->setResult(fUML_Tests_DecisionJoin_Value_1_OutputPin700);
		fUML_Tests_DecisionJoin->addNode(fUML_Tests_DecisionJoin_Value_1);
			// DecisionNode DecisionNode
			fUML_Tests_DecisionJoin_DecisionNode->setThisElementPtr(fUML_Tests_DecisionJoin_DecisionNode);
			fUML_Tests_DecisionJoin_DecisionNode->setName("DecisionNode");
			fUML_Tests_DecisionJoin_DecisionNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_DecisionJoin->addNode(fUML_Tests_DecisionJoin_DecisionNode);
			// CallBehaviorAction Action_B
			fUML_Tests_DecisionJoin_Action_B->setThisExecutableNodePtr(fUML_Tests_DecisionJoin_Action_B);
			fUML_Tests_DecisionJoin_Action_B->setName("Action_B");
			fUML_Tests_DecisionJoin_Action_B->setVisibility(VisibilityKind::public_);
				// OutputPin Action_C.output
				fUML_Tests_DecisionJoin_Action_B_Action_C_output->setThisElementPtr(fUML_Tests_DecisionJoin_Action_B_Action_C_output);
				fUML_Tests_DecisionJoin_Action_B_Action_C_output->setName("Action_C.output");
				fUML_Tests_DecisionJoin_Action_B_Action_C_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_DecisionJoin_Action_B_Action_C_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_DecisionJoin_Action_B_Action_C_output->setUpper(2);
				fUML_Tests_DecisionJoin_Action_B_Action_C_output->setLower(2);
			fUML_Tests_DecisionJoin_Action_B->addResult(fUML_Tests_DecisionJoin_Action_B_Action_C_output);
			fUML_Tests_DecisionJoin_Action_B->setBehavior(fUML_Tests_Copier);
				// InputPin Action_B.input
				fUML_Tests_DecisionJoin_Action_B_Action_B_input->setThisElementPtr(fUML_Tests_DecisionJoin_Action_B_Action_B_input);
				fUML_Tests_DecisionJoin_Action_B_Action_B_input->setName("Action_B.input");
				fUML_Tests_DecisionJoin_Action_B_Action_B_input->setVisibility(VisibilityKind::public_);
				fUML_Tests_DecisionJoin_Action_B_Action_B_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_DecisionJoin_Action_B_Action_B_input->setUpper(2);
				fUML_Tests_DecisionJoin_Action_B_Action_B_input->setLower(2);
			fUML_Tests_DecisionJoin_Action_B->addArgument(fUML_Tests_DecisionJoin_Action_B_Action_B_input);
		fUML_Tests_DecisionJoin->addNode(fUML_Tests_DecisionJoin_Action_B);
			// CallBehaviorAction Action_A
			fUML_Tests_DecisionJoin_Action_A->setThisExecutableNodePtr(fUML_Tests_DecisionJoin_Action_A);
			fUML_Tests_DecisionJoin_Action_A->setName("Action_A");
			fUML_Tests_DecisionJoin_Action_A->setVisibility(VisibilityKind::public_);
				// OutputPin Action_A.output
				fUML_Tests_DecisionJoin_Action_A_Action_A_output->setThisElementPtr(fUML_Tests_DecisionJoin_Action_A_Action_A_output);
				fUML_Tests_DecisionJoin_Action_A_Action_A_output->setName("Action_A.output");
				fUML_Tests_DecisionJoin_Action_A_Action_A_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_DecisionJoin_Action_A_Action_A_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_DecisionJoin_Action_A->addResult(fUML_Tests_DecisionJoin_Action_A_Action_A_output);
			fUML_Tests_DecisionJoin_Action_A->setBehavior(fUML_Tests_Copier);
				// InputPin Action_A.input
				fUML_Tests_DecisionJoin_Action_A_Action_A_input->setThisElementPtr(fUML_Tests_DecisionJoin_Action_A_Action_A_input);
				fUML_Tests_DecisionJoin_Action_A_Action_A_input->setName("Action_A.input");
				fUML_Tests_DecisionJoin_Action_A_Action_A_input->setVisibility(VisibilityKind::public_);
				fUML_Tests_DecisionJoin_Action_A_Action_A_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_DecisionJoin_Action_A->addArgument(fUML_Tests_DecisionJoin_Action_A_Action_A_input);
		fUML_Tests_DecisionJoin->addNode(fUML_Tests_DecisionJoin_Action_A);
			// JoinNode JoinNode
			fUML_Tests_DecisionJoin_JoinNode->setThisElementPtr(fUML_Tests_DecisionJoin_JoinNode);
			fUML_Tests_DecisionJoin_JoinNode->setName("JoinNode");
			fUML_Tests_DecisionJoin_JoinNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_DecisionJoin->addNode(fUML_Tests_DecisionJoin_JoinNode);
			// ValueSpecificationAction Value(0)
			fUML_Tests_DecisionJoin_Value_0->setThisExecutableNodePtr(fUML_Tests_DecisionJoin_Value_0);
			fUML_Tests_DecisionJoin_Value_0->setName("Value(0)");
			fUML_Tests_DecisionJoin_Value_0->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger710
				fUML_Tests_DecisionJoin_Value_0_LiteralInteger710->setThisElementPtr(fUML_Tests_DecisionJoin_Value_0_LiteralInteger710);
				fUML_Tests_DecisionJoin_Value_0_LiteralInteger710->setName("LiteralInteger710");
				fUML_Tests_DecisionJoin_Value_0_LiteralInteger710->setVisibility(VisibilityKind::public_);
				fUML_Tests_DecisionJoin_Value_0_LiteralInteger710->setValue(0);
			fUML_Tests_DecisionJoin_Value_0->setValue(fUML_Tests_DecisionJoin_Value_0_LiteralInteger710);
				// OutputPin OutputPin709
				fUML_Tests_DecisionJoin_Value_0_OutputPin709->setThisElementPtr(fUML_Tests_DecisionJoin_Value_0_OutputPin709);
				fUML_Tests_DecisionJoin_Value_0_OutputPin709->setName("OutputPin709");
				fUML_Tests_DecisionJoin_Value_0_OutputPin709->setVisibility(VisibilityKind::public_);
				fUML_Tests_DecisionJoin_Value_0_OutputPin709->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_DecisionJoin_Value_0->setResult(fUML_Tests_DecisionJoin_Value_0_OutputPin709);
		fUML_Tests_DecisionJoin->addNode(fUML_Tests_DecisionJoin_Value_0);
			// ActivityParameterNode OutputNode
			fUML_Tests_DecisionJoin_OutputNode->setThisElementPtr(fUML_Tests_DecisionJoin_OutputNode);
			fUML_Tests_DecisionJoin_OutputNode->setName("OutputNode");
			fUML_Tests_DecisionJoin_OutputNode->setVisibility(VisibilityKind::public_);
			fUML_Tests_DecisionJoin_OutputNode->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_DecisionJoin_OutputNode->setParameter(fUML_Tests_DecisionJoin_output);
		fUML_Tests_DecisionJoin->addNode(fUML_Tests_DecisionJoin_OutputNode);
			// ObjectFlow ObjectFlow713 from DecisionNode to JoinNode
			fUML_Tests_DecisionJoin_ObjectFlow713->setThisActivityEdgePtr(fUML_Tests_DecisionJoin_ObjectFlow713);
			fUML_Tests_DecisionJoin_ObjectFlow713->setName("ObjectFlow713");
			fUML_Tests_DecisionJoin_ObjectFlow713->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_DecisionJoin_ObjectFlow713->setSource(fUML_Tests_DecisionJoin_DecisionNode);
			fUML_Tests_DecisionJoin_ObjectFlow713->setTarget(fUML_Tests_DecisionJoin_JoinNode);
				// LiteralInteger LiteralInteger714
				fUML_Tests_DecisionJoin_ObjectFlow713_LiteralInteger714->setThisElementPtr(fUML_Tests_DecisionJoin_ObjectFlow713_LiteralInteger714);
				fUML_Tests_DecisionJoin_ObjectFlow713_LiteralInteger714->setName("LiteralInteger714");
				fUML_Tests_DecisionJoin_ObjectFlow713_LiteralInteger714->setVisibility(VisibilityKind::public_);
				fUML_Tests_DecisionJoin_ObjectFlow713_LiteralInteger714->setValue(0);
			fUML_Tests_DecisionJoin_ObjectFlow713->setGuard(fUML_Tests_DecisionJoin_ObjectFlow713_LiteralInteger714);
		fUML_Tests_DecisionJoin->addEdge(fUML_Tests_DecisionJoin_ObjectFlow713);
			// ObjectFlow ObjectFlow716 from Action_A.output to DecisionNode
			fUML_Tests_DecisionJoin_ObjectFlow716->setThisActivityEdgePtr(fUML_Tests_DecisionJoin_ObjectFlow716);
			fUML_Tests_DecisionJoin_ObjectFlow716->setName("ObjectFlow716");
			fUML_Tests_DecisionJoin_ObjectFlow716->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_DecisionJoin_ObjectFlow716->setSource(fUML_Tests_DecisionJoin_Action_A_Action_A_output);
			fUML_Tests_DecisionJoin_ObjectFlow716->setTarget(fUML_Tests_DecisionJoin_DecisionNode);
		fUML_Tests_DecisionJoin->addEdge(fUML_Tests_DecisionJoin_ObjectFlow716);
			// ControlFlow ControlFlow697 from Value(0) to Value(1)
			fUML_Tests_DecisionJoin_ControlFlow697->setThisActivityEdgePtr(fUML_Tests_DecisionJoin_ControlFlow697);
			fUML_Tests_DecisionJoin_ControlFlow697->setName("ControlFlow697");
			fUML_Tests_DecisionJoin_ControlFlow697->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_DecisionJoin_ControlFlow697->setSource(fUML_Tests_DecisionJoin_Value_0);
			fUML_Tests_DecisionJoin_ControlFlow697->setTarget(fUML_Tests_DecisionJoin_Value_1);
		fUML_Tests_DecisionJoin->addEdge(fUML_Tests_DecisionJoin_ControlFlow697);
			// ObjectFlow ObjectFlow718 from OutputPin709 to Action_A.input
			fUML_Tests_DecisionJoin_ObjectFlow718->setThisActivityEdgePtr(fUML_Tests_DecisionJoin_ObjectFlow718);
			fUML_Tests_DecisionJoin_ObjectFlow718->setName("ObjectFlow718");
			fUML_Tests_DecisionJoin_ObjectFlow718->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_DecisionJoin_ObjectFlow718->setSource(fUML_Tests_DecisionJoin_Value_0_OutputPin709);
			fUML_Tests_DecisionJoin_ObjectFlow718->setTarget(fUML_Tests_DecisionJoin_Action_A_Action_A_input);
		fUML_Tests_DecisionJoin->addEdge(fUML_Tests_DecisionJoin_ObjectFlow718);
			// ObjectFlow ObjectFlow701 from Action_C.output to OutputNode
			fUML_Tests_DecisionJoin_ObjectFlow701->setThisActivityEdgePtr(fUML_Tests_DecisionJoin_ObjectFlow701);
			fUML_Tests_DecisionJoin_ObjectFlow701->setName("ObjectFlow701");
			fUML_Tests_DecisionJoin_ObjectFlow701->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_DecisionJoin_ObjectFlow701->setSource(fUML_Tests_DecisionJoin_Action_B_Action_C_output);
			fUML_Tests_DecisionJoin_ObjectFlow701->setTarget(fUML_Tests_DecisionJoin_OutputNode);
		fUML_Tests_DecisionJoin->addEdge(fUML_Tests_DecisionJoin_ObjectFlow701);
			// ObjectFlow ObjectFlow720 from DecisionNode to JoinNode
			fUML_Tests_DecisionJoin_ObjectFlow720->setThisActivityEdgePtr(fUML_Tests_DecisionJoin_ObjectFlow720);
			fUML_Tests_DecisionJoin_ObjectFlow720->setName("ObjectFlow720");
			fUML_Tests_DecisionJoin_ObjectFlow720->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_DecisionJoin_ObjectFlow720->setSource(fUML_Tests_DecisionJoin_DecisionNode);
			fUML_Tests_DecisionJoin_ObjectFlow720->setTarget(fUML_Tests_DecisionJoin_JoinNode);
				// LiteralInteger LiteralInteger722
				fUML_Tests_DecisionJoin_ObjectFlow720_LiteralInteger722->setThisElementPtr(fUML_Tests_DecisionJoin_ObjectFlow720_LiteralInteger722);
				fUML_Tests_DecisionJoin_ObjectFlow720_LiteralInteger722->setName("LiteralInteger722");
				fUML_Tests_DecisionJoin_ObjectFlow720_LiteralInteger722->setVisibility(VisibilityKind::public_);
				fUML_Tests_DecisionJoin_ObjectFlow720_LiteralInteger722->setValue(1);
			fUML_Tests_DecisionJoin_ObjectFlow720->setGuard(fUML_Tests_DecisionJoin_ObjectFlow720_LiteralInteger722);
		fUML_Tests_DecisionJoin->addEdge(fUML_Tests_DecisionJoin_ObjectFlow720);
			// ObjectFlow ObjectFlow727 from OutputPin700 to Action_A.input
			fUML_Tests_DecisionJoin_ObjectFlow727->setThisActivityEdgePtr(fUML_Tests_DecisionJoin_ObjectFlow727);
			fUML_Tests_DecisionJoin_ObjectFlow727->setName("ObjectFlow727");
			fUML_Tests_DecisionJoin_ObjectFlow727->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_DecisionJoin_ObjectFlow727->setSource(fUML_Tests_DecisionJoin_Value_1_OutputPin700);
			fUML_Tests_DecisionJoin_ObjectFlow727->setTarget(fUML_Tests_DecisionJoin_Action_A_Action_A_input);
		fUML_Tests_DecisionJoin->addEdge(fUML_Tests_DecisionJoin_ObjectFlow727);
			// ObjectFlow ObjectFlow711 from JoinNode to Action_B.input
			fUML_Tests_DecisionJoin_ObjectFlow711->setThisActivityEdgePtr(fUML_Tests_DecisionJoin_ObjectFlow711);
			fUML_Tests_DecisionJoin_ObjectFlow711->setName("ObjectFlow711");
			fUML_Tests_DecisionJoin_ObjectFlow711->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_DecisionJoin_ObjectFlow711->setSource(fUML_Tests_DecisionJoin_JoinNode);
			fUML_Tests_DecisionJoin_ObjectFlow711->setTarget(fUML_Tests_DecisionJoin_Action_B_Action_B_input);
		fUML_Tests_DecisionJoin->addEdge(fUML_Tests_DecisionJoin_ObjectFlow711);
	fUML_Tests->addPackagedElement(fUML_Tests_DecisionJoin);
		// Activity TestSimpleActivities
		fUML_Tests_TestSimpleActivities->setThisActivityPtr(fUML_Tests_TestSimpleActivities);
		fUML_Tests_TestSimpleActivities->setName("TestSimpleActivities");
		fUML_Tests_TestSimpleActivities->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestSimpleActivities->isReentrant = false;
			// Parameter Copier.output
			fUML_Tests_TestSimpleActivities_Copier_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_Copier_output);
			fUML_Tests_TestSimpleActivities_Copier_output->setName("Copier.output");
			fUML_Tests_TestSimpleActivities_Copier_output->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_Copier_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Copier_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestSimpleActivities->addOwnedParameter(fUML_Tests_TestSimpleActivities_Copier_output);
			// Parameter CopierCaller.output
			fUML_Tests_TestSimpleActivities_CopierCaller_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_CopierCaller_output);
			fUML_Tests_TestSimpleActivities_CopierCaller_output->setName("CopierCaller.output");
			fUML_Tests_TestSimpleActivities_CopierCaller_output->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_CopierCaller_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_CopierCaller_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestSimpleActivities->addOwnedParameter(fUML_Tests_TestSimpleActivities_CopierCaller_output);
			// Parameter SimpleDecision_0.output_0
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0->setThisElementPtr(fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0);
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0->setName("SimpleDecision_0.output_0");
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0->setLower(0);
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestSimpleActivities->addOwnedParameter(fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0);
			// Parameter SimpleDecision_0.output_1
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1->setThisElementPtr(fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1);
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1->setName("SimpleDecision_0.output_1");
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1->setLower(0);
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestSimpleActivities->addOwnedParameter(fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1);
			// Parameter SimpleDecision_1.output_0
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0->setThisElementPtr(fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0->setName("SimpleDecision_1.output_0");
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0->setLower(0);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestSimpleActivities->addOwnedParameter(fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0);
			// Parameter SimpleDecision_1.output_1
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1->setThisElementPtr(fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1->setName("SimpleDecision_1.output_1");
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1->setLower(0);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestSimpleActivities->addOwnedParameter(fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1);
			// Parameter DecisionJoin.output
			fUML_Tests_TestSimpleActivities_DecisionJoin_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_DecisionJoin_output);
			fUML_Tests_TestSimpleActivities_DecisionJoin_output->setName("DecisionJoin.output");
			fUML_Tests_TestSimpleActivities_DecisionJoin_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_DecisionJoin_output->setIsOrdered(true);
			fUML_Tests_TestSimpleActivities_DecisionJoin_output->setUpper(-1);
			fUML_Tests_TestSimpleActivities_DecisionJoin_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_DecisionJoin_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestSimpleActivities->addOwnedParameter(fUML_Tests_TestSimpleActivities_DecisionJoin_output);
			// Parameter ForkMerge
			fUML_Tests_TestSimpleActivities_ForkMerge->setThisElementPtr(fUML_Tests_TestSimpleActivities_ForkMerge);
			fUML_Tests_TestSimpleActivities_ForkMerge->setName("ForkMerge");
			fUML_Tests_TestSimpleActivities_ForkMerge->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_ForkMerge->setUpper(-1);
			fUML_Tests_TestSimpleActivities_ForkMerge->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_ForkMerge->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestSimpleActivities->addOwnedParameter(fUML_Tests_TestSimpleActivities_ForkMerge);
			// Parameter ForkMergeData.output
			fUML_Tests_TestSimpleActivities_ForkMergeData_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_ForkMergeData_output);
			fUML_Tests_TestSimpleActivities_ForkMergeData_output->setName("ForkMergeData.output");
			fUML_Tests_TestSimpleActivities_ForkMergeData_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_ForkMergeData_output->setUpper(-1);
			fUML_Tests_TestSimpleActivities_ForkMergeData_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_ForkMergeData_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestSimpleActivities->addOwnedParameter(fUML_Tests_TestSimpleActivities_ForkMergeData_output);
			// CallBehaviorAction Call(SimpleDecision_1)
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1->setThisExecutableNodePtr(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1->setName("Call(SimpleDecision_1)");
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1->setVisibility(VisibilityKind::public_);
				// OutputPin SimpleDecision_1.output_0
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_0->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_0);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_0->setName("SimpleDecision_1.output_0");
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_0->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_0->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1->addResult(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_0);
				// OutputPin SimpleDecision_1.output_1
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_1->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_1);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_1->setName("SimpleDecision_1.output_1");
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_1->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1->addResult(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_1);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1->setBehavior(fUML_Tests_SimpleDecision);
				// InputPin SimpleDecision_1.testValue
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_testValue->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_testValue);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_testValue->setName("SimpleDecision_1.testValue");
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_testValue->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_testValue->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1->addArgument(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_testValue);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1);
			// ValueSpecificationAction Value(0)
			fUML_Tests_TestSimpleActivities_Value_0->setThisExecutableNodePtr(fUML_Tests_TestSimpleActivities_Value_0);
			fUML_Tests_TestSimpleActivities_Value_0->setName("Value(0)");
			fUML_Tests_TestSimpleActivities_Value_0->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger782
				fUML_Tests_TestSimpleActivities_Value_0_LiteralInteger782->setThisElementPtr(fUML_Tests_TestSimpleActivities_Value_0_LiteralInteger782);
				fUML_Tests_TestSimpleActivities_Value_0_LiteralInteger782->setName("LiteralInteger782");
				fUML_Tests_TestSimpleActivities_Value_0_LiteralInteger782->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Value_0_LiteralInteger782->setValue(0);
			fUML_Tests_TestSimpleActivities_Value_0->setValue(fUML_Tests_TestSimpleActivities_Value_0_LiteralInteger782);
				// OutputPin Value(0).result
				fUML_Tests_TestSimpleActivities_Value_0_Value_0_result->setThisElementPtr(fUML_Tests_TestSimpleActivities_Value_0_Value_0_result);
				fUML_Tests_TestSimpleActivities_Value_0_Value_0_result->setName("Value(0).result");
				fUML_Tests_TestSimpleActivities_Value_0_Value_0_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Value_0_Value_0_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Value_0->setResult(fUML_Tests_TestSimpleActivities_Value_0_Value_0_result);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Value_0);
			// ActivityParameterNode Parameter(DecisionJoin.output)
			fUML_Tests_TestSimpleActivities_Parameter_DecisionJoin_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_Parameter_DecisionJoin_output);
			fUML_Tests_TestSimpleActivities_Parameter_DecisionJoin_output->setName("Parameter(DecisionJoin.output)");
			fUML_Tests_TestSimpleActivities_Parameter_DecisionJoin_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_Parameter_DecisionJoin_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Parameter_DecisionJoin_output->setParameter(fUML_Tests_TestSimpleActivities_DecisionJoin_output);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Parameter_DecisionJoin_output);
			// ActivityParameterNode Parameter(SimpleDecision_0.output_0)
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_0->setThisElementPtr(fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_0);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_0->setName("Parameter(SimpleDecision_0.output_0)");
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_0->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_0->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_0->setParameter(fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_0);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_0);
			// CallBehaviorAction Call(ForkMergeData)
			fUML_Tests_TestSimpleActivities_Call_ForkMergeData->setThisExecutableNodePtr(fUML_Tests_TestSimpleActivities_Call_ForkMergeData);
			fUML_Tests_TestSimpleActivities_Call_ForkMergeData->setName("Call(ForkMergeData)");
			fUML_Tests_TestSimpleActivities_Call_ForkMergeData->setVisibility(VisibilityKind::public_);
				// OutputPin ForkMergeData.output
				fUML_Tests_TestSimpleActivities_Call_ForkMergeData_ForkMergeData_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_ForkMergeData_ForkMergeData_output);
				fUML_Tests_TestSimpleActivities_Call_ForkMergeData_ForkMergeData_output->setName("ForkMergeData.output");
				fUML_Tests_TestSimpleActivities_Call_ForkMergeData_ForkMergeData_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_ForkMergeData_ForkMergeData_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_ForkMergeData->addResult(fUML_Tests_TestSimpleActivities_Call_ForkMergeData_ForkMergeData_output);
			fUML_Tests_TestSimpleActivities_Call_ForkMergeData->setBehavior(fUML_Tests_ForkMergeData);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Call_ForkMergeData);
			// ActivityParameterNode Parameter(SimpleDecision_1.output_0)
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_1_output_0->setThisElementPtr(fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_1_output_0);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_1_output_0->setName("Parameter(SimpleDecision_1.output_0)");
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_1_output_0->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_1_output_0->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_1_output_0->setParameter(fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_0);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_1_output_0);
			// ForkNode Fork_0
			fUML_Tests_TestSimpleActivities_Fork_0->setThisElementPtr(fUML_Tests_TestSimpleActivities_Fork_0);
			fUML_Tests_TestSimpleActivities_Fork_0->setName("Fork_0");
			fUML_Tests_TestSimpleActivities_Fork_0->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Fork_0);
			// CallBehaviorAction Call(ForkJoin)
			fUML_Tests_TestSimpleActivities_Call_ForkJoin->setThisExecutableNodePtr(fUML_Tests_TestSimpleActivities_Call_ForkJoin);
			fUML_Tests_TestSimpleActivities_Call_ForkJoin->setName("Call(ForkJoin)");
			fUML_Tests_TestSimpleActivities_Call_ForkJoin->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_Call_ForkJoin->setBehavior(fUML_Tests_ForkJoin);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Call_ForkJoin);
			// ActivityParameterNode Parameter(Copier.output)
			fUML_Tests_TestSimpleActivities_Parameter_Copier_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_Parameter_Copier_output);
			fUML_Tests_TestSimpleActivities_Parameter_Copier_output->setName("Parameter(Copier.output)");
			fUML_Tests_TestSimpleActivities_Parameter_Copier_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_Parameter_Copier_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Parameter_Copier_output->setParameter(fUML_Tests_TestSimpleActivities_Copier_output);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Parameter_Copier_output);
			// ActivityParameterNode Parameter(ForkMerge)
			fUML_Tests_TestSimpleActivities_Parameter_ForkMerge->setThisElementPtr(fUML_Tests_TestSimpleActivities_Parameter_ForkMerge);
			fUML_Tests_TestSimpleActivities_Parameter_ForkMerge->setName("Parameter(ForkMerge)");
			fUML_Tests_TestSimpleActivities_Parameter_ForkMerge->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_Parameter_ForkMerge->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Parameter_ForkMerge->setParameter(fUML_Tests_TestSimpleActivities_ForkMerge);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Parameter_ForkMerge);
			// CallBehaviorAction Call(ForkMerge)
			fUML_Tests_TestSimpleActivities_Call_ForkMerge->setThisExecutableNodePtr(fUML_Tests_TestSimpleActivities_Call_ForkMerge);
			fUML_Tests_TestSimpleActivities_Call_ForkMerge->setName("Call(ForkMerge)");
			fUML_Tests_TestSimpleActivities_Call_ForkMerge->setVisibility(VisibilityKind::public_);
				// OutputPin ForkMerge.output
				fUML_Tests_TestSimpleActivities_Call_ForkMerge_ForkMerge_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_ForkMerge_ForkMerge_output);
				fUML_Tests_TestSimpleActivities_Call_ForkMerge_ForkMerge_output->setName("ForkMerge.output");
				fUML_Tests_TestSimpleActivities_Call_ForkMerge_ForkMerge_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_ForkMerge_ForkMerge_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_ForkMerge->addResult(fUML_Tests_TestSimpleActivities_Call_ForkMerge_ForkMerge_output);
			fUML_Tests_TestSimpleActivities_Call_ForkMerge->setBehavior(fUML_Tests_ForkMerge);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Call_ForkMerge);
			// CallBehaviorAction Call(Copier)
			fUML_Tests_TestSimpleActivities_Call_Copier->setThisExecutableNodePtr(fUML_Tests_TestSimpleActivities_Call_Copier);
			fUML_Tests_TestSimpleActivities_Call_Copier->setName("Call(Copier)");
			fUML_Tests_TestSimpleActivities_Call_Copier->setVisibility(VisibilityKind::public_);
				// OutputPin Copier.output
				fUML_Tests_TestSimpleActivities_Call_Copier_Copier_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_Copier_Copier_output);
				fUML_Tests_TestSimpleActivities_Call_Copier_Copier_output->setName("Copier.output");
				fUML_Tests_TestSimpleActivities_Call_Copier_Copier_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_Copier_Copier_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_Copier->addResult(fUML_Tests_TestSimpleActivities_Call_Copier_Copier_output);
			fUML_Tests_TestSimpleActivities_Call_Copier->setBehavior(fUML_Tests_Copier);
				// InputPin Copier.input
				fUML_Tests_TestSimpleActivities_Call_Copier_Copier_input->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_Copier_Copier_input);
				fUML_Tests_TestSimpleActivities_Call_Copier_Copier_input->setName("Copier.input");
				fUML_Tests_TestSimpleActivities_Call_Copier_Copier_input->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_Copier_Copier_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_Copier->addArgument(fUML_Tests_TestSimpleActivities_Call_Copier_Copier_input);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Call_Copier);
			// CallBehaviorAction Call(CopierCaller)
			fUML_Tests_TestSimpleActivities_Call_CopierCaller->setThisExecutableNodePtr(fUML_Tests_TestSimpleActivities_Call_CopierCaller);
			fUML_Tests_TestSimpleActivities_Call_CopierCaller->setName("Call(CopierCaller)");
			fUML_Tests_TestSimpleActivities_Call_CopierCaller->setVisibility(VisibilityKind::public_);
				// OutputPin CopierCaller.output
				fUML_Tests_TestSimpleActivities_Call_CopierCaller_CopierCaller_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_CopierCaller_CopierCaller_output);
				fUML_Tests_TestSimpleActivities_Call_CopierCaller_CopierCaller_output->setName("CopierCaller.output");
				fUML_Tests_TestSimpleActivities_Call_CopierCaller_CopierCaller_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_CopierCaller_CopierCaller_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_CopierCaller->addResult(fUML_Tests_TestSimpleActivities_Call_CopierCaller_CopierCaller_output);
			fUML_Tests_TestSimpleActivities_Call_CopierCaller->setBehavior(fUML_Tests_CopierCaller);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Call_CopierCaller);
			// CallBehaviorAction Call(DecisionJoin)
			fUML_Tests_TestSimpleActivities_Call_DecisionJoin->setThisExecutableNodePtr(fUML_Tests_TestSimpleActivities_Call_DecisionJoin);
			fUML_Tests_TestSimpleActivities_Call_DecisionJoin->setName("Call(DecisionJoin)");
			fUML_Tests_TestSimpleActivities_Call_DecisionJoin->setVisibility(VisibilityKind::public_);
				// OutputPin DecisionJoin.output
				fUML_Tests_TestSimpleActivities_Call_DecisionJoin_DecisionJoin_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_DecisionJoin_DecisionJoin_output);
				fUML_Tests_TestSimpleActivities_Call_DecisionJoin_DecisionJoin_output->setName("DecisionJoin.output");
				fUML_Tests_TestSimpleActivities_Call_DecisionJoin_DecisionJoin_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_DecisionJoin_DecisionJoin_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_DecisionJoin->addResult(fUML_Tests_TestSimpleActivities_Call_DecisionJoin_DecisionJoin_output);
			fUML_Tests_TestSimpleActivities_Call_DecisionJoin->setBehavior(fUML_Tests_DecisionJoin);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Call_DecisionJoin);
			// CallBehaviorAction Call(SimpleDecision_0)
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0->setThisExecutableNodePtr(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0->setName("Call(SimpleDecision_0)");
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0->setVisibility(VisibilityKind::public_);
				// OutputPin SimpleDecision_0.output_0
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_output_0->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_output_0);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_output_0->setName("SimpleDecision_0.output_0");
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_output_0->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_output_0->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0->addResult(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_output_0);
				// OutputPin SimpleDcision_0.output_1
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDcision_0_output_1->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDcision_0_output_1);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDcision_0_output_1->setName("SimpleDcision_0.output_1");
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDcision_0_output_1->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDcision_0_output_1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0->addResult(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDcision_0_output_1);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0->setBehavior(fUML_Tests_SimpleDecision);
				// InputPin SimpleDecision_0.testValue
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_testValue->setThisElementPtr(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_testValue);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_testValue->setName("SimpleDecision_0.testValue");
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_testValue->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_testValue->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0->addArgument(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_testValue);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0);
			// ActivityParameterNode Parameter(ForkMergeData.output)
			fUML_Tests_TestSimpleActivities_Parameter_ForkMergeData_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_Parameter_ForkMergeData_output);
			fUML_Tests_TestSimpleActivities_Parameter_ForkMergeData_output->setName("Parameter(ForkMergeData.output)");
			fUML_Tests_TestSimpleActivities_Parameter_ForkMergeData_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_Parameter_ForkMergeData_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Parameter_ForkMergeData_output->setParameter(fUML_Tests_TestSimpleActivities_ForkMergeData_output);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Parameter_ForkMergeData_output);
			// ValueSpecificationAction Value(1)
			fUML_Tests_TestSimpleActivities_Value_1->setThisExecutableNodePtr(fUML_Tests_TestSimpleActivities_Value_1);
			fUML_Tests_TestSimpleActivities_Value_1->setName("Value(1)");
			fUML_Tests_TestSimpleActivities_Value_1->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger741
				fUML_Tests_TestSimpleActivities_Value_1_LiteralInteger741->setThisElementPtr(fUML_Tests_TestSimpleActivities_Value_1_LiteralInteger741);
				fUML_Tests_TestSimpleActivities_Value_1_LiteralInteger741->setName("LiteralInteger741");
				fUML_Tests_TestSimpleActivities_Value_1_LiteralInteger741->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Value_1_LiteralInteger741->setValue(1);
			fUML_Tests_TestSimpleActivities_Value_1->setValue(fUML_Tests_TestSimpleActivities_Value_1_LiteralInteger741);
				// OutputPin Value(1).result
				fUML_Tests_TestSimpleActivities_Value_1_Value_1_result->setThisElementPtr(fUML_Tests_TestSimpleActivities_Value_1_Value_1_result);
				fUML_Tests_TestSimpleActivities_Value_1_Value_1_result->setName("Value(1).result");
				fUML_Tests_TestSimpleActivities_Value_1_Value_1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSimpleActivities_Value_1_Value_1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Value_1->setResult(fUML_Tests_TestSimpleActivities_Value_1_Value_1_result);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Value_1);
			// ActivityParameterNode Parameter(CopierCaller.output)
			fUML_Tests_TestSimpleActivities_Parameter_CopierCaller_output->setThisElementPtr(fUML_Tests_TestSimpleActivities_Parameter_CopierCaller_output);
			fUML_Tests_TestSimpleActivities_Parameter_CopierCaller_output->setName("Parameter(CopierCaller.output)");
			fUML_Tests_TestSimpleActivities_Parameter_CopierCaller_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_Parameter_CopierCaller_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Parameter_CopierCaller_output->setParameter(fUML_Tests_TestSimpleActivities_CopierCaller_output);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Parameter_CopierCaller_output);
			// ActivityParameterNode SimpleDecision_1.output_1Node
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1Node->setThisElementPtr(fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1Node);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1Node->setName("SimpleDecision_1.output_1Node");
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1Node->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1Node->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1Node->setParameter(fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1Node);
			// ActivityParameterNode Parameter(SimpleDecision_0.output_1)
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_1->setThisElementPtr(fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_1);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_1->setName("Parameter(SimpleDecision_0.output_1)");
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_1->setParameter(fUML_Tests_TestSimpleActivities_SimpleDecision_0_output_1);
		fUML_Tests_TestSimpleActivities->addNode(fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_1);
			// ControlFlow ControlFlow762 from Call(ForkJoin) to Call(DecisionJoin)
			fUML_Tests_TestSimpleActivities_ControlFlow762->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ControlFlow762);
			fUML_Tests_TestSimpleActivities_ControlFlow762->setName("ControlFlow762");
			fUML_Tests_TestSimpleActivities_ControlFlow762->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ControlFlow762->setSource(fUML_Tests_TestSimpleActivities_Call_ForkJoin);
			fUML_Tests_TestSimpleActivities_ControlFlow762->setTarget(fUML_Tests_TestSimpleActivities_Call_DecisionJoin);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ControlFlow762);
			// ControlFlow ControlFlow744 from Call(ForkMerge) to Call(ForkMergeData)
			fUML_Tests_TestSimpleActivities_ControlFlow744->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ControlFlow744);
			fUML_Tests_TestSimpleActivities_ControlFlow744->setName("ControlFlow744");
			fUML_Tests_TestSimpleActivities_ControlFlow744->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ControlFlow744->setSource(fUML_Tests_TestSimpleActivities_Call_ForkMerge);
			fUML_Tests_TestSimpleActivities_ControlFlow744->setTarget(fUML_Tests_TestSimpleActivities_Call_ForkMergeData);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ControlFlow744);
			// ObjectFlow ObjectFlow764 from Value(1).result to SimpleDecision_1.testValue
			fUML_Tests_TestSimpleActivities_ObjectFlow764->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow764);
			fUML_Tests_TestSimpleActivities_ObjectFlow764->setName("ObjectFlow764");
			fUML_Tests_TestSimpleActivities_ObjectFlow764->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow764->setSource(fUML_Tests_TestSimpleActivities_Value_1_Value_1_result);
			fUML_Tests_TestSimpleActivities_ObjectFlow764->setTarget(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_testValue);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow764);
			// ObjectFlow ObjectFlow729 from ForkMerge.output to Parameter(ForkMerge)
			fUML_Tests_TestSimpleActivities_ObjectFlow729->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow729);
			fUML_Tests_TestSimpleActivities_ObjectFlow729->setName("ObjectFlow729");
			fUML_Tests_TestSimpleActivities_ObjectFlow729->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow729->setSource(fUML_Tests_TestSimpleActivities_Call_ForkMerge_ForkMerge_output);
			fUML_Tests_TestSimpleActivities_ObjectFlow729->setTarget(fUML_Tests_TestSimpleActivities_Parameter_ForkMerge);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow729);
			// ControlFlow ControlFlow748 from Call(SimpleDecision_0) to Call(SimpleDecision_1)
			fUML_Tests_TestSimpleActivities_ControlFlow748->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ControlFlow748);
			fUML_Tests_TestSimpleActivities_ControlFlow748->setName("ControlFlow748");
			fUML_Tests_TestSimpleActivities_ControlFlow748->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ControlFlow748->setSource(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0);
			fUML_Tests_TestSimpleActivities_ControlFlow748->setTarget(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ControlFlow748);
			// ObjectFlow ObjectFlow766 from SimpleDecision_0.output_0 to Parameter(SimpleDecision_0.output_0)
			fUML_Tests_TestSimpleActivities_ObjectFlow766->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow766);
			fUML_Tests_TestSimpleActivities_ObjectFlow766->setName("ObjectFlow766");
			fUML_Tests_TestSimpleActivities_ObjectFlow766->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow766->setSource(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_output_0);
			fUML_Tests_TestSimpleActivities_ObjectFlow766->setTarget(fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_0);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow766);
			// ObjectFlow ObjectFlow783 from DecisionJoin.output to Parameter(DecisionJoin.output)
			fUML_Tests_TestSimpleActivities_ObjectFlow783->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow783);
			fUML_Tests_TestSimpleActivities_ObjectFlow783->setName("ObjectFlow783");
			fUML_Tests_TestSimpleActivities_ObjectFlow783->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow783->setSource(fUML_Tests_TestSimpleActivities_Call_DecisionJoin_DecisionJoin_output);
			fUML_Tests_TestSimpleActivities_ObjectFlow783->setTarget(fUML_Tests_TestSimpleActivities_Parameter_DecisionJoin_output);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow783);
			// ObjectFlow ObjectFlow785 from Fork_0 to Copier.input
			fUML_Tests_TestSimpleActivities_ObjectFlow785->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow785);
			fUML_Tests_TestSimpleActivities_ObjectFlow785->setName("ObjectFlow785");
			fUML_Tests_TestSimpleActivities_ObjectFlow785->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow785->setSource(fUML_Tests_TestSimpleActivities_Fork_0);
			fUML_Tests_TestSimpleActivities_ObjectFlow785->setTarget(fUML_Tests_TestSimpleActivities_Call_Copier_Copier_input);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow785);
			// ObjectFlow ObjectFlow750 from SimpleDcision_0.output_1 to Parameter(SimpleDecision_0.output_1)
			fUML_Tests_TestSimpleActivities_ObjectFlow750->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow750);
			fUML_Tests_TestSimpleActivities_ObjectFlow750->setName("ObjectFlow750");
			fUML_Tests_TestSimpleActivities_ObjectFlow750->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow750->setSource(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDcision_0_output_1);
			fUML_Tests_TestSimpleActivities_ObjectFlow750->setTarget(fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_0_output_1);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow750);
			// ControlFlow ControlFlow772 from Call(Copier) to Call(CopierCaller)
			fUML_Tests_TestSimpleActivities_ControlFlow772->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ControlFlow772);
			fUML_Tests_TestSimpleActivities_ControlFlow772->setName("ControlFlow772");
			fUML_Tests_TestSimpleActivities_ControlFlow772->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ControlFlow772->setSource(fUML_Tests_TestSimpleActivities_Call_Copier);
			fUML_Tests_TestSimpleActivities_ControlFlow772->setTarget(fUML_Tests_TestSimpleActivities_Call_CopierCaller);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ControlFlow772);
			// ControlFlow ControlFlow752 from Call(SimpleDecision_1) to Call(ForkJoin)
			fUML_Tests_TestSimpleActivities_ControlFlow752->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ControlFlow752);
			fUML_Tests_TestSimpleActivities_ControlFlow752->setName("ControlFlow752");
			fUML_Tests_TestSimpleActivities_ControlFlow752->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ControlFlow752->setSource(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1);
			fUML_Tests_TestSimpleActivities_ControlFlow752->setTarget(fUML_Tests_TestSimpleActivities_Call_ForkJoin);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ControlFlow752);
			// ObjectFlow ObjectFlow754 from Value(0).result to Fork_0
			fUML_Tests_TestSimpleActivities_ObjectFlow754->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow754);
			fUML_Tests_TestSimpleActivities_ObjectFlow754->setName("ObjectFlow754");
			fUML_Tests_TestSimpleActivities_ObjectFlow754->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow754->setSource(fUML_Tests_TestSimpleActivities_Value_0_Value_0_result);
			fUML_Tests_TestSimpleActivities_ObjectFlow754->setTarget(fUML_Tests_TestSimpleActivities_Fork_0);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow754);
			// ObjectFlow ObjectFlow733 from CopierCaller.output to Parameter(CopierCaller.output)
			fUML_Tests_TestSimpleActivities_ObjectFlow733->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow733);
			fUML_Tests_TestSimpleActivities_ObjectFlow733->setName("ObjectFlow733");
			fUML_Tests_TestSimpleActivities_ObjectFlow733->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow733->setSource(fUML_Tests_TestSimpleActivities_Call_CopierCaller_CopierCaller_output);
			fUML_Tests_TestSimpleActivities_ObjectFlow733->setTarget(fUML_Tests_TestSimpleActivities_Parameter_CopierCaller_output);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow733);
			// ObjectFlow ObjectFlow756 from Fork_0 to SimpleDecision_0.testValue
			fUML_Tests_TestSimpleActivities_ObjectFlow756->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow756);
			fUML_Tests_TestSimpleActivities_ObjectFlow756->setName("ObjectFlow756");
			fUML_Tests_TestSimpleActivities_ObjectFlow756->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow756->setSource(fUML_Tests_TestSimpleActivities_Fork_0);
			fUML_Tests_TestSimpleActivities_ObjectFlow756->setTarget(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0_SimpleDecision_0_testValue);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow756);
			// ObjectFlow ObjectFlow735 from SimpleDecision_1.output_0 to Parameter(SimpleDecision_1.output_0)
			fUML_Tests_TestSimpleActivities_ObjectFlow735->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow735);
			fUML_Tests_TestSimpleActivities_ObjectFlow735->setName("ObjectFlow735");
			fUML_Tests_TestSimpleActivities_ObjectFlow735->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow735->setSource(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_0);
			fUML_Tests_TestSimpleActivities_ObjectFlow735->setTarget(fUML_Tests_TestSimpleActivities_Parameter_SimpleDecision_1_output_0);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow735);
			// ObjectFlow ObjectFlow737 from SimpleDecision_1.output_1 to SimpleDecision_1.output_1Node
			fUML_Tests_TestSimpleActivities_ObjectFlow737->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow737);
			fUML_Tests_TestSimpleActivities_ObjectFlow737->setName("ObjectFlow737");
			fUML_Tests_TestSimpleActivities_ObjectFlow737->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow737->setSource(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_1_SimpleDecision_1_output_1);
			fUML_Tests_TestSimpleActivities_ObjectFlow737->setTarget(fUML_Tests_TestSimpleActivities_SimpleDecision_1_output_1Node);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow737);
			// ControlFlow ControlFlow776 from Call(DecisionJoin) to Call(ForkMerge)
			fUML_Tests_TestSimpleActivities_ControlFlow776->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ControlFlow776);
			fUML_Tests_TestSimpleActivities_ControlFlow776->setName("ControlFlow776");
			fUML_Tests_TestSimpleActivities_ControlFlow776->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ControlFlow776->setSource(fUML_Tests_TestSimpleActivities_Call_DecisionJoin);
			fUML_Tests_TestSimpleActivities_ControlFlow776->setTarget(fUML_Tests_TestSimpleActivities_Call_ForkMerge);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ControlFlow776);
			// ObjectFlow ObjectFlow760 from ForkMergeData.output to Parameter(ForkMergeData.output)
			fUML_Tests_TestSimpleActivities_ObjectFlow760->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow760);
			fUML_Tests_TestSimpleActivities_ObjectFlow760->setName("ObjectFlow760");
			fUML_Tests_TestSimpleActivities_ObjectFlow760->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow760->setSource(fUML_Tests_TestSimpleActivities_Call_ForkMergeData_ForkMergeData_output);
			fUML_Tests_TestSimpleActivities_ObjectFlow760->setTarget(fUML_Tests_TestSimpleActivities_Parameter_ForkMergeData_output);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow760);
			// ControlFlow ControlFlow778 from Call(CopierCaller) to Call(SimpleDecision_0)
			fUML_Tests_TestSimpleActivities_ControlFlow778->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ControlFlow778);
			fUML_Tests_TestSimpleActivities_ControlFlow778->setName("ControlFlow778");
			fUML_Tests_TestSimpleActivities_ControlFlow778->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ControlFlow778->setSource(fUML_Tests_TestSimpleActivities_Call_CopierCaller);
			fUML_Tests_TestSimpleActivities_ControlFlow778->setTarget(fUML_Tests_TestSimpleActivities_Call_SimpleDecision_0);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ControlFlow778);
			// ObjectFlow ObjectFlow742 from Copier.output to Parameter(Copier.output)
			fUML_Tests_TestSimpleActivities_ObjectFlow742->setThisActivityEdgePtr(fUML_Tests_TestSimpleActivities_ObjectFlow742);
			fUML_Tests_TestSimpleActivities_ObjectFlow742->setName("ObjectFlow742");
			fUML_Tests_TestSimpleActivities_ObjectFlow742->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSimpleActivities_ObjectFlow742->setSource(fUML_Tests_TestSimpleActivities_Call_Copier_Copier_output);
			fUML_Tests_TestSimpleActivities_ObjectFlow742->setTarget(fUML_Tests_TestSimpleActivities_Parameter_Copier_output);
		fUML_Tests_TestSimpleActivities->addEdge(fUML_Tests_TestSimpleActivities_ObjectFlow742);
	fUML_Tests->addPackagedElement(fUML_Tests_TestSimpleActivities);
		// Activity CopierCaller
		fUML_Tests_CopierCaller->setThisActivityPtr(fUML_Tests_CopierCaller);
		fUML_Tests_CopierCaller->setName("CopierCaller");
		fUML_Tests_CopierCaller->setVisibility(VisibilityKind::public_);
		fUML_Tests_CopierCaller->isReentrant = false;
			// Parameter output
			fUML_Tests_CopierCaller_output->setThisElementPtr(fUML_Tests_CopierCaller_output);
			fUML_Tests_CopierCaller_output->setName("output");
			fUML_Tests_CopierCaller_output->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_CopierCaller_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_CopierCaller_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_CopierCaller->addOwnedParameter(fUML_Tests_CopierCaller_output);
			// CallBehaviorAction Call(Copier)
			fUML_Tests_CopierCaller_Call_Copier->setThisExecutableNodePtr(fUML_Tests_CopierCaller_Call_Copier);
			fUML_Tests_CopierCaller_Call_Copier->setName("Call(Copier)");
			fUML_Tests_CopierCaller_Call_Copier->setVisibility(VisibilityKind::public_);
				// OutputPin Copier.output
				fUML_Tests_CopierCaller_Call_Copier_Copier_output->setThisElementPtr(fUML_Tests_CopierCaller_Call_Copier_Copier_output);
				fUML_Tests_CopierCaller_Call_Copier_Copier_output->setName("Copier.output");
				fUML_Tests_CopierCaller_Call_Copier_Copier_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_CopierCaller_Call_Copier_Copier_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_CopierCaller_Call_Copier->addResult(fUML_Tests_CopierCaller_Call_Copier_Copier_output);
			fUML_Tests_CopierCaller_Call_Copier->setBehavior(fUML_Tests_Copier);
				// InputPin Copier.input
				fUML_Tests_CopierCaller_Call_Copier_Copier_input->setThisElementPtr(fUML_Tests_CopierCaller_Call_Copier_Copier_input);
				fUML_Tests_CopierCaller_Call_Copier_Copier_input->setName("Copier.input");
				fUML_Tests_CopierCaller_Call_Copier_Copier_input->setVisibility(VisibilityKind::public_);
				fUML_Tests_CopierCaller_Call_Copier_Copier_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_CopierCaller_Call_Copier->addArgument(fUML_Tests_CopierCaller_Call_Copier_Copier_input);
		fUML_Tests_CopierCaller->addNode(fUML_Tests_CopierCaller_Call_Copier);
			// ActivityParameterNode Parameter(output)
			fUML_Tests_CopierCaller_Parameter_output->setThisElementPtr(fUML_Tests_CopierCaller_Parameter_output);
			fUML_Tests_CopierCaller_Parameter_output->setName("Parameter(output)");
			fUML_Tests_CopierCaller_Parameter_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_CopierCaller_Parameter_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_CopierCaller_Parameter_output->setParameter(fUML_Tests_CopierCaller_output);
		fUML_Tests_CopierCaller->addNode(fUML_Tests_CopierCaller_Parameter_output);
			// ValueSpecificationAction Value(888)
			fUML_Tests_CopierCaller_Value_888->setThisExecutableNodePtr(fUML_Tests_CopierCaller_Value_888);
			fUML_Tests_CopierCaller_Value_888->setName("Value(888)");
			fUML_Tests_CopierCaller_Value_888->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger803
				fUML_Tests_CopierCaller_Value_888_LiteralInteger803->setThisElementPtr(fUML_Tests_CopierCaller_Value_888_LiteralInteger803);
				fUML_Tests_CopierCaller_Value_888_LiteralInteger803->setName("LiteralInteger803");
				fUML_Tests_CopierCaller_Value_888_LiteralInteger803->setVisibility(VisibilityKind::public_);
				fUML_Tests_CopierCaller_Value_888_LiteralInteger803->setValue(888);
			fUML_Tests_CopierCaller_Value_888->setValue(fUML_Tests_CopierCaller_Value_888_LiteralInteger803);
				// OutputPin Value(0).result
				fUML_Tests_CopierCaller_Value_888_Value_0_result->setThisElementPtr(fUML_Tests_CopierCaller_Value_888_Value_0_result);
				fUML_Tests_CopierCaller_Value_888_Value_0_result->setName("Value(0).result");
				fUML_Tests_CopierCaller_Value_888_Value_0_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_CopierCaller_Value_888_Value_0_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_CopierCaller_Value_888->setResult(fUML_Tests_CopierCaller_Value_888_Value_0_result);
		fUML_Tests_CopierCaller->addNode(fUML_Tests_CopierCaller_Value_888);
			// ObjectFlow ObjectFlow793 from Copier.output to Parameter(output)
			fUML_Tests_CopierCaller_ObjectFlow793->setThisActivityEdgePtr(fUML_Tests_CopierCaller_ObjectFlow793);
			fUML_Tests_CopierCaller_ObjectFlow793->setName("ObjectFlow793");
			fUML_Tests_CopierCaller_ObjectFlow793->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_CopierCaller_ObjectFlow793->setSource(fUML_Tests_CopierCaller_Call_Copier_Copier_output);
			fUML_Tests_CopierCaller_ObjectFlow793->setTarget(fUML_Tests_CopierCaller_Parameter_output);
		fUML_Tests_CopierCaller->addEdge(fUML_Tests_CopierCaller_ObjectFlow793);
			// ObjectFlow ObjectFlow797 from Value(0).result to Copier.input
			fUML_Tests_CopierCaller_ObjectFlow797->setThisActivityEdgePtr(fUML_Tests_CopierCaller_ObjectFlow797);
			fUML_Tests_CopierCaller_ObjectFlow797->setName("ObjectFlow797");
			fUML_Tests_CopierCaller_ObjectFlow797->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_CopierCaller_ObjectFlow797->setSource(fUML_Tests_CopierCaller_Value_888_Value_0_result);
			fUML_Tests_CopierCaller_ObjectFlow797->setTarget(fUML_Tests_CopierCaller_Call_Copier_Copier_input);
		fUML_Tests_CopierCaller->addEdge(fUML_Tests_CopierCaller_ObjectFlow797);
	fUML_Tests->addPackagedElement(fUML_Tests_CopierCaller);
		// Activity NodeEnabler
		fUML_Tests_NodeEnabler->setThisActivityPtr(fUML_Tests_NodeEnabler);
		fUML_Tests_NodeEnabler->setName("NodeEnabler");
		fUML_Tests_NodeEnabler->setVisibility(VisibilityKind::public_);
			// Parameter input
			fUML_Tests_NodeEnabler_input->setThisElementPtr(fUML_Tests_NodeEnabler_input);
			fUML_Tests_NodeEnabler_input->setName("input");
			fUML_Tests_NodeEnabler_input->setVisibility(VisibilityKind::public_);
			fUML_Tests_NodeEnabler_input->setLower(0);
			fUML_Tests_NodeEnabler_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
		fUML_Tests_NodeEnabler->addOwnedParameter(fUML_Tests_NodeEnabler_input);
			// Parameter output
			fUML_Tests_NodeEnabler_output->setThisElementPtr(fUML_Tests_NodeEnabler_output);
			fUML_Tests_NodeEnabler_output->setName("output");
			fUML_Tests_NodeEnabler_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_NodeEnabler_output->setLower(0);
			fUML_Tests_NodeEnabler_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_NodeEnabler_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_NodeEnabler->addOwnedParameter(fUML_Tests_NodeEnabler_output);
			// ActivityParameterNode Output(output)
			fUML_Tests_NodeEnabler_Output_output->setThisElementPtr(fUML_Tests_NodeEnabler_Output_output);
			fUML_Tests_NodeEnabler_Output_output->setName("Output(output)");
			fUML_Tests_NodeEnabler_Output_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_NodeEnabler_Output_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_NodeEnabler_Output_output->setParameter(fUML_Tests_NodeEnabler_output);
		fUML_Tests_NodeEnabler->addNode(fUML_Tests_NodeEnabler_Output_output);
			// ActivityFinalNode FinalNode
			fUML_Tests_NodeEnabler_FinalNode->setThisElementPtr(fUML_Tests_NodeEnabler_FinalNode);
			fUML_Tests_NodeEnabler_FinalNode->setName("FinalNode");
			fUML_Tests_NodeEnabler_FinalNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_NodeEnabler->addNode(fUML_Tests_NodeEnabler_FinalNode);
			// ActivityParameterNode Input(input)
			fUML_Tests_NodeEnabler_Input_input->setThisElementPtr(fUML_Tests_NodeEnabler_Input_input);
			fUML_Tests_NodeEnabler_Input_input->setName("Input(input)");
			fUML_Tests_NodeEnabler_Input_input->setVisibility(VisibilityKind::public_);
			fUML_Tests_NodeEnabler_Input_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_NodeEnabler_Input_input->setParameter(fUML_Tests_NodeEnabler_input);
		fUML_Tests_NodeEnabler->addNode(fUML_Tests_NodeEnabler_Input_input);
			// Initialization is currently unimplemented for metaclass StructuredActivityNode
		fUML_Tests_NodeEnabler->addNode(fUML_Tests_NodeEnabler_StructuredNode);
			// ControlFlow ControlFlow804 from StructuredNode to FinalNode
			fUML_Tests_NodeEnabler_ControlFlow804->setThisActivityEdgePtr(fUML_Tests_NodeEnabler_ControlFlow804);
			fUML_Tests_NodeEnabler_ControlFlow804->setName("ControlFlow804");
			fUML_Tests_NodeEnabler_ControlFlow804->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_NodeEnabler_ControlFlow804->setSource(fUML_Tests_NodeEnabler_StructuredNode);
			fUML_Tests_NodeEnabler_ControlFlow804->setTarget(fUML_Tests_NodeEnabler_FinalNode);
		fUML_Tests_NodeEnabler->addEdge(fUML_Tests_NodeEnabler_ControlFlow804);
			// ObjectFlow ObjectFlow806 from Call(Copier).output to Output(output)
			fUML_Tests_NodeEnabler_ObjectFlow806->setThisActivityEdgePtr(fUML_Tests_NodeEnabler_ObjectFlow806);
			fUML_Tests_NodeEnabler_ObjectFlow806->setName("ObjectFlow806");
			fUML_Tests_NodeEnabler_ObjectFlow806->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_NodeEnabler_ObjectFlow806->setSource(fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_output);
			fUML_Tests_NodeEnabler_ObjectFlow806->setTarget(fUML_Tests_NodeEnabler_Output_output);
		fUML_Tests_NodeEnabler->addEdge(fUML_Tests_NodeEnabler_ObjectFlow806);
			// ObjectFlow ObjectFlow808 from Input(input) to Call(Copier).input
			fUML_Tests_NodeEnabler_ObjectFlow808->setThisActivityEdgePtr(fUML_Tests_NodeEnabler_ObjectFlow808);
			fUML_Tests_NodeEnabler_ObjectFlow808->setName("ObjectFlow808");
			fUML_Tests_NodeEnabler_ObjectFlow808->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_NodeEnabler_ObjectFlow808->setSource(fUML_Tests_NodeEnabler_Input_input);
			fUML_Tests_NodeEnabler_ObjectFlow808->setTarget(fUML_Tests_NodeEnabler_StructuredNode_Call_Copier_Call_Copier_input);
		fUML_Tests_NodeEnabler->addEdge(fUML_Tests_NodeEnabler_ObjectFlow808);
			// Initialization is currently unimplemented for metaclass StructuredActivityNode
		fUML_Tests_NodeEnabler->addStructuredNode(fUML_Tests_NodeEnabler_StructuredNode);
			// Initialization is currently unimplemented for metaclass StructuredActivityNode
		fUML_Tests_NodeEnabler->addStructuredNode(fUML_Tests_NodeEnabler_StructuredNode);
	fUML_Tests->addPackagedElement(fUML_Tests_NodeEnabler);
		// Activity TestClassExtentReader
		fUML_Tests_TestClassExtentReader->setThisActivityPtr(fUML_Tests_TestClassExtentReader);
		fUML_Tests_TestClassExtentReader->setName("TestClassExtentReader");
		fUML_Tests_TestClassExtentReader->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestClassExtentReader->isReentrant = false;
			// Parameter object
			fUML_Tests_TestClassExtentReader_object->setThisElementPtr(fUML_Tests_TestClassExtentReader_object);
			fUML_Tests_TestClassExtentReader_object->setName("object");
			fUML_Tests_TestClassExtentReader_object->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassExtentReader_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassExtentReader_object->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassExtentReader->addOwnedParameter(fUML_Tests_TestClassExtentReader_object);
			// Parameter extent
			fUML_Tests_TestClassExtentReader_extent->setThisElementPtr(fUML_Tests_TestClassExtentReader_extent);
			fUML_Tests_TestClassExtentReader_extent->setName("extent");
			fUML_Tests_TestClassExtentReader_extent->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassExtentReader_extent->setUpper(-1);
			fUML_Tests_TestClassExtentReader_extent->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassExtentReader_extent->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassExtentReader->addOwnedParameter(fUML_Tests_TestClassExtentReader_extent);
			// ActivityParameterNode Param(extent)
			fUML_Tests_TestClassExtentReader_Param_extent->setThisElementPtr(fUML_Tests_TestClassExtentReader_Param_extent);
			fUML_Tests_TestClassExtentReader_Param_extent->setName("Param(extent)");
			fUML_Tests_TestClassExtentReader_Param_extent->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassExtentReader_Param_extent->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassExtentReader_Param_extent->setParameter(fUML_Tests_TestClassExtentReader_extent);
		fUML_Tests_TestClassExtentReader->addNode(fUML_Tests_TestClassExtentReader_Param_extent);
			// CreateObjectAction Create(TestClass)
			fUML_Tests_TestClassExtentReader_Create_TestClass->setThisExecutableNodePtr(fUML_Tests_TestClassExtentReader_Create_TestClass);
			fUML_Tests_TestClassExtentReader_Create_TestClass->setName("Create(TestClass)");
			fUML_Tests_TestClassExtentReader_Create_TestClass->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassExtentReader_Create_TestClass->setClassifier(fUML_Tests_TestClass);
				// OutputPin Create.result
				fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result->setThisElementPtr(fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result);
				fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result->setName("Create.result");
				fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassExtentReader_Create_TestClass->setResult(fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result);
		fUML_Tests_TestClassExtentReader->addNode(fUML_Tests_TestClassExtentReader_Create_TestClass);
			// ActivityParameterNode Param(object)
			fUML_Tests_TestClassExtentReader_Param_object->setThisElementPtr(fUML_Tests_TestClassExtentReader_Param_object);
			fUML_Tests_TestClassExtentReader_Param_object->setName("Param(object)");
			fUML_Tests_TestClassExtentReader_Param_object->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassExtentReader_Param_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassExtentReader_Param_object->setParameter(fUML_Tests_TestClassExtentReader_object);
		fUML_Tests_TestClassExtentReader->addNode(fUML_Tests_TestClassExtentReader_Param_object);
			// ReadExtentAction ReadExtent(TestClass)
			fUML_Tests_TestClassExtentReader_ReadExtent_TestClass->setThisExecutableNodePtr(fUML_Tests_TestClassExtentReader_ReadExtent_TestClass);
			fUML_Tests_TestClassExtentReader_ReadExtent_TestClass->setName("ReadExtent(TestClass)");
			fUML_Tests_TestClassExtentReader_ReadExtent_TestClass->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassExtentReader_ReadExtent_TestClass->setClassifier(fUML_Tests_TestClass);
				// OutputPin ReadExtent.result
				fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result->setThisElementPtr(fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result);
				fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result->setName("ReadExtent.result");
				fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result->setType(fUML_Tests_TestClass);
				fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result->setUpper(-1);
			fUML_Tests_TestClassExtentReader_ReadExtent_TestClass->setResult(fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result);
		fUML_Tests_TestClassExtentReader->addNode(fUML_Tests_TestClassExtentReader_ReadExtent_TestClass);
			// ControlFlow ControlFlow818 from Create(TestClass) to ReadExtent(TestClass)
			fUML_Tests_TestClassExtentReader_ControlFlow818->setThisActivityEdgePtr(fUML_Tests_TestClassExtentReader_ControlFlow818);
			fUML_Tests_TestClassExtentReader_ControlFlow818->setName("ControlFlow818");
			fUML_Tests_TestClassExtentReader_ControlFlow818->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassExtentReader_ControlFlow818->setSource(fUML_Tests_TestClassExtentReader_Create_TestClass);
			fUML_Tests_TestClassExtentReader_ControlFlow818->setTarget(fUML_Tests_TestClassExtentReader_ReadExtent_TestClass);
		fUML_Tests_TestClassExtentReader->addEdge(fUML_Tests_TestClassExtentReader_ControlFlow818);
			// ObjectFlow ObjectFlow824 from ReadExtent.result to Param(extent)
			fUML_Tests_TestClassExtentReader_ObjectFlow824->setThisActivityEdgePtr(fUML_Tests_TestClassExtentReader_ObjectFlow824);
			fUML_Tests_TestClassExtentReader_ObjectFlow824->setName("ObjectFlow824");
			fUML_Tests_TestClassExtentReader_ObjectFlow824->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassExtentReader_ObjectFlow824->setSource(fUML_Tests_TestClassExtentReader_ReadExtent_TestClass_ReadExtent_result);
			fUML_Tests_TestClassExtentReader_ObjectFlow824->setTarget(fUML_Tests_TestClassExtentReader_Param_extent);
		fUML_Tests_TestClassExtentReader->addEdge(fUML_Tests_TestClassExtentReader_ObjectFlow824);
			// ObjectFlow ObjectFlow830 from Create.result to Param(object)
			fUML_Tests_TestClassExtentReader_ObjectFlow830->setThisActivityEdgePtr(fUML_Tests_TestClassExtentReader_ObjectFlow830);
			fUML_Tests_TestClassExtentReader_ObjectFlow830->setName("ObjectFlow830");
			fUML_Tests_TestClassExtentReader_ObjectFlow830->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassExtentReader_ObjectFlow830->setSource(fUML_Tests_TestClassExtentReader_Create_TestClass_Create_result);
			fUML_Tests_TestClassExtentReader_ObjectFlow830->setTarget(fUML_Tests_TestClassExtentReader_Param_object);
		fUML_Tests_TestClassExtentReader->addEdge(fUML_Tests_TestClassExtentReader_ObjectFlow830);
	fUML_Tests->addPackagedElement(fUML_Tests_TestClassExtentReader);
		// Activity HelloWorld
		fUML_Tests_HelloWorld->setThisActivityPtr(fUML_Tests_HelloWorld);
		fUML_Tests_HelloWorld->setName("HelloWorld");
		fUML_Tests_HelloWorld->setVisibility(VisibilityKind::public_);
		fUML_Tests_HelloWorld->isReentrant = false;
			// CallBehaviorAction WriteLine
			fUML_Tests_HelloWorld_WriteLine->setThisExecutableNodePtr(fUML_Tests_HelloWorld_WriteLine);
			fUML_Tests_HelloWorld_WriteLine->setName("WriteLine");
			fUML_Tests_HelloWorld_WriteLine->setVisibility(VisibilityKind::public_);
				// OutputPin WriteLine.errorStatus
				fUML_Tests_HelloWorld_WriteLine_WriteLine_errorStatus->setThisElementPtr(fUML_Tests_HelloWorld_WriteLine_WriteLine_errorStatus);
				fUML_Tests_HelloWorld_WriteLine_WriteLine_errorStatus->setName("WriteLine.errorStatus");
				fUML_Tests_HelloWorld_WriteLine_WriteLine_errorStatus->setVisibility(VisibilityKind::public_);
				fUML_Tests_HelloWorld_WriteLine_WriteLine_errorStatus->setType(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_Common_Status);
			fUML_Tests_HelloWorld_WriteLine->addResult(fUML_Tests_HelloWorld_WriteLine_WriteLine_errorStatus);
			fUML_Tests_HelloWorld_WriteLine->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_BasicInputOutput_WriteLine);
				// InputPin WriteLine.value
				fUML_Tests_HelloWorld_WriteLine_WriteLine_value->setThisElementPtr(fUML_Tests_HelloWorld_WriteLine_WriteLine_value);
				fUML_Tests_HelloWorld_WriteLine_WriteLine_value->setName("WriteLine.value");
				fUML_Tests_HelloWorld_WriteLine_WriteLine_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_HelloWorld_WriteLine_WriteLine_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_HelloWorld_WriteLine->addArgument(fUML_Tests_HelloWorld_WriteLine_WriteLine_value);
		fUML_Tests_HelloWorld->addNode(fUML_Tests_HelloWorld_WriteLine);
			// ValueSpecificationAction Value(\"Hello World!\")
			fUML_Tests_HelloWorld_Value_Hello_World_->setThisExecutableNodePtr(fUML_Tests_HelloWorld_Value_Hello_World_);
			fUML_Tests_HelloWorld_Value_Hello_World_->setName("Value(\"Hello World!\")");
			fUML_Tests_HelloWorld_Value_Hello_World_->setVisibility(VisibilityKind::public_);
				// LiteralString LiteralString834
				fUML_Tests_HelloWorld_Value_Hello_World__LiteralString834->setThisElementPtr(fUML_Tests_HelloWorld_Value_Hello_World__LiteralString834);
				fUML_Tests_HelloWorld_Value_Hello_World__LiteralString834->setName("LiteralString834");
				fUML_Tests_HelloWorld_Value_Hello_World__LiteralString834->setVisibility(VisibilityKind::public_);
				fUML_Tests_HelloWorld_Value_Hello_World__LiteralString834->setValue("Hello World");
			fUML_Tests_HelloWorld_Value_Hello_World_->setValue(fUML_Tests_HelloWorld_Value_Hello_World__LiteralString834);
				// OutputPin Value.result
				fUML_Tests_HelloWorld_Value_Hello_World__Value_result->setThisElementPtr(fUML_Tests_HelloWorld_Value_Hello_World__Value_result);
				fUML_Tests_HelloWorld_Value_Hello_World__Value_result->setName("Value.result");
				fUML_Tests_HelloWorld_Value_Hello_World__Value_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_HelloWorld_Value_Hello_World__Value_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_HelloWorld_Value_Hello_World_->setResult(fUML_Tests_HelloWorld_Value_Hello_World__Value_result);
		fUML_Tests_HelloWorld->addNode(fUML_Tests_HelloWorld_Value_Hello_World_);
			// ObjectFlow ObjectFlow832 from Value.result to WriteLine.value
			fUML_Tests_HelloWorld_ObjectFlow832->setThisActivityEdgePtr(fUML_Tests_HelloWorld_ObjectFlow832);
			fUML_Tests_HelloWorld_ObjectFlow832->setName("ObjectFlow832");
			fUML_Tests_HelloWorld_ObjectFlow832->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_HelloWorld_ObjectFlow832->setSource(fUML_Tests_HelloWorld_Value_Hello_World__Value_result);
			fUML_Tests_HelloWorld_ObjectFlow832->setTarget(fUML_Tests_HelloWorld_WriteLine_WriteLine_value);
		fUML_Tests_HelloWorld->addEdge(fUML_Tests_HelloWorld_ObjectFlow832);
	fUML_Tests->addPackagedElement(fUML_Tests_HelloWorld);
		// Activity TestSpecializedSignalSend
		fUML_Tests_TestSpecializedSignalSend->setThisActivityPtr(fUML_Tests_TestSpecializedSignalSend);
		fUML_Tests_TestSpecializedSignalSend->setName("TestSpecializedSignalSend");
		fUML_Tests_TestSpecializedSignalSend->setVisibility(VisibilityKind::public_);
			// ActivityFinalNode ActivityFinalNode835
			fUML_Tests_TestSpecializedSignalSend_ActivityFinalNode835->setThisElementPtr(fUML_Tests_TestSpecializedSignalSend_ActivityFinalNode835);
			fUML_Tests_TestSpecializedSignalSend_ActivityFinalNode835->setName("ActivityFinalNode835");
			fUML_Tests_TestSpecializedSignalSend_ActivityFinalNode835->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestSpecializedSignalSend->addNode(fUML_Tests_TestSpecializedSignalSend_ActivityFinalNode835);
			// ForkNode ForkNode838
			fUML_Tests_TestSpecializedSignalSend_ForkNode838->setThisElementPtr(fUML_Tests_TestSpecializedSignalSend_ForkNode838);
			fUML_Tests_TestSpecializedSignalSend_ForkNode838->setName("ForkNode838");
			fUML_Tests_TestSpecializedSignalSend_ForkNode838->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestSpecializedSignalSend->addNode(fUML_Tests_TestSpecializedSignalSend_ForkNode838);
			// CreateObjectAction Create(TestSignalReceiver)
			fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver->setThisExecutableNodePtr(fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver);
			fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver->setName("Create(TestSignalReceiver)");
			fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver->setClassifier(fUML_Tests_TestSignalReceiver);
				// OutputPin result
				fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result->setThisElementPtr(fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result);
				fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result->setName("result");
				fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result->setType(fUML_Tests_TestSignalReceiver);
			fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver->setResult(fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result);
		fUML_Tests_TestSpecializedSignalSend->addNode(fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver);
			// InitialNode InitialNode853
			fUML_Tests_TestSpecializedSignalSend_InitialNode853->setThisElementPtr(fUML_Tests_TestSpecializedSignalSend_InitialNode853);
			fUML_Tests_TestSpecializedSignalSend_InitialNode853->setName("InitialNode853");
			fUML_Tests_TestSpecializedSignalSend_InitialNode853->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestSpecializedSignalSend->addNode(fUML_Tests_TestSpecializedSignalSend_InitialNode853);
			// StartObjectBehaviorAction Start(TestSignalReceiver)
			fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver->setThisExecutableNodePtr(fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver);
			fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver->setName("Start(TestSignalReceiver)");
			fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver->setVisibility(VisibilityKind::public_);
				// InputPin object
				fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object->setThisElementPtr(fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object);
				fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object->setName("object");
				fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object->setType(fUML_Tests_TestSignalReceiver);
			fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver->setObject(fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object);
		fUML_Tests_TestSpecializedSignalSend->addNode(fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver);
			// SendSignalAction Send(SpecializedSignal)
			fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal->setThisExecutableNodePtr(fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal);
			fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal->setName("Send(SpecializedSignal)");
			fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal->setSignal(fUML_Tests_SpecializedSignal);
				// InputPin target
				fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target->setThisElementPtr(fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target);
				fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target->setName("target");
				fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target->setType(fUML_Tests_TestSignalReceiver);
			fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal->setTarget(fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target);
		fUML_Tests_TestSpecializedSignalSend->addNode(fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal);
			// ControlFlow ControlFlow836 from Start(TestSignalReceiver) to Send(SpecializedSignal)
			fUML_Tests_TestSpecializedSignalSend_ControlFlow836->setThisActivityEdgePtr(fUML_Tests_TestSpecializedSignalSend_ControlFlow836);
			fUML_Tests_TestSpecializedSignalSend_ControlFlow836->setName("ControlFlow836");
			fUML_Tests_TestSpecializedSignalSend_ControlFlow836->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSpecializedSignalSend_ControlFlow836->setSource(fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver);
			fUML_Tests_TestSpecializedSignalSend_ControlFlow836->setTarget(fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal);
		fUML_Tests_TestSpecializedSignalSend->addEdge(fUML_Tests_TestSpecializedSignalSend_ControlFlow836);
			// ControlFlow ControlFlow839 from InitialNode853 to Create(TestSignalReceiver)
			fUML_Tests_TestSpecializedSignalSend_ControlFlow839->setThisActivityEdgePtr(fUML_Tests_TestSpecializedSignalSend_ControlFlow839);
			fUML_Tests_TestSpecializedSignalSend_ControlFlow839->setName("ControlFlow839");
			fUML_Tests_TestSpecializedSignalSend_ControlFlow839->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSpecializedSignalSend_ControlFlow839->setSource(fUML_Tests_TestSpecializedSignalSend_InitialNode853);
			fUML_Tests_TestSpecializedSignalSend_ControlFlow839->setTarget(fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver);
		fUML_Tests_TestSpecializedSignalSend->addEdge(fUML_Tests_TestSpecializedSignalSend_ControlFlow839);
			// ObjectFlow ObjectFlow841 from result to ForkNode838
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow841->setThisActivityEdgePtr(fUML_Tests_TestSpecializedSignalSend_ObjectFlow841);
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow841->setName("ObjectFlow841");
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow841->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow841->setSource(fUML_Tests_TestSpecializedSignalSend_Create_TestSignalReceiver_result);
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow841->setTarget(fUML_Tests_TestSpecializedSignalSend_ForkNode838);
		fUML_Tests_TestSpecializedSignalSend->addEdge(fUML_Tests_TestSpecializedSignalSend_ObjectFlow841);
			// ObjectFlow ObjectFlow843 from ForkNode838 to object
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow843->setThisActivityEdgePtr(fUML_Tests_TestSpecializedSignalSend_ObjectFlow843);
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow843->setName("ObjectFlow843");
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow843->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow843->setSource(fUML_Tests_TestSpecializedSignalSend_ForkNode838);
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow843->setTarget(fUML_Tests_TestSpecializedSignalSend_Start_TestSignalReceiver_object);
		fUML_Tests_TestSpecializedSignalSend->addEdge(fUML_Tests_TestSpecializedSignalSend_ObjectFlow843);
			// ObjectFlow ObjectFlow845 from ForkNode838 to target
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow845->setThisActivityEdgePtr(fUML_Tests_TestSpecializedSignalSend_ObjectFlow845);
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow845->setName("ObjectFlow845");
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow845->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow845->setSource(fUML_Tests_TestSpecializedSignalSend_ForkNode838);
			fUML_Tests_TestSpecializedSignalSend_ObjectFlow845->setTarget(fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal_target);
		fUML_Tests_TestSpecializedSignalSend->addEdge(fUML_Tests_TestSpecializedSignalSend_ObjectFlow845);
			// ControlFlow ControlFlow849 from Send(SpecializedSignal) to ActivityFinalNode835
			fUML_Tests_TestSpecializedSignalSend_ControlFlow849->setThisActivityEdgePtr(fUML_Tests_TestSpecializedSignalSend_ControlFlow849);
			fUML_Tests_TestSpecializedSignalSend_ControlFlow849->setName("ControlFlow849");
			fUML_Tests_TestSpecializedSignalSend_ControlFlow849->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestSpecializedSignalSend_ControlFlow849->setSource(fUML_Tests_TestSpecializedSignalSend_Send_SpecializedSignal);
			fUML_Tests_TestSpecializedSignalSend_ControlFlow849->setTarget(fUML_Tests_TestSpecializedSignalSend_ActivityFinalNode835);
		fUML_Tests_TestSpecializedSignalSend->addEdge(fUML_Tests_TestSpecializedSignalSend_ControlFlow849);
	fUML_Tests->addPackagedElement(fUML_Tests_TestSpecializedSignalSend);
		// Signal SpecializedSignal
		fUML_Tests_SpecializedSignal->setThisSignalPtr(fUML_Tests_SpecializedSignal);
		fUML_Tests_SpecializedSignal->setName("SpecializedSignal");
		fUML_Tests_SpecializedSignal->setVisibility(VisibilityKind::public_);
		
			// Generalization to TestSignal
			fUML_Tests_SpecializedSignal_Generalization856->setThisElementPtr(fUML_Tests_SpecializedSignal_Generalization856);
			fUML_Tests_SpecializedSignal_Generalization856->setGeneral(fUML_Tests_TestSignal);
		fUML_Tests_SpecializedSignal->addGeneralization(fUML_Tests_SpecializedSignal_Generalization856);
	fUML_Tests->addPackagedElement(fUML_Tests_SpecializedSignal);
		// SignalEvent SignalEvent857
		fUML_Tests_SignalEvent857->setThisElementPtr(fUML_Tests_SignalEvent857);
		fUML_Tests_SignalEvent857->setName("SignalEvent857");
		fUML_Tests_SignalEvent857->setVisibility(VisibilityKind::public_);
		fUML_Tests_SignalEvent857->setSignal(fUML_Tests_TestSignal);
	fUML_Tests->addPackagedElement(fUML_Tests_SignalEvent857);
		// Activity TestClassObjectCreator
		fUML_Tests_TestClassObjectCreator->setThisActivityPtr(fUML_Tests_TestClassObjectCreator);
		fUML_Tests_TestClassObjectCreator->setName("TestClassObjectCreator");
		fUML_Tests_TestClassObjectCreator->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestClassObjectCreator->isReentrant = false;
			// Parameter result
			fUML_Tests_TestClassObjectCreator_result->setThisElementPtr(fUML_Tests_TestClassObjectCreator_result);
			fUML_Tests_TestClassObjectCreator_result->setName("result");
			fUML_Tests_TestClassObjectCreator_result->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassObjectCreator_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassObjectCreator_result->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassObjectCreator->addOwnedParameter(fUML_Tests_TestClassObjectCreator_result);
			// ActivityParameterNode Parameter(result)
			fUML_Tests_TestClassObjectCreator_Parameter_result->setThisElementPtr(fUML_Tests_TestClassObjectCreator_Parameter_result);
			fUML_Tests_TestClassObjectCreator_Parameter_result->setName("Parameter(result)");
			fUML_Tests_TestClassObjectCreator_Parameter_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassObjectCreator_Parameter_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassObjectCreator_Parameter_result->setParameter(fUML_Tests_TestClassObjectCreator_result);
		fUML_Tests_TestClassObjectCreator->addNode(fUML_Tests_TestClassObjectCreator_Parameter_result);
			// CreateObjectAction Create(TestClass)
			fUML_Tests_TestClassObjectCreator_Create_TestClass->setThisExecutableNodePtr(fUML_Tests_TestClassObjectCreator_Create_TestClass);
			fUML_Tests_TestClassObjectCreator_Create_TestClass->setName("Create(TestClass)");
			fUML_Tests_TestClassObjectCreator_Create_TestClass->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassObjectCreator_Create_TestClass->setClassifier(fUML_Tests_TestClass);
				// OutputPin Create(TestClass).result
				fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result->setThisElementPtr(fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result);
				fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result->setName("Create(TestClass).result");
				fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassObjectCreator_Create_TestClass->setResult(fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result);
		fUML_Tests_TestClassObjectCreator->addNode(fUML_Tests_TestClassObjectCreator_Create_TestClass);
			// ObjectFlow ObjectFlow862 from Create(TestClass).result to Parameter(result)
			fUML_Tests_TestClassObjectCreator_ObjectFlow862->setThisActivityEdgePtr(fUML_Tests_TestClassObjectCreator_ObjectFlow862);
			fUML_Tests_TestClassObjectCreator_ObjectFlow862->setName("ObjectFlow862");
			fUML_Tests_TestClassObjectCreator_ObjectFlow862->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassObjectCreator_ObjectFlow862->setSource(fUML_Tests_TestClassObjectCreator_Create_TestClass_Create_TestClass_result);
			fUML_Tests_TestClassObjectCreator_ObjectFlow862->setTarget(fUML_Tests_TestClassObjectCreator_Parameter_result);
		fUML_Tests_TestClassObjectCreator->addEdge(fUML_Tests_TestClassObjectCreator_ObjectFlow862);
	fUML_Tests->addPackagedElement(fUML_Tests_TestClassObjectCreator);
		// Class Subclass1
		fUML_Tests_Subclass1->setThisClass_Ptr(fUML_Tests_Subclass1);
		fUML_Tests_Subclass1->setName("Subclass1");
		fUML_Tests_Subclass1->setVisibility(VisibilityKind::public_);
		
			// Generalization to TestClass
			fUML_Tests_Subclass1_Generalization864->setThisElementPtr(fUML_Tests_Subclass1_Generalization864);
			fUML_Tests_Subclass1_Generalization864->setGeneral(fUML_Tests_TestClass);
		fUML_Tests_Subclass1->addGeneralization(fUML_Tests_Subclass1_Generalization864);
			// Property a
			fUML_Tests_Subclass1_a->setThisElementPtr(fUML_Tests_Subclass1_a);
			fUML_Tests_Subclass1_a->setName("a");
			fUML_Tests_Subclass1_a->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_Subclass1_a->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
		fUML_Tests_Subclass1->addOwnedAttribute(fUML_Tests_Subclass1_a);
	fUML_Tests->addPackagedElement(fUML_Tests_Subclass1);
		// Activity ActiveClassBehaviorSender
		fUML_Tests_ActiveClassBehaviorSender->setThisActivityPtr(fUML_Tests_ActiveClassBehaviorSender);
		fUML_Tests_ActiveClassBehaviorSender->setName("ActiveClassBehaviorSender");
		fUML_Tests_ActiveClassBehaviorSender->setVisibility(VisibilityKind::public_);
			// StartObjectBehaviorAction Start(ActiveClass)
			fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass->setThisExecutableNodePtr(fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass);
			fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass->setName("Start(ActiveClass)");
			fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass->setVisibility(VisibilityKind::public_);
				// InputPin object
				fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object->setThisElementPtr(fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object);
				fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object->setName("object");
				fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object->setType(fUML_Tests_ActiveClass);
			fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass->setObject(fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object);
		fUML_Tests_ActiveClassBehaviorSender->addNode(fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass);
			// ForkNode ForkNode869
			fUML_Tests_ActiveClassBehaviorSender_ForkNode869->setThisElementPtr(fUML_Tests_ActiveClassBehaviorSender_ForkNode869);
			fUML_Tests_ActiveClassBehaviorSender_ForkNode869->setName("ForkNode869");
			fUML_Tests_ActiveClassBehaviorSender_ForkNode869->setVisibility(VisibilityKind::public_);
		fUML_Tests_ActiveClassBehaviorSender->addNode(fUML_Tests_ActiveClassBehaviorSender_ForkNode869);
			// SendSignalAction Send(TestSignal)
			fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal->setThisExecutableNodePtr(fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal);
			fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal->setName("Send(TestSignal)");
			fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal->setVisibility(VisibilityKind::public_);
			fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal->setSignal(fUML_Tests_TestSignal);
				// InputPin target
				fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target->setThisElementPtr(fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target);
				fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target->setName("target");
				fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target->setVisibility(VisibilityKind::public_);
				fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target->setType(fUML_Tests_ActiveClass);
			fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal->setTarget(fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target);
		fUML_Tests_ActiveClassBehaviorSender->addNode(fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal);
			// InitialNode InitialNode884
			fUML_Tests_ActiveClassBehaviorSender_InitialNode884->setThisElementPtr(fUML_Tests_ActiveClassBehaviorSender_InitialNode884);
			fUML_Tests_ActiveClassBehaviorSender_InitialNode884->setName("InitialNode884");
			fUML_Tests_ActiveClassBehaviorSender_InitialNode884->setVisibility(VisibilityKind::public_);
		fUML_Tests_ActiveClassBehaviorSender->addNode(fUML_Tests_ActiveClassBehaviorSender_InitialNode884);
			// SendSignalAction Send(OtherSignal)
			fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal->setThisExecutableNodePtr(fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal);
			fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal->setName("Send(OtherSignal)");
			fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal->setVisibility(VisibilityKind::public_);
			fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal->setSignal(fUML_Tests_OtherSignal);
				// InputPin target
				fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target->setThisElementPtr(fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target);
				fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target->setName("target");
				fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target->setVisibility(VisibilityKind::public_);
				fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target->setType(fUML_Tests_ActiveClass);
			fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal->setTarget(fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target);
		fUML_Tests_ActiveClassBehaviorSender->addNode(fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal);
			// CreateObjectAction Create(ActiveClass)
			fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass->setThisExecutableNodePtr(fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass);
			fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass->setName("Create(ActiveClass)");
			fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass->setVisibility(VisibilityKind::public_);
			fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass->setClassifier(fUML_Tests_ActiveClass);
				// OutputPin result
				fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result->setThisElementPtr(fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result);
				fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result->setName("result");
				fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result->setType(fUML_Tests_ActiveClass);
			fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass->setResult(fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result);
		fUML_Tests_ActiveClassBehaviorSender->addNode(fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass);
			// ObjectFlow ObjectFlow865 from result to ForkNode869
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow865->setThisActivityEdgePtr(fUML_Tests_ActiveClassBehaviorSender_ObjectFlow865);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow865->setName("ObjectFlow865");
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow865->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow865->setSource(fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass_result);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow865->setTarget(fUML_Tests_ActiveClassBehaviorSender_ForkNode869);
		fUML_Tests_ActiveClassBehaviorSender->addEdge(fUML_Tests_ActiveClassBehaviorSender_ObjectFlow865);
			// ControlFlow ControlFlow882 from InitialNode884 to Create(ActiveClass)
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow882->setThisActivityEdgePtr(fUML_Tests_ActiveClassBehaviorSender_ControlFlow882);
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow882->setName("ControlFlow882");
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow882->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow882->setSource(fUML_Tests_ActiveClassBehaviorSender_InitialNode884);
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow882->setTarget(fUML_Tests_ActiveClassBehaviorSender_Create_ActiveClass);
		fUML_Tests_ActiveClassBehaviorSender->addEdge(fUML_Tests_ActiveClassBehaviorSender_ControlFlow882);
			// ControlFlow ControlFlow870 from Start(ActiveClass) to Send(TestSignal)
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow870->setThisActivityEdgePtr(fUML_Tests_ActiveClassBehaviorSender_ControlFlow870);
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow870->setName("ControlFlow870");
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow870->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow870->setSource(fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass);
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow870->setTarget(fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal);
		fUML_Tests_ActiveClassBehaviorSender->addEdge(fUML_Tests_ActiveClassBehaviorSender_ControlFlow870);
			// ObjectFlow ObjectFlow874 from ForkNode869 to object
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow874->setThisActivityEdgePtr(fUML_Tests_ActiveClassBehaviorSender_ObjectFlow874);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow874->setName("ObjectFlow874");
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow874->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow874->setSource(fUML_Tests_ActiveClassBehaviorSender_ForkNode869);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow874->setTarget(fUML_Tests_ActiveClassBehaviorSender_Start_ActiveClass_object);
		fUML_Tests_ActiveClassBehaviorSender->addEdge(fUML_Tests_ActiveClassBehaviorSender_ObjectFlow874);
			// ObjectFlow ObjectFlow876 from ForkNode869 to target
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow876->setThisActivityEdgePtr(fUML_Tests_ActiveClassBehaviorSender_ObjectFlow876);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow876->setName("ObjectFlow876");
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow876->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow876->setSource(fUML_Tests_ActiveClassBehaviorSender_ForkNode869);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow876->setTarget(fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal_target);
		fUML_Tests_ActiveClassBehaviorSender->addEdge(fUML_Tests_ActiveClassBehaviorSender_ObjectFlow876);
			// ControlFlow ControlFlow885 from Send(TestSignal) to Send(OtherSignal)
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow885->setThisActivityEdgePtr(fUML_Tests_ActiveClassBehaviorSender_ControlFlow885);
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow885->setName("ControlFlow885");
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow885->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow885->setSource(fUML_Tests_ActiveClassBehaviorSender_Send_TestSignal);
			fUML_Tests_ActiveClassBehaviorSender_ControlFlow885->setTarget(fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal);
		fUML_Tests_ActiveClassBehaviorSender->addEdge(fUML_Tests_ActiveClassBehaviorSender_ControlFlow885);
			// ObjectFlow ObjectFlow880 from ForkNode869 to target
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow880->setThisActivityEdgePtr(fUML_Tests_ActiveClassBehaviorSender_ObjectFlow880);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow880->setName("ObjectFlow880");
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow880->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow880->setSource(fUML_Tests_ActiveClassBehaviorSender_ForkNode869);
			fUML_Tests_ActiveClassBehaviorSender_ObjectFlow880->setTarget(fUML_Tests_ActiveClassBehaviorSender_Send_OtherSignal_target);
		fUML_Tests_ActiveClassBehaviorSender->addEdge(fUML_Tests_ActiveClassBehaviorSender_ObjectFlow880);
	fUML_Tests->addPackagedElement(fUML_Tests_ActiveClassBehaviorSender);
		// Activity TestStringFunctions
		fUML_Tests_TestStringFunctions->setThisActivityPtr(fUML_Tests_TestStringFunctions);
		fUML_Tests_TestStringFunctions->setName("TestStringFunctions");
		fUML_Tests_TestStringFunctions->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestStringFunctions->isReentrant = false;
			// Parameter SizeResult
			fUML_Tests_TestStringFunctions_SizeResult->setThisElementPtr(fUML_Tests_TestStringFunctions_SizeResult);
			fUML_Tests_TestStringFunctions_SizeResult->setName("SizeResult");
			fUML_Tests_TestStringFunctions_SizeResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_SizeResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_SizeResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestStringFunctions->addOwnedParameter(fUML_Tests_TestStringFunctions_SizeResult);
			// Parameter Substring1Result
			fUML_Tests_TestStringFunctions_Substring1Result->setThisElementPtr(fUML_Tests_TestStringFunctions_Substring1Result);
			fUML_Tests_TestStringFunctions_Substring1Result->setName("Substring1Result");
			fUML_Tests_TestStringFunctions_Substring1Result->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_Substring1Result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Substring1Result->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestStringFunctions->addOwnedParameter(fUML_Tests_TestStringFunctions_Substring1Result);
			// Parameter Substring2Result
			fUML_Tests_TestStringFunctions_Substring2Result->setThisElementPtr(fUML_Tests_TestStringFunctions_Substring2Result);
			fUML_Tests_TestStringFunctions_Substring2Result->setName("Substring2Result");
			fUML_Tests_TestStringFunctions_Substring2Result->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_Substring2Result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Substring2Result->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestStringFunctions->addOwnedParameter(fUML_Tests_TestStringFunctions_Substring2Result);
			// Parameter ConcatResult
			fUML_Tests_TestStringFunctions_ConcatResult->setThisElementPtr(fUML_Tests_TestStringFunctions_ConcatResult);
			fUML_Tests_TestStringFunctions_ConcatResult->setName("ConcatResult");
			fUML_Tests_TestStringFunctions_ConcatResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ConcatResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_ConcatResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestStringFunctions->addOwnedParameter(fUML_Tests_TestStringFunctions_ConcatResult);
			// ValueSpecificationAction Value(6)
			fUML_Tests_TestStringFunctions_Value_6->setThisExecutableNodePtr(fUML_Tests_TestStringFunctions_Value_6);
			fUML_Tests_TestStringFunctions_Value_6->setName("Value(6)");
			fUML_Tests_TestStringFunctions_Value_6->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger934
				fUML_Tests_TestStringFunctions_Value_6_LiteralInteger934->setThisElementPtr(fUML_Tests_TestStringFunctions_Value_6_LiteralInteger934);
				fUML_Tests_TestStringFunctions_Value_6_LiteralInteger934->setName("LiteralInteger934");
				fUML_Tests_TestStringFunctions_Value_6_LiteralInteger934->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Value_6_LiteralInteger934->setValue(6);
			fUML_Tests_TestStringFunctions_Value_6->setValue(fUML_Tests_TestStringFunctions_Value_6_LiteralInteger934);
				// OutputPin Value(6).result
				fUML_Tests_TestStringFunctions_Value_6_Value_6_result->setThisElementPtr(fUML_Tests_TestStringFunctions_Value_6_Value_6_result);
				fUML_Tests_TestStringFunctions_Value_6_Value_6_result->setName("Value(6).result");
				fUML_Tests_TestStringFunctions_Value_6_Value_6_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Value_6_Value_6_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_Value_6->setResult(fUML_Tests_TestStringFunctions_Value_6_Value_6_result);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Value_6);
			// ValueSpecificationAction Value(9)
			fUML_Tests_TestStringFunctions_Value_9->setThisExecutableNodePtr(fUML_Tests_TestStringFunctions_Value_9);
			fUML_Tests_TestStringFunctions_Value_9->setName("Value(9)");
			fUML_Tests_TestStringFunctions_Value_9->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger891
				fUML_Tests_TestStringFunctions_Value_9_LiteralInteger891->setThisElementPtr(fUML_Tests_TestStringFunctions_Value_9_LiteralInteger891);
				fUML_Tests_TestStringFunctions_Value_9_LiteralInteger891->setName("LiteralInteger891");
				fUML_Tests_TestStringFunctions_Value_9_LiteralInteger891->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Value_9_LiteralInteger891->setValue(9);
			fUML_Tests_TestStringFunctions_Value_9->setValue(fUML_Tests_TestStringFunctions_Value_9_LiteralInteger891);
				// OutputPin Value(9).result
				fUML_Tests_TestStringFunctions_Value_9_Value_9_result->setThisElementPtr(fUML_Tests_TestStringFunctions_Value_9_Value_9_result);
				fUML_Tests_TestStringFunctions_Value_9_Value_9_result->setName("Value(9).result");
				fUML_Tests_TestStringFunctions_Value_9_Value_9_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Value_9_Value_9_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_Value_9->setResult(fUML_Tests_TestStringFunctions_Value_9_Value_9_result);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Value_9);
			// CallBehaviorAction Call(Concat)
			fUML_Tests_TestStringFunctions_Call_Concat->setThisExecutableNodePtr(fUML_Tests_TestStringFunctions_Call_Concat);
			fUML_Tests_TestStringFunctions_Call_Concat->setName("Call(Concat)");
			fUML_Tests_TestStringFunctions_Call_Concat->setVisibility(VisibilityKind::public_);
				// OutputPin Concat.result
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_result->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Concat_Concat_result);
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_result->setName("Concat.result");
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Call_Concat->addResult(fUML_Tests_TestStringFunctions_Call_Concat_Concat_result);
			fUML_Tests_TestStringFunctions_Call_Concat->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_StringFunctions_Concat);
				// InputPin Concat.x
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_x->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Concat_Concat_x);
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_x->setName("Concat.x");
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Call_Concat->addArgument(fUML_Tests_TestStringFunctions_Call_Concat_Concat_x);
				// InputPin Concat.y
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_y->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Concat_Concat_y);
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_y->setName("Concat.y");
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Concat_Concat_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Call_Concat->addArgument(fUML_Tests_TestStringFunctions_Call_Concat_Concat_y);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Call_Concat);
			// ActivityParameterNode Param(Substring2Result)
			fUML_Tests_TestStringFunctions_Param_Substring2Result->setThisElementPtr(fUML_Tests_TestStringFunctions_Param_Substring2Result);
			fUML_Tests_TestStringFunctions_Param_Substring2Result->setName("Param(Substring2Result)");
			fUML_Tests_TestStringFunctions_Param_Substring2Result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestStringFunctions_Param_Substring2Result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Param_Substring2Result->setParameter(fUML_Tests_TestStringFunctions_Substring2Result);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Param_Substring2Result);
			// CallBehaviorAction Call(Size)
			fUML_Tests_TestStringFunctions_Call_Size->setThisExecutableNodePtr(fUML_Tests_TestStringFunctions_Call_Size);
			fUML_Tests_TestStringFunctions_Call_Size->setName("Call(Size)");
			fUML_Tests_TestStringFunctions_Call_Size->setVisibility(VisibilityKind::public_);
				// OutputPin Size.result
				fUML_Tests_TestStringFunctions_Call_Size_Size_result->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Size_Size_result);
				fUML_Tests_TestStringFunctions_Call_Size_Size_result->setName("Size.result");
				fUML_Tests_TestStringFunctions_Call_Size_Size_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Size_Size_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_Call_Size->addResult(fUML_Tests_TestStringFunctions_Call_Size_Size_result);
			fUML_Tests_TestStringFunctions_Call_Size->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_StringFunctions_Size);
				// InputPin Size.x
				fUML_Tests_TestStringFunctions_Call_Size_Size_x->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Size_Size_x);
				fUML_Tests_TestStringFunctions_Call_Size_Size_x->setName("Size.x");
				fUML_Tests_TestStringFunctions_Call_Size_Size_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Size_Size_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Call_Size->addArgument(fUML_Tests_TestStringFunctions_Call_Size_Size_x);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Call_Size);
			// ForkNode Fork(Value)
			fUML_Tests_TestStringFunctions_Fork_Value->setThisElementPtr(fUML_Tests_TestStringFunctions_Fork_Value);
			fUML_Tests_TestStringFunctions_Fork_Value->setName("Fork(Value)");
			fUML_Tests_TestStringFunctions_Fork_Value->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Fork_Value);
			// CallBehaviorAction Call(Substring)-2
			fUML_Tests_TestStringFunctions_Call_Substringminus2->setThisExecutableNodePtr(fUML_Tests_TestStringFunctions_Call_Substringminus2);
			fUML_Tests_TestStringFunctions_Call_Substringminus2->setName("Call(Substring)-2");
			fUML_Tests_TestStringFunctions_Call_Substringminus2->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestStringFunctions_Call_Substringminus2_result->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Substringminus2_result);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_result->setName("result");
				fUML_Tests_TestStringFunctions_Call_Substringminus2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_result->setLower(0);
			fUML_Tests_TestStringFunctions_Call_Substringminus2->addResult(fUML_Tests_TestStringFunctions_Call_Substringminus2_result);
			fUML_Tests_TestStringFunctions_Call_Substringminus2->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_StringFunctions_Substring);
				// InputPin x
				fUML_Tests_TestStringFunctions_Call_Substringminus2_x->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Substringminus2_x);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_x->setName("x");
				fUML_Tests_TestStringFunctions_Call_Substringminus2_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Call_Substringminus2->addArgument(fUML_Tests_TestStringFunctions_Call_Substringminus2_x);
				// InputPin lower
				fUML_Tests_TestStringFunctions_Call_Substringminus2_lower->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Substringminus2_lower);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_lower->setName("lower");
				fUML_Tests_TestStringFunctions_Call_Substringminus2_lower->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_lower->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_Call_Substringminus2->addArgument(fUML_Tests_TestStringFunctions_Call_Substringminus2_lower);
				// InputPin upper
				fUML_Tests_TestStringFunctions_Call_Substringminus2_upper->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Substringminus2_upper);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_upper->setName("upper");
				fUML_Tests_TestStringFunctions_Call_Substringminus2_upper->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Substringminus2_upper->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_Call_Substringminus2->addArgument(fUML_Tests_TestStringFunctions_Call_Substringminus2_upper);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Call_Substringminus2);
			// ActivityParameterNode Param(ConcatResult)
			fUML_Tests_TestStringFunctions_Param_ConcatResult->setThisElementPtr(fUML_Tests_TestStringFunctions_Param_ConcatResult);
			fUML_Tests_TestStringFunctions_Param_ConcatResult->setName("Param(ConcatResult)");
			fUML_Tests_TestStringFunctions_Param_ConcatResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestStringFunctions_Param_ConcatResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Param_ConcatResult->setParameter(fUML_Tests_TestStringFunctions_ConcatResult);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Param_ConcatResult);
			// ValueSpecificationAction Value(\"123456789\")
			fUML_Tests_TestStringFunctions_Value_123456789->setThisExecutableNodePtr(fUML_Tests_TestStringFunctions_Value_123456789);
			fUML_Tests_TestStringFunctions_Value_123456789->setName("Value(\"123456789\")");
			fUML_Tests_TestStringFunctions_Value_123456789->setVisibility(VisibilityKind::public_);
				// LiteralString LiteralString910
				fUML_Tests_TestStringFunctions_Value_123456789_LiteralString910->setThisElementPtr(fUML_Tests_TestStringFunctions_Value_123456789_LiteralString910);
				fUML_Tests_TestStringFunctions_Value_123456789_LiteralString910->setName("LiteralString910");
				fUML_Tests_TestStringFunctions_Value_123456789_LiteralString910->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Value_123456789_LiteralString910->setValue("123456789");
			fUML_Tests_TestStringFunctions_Value_123456789->setValue(fUML_Tests_TestStringFunctions_Value_123456789_LiteralString910);
				// OutputPin Value.result
				fUML_Tests_TestStringFunctions_Value_123456789_Value_result->setThisElementPtr(fUML_Tests_TestStringFunctions_Value_123456789_Value_result);
				fUML_Tests_TestStringFunctions_Value_123456789_Value_result->setName("Value.result");
				fUML_Tests_TestStringFunctions_Value_123456789_Value_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Value_123456789_Value_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Value_123456789->setResult(fUML_Tests_TestStringFunctions_Value_123456789_Value_result);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Value_123456789);
			// ActivityParameterNode Param(Substring1Result)
			fUML_Tests_TestStringFunctions_Param_Substring1Result->setThisElementPtr(fUML_Tests_TestStringFunctions_Param_Substring1Result);
			fUML_Tests_TestStringFunctions_Param_Substring1Result->setName("Param(Substring1Result)");
			fUML_Tests_TestStringFunctions_Param_Substring1Result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestStringFunctions_Param_Substring1Result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Param_Substring1Result->setParameter(fUML_Tests_TestStringFunctions_Substring1Result);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Param_Substring1Result);
			// CallBehaviorAction Call(Substring)-1
			fUML_Tests_TestStringFunctions_Call_Substringminus1->setThisExecutableNodePtr(fUML_Tests_TestStringFunctions_Call_Substringminus1);
			fUML_Tests_TestStringFunctions_Call_Substringminus1->setName("Call(Substring)-1");
			fUML_Tests_TestStringFunctions_Call_Substringminus1->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestStringFunctions_Call_Substringminus1_result->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Substringminus1_result);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_result->setName("result");
				fUML_Tests_TestStringFunctions_Call_Substringminus1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_result->setLower(0);
			fUML_Tests_TestStringFunctions_Call_Substringminus1->addResult(fUML_Tests_TestStringFunctions_Call_Substringminus1_result);
			fUML_Tests_TestStringFunctions_Call_Substringminus1->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_StringFunctions_Substring);
				// InputPin x
				fUML_Tests_TestStringFunctions_Call_Substringminus1_x->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Substringminus1_x);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_x->setName("x");
				fUML_Tests_TestStringFunctions_Call_Substringminus1_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_String);
			fUML_Tests_TestStringFunctions_Call_Substringminus1->addArgument(fUML_Tests_TestStringFunctions_Call_Substringminus1_x);
				// InputPin lower
				fUML_Tests_TestStringFunctions_Call_Substringminus1_lower->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Substringminus1_lower);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_lower->setName("lower");
				fUML_Tests_TestStringFunctions_Call_Substringminus1_lower->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_lower->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_Call_Substringminus1->addArgument(fUML_Tests_TestStringFunctions_Call_Substringminus1_lower);
				// InputPin upper
				fUML_Tests_TestStringFunctions_Call_Substringminus1_upper->setThisElementPtr(fUML_Tests_TestStringFunctions_Call_Substringminus1_upper);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_upper->setName("upper");
				fUML_Tests_TestStringFunctions_Call_Substringminus1_upper->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Call_Substringminus1_upper->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_Call_Substringminus1->addArgument(fUML_Tests_TestStringFunctions_Call_Substringminus1_upper);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Call_Substringminus1);
			// ForkNode Fork(Substring-2)
			fUML_Tests_TestStringFunctions_Fork_Substringminus2->setThisElementPtr(fUML_Tests_TestStringFunctions_Fork_Substringminus2);
			fUML_Tests_TestStringFunctions_Fork_Substringminus2->setName("Fork(Substring-2)");
			fUML_Tests_TestStringFunctions_Fork_Substringminus2->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Fork_Substringminus2);
			// ValueSpecificationAction Value(5)
			fUML_Tests_TestStringFunctions_Value_5->setThisExecutableNodePtr(fUML_Tests_TestStringFunctions_Value_5);
			fUML_Tests_TestStringFunctions_Value_5->setName("Value(5)");
			fUML_Tests_TestStringFunctions_Value_5->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger923
				fUML_Tests_TestStringFunctions_Value_5_LiteralInteger923->setThisElementPtr(fUML_Tests_TestStringFunctions_Value_5_LiteralInteger923);
				fUML_Tests_TestStringFunctions_Value_5_LiteralInteger923->setName("LiteralInteger923");
				fUML_Tests_TestStringFunctions_Value_5_LiteralInteger923->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Value_5_LiteralInteger923->setValue(5);
			fUML_Tests_TestStringFunctions_Value_5->setValue(fUML_Tests_TestStringFunctions_Value_5_LiteralInteger923);
				// OutputPin Value(5).result
				fUML_Tests_TestStringFunctions_Value_5_Value_5_result->setThisElementPtr(fUML_Tests_TestStringFunctions_Value_5_Value_5_result);
				fUML_Tests_TestStringFunctions_Value_5_Value_5_result->setName("Value(5).result");
				fUML_Tests_TestStringFunctions_Value_5_Value_5_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Value_5_Value_5_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_Value_5->setResult(fUML_Tests_TestStringFunctions_Value_5_Value_5_result);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Value_5);
			// ValueSpecificationAction Value(1)
			fUML_Tests_TestStringFunctions_Value_1->setThisExecutableNodePtr(fUML_Tests_TestStringFunctions_Value_1);
			fUML_Tests_TestStringFunctions_Value_1->setName("Value(1)");
			fUML_Tests_TestStringFunctions_Value_1->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger963
				fUML_Tests_TestStringFunctions_Value_1_LiteralInteger963->setThisElementPtr(fUML_Tests_TestStringFunctions_Value_1_LiteralInteger963);
				fUML_Tests_TestStringFunctions_Value_1_LiteralInteger963->setName("LiteralInteger963");
				fUML_Tests_TestStringFunctions_Value_1_LiteralInteger963->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Value_1_LiteralInteger963->setValue(1);
			fUML_Tests_TestStringFunctions_Value_1->setValue(fUML_Tests_TestStringFunctions_Value_1_LiteralInteger963);
				// OutputPin Value(1).result
				fUML_Tests_TestStringFunctions_Value_1_Value_1_result->setThisElementPtr(fUML_Tests_TestStringFunctions_Value_1_Value_1_result);
				fUML_Tests_TestStringFunctions_Value_1_Value_1_result->setName("Value(1).result");
				fUML_Tests_TestStringFunctions_Value_1_Value_1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestStringFunctions_Value_1_Value_1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_Value_1->setResult(fUML_Tests_TestStringFunctions_Value_1_Value_1_result);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Value_1);
			// ActivityParameterNode Param(SizeResult)
			fUML_Tests_TestStringFunctions_Param_SizeResult->setThisElementPtr(fUML_Tests_TestStringFunctions_Param_SizeResult);
			fUML_Tests_TestStringFunctions_Param_SizeResult->setName("Param(SizeResult)");
			fUML_Tests_TestStringFunctions_Param_SizeResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestStringFunctions_Param_SizeResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestStringFunctions_Param_SizeResult->setParameter(fUML_Tests_TestStringFunctions_SizeResult);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Param_SizeResult);
			// ForkNode Fork(Substring-1)
			fUML_Tests_TestStringFunctions_Fork_Substringminus1->setThisElementPtr(fUML_Tests_TestStringFunctions_Fork_Substringminus1);
			fUML_Tests_TestStringFunctions_Fork_Substringminus1->setName("Fork(Substring-1)");
			fUML_Tests_TestStringFunctions_Fork_Substringminus1->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestStringFunctions->addNode(fUML_Tests_TestStringFunctions_Fork_Substringminus1);
			// ObjectFlow ObjectFlow932 from Fork(Substring-1) to Param(Substring1Result)
			fUML_Tests_TestStringFunctions_ObjectFlow932->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow932);
			fUML_Tests_TestStringFunctions_ObjectFlow932->setName("ObjectFlow932");
			fUML_Tests_TestStringFunctions_ObjectFlow932->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow932->setSource(fUML_Tests_TestStringFunctions_Fork_Substringminus1);
			fUML_Tests_TestStringFunctions_ObjectFlow932->setTarget(fUML_Tests_TestStringFunctions_Param_Substring1Result);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow932);
			// ObjectFlow ObjectFlow937 from Size.result to Param(SizeResult)
			fUML_Tests_TestStringFunctions_ObjectFlow937->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow937);
			fUML_Tests_TestStringFunctions_ObjectFlow937->setName("ObjectFlow937");
			fUML_Tests_TestStringFunctions_ObjectFlow937->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow937->setSource(fUML_Tests_TestStringFunctions_Call_Size_Size_result);
			fUML_Tests_TestStringFunctions_ObjectFlow937->setTarget(fUML_Tests_TestStringFunctions_Param_SizeResult);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow937);
			// ObjectFlow ObjectFlow902 from Value.result to Fork(Value)
			fUML_Tests_TestStringFunctions_ObjectFlow902->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow902);
			fUML_Tests_TestStringFunctions_ObjectFlow902->setName("ObjectFlow902");
			fUML_Tests_TestStringFunctions_ObjectFlow902->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow902->setSource(fUML_Tests_TestStringFunctions_Value_123456789_Value_result);
			fUML_Tests_TestStringFunctions_ObjectFlow902->setTarget(fUML_Tests_TestStringFunctions_Fork_Value);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow902);
			// ObjectFlow ObjectFlow906 from Fork(Value) to Size.x
			fUML_Tests_TestStringFunctions_ObjectFlow906->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow906);
			fUML_Tests_TestStringFunctions_ObjectFlow906->setName("ObjectFlow906");
			fUML_Tests_TestStringFunctions_ObjectFlow906->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow906->setSource(fUML_Tests_TestStringFunctions_Fork_Value);
			fUML_Tests_TestStringFunctions_ObjectFlow906->setTarget(fUML_Tests_TestStringFunctions_Call_Size_Size_x);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow906);
			// ObjectFlow ObjectFlow941 from Value(5).result to upper
			fUML_Tests_TestStringFunctions_ObjectFlow941->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow941);
			fUML_Tests_TestStringFunctions_ObjectFlow941->setName("ObjectFlow941");
			fUML_Tests_TestStringFunctions_ObjectFlow941->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow941->setSource(fUML_Tests_TestStringFunctions_Value_5_Value_5_result);
			fUML_Tests_TestStringFunctions_ObjectFlow941->setTarget(fUML_Tests_TestStringFunctions_Call_Substringminus1_upper);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow941);
			// ObjectFlow ObjectFlow911 from Value(1).result to lower
			fUML_Tests_TestStringFunctions_ObjectFlow911->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow911);
			fUML_Tests_TestStringFunctions_ObjectFlow911->setName("ObjectFlow911");
			fUML_Tests_TestStringFunctions_ObjectFlow911->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow911->setSource(fUML_Tests_TestStringFunctions_Value_1_Value_1_result);
			fUML_Tests_TestStringFunctions_ObjectFlow911->setTarget(fUML_Tests_TestStringFunctions_Call_Substringminus1_lower);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow911);
			// ObjectFlow ObjectFlow951 from Fork(Substring-2) to Concat.y
			fUML_Tests_TestStringFunctions_ObjectFlow951->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow951);
			fUML_Tests_TestStringFunctions_ObjectFlow951->setName("ObjectFlow951");
			fUML_Tests_TestStringFunctions_ObjectFlow951->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow951->setSource(fUML_Tests_TestStringFunctions_Fork_Substringminus2);
			fUML_Tests_TestStringFunctions_ObjectFlow951->setTarget(fUML_Tests_TestStringFunctions_Call_Concat_Concat_y);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow951);
			// ObjectFlow ObjectFlow924 from Value(6).result to lower
			fUML_Tests_TestStringFunctions_ObjectFlow924->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow924);
			fUML_Tests_TestStringFunctions_ObjectFlow924->setName("ObjectFlow924");
			fUML_Tests_TestStringFunctions_ObjectFlow924->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow924->setSource(fUML_Tests_TestStringFunctions_Value_6_Value_6_result);
			fUML_Tests_TestStringFunctions_ObjectFlow924->setTarget(fUML_Tests_TestStringFunctions_Call_Substringminus2_lower);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow924);
			// ObjectFlow ObjectFlow953 from Fork(Substring-2) to Param(Substring2Result)
			fUML_Tests_TestStringFunctions_ObjectFlow953->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow953);
			fUML_Tests_TestStringFunctions_ObjectFlow953->setName("ObjectFlow953");
			fUML_Tests_TestStringFunctions_ObjectFlow953->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow953->setSource(fUML_Tests_TestStringFunctions_Fork_Substringminus2);
			fUML_Tests_TestStringFunctions_ObjectFlow953->setTarget(fUML_Tests_TestStringFunctions_Param_Substring2Result);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow953);
			// ObjectFlow ObjectFlow955 from Fork(Value) to x
			fUML_Tests_TestStringFunctions_ObjectFlow955->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow955);
			fUML_Tests_TestStringFunctions_ObjectFlow955->setName("ObjectFlow955");
			fUML_Tests_TestStringFunctions_ObjectFlow955->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow955->setSource(fUML_Tests_TestStringFunctions_Fork_Value);
			fUML_Tests_TestStringFunctions_ObjectFlow955->setTarget(fUML_Tests_TestStringFunctions_Call_Substringminus1_x);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow955);
			// ObjectFlow ObjectFlow928 from Fork(Value) to x
			fUML_Tests_TestStringFunctions_ObjectFlow928->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow928);
			fUML_Tests_TestStringFunctions_ObjectFlow928->setName("ObjectFlow928");
			fUML_Tests_TestStringFunctions_ObjectFlow928->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow928->setSource(fUML_Tests_TestStringFunctions_Fork_Value);
			fUML_Tests_TestStringFunctions_ObjectFlow928->setTarget(fUML_Tests_TestStringFunctions_Call_Substringminus2_x);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow928);
			// ObjectFlow ObjectFlow957 from Fork(Substring-1) to Concat.x
			fUML_Tests_TestStringFunctions_ObjectFlow957->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow957);
			fUML_Tests_TestStringFunctions_ObjectFlow957->setName("ObjectFlow957");
			fUML_Tests_TestStringFunctions_ObjectFlow957->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow957->setSource(fUML_Tests_TestStringFunctions_Fork_Substringminus1);
			fUML_Tests_TestStringFunctions_ObjectFlow957->setTarget(fUML_Tests_TestStringFunctions_Call_Concat_Concat_x);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow957);
			// ObjectFlow ObjectFlow959 from Value(9).result to upper
			fUML_Tests_TestStringFunctions_ObjectFlow959->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow959);
			fUML_Tests_TestStringFunctions_ObjectFlow959->setName("ObjectFlow959");
			fUML_Tests_TestStringFunctions_ObjectFlow959->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow959->setSource(fUML_Tests_TestStringFunctions_Value_9_Value_9_result);
			fUML_Tests_TestStringFunctions_ObjectFlow959->setTarget(fUML_Tests_TestStringFunctions_Call_Substringminus2_upper);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow959);
			// ObjectFlow ObjectFlow966 from Concat.result to Param(ConcatResult)
			fUML_Tests_TestStringFunctions_ObjectFlow966->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow966);
			fUML_Tests_TestStringFunctions_ObjectFlow966->setName("ObjectFlow966");
			fUML_Tests_TestStringFunctions_ObjectFlow966->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow966->setSource(fUML_Tests_TestStringFunctions_Call_Concat_Concat_result);
			fUML_Tests_TestStringFunctions_ObjectFlow966->setTarget(fUML_Tests_TestStringFunctions_Param_ConcatResult);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow966);
			// ObjectFlow ObjectFlow930 from result to Fork(Substring-1)
			fUML_Tests_TestStringFunctions_ObjectFlow930->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow930);
			fUML_Tests_TestStringFunctions_ObjectFlow930->setName("ObjectFlow930");
			fUML_Tests_TestStringFunctions_ObjectFlow930->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow930->setSource(fUML_Tests_TestStringFunctions_Call_Substringminus1_result);
			fUML_Tests_TestStringFunctions_ObjectFlow930->setTarget(fUML_Tests_TestStringFunctions_Fork_Substringminus1);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow930);
			// ObjectFlow ObjectFlow968 from result to Fork(Substring-2)
			fUML_Tests_TestStringFunctions_ObjectFlow968->setThisActivityEdgePtr(fUML_Tests_TestStringFunctions_ObjectFlow968);
			fUML_Tests_TestStringFunctions_ObjectFlow968->setName("ObjectFlow968");
			fUML_Tests_TestStringFunctions_ObjectFlow968->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestStringFunctions_ObjectFlow968->setSource(fUML_Tests_TestStringFunctions_Call_Substringminus2_result);
			fUML_Tests_TestStringFunctions_ObjectFlow968->setTarget(fUML_Tests_TestStringFunctions_Fork_Substringminus2);
		fUML_Tests_TestStringFunctions->addEdge(fUML_Tests_TestStringFunctions_ObjectFlow968);
	fUML_Tests->addPackagedElement(fUML_Tests_TestStringFunctions);
		// Activity TestClassReclassifier
		fUML_Tests_TestClassReclassifier->setThisActivityPtr(fUML_Tests_TestClassReclassifier);
		fUML_Tests_TestClassReclassifier->setName("TestClassReclassifier");
		fUML_Tests_TestClassReclassifier->setVisibility(VisibilityKind::public_);
			// Parameter result
			fUML_Tests_TestClassReclassifier_result->setThisElementPtr(fUML_Tests_TestClassReclassifier_result);
			fUML_Tests_TestClassReclassifier_result->setName("result");
			fUML_Tests_TestClassReclassifier_result->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassReclassifier_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassReclassifier_result->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassReclassifier->addOwnedParameter(fUML_Tests_TestClassReclassifier_result);
			// ValueSpecificationAction Value(true)
			fUML_Tests_TestClassReclassifier_Value_true->setThisExecutableNodePtr(fUML_Tests_TestClassReclassifier_Value_true);
			fUML_Tests_TestClassReclassifier_Value_true->setName("Value(true)");
			fUML_Tests_TestClassReclassifier_Value_true->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean980
				fUML_Tests_TestClassReclassifier_Value_true_LiteralBoolean980->setThisElementPtr(fUML_Tests_TestClassReclassifier_Value_true_LiteralBoolean980);
				fUML_Tests_TestClassReclassifier_Value_true_LiteralBoolean980->setName("LiteralBoolean980");
				fUML_Tests_TestClassReclassifier_Value_true_LiteralBoolean980->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Value_true_LiteralBoolean980->setValue(true);
			fUML_Tests_TestClassReclassifier_Value_true->setValue(fUML_Tests_TestClassReclassifier_Value_true_LiteralBoolean980);
				// OutputPin result
				fUML_Tests_TestClassReclassifier_Value_true_result->setThisElementPtr(fUML_Tests_TestClassReclassifier_Value_true_result);
				fUML_Tests_TestClassReclassifier_Value_true_result->setName("result");
				fUML_Tests_TestClassReclassifier_Value_true_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Value_true_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestClassReclassifier_Value_true->setResult(fUML_Tests_TestClassReclassifier_Value_true_result);
		fUML_Tests_TestClassReclassifier->addNode(fUML_Tests_TestClassReclassifier_Value_true);
			// ActivityParameterNode resultNode
			fUML_Tests_TestClassReclassifier_resultNode->setThisElementPtr(fUML_Tests_TestClassReclassifier_resultNode);
			fUML_Tests_TestClassReclassifier_resultNode->setName("resultNode");
			fUML_Tests_TestClassReclassifier_resultNode->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassReclassifier_resultNode->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassReclassifier_resultNode->setParameter(fUML_Tests_TestClassReclassifier_result);
		fUML_Tests_TestClassReclassifier->addNode(fUML_Tests_TestClassReclassifier_resultNode);
			// ValueSpecificationAction Value(2)
			fUML_Tests_TestClassReclassifier_Value_2->setThisExecutableNodePtr(fUML_Tests_TestClassReclassifier_Value_2);
			fUML_Tests_TestClassReclassifier_Value_2->setName("Value(2)");
			fUML_Tests_TestClassReclassifier_Value_2->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger996
				fUML_Tests_TestClassReclassifier_Value_2_LiteralInteger996->setThisElementPtr(fUML_Tests_TestClassReclassifier_Value_2_LiteralInteger996);
				fUML_Tests_TestClassReclassifier_Value_2_LiteralInteger996->setName("LiteralInteger996");
				fUML_Tests_TestClassReclassifier_Value_2_LiteralInteger996->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Value_2_LiteralInteger996->setValue(2);
			fUML_Tests_TestClassReclassifier_Value_2->setValue(fUML_Tests_TestClassReclassifier_Value_2_LiteralInteger996);
				// OutputPin result
				fUML_Tests_TestClassReclassifier_Value_2_result->setThisElementPtr(fUML_Tests_TestClassReclassifier_Value_2_result);
				fUML_Tests_TestClassReclassifier_Value_2_result->setName("result");
				fUML_Tests_TestClassReclassifier_Value_2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Value_2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassReclassifier_Value_2->setResult(fUML_Tests_TestClassReclassifier_Value_2_result);
		fUML_Tests_TestClassReclassifier->addNode(fUML_Tests_TestClassReclassifier_Value_2);
			// AddStructuralFeatureValueAction Write(a)
			fUML_Tests_TestClassReclassifier_Write_a->setThisExecutableNodePtr(fUML_Tests_TestClassReclassifier_Write_a);
			fUML_Tests_TestClassReclassifier_Write_a->setName("Write(a)");
			fUML_Tests_TestClassReclassifier_Write_a->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassReclassifier_Write_a->setStructuralFeature(fUML_Tests_Subclass1_a);
				// InputPin object
				fUML_Tests_TestClassReclassifier_Write_a_object->setThisElementPtr(fUML_Tests_TestClassReclassifier_Write_a_object);
				fUML_Tests_TestClassReclassifier_Write_a_object->setName("object");
				fUML_Tests_TestClassReclassifier_Write_a_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Write_a_object->setType(fUML_Tests_Subclass1);
			fUML_Tests_TestClassReclassifier_Write_a->setObject(fUML_Tests_TestClassReclassifier_Write_a_object);
				// InputPin value
				fUML_Tests_TestClassReclassifier_Write_a_value->setThisElementPtr(fUML_Tests_TestClassReclassifier_Write_a_value);
				fUML_Tests_TestClassReclassifier_Write_a_value->setName("value");
				fUML_Tests_TestClassReclassifier_Write_a_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Write_a_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestClassReclassifier_Write_a->setValue(fUML_Tests_TestClassReclassifier_Write_a_value);
				// OutputPin result
				fUML_Tests_TestClassReclassifier_Write_a_result->setThisElementPtr(fUML_Tests_TestClassReclassifier_Write_a_result);
				fUML_Tests_TestClassReclassifier_Write_a_result->setName("result");
				fUML_Tests_TestClassReclassifier_Write_a_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Write_a_result->setType(fUML_Tests_Subclass1);
			fUML_Tests_TestClassReclassifier_Write_a->setResult(fUML_Tests_TestClassReclassifier_Write_a_result);
		fUML_Tests_TestClassReclassifier->addNode(fUML_Tests_TestClassReclassifier_Write_a);
			// ForkNode ForkNode981
			fUML_Tests_TestClassReclassifier_ForkNode981->setThisElementPtr(fUML_Tests_TestClassReclassifier_ForkNode981);
			fUML_Tests_TestClassReclassifier_ForkNode981->setName("ForkNode981");
			fUML_Tests_TestClassReclassifier_ForkNode981->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestClassReclassifier->addNode(fUML_Tests_TestClassReclassifier_ForkNode981);
			// ValueSpecificationAction Value(1)
			fUML_Tests_TestClassReclassifier_Value_1->setThisExecutableNodePtr(fUML_Tests_TestClassReclassifier_Value_1);
			fUML_Tests_TestClassReclassifier_Value_1->setName("Value(1)");
			fUML_Tests_TestClassReclassifier_Value_1->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1005
				fUML_Tests_TestClassReclassifier_Value_1_LiteralInteger1005->setThisElementPtr(fUML_Tests_TestClassReclassifier_Value_1_LiteralInteger1005);
				fUML_Tests_TestClassReclassifier_Value_1_LiteralInteger1005->setName("LiteralInteger1005");
				fUML_Tests_TestClassReclassifier_Value_1_LiteralInteger1005->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Value_1_LiteralInteger1005->setValue(1);
			fUML_Tests_TestClassReclassifier_Value_1->setValue(fUML_Tests_TestClassReclassifier_Value_1_LiteralInteger1005);
				// OutputPin result
				fUML_Tests_TestClassReclassifier_Value_1_result->setThisElementPtr(fUML_Tests_TestClassReclassifier_Value_1_result);
				fUML_Tests_TestClassReclassifier_Value_1_result->setName("result");
				fUML_Tests_TestClassReclassifier_Value_1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Value_1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassReclassifier_Value_1->setResult(fUML_Tests_TestClassReclassifier_Value_1_result);
		fUML_Tests_TestClassReclassifier->addNode(fUML_Tests_TestClassReclassifier_Value_1);
			// AddStructuralFeatureValueAction Write(y)
			fUML_Tests_TestClassReclassifier_Write_y->setThisExecutableNodePtr(fUML_Tests_TestClassReclassifier_Write_y);
			fUML_Tests_TestClassReclassifier_Write_y->setName("Write(y)");
			fUML_Tests_TestClassReclassifier_Write_y->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassReclassifier_Write_y->setStructuralFeature(fUML_Tests_TestClass_y);
				// InputPin object
				fUML_Tests_TestClassReclassifier_Write_y_object->setThisElementPtr(fUML_Tests_TestClassReclassifier_Write_y_object);
				fUML_Tests_TestClassReclassifier_Write_y_object->setName("object");
				fUML_Tests_TestClassReclassifier_Write_y_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Write_y_object->setType(fUML_Tests_Subclass1);
			fUML_Tests_TestClassReclassifier_Write_y->setObject(fUML_Tests_TestClassReclassifier_Write_y_object);
				// InputPin value
				fUML_Tests_TestClassReclassifier_Write_y_value->setThisElementPtr(fUML_Tests_TestClassReclassifier_Write_y_value);
				fUML_Tests_TestClassReclassifier_Write_y_value->setName("value");
				fUML_Tests_TestClassReclassifier_Write_y_value->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassReclassifier_Write_y->setValue(fUML_Tests_TestClassReclassifier_Write_y_value);
				// OutputPin result
				fUML_Tests_TestClassReclassifier_Write_y_result->setThisElementPtr(fUML_Tests_TestClassReclassifier_Write_y_result);
				fUML_Tests_TestClassReclassifier_Write_y_result->setName("result");
				fUML_Tests_TestClassReclassifier_Write_y_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Write_y_result->setType(fUML_Tests_Subclass1);
			fUML_Tests_TestClassReclassifier_Write_y->setResult(fUML_Tests_TestClassReclassifier_Write_y_result);
			fUML_Tests_TestClassReclassifier_Write_y->setIsReplaceAll(true);
		fUML_Tests_TestClassReclassifier->addNode(fUML_Tests_TestClassReclassifier_Write_y);
			// CreateObjectAction Create(Subclass1)
			fUML_Tests_TestClassReclassifier_Create_Subclass1->setThisExecutableNodePtr(fUML_Tests_TestClassReclassifier_Create_Subclass1);
			fUML_Tests_TestClassReclassifier_Create_Subclass1->setName("Create(Subclass1)");
			fUML_Tests_TestClassReclassifier_Create_Subclass1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassReclassifier_Create_Subclass1->setClassifier(fUML_Tests_Subclass1);
				// OutputPin result
				fUML_Tests_TestClassReclassifier_Create_Subclass1_result->setThisElementPtr(fUML_Tests_TestClassReclassifier_Create_Subclass1_result);
				fUML_Tests_TestClassReclassifier_Create_Subclass1_result->setName("result");
				fUML_Tests_TestClassReclassifier_Create_Subclass1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Create_Subclass1_result->setType(fUML_Tests_Subclass1);
			fUML_Tests_TestClassReclassifier_Create_Subclass1->setResult(fUML_Tests_TestClassReclassifier_Create_Subclass1_result);
		fUML_Tests_TestClassReclassifier->addNode(fUML_Tests_TestClassReclassifier_Create_Subclass1);
			// ReclassifyObjectAction Reclassify(Subclass2)
			fUML_Tests_TestClassReclassifier_Reclassify_Subclass2->setThisExecutableNodePtr(fUML_Tests_TestClassReclassifier_Reclassify_Subclass2);
			fUML_Tests_TestClassReclassifier_Reclassify_Subclass2->setName("Reclassify(Subclass2)");
			fUML_Tests_TestClassReclassifier_Reclassify_Subclass2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassReclassifier_Reclassify_Subclass2->addOldClassifier(fUML_Tests_Subclass1);
			fUML_Tests_TestClassReclassifier_Reclassify_Subclass2->addNewClassifier(fUML_Tests_Subclass2);
				// InputPin object
				fUML_Tests_TestClassReclassifier_Reclassify_Subclass2_object->setThisElementPtr(fUML_Tests_TestClassReclassifier_Reclassify_Subclass2_object);
				fUML_Tests_TestClassReclassifier_Reclassify_Subclass2_object->setName("object");
				fUML_Tests_TestClassReclassifier_Reclassify_Subclass2_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Reclassify_Subclass2_object->setType(fUML_Tests_Subclass1);
			fUML_Tests_TestClassReclassifier_Reclassify_Subclass2->setObject(fUML_Tests_TestClassReclassifier_Reclassify_Subclass2_object);
		fUML_Tests_TestClassReclassifier->addNode(fUML_Tests_TestClassReclassifier_Reclassify_Subclass2);
			// AddStructuralFeatureValueAction Write(x)
			fUML_Tests_TestClassReclassifier_Write_x->setThisExecutableNodePtr(fUML_Tests_TestClassReclassifier_Write_x);
			fUML_Tests_TestClassReclassifier_Write_x->setName("Write(x)");
			fUML_Tests_TestClassReclassifier_Write_x->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassReclassifier_Write_x->setStructuralFeature(fUML_Tests_TestClass_x);
				// InputPin object
				fUML_Tests_TestClassReclassifier_Write_x_object->setThisElementPtr(fUML_Tests_TestClassReclassifier_Write_x_object);
				fUML_Tests_TestClassReclassifier_Write_x_object->setName("object");
				fUML_Tests_TestClassReclassifier_Write_x_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Write_x_object->setType(fUML_Tests_Subclass1);
			fUML_Tests_TestClassReclassifier_Write_x->setObject(fUML_Tests_TestClassReclassifier_Write_x_object);
				// InputPin value
				fUML_Tests_TestClassReclassifier_Write_x_value->setThisElementPtr(fUML_Tests_TestClassReclassifier_Write_x_value);
				fUML_Tests_TestClassReclassifier_Write_x_value->setName("value");
				fUML_Tests_TestClassReclassifier_Write_x_value->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassReclassifier_Write_x->setValue(fUML_Tests_TestClassReclassifier_Write_x_value);
				// OutputPin result
				fUML_Tests_TestClassReclassifier_Write_x_result->setThisElementPtr(fUML_Tests_TestClassReclassifier_Write_x_result);
				fUML_Tests_TestClassReclassifier_Write_x_result->setName("result");
				fUML_Tests_TestClassReclassifier_Write_x_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassReclassifier_Write_x_result->setType(fUML_Tests_Subclass1);
			fUML_Tests_TestClassReclassifier_Write_x->setResult(fUML_Tests_TestClassReclassifier_Write_x_result);
		fUML_Tests_TestClassReclassifier->addNode(fUML_Tests_TestClassReclassifier_Write_x);
			// ObjectFlow ObjectFlow970 from result to object
			fUML_Tests_TestClassReclassifier_ObjectFlow970->setThisActivityEdgePtr(fUML_Tests_TestClassReclassifier_ObjectFlow970);
			fUML_Tests_TestClassReclassifier_ObjectFlow970->setName("ObjectFlow970");
			fUML_Tests_TestClassReclassifier_ObjectFlow970->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassReclassifier_ObjectFlow970->setSource(fUML_Tests_TestClassReclassifier_Create_Subclass1_result);
			fUML_Tests_TestClassReclassifier_ObjectFlow970->setTarget(fUML_Tests_TestClassReclassifier_Write_x_object);
		fUML_Tests_TestClassReclassifier->addEdge(fUML_Tests_TestClassReclassifier_ObjectFlow970);
			// ObjectFlow ObjectFlow972 from result to object
			fUML_Tests_TestClassReclassifier_ObjectFlow972->setThisActivityEdgePtr(fUML_Tests_TestClassReclassifier_ObjectFlow972);
			fUML_Tests_TestClassReclassifier_ObjectFlow972->setName("ObjectFlow972");
			fUML_Tests_TestClassReclassifier_ObjectFlow972->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassReclassifier_ObjectFlow972->setSource(fUML_Tests_TestClassReclassifier_Write_y_result);
			fUML_Tests_TestClassReclassifier_ObjectFlow972->setTarget(fUML_Tests_TestClassReclassifier_Write_a_object);
		fUML_Tests_TestClassReclassifier->addEdge(fUML_Tests_TestClassReclassifier_ObjectFlow972);
			// ObjectFlow ObjectFlow990 from result to value
			fUML_Tests_TestClassReclassifier_ObjectFlow990->setThisActivityEdgePtr(fUML_Tests_TestClassReclassifier_ObjectFlow990);
			fUML_Tests_TestClassReclassifier_ObjectFlow990->setName("ObjectFlow990");
			fUML_Tests_TestClassReclassifier_ObjectFlow990->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassReclassifier_ObjectFlow990->setSource(fUML_Tests_TestClassReclassifier_Value_true_result);
			fUML_Tests_TestClassReclassifier_ObjectFlow990->setTarget(fUML_Tests_TestClassReclassifier_Write_a_value);
		fUML_Tests_TestClassReclassifier->addEdge(fUML_Tests_TestClassReclassifier_ObjectFlow990);
			// ObjectFlow ObjectFlow974 from result to ForkNode981
			fUML_Tests_TestClassReclassifier_ObjectFlow974->setThisActivityEdgePtr(fUML_Tests_TestClassReclassifier_ObjectFlow974);
			fUML_Tests_TestClassReclassifier_ObjectFlow974->setName("ObjectFlow974");
			fUML_Tests_TestClassReclassifier_ObjectFlow974->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassReclassifier_ObjectFlow974->setSource(fUML_Tests_TestClassReclassifier_Write_a_result);
			fUML_Tests_TestClassReclassifier_ObjectFlow974->setTarget(fUML_Tests_TestClassReclassifier_ForkNode981);
		fUML_Tests_TestClassReclassifier->addEdge(fUML_Tests_TestClassReclassifier_ObjectFlow974);
			// ObjectFlow ObjectFlow976 from result to object
			fUML_Tests_TestClassReclassifier_ObjectFlow976->setThisActivityEdgePtr(fUML_Tests_TestClassReclassifier_ObjectFlow976);
			fUML_Tests_TestClassReclassifier_ObjectFlow976->setName("ObjectFlow976");
			fUML_Tests_TestClassReclassifier_ObjectFlow976->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassReclassifier_ObjectFlow976->setSource(fUML_Tests_TestClassReclassifier_Write_x_result);
			fUML_Tests_TestClassReclassifier_ObjectFlow976->setTarget(fUML_Tests_TestClassReclassifier_Write_y_object);
		fUML_Tests_TestClassReclassifier->addEdge(fUML_Tests_TestClassReclassifier_ObjectFlow976);
			// ObjectFlow ObjectFlow992 from result to value
			fUML_Tests_TestClassReclassifier_ObjectFlow992->setThisActivityEdgePtr(fUML_Tests_TestClassReclassifier_ObjectFlow992);
			fUML_Tests_TestClassReclassifier_ObjectFlow992->setName("ObjectFlow992");
			fUML_Tests_TestClassReclassifier_ObjectFlow992->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassReclassifier_ObjectFlow992->setSource(fUML_Tests_TestClassReclassifier_Value_1_result);
			fUML_Tests_TestClassReclassifier_ObjectFlow992->setTarget(fUML_Tests_TestClassReclassifier_Write_x_value);
		fUML_Tests_TestClassReclassifier->addEdge(fUML_Tests_TestClassReclassifier_ObjectFlow992);
			// ObjectFlow ObjectFlow982 from result to value
			fUML_Tests_TestClassReclassifier_ObjectFlow982->setThisActivityEdgePtr(fUML_Tests_TestClassReclassifier_ObjectFlow982);
			fUML_Tests_TestClassReclassifier_ObjectFlow982->setName("ObjectFlow982");
			fUML_Tests_TestClassReclassifier_ObjectFlow982->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassReclassifier_ObjectFlow982->setSource(fUML_Tests_TestClassReclassifier_Value_2_result);
			fUML_Tests_TestClassReclassifier_ObjectFlow982->setTarget(fUML_Tests_TestClassReclassifier_Write_y_value);
		fUML_Tests_TestClassReclassifier->addEdge(fUML_Tests_TestClassReclassifier_ObjectFlow982);
			// ObjectFlow ObjectFlow1006 from ForkNode981 to resultNode
			fUML_Tests_TestClassReclassifier_ObjectFlow1006->setThisActivityEdgePtr(fUML_Tests_TestClassReclassifier_ObjectFlow1006);
			fUML_Tests_TestClassReclassifier_ObjectFlow1006->setName("ObjectFlow1006");
			fUML_Tests_TestClassReclassifier_ObjectFlow1006->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassReclassifier_ObjectFlow1006->setSource(fUML_Tests_TestClassReclassifier_ForkNode981);
			fUML_Tests_TestClassReclassifier_ObjectFlow1006->setTarget(fUML_Tests_TestClassReclassifier_resultNode);
		fUML_Tests_TestClassReclassifier->addEdge(fUML_Tests_TestClassReclassifier_ObjectFlow1006);
			// ObjectFlow ObjectFlow1008 from ForkNode981 to object
			fUML_Tests_TestClassReclassifier_ObjectFlow1008->setThisActivityEdgePtr(fUML_Tests_TestClassReclassifier_ObjectFlow1008);
			fUML_Tests_TestClassReclassifier_ObjectFlow1008->setName("ObjectFlow1008");
			fUML_Tests_TestClassReclassifier_ObjectFlow1008->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassReclassifier_ObjectFlow1008->setSource(fUML_Tests_TestClassReclassifier_ForkNode981);
			fUML_Tests_TestClassReclassifier_ObjectFlow1008->setTarget(fUML_Tests_TestClassReclassifier_Reclassify_Subclass2_object);
		fUML_Tests_TestClassReclassifier->addEdge(fUML_Tests_TestClassReclassifier_ObjectFlow1008);
	fUML_Tests->addPackagedElement(fUML_Tests_TestClassReclassifier);
		// Association TestAssociation
		fUML_Tests_TestAssociation->setThisAssociationPtr(fUML_Tests_TestAssociation);
		fUML_Tests_TestAssociation->setName("TestAssociation");
		fUML_Tests_TestAssociation->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestAssociation->addOwnedEnd(fUML_Tests_TestAssociation_end1);
		fUML_Tests_TestAssociation->addOwnedEnd(fUML_Tests_TestAssociation_end2);
		fUML_Tests_TestAssociation->addNavigableOwnedEnd(fUML_Tests_TestAssociation_end1);
		fUML_Tests_TestAssociation->addNavigableOwnedEnd(fUML_Tests_TestAssociation_end2);
	fUML_Tests->addPackagedElement(fUML_Tests_TestAssociation);
		// Activity TestClassUnmarshaller
		fUML_Tests_TestClassUnmarshaller->setThisActivityPtr(fUML_Tests_TestClassUnmarshaller);
		fUML_Tests_TestClassUnmarshaller->setName("TestClassUnmarshaller");
		fUML_Tests_TestClassUnmarshaller->setVisibility(VisibilityKind::public_);
			// Parameter x
			fUML_Tests_TestClassUnmarshaller_x->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_x);
			fUML_Tests_TestClassUnmarshaller_x->setName("x");
			fUML_Tests_TestClassUnmarshaller_x->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_x->setUpper(-1);
			fUML_Tests_TestClassUnmarshaller_x->setLower(0);
			fUML_Tests_TestClassUnmarshaller_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_x->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassUnmarshaller->addOwnedParameter(fUML_Tests_TestClassUnmarshaller_x);
			// Parameter y
			fUML_Tests_TestClassUnmarshaller_y->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_y);
			fUML_Tests_TestClassUnmarshaller_y->setName("y");
			fUML_Tests_TestClassUnmarshaller_y->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_y->setUpper(-1);
			fUML_Tests_TestClassUnmarshaller_y->setLower(0);
			fUML_Tests_TestClassUnmarshaller_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_y->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassUnmarshaller->addOwnedParameter(fUML_Tests_TestClassUnmarshaller_y);
			// AddStructuralFeatureValueAction Write(x)
			fUML_Tests_TestClassUnmarshaller_Write_x->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Write_x);
			fUML_Tests_TestClassUnmarshaller_Write_x->setName("Write(x)");
			fUML_Tests_TestClassUnmarshaller_Write_x->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Write_x->setStructuralFeature(fUML_Tests_TestClass_x);
				// InputPin object
				fUML_Tests_TestClassUnmarshaller_Write_x_object->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_x_object);
				fUML_Tests_TestClassUnmarshaller_Write_x_object->setName("object");
				fUML_Tests_TestClassUnmarshaller_Write_x_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_x_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassUnmarshaller_Write_x->setObject(fUML_Tests_TestClassUnmarshaller_Write_x_object);
				// InputPin value
				fUML_Tests_TestClassUnmarshaller_Write_x_value->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_x_value);
				fUML_Tests_TestClassUnmarshaller_Write_x_value->setName("value");
				fUML_Tests_TestClassUnmarshaller_Write_x_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_x_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Write_x->setValue(fUML_Tests_TestClassUnmarshaller_Write_x_value);
				// OutputPin result
				fUML_Tests_TestClassUnmarshaller_Write_x_result->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_x_result);
				fUML_Tests_TestClassUnmarshaller_Write_x_result->setName("result");
				fUML_Tests_TestClassUnmarshaller_Write_x_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_x_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassUnmarshaller_Write_x->setResult(fUML_Tests_TestClassUnmarshaller_Write_x_result);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Write_x);
			// ValueSpecificationAction Value(0)
			fUML_Tests_TestClassUnmarshaller_Value_0->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Value_0);
			fUML_Tests_TestClassUnmarshaller_Value_0->setName("Value(0)");
			fUML_Tests_TestClassUnmarshaller_Value_0->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1034
				fUML_Tests_TestClassUnmarshaller_Value_0_LiteralInteger1034->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Value_0_LiteralInteger1034);
				fUML_Tests_TestClassUnmarshaller_Value_0_LiteralInteger1034->setName("LiteralInteger1034");
				fUML_Tests_TestClassUnmarshaller_Value_0_LiteralInteger1034->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Value_0_LiteralInteger1034->setValue(0);
			fUML_Tests_TestClassUnmarshaller_Value_0->setValue(fUML_Tests_TestClassUnmarshaller_Value_0_LiteralInteger1034);
				// OutputPin result
				fUML_Tests_TestClassUnmarshaller_Value_0_result->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Value_0_result);
				fUML_Tests_TestClassUnmarshaller_Value_0_result->setName("result");
				fUML_Tests_TestClassUnmarshaller_Value_0_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Value_0_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Value_0->setResult(fUML_Tests_TestClassUnmarshaller_Value_0_result);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Value_0);
			// UnmarshallAction Unmarshall(TestClass)
			fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass);
			fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass->setName("Unmarshall(TestClass)");
			fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass->setUnmarshallType(fUML_Tests_TestClass);
				// InputPin object
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object->setName("object");
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass->setObject(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object);
				// OutputPin result(x)
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x->setName("result(x)");
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass->addResult(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x);
				// OutputPin result(y)
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y->setName("result(y)");
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y->setUpper(-1);
				fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y->setLower(0);
			fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass->addResult(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass);
			// ValueSpecificationAction Value(1)
			fUML_Tests_TestClassUnmarshaller_Value_1->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Value_1);
			fUML_Tests_TestClassUnmarshaller_Value_1->setName("Value(1)");
			fUML_Tests_TestClassUnmarshaller_Value_1->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1073
				fUML_Tests_TestClassUnmarshaller_Value_1_LiteralInteger1073->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Value_1_LiteralInteger1073);
				fUML_Tests_TestClassUnmarshaller_Value_1_LiteralInteger1073->setName("LiteralInteger1073");
				fUML_Tests_TestClassUnmarshaller_Value_1_LiteralInteger1073->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Value_1_LiteralInteger1073->setValue(1);
			fUML_Tests_TestClassUnmarshaller_Value_1->setValue(fUML_Tests_TestClassUnmarshaller_Value_1_LiteralInteger1073);
				// OutputPin result
				fUML_Tests_TestClassUnmarshaller_Value_1_result->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Value_1_result);
				fUML_Tests_TestClassUnmarshaller_Value_1_result->setName("result");
				fUML_Tests_TestClassUnmarshaller_Value_1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Value_1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Value_1->setResult(fUML_Tests_TestClassUnmarshaller_Value_1_result);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Value_1);
			// CreateObjectAction Create(Subclass1)
			fUML_Tests_TestClassUnmarshaller_Create_Subclass1->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Create_Subclass1);
			fUML_Tests_TestClassUnmarshaller_Create_Subclass1->setName("Create(Subclass1)");
			fUML_Tests_TestClassUnmarshaller_Create_Subclass1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Create_Subclass1->setClassifier(fUML_Tests_Subclass1);
				// OutputPin result
				fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result);
				fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result->setName("result");
				fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassUnmarshaller_Create_Subclass1->setResult(fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Create_Subclass1);
			// ActivityParameterNode Output(y)
			fUML_Tests_TestClassUnmarshaller_Output_y->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Output_y);
			fUML_Tests_TestClassUnmarshaller_Output_y->setName("Output(y)");
			fUML_Tests_TestClassUnmarshaller_Output_y->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Output_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Output_y->setParameter(fUML_Tests_TestClassUnmarshaller_y);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Output_y);
			// ValueSpecificationAction Value(true)
			fUML_Tests_TestClassUnmarshaller_Value_true->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Value_true);
			fUML_Tests_TestClassUnmarshaller_Value_true->setName("Value(true)");
			fUML_Tests_TestClassUnmarshaller_Value_true->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1039
				fUML_Tests_TestClassUnmarshaller_Value_true_LiteralBoolean1039->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Value_true_LiteralBoolean1039);
				fUML_Tests_TestClassUnmarshaller_Value_true_LiteralBoolean1039->setName("LiteralBoolean1039");
				fUML_Tests_TestClassUnmarshaller_Value_true_LiteralBoolean1039->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Value_true_LiteralBoolean1039->setValue(true);
			fUML_Tests_TestClassUnmarshaller_Value_true->setValue(fUML_Tests_TestClassUnmarshaller_Value_true_LiteralBoolean1039);
				// OutputPin result
				fUML_Tests_TestClassUnmarshaller_Value_true_result->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Value_true_result);
				fUML_Tests_TestClassUnmarshaller_Value_true_result->setName("result");
				fUML_Tests_TestClassUnmarshaller_Value_true_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Value_true_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Value_true->setResult(fUML_Tests_TestClassUnmarshaller_Value_true_result);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Value_true);
			// ActivityParameterNode Output(x)
			fUML_Tests_TestClassUnmarshaller_Output_x->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Output_x);
			fUML_Tests_TestClassUnmarshaller_Output_x->setName("Output(x)");
			fUML_Tests_TestClassUnmarshaller_Output_x->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Output_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Output_x->setParameter(fUML_Tests_TestClassUnmarshaller_x);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Output_x);
			// ValueSpecificationAction Value(*)
			fUML_Tests_TestClassUnmarshaller_Value_times->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Value_times);
			fUML_Tests_TestClassUnmarshaller_Value_times->setName("Value(*)");
			fUML_Tests_TestClassUnmarshaller_Value_times->setVisibility(VisibilityKind::public_);
				// LiteralUnlimitedNatural LiteralUnlimitedNatural1080
				fUML_Tests_TestClassUnmarshaller_Value_times_LiteralUnlimitedNatural1080->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Value_times_LiteralUnlimitedNatural1080);
				fUML_Tests_TestClassUnmarshaller_Value_times_LiteralUnlimitedNatural1080->setName("LiteralUnlimitedNatural1080");
				fUML_Tests_TestClassUnmarshaller_Value_times_LiteralUnlimitedNatural1080->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Value_times_LiteralUnlimitedNatural1080->setValue(-1);
			fUML_Tests_TestClassUnmarshaller_Value_times->setValue(fUML_Tests_TestClassUnmarshaller_Value_times_LiteralUnlimitedNatural1080);
				// OutputPin result
				fUML_Tests_TestClassUnmarshaller_Value_times_result->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Value_times_result);
				fUML_Tests_TestClassUnmarshaller_Value_times_result->setName("result");
				fUML_Tests_TestClassUnmarshaller_Value_times_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Value_times->setResult(fUML_Tests_TestClassUnmarshaller_Value_times_result);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Value_times);
			// AddStructuralFeatureValueAction Write(y[1])
			fUML_Tests_TestClassUnmarshaller_Write_y_1->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Write_y_1);
			fUML_Tests_TestClassUnmarshaller_Write_y_1->setName("Write(y[1])");
			fUML_Tests_TestClassUnmarshaller_Write_y_1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Write_y_1->setStructuralFeature(fUML_Tests_TestClass_y);
				// InputPin object
				fUML_Tests_TestClassUnmarshaller_Write_y_1_object->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_y_1_object);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_object->setName("object");
				fUML_Tests_TestClassUnmarshaller_Write_y_1_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassUnmarshaller_Write_y_1->setObject(fUML_Tests_TestClassUnmarshaller_Write_y_1_object);
				// InputPin value
				fUML_Tests_TestClassUnmarshaller_Write_y_1_value->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_y_1_value);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_value->setName("value");
				fUML_Tests_TestClassUnmarshaller_Write_y_1_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Write_y_1->setValue(fUML_Tests_TestClassUnmarshaller_Write_y_1_value);
				// OutputPin result
				fUML_Tests_TestClassUnmarshaller_Write_y_1_result->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_y_1_result);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_result->setName("result");
				fUML_Tests_TestClassUnmarshaller_Write_y_1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassUnmarshaller_Write_y_1->setResult(fUML_Tests_TestClassUnmarshaller_Write_y_1_result);
				// InputPin insertAt
				fUML_Tests_TestClassUnmarshaller_Write_y_1_insertAt->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_y_1_insertAt);
				fUML_Tests_TestClassUnmarshaller_Write_y_1_insertAt->setName("insertAt");
				fUML_Tests_TestClassUnmarshaller_Write_y_1_insertAt->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Write_y_1->setInsertAt(fUML_Tests_TestClassUnmarshaller_Write_y_1_insertAt);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Write_y_1);
			// ForkNode ForkNode1054
			fUML_Tests_TestClassUnmarshaller_ForkNode1054->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_ForkNode1054);
			fUML_Tests_TestClassUnmarshaller_ForkNode1054->setName("ForkNode1054");
			fUML_Tests_TestClassUnmarshaller_ForkNode1054->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_ForkNode1054);
			// ValueSpecificationAction Value(2)
			fUML_Tests_TestClassUnmarshaller_Value_2->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Value_2);
			fUML_Tests_TestClassUnmarshaller_Value_2->setName("Value(2)");
			fUML_Tests_TestClassUnmarshaller_Value_2->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1087
				fUML_Tests_TestClassUnmarshaller_Value_2_LiteralInteger1087->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Value_2_LiteralInteger1087);
				fUML_Tests_TestClassUnmarshaller_Value_2_LiteralInteger1087->setName("LiteralInteger1087");
				fUML_Tests_TestClassUnmarshaller_Value_2_LiteralInteger1087->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Value_2_LiteralInteger1087->setValue(2);
			fUML_Tests_TestClassUnmarshaller_Value_2->setValue(fUML_Tests_TestClassUnmarshaller_Value_2_LiteralInteger1087);
				// OutputPin result
				fUML_Tests_TestClassUnmarshaller_Value_2_result->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Value_2_result);
				fUML_Tests_TestClassUnmarshaller_Value_2_result->setName("result");
				fUML_Tests_TestClassUnmarshaller_Value_2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Value_2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Value_2->setResult(fUML_Tests_TestClassUnmarshaller_Value_2_result);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Value_2);
			// AddStructuralFeatureValueAction Write(y[2])
			fUML_Tests_TestClassUnmarshaller_Write_y_2->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Write_y_2);
			fUML_Tests_TestClassUnmarshaller_Write_y_2->setName("Write(y[2])");
			fUML_Tests_TestClassUnmarshaller_Write_y_2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Write_y_2->setStructuralFeature(fUML_Tests_TestClass_y);
				// InputPin object
				fUML_Tests_TestClassUnmarshaller_Write_y_2_object->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_y_2_object);
				fUML_Tests_TestClassUnmarshaller_Write_y_2_object->setName("object");
				fUML_Tests_TestClassUnmarshaller_Write_y_2_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_y_2_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassUnmarshaller_Write_y_2->setObject(fUML_Tests_TestClassUnmarshaller_Write_y_2_object);
				// InputPin value
				fUML_Tests_TestClassUnmarshaller_Write_y_2_value->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_y_2_value);
				fUML_Tests_TestClassUnmarshaller_Write_y_2_value->setName("value");
				fUML_Tests_TestClassUnmarshaller_Write_y_2_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_y_2_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Write_y_2->setValue(fUML_Tests_TestClassUnmarshaller_Write_y_2_value);
				// OutputPin result
				fUML_Tests_TestClassUnmarshaller_Write_y_2_result->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_y_2_result);
				fUML_Tests_TestClassUnmarshaller_Write_y_2_result->setName("result");
				fUML_Tests_TestClassUnmarshaller_Write_y_2_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Write_y_2->setResult(fUML_Tests_TestClassUnmarshaller_Write_y_2_result);
				// InputPin insertAt
				fUML_Tests_TestClassUnmarshaller_Write_y_2_insertAt->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_y_2_insertAt);
				fUML_Tests_TestClassUnmarshaller_Write_y_2_insertAt->setName("insertAt");
				fUML_Tests_TestClassUnmarshaller_Write_y_2_insertAt->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Write_y_2->setInsertAt(fUML_Tests_TestClassUnmarshaller_Write_y_2_insertAt);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Write_y_2);
			// AddStructuralFeatureValueAction Write(a)
			fUML_Tests_TestClassUnmarshaller_Write_a->setThisExecutableNodePtr(fUML_Tests_TestClassUnmarshaller_Write_a);
			fUML_Tests_TestClassUnmarshaller_Write_a->setName("Write(a)");
			fUML_Tests_TestClassUnmarshaller_Write_a->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassUnmarshaller_Write_a->setStructuralFeature(fUML_Tests_Subclass1_a);
				// InputPin object
				fUML_Tests_TestClassUnmarshaller_Write_a_object->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_a_object);
				fUML_Tests_TestClassUnmarshaller_Write_a_object->setName("object");
				fUML_Tests_TestClassUnmarshaller_Write_a_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_a_object->setType(fUML_Tests_Subclass1);
			fUML_Tests_TestClassUnmarshaller_Write_a->setObject(fUML_Tests_TestClassUnmarshaller_Write_a_object);
				// InputPin value
				fUML_Tests_TestClassUnmarshaller_Write_a_value->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_a_value);
				fUML_Tests_TestClassUnmarshaller_Write_a_value->setName("value");
				fUML_Tests_TestClassUnmarshaller_Write_a_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_a_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassUnmarshaller_Write_a->setValue(fUML_Tests_TestClassUnmarshaller_Write_a_value);
				// OutputPin result
				fUML_Tests_TestClassUnmarshaller_Write_a_result->setThisElementPtr(fUML_Tests_TestClassUnmarshaller_Write_a_result);
				fUML_Tests_TestClassUnmarshaller_Write_a_result->setName("result");
				fUML_Tests_TestClassUnmarshaller_Write_a_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassUnmarshaller_Write_a_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassUnmarshaller_Write_a->setResult(fUML_Tests_TestClassUnmarshaller_Write_a_result);
		fUML_Tests_TestClassUnmarshaller->addNode(fUML_Tests_TestClassUnmarshaller_Write_a);
			// ObjectFlow ObjectFlow1028 from result to value
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1028->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow1028);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1028->setName("ObjectFlow1028");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1028->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1028->setSource(fUML_Tests_TestClassUnmarshaller_Value_1_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1028->setTarget(fUML_Tests_TestClassUnmarshaller_Write_y_1_value);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow1028);
			// ObjectFlow ObjectFlow1030 from result(y) to Output(y)
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1030->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow1030);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1030->setName("ObjectFlow1030");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1030->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1030->setSource(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_y);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1030->setTarget(fUML_Tests_TestClassUnmarshaller_Output_y);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow1030);
			// ObjectFlow ObjectFlow1032 from ForkNode1054 to insertAt
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1032->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow1032);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1032->setName("ObjectFlow1032");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1032->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1032->setSource(fUML_Tests_TestClassUnmarshaller_ForkNode1054);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1032->setTarget(fUML_Tests_TestClassUnmarshaller_Write_y_1_insertAt);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow1032);
			// ObjectFlow ObjectFlow1063 from result(x) to Output(x)
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1063->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow1063);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1063->setName("ObjectFlow1063");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1063->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1063->setSource(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_result_x);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1063->setTarget(fUML_Tests_TestClassUnmarshaller_Output_x);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow1063);
			// ObjectFlow ObjectFlow1065 from ForkNode1054 to insertAt
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1065->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow1065);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1065->setName("ObjectFlow1065");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1065->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1065->setSource(fUML_Tests_TestClassUnmarshaller_ForkNode1054);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1065->setTarget(fUML_Tests_TestClassUnmarshaller_Write_y_2_insertAt);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow1065);
			// ObjectFlow ObjectFlow1078 from result to object
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1078->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow1078);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1078->setName("ObjectFlow1078");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1078->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1078->setSource(fUML_Tests_TestClassUnmarshaller_Write_y_1_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1078->setTarget(fUML_Tests_TestClassUnmarshaller_Write_y_2_object);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow1078);
			// ObjectFlow ObjectFlow1042 from result to object
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1042->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow1042);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1042->setName("ObjectFlow1042");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1042->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1042->setSource(fUML_Tests_TestClassUnmarshaller_Create_Subclass1_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1042->setTarget(fUML_Tests_TestClassUnmarshaller_Write_x_object);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow1042);
			// ObjectFlow ObjectFlow1044 from result to value
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1044->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow1044);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1044->setName("ObjectFlow1044");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1044->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1044->setSource(fUML_Tests_TestClassUnmarshaller_Value_0_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1044->setTarget(fUML_Tests_TestClassUnmarshaller_Write_x_value);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow1044);
			// ObjectFlow ObjectFlow1046 from result to ForkNode1054
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1046->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow1046);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1046->setName("ObjectFlow1046");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1046->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1046->setSource(fUML_Tests_TestClassUnmarshaller_Value_times_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1046->setTarget(fUML_Tests_TestClassUnmarshaller_ForkNode1054);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow1046);
			// ObjectFlow ObjectFlow1081 from result to object
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1081->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow1081);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1081->setName("ObjectFlow1081");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1081->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1081->setSource(fUML_Tests_TestClassUnmarshaller_Write_a_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1081->setTarget(fUML_Tests_TestClassUnmarshaller_Unmarshall_TestClass_object);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow1081);
			// ObjectFlow ObjectFlow1083 from result to value
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1083->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow1083);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1083->setName("ObjectFlow1083");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1083->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1083->setSource(fUML_Tests_TestClassUnmarshaller_Value_true_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1083->setTarget(fUML_Tests_TestClassUnmarshaller_Write_a_value);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow1083);
			// ObjectFlow ObjectFlow1057 from result to value
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1057->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow1057);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1057->setName("ObjectFlow1057");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1057->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1057->setSource(fUML_Tests_TestClassUnmarshaller_Value_2_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1057->setTarget(fUML_Tests_TestClassUnmarshaller_Write_y_2_value);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow1057);
			// ObjectFlow ObjectFlow1059 from result to object
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1059->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow1059);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1059->setName("ObjectFlow1059");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1059->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1059->setSource(fUML_Tests_TestClassUnmarshaller_Write_x_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1059->setTarget(fUML_Tests_TestClassUnmarshaller_Write_y_1_object);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow1059);
			// ObjectFlow ObjectFlow1061 from result to object
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1061->setThisActivityEdgePtr(fUML_Tests_TestClassUnmarshaller_ObjectFlow1061);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1061->setName("ObjectFlow1061");
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1061->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1061->setSource(fUML_Tests_TestClassUnmarshaller_Write_y_2_result);
			fUML_Tests_TestClassUnmarshaller_ObjectFlow1061->setTarget(fUML_Tests_TestClassUnmarshaller_Write_a_object);
		fUML_Tests_TestClassUnmarshaller->addEdge(fUML_Tests_TestClassUnmarshaller_ObjectFlow1061);
	fUML_Tests->addPackagedElement(fUML_Tests_TestClassUnmarshaller);
		// Activity GenerateBooleanTestData
		fUML_Tests_GenerateBooleanTestData->setThisActivityPtr(fUML_Tests_GenerateBooleanTestData);
		fUML_Tests_GenerateBooleanTestData->setName("GenerateBooleanTestData");
		fUML_Tests_GenerateBooleanTestData->setVisibility(VisibilityKind::public_);
		fUML_Tests_GenerateBooleanTestData->isReentrant = false;
			// Parameter argumentData1
			fUML_Tests_GenerateBooleanTestData_argumentData1->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_argumentData1);
			fUML_Tests_GenerateBooleanTestData_argumentData1->setName("argumentData1");
			fUML_Tests_GenerateBooleanTestData_argumentData1->setVisibility(VisibilityKind::public_);
			fUML_Tests_GenerateBooleanTestData_argumentData1->setIsOrdered(true);
			fUML_Tests_GenerateBooleanTestData_argumentData1->setUpper(4);
			fUML_Tests_GenerateBooleanTestData_argumentData1->setLower(4);
			fUML_Tests_GenerateBooleanTestData_argumentData1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_argumentData1->setDirection(ParameterDirectionKind::out);
		fUML_Tests_GenerateBooleanTestData->addOwnedParameter(fUML_Tests_GenerateBooleanTestData_argumentData1);
			// Parameter argumentData2
			fUML_Tests_GenerateBooleanTestData_argumentData2->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_argumentData2);
			fUML_Tests_GenerateBooleanTestData_argumentData2->setName("argumentData2");
			fUML_Tests_GenerateBooleanTestData_argumentData2->setVisibility(VisibilityKind::public_);
			fUML_Tests_GenerateBooleanTestData_argumentData2->setIsOrdered(true);
			fUML_Tests_GenerateBooleanTestData_argumentData2->setUpper(4);
			fUML_Tests_GenerateBooleanTestData_argumentData2->setLower(4);
			fUML_Tests_GenerateBooleanTestData_argumentData2->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_argumentData2->setDirection(ParameterDirectionKind::out);
		fUML_Tests_GenerateBooleanTestData->addOwnedParameter(fUML_Tests_GenerateBooleanTestData_argumentData2);
			// ValueSpecificationAction Value(false)-2
			fUML_Tests_GenerateBooleanTestData_Value_falseminus2->setThisExecutableNodePtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus2);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus2->setName("Value(false)-2");
			fUML_Tests_GenerateBooleanTestData_Value_falseminus2->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1096
				fUML_Tests_GenerateBooleanTestData_Value_falseminus2_LiteralBoolean1096->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus2_LiteralBoolean1096);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus2_LiteralBoolean1096->setName("LiteralBoolean1096");
				fUML_Tests_GenerateBooleanTestData_Value_falseminus2_LiteralBoolean1096->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus2_LiteralBoolean1096->setValue(false);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus2->setValue(fUML_Tests_GenerateBooleanTestData_Value_falseminus2_LiteralBoolean1096);
				// OutputPin Value(false)-2.result
				fUML_Tests_GenerateBooleanTestData_Value_falseminus2_Value_falseminus2_result->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus2_Value_falseminus2_result);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus2_Value_falseminus2_result->setName("Value(false)-2.result");
				fUML_Tests_GenerateBooleanTestData_Value_falseminus2_Value_falseminus2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus2_Value_falseminus2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus2->setResult(fUML_Tests_GenerateBooleanTestData_Value_falseminus2_Value_falseminus2_result);
		fUML_Tests_GenerateBooleanTestData->addNode(fUML_Tests_GenerateBooleanTestData_Value_falseminus2);
			// ValueSpecificationAction Value(true)-3
			fUML_Tests_GenerateBooleanTestData_Value_trueminus3->setThisExecutableNodePtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus3);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus3->setName("Value(true)-3");
			fUML_Tests_GenerateBooleanTestData_Value_trueminus3->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1112
				fUML_Tests_GenerateBooleanTestData_Value_trueminus3_LiteralBoolean1112->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus3_LiteralBoolean1112);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus3_LiteralBoolean1112->setName("LiteralBoolean1112");
				fUML_Tests_GenerateBooleanTestData_Value_trueminus3_LiteralBoolean1112->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus3_LiteralBoolean1112->setValue(true);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus3->setValue(fUML_Tests_GenerateBooleanTestData_Value_trueminus3_LiteralBoolean1112);
				// OutputPin Value(true)-3.result
				fUML_Tests_GenerateBooleanTestData_Value_trueminus3_Value_trueminus3_result->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus3_Value_trueminus3_result);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus3_Value_trueminus3_result->setName("Value(true)-3.result");
				fUML_Tests_GenerateBooleanTestData_Value_trueminus3_Value_trueminus3_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus3_Value_trueminus3_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus3->setResult(fUML_Tests_GenerateBooleanTestData_Value_trueminus3_Value_trueminus3_result);
		fUML_Tests_GenerateBooleanTestData->addNode(fUML_Tests_GenerateBooleanTestData_Value_trueminus3);
			// ValueSpecificationAction Value(false)-4
			fUML_Tests_GenerateBooleanTestData_Value_falseminus4->setThisExecutableNodePtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus4);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus4->setName("Value(false)-4");
			fUML_Tests_GenerateBooleanTestData_Value_falseminus4->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1104
				fUML_Tests_GenerateBooleanTestData_Value_falseminus4_LiteralBoolean1104->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus4_LiteralBoolean1104);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus4_LiteralBoolean1104->setName("LiteralBoolean1104");
				fUML_Tests_GenerateBooleanTestData_Value_falseminus4_LiteralBoolean1104->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus4_LiteralBoolean1104->setValue(false);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus4->setValue(fUML_Tests_GenerateBooleanTestData_Value_falseminus4_LiteralBoolean1104);
				// OutputPin Value(false)-4.result
				fUML_Tests_GenerateBooleanTestData_Value_falseminus4_Value_falseminus4_result->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus4_Value_falseminus4_result);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus4_Value_falseminus4_result->setName("Value(false)-4.result");
				fUML_Tests_GenerateBooleanTestData_Value_falseminus4_Value_falseminus4_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus4_Value_falseminus4_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus4->setResult(fUML_Tests_GenerateBooleanTestData_Value_falseminus4_Value_falseminus4_result);
		fUML_Tests_GenerateBooleanTestData->addNode(fUML_Tests_GenerateBooleanTestData_Value_falseminus4);
			// ActivityParameterNode Param(argumentData1)
			fUML_Tests_GenerateBooleanTestData_Param_argumentData1->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Param_argumentData1);
			fUML_Tests_GenerateBooleanTestData_Param_argumentData1->setName("Param(argumentData1)");
			fUML_Tests_GenerateBooleanTestData_Param_argumentData1->setVisibility(VisibilityKind::public_);
			fUML_Tests_GenerateBooleanTestData_Param_argumentData1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_Param_argumentData1->setParameter(fUML_Tests_GenerateBooleanTestData_argumentData1);
		fUML_Tests_GenerateBooleanTestData->addNode(fUML_Tests_GenerateBooleanTestData_Param_argumentData1);
			// ValueSpecificationAction Value(true)-2
			fUML_Tests_GenerateBooleanTestData_Value_trueminus2->setThisExecutableNodePtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus2);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus2->setName("Value(true)-2");
			fUML_Tests_GenerateBooleanTestData_Value_trueminus2->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1097
				fUML_Tests_GenerateBooleanTestData_Value_trueminus2_LiteralBoolean1097->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus2_LiteralBoolean1097);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus2_LiteralBoolean1097->setName("LiteralBoolean1097");
				fUML_Tests_GenerateBooleanTestData_Value_trueminus2_LiteralBoolean1097->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus2_LiteralBoolean1097->setValue(true);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus2->setValue(fUML_Tests_GenerateBooleanTestData_Value_trueminus2_LiteralBoolean1097);
				// OutputPin Value(true)-2.result
				fUML_Tests_GenerateBooleanTestData_Value_trueminus2_Value_trueminus2_result->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus2_Value_trueminus2_result);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus2_Value_trueminus2_result->setName("Value(true)-2.result");
				fUML_Tests_GenerateBooleanTestData_Value_trueminus2_Value_trueminus2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus2_Value_trueminus2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus2->setResult(fUML_Tests_GenerateBooleanTestData_Value_trueminus2_Value_trueminus2_result);
		fUML_Tests_GenerateBooleanTestData->addNode(fUML_Tests_GenerateBooleanTestData_Value_trueminus2);
			// ValueSpecificationAction Value(false)-3
			fUML_Tests_GenerateBooleanTestData_Value_falseminus3->setThisExecutableNodePtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus3);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus3->setName("Value(false)-3");
			fUML_Tests_GenerateBooleanTestData_Value_falseminus3->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1119
				fUML_Tests_GenerateBooleanTestData_Value_falseminus3_LiteralBoolean1119->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus3_LiteralBoolean1119);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus3_LiteralBoolean1119->setName("LiteralBoolean1119");
				fUML_Tests_GenerateBooleanTestData_Value_falseminus3_LiteralBoolean1119->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus3_LiteralBoolean1119->setValue(false);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus3->setValue(fUML_Tests_GenerateBooleanTestData_Value_falseminus3_LiteralBoolean1119);
				// OutputPin Value(false)-3.result
				fUML_Tests_GenerateBooleanTestData_Value_falseminus3_Value_falseminus3_result->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus3_Value_falseminus3_result);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus3_Value_falseminus3_result->setName("Value(false)-3.result");
				fUML_Tests_GenerateBooleanTestData_Value_falseminus3_Value_falseminus3_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus3_Value_falseminus3_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus3->setResult(fUML_Tests_GenerateBooleanTestData_Value_falseminus3_Value_falseminus3_result);
		fUML_Tests_GenerateBooleanTestData->addNode(fUML_Tests_GenerateBooleanTestData_Value_falseminus3);
			// ActivityParameterNode Param(argumentData2)
			fUML_Tests_GenerateBooleanTestData_Param_argumentData2->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Param_argumentData2);
			fUML_Tests_GenerateBooleanTestData_Param_argumentData2->setName("Param(argumentData2)");
			fUML_Tests_GenerateBooleanTestData_Param_argumentData2->setVisibility(VisibilityKind::public_);
			fUML_Tests_GenerateBooleanTestData_Param_argumentData2->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_Param_argumentData2->setParameter(fUML_Tests_GenerateBooleanTestData_argumentData2);
		fUML_Tests_GenerateBooleanTestData->addNode(fUML_Tests_GenerateBooleanTestData_Param_argumentData2);
			// ValueSpecificationAction Value(true)-1
			fUML_Tests_GenerateBooleanTestData_Value_trueminus1->setThisExecutableNodePtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus1);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus1->setName("Value(true)-1");
			fUML_Tests_GenerateBooleanTestData_Value_trueminus1->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1132
				fUML_Tests_GenerateBooleanTestData_Value_trueminus1_LiteralBoolean1132->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus1_LiteralBoolean1132);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus1_LiteralBoolean1132->setName("LiteralBoolean1132");
				fUML_Tests_GenerateBooleanTestData_Value_trueminus1_LiteralBoolean1132->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus1_LiteralBoolean1132->setValue(true);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus1->setValue(fUML_Tests_GenerateBooleanTestData_Value_trueminus1_LiteralBoolean1132);
				// OutputPin Value(true)-1.result
				fUML_Tests_GenerateBooleanTestData_Value_trueminus1_Value_trueminus1_result->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus1_Value_trueminus1_result);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus1_Value_trueminus1_result->setName("Value(true)-1.result");
				fUML_Tests_GenerateBooleanTestData_Value_trueminus1_Value_trueminus1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus1_Value_trueminus1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus1->setResult(fUML_Tests_GenerateBooleanTestData_Value_trueminus1_Value_trueminus1_result);
		fUML_Tests_GenerateBooleanTestData->addNode(fUML_Tests_GenerateBooleanTestData_Value_trueminus1);
			// ValueSpecificationAction Value(false)-1
			fUML_Tests_GenerateBooleanTestData_Value_falseminus1->setThisExecutableNodePtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus1);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus1->setName("Value(false)-1");
			fUML_Tests_GenerateBooleanTestData_Value_falseminus1->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1109
				fUML_Tests_GenerateBooleanTestData_Value_falseminus1_LiteralBoolean1109->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus1_LiteralBoolean1109);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus1_LiteralBoolean1109->setName("LiteralBoolean1109");
				fUML_Tests_GenerateBooleanTestData_Value_falseminus1_LiteralBoolean1109->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus1_LiteralBoolean1109->setValue(false);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus1->setValue(fUML_Tests_GenerateBooleanTestData_Value_falseminus1_LiteralBoolean1109);
				// OutputPin Value(false)-1.result
				fUML_Tests_GenerateBooleanTestData_Value_falseminus1_Value_falseminus1_result->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_falseminus1_Value_falseminus1_result);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus1_Value_falseminus1_result->setName("Value(false)-1.result");
				fUML_Tests_GenerateBooleanTestData_Value_falseminus1_Value_falseminus1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_falseminus1_Value_falseminus1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_Value_falseminus1->setResult(fUML_Tests_GenerateBooleanTestData_Value_falseminus1_Value_falseminus1_result);
		fUML_Tests_GenerateBooleanTestData->addNode(fUML_Tests_GenerateBooleanTestData_Value_falseminus1);
			// ValueSpecificationAction Value(true)-4
			fUML_Tests_GenerateBooleanTestData_Value_trueminus4->setThisExecutableNodePtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus4);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus4->setName("Value(true)-4");
			fUML_Tests_GenerateBooleanTestData_Value_trueminus4->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1135
				fUML_Tests_GenerateBooleanTestData_Value_trueminus4_LiteralBoolean1135->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus4_LiteralBoolean1135);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus4_LiteralBoolean1135->setName("LiteralBoolean1135");
				fUML_Tests_GenerateBooleanTestData_Value_trueminus4_LiteralBoolean1135->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus4_LiteralBoolean1135->setValue(true);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus4->setValue(fUML_Tests_GenerateBooleanTestData_Value_trueminus4_LiteralBoolean1135);
				// OutputPin Value(true)-4.result
				fUML_Tests_GenerateBooleanTestData_Value_trueminus4_Value_trueminus4_result->setThisElementPtr(fUML_Tests_GenerateBooleanTestData_Value_trueminus4_Value_trueminus4_result);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus4_Value_trueminus4_result->setName("Value(true)-4.result");
				fUML_Tests_GenerateBooleanTestData_Value_trueminus4_Value_trueminus4_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_GenerateBooleanTestData_Value_trueminus4_Value_trueminus4_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_GenerateBooleanTestData_Value_trueminus4->setResult(fUML_Tests_GenerateBooleanTestData_Value_trueminus4_Value_trueminus4_result);
		fUML_Tests_GenerateBooleanTestData->addNode(fUML_Tests_GenerateBooleanTestData_Value_trueminus4);
			// ObjectFlow ObjectFlow1110 from Value(false)-4.result to Param(argumentData2)
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1110->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ObjectFlow1110);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1110->setName("ObjectFlow1110");
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1110->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1110->setSource(fUML_Tests_GenerateBooleanTestData_Value_falseminus4_Value_falseminus4_result);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1110->setTarget(fUML_Tests_GenerateBooleanTestData_Param_argumentData2);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ObjectFlow1110);
			// ControlFlow ControlFlow1113 from Value(false)-3 to Value(true)-4
			fUML_Tests_GenerateBooleanTestData_ControlFlow1113->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ControlFlow1113);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1113->setName("ControlFlow1113");
			fUML_Tests_GenerateBooleanTestData_ControlFlow1113->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ControlFlow1113->setSource(fUML_Tests_GenerateBooleanTestData_Value_falseminus3);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1113->setTarget(fUML_Tests_GenerateBooleanTestData_Value_trueminus4);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ControlFlow1113);
			// ObjectFlow ObjectFlow1115 from Value(true)-3.result to Param(argumentData2)
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1115->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ObjectFlow1115);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1115->setName("ObjectFlow1115");
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1115->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1115->setSource(fUML_Tests_GenerateBooleanTestData_Value_trueminus3_Value_trueminus3_result);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1115->setTarget(fUML_Tests_GenerateBooleanTestData_Param_argumentData2);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ObjectFlow1115);
			// ControlFlow ControlFlow1117 from Value(true)-1 to Value(true)-2
			fUML_Tests_GenerateBooleanTestData_ControlFlow1117->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ControlFlow1117);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1117->setName("ControlFlow1117");
			fUML_Tests_GenerateBooleanTestData_ControlFlow1117->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ControlFlow1117->setSource(fUML_Tests_GenerateBooleanTestData_Value_trueminus1);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1117->setTarget(fUML_Tests_GenerateBooleanTestData_Value_trueminus2);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ControlFlow1117);
			// ObjectFlow ObjectFlow1098 from Value(true)-1.result to Param(argumentData1)
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1098->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ObjectFlow1098);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1098->setName("ObjectFlow1098");
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1098->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1098->setSource(fUML_Tests_GenerateBooleanTestData_Value_trueminus1_Value_trueminus1_result);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1098->setTarget(fUML_Tests_GenerateBooleanTestData_Param_argumentData1);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ObjectFlow1098);
			// ObjectFlow ObjectFlow1100 from Value(true)-4.result to Param(argumentData2)
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1100->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ObjectFlow1100);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1100->setName("ObjectFlow1100");
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1100->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1100->setSource(fUML_Tests_GenerateBooleanTestData_Value_trueminus4_Value_trueminus4_result);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1100->setTarget(fUML_Tests_GenerateBooleanTestData_Param_argumentData2);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ObjectFlow1100);
			// ObjectFlow ObjectFlow1120 from Value(false)-3.result to Param(argumentData2)
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1120->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ObjectFlow1120);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1120->setName("ObjectFlow1120");
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1120->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1120->setSource(fUML_Tests_GenerateBooleanTestData_Value_falseminus3_Value_falseminus3_result);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1120->setTarget(fUML_Tests_GenerateBooleanTestData_Param_argumentData2);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ObjectFlow1120);
			// ControlFlow ControlFlow1122 from Value(true)-2 to Value(false)-1
			fUML_Tests_GenerateBooleanTestData_ControlFlow1122->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ControlFlow1122);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1122->setName("ControlFlow1122");
			fUML_Tests_GenerateBooleanTestData_ControlFlow1122->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ControlFlow1122->setSource(fUML_Tests_GenerateBooleanTestData_Value_trueminus2);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1122->setTarget(fUML_Tests_GenerateBooleanTestData_Value_falseminus1);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ControlFlow1122);
			// ObjectFlow ObjectFlow1102 from Value(false)-1.result to Param(argumentData1)
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1102->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ObjectFlow1102);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1102->setName("ObjectFlow1102");
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1102->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1102->setSource(fUML_Tests_GenerateBooleanTestData_Value_falseminus1_Value_falseminus1_result);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1102->setTarget(fUML_Tests_GenerateBooleanTestData_Param_argumentData1);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ObjectFlow1102);
			// ObjectFlow ObjectFlow1124 from Value(false)-2.result to Param(argumentData1)
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1124->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ObjectFlow1124);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1124->setName("ObjectFlow1124");
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1124->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1124->setSource(fUML_Tests_GenerateBooleanTestData_Value_falseminus2_Value_falseminus2_result);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1124->setTarget(fUML_Tests_GenerateBooleanTestData_Param_argumentData1);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ObjectFlow1124);
			// ControlFlow ControlFlow1128 from Value(true)-3 to Value(false)-3
			fUML_Tests_GenerateBooleanTestData_ControlFlow1128->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ControlFlow1128);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1128->setName("ControlFlow1128");
			fUML_Tests_GenerateBooleanTestData_ControlFlow1128->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ControlFlow1128->setSource(fUML_Tests_GenerateBooleanTestData_Value_trueminus3);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1128->setTarget(fUML_Tests_GenerateBooleanTestData_Value_falseminus3);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ControlFlow1128);
			// ControlFlow ControlFlow1130 from Value(true)-4 to Value(false)-4
			fUML_Tests_GenerateBooleanTestData_ControlFlow1130->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ControlFlow1130);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1130->setName("ControlFlow1130");
			fUML_Tests_GenerateBooleanTestData_ControlFlow1130->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ControlFlow1130->setSource(fUML_Tests_GenerateBooleanTestData_Value_trueminus4);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1130->setTarget(fUML_Tests_GenerateBooleanTestData_Value_falseminus4);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ControlFlow1130);
			// ObjectFlow ObjectFlow1105 from Value(true)-2.result to Param(argumentData1)
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1105->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ObjectFlow1105);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1105->setName("ObjectFlow1105");
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1105->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1105->setSource(fUML_Tests_GenerateBooleanTestData_Value_trueminus2_Value_trueminus2_result);
			fUML_Tests_GenerateBooleanTestData_ObjectFlow1105->setTarget(fUML_Tests_GenerateBooleanTestData_Param_argumentData1);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ObjectFlow1105);
			// ControlFlow ControlFlow1107 from Value(false)-1 to Value(false)-2
			fUML_Tests_GenerateBooleanTestData_ControlFlow1107->setThisActivityEdgePtr(fUML_Tests_GenerateBooleanTestData_ControlFlow1107);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1107->setName("ControlFlow1107");
			fUML_Tests_GenerateBooleanTestData_ControlFlow1107->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_GenerateBooleanTestData_ControlFlow1107->setSource(fUML_Tests_GenerateBooleanTestData_Value_falseminus1);
			fUML_Tests_GenerateBooleanTestData_ControlFlow1107->setTarget(fUML_Tests_GenerateBooleanTestData_Value_falseminus2);
		fUML_Tests_GenerateBooleanTestData->addEdge(fUML_Tests_GenerateBooleanTestData_ControlFlow1107);
	fUML_Tests->addPackagedElement(fUML_Tests_GenerateBooleanTestData);
		// SignalEvent SignalEvent1136
		fUML_Tests_SignalEvent1136->setThisElementPtr(fUML_Tests_SignalEvent1136);
		fUML_Tests_SignalEvent1136->setName("SignalEvent1136");
		fUML_Tests_SignalEvent1136->setVisibility(VisibilityKind::public_);
		fUML_Tests_SignalEvent1136->setSignal(fUML_Tests_OtherSignal);
	fUML_Tests->addPackagedElement(fUML_Tests_SignalEvent1136);
		// Activity TestGeneralizationAssembly
		fUML_Tests_TestGeneralizationAssembly->setThisActivityPtr(fUML_Tests_TestGeneralizationAssembly);
		fUML_Tests_TestGeneralizationAssembly->setName("TestGeneralizationAssembly");
		fUML_Tests_TestGeneralizationAssembly->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestGeneralizationAssembly->isReentrant = false;
			// Parameter result
			fUML_Tests_TestGeneralizationAssembly_result->setThisElementPtr(fUML_Tests_TestGeneralizationAssembly_result);
			fUML_Tests_TestGeneralizationAssembly_result->setName("result");
			fUML_Tests_TestGeneralizationAssembly_result->setVisibility(VisibilityKind::public_);
			
			
			fUML_Tests_TestGeneralizationAssembly_result->setDirection(ParameterDirectionKind::inout);
		fUML_Tests_TestGeneralizationAssembly->addOwnedParameter(fUML_Tests_TestGeneralizationAssembly_result);
			// CreateObjectAction Create(Specific)
			fUML_Tests_TestGeneralizationAssembly_Create_Specific->setThisExecutableNodePtr(fUML_Tests_TestGeneralizationAssembly_Create_Specific);
			fUML_Tests_TestGeneralizationAssembly_Create_Specific->setName("Create(Specific)");
			fUML_Tests_TestGeneralizationAssembly_Create_Specific->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestGeneralizationAssembly_Create_Specific->setClassifier(fUML_Tests_Specific);
				// OutputPin CreateObjectAction.result
				fUML_Tests_TestGeneralizationAssembly_Create_Specific_CreateObjectAction_result->setThisElementPtr(fUML_Tests_TestGeneralizationAssembly_Create_Specific_CreateObjectAction_result);
				fUML_Tests_TestGeneralizationAssembly_Create_Specific_CreateObjectAction_result->setName("CreateObjectAction.result");
				fUML_Tests_TestGeneralizationAssembly_Create_Specific_CreateObjectAction_result->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestGeneralizationAssembly_Create_Specific->setResult(fUML_Tests_TestGeneralizationAssembly_Create_Specific_CreateObjectAction_result);
		fUML_Tests_TestGeneralizationAssembly->addNode(fUML_Tests_TestGeneralizationAssembly_Create_Specific);
			// ActivityParameterNode ActivityParameterNode
			fUML_Tests_TestGeneralizationAssembly_ActivityParameterNode->setThisElementPtr(fUML_Tests_TestGeneralizationAssembly_ActivityParameterNode);
			fUML_Tests_TestGeneralizationAssembly_ActivityParameterNode->setName("ActivityParameterNode");
			fUML_Tests_TestGeneralizationAssembly_ActivityParameterNode->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestGeneralizationAssembly_ActivityParameterNode->setParameter(fUML_Tests_TestGeneralizationAssembly_result);
		fUML_Tests_TestGeneralizationAssembly->addNode(fUML_Tests_TestGeneralizationAssembly_ActivityParameterNode);
			// ObjectFlow ObjectFlow1137 from CreateObjectAction.result to ActivityParameterNode
			fUML_Tests_TestGeneralizationAssembly_ObjectFlow1137->setThisActivityEdgePtr(fUML_Tests_TestGeneralizationAssembly_ObjectFlow1137);
			fUML_Tests_TestGeneralizationAssembly_ObjectFlow1137->setName("ObjectFlow1137");
			fUML_Tests_TestGeneralizationAssembly_ObjectFlow1137->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestGeneralizationAssembly_ObjectFlow1137->setSource(fUML_Tests_TestGeneralizationAssembly_Create_Specific_CreateObjectAction_result);
			fUML_Tests_TestGeneralizationAssembly_ObjectFlow1137->setTarget(fUML_Tests_TestGeneralizationAssembly_ActivityParameterNode);
		fUML_Tests_TestGeneralizationAssembly->addEdge(fUML_Tests_TestGeneralizationAssembly_ObjectFlow1137);
	fUML_Tests->addPackagedElement(fUML_Tests_TestGeneralizationAssembly);
		// Activity TestRealFunctions
		fUML_Tests_TestRealFunctions->setThisActivityPtr(fUML_Tests_TestRealFunctions);
		fUML_Tests_TestRealFunctions->setName("TestRealFunctions");
		fUML_Tests_TestRealFunctions->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestRealFunctions->isReentrant = false;
			// Parameter NegResult
			fUML_Tests_TestRealFunctions_NegResult->setThisElementPtr(fUML_Tests_TestRealFunctions_NegResult);
			fUML_Tests_TestRealFunctions_NegResult->setName("NegResult");
			fUML_Tests_TestRealFunctions_NegResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_NegResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_NegResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_NegResult);
			// Parameter PlusResult
			fUML_Tests_TestRealFunctions_PlusResult->setThisElementPtr(fUML_Tests_TestRealFunctions_PlusResult);
			fUML_Tests_TestRealFunctions_PlusResult->setName("PlusResult");
			fUML_Tests_TestRealFunctions_PlusResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_PlusResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_PlusResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_PlusResult);
			// Parameter MinusResult
			fUML_Tests_TestRealFunctions_MinusResult->setThisElementPtr(fUML_Tests_TestRealFunctions_MinusResult);
			fUML_Tests_TestRealFunctions_MinusResult->setName("MinusResult");
			fUML_Tests_TestRealFunctions_MinusResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_MinusResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_MinusResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_MinusResult);
			// Parameter InvResult
			fUML_Tests_TestRealFunctions_InvResult->setThisElementPtr(fUML_Tests_TestRealFunctions_InvResult);
			fUML_Tests_TestRealFunctions_InvResult->setName("InvResult");
			fUML_Tests_TestRealFunctions_InvResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_InvResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_InvResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_InvResult);
			// Parameter TimesResult
			fUML_Tests_TestRealFunctions_TimesResult->setThisElementPtr(fUML_Tests_TestRealFunctions_TimesResult);
			fUML_Tests_TestRealFunctions_TimesResult->setName("TimesResult");
			fUML_Tests_TestRealFunctions_TimesResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_TimesResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_TimesResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_TimesResult);
			// Parameter DivideResult
			fUML_Tests_TestRealFunctions_DivideResult->setThisElementPtr(fUML_Tests_TestRealFunctions_DivideResult);
			fUML_Tests_TestRealFunctions_DivideResult->setName("DivideResult");
			fUML_Tests_TestRealFunctions_DivideResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_DivideResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_DivideResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_DivideResult);
			// Parameter MaxResult
			fUML_Tests_TestRealFunctions_MaxResult->setThisElementPtr(fUML_Tests_TestRealFunctions_MaxResult);
			fUML_Tests_TestRealFunctions_MaxResult->setName("MaxResult");
			fUML_Tests_TestRealFunctions_MaxResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_MaxResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_MaxResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_MaxResult);
			// Parameter MinResult
			fUML_Tests_TestRealFunctions_MinResult->setThisElementPtr(fUML_Tests_TestRealFunctions_MinResult);
			fUML_Tests_TestRealFunctions_MinResult->setName("MinResult");
			fUML_Tests_TestRealFunctions_MinResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_MinResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_MinResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_MinResult);
			// Parameter AbsResult
			fUML_Tests_TestRealFunctions_AbsResult->setThisElementPtr(fUML_Tests_TestRealFunctions_AbsResult);
			fUML_Tests_TestRealFunctions_AbsResult->setName("AbsResult");
			fUML_Tests_TestRealFunctions_AbsResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_AbsResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_AbsResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_AbsResult);
			// Parameter RoundResult
			fUML_Tests_TestRealFunctions_RoundResult->setThisElementPtr(fUML_Tests_TestRealFunctions_RoundResult);
			fUML_Tests_TestRealFunctions_RoundResult->setName("RoundResult");
			fUML_Tests_TestRealFunctions_RoundResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_RoundResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestRealFunctions_RoundResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_RoundResult);
			// Parameter FloorResult
			fUML_Tests_TestRealFunctions_FloorResult->setThisElementPtr(fUML_Tests_TestRealFunctions_FloorResult);
			fUML_Tests_TestRealFunctions_FloorResult->setName("FloorResult");
			fUML_Tests_TestRealFunctions_FloorResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_FloorResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestRealFunctions_FloorResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_FloorResult);
			// Parameter ToIntegerResult
			fUML_Tests_TestRealFunctions_ToIntegerResult->setThisElementPtr(fUML_Tests_TestRealFunctions_ToIntegerResult);
			fUML_Tests_TestRealFunctions_ToIntegerResult->setName("ToIntegerResult");
			fUML_Tests_TestRealFunctions_ToIntegerResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ToIntegerResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestRealFunctions_ToIntegerResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealFunctions->addOwnedParameter(fUML_Tests_TestRealFunctions_ToIntegerResult);
			// ActivityParameterNode Param(MaxResult)
			fUML_Tests_TestRealFunctions_Param_MaxResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_MaxResult);
			fUML_Tests_TestRealFunctions_Param_MaxResult->setName("Param(MaxResult)");
			fUML_Tests_TestRealFunctions_Param_MaxResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_MaxResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Param_MaxResult->setParameter(fUML_Tests_TestRealFunctions_MaxResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_MaxResult);
			// CallBehaviorAction Call(Abs)
			fUML_Tests_TestRealFunctions_Call_Abs->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Abs);
			fUML_Tests_TestRealFunctions_Call_Abs->setName("Call(Abs)");
			fUML_Tests_TestRealFunctions_Call_Abs->setVisibility(VisibilityKind::public_);
				// OutputPin Abs.result
				fUML_Tests_TestRealFunctions_Call_Abs_Abs_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Abs_Abs_result);
				fUML_Tests_TestRealFunctions_Call_Abs_Abs_result->setName("Abs.result");
				fUML_Tests_TestRealFunctions_Call_Abs_Abs_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Abs_Abs_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Abs->addResult(fUML_Tests_TestRealFunctions_Call_Abs_Abs_result);
			fUML_Tests_TestRealFunctions_Call_Abs->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_Abs);
				// InputPin Abs.x
				fUML_Tests_TestRealFunctions_Call_Abs_Abs_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Abs_Abs_x);
				fUML_Tests_TestRealFunctions_Call_Abs_Abs_x->setName("Abs.x");
				fUML_Tests_TestRealFunctions_Call_Abs_Abs_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Abs_Abs_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Abs->addArgument(fUML_Tests_TestRealFunctions_Call_Abs_Abs_x);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Abs);
			// ActivityParameterNode Param(NegResult)
			fUML_Tests_TestRealFunctions_Param_NegResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_NegResult);
			fUML_Tests_TestRealFunctions_Param_NegResult->setName("Param(NegResult)");
			fUML_Tests_TestRealFunctions_Param_NegResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_NegResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Param_NegResult->setParameter(fUML_Tests_TestRealFunctions_NegResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_NegResult);
			// CallBehaviorAction Call(Min)
			fUML_Tests_TestRealFunctions_Call_Min->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Min);
			fUML_Tests_TestRealFunctions_Call_Min->setName("Call(Min)");
			fUML_Tests_TestRealFunctions_Call_Min->setVisibility(VisibilityKind::public_);
				// OutputPin Min.result
				fUML_Tests_TestRealFunctions_Call_Min_Min_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Min_Min_result);
				fUML_Tests_TestRealFunctions_Call_Min_Min_result->setName("Min.result");
				fUML_Tests_TestRealFunctions_Call_Min_Min_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Min_Min_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Min->addResult(fUML_Tests_TestRealFunctions_Call_Min_Min_result);
			fUML_Tests_TestRealFunctions_Call_Min->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_Min);
				// InputPin Min.x
				fUML_Tests_TestRealFunctions_Call_Min_Min_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Min_Min_x);
				fUML_Tests_TestRealFunctions_Call_Min_Min_x->setName("Min.x");
				fUML_Tests_TestRealFunctions_Call_Min_Min_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Min_Min_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Min->addArgument(fUML_Tests_TestRealFunctions_Call_Min_Min_x);
				// InputPin Min.y
				fUML_Tests_TestRealFunctions_Call_Min_Min_y->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Min_Min_y);
				fUML_Tests_TestRealFunctions_Call_Min_Min_y->setName("Min.y");
				fUML_Tests_TestRealFunctions_Call_Min_Min_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Min_Min_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Min->addArgument(fUML_Tests_TestRealFunctions_Call_Min_Min_y);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Min);
			// CallBehaviorAction Call(Floor)
			fUML_Tests_TestRealFunctions_Call_Floor->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Floor);
			fUML_Tests_TestRealFunctions_Call_Floor->setName("Call(Floor)");
			fUML_Tests_TestRealFunctions_Call_Floor->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestRealFunctions_Call_Floor_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Floor_result);
				fUML_Tests_TestRealFunctions_Call_Floor_result->setName("result");
				fUML_Tests_TestRealFunctions_Call_Floor_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Floor_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestRealFunctions_Call_Floor->addResult(fUML_Tests_TestRealFunctions_Call_Floor_result);
			fUML_Tests_TestRealFunctions_Call_Floor->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_Floor);
				// InputPin x
				fUML_Tests_TestRealFunctions_Call_Floor_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Floor_x);
				fUML_Tests_TestRealFunctions_Call_Floor_x->setName("x");
				fUML_Tests_TestRealFunctions_Call_Floor_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Floor_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Floor->addArgument(fUML_Tests_TestRealFunctions_Call_Floor_x);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Floor);
			// ValueSpecificationAction Value(-2.3)
			fUML_Tests_TestRealFunctions_Value_minus2_3->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Value_minus2_3);
			fUML_Tests_TestRealFunctions_Value_minus2_3->setName("Value(-2.3)");
			fUML_Tests_TestRealFunctions_Value_minus2_3->setVisibility(VisibilityKind::public_);
				// LiteralReal LiteralReal1158
				fUML_Tests_TestRealFunctions_Value_minus2_3_LiteralReal1158->setThisElementPtr(fUML_Tests_TestRealFunctions_Value_minus2_3_LiteralReal1158);
				fUML_Tests_TestRealFunctions_Value_minus2_3_LiteralReal1158->setName("LiteralReal1158");
				fUML_Tests_TestRealFunctions_Value_minus2_3_LiteralReal1158->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Value_minus2_3_LiteralReal1158->setValue(-2.3f);
			fUML_Tests_TestRealFunctions_Value_minus2_3->setValue(fUML_Tests_TestRealFunctions_Value_minus2_3_LiteralReal1158);
				// OutputPin Value(-2.3).result
				fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result);
				fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result->setName("Value(-2.3).result");
				fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Value_minus2_3->setResult(fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Value_minus2_3);
			// ActivityParameterNode Param(PlusResult)
			fUML_Tests_TestRealFunctions_Param_PlusResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_PlusResult);
			fUML_Tests_TestRealFunctions_Param_PlusResult->setName("Param(PlusResult)");
			fUML_Tests_TestRealFunctions_Param_PlusResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_PlusResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Param_PlusResult->setParameter(fUML_Tests_TestRealFunctions_PlusResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_PlusResult);
			// ActivityParameterNode Param(ToIntegerResult)
			fUML_Tests_TestRealFunctions_Param_ToIntegerResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_ToIntegerResult);
			fUML_Tests_TestRealFunctions_Param_ToIntegerResult->setName("Param(ToIntegerResult)");
			fUML_Tests_TestRealFunctions_Param_ToIntegerResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_ToIntegerResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestRealFunctions_Param_ToIntegerResult->setParameter(fUML_Tests_TestRealFunctions_ToIntegerResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_ToIntegerResult);
			// ForkNode Fork(-2.3)
			fUML_Tests_TestRealFunctions_Fork_minus2_3->setThisElementPtr(fUML_Tests_TestRealFunctions_Fork_minus2_3);
			fUML_Tests_TestRealFunctions_Fork_minus2_3->setName("Fork(-2.3)");
			fUML_Tests_TestRealFunctions_Fork_minus2_3->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Fork_minus2_3);
			// CallBehaviorAction Call(Max)
			fUML_Tests_TestRealFunctions_Call_Max->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Max);
			fUML_Tests_TestRealFunctions_Call_Max->setName("Call(Max)");
			fUML_Tests_TestRealFunctions_Call_Max->setVisibility(VisibilityKind::public_);
				// OutputPin Max.result
				fUML_Tests_TestRealFunctions_Call_Max_Max_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Max_Max_result);
				fUML_Tests_TestRealFunctions_Call_Max_Max_result->setName("Max.result");
				fUML_Tests_TestRealFunctions_Call_Max_Max_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Max_Max_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Max->addResult(fUML_Tests_TestRealFunctions_Call_Max_Max_result);
			fUML_Tests_TestRealFunctions_Call_Max->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_Max);
				// InputPin Max.x
				fUML_Tests_TestRealFunctions_Call_Max_Max_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Max_Max_x);
				fUML_Tests_TestRealFunctions_Call_Max_Max_x->setName("Max.x");
				fUML_Tests_TestRealFunctions_Call_Max_Max_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Max_Max_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Max->addArgument(fUML_Tests_TestRealFunctions_Call_Max_Max_x);
				// InputPin Max.y
				fUML_Tests_TestRealFunctions_Call_Max_Max_y->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Max_Max_y);
				fUML_Tests_TestRealFunctions_Call_Max_Max_y->setName("Max.y");
				fUML_Tests_TestRealFunctions_Call_Max_Max_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Max_Max_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Max->addArgument(fUML_Tests_TestRealFunctions_Call_Max_Max_y);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Max);
			// ValueSpecificationAction Value(0.5)
			fUML_Tests_TestRealFunctions_Value_0_5->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Value_0_5);
			fUML_Tests_TestRealFunctions_Value_0_5->setName("Value(0.5)");
			fUML_Tests_TestRealFunctions_Value_0_5->setVisibility(VisibilityKind::public_);
				// LiteralReal LiteralReal1243
				fUML_Tests_TestRealFunctions_Value_0_5_LiteralReal1243->setThisElementPtr(fUML_Tests_TestRealFunctions_Value_0_5_LiteralReal1243);
				fUML_Tests_TestRealFunctions_Value_0_5_LiteralReal1243->setName("LiteralReal1243");
				fUML_Tests_TestRealFunctions_Value_0_5_LiteralReal1243->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Value_0_5_LiteralReal1243->setValue(0.5f);
			fUML_Tests_TestRealFunctions_Value_0_5->setValue(fUML_Tests_TestRealFunctions_Value_0_5_LiteralReal1243);
				// OutputPin Value(0.5).result
				fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result);
				fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result->setName("Value(0.5).result");
				fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Value_0_5->setResult(fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Value_0_5);
			// CallBehaviorAction Call(Neg)
			fUML_Tests_TestRealFunctions_Call_Neg->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Neg);
			fUML_Tests_TestRealFunctions_Call_Neg->setName("Call(Neg)");
			fUML_Tests_TestRealFunctions_Call_Neg->setVisibility(VisibilityKind::public_);
				// OutputPin Neg.result
				fUML_Tests_TestRealFunctions_Call_Neg_Neg_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Neg_Neg_result);
				fUML_Tests_TestRealFunctions_Call_Neg_Neg_result->setName("Neg.result");
				fUML_Tests_TestRealFunctions_Call_Neg_Neg_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Neg_Neg_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Neg->addResult(fUML_Tests_TestRealFunctions_Call_Neg_Neg_result);
			fUML_Tests_TestRealFunctions_Call_Neg->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_Neg);
				// InputPin Neg.x
				fUML_Tests_TestRealFunctions_Call_Neg_Neg_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Neg_Neg_x);
				fUML_Tests_TestRealFunctions_Call_Neg_Neg_x->setName("Neg.x");
				fUML_Tests_TestRealFunctions_Call_Neg_Neg_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Neg_Neg_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Neg->addArgument(fUML_Tests_TestRealFunctions_Call_Neg_Neg_x);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Neg);
			// ActivityParameterNode Param(MinResult)
			fUML_Tests_TestRealFunctions_Param_MinResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_MinResult);
			fUML_Tests_TestRealFunctions_Param_MinResult->setName("Param(MinResult)");
			fUML_Tests_TestRealFunctions_Param_MinResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_MinResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Param_MinResult->setParameter(fUML_Tests_TestRealFunctions_MinResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_MinResult);
			// CallBehaviorAction Call(Round)
			fUML_Tests_TestRealFunctions_Call_Round->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Round);
			fUML_Tests_TestRealFunctions_Call_Round->setName("Call(Round)");
			fUML_Tests_TestRealFunctions_Call_Round->setVisibility(VisibilityKind::public_);
				// OutputPin Round.result
				fUML_Tests_TestRealFunctions_Call_Round_Round_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Round_Round_result);
				fUML_Tests_TestRealFunctions_Call_Round_Round_result->setName("Round.result");
				fUML_Tests_TestRealFunctions_Call_Round_Round_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Round_Round_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestRealFunctions_Call_Round->addResult(fUML_Tests_TestRealFunctions_Call_Round_Round_result);
			fUML_Tests_TestRealFunctions_Call_Round->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_Round);
				// InputPin Round.x
				fUML_Tests_TestRealFunctions_Call_Round_Round_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Round_Round_x);
				fUML_Tests_TestRealFunctions_Call_Round_Round_x->setName("Round.x");
				fUML_Tests_TestRealFunctions_Call_Round_Round_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Round_Round_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Round->addArgument(fUML_Tests_TestRealFunctions_Call_Round_Round_x);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Round);
			// CallBehaviorAction Call(Plus)
			fUML_Tests_TestRealFunctions_Call_Plus->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Plus);
			fUML_Tests_TestRealFunctions_Call_Plus->setName("Call(Plus)");
			fUML_Tests_TestRealFunctions_Call_Plus->setVisibility(VisibilityKind::public_);
				// OutputPin Plus.result
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Plus_Plus_result);
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_result->setName("Plus.result");
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Plus->addResult(fUML_Tests_TestRealFunctions_Call_Plus_Plus_result);
			fUML_Tests_TestRealFunctions_Call_Plus->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_plus);
				// InputPin Plus.x
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Plus_Plus_x);
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_x->setName("Plus.x");
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Plus->addArgument(fUML_Tests_TestRealFunctions_Call_Plus_Plus_x);
				// InputPin Plus.y
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_y->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Plus_Plus_y);
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_y->setName("Plus.y");
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Plus_Plus_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Plus->addArgument(fUML_Tests_TestRealFunctions_Call_Plus_Plus_y);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Plus);
			// CallBehaviorAction Call(Inv)
			fUML_Tests_TestRealFunctions_Call_Inv->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Inv);
			fUML_Tests_TestRealFunctions_Call_Inv->setName("Call(Inv)");
			fUML_Tests_TestRealFunctions_Call_Inv->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestRealFunctions_Call_Inv_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Inv_result);
				fUML_Tests_TestRealFunctions_Call_Inv_result->setName("result");
				fUML_Tests_TestRealFunctions_Call_Inv_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Inv_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Inv->addResult(fUML_Tests_TestRealFunctions_Call_Inv_result);
			fUML_Tests_TestRealFunctions_Call_Inv->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_Inv);
				// InputPin x
				fUML_Tests_TestRealFunctions_Call_Inv_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Inv_x);
				fUML_Tests_TestRealFunctions_Call_Inv_x->setName("x");
				fUML_Tests_TestRealFunctions_Call_Inv_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Inv_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Inv->addArgument(fUML_Tests_TestRealFunctions_Call_Inv_x);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Inv);
			// ActivityParameterNode Param(RoundResult)
			fUML_Tests_TestRealFunctions_Param_RoundResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_RoundResult);
			fUML_Tests_TestRealFunctions_Param_RoundResult->setName("Param(RoundResult)");
			fUML_Tests_TestRealFunctions_Param_RoundResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_RoundResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestRealFunctions_Param_RoundResult->setParameter(fUML_Tests_TestRealFunctions_RoundResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_RoundResult);
			// CallBehaviorAction Call(ToInteger)
			fUML_Tests_TestRealFunctions_Call_ToInteger->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_ToInteger);
			fUML_Tests_TestRealFunctions_Call_ToInteger->setName("Call(ToInteger)");
			fUML_Tests_TestRealFunctions_Call_ToInteger->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestRealFunctions_Call_ToInteger_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_ToInteger_result);
				fUML_Tests_TestRealFunctions_Call_ToInteger_result->setName("result");
				fUML_Tests_TestRealFunctions_Call_ToInteger_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_ToInteger_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestRealFunctions_Call_ToInteger->addResult(fUML_Tests_TestRealFunctions_Call_ToInteger_result);
			fUML_Tests_TestRealFunctions_Call_ToInteger->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_ToInteger);
				// InputPin x
				fUML_Tests_TestRealFunctions_Call_ToInteger_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_ToInteger_x);
				fUML_Tests_TestRealFunctions_Call_ToInteger_x->setName("x");
				fUML_Tests_TestRealFunctions_Call_ToInteger_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_ToInteger_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_ToInteger->addArgument(fUML_Tests_TestRealFunctions_Call_ToInteger_x);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_ToInteger);
			// ActivityParameterNode Param(FloorResult)
			fUML_Tests_TestRealFunctions_Param_FloorResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_FloorResult);
			fUML_Tests_TestRealFunctions_Param_FloorResult->setName("Param(FloorResult)");
			fUML_Tests_TestRealFunctions_Param_FloorResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_FloorResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestRealFunctions_Param_FloorResult->setParameter(fUML_Tests_TestRealFunctions_FloorResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_FloorResult);
			// ForkNode Fork(0.5)
			fUML_Tests_TestRealFunctions_Fork_0_5->setThisElementPtr(fUML_Tests_TestRealFunctions_Fork_0_5);
			fUML_Tests_TestRealFunctions_Fork_0_5->setName("Fork(0.5)");
			fUML_Tests_TestRealFunctions_Fork_0_5->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Fork_0_5);
			// ActivityParameterNode Param(DivideResult)
			fUML_Tests_TestRealFunctions_Param_DivideResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_DivideResult);
			fUML_Tests_TestRealFunctions_Param_DivideResult->setName("Param(DivideResult)");
			fUML_Tests_TestRealFunctions_Param_DivideResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_DivideResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Param_DivideResult->setParameter(fUML_Tests_TestRealFunctions_DivideResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_DivideResult);
			// CallBehaviorAction Call(Divide)
			fUML_Tests_TestRealFunctions_Call_Divide->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Divide);
			fUML_Tests_TestRealFunctions_Call_Divide->setName("Call(Divide)");
			fUML_Tests_TestRealFunctions_Call_Divide->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestRealFunctions_Call_Divide_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Divide_result);
				fUML_Tests_TestRealFunctions_Call_Divide_result->setName("result");
				fUML_Tests_TestRealFunctions_Call_Divide_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Divide_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
				fUML_Tests_TestRealFunctions_Call_Divide_result->setLower(0);
			fUML_Tests_TestRealFunctions_Call_Divide->addResult(fUML_Tests_TestRealFunctions_Call_Divide_result);
			fUML_Tests_TestRealFunctions_Call_Divide->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_divide);
				// InputPin x
				fUML_Tests_TestRealFunctions_Call_Divide_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Divide_x);
				fUML_Tests_TestRealFunctions_Call_Divide_x->setName("x");
				fUML_Tests_TestRealFunctions_Call_Divide_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Divide_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Divide->addArgument(fUML_Tests_TestRealFunctions_Call_Divide_x);
				// InputPin y
				fUML_Tests_TestRealFunctions_Call_Divide_y->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Divide_y);
				fUML_Tests_TestRealFunctions_Call_Divide_y->setName("y");
				fUML_Tests_TestRealFunctions_Call_Divide_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Divide_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Divide->addArgument(fUML_Tests_TestRealFunctions_Call_Divide_y);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Divide);
			// ForkNode Fork(3.1)
			fUML_Tests_TestRealFunctions_Fork_3_1->setThisElementPtr(fUML_Tests_TestRealFunctions_Fork_3_1);
			fUML_Tests_TestRealFunctions_Fork_3_1->setName("Fork(3.1)");
			fUML_Tests_TestRealFunctions_Fork_3_1->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Fork_3_1);
			// CallBehaviorAction Call(Minus)
			fUML_Tests_TestRealFunctions_Call_Minus->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Minus);
			fUML_Tests_TestRealFunctions_Call_Minus->setName("Call(Minus)");
			fUML_Tests_TestRealFunctions_Call_Minus->setVisibility(VisibilityKind::public_);
				// OutputPin Minus.result
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Minus_Minus_result);
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_result->setName("Minus.result");
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Minus->addResult(fUML_Tests_TestRealFunctions_Call_Minus_Minus_result);
			fUML_Tests_TestRealFunctions_Call_Minus->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_minus);
				// InputPin Minus.x
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Minus_Minus_x);
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_x->setName("Minus.x");
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Minus->addArgument(fUML_Tests_TestRealFunctions_Call_Minus_Minus_x);
				// InputPin Minus.y
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_y->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Minus_Minus_y);
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_y->setName("Minus.y");
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Minus_Minus_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Minus->addArgument(fUML_Tests_TestRealFunctions_Call_Minus_Minus_y);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Minus);
			// CallBehaviorAction Call(Times)
			fUML_Tests_TestRealFunctions_Call_Times->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Call_Times);
			fUML_Tests_TestRealFunctions_Call_Times->setName("Call(Times)");
			fUML_Tests_TestRealFunctions_Call_Times->setVisibility(VisibilityKind::public_);
				// OutputPin Times.result
				fUML_Tests_TestRealFunctions_Call_Times_Times_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Times_Times_result);
				fUML_Tests_TestRealFunctions_Call_Times_Times_result->setName("Times.result");
				fUML_Tests_TestRealFunctions_Call_Times_Times_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Times_Times_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Times->addResult(fUML_Tests_TestRealFunctions_Call_Times_Times_result);
			fUML_Tests_TestRealFunctions_Call_Times->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_times);
				// InputPin Times.x
				fUML_Tests_TestRealFunctions_Call_Times_Times_x->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Times_Times_x);
				fUML_Tests_TestRealFunctions_Call_Times_Times_x->setName("Times.x");
				fUML_Tests_TestRealFunctions_Call_Times_Times_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Times_Times_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Times->addArgument(fUML_Tests_TestRealFunctions_Call_Times_Times_x);
				// InputPin Times.y
				fUML_Tests_TestRealFunctions_Call_Times_Times_y->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_Times_Times_y);
				fUML_Tests_TestRealFunctions_Call_Times_Times_y->setName("Times.y");
				fUML_Tests_TestRealFunctions_Call_Times_Times_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Call_Times_Times_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_Times->addArgument(fUML_Tests_TestRealFunctions_Call_Times_Times_y);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_Times);
			// ValueSpecificationAction Value(3.1)
			fUML_Tests_TestRealFunctions_Value_3_1->setThisExecutableNodePtr(fUML_Tests_TestRealFunctions_Value_3_1);
			fUML_Tests_TestRealFunctions_Value_3_1->setName("Value(3.1)");
			fUML_Tests_TestRealFunctions_Value_3_1->setVisibility(VisibilityKind::public_);
				// LiteralReal LiteralReal1284
				fUML_Tests_TestRealFunctions_Value_3_1_LiteralReal1284->setThisElementPtr(fUML_Tests_TestRealFunctions_Value_3_1_LiteralReal1284);
				fUML_Tests_TestRealFunctions_Value_3_1_LiteralReal1284->setName("LiteralReal1284");
				fUML_Tests_TestRealFunctions_Value_3_1_LiteralReal1284->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Value_3_1_LiteralReal1284->setValue(3.1f);
			fUML_Tests_TestRealFunctions_Value_3_1->setValue(fUML_Tests_TestRealFunctions_Value_3_1_LiteralReal1284);
				// OutputPin Value(3.1).result
				fUML_Tests_TestRealFunctions_Value_3_1_Value_3_1_result->setThisElementPtr(fUML_Tests_TestRealFunctions_Value_3_1_Value_3_1_result);
				fUML_Tests_TestRealFunctions_Value_3_1_Value_3_1_result->setName("Value(3.1).result");
				fUML_Tests_TestRealFunctions_Value_3_1_Value_3_1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealFunctions_Value_3_1_Value_3_1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Value_3_1->setResult(fUML_Tests_TestRealFunctions_Value_3_1_Value_3_1_result);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Value_3_1);
			// ActivityParameterNode Param(MinusResult)
			fUML_Tests_TestRealFunctions_Param_MinusResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_MinusResult);
			fUML_Tests_TestRealFunctions_Param_MinusResult->setName("Param(MinusResult)");
			fUML_Tests_TestRealFunctions_Param_MinusResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_MinusResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Param_MinusResult->setParameter(fUML_Tests_TestRealFunctions_MinusResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_MinusResult);
			// ActivityParameterNode Call(AbsResult)
			fUML_Tests_TestRealFunctions_Call_AbsResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Call_AbsResult);
			fUML_Tests_TestRealFunctions_Call_AbsResult->setName("Call(AbsResult)");
			fUML_Tests_TestRealFunctions_Call_AbsResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Call_AbsResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Call_AbsResult->setParameter(fUML_Tests_TestRealFunctions_AbsResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Call_AbsResult);
			// ActivityParameterNode Param(InvResult)
			fUML_Tests_TestRealFunctions_Param_InvResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_InvResult);
			fUML_Tests_TestRealFunctions_Param_InvResult->setName("Param(InvResult)");
			fUML_Tests_TestRealFunctions_Param_InvResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_InvResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Param_InvResult->setParameter(fUML_Tests_TestRealFunctions_InvResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_InvResult);
			// ActivityParameterNode Param(TimesResult)
			fUML_Tests_TestRealFunctions_Param_TimesResult->setThisElementPtr(fUML_Tests_TestRealFunctions_Param_TimesResult);
			fUML_Tests_TestRealFunctions_Param_TimesResult->setName("Param(TimesResult)");
			fUML_Tests_TestRealFunctions_Param_TimesResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealFunctions_Param_TimesResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealFunctions_Param_TimesResult->setParameter(fUML_Tests_TestRealFunctions_TimesResult);
		fUML_Tests_TestRealFunctions->addNode(fUML_Tests_TestRealFunctions_Param_TimesResult);
			// ObjectFlow ObjectFlow1138 from Min.result to Param(MinResult)
			fUML_Tests_TestRealFunctions_ObjectFlow1138->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1138);
			fUML_Tests_TestRealFunctions_ObjectFlow1138->setName("ObjectFlow1138");
			fUML_Tests_TestRealFunctions_ObjectFlow1138->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1138->setSource(fUML_Tests_TestRealFunctions_Call_Min_Min_result);
			fUML_Tests_TestRealFunctions_ObjectFlow1138->setTarget(fUML_Tests_TestRealFunctions_Param_MinResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1138);
			// ControlFlow ControlFlow1140 from Call(Round) to Call(ToInteger)
			fUML_Tests_TestRealFunctions_ControlFlow1140->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow1140);
			fUML_Tests_TestRealFunctions_ControlFlow1140->setName("ControlFlow1140");
			fUML_Tests_TestRealFunctions_ControlFlow1140->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow1140->setSource(fUML_Tests_TestRealFunctions_Call_Round);
			fUML_Tests_TestRealFunctions_ControlFlow1140->setTarget(fUML_Tests_TestRealFunctions_Call_ToInteger);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow1140);
			// ObjectFlow ObjectFlow1217 from Fork(3.1) to Max.x
			fUML_Tests_TestRealFunctions_ObjectFlow1217->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1217);
			fUML_Tests_TestRealFunctions_ObjectFlow1217->setName("ObjectFlow1217");
			fUML_Tests_TestRealFunctions_ObjectFlow1217->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1217->setSource(fUML_Tests_TestRealFunctions_Fork_3_1);
			fUML_Tests_TestRealFunctions_ObjectFlow1217->setTarget(fUML_Tests_TestRealFunctions_Call_Max_Max_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1217);
			// ControlFlow ControlFlow1219 from Call(Floor) to Call(Round)
			fUML_Tests_TestRealFunctions_ControlFlow1219->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow1219);
			fUML_Tests_TestRealFunctions_ControlFlow1219->setName("ControlFlow1219");
			fUML_Tests_TestRealFunctions_ControlFlow1219->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow1219->setSource(fUML_Tests_TestRealFunctions_Call_Floor);
			fUML_Tests_TestRealFunctions_ControlFlow1219->setTarget(fUML_Tests_TestRealFunctions_Call_Round);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow1219);
			// ObjectFlow ObjectFlow1221 from Minus.result to Param(MinusResult)
			fUML_Tests_TestRealFunctions_ObjectFlow1221->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1221);
			fUML_Tests_TestRealFunctions_ObjectFlow1221->setName("ObjectFlow1221");
			fUML_Tests_TestRealFunctions_ObjectFlow1221->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1221->setSource(fUML_Tests_TestRealFunctions_Call_Minus_Minus_result);
			fUML_Tests_TestRealFunctions_ObjectFlow1221->setTarget(fUML_Tests_TestRealFunctions_Param_MinusResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1221);
			// ObjectFlow ObjectFlow1146 from Times.result to Param(TimesResult)
			fUML_Tests_TestRealFunctions_ObjectFlow1146->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1146);
			fUML_Tests_TestRealFunctions_ObjectFlow1146->setName("ObjectFlow1146");
			fUML_Tests_TestRealFunctions_ObjectFlow1146->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1146->setSource(fUML_Tests_TestRealFunctions_Call_Times_Times_result);
			fUML_Tests_TestRealFunctions_ObjectFlow1146->setTarget(fUML_Tests_TestRealFunctions_Param_TimesResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1146);
			// ObjectFlow ObjectFlow1154 from Fork(3.1) to Min.x
			fUML_Tests_TestRealFunctions_ObjectFlow1154->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1154);
			fUML_Tests_TestRealFunctions_ObjectFlow1154->setName("ObjectFlow1154");
			fUML_Tests_TestRealFunctions_ObjectFlow1154->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1154->setSource(fUML_Tests_TestRealFunctions_Fork_3_1);
			fUML_Tests_TestRealFunctions_ObjectFlow1154->setTarget(fUML_Tests_TestRealFunctions_Call_Min_Min_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1154);
			// ObjectFlow ObjectFlow1156 from Fork(0.5) to Plus.y
			fUML_Tests_TestRealFunctions_ObjectFlow1156->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1156);
			fUML_Tests_TestRealFunctions_ObjectFlow1156->setName("ObjectFlow1156");
			fUML_Tests_TestRealFunctions_ObjectFlow1156->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1156->setSource(fUML_Tests_TestRealFunctions_Fork_0_5);
			fUML_Tests_TestRealFunctions_ObjectFlow1156->setTarget(fUML_Tests_TestRealFunctions_Call_Plus_Plus_y);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1156);
			// ObjectFlow ObjectFlow1161 from Fork(-2.3) to x
			fUML_Tests_TestRealFunctions_ObjectFlow1161->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1161);
			fUML_Tests_TestRealFunctions_ObjectFlow1161->setName("ObjectFlow1161");
			fUML_Tests_TestRealFunctions_ObjectFlow1161->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1161->setSource(fUML_Tests_TestRealFunctions_Fork_minus2_3);
			fUML_Tests_TestRealFunctions_ObjectFlow1161->setTarget(fUML_Tests_TestRealFunctions_Call_ToInteger_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1161);
			// ObjectFlow ObjectFlow1227 from Fork(3.1) to Times.x
			fUML_Tests_TestRealFunctions_ObjectFlow1227->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1227);
			fUML_Tests_TestRealFunctions_ObjectFlow1227->setName("ObjectFlow1227");
			fUML_Tests_TestRealFunctions_ObjectFlow1227->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1227->setSource(fUML_Tests_TestRealFunctions_Fork_3_1);
			fUML_Tests_TestRealFunctions_ObjectFlow1227->setTarget(fUML_Tests_TestRealFunctions_Call_Times_Times_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1227);
			// ObjectFlow ObjectFlow1229 from Fork(0.5) to Max.y
			fUML_Tests_TestRealFunctions_ObjectFlow1229->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1229);
			fUML_Tests_TestRealFunctions_ObjectFlow1229->setName("ObjectFlow1229");
			fUML_Tests_TestRealFunctions_ObjectFlow1229->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1229->setSource(fUML_Tests_TestRealFunctions_Fork_0_5);
			fUML_Tests_TestRealFunctions_ObjectFlow1229->setTarget(fUML_Tests_TestRealFunctions_Call_Max_Max_y);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1229);
			// ObjectFlow ObjectFlow1231 from result to Param(ToIntegerResult)
			fUML_Tests_TestRealFunctions_ObjectFlow1231->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1231);
			fUML_Tests_TestRealFunctions_ObjectFlow1231->setName("ObjectFlow1231");
			fUML_Tests_TestRealFunctions_ObjectFlow1231->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1231->setSource(fUML_Tests_TestRealFunctions_Call_ToInteger_result);
			fUML_Tests_TestRealFunctions_ObjectFlow1231->setTarget(fUML_Tests_TestRealFunctions_Param_ToIntegerResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1231);
			// ObjectFlow ObjectFlow1163 from Fork(0.5) to Minus.y
			fUML_Tests_TestRealFunctions_ObjectFlow1163->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1163);
			fUML_Tests_TestRealFunctions_ObjectFlow1163->setName("ObjectFlow1163");
			fUML_Tests_TestRealFunctions_ObjectFlow1163->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1163->setSource(fUML_Tests_TestRealFunctions_Fork_0_5);
			fUML_Tests_TestRealFunctions_ObjectFlow1163->setTarget(fUML_Tests_TestRealFunctions_Call_Minus_Minus_y);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1163);
			// ControlFlow ControlFlow1233 from Call(Plus) to Call(Minus)
			fUML_Tests_TestRealFunctions_ControlFlow1233->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow1233);
			fUML_Tests_TestRealFunctions_ControlFlow1233->setName("ControlFlow1233");
			fUML_Tests_TestRealFunctions_ControlFlow1233->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow1233->setSource(fUML_Tests_TestRealFunctions_Call_Plus);
			fUML_Tests_TestRealFunctions_ControlFlow1233->setTarget(fUML_Tests_TestRealFunctions_Call_Minus);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow1233);
			// ControlFlow ControlFlow1235 from Call(Min) to Call(Abs)
			fUML_Tests_TestRealFunctions_ControlFlow1235->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow1235);
			fUML_Tests_TestRealFunctions_ControlFlow1235->setName("ControlFlow1235");
			fUML_Tests_TestRealFunctions_ControlFlow1235->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow1235->setSource(fUML_Tests_TestRealFunctions_Call_Min);
			fUML_Tests_TestRealFunctions_ControlFlow1235->setTarget(fUML_Tests_TestRealFunctions_Call_Abs);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow1235);
			// ObjectFlow ObjectFlow1237 from result to Param(DivideResult)
			fUML_Tests_TestRealFunctions_ObjectFlow1237->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1237);
			fUML_Tests_TestRealFunctions_ObjectFlow1237->setName("ObjectFlow1237");
			fUML_Tests_TestRealFunctions_ObjectFlow1237->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1237->setSource(fUML_Tests_TestRealFunctions_Call_Divide_result);
			fUML_Tests_TestRealFunctions_ObjectFlow1237->setTarget(fUML_Tests_TestRealFunctions_Param_DivideResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1237);
			// ObjectFlow ObjectFlow1239 from Value(0.5).result to Fork(0.5)
			fUML_Tests_TestRealFunctions_ObjectFlow1239->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1239);
			fUML_Tests_TestRealFunctions_ObjectFlow1239->setName("ObjectFlow1239");
			fUML_Tests_TestRealFunctions_ObjectFlow1239->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1239->setSource(fUML_Tests_TestRealFunctions_Value_0_5_Value_0_5_result);
			fUML_Tests_TestRealFunctions_ObjectFlow1239->setTarget(fUML_Tests_TestRealFunctions_Fork_0_5);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1239);
			// ObjectFlow ObjectFlow1171 from Fork(0.5) to y
			fUML_Tests_TestRealFunctions_ObjectFlow1171->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1171);
			fUML_Tests_TestRealFunctions_ObjectFlow1171->setName("ObjectFlow1171");
			fUML_Tests_TestRealFunctions_ObjectFlow1171->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1171->setSource(fUML_Tests_TestRealFunctions_Fork_0_5);
			fUML_Tests_TestRealFunctions_ObjectFlow1171->setTarget(fUML_Tests_TestRealFunctions_Call_Divide_y);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1171);
			// ObjectFlow ObjectFlow1177 from Neg.result to Param(NegResult)
			fUML_Tests_TestRealFunctions_ObjectFlow1177->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1177);
			fUML_Tests_TestRealFunctions_ObjectFlow1177->setName("ObjectFlow1177");
			fUML_Tests_TestRealFunctions_ObjectFlow1177->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1177->setSource(fUML_Tests_TestRealFunctions_Call_Neg_Neg_result);
			fUML_Tests_TestRealFunctions_ObjectFlow1177->setTarget(fUML_Tests_TestRealFunctions_Param_NegResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1177);
			// ObjectFlow ObjectFlow1246 from Fork(0.5) to Min.y
			fUML_Tests_TestRealFunctions_ObjectFlow1246->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1246);
			fUML_Tests_TestRealFunctions_ObjectFlow1246->setName("ObjectFlow1246");
			fUML_Tests_TestRealFunctions_ObjectFlow1246->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1246->setSource(fUML_Tests_TestRealFunctions_Fork_0_5);
			fUML_Tests_TestRealFunctions_ObjectFlow1246->setTarget(fUML_Tests_TestRealFunctions_Call_Min_Min_y);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1246);
			// ControlFlow ControlFlow1248 from Call(Neg) to Call(Plus)
			fUML_Tests_TestRealFunctions_ControlFlow1248->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow1248);
			fUML_Tests_TestRealFunctions_ControlFlow1248->setName("ControlFlow1248");
			fUML_Tests_TestRealFunctions_ControlFlow1248->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow1248->setSource(fUML_Tests_TestRealFunctions_Call_Neg);
			fUML_Tests_TestRealFunctions_ControlFlow1248->setTarget(fUML_Tests_TestRealFunctions_Call_Plus);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow1248);
			// ObjectFlow ObjectFlow1250 from Fork(3.1) to Minus.x
			fUML_Tests_TestRealFunctions_ObjectFlow1250->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1250);
			fUML_Tests_TestRealFunctions_ObjectFlow1250->setName("ObjectFlow1250");
			fUML_Tests_TestRealFunctions_ObjectFlow1250->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1250->setSource(fUML_Tests_TestRealFunctions_Fork_3_1);
			fUML_Tests_TestRealFunctions_ObjectFlow1250->setTarget(fUML_Tests_TestRealFunctions_Call_Minus_Minus_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1250);
			// ObjectFlow ObjectFlow1179 from Value(3.1).result to Fork(3.1)
			fUML_Tests_TestRealFunctions_ObjectFlow1179->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1179);
			fUML_Tests_TestRealFunctions_ObjectFlow1179->setName("ObjectFlow1179");
			fUML_Tests_TestRealFunctions_ObjectFlow1179->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1179->setSource(fUML_Tests_TestRealFunctions_Value_3_1_Value_3_1_result);
			fUML_Tests_TestRealFunctions_ObjectFlow1179->setTarget(fUML_Tests_TestRealFunctions_Fork_3_1);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1179);
			// ObjectFlow ObjectFlow1252 from Fork(3.1) to Plus.x
			fUML_Tests_TestRealFunctions_ObjectFlow1252->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1252);
			fUML_Tests_TestRealFunctions_ObjectFlow1252->setName("ObjectFlow1252");
			fUML_Tests_TestRealFunctions_ObjectFlow1252->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1252->setSource(fUML_Tests_TestRealFunctions_Fork_3_1);
			fUML_Tests_TestRealFunctions_ObjectFlow1252->setTarget(fUML_Tests_TestRealFunctions_Call_Plus_Plus_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1252);
			// ControlFlow ControlFlow1254 from Call(Abs) to Call(Floor)
			fUML_Tests_TestRealFunctions_ControlFlow1254->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow1254);
			fUML_Tests_TestRealFunctions_ControlFlow1254->setName("ControlFlow1254");
			fUML_Tests_TestRealFunctions_ControlFlow1254->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow1254->setSource(fUML_Tests_TestRealFunctions_Call_Abs);
			fUML_Tests_TestRealFunctions_ControlFlow1254->setTarget(fUML_Tests_TestRealFunctions_Call_Floor);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow1254);
			// ObjectFlow ObjectFlow1181 from Fork(3.1) to Neg.x
			fUML_Tests_TestRealFunctions_ObjectFlow1181->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1181);
			fUML_Tests_TestRealFunctions_ObjectFlow1181->setName("ObjectFlow1181");
			fUML_Tests_TestRealFunctions_ObjectFlow1181->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1181->setSource(fUML_Tests_TestRealFunctions_Fork_3_1);
			fUML_Tests_TestRealFunctions_ObjectFlow1181->setTarget(fUML_Tests_TestRealFunctions_Call_Neg_Neg_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1181);
			// ControlFlow ControlFlow1183 from Call(Minus) to Call(Inv)
			fUML_Tests_TestRealFunctions_ControlFlow1183->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow1183);
			fUML_Tests_TestRealFunctions_ControlFlow1183->setName("ControlFlow1183");
			fUML_Tests_TestRealFunctions_ControlFlow1183->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow1183->setSource(fUML_Tests_TestRealFunctions_Call_Minus);
			fUML_Tests_TestRealFunctions_ControlFlow1183->setTarget(fUML_Tests_TestRealFunctions_Call_Inv);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow1183);
			// ObjectFlow ObjectFlow1256 from result to Param(FloorResult)
			fUML_Tests_TestRealFunctions_ObjectFlow1256->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1256);
			fUML_Tests_TestRealFunctions_ObjectFlow1256->setName("ObjectFlow1256");
			fUML_Tests_TestRealFunctions_ObjectFlow1256->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1256->setSource(fUML_Tests_TestRealFunctions_Call_Floor_result);
			fUML_Tests_TestRealFunctions_ObjectFlow1256->setTarget(fUML_Tests_TestRealFunctions_Param_FloorResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1256);
			// ObjectFlow ObjectFlow1264 from Fork(3.1) to x
			fUML_Tests_TestRealFunctions_ObjectFlow1264->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1264);
			fUML_Tests_TestRealFunctions_ObjectFlow1264->setName("ObjectFlow1264");
			fUML_Tests_TestRealFunctions_ObjectFlow1264->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1264->setSource(fUML_Tests_TestRealFunctions_Fork_3_1);
			fUML_Tests_TestRealFunctions_ObjectFlow1264->setTarget(fUML_Tests_TestRealFunctions_Call_Divide_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1264);
			// ObjectFlow ObjectFlow1187 from result to Param(InvResult)
			fUML_Tests_TestRealFunctions_ObjectFlow1187->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1187);
			fUML_Tests_TestRealFunctions_ObjectFlow1187->setName("ObjectFlow1187");
			fUML_Tests_TestRealFunctions_ObjectFlow1187->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1187->setSource(fUML_Tests_TestRealFunctions_Call_Inv_result);
			fUML_Tests_TestRealFunctions_ObjectFlow1187->setTarget(fUML_Tests_TestRealFunctions_Param_InvResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1187);
			// ControlFlow ControlFlow1189 from Call(Inv) to Call(Times)
			fUML_Tests_TestRealFunctions_ControlFlow1189->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow1189);
			fUML_Tests_TestRealFunctions_ControlFlow1189->setName("ControlFlow1189");
			fUML_Tests_TestRealFunctions_ControlFlow1189->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow1189->setSource(fUML_Tests_TestRealFunctions_Call_Inv);
			fUML_Tests_TestRealFunctions_ControlFlow1189->setTarget(fUML_Tests_TestRealFunctions_Call_Times);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow1189);
			// ControlFlow ControlFlow1266 from Call(Divide) to Call(Max)
			fUML_Tests_TestRealFunctions_ControlFlow1266->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow1266);
			fUML_Tests_TestRealFunctions_ControlFlow1266->setName("ControlFlow1266");
			fUML_Tests_TestRealFunctions_ControlFlow1266->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow1266->setSource(fUML_Tests_TestRealFunctions_Call_Divide);
			fUML_Tests_TestRealFunctions_ControlFlow1266->setTarget(fUML_Tests_TestRealFunctions_Call_Max);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow1266);
			// ObjectFlow ObjectFlow1191 from Fork(-2.3) to Round.x
			fUML_Tests_TestRealFunctions_ObjectFlow1191->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1191);
			fUML_Tests_TestRealFunctions_ObjectFlow1191->setName("ObjectFlow1191");
			fUML_Tests_TestRealFunctions_ObjectFlow1191->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1191->setSource(fUML_Tests_TestRealFunctions_Fork_minus2_3);
			fUML_Tests_TestRealFunctions_ObjectFlow1191->setTarget(fUML_Tests_TestRealFunctions_Call_Round_Round_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1191);
			// ControlFlow ControlFlow1193 from Call(Max) to Call(Min)
			fUML_Tests_TestRealFunctions_ControlFlow1193->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow1193);
			fUML_Tests_TestRealFunctions_ControlFlow1193->setName("ControlFlow1193");
			fUML_Tests_TestRealFunctions_ControlFlow1193->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow1193->setSource(fUML_Tests_TestRealFunctions_Call_Max);
			fUML_Tests_TestRealFunctions_ControlFlow1193->setTarget(fUML_Tests_TestRealFunctions_Call_Min);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow1193);
			// ObjectFlow ObjectFlow1272 from Round.result to Param(RoundResult)
			fUML_Tests_TestRealFunctions_ObjectFlow1272->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1272);
			fUML_Tests_TestRealFunctions_ObjectFlow1272->setName("ObjectFlow1272");
			fUML_Tests_TestRealFunctions_ObjectFlow1272->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1272->setSource(fUML_Tests_TestRealFunctions_Call_Round_Round_result);
			fUML_Tests_TestRealFunctions_ObjectFlow1272->setTarget(fUML_Tests_TestRealFunctions_Param_RoundResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1272);
			// ObjectFlow ObjectFlow1274 from Fork(-2.3) to x
			fUML_Tests_TestRealFunctions_ObjectFlow1274->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1274);
			fUML_Tests_TestRealFunctions_ObjectFlow1274->setName("ObjectFlow1274");
			fUML_Tests_TestRealFunctions_ObjectFlow1274->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1274->setSource(fUML_Tests_TestRealFunctions_Fork_minus2_3);
			fUML_Tests_TestRealFunctions_ObjectFlow1274->setTarget(fUML_Tests_TestRealFunctions_Call_Floor_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1274);
			// ObjectFlow ObjectFlow1195 from Plus.result to Param(PlusResult)
			fUML_Tests_TestRealFunctions_ObjectFlow1195->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1195);
			fUML_Tests_TestRealFunctions_ObjectFlow1195->setName("ObjectFlow1195");
			fUML_Tests_TestRealFunctions_ObjectFlow1195->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1195->setSource(fUML_Tests_TestRealFunctions_Call_Plus_Plus_result);
			fUML_Tests_TestRealFunctions_ObjectFlow1195->setTarget(fUML_Tests_TestRealFunctions_Param_PlusResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1195);
			// ObjectFlow ObjectFlow1276 from Fork(-2.3) to Abs.x
			fUML_Tests_TestRealFunctions_ObjectFlow1276->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1276);
			fUML_Tests_TestRealFunctions_ObjectFlow1276->setName("ObjectFlow1276");
			fUML_Tests_TestRealFunctions_ObjectFlow1276->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1276->setSource(fUML_Tests_TestRealFunctions_Fork_minus2_3);
			fUML_Tests_TestRealFunctions_ObjectFlow1276->setTarget(fUML_Tests_TestRealFunctions_Call_Abs_Abs_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1276);
			// ObjectFlow ObjectFlow1209 from Fork(0.5) to Times.y
			fUML_Tests_TestRealFunctions_ObjectFlow1209->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1209);
			fUML_Tests_TestRealFunctions_ObjectFlow1209->setName("ObjectFlow1209");
			fUML_Tests_TestRealFunctions_ObjectFlow1209->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1209->setSource(fUML_Tests_TestRealFunctions_Fork_0_5);
			fUML_Tests_TestRealFunctions_ObjectFlow1209->setTarget(fUML_Tests_TestRealFunctions_Call_Times_Times_y);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1209);
			// ObjectFlow ObjectFlow1285 from Value(-2.3).result to Fork(-2.3)
			fUML_Tests_TestRealFunctions_ObjectFlow1285->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1285);
			fUML_Tests_TestRealFunctions_ObjectFlow1285->setName("ObjectFlow1285");
			fUML_Tests_TestRealFunctions_ObjectFlow1285->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1285->setSource(fUML_Tests_TestRealFunctions_Value_minus2_3_Value_minus2_3_result);
			fUML_Tests_TestRealFunctions_ObjectFlow1285->setTarget(fUML_Tests_TestRealFunctions_Fork_minus2_3);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1285);
			// ControlFlow ControlFlow1211 from Call(Times) to Call(Divide)
			fUML_Tests_TestRealFunctions_ControlFlow1211->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ControlFlow1211);
			fUML_Tests_TestRealFunctions_ControlFlow1211->setName("ControlFlow1211");
			fUML_Tests_TestRealFunctions_ControlFlow1211->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ControlFlow1211->setSource(fUML_Tests_TestRealFunctions_Call_Times);
			fUML_Tests_TestRealFunctions_ControlFlow1211->setTarget(fUML_Tests_TestRealFunctions_Call_Divide);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ControlFlow1211);
			// ObjectFlow ObjectFlow1287 from Fork(0.5) to x
			fUML_Tests_TestRealFunctions_ObjectFlow1287->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1287);
			fUML_Tests_TestRealFunctions_ObjectFlow1287->setName("ObjectFlow1287");
			fUML_Tests_TestRealFunctions_ObjectFlow1287->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1287->setSource(fUML_Tests_TestRealFunctions_Fork_0_5);
			fUML_Tests_TestRealFunctions_ObjectFlow1287->setTarget(fUML_Tests_TestRealFunctions_Call_Inv_x);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1287);
			// ObjectFlow ObjectFlow1289 from Max.result to Param(MaxResult)
			fUML_Tests_TestRealFunctions_ObjectFlow1289->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1289);
			fUML_Tests_TestRealFunctions_ObjectFlow1289->setName("ObjectFlow1289");
			fUML_Tests_TestRealFunctions_ObjectFlow1289->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1289->setSource(fUML_Tests_TestRealFunctions_Call_Max_Max_result);
			fUML_Tests_TestRealFunctions_ObjectFlow1289->setTarget(fUML_Tests_TestRealFunctions_Param_MaxResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1289);
			// ObjectFlow ObjectFlow1213 from Abs.result to Call(AbsResult)
			fUML_Tests_TestRealFunctions_ObjectFlow1213->setThisActivityEdgePtr(fUML_Tests_TestRealFunctions_ObjectFlow1213);
			fUML_Tests_TestRealFunctions_ObjectFlow1213->setName("ObjectFlow1213");
			fUML_Tests_TestRealFunctions_ObjectFlow1213->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealFunctions_ObjectFlow1213->setSource(fUML_Tests_TestRealFunctions_Call_Abs_Abs_result);
			fUML_Tests_TestRealFunctions_ObjectFlow1213->setTarget(fUML_Tests_TestRealFunctions_Call_AbsResult);
		fUML_Tests_TestRealFunctions->addEdge(fUML_Tests_TestRealFunctions_ObjectFlow1213);
	fUML_Tests->addPackagedElement(fUML_Tests_TestRealFunctions);
		// Class TestComposite
		fUML_Tests_TestComposite->setThisClass_Ptr(fUML_Tests_TestComposite);
		fUML_Tests_TestComposite->setName("TestComposite");
		fUML_Tests_TestComposite->setVisibility(VisibilityKind::public_);
		
			// Property c1
			fUML_Tests_TestComposite_c1->setThisElementPtr(fUML_Tests_TestComposite_c1);
			fUML_Tests_TestComposite_c1->setName("c1");
			fUML_Tests_TestComposite_c1->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestComposite_c1->setType(fUML_Tests_TestClass);
			fUML_Tests_TestComposite_c1->setAggregation(AggregationKind::composite);
		fUML_Tests_TestComposite->addOwnedAttribute(fUML_Tests_TestComposite_c1);
	fUML_Tests->addPackagedElement(fUML_Tests_TestComposite);
		// Activity TestNodeEnabler
		fUML_Tests_TestNodeEnabler->setThisActivityPtr(fUML_Tests_TestNodeEnabler);
		fUML_Tests_TestNodeEnabler->setName("TestNodeEnabler");
		fUML_Tests_TestNodeEnabler->setVisibility(VisibilityKind::public_);
			// Parameter output
			fUML_Tests_TestNodeEnabler_output->setThisElementPtr(fUML_Tests_TestNodeEnabler_output);
			fUML_Tests_TestNodeEnabler_output->setName("output");
			fUML_Tests_TestNodeEnabler_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestNodeEnabler_output->setLower(0);
			fUML_Tests_TestNodeEnabler_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestNodeEnabler_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestNodeEnabler->addOwnedParameter(fUML_Tests_TestNodeEnabler_output);
			// ActivityParameterNode outputNode
			fUML_Tests_TestNodeEnabler_outputNode->setThisElementPtr(fUML_Tests_TestNodeEnabler_outputNode);
			fUML_Tests_TestNodeEnabler_outputNode->setName("outputNode");
			fUML_Tests_TestNodeEnabler_outputNode->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestNodeEnabler_outputNode->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestNodeEnabler_outputNode->setParameter(fUML_Tests_TestNodeEnabler_output);
		fUML_Tests_TestNodeEnabler->addNode(fUML_Tests_TestNodeEnabler_outputNode);
			// ValueSpecificationAction Value(1)
			fUML_Tests_TestNodeEnabler_Value_1->setThisExecutableNodePtr(fUML_Tests_TestNodeEnabler_Value_1);
			fUML_Tests_TestNodeEnabler_Value_1->setName("Value(1)");
			fUML_Tests_TestNodeEnabler_Value_1->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1295
				fUML_Tests_TestNodeEnabler_Value_1_LiteralInteger1295->setThisElementPtr(fUML_Tests_TestNodeEnabler_Value_1_LiteralInteger1295);
				fUML_Tests_TestNodeEnabler_Value_1_LiteralInteger1295->setName("LiteralInteger1295");
				fUML_Tests_TestNodeEnabler_Value_1_LiteralInteger1295->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestNodeEnabler_Value_1_LiteralInteger1295->setValue(1);
			fUML_Tests_TestNodeEnabler_Value_1->setValue(fUML_Tests_TestNodeEnabler_Value_1_LiteralInteger1295);
				// OutputPin Value(1).result
				fUML_Tests_TestNodeEnabler_Value_1_Value_1_result->setThisElementPtr(fUML_Tests_TestNodeEnabler_Value_1_Value_1_result);
				fUML_Tests_TestNodeEnabler_Value_1_Value_1_result->setName("Value(1).result");
				fUML_Tests_TestNodeEnabler_Value_1_Value_1_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestNodeEnabler_Value_1_Value_1_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestNodeEnabler_Value_1->setResult(fUML_Tests_TestNodeEnabler_Value_1_Value_1_result);
		fUML_Tests_TestNodeEnabler->addNode(fUML_Tests_TestNodeEnabler_Value_1);
			// CallBehaviorAction Call(NodeEnabler)
			fUML_Tests_TestNodeEnabler_Call_NodeEnabler->setThisExecutableNodePtr(fUML_Tests_TestNodeEnabler_Call_NodeEnabler);
			fUML_Tests_TestNodeEnabler_Call_NodeEnabler->setName("Call(NodeEnabler)");
			fUML_Tests_TestNodeEnabler_Call_NodeEnabler->setVisibility(VisibilityKind::public_);
				// OutputPin Call(NodeEnabler).output
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output->setThisElementPtr(fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output);
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output->setName("Call(NodeEnabler).output");
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output->setLower(0);
			fUML_Tests_TestNodeEnabler_Call_NodeEnabler->addResult(fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output);
			fUML_Tests_TestNodeEnabler_Call_NodeEnabler->setBehavior(fUML_Tests_NodeEnabler);
				// InputPin Call(NodeEnabler).input
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input->setThisElementPtr(fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input);
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input->setName("Call(NodeEnabler).input");
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input->setLower(0);
			fUML_Tests_TestNodeEnabler_Call_NodeEnabler->addArgument(fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input);
		fUML_Tests_TestNodeEnabler->addNode(fUML_Tests_TestNodeEnabler_Call_NodeEnabler);
			// ObjectFlow ObjectFlow1291 from Call(NodeEnabler).output to outputNode
			fUML_Tests_TestNodeEnabler_ObjectFlow1291->setThisActivityEdgePtr(fUML_Tests_TestNodeEnabler_ObjectFlow1291);
			fUML_Tests_TestNodeEnabler_ObjectFlow1291->setName("ObjectFlow1291");
			fUML_Tests_TestNodeEnabler_ObjectFlow1291->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestNodeEnabler_ObjectFlow1291->setSource(fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_output);
			fUML_Tests_TestNodeEnabler_ObjectFlow1291->setTarget(fUML_Tests_TestNodeEnabler_outputNode);
		fUML_Tests_TestNodeEnabler->addEdge(fUML_Tests_TestNodeEnabler_ObjectFlow1291);
			// ObjectFlow ObjectFlow1293 from Value(1).result to Call(NodeEnabler).input
			fUML_Tests_TestNodeEnabler_ObjectFlow1293->setThisActivityEdgePtr(fUML_Tests_TestNodeEnabler_ObjectFlow1293);
			fUML_Tests_TestNodeEnabler_ObjectFlow1293->setName("ObjectFlow1293");
			fUML_Tests_TestNodeEnabler_ObjectFlow1293->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestNodeEnabler_ObjectFlow1293->setSource(fUML_Tests_TestNodeEnabler_Value_1_Value_1_result);
			fUML_Tests_TestNodeEnabler_ObjectFlow1293->setTarget(fUML_Tests_TestNodeEnabler_Call_NodeEnabler_Call_NodeEnabler_input);
		fUML_Tests_TestNodeEnabler->addEdge(fUML_Tests_TestNodeEnabler_ObjectFlow1293);
	fUML_Tests->addPackagedElement(fUML_Tests_TestNodeEnabler);
		// Signal TestSignal
		fUML_Tests_TestSignal->setThisSignalPtr(fUML_Tests_TestSignal);
		fUML_Tests_TestSignal->setName("TestSignal");
		fUML_Tests_TestSignal->setVisibility(VisibilityKind::public_);
	fUML_Tests->addPackagedElement(fUML_Tests_TestSignal);
		// Activity TestClassWriterReader
		fUML_Tests_TestClassWriterReader->setThisActivityPtr(fUML_Tests_TestClassWriterReader);
		fUML_Tests_TestClassWriterReader->setName("TestClassWriterReader");
		fUML_Tests_TestClassWriterReader->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestClassWriterReader->isReentrant = false;
			// Parameter x
			fUML_Tests_TestClassWriterReader_x->setThisElementPtr(fUML_Tests_TestClassWriterReader_x);
			fUML_Tests_TestClassWriterReader_x->setName("x");
			fUML_Tests_TestClassWriterReader_x->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassWriterReader_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassWriterReader_x->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestClassWriterReader->addOwnedParameter(fUML_Tests_TestClassWriterReader_x);
			// AddStructuralFeatureValueAction Write(x)
			fUML_Tests_TestClassWriterReader_Write_x->setThisExecutableNodePtr(fUML_Tests_TestClassWriterReader_Write_x);
			fUML_Tests_TestClassWriterReader_Write_x->setName("Write(x)");
			fUML_Tests_TestClassWriterReader_Write_x->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassWriterReader_Write_x->setStructuralFeature(fUML_Tests_TestClass_x);
				// InputPin Write(x).object
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_object->setThisElementPtr(fUML_Tests_TestClassWriterReader_Write_x_Write_x_object);
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_object->setName("Write(x).object");
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassWriterReader_Write_x->setObject(fUML_Tests_TestClassWriterReader_Write_x_Write_x_object);
				// InputPin Write(x).value
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_value->setThisElementPtr(fUML_Tests_TestClassWriterReader_Write_x_Write_x_value);
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_value->setName("Write(x).value");
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_value->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_value->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassWriterReader_Write_x->setValue(fUML_Tests_TestClassWriterReader_Write_x_Write_x_value);
				// OutputPin Write(x).result
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_result->setThisElementPtr(fUML_Tests_TestClassWriterReader_Write_x_Write_x_result);
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_result->setName("Write(x).result");
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassWriterReader_Write_x_Write_x_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassWriterReader_Write_x->setResult(fUML_Tests_TestClassWriterReader_Write_x_Write_x_result);
			fUML_Tests_TestClassWriterReader_Write_x->setIsReplaceAll(true);
		fUML_Tests_TestClassWriterReader->addNode(fUML_Tests_TestClassWriterReader_Write_x);
			// CreateObjectAction Create(TestClass)
			fUML_Tests_TestClassWriterReader_Create_TestClass->setThisExecutableNodePtr(fUML_Tests_TestClassWriterReader_Create_TestClass);
			fUML_Tests_TestClassWriterReader_Create_TestClass->setName("Create(TestClass)");
			fUML_Tests_TestClassWriterReader_Create_TestClass->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassWriterReader_Create_TestClass->setClassifier(fUML_Tests_TestClass);
				// OutputPin Create(TestClass).result
				fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result->setThisElementPtr(fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result);
				fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result->setName("Create(TestClass).result");
				fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassWriterReader_Create_TestClass->setResult(fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result);
		fUML_Tests_TestClassWriterReader->addNode(fUML_Tests_TestClassWriterReader_Create_TestClass);
			// ValueSpecificationAction Value(999)
			fUML_Tests_TestClassWriterReader_Value_999->setThisExecutableNodePtr(fUML_Tests_TestClassWriterReader_Value_999);
			fUML_Tests_TestClassWriterReader_Value_999->setName("Value(999)");
			fUML_Tests_TestClassWriterReader_Value_999->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1316
				fUML_Tests_TestClassWriterReader_Value_999_LiteralInteger1316->setThisElementPtr(fUML_Tests_TestClassWriterReader_Value_999_LiteralInteger1316);
				fUML_Tests_TestClassWriterReader_Value_999_LiteralInteger1316->setName("LiteralInteger1316");
				fUML_Tests_TestClassWriterReader_Value_999_LiteralInteger1316->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassWriterReader_Value_999_LiteralInteger1316->setValue(999);
			fUML_Tests_TestClassWriterReader_Value_999->setValue(fUML_Tests_TestClassWriterReader_Value_999_LiteralInteger1316);
				// OutputPin Value(999).result
				fUML_Tests_TestClassWriterReader_Value_999_Value_999_result->setThisElementPtr(fUML_Tests_TestClassWriterReader_Value_999_Value_999_result);
				fUML_Tests_TestClassWriterReader_Value_999_Value_999_result->setName("Value(999).result");
				fUML_Tests_TestClassWriterReader_Value_999_Value_999_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassWriterReader_Value_999_Value_999_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassWriterReader_Value_999->setResult(fUML_Tests_TestClassWriterReader_Value_999_Value_999_result);
		fUML_Tests_TestClassWriterReader->addNode(fUML_Tests_TestClassWriterReader_Value_999);
			// ActivityParameterNode Parameter(x)
			fUML_Tests_TestClassWriterReader_Parameter_x->setThisElementPtr(fUML_Tests_TestClassWriterReader_Parameter_x);
			fUML_Tests_TestClassWriterReader_Parameter_x->setName("Parameter(x)");
			fUML_Tests_TestClassWriterReader_Parameter_x->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassWriterReader_Parameter_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassWriterReader_Parameter_x->setParameter(fUML_Tests_TestClassWriterReader_x);
		fUML_Tests_TestClassWriterReader->addNode(fUML_Tests_TestClassWriterReader_Parameter_x);
			// ReadStructuralFeatureAction Read(x)
			fUML_Tests_TestClassWriterReader_Read_x->setThisExecutableNodePtr(fUML_Tests_TestClassWriterReader_Read_x);
			fUML_Tests_TestClassWriterReader_Read_x->setName("Read(x)");
			fUML_Tests_TestClassWriterReader_Read_x->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestClassWriterReader_Read_x->setStructuralFeature(fUML_Tests_TestClass_x);
				// InputPin Read(x).object
				fUML_Tests_TestClassWriterReader_Read_x_Read_x_object->setThisElementPtr(fUML_Tests_TestClassWriterReader_Read_x_Read_x_object);
				fUML_Tests_TestClassWriterReader_Read_x_Read_x_object->setName("Read(x).object");
				fUML_Tests_TestClassWriterReader_Read_x_Read_x_object->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassWriterReader_Read_x_Read_x_object->setType(fUML_Tests_TestClass);
			fUML_Tests_TestClassWriterReader_Read_x->setObject(fUML_Tests_TestClassWriterReader_Read_x_Read_x_object);
				// OutputPin Read(x).result
				fUML_Tests_TestClassWriterReader_Read_x_Read_x_result->setThisElementPtr(fUML_Tests_TestClassWriterReader_Read_x_Read_x_result);
				fUML_Tests_TestClassWriterReader_Read_x_Read_x_result->setName("Read(x).result");
				fUML_Tests_TestClassWriterReader_Read_x_Read_x_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestClassWriterReader_Read_x_Read_x_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestClassWriterReader_Read_x->setResult(fUML_Tests_TestClassWriterReader_Read_x_Read_x_result);
		fUML_Tests_TestClassWriterReader->addNode(fUML_Tests_TestClassWriterReader_Read_x);
			// ObjectFlow ObjectFlow1302 from Value(999).result to Write(x).value
			fUML_Tests_TestClassWriterReader_ObjectFlow1302->setThisActivityEdgePtr(fUML_Tests_TestClassWriterReader_ObjectFlow1302);
			fUML_Tests_TestClassWriterReader_ObjectFlow1302->setName("ObjectFlow1302");
			fUML_Tests_TestClassWriterReader_ObjectFlow1302->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassWriterReader_ObjectFlow1302->setSource(fUML_Tests_TestClassWriterReader_Value_999_Value_999_result);
			fUML_Tests_TestClassWriterReader_ObjectFlow1302->setTarget(fUML_Tests_TestClassWriterReader_Write_x_Write_x_value);
		fUML_Tests_TestClassWriterReader->addEdge(fUML_Tests_TestClassWriterReader_ObjectFlow1302);
			// ObjectFlow ObjectFlow1310 from Read(x).result to Parameter(x)
			fUML_Tests_TestClassWriterReader_ObjectFlow1310->setThisActivityEdgePtr(fUML_Tests_TestClassWriterReader_ObjectFlow1310);
			fUML_Tests_TestClassWriterReader_ObjectFlow1310->setName("ObjectFlow1310");
			fUML_Tests_TestClassWriterReader_ObjectFlow1310->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassWriterReader_ObjectFlow1310->setSource(fUML_Tests_TestClassWriterReader_Read_x_Read_x_result);
			fUML_Tests_TestClassWriterReader_ObjectFlow1310->setTarget(fUML_Tests_TestClassWriterReader_Parameter_x);
		fUML_Tests_TestClassWriterReader->addEdge(fUML_Tests_TestClassWriterReader_ObjectFlow1310);
			// ObjectFlow ObjectFlow1312 from Create(TestClass).result to Write(x).object
			fUML_Tests_TestClassWriterReader_ObjectFlow1312->setThisActivityEdgePtr(fUML_Tests_TestClassWriterReader_ObjectFlow1312);
			fUML_Tests_TestClassWriterReader_ObjectFlow1312->setName("ObjectFlow1312");
			fUML_Tests_TestClassWriterReader_ObjectFlow1312->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassWriterReader_ObjectFlow1312->setSource(fUML_Tests_TestClassWriterReader_Create_TestClass_Create_TestClass_result);
			fUML_Tests_TestClassWriterReader_ObjectFlow1312->setTarget(fUML_Tests_TestClassWriterReader_Write_x_Write_x_object);
		fUML_Tests_TestClassWriterReader->addEdge(fUML_Tests_TestClassWriterReader_ObjectFlow1312);
			// ObjectFlow ObjectFlow1319 from Write(x).result to Read(x).object
			fUML_Tests_TestClassWriterReader_ObjectFlow1319->setThisActivityEdgePtr(fUML_Tests_TestClassWriterReader_ObjectFlow1319);
			fUML_Tests_TestClassWriterReader_ObjectFlow1319->setName("ObjectFlow1319");
			fUML_Tests_TestClassWriterReader_ObjectFlow1319->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestClassWriterReader_ObjectFlow1319->setSource(fUML_Tests_TestClassWriterReader_Write_x_Write_x_result);
			fUML_Tests_TestClassWriterReader_ObjectFlow1319->setTarget(fUML_Tests_TestClassWriterReader_Read_x_Read_x_object);
		fUML_Tests_TestClassWriterReader->addEdge(fUML_Tests_TestClassWriterReader_ObjectFlow1319);
	fUML_Tests->addPackagedElement(fUML_Tests_TestClassWriterReader);
		// Activity TestRealComparisonFunctions
		fUML_Tests_TestRealComparisonFunctions->setThisActivityPtr(fUML_Tests_TestRealComparisonFunctions);
		fUML_Tests_TestRealComparisonFunctions->setName("TestRealComparisonFunctions");
		fUML_Tests_TestRealComparisonFunctions->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestRealComparisonFunctions->isReentrant = false;
			// Parameter LTResult
			fUML_Tests_TestRealComparisonFunctions_LTResult->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_LTResult);
			fUML_Tests_TestRealComparisonFunctions_LTResult->setName("LTResult");
			fUML_Tests_TestRealComparisonFunctions_LTResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_LTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_LTResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealComparisonFunctions->addOwnedParameter(fUML_Tests_TestRealComparisonFunctions_LTResult);
			// Parameter LEResult
			fUML_Tests_TestRealComparisonFunctions_LEResult->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_LEResult);
			fUML_Tests_TestRealComparisonFunctions_LEResult->setName("LEResult");
			fUML_Tests_TestRealComparisonFunctions_LEResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_LEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_LEResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealComparisonFunctions->addOwnedParameter(fUML_Tests_TestRealComparisonFunctions_LEResult);
			// Parameter GTResult
			fUML_Tests_TestRealComparisonFunctions_GTResult->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_GTResult);
			fUML_Tests_TestRealComparisonFunctions_GTResult->setName("GTResult");
			fUML_Tests_TestRealComparisonFunctions_GTResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_GTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_GTResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealComparisonFunctions->addOwnedParameter(fUML_Tests_TestRealComparisonFunctions_GTResult);
			// Parameter GEResult
			fUML_Tests_TestRealComparisonFunctions_GEResult->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_GEResult);
			fUML_Tests_TestRealComparisonFunctions_GEResult->setName("GEResult");
			fUML_Tests_TestRealComparisonFunctions_GEResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_GEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_GEResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestRealComparisonFunctions->addOwnedParameter(fUML_Tests_TestRealComparisonFunctions_GEResult);
			// ForkNode Fork(2.0)
			fUML_Tests_TestRealComparisonFunctions_Fork_2_0->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Fork_2_0);
			fUML_Tests_TestRealComparisonFunctions_Fork_2_0->setName("Fork(2.0)");
			fUML_Tests_TestRealComparisonFunctions_Fork_2_0->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Fork_2_0);
			// ActivityParameterNode Param(LEResult)
			fUML_Tests_TestRealComparisonFunctions_Param_LEResult->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Param_LEResult);
			fUML_Tests_TestRealComparisonFunctions_Param_LEResult->setName("Param(LEResult)");
			fUML_Tests_TestRealComparisonFunctions_Param_LEResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealComparisonFunctions_Param_LEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_Param_LEResult->setParameter(fUML_Tests_TestRealComparisonFunctions_LEResult);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Param_LEResult);
			// ValueSpecificationAction Value(3.0)
			fUML_Tests_TestRealComparisonFunctions_Value_3_0->setThisExecutableNodePtr(fUML_Tests_TestRealComparisonFunctions_Value_3_0);
			fUML_Tests_TestRealComparisonFunctions_Value_3_0->setName("Value(3.0)");
			fUML_Tests_TestRealComparisonFunctions_Value_3_0->setVisibility(VisibilityKind::public_);
				// LiteralReal LiteralReal1335
				fUML_Tests_TestRealComparisonFunctions_Value_3_0_LiteralReal1335->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Value_3_0_LiteralReal1335);
				fUML_Tests_TestRealComparisonFunctions_Value_3_0_LiteralReal1335->setName("LiteralReal1335");
				fUML_Tests_TestRealComparisonFunctions_Value_3_0_LiteralReal1335->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Value_3_0_LiteralReal1335->setValue(3.0f);
			fUML_Tests_TestRealComparisonFunctions_Value_3_0->setValue(fUML_Tests_TestRealComparisonFunctions_Value_3_0_LiteralReal1335);
				// OutputPin Value(3.0).result
				fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result);
				fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result->setName("Value(3.0).result");
				fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealComparisonFunctions_Value_3_0->setResult(fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Value_3_0);
			// ValueSpecificationAction Value(2.0)
			fUML_Tests_TestRealComparisonFunctions_Value_2_0->setThisExecutableNodePtr(fUML_Tests_TestRealComparisonFunctions_Value_2_0);
			fUML_Tests_TestRealComparisonFunctions_Value_2_0->setName("Value(2.0)");
			fUML_Tests_TestRealComparisonFunctions_Value_2_0->setVisibility(VisibilityKind::public_);
				// LiteralReal LiteralReal1380
				fUML_Tests_TestRealComparisonFunctions_Value_2_0_LiteralReal1380->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Value_2_0_LiteralReal1380);
				fUML_Tests_TestRealComparisonFunctions_Value_2_0_LiteralReal1380->setName("LiteralReal1380");
				fUML_Tests_TestRealComparisonFunctions_Value_2_0_LiteralReal1380->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Value_2_0_LiteralReal1380->setValue(2.0f);
			fUML_Tests_TestRealComparisonFunctions_Value_2_0->setValue(fUML_Tests_TestRealComparisonFunctions_Value_2_0_LiteralReal1380);
				// OutputPin Value(2.0).result
				fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result);
				fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result->setName("Value(2.0).result");
				fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestRealComparisonFunctions_Value_2_0->setResult(fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Value_2_0);
			// ActivityParameterNode Param(LTResult)
			fUML_Tests_TestRealComparisonFunctions_Param_LTResult->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Param_LTResult);
			fUML_Tests_TestRealComparisonFunctions_Param_LTResult->setName("Param(LTResult)");
			fUML_Tests_TestRealComparisonFunctions_Param_LTResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealComparisonFunctions_Param_LTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_Param_LTResult->setParameter(fUML_Tests_TestRealComparisonFunctions_LTResult);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Param_LTResult);
			// ActivityParameterNode Param(GEResult)
			fUML_Tests_TestRealComparisonFunctions_Param_GEResult->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Param_GEResult);
			fUML_Tests_TestRealComparisonFunctions_Param_GEResult->setName("Param(GEResult)");
			fUML_Tests_TestRealComparisonFunctions_Param_GEResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealComparisonFunctions_Param_GEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_Param_GEResult->setParameter(fUML_Tests_TestRealComparisonFunctions_GEResult);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Param_GEResult);
			// CallBehaviorAction Call(GE)
			fUML_Tests_TestRealComparisonFunctions_Call_GE->setThisExecutableNodePtr(fUML_Tests_TestRealComparisonFunctions_Call_GE);
			fUML_Tests_TestRealComparisonFunctions_Call_GE->setName("Call(GE)");
			fUML_Tests_TestRealComparisonFunctions_Call_GE->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestRealComparisonFunctions_Call_GE_result->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_GE_result);
				fUML_Tests_TestRealComparisonFunctions_Call_GE_result->setName("result");
				fUML_Tests_TestRealComparisonFunctions_Call_GE_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_GE_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_Call_GE->addResult(fUML_Tests_TestRealComparisonFunctions_Call_GE_result);
			fUML_Tests_TestRealComparisonFunctions_Call_GE->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_greaterOrEqual);
				// InputPin x
				fUML_Tests_TestRealComparisonFunctions_Call_GE_x->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_GE_x);
				fUML_Tests_TestRealComparisonFunctions_Call_GE_x->setName("x");
				fUML_Tests_TestRealComparisonFunctions_Call_GE_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_GE_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealComparisonFunctions_Call_GE->addArgument(fUML_Tests_TestRealComparisonFunctions_Call_GE_x);
				// InputPin y
				fUML_Tests_TestRealComparisonFunctions_Call_GE_y->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_GE_y);
				fUML_Tests_TestRealComparisonFunctions_Call_GE_y->setName("y");
				fUML_Tests_TestRealComparisonFunctions_Call_GE_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_GE_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealComparisonFunctions_Call_GE->addArgument(fUML_Tests_TestRealComparisonFunctions_Call_GE_y);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Call_GE);
			// ActivityParameterNode Param(GTResult)
			fUML_Tests_TestRealComparisonFunctions_Param_GTResult->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Param_GTResult);
			fUML_Tests_TestRealComparisonFunctions_Param_GTResult->setName("Param(GTResult)");
			fUML_Tests_TestRealComparisonFunctions_Param_GTResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestRealComparisonFunctions_Param_GTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_Param_GTResult->setParameter(fUML_Tests_TestRealComparisonFunctions_GTResult);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Param_GTResult);
			// CallBehaviorAction Call(LE)
			fUML_Tests_TestRealComparisonFunctions_Call_LE->setThisExecutableNodePtr(fUML_Tests_TestRealComparisonFunctions_Call_LE);
			fUML_Tests_TestRealComparisonFunctions_Call_LE->setName("Call(LE)");
			fUML_Tests_TestRealComparisonFunctions_Call_LE->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestRealComparisonFunctions_Call_LE_result->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_LE_result);
				fUML_Tests_TestRealComparisonFunctions_Call_LE_result->setName("result");
				fUML_Tests_TestRealComparisonFunctions_Call_LE_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_LE_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_Call_LE->addResult(fUML_Tests_TestRealComparisonFunctions_Call_LE_result);
			fUML_Tests_TestRealComparisonFunctions_Call_LE->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_lessOrEqual);
				// InputPin x
				fUML_Tests_TestRealComparisonFunctions_Call_LE_x->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_LE_x);
				fUML_Tests_TestRealComparisonFunctions_Call_LE_x->setName("x");
				fUML_Tests_TestRealComparisonFunctions_Call_LE_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_LE_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealComparisonFunctions_Call_LE->addArgument(fUML_Tests_TestRealComparisonFunctions_Call_LE_x);
				// InputPin y
				fUML_Tests_TestRealComparisonFunctions_Call_LE_y->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_LE_y);
				fUML_Tests_TestRealComparisonFunctions_Call_LE_y->setName("y");
				fUML_Tests_TestRealComparisonFunctions_Call_LE_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_LE_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealComparisonFunctions_Call_LE->addArgument(fUML_Tests_TestRealComparisonFunctions_Call_LE_y);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Call_LE);
			// ForkNode Fork(3.0)
			fUML_Tests_TestRealComparisonFunctions_Fork_3_0->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Fork_3_0);
			fUML_Tests_TestRealComparisonFunctions_Fork_3_0->setName("Fork(3.0)");
			fUML_Tests_TestRealComparisonFunctions_Fork_3_0->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Fork_3_0);
			// CallBehaviorAction Call(LT)
			fUML_Tests_TestRealComparisonFunctions_Call_LT->setThisExecutableNodePtr(fUML_Tests_TestRealComparisonFunctions_Call_LT);
			fUML_Tests_TestRealComparisonFunctions_Call_LT->setName("Call(LT)");
			fUML_Tests_TestRealComparisonFunctions_Call_LT->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestRealComparisonFunctions_Call_LT_result->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_LT_result);
				fUML_Tests_TestRealComparisonFunctions_Call_LT_result->setName("result");
				fUML_Tests_TestRealComparisonFunctions_Call_LT_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_LT_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_Call_LT->addResult(fUML_Tests_TestRealComparisonFunctions_Call_LT_result);
			fUML_Tests_TestRealComparisonFunctions_Call_LT->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_lessThan);
				// InputPin x
				fUML_Tests_TestRealComparisonFunctions_Call_LT_x->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_LT_x);
				fUML_Tests_TestRealComparisonFunctions_Call_LT_x->setName("x");
				fUML_Tests_TestRealComparisonFunctions_Call_LT_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_LT_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealComparisonFunctions_Call_LT->addArgument(fUML_Tests_TestRealComparisonFunctions_Call_LT_x);
				// InputPin y
				fUML_Tests_TestRealComparisonFunctions_Call_LT_y->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_LT_y);
				fUML_Tests_TestRealComparisonFunctions_Call_LT_y->setName("y");
				fUML_Tests_TestRealComparisonFunctions_Call_LT_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_LT_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealComparisonFunctions_Call_LT->addArgument(fUML_Tests_TestRealComparisonFunctions_Call_LT_y);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Call_LT);
			// CallBehaviorAction Call(GT)
			fUML_Tests_TestRealComparisonFunctions_Call_GT->setThisExecutableNodePtr(fUML_Tests_TestRealComparisonFunctions_Call_GT);
			fUML_Tests_TestRealComparisonFunctions_Call_GT->setName("Call(GT)");
			fUML_Tests_TestRealComparisonFunctions_Call_GT->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestRealComparisonFunctions_Call_GT_result->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_GT_result);
				fUML_Tests_TestRealComparisonFunctions_Call_GT_result->setName("result");
				fUML_Tests_TestRealComparisonFunctions_Call_GT_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_GT_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestRealComparisonFunctions_Call_GT->addResult(fUML_Tests_TestRealComparisonFunctions_Call_GT_result);
			fUML_Tests_TestRealComparisonFunctions_Call_GT->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_RealFunctions_greaterThan);
				// InputPin x
				fUML_Tests_TestRealComparisonFunctions_Call_GT_x->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_GT_x);
				fUML_Tests_TestRealComparisonFunctions_Call_GT_x->setName("x");
				fUML_Tests_TestRealComparisonFunctions_Call_GT_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_GT_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealComparisonFunctions_Call_GT->addArgument(fUML_Tests_TestRealComparisonFunctions_Call_GT_x);
				// InputPin y
				fUML_Tests_TestRealComparisonFunctions_Call_GT_y->setThisElementPtr(fUML_Tests_TestRealComparisonFunctions_Call_GT_y);
				fUML_Tests_TestRealComparisonFunctions_Call_GT_y->setName("y");
				fUML_Tests_TestRealComparisonFunctions_Call_GT_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestRealComparisonFunctions_Call_GT_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Real);
			fUML_Tests_TestRealComparisonFunctions_Call_GT->addArgument(fUML_Tests_TestRealComparisonFunctions_Call_GT_y);
		fUML_Tests_TestRealComparisonFunctions->addNode(fUML_Tests_TestRealComparisonFunctions_Call_GT);
			// ObjectFlow ObjectFlow1327 from Fork(3.0) to x
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1327->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1327);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1327->setName("ObjectFlow1327");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1327->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1327->setSource(fUML_Tests_TestRealComparisonFunctions_Fork_3_0);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1327->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_LE_x);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1327);
			// ObjectFlow ObjectFlow1329 from Fork(3.0) to x
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1329->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1329);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1329->setName("ObjectFlow1329");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1329->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1329->setSource(fUML_Tests_TestRealComparisonFunctions_Fork_3_0);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1329->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_GT_x);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1329);
			// ObjectFlow ObjectFlow1366 from Fork(3.0) to x
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1366->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1366);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1366->setName("ObjectFlow1366");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1366->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1366->setSource(fUML_Tests_TestRealComparisonFunctions_Fork_3_0);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1366->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_LT_x);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1366);
			// ObjectFlow ObjectFlow1368 from result to Param(LEResult)
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1368->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1368);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1368->setName("ObjectFlow1368");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1368->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1368->setSource(fUML_Tests_TestRealComparisonFunctions_Call_LE_result);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1368->setTarget(fUML_Tests_TestRealComparisonFunctions_Param_LEResult);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1368);
			// ObjectFlow ObjectFlow1370 from Fork(2.0) to y
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1370->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1370);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1370->setName("ObjectFlow1370");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1370->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1370->setSource(fUML_Tests_TestRealComparisonFunctions_Fork_2_0);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1370->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_GT_y);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1370);
			// ObjectFlow ObjectFlow1331 from Fork(3.0) to x
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1331->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1331);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1331->setName("ObjectFlow1331");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1331->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1331->setSource(fUML_Tests_TestRealComparisonFunctions_Fork_3_0);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1331->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_GE_x);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1331);
			// ObjectFlow ObjectFlow1372 from Fork(2.0) to y
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1372->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1372);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1372->setName("ObjectFlow1372");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1372->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1372->setSource(fUML_Tests_TestRealComparisonFunctions_Fork_2_0);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1372->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_LT_y);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1372);
			// ControlFlow ControlFlow1374 from Call(GT) to Call(GE)
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1374->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ControlFlow1374);
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1374->setName("ControlFlow1374");
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1374->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1374->setSource(fUML_Tests_TestRealComparisonFunctions_Call_GT);
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1374->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_GE);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ControlFlow1374);
			// ObjectFlow ObjectFlow1376 from result to Param(GEResult)
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1376->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1376);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1376->setName("ObjectFlow1376");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1376->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1376->setSource(fUML_Tests_TestRealComparisonFunctions_Call_GE_result);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1376->setTarget(fUML_Tests_TestRealComparisonFunctions_Param_GEResult);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1376);
			// ControlFlow ControlFlow1336 from Call(LE) to Call(GT)
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1336->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ControlFlow1336);
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1336->setName("ControlFlow1336");
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1336->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1336->setSource(fUML_Tests_TestRealComparisonFunctions_Call_LE);
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1336->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_GT);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ControlFlow1336);
			// ObjectFlow ObjectFlow1338 from Fork(2.0) to y
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1338->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1338);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1338->setName("ObjectFlow1338");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1338->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1338->setSource(fUML_Tests_TestRealComparisonFunctions_Fork_2_0);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1338->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_GE_y);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1338);
			// ObjectFlow ObjectFlow1340 from Value(2.0).result to Fork(2.0)
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1340->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1340);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1340->setName("ObjectFlow1340");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1340->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1340->setSource(fUML_Tests_TestRealComparisonFunctions_Value_2_0_Value_2_0_result);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1340->setTarget(fUML_Tests_TestRealComparisonFunctions_Fork_2_0);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1340);
			// ControlFlow ControlFlow1381 from Call(LT) to Call(LE)
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1381->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ControlFlow1381);
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1381->setName("ControlFlow1381");
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1381->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1381->setSource(fUML_Tests_TestRealComparisonFunctions_Call_LT);
			fUML_Tests_TestRealComparisonFunctions_ControlFlow1381->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_LE);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ControlFlow1381);
			// ObjectFlow ObjectFlow1383 from Value(3.0).result to Fork(3.0)
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1383->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1383);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1383->setName("ObjectFlow1383");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1383->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1383->setSource(fUML_Tests_TestRealComparisonFunctions_Value_3_0_Value_3_0_result);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1383->setTarget(fUML_Tests_TestRealComparisonFunctions_Fork_3_0);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1383);
			// ObjectFlow ObjectFlow1385 from Fork(2.0) to y
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1385->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1385);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1385->setName("ObjectFlow1385");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1385->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1385->setSource(fUML_Tests_TestRealComparisonFunctions_Fork_2_0);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1385->setTarget(fUML_Tests_TestRealComparisonFunctions_Call_LE_y);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1385);
			// ObjectFlow ObjectFlow1387 from result to Param(GTResult)
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1387->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1387);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1387->setName("ObjectFlow1387");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1387->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1387->setSource(fUML_Tests_TestRealComparisonFunctions_Call_GT_result);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1387->setTarget(fUML_Tests_TestRealComparisonFunctions_Param_GTResult);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1387);
			// ObjectFlow ObjectFlow1389 from result to Param(LTResult)
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1389->setThisActivityEdgePtr(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1389);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1389->setName("ObjectFlow1389");
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1389->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1389->setSource(fUML_Tests_TestRealComparisonFunctions_Call_LT_result);
			fUML_Tests_TestRealComparisonFunctions_ObjectFlow1389->setTarget(fUML_Tests_TestRealComparisonFunctions_Param_LTResult);
		fUML_Tests_TestRealComparisonFunctions->addEdge(fUML_Tests_TestRealComparisonFunctions_ObjectFlow1389);
	fUML_Tests->addPackagedElement(fUML_Tests_TestRealComparisonFunctions);
		// Activity ForkMerge
		fUML_Tests_ForkMerge->setThisActivityPtr(fUML_Tests_ForkMerge);
		fUML_Tests_ForkMerge->setName("ForkMerge");
		fUML_Tests_ForkMerge->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkMerge->isReentrant = false;
			// Parameter output
			fUML_Tests_ForkMerge_output->setThisElementPtr(fUML_Tests_ForkMerge_output);
			fUML_Tests_ForkMerge_output->setName("output");
			fUML_Tests_ForkMerge_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_ForkMerge_output->setUpper(-1);
			fUML_Tests_ForkMerge_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_ForkMerge_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_ForkMerge->addOwnedParameter(fUML_Tests_ForkMerge_output);
			// ForkNode ForkNode
			fUML_Tests_ForkMerge_ForkNode->setThisElementPtr(fUML_Tests_ForkMerge_ForkNode);
			fUML_Tests_ForkMerge_ForkNode->setName("ForkNode");
			fUML_Tests_ForkMerge_ForkNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkMerge->addNode(fUML_Tests_ForkMerge_ForkNode);
			// MergeNode MergeNode
			fUML_Tests_ForkMerge_MergeNode->setThisElementPtr(fUML_Tests_ForkMerge_MergeNode);
			fUML_Tests_ForkMerge_MergeNode->setName("MergeNode");
			fUML_Tests_ForkMerge_MergeNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkMerge->addNode(fUML_Tests_ForkMerge_MergeNode);
			// InitialNode InitialNode
			fUML_Tests_ForkMerge_InitialNode->setThisElementPtr(fUML_Tests_ForkMerge_InitialNode);
			fUML_Tests_ForkMerge_InitialNode->setName("InitialNode");
			fUML_Tests_ForkMerge_InitialNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_ForkMerge->addNode(fUML_Tests_ForkMerge_InitialNode);
			// ValueSpecificationAction Value(0)
			fUML_Tests_ForkMerge_Value_0->setThisExecutableNodePtr(fUML_Tests_ForkMerge_Value_0);
			fUML_Tests_ForkMerge_Value_0->setName("Value(0)");
			fUML_Tests_ForkMerge_Value_0->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1395
				fUML_Tests_ForkMerge_Value_0_LiteralInteger1395->setThisElementPtr(fUML_Tests_ForkMerge_Value_0_LiteralInteger1395);
				fUML_Tests_ForkMerge_Value_0_LiteralInteger1395->setName("LiteralInteger1395");
				fUML_Tests_ForkMerge_Value_0_LiteralInteger1395->setVisibility(VisibilityKind::public_);
				fUML_Tests_ForkMerge_Value_0_LiteralInteger1395->setValue(0);
			fUML_Tests_ForkMerge_Value_0->setValue(fUML_Tests_ForkMerge_Value_0_LiteralInteger1395);
				// OutputPin Value(0).result
				fUML_Tests_ForkMerge_Value_0_Value_0_result->setThisElementPtr(fUML_Tests_ForkMerge_Value_0_Value_0_result);
				fUML_Tests_ForkMerge_Value_0_Value_0_result->setName("Value(0).result");
				fUML_Tests_ForkMerge_Value_0_Value_0_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_ForkMerge_Value_0_Value_0_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_ForkMerge_Value_0->setResult(fUML_Tests_ForkMerge_Value_0_Value_0_result);
		fUML_Tests_ForkMerge->addNode(fUML_Tests_ForkMerge_Value_0);
			// ActivityParameterNode OutputNode
			fUML_Tests_ForkMerge_OutputNode->setThisElementPtr(fUML_Tests_ForkMerge_OutputNode);
			fUML_Tests_ForkMerge_OutputNode->setName("OutputNode");
			fUML_Tests_ForkMerge_OutputNode->setVisibility(VisibilityKind::public_);
			fUML_Tests_ForkMerge_OutputNode->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_ForkMerge_OutputNode->setParameter(fUML_Tests_ForkMerge_output);
		fUML_Tests_ForkMerge->addNode(fUML_Tests_ForkMerge_OutputNode);
			// ControlFlow ControlFlow1391 from InitialNode to ForkNode
			fUML_Tests_ForkMerge_ControlFlow1391->setThisActivityEdgePtr(fUML_Tests_ForkMerge_ControlFlow1391);
			fUML_Tests_ForkMerge_ControlFlow1391->setName("ControlFlow1391");
			fUML_Tests_ForkMerge_ControlFlow1391->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMerge_ControlFlow1391->setSource(fUML_Tests_ForkMerge_InitialNode);
			fUML_Tests_ForkMerge_ControlFlow1391->setTarget(fUML_Tests_ForkMerge_ForkNode);
		fUML_Tests_ForkMerge->addEdge(fUML_Tests_ForkMerge_ControlFlow1391);
			// ControlFlow ControlFlow1393 from MergeNode to Value(0)
			fUML_Tests_ForkMerge_ControlFlow1393->setThisActivityEdgePtr(fUML_Tests_ForkMerge_ControlFlow1393);
			fUML_Tests_ForkMerge_ControlFlow1393->setName("ControlFlow1393");
			fUML_Tests_ForkMerge_ControlFlow1393->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMerge_ControlFlow1393->setSource(fUML_Tests_ForkMerge_MergeNode);
			fUML_Tests_ForkMerge_ControlFlow1393->setTarget(fUML_Tests_ForkMerge_Value_0);
		fUML_Tests_ForkMerge->addEdge(fUML_Tests_ForkMerge_ControlFlow1393);
			// ObjectFlow ObjectFlow1400 from Value(0).result to OutputNode
			fUML_Tests_ForkMerge_ObjectFlow1400->setThisActivityEdgePtr(fUML_Tests_ForkMerge_ObjectFlow1400);
			fUML_Tests_ForkMerge_ObjectFlow1400->setName("ObjectFlow1400");
			fUML_Tests_ForkMerge_ObjectFlow1400->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMerge_ObjectFlow1400->setSource(fUML_Tests_ForkMerge_Value_0_Value_0_result);
			fUML_Tests_ForkMerge_ObjectFlow1400->setTarget(fUML_Tests_ForkMerge_OutputNode);
		fUML_Tests_ForkMerge->addEdge(fUML_Tests_ForkMerge_ObjectFlow1400);
			// ControlFlow ControlFlow1402 from ForkNode to MergeNode
			fUML_Tests_ForkMerge_ControlFlow1402->setThisActivityEdgePtr(fUML_Tests_ForkMerge_ControlFlow1402);
			fUML_Tests_ForkMerge_ControlFlow1402->setName("ControlFlow1402");
			fUML_Tests_ForkMerge_ControlFlow1402->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMerge_ControlFlow1402->setSource(fUML_Tests_ForkMerge_ForkNode);
			fUML_Tests_ForkMerge_ControlFlow1402->setTarget(fUML_Tests_ForkMerge_MergeNode);
		fUML_Tests_ForkMerge->addEdge(fUML_Tests_ForkMerge_ControlFlow1402);
			// ControlFlow ControlFlow1404 from ForkNode to MergeNode
			fUML_Tests_ForkMerge_ControlFlow1404->setThisActivityEdgePtr(fUML_Tests_ForkMerge_ControlFlow1404);
			fUML_Tests_ForkMerge_ControlFlow1404->setName("ControlFlow1404");
			fUML_Tests_ForkMerge_ControlFlow1404->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_ForkMerge_ControlFlow1404->setSource(fUML_Tests_ForkMerge_ForkNode);
			fUML_Tests_ForkMerge_ControlFlow1404->setTarget(fUML_Tests_ForkMerge_MergeNode);
		fUML_Tests_ForkMerge->addEdge(fUML_Tests_ForkMerge_ControlFlow1404);
	fUML_Tests->addPackagedElement(fUML_Tests_ForkMerge);
		// Activity TestCentralBuffer
		fUML_Tests_TestCentralBuffer->setThisActivityPtr(fUML_Tests_TestCentralBuffer);
		fUML_Tests_TestCentralBuffer->setName("TestCentralBuffer");
		fUML_Tests_TestCentralBuffer->setVisibility(VisibilityKind::public_);
			// Parameter input1
			fUML_Tests_TestCentralBuffer_input1->setThisElementPtr(fUML_Tests_TestCentralBuffer_input1);
			fUML_Tests_TestCentralBuffer_input1->setName("input1");
			fUML_Tests_TestCentralBuffer_input1->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCentralBuffer_input1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
		fUML_Tests_TestCentralBuffer->addOwnedParameter(fUML_Tests_TestCentralBuffer_input1);
			// Parameter input2
			fUML_Tests_TestCentralBuffer_input2->setThisElementPtr(fUML_Tests_TestCentralBuffer_input2);
			fUML_Tests_TestCentralBuffer_input2->setName("input2");
			fUML_Tests_TestCentralBuffer_input2->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCentralBuffer_input2->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
		fUML_Tests_TestCentralBuffer->addOwnedParameter(fUML_Tests_TestCentralBuffer_input2);
			// Parameter output
			fUML_Tests_TestCentralBuffer_output->setThisElementPtr(fUML_Tests_TestCentralBuffer_output);
			fUML_Tests_TestCentralBuffer_output->setName("output");
			fUML_Tests_TestCentralBuffer_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCentralBuffer_output->setUpper(-1);
			fUML_Tests_TestCentralBuffer_output->setLower(0);
			fUML_Tests_TestCentralBuffer_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestCentralBuffer_output->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestCentralBuffer->addOwnedParameter(fUML_Tests_TestCentralBuffer_output);
			// ActivityParameterNode Parameter(input2)
			fUML_Tests_TestCentralBuffer_Parameter_input2->setThisElementPtr(fUML_Tests_TestCentralBuffer_Parameter_input2);
			fUML_Tests_TestCentralBuffer_Parameter_input2->setName("Parameter(input2)");
			fUML_Tests_TestCentralBuffer_Parameter_input2->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCentralBuffer_Parameter_input2->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestCentralBuffer_Parameter_input2->setParameter(fUML_Tests_TestCentralBuffer_input2);
		fUML_Tests_TestCentralBuffer->addNode(fUML_Tests_TestCentralBuffer_Parameter_input2);
			// ActivityParameterNode Parameter(output)
			fUML_Tests_TestCentralBuffer_Parameter_output->setThisElementPtr(fUML_Tests_TestCentralBuffer_Parameter_output);
			fUML_Tests_TestCentralBuffer_Parameter_output->setName("Parameter(output)");
			fUML_Tests_TestCentralBuffer_Parameter_output->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCentralBuffer_Parameter_output->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestCentralBuffer_Parameter_output->setParameter(fUML_Tests_TestCentralBuffer_output);
		fUML_Tests_TestCentralBuffer->addNode(fUML_Tests_TestCentralBuffer_Parameter_output);
			// InitialNode InitialNode
			fUML_Tests_TestCentralBuffer_InitialNode->setThisElementPtr(fUML_Tests_TestCentralBuffer_InitialNode);
			fUML_Tests_TestCentralBuffer_InitialNode->setName("InitialNode");
			fUML_Tests_TestCentralBuffer_InitialNode->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestCentralBuffer->addNode(fUML_Tests_TestCentralBuffer_InitialNode);
			// Initialization is currently unimplemented for metaclass StructuredActivityNode
		fUML_Tests_TestCentralBuffer->addNode(fUML_Tests_TestCentralBuffer_StructuredActivityNode);
			// ActivityParameterNode Parameter(input1)
			fUML_Tests_TestCentralBuffer_Parameter_input1->setThisElementPtr(fUML_Tests_TestCentralBuffer_Parameter_input1);
			fUML_Tests_TestCentralBuffer_Parameter_input1->setName("Parameter(input1)");
			fUML_Tests_TestCentralBuffer_Parameter_input1->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestCentralBuffer_Parameter_input1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestCentralBuffer_Parameter_input1->setParameter(fUML_Tests_TestCentralBuffer_input1);
		fUML_Tests_TestCentralBuffer->addNode(fUML_Tests_TestCentralBuffer_Parameter_input1);
			// ControlFlow ControlFlow1406 from InitialNode to StructuredActivityNode
			fUML_Tests_TestCentralBuffer_ControlFlow1406->setThisActivityEdgePtr(fUML_Tests_TestCentralBuffer_ControlFlow1406);
			fUML_Tests_TestCentralBuffer_ControlFlow1406->setName("ControlFlow1406");
			fUML_Tests_TestCentralBuffer_ControlFlow1406->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCentralBuffer_ControlFlow1406->setSource(fUML_Tests_TestCentralBuffer_InitialNode);
			fUML_Tests_TestCentralBuffer_ControlFlow1406->setTarget(fUML_Tests_TestCentralBuffer_StructuredActivityNode);
		fUML_Tests_TestCentralBuffer->addEdge(fUML_Tests_TestCentralBuffer_ControlFlow1406);
			// ObjectFlow ObjectFlow1408 from CentralBufferNode to Parameter(output)
			fUML_Tests_TestCentralBuffer_ObjectFlow1408->setThisActivityEdgePtr(fUML_Tests_TestCentralBuffer_ObjectFlow1408);
			fUML_Tests_TestCentralBuffer_ObjectFlow1408->setName("ObjectFlow1408");
			fUML_Tests_TestCentralBuffer_ObjectFlow1408->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCentralBuffer_ObjectFlow1408->setSource(fUML_Tests_TestCentralBuffer_StructuredActivityNode_CentralBufferNode);
			fUML_Tests_TestCentralBuffer_ObjectFlow1408->setTarget(fUML_Tests_TestCentralBuffer_Parameter_output);
		fUML_Tests_TestCentralBuffer->addEdge(fUML_Tests_TestCentralBuffer_ObjectFlow1408);
			// ObjectFlow ObjectFlow1412 from Parameter(input2) to CentralBufferNode
			fUML_Tests_TestCentralBuffer_ObjectFlow1412->setThisActivityEdgePtr(fUML_Tests_TestCentralBuffer_ObjectFlow1412);
			fUML_Tests_TestCentralBuffer_ObjectFlow1412->setName("ObjectFlow1412");
			fUML_Tests_TestCentralBuffer_ObjectFlow1412->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCentralBuffer_ObjectFlow1412->setSource(fUML_Tests_TestCentralBuffer_Parameter_input2);
			fUML_Tests_TestCentralBuffer_ObjectFlow1412->setTarget(fUML_Tests_TestCentralBuffer_StructuredActivityNode_CentralBufferNode);
		fUML_Tests_TestCentralBuffer->addEdge(fUML_Tests_TestCentralBuffer_ObjectFlow1412);
			// ObjectFlow ObjectFlow1414 from Parameter(input1) to CentralBufferNode
			fUML_Tests_TestCentralBuffer_ObjectFlow1414->setThisActivityEdgePtr(fUML_Tests_TestCentralBuffer_ObjectFlow1414);
			fUML_Tests_TestCentralBuffer_ObjectFlow1414->setName("ObjectFlow1414");
			fUML_Tests_TestCentralBuffer_ObjectFlow1414->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestCentralBuffer_ObjectFlow1414->setSource(fUML_Tests_TestCentralBuffer_Parameter_input1);
			fUML_Tests_TestCentralBuffer_ObjectFlow1414->setTarget(fUML_Tests_TestCentralBuffer_StructuredActivityNode_CentralBufferNode);
		fUML_Tests_TestCentralBuffer->addEdge(fUML_Tests_TestCentralBuffer_ObjectFlow1414);
			// Initialization is currently unimplemented for metaclass StructuredActivityNode
		fUML_Tests_TestCentralBuffer->addStructuredNode(fUML_Tests_TestCentralBuffer_StructuredActivityNode);
			// Initialization is currently unimplemented for metaclass StructuredActivityNode
		fUML_Tests_TestCentralBuffer->addStructuredNode(fUML_Tests_TestCentralBuffer_StructuredActivityNode);
	fUML_Tests->addPackagedElement(fUML_Tests_TestCentralBuffer);
		// Activity TestBooleanFunctions
		fUML_Tests_TestBooleanFunctions->setThisActivityPtr(fUML_Tests_TestBooleanFunctions);
		fUML_Tests_TestBooleanFunctions->setName("TestBooleanFunctions");
		fUML_Tests_TestBooleanFunctions->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestBooleanFunctions->isReentrant = false;
			// Parameter NotResult
			fUML_Tests_TestBooleanFunctions_NotResult->setThisElementPtr(fUML_Tests_TestBooleanFunctions_NotResult);
			fUML_Tests_TestBooleanFunctions_NotResult->setName("NotResult");
			fUML_Tests_TestBooleanFunctions_NotResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestBooleanFunctions_NotResult->setIsOrdered(true);
			fUML_Tests_TestBooleanFunctions_NotResult->setUpper(-1);
			fUML_Tests_TestBooleanFunctions_NotResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_NotResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestBooleanFunctions->addOwnedParameter(fUML_Tests_TestBooleanFunctions_NotResult);
			// Parameter AndResult
			fUML_Tests_TestBooleanFunctions_AndResult->setThisElementPtr(fUML_Tests_TestBooleanFunctions_AndResult);
			fUML_Tests_TestBooleanFunctions_AndResult->setName("AndResult");
			fUML_Tests_TestBooleanFunctions_AndResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestBooleanFunctions_AndResult->setIsOrdered(true);
			fUML_Tests_TestBooleanFunctions_AndResult->setUpper(-1);
			fUML_Tests_TestBooleanFunctions_AndResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_AndResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestBooleanFunctions->addOwnedParameter(fUML_Tests_TestBooleanFunctions_AndResult);
			// Parameter OrResult
			fUML_Tests_TestBooleanFunctions_OrResult->setThisElementPtr(fUML_Tests_TestBooleanFunctions_OrResult);
			fUML_Tests_TestBooleanFunctions_OrResult->setName("OrResult");
			fUML_Tests_TestBooleanFunctions_OrResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestBooleanFunctions_OrResult->setIsOrdered(true);
			fUML_Tests_TestBooleanFunctions_OrResult->setUpper(-1);
			fUML_Tests_TestBooleanFunctions_OrResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_OrResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestBooleanFunctions->addOwnedParameter(fUML_Tests_TestBooleanFunctions_OrResult);
			// Parameter ImpliesResult
			fUML_Tests_TestBooleanFunctions_ImpliesResult->setThisElementPtr(fUML_Tests_TestBooleanFunctions_ImpliesResult);
			fUML_Tests_TestBooleanFunctions_ImpliesResult->setName("ImpliesResult");
			fUML_Tests_TestBooleanFunctions_ImpliesResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestBooleanFunctions_ImpliesResult->setIsOrdered(true);
			fUML_Tests_TestBooleanFunctions_ImpliesResult->setUpper(-1);
			fUML_Tests_TestBooleanFunctions_ImpliesResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_ImpliesResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestBooleanFunctions->addOwnedParameter(fUML_Tests_TestBooleanFunctions_ImpliesResult);
			// Parameter XorResult
			fUML_Tests_TestBooleanFunctions_XorResult->setThisElementPtr(fUML_Tests_TestBooleanFunctions_XorResult);
			fUML_Tests_TestBooleanFunctions_XorResult->setName("XorResult");
			fUML_Tests_TestBooleanFunctions_XorResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestBooleanFunctions_XorResult->setIsOrdered(true);
			fUML_Tests_TestBooleanFunctions_XorResult->setUpper(-1);
			fUML_Tests_TestBooleanFunctions_XorResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_XorResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestBooleanFunctions->addOwnedParameter(fUML_Tests_TestBooleanFunctions_XorResult);
			// ActivityParameterNode Param(OrResult)
			fUML_Tests_TestBooleanFunctions_Param_OrResult->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Param_OrResult);
			fUML_Tests_TestBooleanFunctions_Param_OrResult->setName("Param(OrResult)");
			fUML_Tests_TestBooleanFunctions_Param_OrResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestBooleanFunctions_Param_OrResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Param_OrResult->setParameter(fUML_Tests_TestBooleanFunctions_OrResult);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Param_OrResult);
			// CallBehaviorAction Call(Not)
			fUML_Tests_TestBooleanFunctions_Call_Not->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_Call_Not);
			fUML_Tests_TestBooleanFunctions_Call_Not->setName("Call(Not)");
			fUML_Tests_TestBooleanFunctions_Call_Not->setVisibility(VisibilityKind::public_);
				// OutputPin Not.result
				fUML_Tests_TestBooleanFunctions_Call_Not_Not_result->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Not_Not_result);
				fUML_Tests_TestBooleanFunctions_Call_Not_Not_result->setName("Not.result");
				fUML_Tests_TestBooleanFunctions_Call_Not_Not_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Not_Not_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Not->addResult(fUML_Tests_TestBooleanFunctions_Call_Not_Not_result);
			fUML_Tests_TestBooleanFunctions_Call_Not->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_BooleanFunctions_Not);
				// InputPin Not.x
				fUML_Tests_TestBooleanFunctions_Call_Not_Not_x->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Not_Not_x);
				fUML_Tests_TestBooleanFunctions_Call_Not_Not_x->setName("Not.x");
				fUML_Tests_TestBooleanFunctions_Call_Not_Not_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Not_Not_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Not->addArgument(fUML_Tests_TestBooleanFunctions_Call_Not_Not_x);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Call_Not);
			// CallBehaviorAction Call(Xor)
			fUML_Tests_TestBooleanFunctions_Call_Xor->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_Call_Xor);
			fUML_Tests_TestBooleanFunctions_Call_Xor->setName("Call(Xor)");
			fUML_Tests_TestBooleanFunctions_Call_Xor->setVisibility(VisibilityKind::public_);
				// OutputPin Xor.result
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result);
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result->setName("Xor.result");
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Xor->addResult(fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result);
			fUML_Tests_TestBooleanFunctions_Call_Xor->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_BooleanFunctions_Xor);
				// InputPin Xor.x
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x);
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x->setName("Xor.x");
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Xor->addArgument(fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x);
				// InputPin Xor.y
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y);
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y->setName("Xor.y");
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Xor->addArgument(fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Call_Xor);
			// ActivityParameterNode Param(NotResult)
			fUML_Tests_TestBooleanFunctions_Param_NotResult->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Param_NotResult);
			fUML_Tests_TestBooleanFunctions_Param_NotResult->setName("Param(NotResult)");
			fUML_Tests_TestBooleanFunctions_Param_NotResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestBooleanFunctions_Param_NotResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Param_NotResult->setParameter(fUML_Tests_TestBooleanFunctions_NotResult);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Param_NotResult);
			// CallBehaviorAction GenData2
			fUML_Tests_TestBooleanFunctions_GenData2->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_GenData2);
			fUML_Tests_TestBooleanFunctions_GenData2->setName("GenData2");
			fUML_Tests_TestBooleanFunctions_GenData2->setVisibility(VisibilityKind::public_);
				// OutputPin GenData2.argumentData1
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1->setThisElementPtr(fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1);
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1->setName("GenData2.argumentData1");
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1->setUpper(4);
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1->setLower(4);
			fUML_Tests_TestBooleanFunctions_GenData2->addResult(fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1);
				// OutputPin GenData2.argumentData2
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2->setThisElementPtr(fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2);
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2->setName("GenData2.argumentData2");
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2->setUpper(4);
				fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2->setLower(4);
			fUML_Tests_TestBooleanFunctions_GenData2->addResult(fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2);
			fUML_Tests_TestBooleanFunctions_GenData2->setBehavior(fUML_Tests_GenerateBooleanTestData);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_GenData2);
			// ActivityParameterNode Param(AndResult)
			fUML_Tests_TestBooleanFunctions_Param_AndResult->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Param_AndResult);
			fUML_Tests_TestBooleanFunctions_Param_AndResult->setName("Param(AndResult)");
			fUML_Tests_TestBooleanFunctions_Param_AndResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestBooleanFunctions_Param_AndResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Param_AndResult->setParameter(fUML_Tests_TestBooleanFunctions_AndResult);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Param_AndResult);
			// CallBehaviorAction Call(Or)
			fUML_Tests_TestBooleanFunctions_Call_Or->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_Call_Or);
			fUML_Tests_TestBooleanFunctions_Call_Or->setName("Call(Or)");
			fUML_Tests_TestBooleanFunctions_Call_Or->setVisibility(VisibilityKind::public_);
				// OutputPin Or.result
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_result->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Or_Or_result);
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_result->setName("Or.result");
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Or->addResult(fUML_Tests_TestBooleanFunctions_Call_Or_Or_result);
			fUML_Tests_TestBooleanFunctions_Call_Or->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_BooleanFunctions_Or);
				// InputPin Or.x
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_x->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Or_Or_x);
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_x->setName("Or.x");
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Or->addArgument(fUML_Tests_TestBooleanFunctions_Call_Or_Or_x);
				// InputPin Or.y
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_y->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Or_Or_y);
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_y->setName("Or.y");
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Or_Or_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Or->addArgument(fUML_Tests_TestBooleanFunctions_Call_Or_Or_y);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Call_Or);
			// CallBehaviorAction Call(And)
			fUML_Tests_TestBooleanFunctions_Call_And->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_Call_And);
			fUML_Tests_TestBooleanFunctions_Call_And->setName("Call(And)");
			fUML_Tests_TestBooleanFunctions_Call_And->setVisibility(VisibilityKind::public_);
				// OutputPin And.result
				fUML_Tests_TestBooleanFunctions_Call_And_And_result->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_And_And_result);
				fUML_Tests_TestBooleanFunctions_Call_And_And_result->setName("And.result");
				fUML_Tests_TestBooleanFunctions_Call_And_And_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_And_And_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_And->addResult(fUML_Tests_TestBooleanFunctions_Call_And_And_result);
			fUML_Tests_TestBooleanFunctions_Call_And->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_BooleanFunctions_And);
				// InputPin And.x
				fUML_Tests_TestBooleanFunctions_Call_And_And_x->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_And_And_x);
				fUML_Tests_TestBooleanFunctions_Call_And_And_x->setName("And.x");
				fUML_Tests_TestBooleanFunctions_Call_And_And_x->setVisibility(VisibilityKind::package);
				fUML_Tests_TestBooleanFunctions_Call_And_And_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_And->addArgument(fUML_Tests_TestBooleanFunctions_Call_And_And_x);
				// InputPin And.y
				fUML_Tests_TestBooleanFunctions_Call_And_And_y->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_And_And_y);
				fUML_Tests_TestBooleanFunctions_Call_And_And_y->setName("And.y");
				fUML_Tests_TestBooleanFunctions_Call_And_And_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_And_And_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_And->addArgument(fUML_Tests_TestBooleanFunctions_Call_And_And_y);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Call_And);
			// ValueSpecificationAction Value(false)
			fUML_Tests_TestBooleanFunctions_Value_false->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_Value_false);
			fUML_Tests_TestBooleanFunctions_Value_false->setName("Value(false)");
			fUML_Tests_TestBooleanFunctions_Value_false->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1485
				fUML_Tests_TestBooleanFunctions_Value_false_LiteralBoolean1485->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Value_false_LiteralBoolean1485);
				fUML_Tests_TestBooleanFunctions_Value_false_LiteralBoolean1485->setName("LiteralBoolean1485");
				fUML_Tests_TestBooleanFunctions_Value_false_LiteralBoolean1485->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Value_false_LiteralBoolean1485->setValue(false);
			fUML_Tests_TestBooleanFunctions_Value_false->setValue(fUML_Tests_TestBooleanFunctions_Value_false_LiteralBoolean1485);
				// OutputPin Value(false).result
				fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result);
				fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result->setName("Value(false).result");
				fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Value_false->setResult(fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Value_false);
			// ActivityParameterNode Param(ImpliesResult)
			fUML_Tests_TestBooleanFunctions_Param_ImpliesResult->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Param_ImpliesResult);
			fUML_Tests_TestBooleanFunctions_Param_ImpliesResult->setName("Param(ImpliesResult)");
			fUML_Tests_TestBooleanFunctions_Param_ImpliesResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestBooleanFunctions_Param_ImpliesResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Param_ImpliesResult->setParameter(fUML_Tests_TestBooleanFunctions_ImpliesResult);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Param_ImpliesResult);
			// CallBehaviorAction GenData1
			fUML_Tests_TestBooleanFunctions_GenData1->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_GenData1);
			fUML_Tests_TestBooleanFunctions_GenData1->setName("GenData1");
			fUML_Tests_TestBooleanFunctions_GenData1->setVisibility(VisibilityKind::public_);
				// OutputPin GenData1.argumentData1
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1->setThisElementPtr(fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1);
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1->setName("GenData1.argumentData1");
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1->setUpper(4);
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1->setLower(4);
			fUML_Tests_TestBooleanFunctions_GenData1->addResult(fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1);
				// OutputPin GenData1.argumentData2
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2->setThisElementPtr(fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2);
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2->setName("GenData1.argumentData2");
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2->setUpper(4);
				fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2->setLower(4);
			fUML_Tests_TestBooleanFunctions_GenData1->addResult(fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2);
			fUML_Tests_TestBooleanFunctions_GenData1->setBehavior(fUML_Tests_GenerateBooleanTestData);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_GenData1);
			// ValueSpecificationAction Value(true)
			fUML_Tests_TestBooleanFunctions_Value_true->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_Value_true);
			fUML_Tests_TestBooleanFunctions_Value_true->setName("Value(true)");
			fUML_Tests_TestBooleanFunctions_Value_true->setVisibility(VisibilityKind::public_);
				// LiteralBoolean LiteralBoolean1444
				fUML_Tests_TestBooleanFunctions_Value_true_LiteralBoolean1444->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Value_true_LiteralBoolean1444);
				fUML_Tests_TestBooleanFunctions_Value_true_LiteralBoolean1444->setName("LiteralBoolean1444");
				fUML_Tests_TestBooleanFunctions_Value_true_LiteralBoolean1444->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Value_true_LiteralBoolean1444->setValue(true);
			fUML_Tests_TestBooleanFunctions_Value_true->setValue(fUML_Tests_TestBooleanFunctions_Value_true_LiteralBoolean1444);
				// OutputPin Value(true).result
				fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result);
				fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result->setName("Value(true).result");
				fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Value_true->setResult(fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Value_true);
			// CallBehaviorAction GenData4
			fUML_Tests_TestBooleanFunctions_GenData4->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_GenData4);
			fUML_Tests_TestBooleanFunctions_GenData4->setName("GenData4");
			fUML_Tests_TestBooleanFunctions_GenData4->setVisibility(VisibilityKind::public_);
				// OutputPin GenData4.argumentData1
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1->setThisElementPtr(fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1);
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1->setName("GenData4.argumentData1");
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1->setUpper(4);
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1->setLower(4);
			fUML_Tests_TestBooleanFunctions_GenData4->addResult(fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1);
				// OutputPin GenData4.argumentData2
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2->setThisElementPtr(fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2);
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2->setName("GenData4.argumentData2");
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2->setUpper(4);
				fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2->setLower(4);
			fUML_Tests_TestBooleanFunctions_GenData4->addResult(fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2);
			fUML_Tests_TestBooleanFunctions_GenData4->setBehavior(fUML_Tests_GenerateBooleanTestData);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_GenData4);
			// CallBehaviorAction Call(Implies)
			fUML_Tests_TestBooleanFunctions_Call_Implies->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_Call_Implies);
			fUML_Tests_TestBooleanFunctions_Call_Implies->setName("Call(Implies)");
			fUML_Tests_TestBooleanFunctions_Call_Implies->setVisibility(VisibilityKind::public_);
				// OutputPin Implies.result
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result);
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result->setName("Implies.result");
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Implies->addResult(fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result);
			fUML_Tests_TestBooleanFunctions_Call_Implies->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_BooleanFunctions_Implies);
				// InputPin Implies.x
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x);
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x->setName("Implies.x");
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Implies->addArgument(fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x);
				// InputPin Implies.y
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y);
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y->setName("Implies.y");
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Call_Implies->addArgument(fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Call_Implies);
			// ActivityParameterNode Param(XorResult)
			fUML_Tests_TestBooleanFunctions_Param_XorResult->setThisElementPtr(fUML_Tests_TestBooleanFunctions_Param_XorResult);
			fUML_Tests_TestBooleanFunctions_Param_XorResult->setName("Param(XorResult)");
			fUML_Tests_TestBooleanFunctions_Param_XorResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestBooleanFunctions_Param_XorResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestBooleanFunctions_Param_XorResult->setParameter(fUML_Tests_TestBooleanFunctions_XorResult);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_Param_XorResult);
			// CallBehaviorAction GenData3
			fUML_Tests_TestBooleanFunctions_GenData3->setThisExecutableNodePtr(fUML_Tests_TestBooleanFunctions_GenData3);
			fUML_Tests_TestBooleanFunctions_GenData3->setName("GenData3");
			fUML_Tests_TestBooleanFunctions_GenData3->setVisibility(VisibilityKind::public_);
				// OutputPin GenData3.argumentData1
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1->setThisElementPtr(fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1);
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1->setName("GenData3.argumentData1");
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1->setUpper(4);
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1->setLower(4);
			fUML_Tests_TestBooleanFunctions_GenData3->addResult(fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1);
				// OutputPin GenData3.argumentData2
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2->setThisElementPtr(fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2);
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2->setName("GenData3.argumentData2");
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2->setUpper(4);
				fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2->setLower(4);
			fUML_Tests_TestBooleanFunctions_GenData3->addResult(fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2);
			fUML_Tests_TestBooleanFunctions_GenData3->setBehavior(fUML_Tests_GenerateBooleanTestData);
		fUML_Tests_TestBooleanFunctions->addNode(fUML_Tests_TestBooleanFunctions_GenData3);
			// ObjectFlow ObjectFlow1453 from Implies.result to Param(ImpliesResult)
			fUML_Tests_TestBooleanFunctions_ObjectFlow1453->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow1453);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1453->setName("ObjectFlow1453");
			fUML_Tests_TestBooleanFunctions_ObjectFlow1453->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow1453->setSource(fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_result);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1453->setTarget(fUML_Tests_TestBooleanFunctions_Param_ImpliesResult);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow1453);
			// ObjectFlow ObjectFlow1455 from Value(false).result to Not.x
			fUML_Tests_TestBooleanFunctions_ObjectFlow1455->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow1455);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1455->setName("ObjectFlow1455");
			fUML_Tests_TestBooleanFunctions_ObjectFlow1455->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow1455->setSource(fUML_Tests_TestBooleanFunctions_Value_false_Value_false_result);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1455->setTarget(fUML_Tests_TestBooleanFunctions_Call_Not_Not_x);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow1455);
			// ControlFlow ControlFlow1422 from Value(true) to Value(false)
			fUML_Tests_TestBooleanFunctions_ControlFlow1422->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ControlFlow1422);
			fUML_Tests_TestBooleanFunctions_ControlFlow1422->setName("ControlFlow1422");
			fUML_Tests_TestBooleanFunctions_ControlFlow1422->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ControlFlow1422->setSource(fUML_Tests_TestBooleanFunctions_Value_true);
			fUML_Tests_TestBooleanFunctions_ControlFlow1422->setTarget(fUML_Tests_TestBooleanFunctions_Value_false);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ControlFlow1422);
			// ControlFlow ControlFlow1461 from GenData1 to GenData2
			fUML_Tests_TestBooleanFunctions_ControlFlow1461->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ControlFlow1461);
			fUML_Tests_TestBooleanFunctions_ControlFlow1461->setName("ControlFlow1461");
			fUML_Tests_TestBooleanFunctions_ControlFlow1461->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ControlFlow1461->setSource(fUML_Tests_TestBooleanFunctions_GenData1);
			fUML_Tests_TestBooleanFunctions_ControlFlow1461->setTarget(fUML_Tests_TestBooleanFunctions_GenData2);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ControlFlow1461);
			// ObjectFlow ObjectFlow1463 from Not.result to Param(NotResult)
			fUML_Tests_TestBooleanFunctions_ObjectFlow1463->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow1463);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1463->setName("ObjectFlow1463");
			fUML_Tests_TestBooleanFunctions_ObjectFlow1463->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow1463->setSource(fUML_Tests_TestBooleanFunctions_Call_Not_Not_result);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1463->setTarget(fUML_Tests_TestBooleanFunctions_Param_NotResult);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow1463);
			// ObjectFlow ObjectFlow1426 from GenData3.argumentData2 to Implies.y
			fUML_Tests_TestBooleanFunctions_ObjectFlow1426->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow1426);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1426->setName("ObjectFlow1426");
			fUML_Tests_TestBooleanFunctions_ObjectFlow1426->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow1426->setSource(fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData2);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1426->setTarget(fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_y);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow1426);
			// ObjectFlow ObjectFlow1469 from GenData2.argumentData2 to Or.y
			fUML_Tests_TestBooleanFunctions_ObjectFlow1469->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow1469);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1469->setName("ObjectFlow1469");
			fUML_Tests_TestBooleanFunctions_ObjectFlow1469->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow1469->setSource(fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData2);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1469->setTarget(fUML_Tests_TestBooleanFunctions_Call_Or_Or_y);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow1469);
			// ObjectFlow ObjectFlow1477 from Value(true).result to Not.x
			fUML_Tests_TestBooleanFunctions_ObjectFlow1477->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow1477);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1477->setName("ObjectFlow1477");
			fUML_Tests_TestBooleanFunctions_ObjectFlow1477->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow1477->setSource(fUML_Tests_TestBooleanFunctions_Value_true_Value_true_result);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1477->setTarget(fUML_Tests_TestBooleanFunctions_Call_Not_Not_x);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow1477);
			// ControlFlow ControlFlow1479 from Value(false) to GenData1
			fUML_Tests_TestBooleanFunctions_ControlFlow1479->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ControlFlow1479);
			fUML_Tests_TestBooleanFunctions_ControlFlow1479->setName("ControlFlow1479");
			fUML_Tests_TestBooleanFunctions_ControlFlow1479->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ControlFlow1479->setSource(fUML_Tests_TestBooleanFunctions_Value_false);
			fUML_Tests_TestBooleanFunctions_ControlFlow1479->setTarget(fUML_Tests_TestBooleanFunctions_GenData1);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ControlFlow1479);
			// ControlFlow ControlFlow1434 from GenData3 to GenData4
			fUML_Tests_TestBooleanFunctions_ControlFlow1434->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ControlFlow1434);
			fUML_Tests_TestBooleanFunctions_ControlFlow1434->setName("ControlFlow1434");
			fUML_Tests_TestBooleanFunctions_ControlFlow1434->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ControlFlow1434->setSource(fUML_Tests_TestBooleanFunctions_GenData3);
			fUML_Tests_TestBooleanFunctions_ControlFlow1434->setTarget(fUML_Tests_TestBooleanFunctions_GenData4);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ControlFlow1434);
			// ObjectFlow ObjectFlow1436 from GenData1.argumentData1 to And.x
			fUML_Tests_TestBooleanFunctions_ObjectFlow1436->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow1436);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1436->setName("ObjectFlow1436");
			fUML_Tests_TestBooleanFunctions_ObjectFlow1436->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow1436->setSource(fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData1);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1436->setTarget(fUML_Tests_TestBooleanFunctions_Call_And_And_x);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow1436);
			// ObjectFlow ObjectFlow1481 from GenData3.argumentData1 to Implies.x
			fUML_Tests_TestBooleanFunctions_ObjectFlow1481->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow1481);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1481->setName("ObjectFlow1481");
			fUML_Tests_TestBooleanFunctions_ObjectFlow1481->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow1481->setSource(fUML_Tests_TestBooleanFunctions_GenData3_GenData3_argumentData1);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1481->setTarget(fUML_Tests_TestBooleanFunctions_Call_Implies_Implies_x);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow1481);
			// ControlFlow ControlFlow1438 from GenData2 to GenData3
			fUML_Tests_TestBooleanFunctions_ControlFlow1438->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ControlFlow1438);
			fUML_Tests_TestBooleanFunctions_ControlFlow1438->setName("ControlFlow1438");
			fUML_Tests_TestBooleanFunctions_ControlFlow1438->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ControlFlow1438->setSource(fUML_Tests_TestBooleanFunctions_GenData2);
			fUML_Tests_TestBooleanFunctions_ControlFlow1438->setTarget(fUML_Tests_TestBooleanFunctions_GenData3);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ControlFlow1438);
			// ObjectFlow ObjectFlow1442 from Xor.result to Param(XorResult)
			fUML_Tests_TestBooleanFunctions_ObjectFlow1442->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow1442);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1442->setName("ObjectFlow1442");
			fUML_Tests_TestBooleanFunctions_ObjectFlow1442->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow1442->setSource(fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_result);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1442->setTarget(fUML_Tests_TestBooleanFunctions_Param_XorResult);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow1442);
			// ObjectFlow ObjectFlow1492 from GenData1.argumentData2 to And.y
			fUML_Tests_TestBooleanFunctions_ObjectFlow1492->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow1492);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1492->setName("ObjectFlow1492");
			fUML_Tests_TestBooleanFunctions_ObjectFlow1492->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow1492->setSource(fUML_Tests_TestBooleanFunctions_GenData1_GenData1_argumentData2);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1492->setTarget(fUML_Tests_TestBooleanFunctions_Call_And_And_y);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow1492);
			// ObjectFlow ObjectFlow1494 from GenData2.argumentData1 to Or.x
			fUML_Tests_TestBooleanFunctions_ObjectFlow1494->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow1494);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1494->setName("ObjectFlow1494");
			fUML_Tests_TestBooleanFunctions_ObjectFlow1494->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow1494->setSource(fUML_Tests_TestBooleanFunctions_GenData2_GenData2_argumentData1);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1494->setTarget(fUML_Tests_TestBooleanFunctions_Call_Or_Or_x);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow1494);
			// ObjectFlow ObjectFlow1496 from GenData4.argumentData1 to Xor.x
			fUML_Tests_TestBooleanFunctions_ObjectFlow1496->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow1496);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1496->setName("ObjectFlow1496");
			fUML_Tests_TestBooleanFunctions_ObjectFlow1496->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow1496->setSource(fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData1);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1496->setTarget(fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_x);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow1496);
			// ObjectFlow ObjectFlow1449 from Or.result to Param(OrResult)
			fUML_Tests_TestBooleanFunctions_ObjectFlow1449->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow1449);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1449->setName("ObjectFlow1449");
			fUML_Tests_TestBooleanFunctions_ObjectFlow1449->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow1449->setSource(fUML_Tests_TestBooleanFunctions_Call_Or_Or_result);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1449->setTarget(fUML_Tests_TestBooleanFunctions_Param_OrResult);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow1449);
			// ObjectFlow ObjectFlow1510 from GenData4.argumentData2 to Xor.y
			fUML_Tests_TestBooleanFunctions_ObjectFlow1510->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow1510);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1510->setName("ObjectFlow1510");
			fUML_Tests_TestBooleanFunctions_ObjectFlow1510->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow1510->setSource(fUML_Tests_TestBooleanFunctions_GenData4_GenData4_argumentData2);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1510->setTarget(fUML_Tests_TestBooleanFunctions_Call_Xor_Xor_y);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow1510);
			// ObjectFlow ObjectFlow1451 from And.result to Param(AndResult)
			fUML_Tests_TestBooleanFunctions_ObjectFlow1451->setThisActivityEdgePtr(fUML_Tests_TestBooleanFunctions_ObjectFlow1451);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1451->setName("ObjectFlow1451");
			fUML_Tests_TestBooleanFunctions_ObjectFlow1451->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestBooleanFunctions_ObjectFlow1451->setSource(fUML_Tests_TestBooleanFunctions_Call_And_And_result);
			fUML_Tests_TestBooleanFunctions_ObjectFlow1451->setTarget(fUML_Tests_TestBooleanFunctions_Param_AndResult);
		fUML_Tests_TestBooleanFunctions->addEdge(fUML_Tests_TestBooleanFunctions_ObjectFlow1451);
	fUML_Tests->addPackagedElement(fUML_Tests_TestBooleanFunctions);
		// Activity TestIntegerComparisonFunctions
		fUML_Tests_TestIntegerComparisonFunctions->setThisActivityPtr(fUML_Tests_TestIntegerComparisonFunctions);
		fUML_Tests_TestIntegerComparisonFunctions->setName("TestIntegerComparisonFunctions");
		fUML_Tests_TestIntegerComparisonFunctions->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestIntegerComparisonFunctions->isReentrant = false;
			// Parameter LTResult
			fUML_Tests_TestIntegerComparisonFunctions_LTResult->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_LTResult);
			fUML_Tests_TestIntegerComparisonFunctions_LTResult->setName("LTResult");
			fUML_Tests_TestIntegerComparisonFunctions_LTResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_LTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_LTResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerComparisonFunctions->addOwnedParameter(fUML_Tests_TestIntegerComparisonFunctions_LTResult);
			// Parameter LEResult
			fUML_Tests_TestIntegerComparisonFunctions_LEResult->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_LEResult);
			fUML_Tests_TestIntegerComparisonFunctions_LEResult->setName("LEResult");
			fUML_Tests_TestIntegerComparisonFunctions_LEResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_LEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_LEResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerComparisonFunctions->addOwnedParameter(fUML_Tests_TestIntegerComparisonFunctions_LEResult);
			// Parameter GTResult
			fUML_Tests_TestIntegerComparisonFunctions_GTResult->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_GTResult);
			fUML_Tests_TestIntegerComparisonFunctions_GTResult->setName("GTResult");
			fUML_Tests_TestIntegerComparisonFunctions_GTResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_GTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_GTResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerComparisonFunctions->addOwnedParameter(fUML_Tests_TestIntegerComparisonFunctions_GTResult);
			// Parameter GEResult
			fUML_Tests_TestIntegerComparisonFunctions_GEResult->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_GEResult);
			fUML_Tests_TestIntegerComparisonFunctions_GEResult->setName("GEResult");
			fUML_Tests_TestIntegerComparisonFunctions_GEResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_GEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_GEResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerComparisonFunctions->addOwnedParameter(fUML_Tests_TestIntegerComparisonFunctions_GEResult);
			// CallBehaviorAction Call(LT)
			fUML_Tests_TestIntegerComparisonFunctions_Call_LT->setThisExecutableNodePtr(fUML_Tests_TestIntegerComparisonFunctions_Call_LT);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LT->setName("Call(LT)");
			fUML_Tests_TestIntegerComparisonFunctions_Call_LT->setVisibility(VisibilityKind::public_);
				// OutputPin LT.result
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result->setName("LT.result");
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LT->addResult(fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LT->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_lessThan);
				// InputPin LT.x
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x->setName("LT.x");
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LT->addArgument(fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x);
				// InputPin LT.y
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y->setName("LT.y");
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LT->addArgument(fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Call_LT);
			// CallBehaviorAction Call(GT)
			fUML_Tests_TestIntegerComparisonFunctions_Call_GT->setThisExecutableNodePtr(fUML_Tests_TestIntegerComparisonFunctions_Call_GT);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GT->setName("Call(GT)");
			fUML_Tests_TestIntegerComparisonFunctions_Call_GT->setVisibility(VisibilityKind::public_);
				// OutputPin GT.result
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result->setName("GT.result");
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GT->addResult(fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GT->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_greaterThan);
				// InputPin GT.x
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x->setName("GT.x");
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GT->addArgument(fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x);
				// InputPin GT.y
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y->setName("GT.y");
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GT->addArgument(fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Call_GT);
			// CallBehaviorAction Call(GE)
			fUML_Tests_TestIntegerComparisonFunctions_Call_GE->setThisExecutableNodePtr(fUML_Tests_TestIntegerComparisonFunctions_Call_GE);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GE->setName("Call(GE)");
			fUML_Tests_TestIntegerComparisonFunctions_Call_GE->setVisibility(VisibilityKind::public_);
				// OutputPin GE.result
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result->setName("GE.result");
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GE->addResult(fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GE->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_greaterOrEqual);
				// InputPin GE.x
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x->setName("GE.x");
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GE->addArgument(fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x);
				// InputPin GE.y
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y->setName("GE.y");
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerComparisonFunctions_Call_GE->addArgument(fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Call_GE);
			// ActivityParameterNode Param(GEResult)
			fUML_Tests_TestIntegerComparisonFunctions_Param_GEResult->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Param_GEResult);
			fUML_Tests_TestIntegerComparisonFunctions_Param_GEResult->setName("Param(GEResult)");
			fUML_Tests_TestIntegerComparisonFunctions_Param_GEResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerComparisonFunctions_Param_GEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_Param_GEResult->setParameter(fUML_Tests_TestIntegerComparisonFunctions_GEResult);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Param_GEResult);
			// ActivityParameterNode Param(LEResult)
			fUML_Tests_TestIntegerComparisonFunctions_Param_LEResult->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Param_LEResult);
			fUML_Tests_TestIntegerComparisonFunctions_Param_LEResult->setName("Param(LEResult)");
			fUML_Tests_TestIntegerComparisonFunctions_Param_LEResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerComparisonFunctions_Param_LEResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_Param_LEResult->setParameter(fUML_Tests_TestIntegerComparisonFunctions_LEResult);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Param_LEResult);
			// ActivityParameterNode Param(LTResult)
			fUML_Tests_TestIntegerComparisonFunctions_Param_LTResult->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Param_LTResult);
			fUML_Tests_TestIntegerComparisonFunctions_Param_LTResult->setName("Param(LTResult)");
			fUML_Tests_TestIntegerComparisonFunctions_Param_LTResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerComparisonFunctions_Param_LTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_Param_LTResult->setParameter(fUML_Tests_TestIntegerComparisonFunctions_LTResult);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Param_LTResult);
			// ValueSpecificationAction Value(2)
			fUML_Tests_TestIntegerComparisonFunctions_Value_2->setThisExecutableNodePtr(fUML_Tests_TestIntegerComparisonFunctions_Value_2);
			fUML_Tests_TestIntegerComparisonFunctions_Value_2->setName("Value(2)");
			fUML_Tests_TestIntegerComparisonFunctions_Value_2->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1573
				fUML_Tests_TestIntegerComparisonFunctions_Value_2_LiteralInteger1573->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Value_2_LiteralInteger1573);
				fUML_Tests_TestIntegerComparisonFunctions_Value_2_LiteralInteger1573->setName("LiteralInteger1573");
				fUML_Tests_TestIntegerComparisonFunctions_Value_2_LiteralInteger1573->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Value_2_LiteralInteger1573->setValue(2);
			fUML_Tests_TestIntegerComparisonFunctions_Value_2->setValue(fUML_Tests_TestIntegerComparisonFunctions_Value_2_LiteralInteger1573);
				// OutputPin Value(2).result
				fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result);
				fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result->setName("Value(2).result");
				fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerComparisonFunctions_Value_2->setResult(fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Value_2);
			// ValueSpecificationAction Value(3)
			fUML_Tests_TestIntegerComparisonFunctions_Value_3->setThisExecutableNodePtr(fUML_Tests_TestIntegerComparisonFunctions_Value_3);
			fUML_Tests_TestIntegerComparisonFunctions_Value_3->setName("Value(3)");
			fUML_Tests_TestIntegerComparisonFunctions_Value_3->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1542
				fUML_Tests_TestIntegerComparisonFunctions_Value_3_LiteralInteger1542->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Value_3_LiteralInteger1542);
				fUML_Tests_TestIntegerComparisonFunctions_Value_3_LiteralInteger1542->setName("LiteralInteger1542");
				fUML_Tests_TestIntegerComparisonFunctions_Value_3_LiteralInteger1542->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Value_3_LiteralInteger1542->setValue(3);
			fUML_Tests_TestIntegerComparisonFunctions_Value_3->setValue(fUML_Tests_TestIntegerComparisonFunctions_Value_3_LiteralInteger1542);
				// OutputPin Value(3).result
				fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result);
				fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result->setName("Value(3).result");
				fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerComparisonFunctions_Value_3->setResult(fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Value_3);
			// ForkNode Fork(2)
			fUML_Tests_TestIntegerComparisonFunctions_Fork_2->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Fork_2);
			fUML_Tests_TestIntegerComparisonFunctions_Fork_2->setName("Fork(2)");
			fUML_Tests_TestIntegerComparisonFunctions_Fork_2->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Fork_2);
			// CallBehaviorAction Call(LE)
			fUML_Tests_TestIntegerComparisonFunctions_Call_LE->setThisExecutableNodePtr(fUML_Tests_TestIntegerComparisonFunctions_Call_LE);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LE->setName("Call(LE)");
			fUML_Tests_TestIntegerComparisonFunctions_Call_LE->setVisibility(VisibilityKind::public_);
				// OutputPin LE.result
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result->setName("LE.result");
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LE->addResult(fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LE->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_lessOrEqual);
				// InputPin LE.x
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x->setName("LE.x");
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LE->addArgument(fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x);
				// InputPin LE.y
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y->setName("LE.y");
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerComparisonFunctions_Call_LE->addArgument(fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Call_LE);
			// ForkNode Fork(3)
			fUML_Tests_TestIntegerComparisonFunctions_Fork_3->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Fork_3);
			fUML_Tests_TestIntegerComparisonFunctions_Fork_3->setName("Fork(3)");
			fUML_Tests_TestIntegerComparisonFunctions_Fork_3->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Fork_3);
			// ActivityParameterNode Param(GTResult)
			fUML_Tests_TestIntegerComparisonFunctions_Param_GTResult->setThisElementPtr(fUML_Tests_TestIntegerComparisonFunctions_Param_GTResult);
			fUML_Tests_TestIntegerComparisonFunctions_Param_GTResult->setName("Param(GTResult)");
			fUML_Tests_TestIntegerComparisonFunctions_Param_GTResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerComparisonFunctions_Param_GTResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Boolean);
			fUML_Tests_TestIntegerComparisonFunctions_Param_GTResult->setParameter(fUML_Tests_TestIntegerComparisonFunctions_GTResult);
		fUML_Tests_TestIntegerComparisonFunctions->addNode(fUML_Tests_TestIntegerComparisonFunctions_Param_GTResult);
			// ObjectFlow ObjectFlow1555 from Value(3).result to Fork(3)
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1555->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1555);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1555->setName("ObjectFlow1555");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1555->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1555->setSource(fUML_Tests_TestIntegerComparisonFunctions_Value_3_Value_3_result);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1555->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Fork_3);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1555);
			// ObjectFlow ObjectFlow1557 from Fork(3) to GE.x
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1557->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1557);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1557->setName("ObjectFlow1557");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1557->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1557->setSource(fUML_Tests_TestIntegerComparisonFunctions_Fork_3);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1557->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_x);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1557);
			// ObjectFlow ObjectFlow1559 from Fork(3) to GT.x
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1559->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1559);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1559->setName("ObjectFlow1559");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1559->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1559->setSource(fUML_Tests_TestIntegerComparisonFunctions_Fork_3);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1559->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_x);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1559);
			// ControlFlow ControlFlow1561 from Call(LT) to Call(LE)
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1561->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1561);
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1561->setName("ControlFlow1561");
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1561->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1561->setSource(fUML_Tests_TestIntegerComparisonFunctions_Call_LT);
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1561->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_LE);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1561);
			// ObjectFlow ObjectFlow1528 from LT.result to Param(LTResult)
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1528->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1528);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1528->setName("ObjectFlow1528");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1528->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1528->setSource(fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_result);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1528->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Param_LTResult);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1528);
			// ObjectFlow ObjectFlow1530 from Fork(2) to LT.y
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1530->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1530);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1530->setName("ObjectFlow1530");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1530->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1530->setSource(fUML_Tests_TestIntegerComparisonFunctions_Fork_2);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1530->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_y);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1530);
			// ObjectFlow ObjectFlow1532 from Fork(3) to LT.x
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1532->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1532);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1532->setName("ObjectFlow1532");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1532->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1532->setSource(fUML_Tests_TestIntegerComparisonFunctions_Fork_3);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1532->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_LT_LT_x);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1532);
			// ControlFlow ControlFlow1563 from Call(LE) to Call(GT)
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1563->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1563);
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1563->setName("ControlFlow1563");
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1563->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1563->setSource(fUML_Tests_TestIntegerComparisonFunctions_Call_LE);
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1563->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_GT);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1563);
			// ObjectFlow ObjectFlow1534 from Fork(2) to LE.y
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1534->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1534);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1534->setName("ObjectFlow1534");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1534->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1534->setSource(fUML_Tests_TestIntegerComparisonFunctions_Fork_2);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1534->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_y);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1534);
			// ObjectFlow ObjectFlow1536 from GT.result to Param(GTResult)
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1536->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1536);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1536->setName("ObjectFlow1536");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1536->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1536->setSource(fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_result);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1536->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Param_GTResult);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1536);
			// ObjectFlow ObjectFlow1565 from Fork(2) to GT.y
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1565->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1565);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1565->setName("ObjectFlow1565");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1565->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1565->setSource(fUML_Tests_TestIntegerComparisonFunctions_Fork_2);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1565->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_GT_GT_y);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1565);
			// ObjectFlow ObjectFlow1567 from Fork(2) to GE.y
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1567->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1567);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1567->setName("ObjectFlow1567");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1567->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1567->setSource(fUML_Tests_TestIntegerComparisonFunctions_Fork_2);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1567->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_y);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1567);
			// ObjectFlow ObjectFlow1569 from GE.result to Param(GEResult)
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1569->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1569);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1569->setName("ObjectFlow1569");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1569->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1569->setSource(fUML_Tests_TestIntegerComparisonFunctions_Call_GE_GE_result);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1569->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Param_GEResult);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1569);
			// ObjectFlow ObjectFlow1538 from LE.result to Param(LEResult)
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1538->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1538);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1538->setName("ObjectFlow1538");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1538->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1538->setSource(fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_result);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1538->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Param_LEResult);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1538);
			// ObjectFlow ObjectFlow1571 from Fork(3) to LE.x
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1571->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1571);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1571->setName("ObjectFlow1571");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1571->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1571->setSource(fUML_Tests_TestIntegerComparisonFunctions_Fork_3);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1571->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_LE_LE_x);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1571);
			// ControlFlow ControlFlow1576 from Call(GT) to Call(GE)
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1576->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1576);
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1576->setName("ControlFlow1576");
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1576->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1576->setSource(fUML_Tests_TestIntegerComparisonFunctions_Call_GT);
			fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1576->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Call_GE);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ControlFlow1576);
			// ObjectFlow ObjectFlow1578 from Value(2).result to Fork(2)
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1578->setThisActivityEdgePtr(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1578);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1578->setName("ObjectFlow1578");
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1578->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1578->setSource(fUML_Tests_TestIntegerComparisonFunctions_Value_2_Value_2_result);
			fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1578->setTarget(fUML_Tests_TestIntegerComparisonFunctions_Fork_2);
		fUML_Tests_TestIntegerComparisonFunctions->addEdge(fUML_Tests_TestIntegerComparisonFunctions_ObjectFlow1578);
	fUML_Tests->addPackagedElement(fUML_Tests_TestIntegerComparisonFunctions);
		// Class General
		fUML_Tests_General->setThisClass_Ptr(fUML_Tests_General);
		fUML_Tests_General->setName("General");
		fUML_Tests_General->setVisibility(VisibilityKind::public_);
		
			// Property y
			fUML_Tests_General_y->setThisElementPtr(fUML_Tests_General_y);
			fUML_Tests_General_y->setName("y");
			fUML_Tests_General_y->setVisibility(VisibilityKind::public_);
		fUML_Tests_General->addOwnedAttribute(fUML_Tests_General_y);
	fUML_Tests->addPackagedElement(fUML_Tests_General);
		// Activity TestIntegerFunctions
		fUML_Tests_TestIntegerFunctions->setThisActivityPtr(fUML_Tests_TestIntegerFunctions);
		fUML_Tests_TestIntegerFunctions->setName("TestIntegerFunctions");
		fUML_Tests_TestIntegerFunctions->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestIntegerFunctions->isReentrant = false;
			// Parameter NegResult
			fUML_Tests_TestIntegerFunctions_NegResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_NegResult);
			fUML_Tests_TestIntegerFunctions_NegResult->setName("NegResult");
			fUML_Tests_TestIntegerFunctions_NegResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_NegResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_NegResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerFunctions->addOwnedParameter(fUML_Tests_TestIntegerFunctions_NegResult);
			// Parameter PlusResult
			fUML_Tests_TestIntegerFunctions_PlusResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_PlusResult);
			fUML_Tests_TestIntegerFunctions_PlusResult->setName("PlusResult");
			fUML_Tests_TestIntegerFunctions_PlusResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_PlusResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_PlusResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerFunctions->addOwnedParameter(fUML_Tests_TestIntegerFunctions_PlusResult);
			// Parameter MinusResult
			fUML_Tests_TestIntegerFunctions_MinusResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_MinusResult);
			fUML_Tests_TestIntegerFunctions_MinusResult->setName("MinusResult");
			fUML_Tests_TestIntegerFunctions_MinusResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_MinusResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_MinusResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerFunctions->addOwnedParameter(fUML_Tests_TestIntegerFunctions_MinusResult);
			// Parameter TimesResult
			fUML_Tests_TestIntegerFunctions_TimesResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_TimesResult);
			fUML_Tests_TestIntegerFunctions_TimesResult->setName("TimesResult");
			fUML_Tests_TestIntegerFunctions_TimesResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_TimesResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_TimesResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerFunctions->addOwnedParameter(fUML_Tests_TestIntegerFunctions_TimesResult);
			// Parameter DivResult
			fUML_Tests_TestIntegerFunctions_DivResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_DivResult);
			fUML_Tests_TestIntegerFunctions_DivResult->setName("DivResult");
			fUML_Tests_TestIntegerFunctions_DivResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_DivResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_DivResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerFunctions->addOwnedParameter(fUML_Tests_TestIntegerFunctions_DivResult);
			// Parameter ModResult
			fUML_Tests_TestIntegerFunctions_ModResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_ModResult);
			fUML_Tests_TestIntegerFunctions_ModResult->setName("ModResult");
			fUML_Tests_TestIntegerFunctions_ModResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ModResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_ModResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerFunctions->addOwnedParameter(fUML_Tests_TestIntegerFunctions_ModResult);
			// Parameter MaxResult
			fUML_Tests_TestIntegerFunctions_MaxResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_MaxResult);
			fUML_Tests_TestIntegerFunctions_MaxResult->setName("MaxResult");
			fUML_Tests_TestIntegerFunctions_MaxResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_MaxResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_MaxResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerFunctions->addOwnedParameter(fUML_Tests_TestIntegerFunctions_MaxResult);
			// Parameter MinResult
			fUML_Tests_TestIntegerFunctions_MinResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_MinResult);
			fUML_Tests_TestIntegerFunctions_MinResult->setName("MinResult");
			fUML_Tests_TestIntegerFunctions_MinResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_MinResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_MinResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerFunctions->addOwnedParameter(fUML_Tests_TestIntegerFunctions_MinResult);
			// Parameter AbsResult
			fUML_Tests_TestIntegerFunctions_AbsResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_AbsResult);
			fUML_Tests_TestIntegerFunctions_AbsResult->setName("AbsResult");
			fUML_Tests_TestIntegerFunctions_AbsResult->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_AbsResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_AbsResult->setDirection(ParameterDirectionKind::out);
		fUML_Tests_TestIntegerFunctions->addOwnedParameter(fUML_Tests_TestIntegerFunctions_AbsResult);
			// ValueSpecificationAction Value(2)
			fUML_Tests_TestIntegerFunctions_Value_2->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Value_2);
			fUML_Tests_TestIntegerFunctions_Value_2->setName("Value(2)");
			fUML_Tests_TestIntegerFunctions_Value_2->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1580
				fUML_Tests_TestIntegerFunctions_Value_2_LiteralInteger1580->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Value_2_LiteralInteger1580);
				fUML_Tests_TestIntegerFunctions_Value_2_LiteralInteger1580->setName("LiteralInteger1580");
				fUML_Tests_TestIntegerFunctions_Value_2_LiteralInteger1580->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Value_2_LiteralInteger1580->setValue(2);
			fUML_Tests_TestIntegerFunctions_Value_2->setValue(fUML_Tests_TestIntegerFunctions_Value_2_LiteralInteger1580);
				// OutputPin Value(2).result
				fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result);
				fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result->setName("Value(2).result");
				fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Value_2->setResult(fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Value_2);
			// CallBehaviorAction Call(Minus)
			fUML_Tests_TestIntegerFunctions_Call_Minus->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Call_Minus);
			fUML_Tests_TestIntegerFunctions_Call_Minus->setName("Call(Minus)");
			fUML_Tests_TestIntegerFunctions_Call_Minus->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestIntegerFunctions_Call_Minus_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Minus_result);
				fUML_Tests_TestIntegerFunctions_Call_Minus_result->setName("result");
				fUML_Tests_TestIntegerFunctions_Call_Minus_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Minus_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Minus->addResult(fUML_Tests_TestIntegerFunctions_Call_Minus_result);
			fUML_Tests_TestIntegerFunctions_Call_Minus->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_minus);
				// InputPin x
				fUML_Tests_TestIntegerFunctions_Call_Minus_x->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Minus_x);
				fUML_Tests_TestIntegerFunctions_Call_Minus_x->setName("x");
				fUML_Tests_TestIntegerFunctions_Call_Minus_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Minus_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Minus->addArgument(fUML_Tests_TestIntegerFunctions_Call_Minus_x);
				// InputPin y
				fUML_Tests_TestIntegerFunctions_Call_Minus_y->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Minus_y);
				fUML_Tests_TestIntegerFunctions_Call_Minus_y->setName("y");
				fUML_Tests_TestIntegerFunctions_Call_Minus_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Minus_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Minus->addArgument(fUML_Tests_TestIntegerFunctions_Call_Minus_y);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Call_Minus);
			// ForkNode Fork(2)
			fUML_Tests_TestIntegerFunctions_Fork_2->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Fork_2);
			fUML_Tests_TestIntegerFunctions_Fork_2->setName("Fork(2)");
			fUML_Tests_TestIntegerFunctions_Fork_2->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Fork_2);
			// CallBehaviorAction Call(Plus)
			fUML_Tests_TestIntegerFunctions_Call_Plus->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Call_Plus);
			fUML_Tests_TestIntegerFunctions_Call_Plus->setName("Call(Plus)");
			fUML_Tests_TestIntegerFunctions_Call_Plus->setVisibility(VisibilityKind::public_);
				// OutputPin Plus.result
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result);
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result->setName("Plus.result");
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Plus->addResult(fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result);
			fUML_Tests_TestIntegerFunctions_Call_Plus->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_plus);
				// InputPin Plus.x
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x);
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x->setName("Plus.x");
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Plus->addArgument(fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x);
				// InputPin Plus.y
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y);
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y->setName("Plus.y");
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Plus->addArgument(fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Call_Plus);
			// CallBehaviorAction Call(Abs)
			fUML_Tests_TestIntegerFunctions_Call_Abs->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Call_Abs);
			fUML_Tests_TestIntegerFunctions_Call_Abs->setName("Call(Abs)");
			fUML_Tests_TestIntegerFunctions_Call_Abs->setVisibility(VisibilityKind::public_);
				// OutputPin Abs.result
				fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result);
				fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result->setName("Abs.result");
				fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Abs->addResult(fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result);
			fUML_Tests_TestIntegerFunctions_Call_Abs->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_Abs);
				// InputPin Abs.x
				fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x);
				fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x->setName("Abs.x");
				fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Abs->addArgument(fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Call_Abs);
			// ActivityParameterNode Param(PlusResult)
			fUML_Tests_TestIntegerFunctions_Param_PlusResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Param_PlusResult);
			fUML_Tests_TestIntegerFunctions_Param_PlusResult->setName("Param(PlusResult)");
			fUML_Tests_TestIntegerFunctions_Param_PlusResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerFunctions_Param_PlusResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Param_PlusResult->setParameter(fUML_Tests_TestIntegerFunctions_PlusResult);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Param_PlusResult);
			// ForkNode Fork(3)
			fUML_Tests_TestIntegerFunctions_Fork_3->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Fork_3);
			fUML_Tests_TestIntegerFunctions_Fork_3->setName("Fork(3)");
			fUML_Tests_TestIntegerFunctions_Fork_3->setVisibility(VisibilityKind::public_);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Fork_3);
			// ActivityParameterNode Param(MaxResult)
			fUML_Tests_TestIntegerFunctions_Param_MaxResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Param_MaxResult);
			fUML_Tests_TestIntegerFunctions_Param_MaxResult->setName("Param(MaxResult)");
			fUML_Tests_TestIntegerFunctions_Param_MaxResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerFunctions_Param_MaxResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Param_MaxResult->setParameter(fUML_Tests_TestIntegerFunctions_MaxResult);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Param_MaxResult);
			// ActivityParameterNode Param(ModResult)
			fUML_Tests_TestIntegerFunctions_Param_ModResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Param_ModResult);
			fUML_Tests_TestIntegerFunctions_Param_ModResult->setName("Param(ModResult)");
			fUML_Tests_TestIntegerFunctions_Param_ModResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerFunctions_Param_ModResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Param_ModResult->setParameter(fUML_Tests_TestIntegerFunctions_ModResult);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Param_ModResult);
			// ActivityParameterNode Param(DivResult)
			fUML_Tests_TestIntegerFunctions_Param_DivResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Param_DivResult);
			fUML_Tests_TestIntegerFunctions_Param_DivResult->setName("Param(DivResult)");
			fUML_Tests_TestIntegerFunctions_Param_DivResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerFunctions_Param_DivResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Param_DivResult->setParameter(fUML_Tests_TestIntegerFunctions_DivResult);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Param_DivResult);
			// CallBehaviorAction Call(Max)
			fUML_Tests_TestIntegerFunctions_Call_Max->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Call_Max);
			fUML_Tests_TestIntegerFunctions_Call_Max->setName("Call(Max)");
			fUML_Tests_TestIntegerFunctions_Call_Max->setVisibility(VisibilityKind::public_);
				// OutputPin Max.result
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Max_Max_result);
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_result->setName("Max.result");
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Max->addResult(fUML_Tests_TestIntegerFunctions_Call_Max_Max_result);
			fUML_Tests_TestIntegerFunctions_Call_Max->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_Max);
				// InputPin Max.x
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_x->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Max_Max_x);
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_x->setName("Max.x");
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Max->addArgument(fUML_Tests_TestIntegerFunctions_Call_Max_Max_x);
				// InputPin Max.y
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_y->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Max_Max_y);
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_y->setName("Max.y");
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Max_Max_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Max->addArgument(fUML_Tests_TestIntegerFunctions_Call_Max_Max_y);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Call_Max);
			// CallBehaviorAction Call(Times)
			fUML_Tests_TestIntegerFunctions_Call_Times->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Call_Times);
			fUML_Tests_TestIntegerFunctions_Call_Times->setName("Call(Times)");
			fUML_Tests_TestIntegerFunctions_Call_Times->setVisibility(VisibilityKind::public_);
				// OutputPin Times.result
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Times_Times_result);
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_result->setName("Times.result");
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Times->addResult(fUML_Tests_TestIntegerFunctions_Call_Times_Times_result);
			fUML_Tests_TestIntegerFunctions_Call_Times->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_times);
				// InputPin Times.x
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_x->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Times_Times_x);
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_x->setName("Times.x");
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Times->addArgument(fUML_Tests_TestIntegerFunctions_Call_Times_Times_x);
				// InputPin Times.y
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_y->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Times_Times_y);
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_y->setName("Times.y");
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Times_Times_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Times->addArgument(fUML_Tests_TestIntegerFunctions_Call_Times_Times_y);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Call_Times);
			// ActivityParameterNode Param(AbsResult)
			fUML_Tests_TestIntegerFunctions_Param_AbsResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Param_AbsResult);
			fUML_Tests_TestIntegerFunctions_Param_AbsResult->setName("Param(AbsResult)");
			fUML_Tests_TestIntegerFunctions_Param_AbsResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerFunctions_Param_AbsResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Param_AbsResult->setParameter(fUML_Tests_TestIntegerFunctions_AbsResult);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Param_AbsResult);
			// CallBehaviorAction Call(Div)
			fUML_Tests_TestIntegerFunctions_Call_Div->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Call_Div);
			fUML_Tests_TestIntegerFunctions_Call_Div->setName("Call(Div)");
			fUML_Tests_TestIntegerFunctions_Call_Div->setVisibility(VisibilityKind::public_);
				// OutputPin result
				fUML_Tests_TestIntegerFunctions_Call_Div_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Div_result);
				fUML_Tests_TestIntegerFunctions_Call_Div_result->setName("result");
				fUML_Tests_TestIntegerFunctions_Call_Div_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Div_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
				fUML_Tests_TestIntegerFunctions_Call_Div_result->setLower(0);
			fUML_Tests_TestIntegerFunctions_Call_Div->addResult(fUML_Tests_TestIntegerFunctions_Call_Div_result);
			fUML_Tests_TestIntegerFunctions_Call_Div->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_Div);
				// InputPin Div.x
				fUML_Tests_TestIntegerFunctions_Call_Div_Div_x->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Div_Div_x);
				fUML_Tests_TestIntegerFunctions_Call_Div_Div_x->setName("Div.x");
				fUML_Tests_TestIntegerFunctions_Call_Div_Div_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Div_Div_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Div->addArgument(fUML_Tests_TestIntegerFunctions_Call_Div_Div_x);
				// InputPin Div.y
				fUML_Tests_TestIntegerFunctions_Call_Div_Div_y->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Div_Div_y);
				fUML_Tests_TestIntegerFunctions_Call_Div_Div_y->setName("Div.y");
				fUML_Tests_TestIntegerFunctions_Call_Div_Div_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Div_Div_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Div->addArgument(fUML_Tests_TestIntegerFunctions_Call_Div_Div_y);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Call_Div);
			// CallBehaviorAction Call(Mod)
			fUML_Tests_TestIntegerFunctions_Call_Mod->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Call_Mod);
			fUML_Tests_TestIntegerFunctions_Call_Mod->setName("Call(Mod)");
			fUML_Tests_TestIntegerFunctions_Call_Mod->setVisibility(VisibilityKind::public_);
				// OutputPin Mod.result
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result);
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result->setName("Mod.result");
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Mod->addResult(fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result);
			fUML_Tests_TestIntegerFunctions_Call_Mod->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_Mod);
				// InputPin Mod.x
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x);
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x->setName("Mod.x");
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Mod->addArgument(fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x);
				// InputPin Mod.y
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y);
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y->setName("Mod.y");
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Mod->addArgument(fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Call_Mod);
			// CallBehaviorAction Call(Min)
			fUML_Tests_TestIntegerFunctions_Call_Min->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Call_Min);
			fUML_Tests_TestIntegerFunctions_Call_Min->setName("Call(Min)");
			fUML_Tests_TestIntegerFunctions_Call_Min->setVisibility(VisibilityKind::public_);
				// OutputPin Min.result
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Min_Min_result);
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_result->setName("Min.result");
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Min->addResult(fUML_Tests_TestIntegerFunctions_Call_Min_Min_result);
			fUML_Tests_TestIntegerFunctions_Call_Min->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_Min);
				// InputPin Min.x
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_x->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Min_Min_x);
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_x->setName("Min.x");
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Min->addArgument(fUML_Tests_TestIntegerFunctions_Call_Min_Min_x);
				// InputPin Min.y
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_y->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Min_Min_y);
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_y->setName("Min.y");
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_y->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Min_Min_y->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Min->addArgument(fUML_Tests_TestIntegerFunctions_Call_Min_Min_y);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Call_Min);
			// ValueSpecificationAction Value(3)
			fUML_Tests_TestIntegerFunctions_Value_3->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Value_3);
			fUML_Tests_TestIntegerFunctions_Value_3->setName("Value(3)");
			fUML_Tests_TestIntegerFunctions_Value_3->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1638
				fUML_Tests_TestIntegerFunctions_Value_3_LiteralInteger1638->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Value_3_LiteralInteger1638);
				fUML_Tests_TestIntegerFunctions_Value_3_LiteralInteger1638->setName("LiteralInteger1638");
				fUML_Tests_TestIntegerFunctions_Value_3_LiteralInteger1638->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Value_3_LiteralInteger1638->setValue(3);
			fUML_Tests_TestIntegerFunctions_Value_3->setValue(fUML_Tests_TestIntegerFunctions_Value_3_LiteralInteger1638);
				// OutputPin Value(3).result
				fUML_Tests_TestIntegerFunctions_Value_3_Value_3_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Value_3_Value_3_result);
				fUML_Tests_TestIntegerFunctions_Value_3_Value_3_result->setName("Value(3).result");
				fUML_Tests_TestIntegerFunctions_Value_3_Value_3_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Value_3_Value_3_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Value_3->setResult(fUML_Tests_TestIntegerFunctions_Value_3_Value_3_result);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Value_3);
			// ActivityParameterNode Param(MinResult)
			fUML_Tests_TestIntegerFunctions_Param_MinResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Param_MinResult);
			fUML_Tests_TestIntegerFunctions_Param_MinResult->setName("Param(MinResult)");
			fUML_Tests_TestIntegerFunctions_Param_MinResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerFunctions_Param_MinResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Param_MinResult->setParameter(fUML_Tests_TestIntegerFunctions_MinResult);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Param_MinResult);
			// ValueSpecificationAction Value(neg 2)
			fUML_Tests_TestIntegerFunctions_Value_neg_2->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Value_neg_2);
			fUML_Tests_TestIntegerFunctions_Value_neg_2->setName("Value(neg 2)");
			fUML_Tests_TestIntegerFunctions_Value_neg_2->setVisibility(VisibilityKind::public_);
				// LiteralInteger LiteralInteger1675
				fUML_Tests_TestIntegerFunctions_Value_neg_2_LiteralInteger1675->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Value_neg_2_LiteralInteger1675);
				fUML_Tests_TestIntegerFunctions_Value_neg_2_LiteralInteger1675->setName("LiteralInteger1675");
				fUML_Tests_TestIntegerFunctions_Value_neg_2_LiteralInteger1675->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Value_neg_2_LiteralInteger1675->setValue(-2);
			fUML_Tests_TestIntegerFunctions_Value_neg_2->setValue(fUML_Tests_TestIntegerFunctions_Value_neg_2_LiteralInteger1675);
				// OutputPin Value(-2).result
				fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result);
				fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result->setName("Value(-2).result");
				fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Value_neg_2->setResult(fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Value_neg_2);
			// ActivityParameterNode Param(NegResult)
			fUML_Tests_TestIntegerFunctions_Param_NegResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Param_NegResult);
			fUML_Tests_TestIntegerFunctions_Param_NegResult->setName("Param(NegResult)");
			fUML_Tests_TestIntegerFunctions_Param_NegResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerFunctions_Param_NegResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Param_NegResult->setParameter(fUML_Tests_TestIntegerFunctions_NegResult);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Param_NegResult);
			// ActivityParameterNode Param(TimesResult)
			fUML_Tests_TestIntegerFunctions_Param_TimesResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Param_TimesResult);
			fUML_Tests_TestIntegerFunctions_Param_TimesResult->setName("Param(TimesResult)");
			fUML_Tests_TestIntegerFunctions_Param_TimesResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerFunctions_Param_TimesResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Param_TimesResult->setParameter(fUML_Tests_TestIntegerFunctions_TimesResult);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Param_TimesResult);
			// CallBehaviorAction Call(Neg)
			fUML_Tests_TestIntegerFunctions_Call_Neg->setThisExecutableNodePtr(fUML_Tests_TestIntegerFunctions_Call_Neg);
			fUML_Tests_TestIntegerFunctions_Call_Neg->setName("Call(Neg)");
			fUML_Tests_TestIntegerFunctions_Call_Neg->setVisibility(VisibilityKind::public_);
				// OutputPin Neg.result
				fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result);
				fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result->setName("Neg.result");
				fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Neg->addResult(fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result);
			fUML_Tests_TestIntegerFunctions_Call_Neg->setBehavior(FoundationalModelLibraryModel::Instance()->FoundationalModelLibrary_PrimitiveBehaviors_IntegerFunctions_Neg);
				// InputPin Neg.x
				fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x);
				fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x->setName("Neg.x");
				fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x->setVisibility(VisibilityKind::public_);
				fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Call_Neg->addArgument(fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Call_Neg);
			// ActivityParameterNode Param(MinusResult)
			fUML_Tests_TestIntegerFunctions_Param_MinusResult->setThisElementPtr(fUML_Tests_TestIntegerFunctions_Param_MinusResult);
			fUML_Tests_TestIntegerFunctions_Param_MinusResult->setName("Param(MinusResult)");
			fUML_Tests_TestIntegerFunctions_Param_MinusResult->setVisibility(VisibilityKind::public_);
			fUML_Tests_TestIntegerFunctions_Param_MinusResult->setType(PrimitiveTypesModel::Instance()->PrimitiveTypes_Integer);
			fUML_Tests_TestIntegerFunctions_Param_MinusResult->setParameter(fUML_Tests_TestIntegerFunctions_MinusResult);
		fUML_Tests_TestIntegerFunctions->addNode(fUML_Tests_TestIntegerFunctions_Param_MinusResult);
			// ObjectFlow ObjectFlow1643 from Fork(3) to Times.x
			fUML_Tests_TestIntegerFunctions_ObjectFlow1643->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow1643);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1643->setName("ObjectFlow1643");
			fUML_Tests_TestIntegerFunctions_ObjectFlow1643->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow1643->setSource(fUML_Tests_TestIntegerFunctions_Fork_3);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1643->setTarget(fUML_Tests_TestIntegerFunctions_Call_Times_Times_x);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow1643);
			// ObjectFlow ObjectFlow1645 from Mod.result to Param(ModResult)
			fUML_Tests_TestIntegerFunctions_ObjectFlow1645->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow1645);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1645->setName("ObjectFlow1645");
			fUML_Tests_TestIntegerFunctions_ObjectFlow1645->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow1645->setSource(fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1645->setTarget(fUML_Tests_TestIntegerFunctions_Param_ModResult);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow1645);
			// ControlFlow ControlFlow1582 from Call(Div) to Call(Mod)
			fUML_Tests_TestIntegerFunctions_ControlFlow1582->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ControlFlow1582);
			fUML_Tests_TestIntegerFunctions_ControlFlow1582->setName("ControlFlow1582");
			fUML_Tests_TestIntegerFunctions_ControlFlow1582->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ControlFlow1582->setSource(fUML_Tests_TestIntegerFunctions_Call_Div);
			fUML_Tests_TestIntegerFunctions_ControlFlow1582->setTarget(fUML_Tests_TestIntegerFunctions_Call_Mod);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ControlFlow1582);
			// ObjectFlow ObjectFlow1653 from Fork(2) to Min.y
			fUML_Tests_TestIntegerFunctions_ObjectFlow1653->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow1653);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1653->setName("ObjectFlow1653");
			fUML_Tests_TestIntegerFunctions_ObjectFlow1653->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow1653->setSource(fUML_Tests_TestIntegerFunctions_Fork_2);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1653->setTarget(fUML_Tests_TestIntegerFunctions_Call_Min_Min_y);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow1653);
			// ObjectFlow ObjectFlow1661 from Times.result to Param(TimesResult)
			fUML_Tests_TestIntegerFunctions_ObjectFlow1661->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow1661);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1661->setName("ObjectFlow1661");
			fUML_Tests_TestIntegerFunctions_ObjectFlow1661->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow1661->setSource(fUML_Tests_TestIntegerFunctions_Call_Times_Times_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1661->setTarget(fUML_Tests_TestIntegerFunctions_Param_TimesResult);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow1661);
			// ObjectFlow ObjectFlow1584 from Fork(3) to Max.x
			fUML_Tests_TestIntegerFunctions_ObjectFlow1584->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow1584);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1584->setName("ObjectFlow1584");
			fUML_Tests_TestIntegerFunctions_ObjectFlow1584->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow1584->setSource(fUML_Tests_TestIntegerFunctions_Fork_3);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1584->setTarget(fUML_Tests_TestIntegerFunctions_Call_Max_Max_x);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow1584);
			// ObjectFlow ObjectFlow1586 from Fork(2) to Times.y
			fUML_Tests_TestIntegerFunctions_ObjectFlow1586->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow1586);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1586->setName("ObjectFlow1586");
			fUML_Tests_TestIntegerFunctions_ObjectFlow1586->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow1586->setSource(fUML_Tests_TestIntegerFunctions_Fork_2);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1586->setTarget(fUML_Tests_TestIntegerFunctions_Call_Times_Times_y);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow1586);
			// ObjectFlow ObjectFlow1588 from Fork(2) to Mod.y
			fUML_Tests_TestIntegerFunctions_ObjectFlow1588->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow1588);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1588->setName("ObjectFlow1588");
			fUML_Tests_TestIntegerFunctions_ObjectFlow1588->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow1588->setSource(fUML_Tests_TestIntegerFunctions_Fork_2);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1588->setTarget(fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_y);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow1588);
			// ObjectFlow ObjectFlow1663 from Value(-2).result to Abs.x
			fUML_Tests_TestIntegerFunctions_ObjectFlow1663->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow1663);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1663->setName("ObjectFlow1663");
			fUML_Tests_TestIntegerFunctions_ObjectFlow1663->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow1663->setSource(fUML_Tests_TestIntegerFunctions_Value_neg_2_Value_minus2_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1663->setTarget(fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_x);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow1663);
			// ObjectFlow ObjectFlow1665 from Value(3).result to Fork(3)
			fUML_Tests_TestIntegerFunctions_ObjectFlow1665->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow1665);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1665->setName("ObjectFlow1665");
			fUML_Tests_TestIntegerFunctions_ObjectFlow1665->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow1665->setSource(fUML_Tests_TestIntegerFunctions_Value_3_Value_3_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1665->setTarget(fUML_Tests_TestIntegerFunctions_Fork_3);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow1665);
			// ObjectFlow ObjectFlow1667 from Fork(3) to Plus.x
			fUML_Tests_TestIntegerFunctions_ObjectFlow1667->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow1667);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1667->setName("ObjectFlow1667");
			fUML_Tests_TestIntegerFunctions_ObjectFlow1667->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow1667->setSource(fUML_Tests_TestIntegerFunctions_Fork_3);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1667->setTarget(fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_x);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow1667);
			// ObjectFlow ObjectFlow1596 from Fork(3) to Mod.x
			fUML_Tests_TestIntegerFunctions_ObjectFlow1596->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow1596);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1596->setName("ObjectFlow1596");
			fUML_Tests_TestIntegerFunctions_ObjectFlow1596->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow1596->setSource(fUML_Tests_TestIntegerFunctions_Fork_3);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1596->setTarget(fUML_Tests_TestIntegerFunctions_Call_Mod_Mod_x);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow1596);
			// ObjectFlow ObjectFlow1598 from Min.result to Param(MinResult)
			fUML_Tests_TestIntegerFunctions_ObjectFlow1598->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow1598);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1598->setName("ObjectFlow1598");
			fUML_Tests_TestIntegerFunctions_ObjectFlow1598->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow1598->setSource(fUML_Tests_TestIntegerFunctions_Call_Min_Min_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1598->setTarget(fUML_Tests_TestIntegerFunctions_Param_MinResult);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow1598);
			// ControlFlow ControlFlow1600 from Call(Max) to Call(Min)
			fUML_Tests_TestIntegerFunctions_ControlFlow1600->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ControlFlow1600);
			fUML_Tests_TestIntegerFunctions_ControlFlow1600->setName("ControlFlow1600");
			fUML_Tests_TestIntegerFunctions_ControlFlow1600->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ControlFlow1600->setSource(fUML_Tests_TestIntegerFunctions_Call_Max);
			fUML_Tests_TestIntegerFunctions_ControlFlow1600->setTarget(fUML_Tests_TestIntegerFunctions_Call_Min);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ControlFlow1600);
			// ObjectFlow ObjectFlow1602 from Fork(3) to Div.x
			fUML_Tests_TestIntegerFunctions_ObjectFlow1602->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow1602);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1602->setName("ObjectFlow1602");
			fUML_Tests_TestIntegerFunctions_ObjectFlow1602->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow1602->setSource(fUML_Tests_TestIntegerFunctions_Fork_3);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1602->setTarget(fUML_Tests_TestIntegerFunctions_Call_Div_Div_x);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow1602);
			// ObjectFlow ObjectFlow1678 from result to Param(MinusResult)
			fUML_Tests_TestIntegerFunctions_ObjectFlow1678->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow1678);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1678->setName("ObjectFlow1678");
			fUML_Tests_TestIntegerFunctions_ObjectFlow1678->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow1678->setSource(fUML_Tests_TestIntegerFunctions_Call_Minus_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1678->setTarget(fUML_Tests_TestIntegerFunctions_Param_MinusResult);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow1678);
			// ObjectFlow ObjectFlow1604 from Fork(2) to Max.y
			fUML_Tests_TestIntegerFunctions_ObjectFlow1604->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow1604);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1604->setName("ObjectFlow1604");
			fUML_Tests_TestIntegerFunctions_ObjectFlow1604->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow1604->setSource(fUML_Tests_TestIntegerFunctions_Fork_2);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1604->setTarget(fUML_Tests_TestIntegerFunctions_Call_Max_Max_y);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow1604);
			// ControlFlow ControlFlow1606 from Call(Neg) to Call(Plus)
			fUML_Tests_TestIntegerFunctions_ControlFlow1606->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ControlFlow1606);
			fUML_Tests_TestIntegerFunctions_ControlFlow1606->setName("ControlFlow1606");
			fUML_Tests_TestIntegerFunctions_ControlFlow1606->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ControlFlow1606->setSource(fUML_Tests_TestIntegerFunctions_Call_Neg);
			fUML_Tests_TestIntegerFunctions_ControlFlow1606->setTarget(fUML_Tests_TestIntegerFunctions_Call_Plus);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ControlFlow1606);
			// ControlFlow ControlFlow1608 from Call(Times) to Call(Div)
			fUML_Tests_TestIntegerFunctions_ControlFlow1608->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ControlFlow1608);
			fUML_Tests_TestIntegerFunctions_ControlFlow1608->setName("ControlFlow1608");
			fUML_Tests_TestIntegerFunctions_ControlFlow1608->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ControlFlow1608->setSource(fUML_Tests_TestIntegerFunctions_Call_Times);
			fUML_Tests_TestIntegerFunctions_ControlFlow1608->setTarget(fUML_Tests_TestIntegerFunctions_Call_Div);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ControlFlow1608);
			// ObjectFlow ObjectFlow1684 from Value(2).result to Fork(2)
			fUML_Tests_TestIntegerFunctions_ObjectFlow1684->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow1684);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1684->setName("ObjectFlow1684");
			fUML_Tests_TestIntegerFunctions_ObjectFlow1684->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow1684->setSource(fUML_Tests_TestIntegerFunctions_Value_2_Value_2_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1684->setTarget(fUML_Tests_TestIntegerFunctions_Fork_2);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow1684);
			// ObjectFlow ObjectFlow1610 from Fork(2) to Div.y
			fUML_Tests_TestIntegerFunctions_ObjectFlow1610->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow1610);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1610->setName("ObjectFlow1610");
			fUML_Tests_TestIntegerFunctions_ObjectFlow1610->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow1610->setSource(fUML_Tests_TestIntegerFunctions_Fork_2);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1610->setTarget(fUML_Tests_TestIntegerFunctions_Call_Div_Div_y);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow1610);
			// ObjectFlow ObjectFlow1612 from Max.result to Param(MaxResult)
			fUML_Tests_TestIntegerFunctions_ObjectFlow1612->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow1612);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1612->setName("ObjectFlow1612");
			fUML_Tests_TestIntegerFunctions_ObjectFlow1612->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow1612->setSource(fUML_Tests_TestIntegerFunctions_Call_Max_Max_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1612->setTarget(fUML_Tests_TestIntegerFunctions_Param_MaxResult);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow1612);
			// ControlFlow ControlFlow1614 from Call(Min) to Call(Abs)
			fUML_Tests_TestIntegerFunctions_ControlFlow1614->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ControlFlow1614);
			fUML_Tests_TestIntegerFunctions_ControlFlow1614->setName("ControlFlow1614");
			fUML_Tests_TestIntegerFunctions_ControlFlow1614->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ControlFlow1614->setSource(fUML_Tests_TestIntegerFunctions_Call_Min);
			fUML_Tests_TestIntegerFunctions_ControlFlow1614->setTarget(fUML_Tests_TestIntegerFunctions_Call_Abs);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ControlFlow1614);
			// ControlFlow ControlFlow1686 from Call(Minus) to Call(Times)
			fUML_Tests_TestIntegerFunctions_ControlFlow1686->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ControlFlow1686);
			fUML_Tests_TestIntegerFunctions_ControlFlow1686->setName("ControlFlow1686");
			fUML_Tests_TestIntegerFunctions_ControlFlow1686->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ControlFlow1686->setSource(fUML_Tests_TestIntegerFunctions_Call_Minus);
			fUML_Tests_TestIntegerFunctions_ControlFlow1686->setTarget(fUML_Tests_TestIntegerFunctions_Call_Times);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ControlFlow1686);
			// ControlFlow ControlFlow1688 from Call(Plus) to Call(Minus)
			fUML_Tests_TestIntegerFunctions_ControlFlow1688->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ControlFlow1688);
			fUML_Tests_TestIntegerFunctions_ControlFlow1688->setName("ControlFlow1688");
			fUML_Tests_TestIntegerFunctions_ControlFlow1688->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ControlFlow1688->setSource(fUML_Tests_TestIntegerFunctions_Call_Plus);
			fUML_Tests_TestIntegerFunctions_ControlFlow1688->setTarget(fUML_Tests_TestIntegerFunctions_Call_Minus);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ControlFlow1688);
			// ObjectFlow ObjectFlow1620 from Neg.result to Param(NegResult)
			fUML_Tests_TestIntegerFunctions_ObjectFlow1620->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow1620);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1620->setName("ObjectFlow1620");
			fUML_Tests_TestIntegerFunctions_ObjectFlow1620->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow1620->setSource(fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1620->setTarget(fUML_Tests_TestIntegerFunctions_Param_NegResult);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow1620);
			// ObjectFlow ObjectFlow1690 from Fork(2) to y
			fUML_Tests_TestIntegerFunctions_ObjectFlow1690->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow1690);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1690->setName("ObjectFlow1690");
			fUML_Tests_TestIntegerFunctions_ObjectFlow1690->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow1690->setSource(fUML_Tests_TestIntegerFunctions_Fork_2);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1690->setTarget(fUML_Tests_TestIntegerFunctions_Call_Minus_y);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow1690);
			// ObjectFlow ObjectFlow1622 from Fork(3) to Min.x
			fUML_Tests_TestIntegerFunctions_ObjectFlow1622->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow1622);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1622->setName("ObjectFlow1622");
			fUML_Tests_TestIntegerFunctions_ObjectFlow1622->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow1622->setSource(fUML_Tests_TestIntegerFunctions_Fork_3);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1622->setTarget(fUML_Tests_TestIntegerFunctions_Call_Min_Min_x);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow1622);
			// ObjectFlow ObjectFlow1698 from Plus.result to Param(PlusResult)
			fUML_Tests_TestIntegerFunctions_ObjectFlow1698->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow1698);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1698->setName("ObjectFlow1698");
			fUML_Tests_TestIntegerFunctions_ObjectFlow1698->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow1698->setSource(fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1698->setTarget(fUML_Tests_TestIntegerFunctions_Param_PlusResult);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow1698);
			// ObjectFlow ObjectFlow1624 from result to Param(DivResult)
			fUML_Tests_TestIntegerFunctions_ObjectFlow1624->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow1624);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1624->setName("ObjectFlow1624");
			fUML_Tests_TestIntegerFunctions_ObjectFlow1624->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow1624->setSource(fUML_Tests_TestIntegerFunctions_Call_Div_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1624->setTarget(fUML_Tests_TestIntegerFunctions_Param_DivResult);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow1624);
			// ObjectFlow ObjectFlow1700 from Fork(3) to Neg.x
			fUML_Tests_TestIntegerFunctions_ObjectFlow1700->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow1700);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1700->setName("ObjectFlow1700");
			fUML_Tests_TestIntegerFunctions_ObjectFlow1700->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow1700->setSource(fUML_Tests_TestIntegerFunctions_Fork_3);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1700->setTarget(fUML_Tests_TestIntegerFunctions_Call_Neg_Neg_x);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow1700);
			// ObjectFlow ObjectFlow1702 from Fork(3) to x
			fUML_Tests_TestIntegerFunctions_ObjectFlow1702->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow1702);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1702->setName("ObjectFlow1702");
			fUML_Tests_TestIntegerFunctions_ObjectFlow1702->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow1702->setSource(fUML_Tests_TestIntegerFunctions_Fork_3);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1702->setTarget(fUML_Tests_TestIntegerFunctions_Call_Minus_x);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow1702);
			// ObjectFlow ObjectFlow1639 from Abs.result to Param(AbsResult)
			fUML_Tests_TestIntegerFunctions_ObjectFlow1639->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow1639);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1639->setName("ObjectFlow1639");
			fUML_Tests_TestIntegerFunctions_ObjectFlow1639->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow1639->setSource(fUML_Tests_TestIntegerFunctions_Call_Abs_Abs_result);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1639->setTarget(fUML_Tests_TestIntegerFunctions_Param_AbsResult);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow1639);
			// ControlFlow ControlFlow1704 from Call(Mod) to Call(Max)
			fUML_Tests_TestIntegerFunctions_ControlFlow1704->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ControlFlow1704);
			fUML_Tests_TestIntegerFunctions_ControlFlow1704->setName("ControlFlow1704");
			fUML_Tests_TestIntegerFunctions_ControlFlow1704->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ControlFlow1704->setSource(fUML_Tests_TestIntegerFunctions_Call_Mod);
			fUML_Tests_TestIntegerFunctions_ControlFlow1704->setTarget(fUML_Tests_TestIntegerFunctions_Call_Max);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ControlFlow1704);
			// ObjectFlow ObjectFlow1641 from Fork(2) to Plus.y
			fUML_Tests_TestIntegerFunctions_ObjectFlow1641->setThisActivityEdgePtr(fUML_Tests_TestIntegerFunctions_ObjectFlow1641);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1641->setName("ObjectFlow1641");
			fUML_Tests_TestIntegerFunctions_ObjectFlow1641->setVisibility(VisibilityKind::public_);
			
			fUML_Tests_TestIntegerFunctions_ObjectFlow1641->setSource(fUML_Tests_TestIntegerFunctions_Fork_2);
			fUML_Tests_TestIntegerFunctions_ObjectFlow1641->setTarget(fUML_Tests_TestIntegerFunctions_Call_Plus_Plus_y);
		fUML_Tests_TestIntegerFunctions->addEdge(fUML_Tests_TestIntegerFunctions_ObjectFlow1641);
	fUML_Tests->addPackagedElement(fUML_Tests_TestIntegerFunctions);
}
